  1674 instructions before optimizations.
    79 instructions eliminated by Temp Variables Elimination (2 iterations).
   122 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:10:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    62 instructions eliminated by Jump Optimization (5 iterations).
    62 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   390 instructions eliminated by Data Flow Optimization (3 passes, 30 iterations).
    18 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     6 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (10 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    14 instructions updated by JumpThreading.
    43 instructions eliminated by Unreachable Code Elimination (2 iterations).
   912 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 11):
    Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500
    Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   144921.1, efficiency 144921.094
    Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134121.1, efficiency 134121.094
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100058.6, efficiency 100058.594
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68125.0, efficiency  68125.000
    Replicate loop condition at CoreBuilder.mnd:279:5            size    +2, benefit    10800.0, efficiency   5400.000
  * Unroll iteration loop at CoreBuilder.mnd:256:5               size   -11, benefit     9936.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 20):
    Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   144921.1, efficiency 144921.094 (+1 instructions)
    Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134121.1, efficiency 134121.094
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100058.6, efficiency 100058.594
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68125.0, efficiency  68125.000
    Replicate loop condition at CoreBuilder.mnd:279:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 19):
    Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134121.1, efficiency 134121.094 (+1 instructions)
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100058.6, efficiency 100058.594
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68125.0, efficiency  68125.000
    Replicate loop condition at CoreBuilder.mnd:279:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 18):
    Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100058.6, efficiency 100058.594 (+1 instructions)
    Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68125.0, efficiency  68125.000
    Replicate loop condition at CoreBuilder.mnd:279:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 17):
    Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68125.0, efficiency  68125.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:279:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 16):
    Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at CoreBuilder.mnd:279:5            size    +2, benefit    10800.0, efficiency   5400.000 (+2 instructions)

Pass 1: speed optimization selection (cost limit 14):
  * Replicate loop condition at CoreBuilder.mnd:500:9            size    +1, benefit       12.5, efficiency     12.500 (+1 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-84 instructions):
 
   161 setaddr :buildBlock*retaddr *label52 (h:*label52)
   162 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
   163 label *label52
-    * set *tmp95 :buildBlock*retval
   164 jump *label47 always
   165 label *label49
   166 multijump *tmp96 0 0 (m:marker2)
   167 multilabel *label51 (m:marker2)
   168 label *label50
-    * set *tmp95 null
   169 label *label47
   170 set :buildBlockFromCfg.3:block @combustion-generator
   171 set :buildBlockFromCfg.3:offsetX 0
 
   285 set .ERROR :error:error
   286 stop
   287 label *label71
-    * set *tmp121 null
   288 jump *label70 always
   289 label *label69
-    * set *tmp121 null
   290 label *label70
   291 write @pneumatic-drill .display ".nextBlock"
   292 set :buildBlockAt:block @pneumatic-drill
 
   425 setaddr :buildBlock*retaddr *label90 (h:*label90)
   426 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   427 label *label90
-    * set *tmp130 :buildBlock*retval
   428 jump *label85 always
   429 label *label87
   430 multijump *tmp131 0 0 (m:marker7)
   431 multilabel *label89 (m:marker7)
   432 label *label88
-    * set *tmp130 null
   433 label *label85
   434 set :buildBlockFromCfg.8:block @unloader
   435 set :buildBlockFromCfg.8:offsetX -2
 
   503 setaddr :buildBlock*retaddr *label102 (h:*label102)
   504 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   505 label *label102
-    * set *tmp138 :buildBlock*retval
   506 jump *label97 always
   507 label *label99
   508 multijump *tmp139 0 0 (m:marker9)
   509 multilabel *label101 (m:marker9)
   510 label *label100
-    * set *tmp138 null
   511 label *label97
   512 set :buildBlockFromCfg.10:block @air-factory
   513 set :buildBlockFromCfg.10:offsetX -4
 
   559 write 0 .controller ".siliconReserve"
   560 write :buildUnits:unit .controller ".unitToProduce"
   561 label *label109
-    * set *tmp146 .phase
   562 op add .phase .phase 1
   563 write 85 .controller ".pressTarget"
   564 write 150 .controller ".smelterTarget"
 
   575 setaddr :findFreeUnit*retaddr *label115 (h:*label115)
   576 call *label15 *invalid :findFreeUnit*retval (m:*label115) (h:*label115)
   577 label *label115
-    * set *tmp150 :findFreeUnit*retval
   578 write .coreX .oreLocator ":layoutThoriumDrill:x"
   579 write .coreY .oreLocator ":layoutThoriumDrill:y"
   580 write @unit .oreLocator ":layoutThoriumDrill:unit"
 
   590 wait 1e-15
   591 read *tmp157 .flareController ":start*finished"
   592 jump *label116 equal *tmp157 false
-    * set *tmp149 null
   593 jump *label114 always
   594 label *label113
-    * set *tmp149 null
   595 label *label114
   596 setaddr :supplyBase*retaddr *label117 (h:*label117)
   597 call *label21 *invalid :supplyBase*retval (m:*label117) (h:*label117)
 
   600 op lessThan *tmp159 *tmp158 300
   601 jump *label118 equal *tmp159 false
   602 jump *label112 always
-    * set *tmp160 null
   603 jump *label119 always
   604 label *label118
-    * set *tmp160 null
   605 label *label119
   606 label *label111
   607 read *tmp34 .controller ".monos"
 
   647 setaddr :buildBlock*retaddr *label126 (h:*label126)
   648 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   649 label *label126
-    * set *tmp165 :buildBlock*retval
   650 jump *label121 always
   651 label *label123
   652 multijump *tmp166 0 0 (m:marker11)
   653 multilabel *label125 (m:marker11)
   654 label *label124
-    * set *tmp165 null
   655 label *label121
   656 set :buildBlockFromCfg.12:block @kiln
   657 set :buildBlockFromCfg.12:offsetX 3.5
 
   725 setaddr :buildBlock*retaddr *label138 (h:*label138)
   726 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   727 label *label138
-    * set *tmp173 :buildBlock*retval
   728 jump *label133 always
   729 label *label135
   730 multijump *tmp174 0 0 (m:marker13)
   731 multilabel *label137 (m:marker13)
   732 label *label136
-    * set *tmp173 null
   733 label *label133
   734 set :buildBlockFromCfg.14:block @water-extractor
   735 set :buildBlockFromCfg.14:offsetX -3.5
 
   762 setaddr :buildBlock*retaddr *label144 (h:*label144)
   763 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   764 label *label144
-    * set *tmp177 :buildBlock*retval
   765 jump *label139 always
   766 label *label141
   767 multijump *tmp178 0 0 (m:marker14)
   768 multilabel *label143 (m:marker14)
   769 label *label142
-    * set *tmp177 null
   770 label *label139
   771 set :buildBlockFromCfg.15:block @steam-generator
   772 set :buildBlockFromCfg.15:offsetX -3.5
 
   829 setaddr :findFreeUnit*retaddr *label157 (h:*label157)
   830 call *label15 *invalid :findFreeUnit*retval (m:*label157) (h:*label157)
   831 label *label157
-    * set *tmp187 :findFreeUnit*retval
   832 write .coreX .oreLocator ":layoutThoriumDrill:x"
   833 write .coreY .oreLocator ":layoutThoriumDrill:y"
   834 write @unit .oreLocator ":layoutThoriumDrill:unit"
 
   845 op equal *tmp193 *tmp192 false
   846 jump *label158 notEqual *tmp193 false
   847 label *label160
-    * set *tmp185 null
   848 jump *label152 always
   849 label *label151
-    * set *tmp185 null
   850 label *label152
   851 set :meetTarget:block @laser-drill
   852 set :meetTarget:copper 35
 
   871 set .ERROR :error.1:error
   872 stop
   873 label *label168
-    * set *tmp197 null
   874 jump *label167 always
   875 label *label166
-    * set *tmp197 null
   876 label *label167
   877 set :buildBlockAt:block @laser-drill
   878 read *tmp64 .oreLocator ".drillX"
 
   891 op lessThan *tmp199 *tmp66 0
   892 jump *label170 equal *tmp199 false
   893 jump *label162 always
-    * set *tmp200 null
   894 jump *label171 always
   895 label *label170
-    * set *tmp200 null
   896 label *label171
   897 set :meetTarget:block @water-extractor
   898 set :meetTarget:copper 30
 
   916 setaddr :buildBlockAt*retaddr *label174 (h:*label174)
   917 call *label26 *invalid :buildBlockAt*retval (m:*label174) (h:*label174)
   918 label *label174
-    * set *tmp201 :buildBlockAt*retval
   919 read *tmp68 .oreLocator ".water2X"
   920 op lessThan *tmp202 *tmp68 0
   921 jump *label175 equal *tmp202 false
   922 jump *label162 always
-    * set *tmp203 null
   923 jump *label176 always
   924 label *label175
-    * set *tmp203 null
   925 label *label176
   926 set :meetTarget:block @water-extractor
   927 set :meetTarget:copper 30
 
   945 setaddr :buildBlockAt*retaddr *label179 (h:*label179)
   946 call *label26 *invalid :buildBlockAt*retval (m:*label179) (h:*label179)
   947 label *label179
-    * set *tmp204 :buildBlockAt*retval
   948 set :meetTarget:block @water-extractor
   949 set :meetTarget:copper 30
   950 set :meetTarget:lead 30
 
   991 setaddr :buildBlockAt*retaddr *label185 (h:*label185)
   992 call *label26 *invalid :buildBlockAt*retval (m:*label185) (h:*label185)
   993 label *label185
-    * set *tmp206 :buildBlockAt*retval
   994 set :meetTarget:block @solar-panel
   995 set :meetTarget:copper 0
   996 set :meetTarget:lead 10
 
  1013 setaddr :buildBlockAt*retaddr *label188 (h:*label188)
  1014 call *label26 *invalid :buildBlockAt*retval (m:*label188) (h:*label188)
  1015 label *label188
-    * set *tmp207 :buildBlockAt*retval
  1016 write .thoriumDrill .flareController ":addThoriumDrill:drill"
  1017 write .thoriumGenerator .flareController ":addThoriumDrill:generator"
  1018 write false .flareController ":addThoriumDrill*finished"
 
  1053 setaddr :buildBlock*retaddr *label195 (h:*label195)
  1054 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
  1055 label *label195
-    * set *tmp211 :buildBlock*retval
  1056 jump *label190 always
  1057 label *label192
  1058 multijump *tmp212 0 0 (m:marker16)
  1059 multilabel *label194 (m:marker16)
  1060 label *label193
-    * set *tmp211 null
  1061 label *label190
  1062 write 0 .display ".totalTargets"
  1063 write null .display ".nextBlock"
 
  1123 op notEqual *tmp223 *tmp222 null
  1124 jump *label218 equal *tmp223 false
  1125 ucontrol itemDrop @air 1000
-    * set *tmp224 null
  1126 jump *label219 always
  1127 label *label218
-    * set *tmp224 null
  1128 label *label219
  1129 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1130 label *label216
 
  1170 op greaterThan *tmp236 *tmp234 *tmp235
  1171 jump *label227 notEqual *tmp236 false
  1172 label *label229
-    * set *tmp231 null
  1173 jump *label225 always
  1174 label *label224
  1175 label *label230
 
  1180 label *label231
  1181 jump *label230 always
  1182 label *label232
-    * set *tmp231 null
  1183 label *label225
  1184 set :transportStatus:target 0
  1185 set :transportStatus:item null
 
  1197 set .ERROR :error.3:error
  1198 stop
  1199 label *label237
-    * set *tmp242 null
  1200 jump *label236 always
  1201 label *label235
-    * set *tmp242 null
  1202 label *label236
  1203 label *label234
  1204 return :locateOre*retaddr
 
  1234 jump *label245 always
  1235 label *label247
  1236 label *label244
-    * set *tmp246 null
  1237 jump *label243 always
  1238 label *label242
-    * set *tmp246 null
  1239 label *label243
  1240 set :status3.3:text "Mining..."
  1241 write :status3.3:text .display ".status3"
 
  1253 op land *tmp254 *tmp252 *tmp253
  1254 jump *label253 equal *tmp254 false
  1255 jump *label252 always
-    * set *tmp255 null
  1256 jump *label254 always
  1257 label *label253
-    * set *tmp255 null
  1258 label *label254
  1259 ucontrol mine :mineOre:x :mineOre:y
  1260 op mul :second.1:result @second TIME_COMPRESS
 
  1263 op greaterThan *tmp257 *tmp256 :mineOre:stop
  1264 jump *label256 equal *tmp257 false
  1265 jump *label252 always
-    * set *tmp258 null
  1266 jump *label257 always
  1267 label *label256
-    * set *tmp258 null
  1268 label *label257
  1269 label *label251
  1270 sensor *tmp259 @unit @totalItems
 
  1337 op land *tmp270 *tmp268 *tmp269
  1338 jump *label273 equal *tmp270 false
  1339 ucontrol itemDrop @air 1000
-    * set *tmp271 null
  1340 jump *label274 always
  1341 label *label273
-    * set *tmp271 null
  1342 label *label274
  1343 label *label271
  1344 sensor *tmp272 @unit :fetchBlock:item
 
  1361 jump *label277 equal *tmp276 false
  1362 set :findFreeUnit*retval null
  1363 jump *label276 always
-    * set *tmp277 null
  1364 jump *label278 always
  1365 label *label277
-    * set *tmp277 null
  1366 label *label278
  1367 set :findFreeUnit:first_unit @unit
  1368 label *label279
 
  1372 ucontrol flag :findFreeUnit:initial_flag
  1373 set :findFreeUnit*retval @unit
  1374 jump *label276 always
-    * set *tmp280 null
  1375 jump *label283 always
  1376 label *label282
  1377 sensor *tmp281 :findFreeUnit:first_unit @dead
 
  1384 label *label284
  1385 set *tmp283 null
  1386 label *label285
-    * set *tmp280 *tmp283
  1387 label *label283
  1388 ubind :findFreeUnit:unit_type
  1389 label *label280
 
  1431 setaddr :mineOre*retaddr *label298 (h:*label298)
  1432 call *label11 *invalid :mineOre*retval (m:*label298) (h:*label298)
  1433 label *label298
-    * set *tmp298 null
  1434 jump *label297 always
  1435 label *label296
-    * set *tmp298 null
  1436 label *label297
  1437 label *label294
  1438 set :supplyBase0:supplied true
 
  1441 label *label291
  1442 set *tmp293 null
  1443 label *label292
-    * set *tmp290 *tmp293
  1444 jump *label290 always
  1445 label *label289
-    * set *tmp290 null
  1446 label *label290
  1447 sensor *tmp299 .core @silicon
  1448 op lessThan *tmp300 *tmp299 .targetSilicon
 
  1475 setaddr :mineOre*retaddr *label308 (h:*label308)
  1476 call *label11 *invalid :mineOre*retval (m:*label308) (h:*label308)
  1477 label *label308
-    * set *tmp309 null
  1478 jump *label307 always
  1479 label *label306
-    * set *tmp309 null
  1480 label *label307
  1481 label *label304
  1482 set :supplyBase0:supplied true
 
  1511 setaddr :mineOre*retaddr *label316 (h:*label316)
  1512 call *label11 *invalid :mineOre*retval (m:*label316) (h:*label316)
  1513 label *label316
-    * set *tmp317 null
  1514 jump *label315 always
  1515 label *label314
-    * set *tmp317 null
  1516 label *label315
  1517 label *label312
  1518 set :supplyBase0:supplied true
 
  1523 label *label310
  1524 set *tmp304 *tmp312
  1525 label *label302
-    * set *tmp301 *tmp304
  1526 jump *label300 always
  1527 label *label299
-    * set *tmp301 null
  1528 label *label300
  1529 sensor *tmp318 .battery @totalPower
  1530 op lessThan *tmp319 *tmp318 .powerTarget
 
  1557 setaddr :mineOre*retaddr *label326 (h:*label326)
  1558 call *label11 *invalid :mineOre*retval (m:*label326) (h:*label326)
  1559 label *label326
-    * set *tmp328 null
  1560 jump *label325 always
  1561 label *label324
-    * set *tmp328 null
  1562 label *label325
  1563 label *label322
  1564 set :supplyBase0:supplied true
 
  1572 label *label317
  1573 set *tmp320 null
  1574 label *label318
-    * set *tmp287 *tmp320
  1575 jump *label288 always
  1576 label *label287
-    * set *tmp287 null
  1577 label *label288
  1578 sensor *tmp329 .core @titanium
  1579 op lessThan *tmp330 *tmp329 .targetTitanium
 
  1704 label *label331
  1705 set *tmp339 null
  1706 label *label332
-    * set *tmp337 *tmp339
  1707 jump *label330 always
  1708 label *label329
  1709 set :status1.10:text "Goal 11: Fetching titanium"
 
  1714 setaddr :fetchBlock*retaddr *label360 (h:*label360)
  1715 call *label13 *invalid :fetchBlock*retval (m:*label360) (h:*label360)
  1716 label *label360
-    * set *tmp337 null
  1717 label *label330
  1718 label *label286
  1719 return :supplyBase0*retaddr
 
  1736 setaddr :supplyBase1*retaddr *label367 (h:*label367)
  1737 call *label20 *invalid :supplyBase1*retval (m:*label367) (h:*label367)
  1738 label *label367
-    * set *tmp365 null
  1739 jump *label366 always
  1740 label *label365
  1741 setaddr :supplyBase0*retaddr *label368 (h:*label368)
  1742 call *label19 *invalid :supplyBase0*retval (m:*label368) (h:*label368)
  1743 label *label368
-    * set *tmp365 null
  1744 label *label366
  1745 label *label364
  1746 return :supplyBase*retaddr
 
  1791 label *label372
  1792 set *tmp371 null
  1793 label *label373
-    * set *tmp368 *tmp371
  1794 jump *label371 always
  1795 label *label370
-    * set *tmp368 null
  1796 label *label371
  1797 set :targetMet*retval false
  1798 jump *label369 always
 
  1915 jump *label406 equal *tmp408 false
  1916 set :buildBlockAt*retval :buildBlockAt:building
  1917 jump *label401 always
-    * set *tmp409 null
  1918 jump *label407 always
  1919 label *label406
-    * set *tmp409 null
  1920 label *label407
  1921 jump *label408 equal :buildBlockAt:skipError false
  1922 set :buildBlockAt*retval null
  1923 jump *label401 always
-    * set *tmp410 null
  1924 jump *label409 always
  1925 label *label408
-    * set *tmp410 null
  1926 label *label409
  1927 set :error.4:error "Cannot build at ("
  1928 set .ERROR :error.4:error
  1929 stop
  1930 label *label410
-    * set *tmp407 null
  1931 jump *label405 always
  1932 label *label404
-    * set *tmp407 null
  1933 label *label405
  1934 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1935 wait 0.25
 
  1940 jump *label414 equal *tmp413 false
  1941 set :buildBlockAt*retval null
  1942 jump *label401 always
-    * set *tmp414 null
  1943 jump *label415 always
  1944 label *label414
-    * set *tmp414 null
  1945 label *label415
  1946 label *label412
  1947 op notEqual *tmp415 :buildBlockAt:type :buildBlockAt:block
 
  1990 op notEqual *tmp416 :findUnits:firstUnit null
  1991 jump *label421 equal *tmp416 false
  1992 label *label423
-    * set *tmp418 :findUnits:count
  1993 op add :findUnits:count :findUnits:count 1
  1994 ubind :findUnits:type
  1995 label *label424
  1996 op notEqual *tmp419 @unit :findUnits:firstUnit
  1997 jump *label423 notEqual *tmp419 false
  1998 label *label425
-    * set *tmp417 null
  1999 jump *label422 always
  2000 label *label421
-    * set *tmp417 null
  2001 label *label422
  2002 set :findUnits*retval :findUnits:count
  2003 label *label420

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-16 instructions):
 
  1359 ubind :findFreeUnit:unit_type
  1360 op equal *tmp276 @unit null
  1361 jump *label277 equal *tmp276 false
-    * set :findFreeUnit*retval null
  1362 jump *label276 always
  1363 jump *label278 always
  1364 label *label277
 
  1369 op equal *tmp279 *tmp278 0
  1370 jump *label282 equal *tmp279 false
  1371 ucontrol flag :findFreeUnit:initial_flag
-    * set :findFreeUnit*retval @unit
  1372 jump *label276 always
  1373 jump *label283 always
  1374 label *label282
 
  1377 jump *label284 equal *tmp282 false
  1378 set *tmp284 @unit
  1379 set :findFreeUnit:first_unit *tmp284
-    * set *tmp283 :findFreeUnit:first_unit
  1380 jump *label285 always
  1381 label *label284
-    * set *tmp283 null
  1382 label *label285
  1383 label *label283
  1384 ubind :findFreeUnit:unit_type
 
  1386 op notEqual *tmp285 :findFreeUnit:first_unit @unit
  1387 jump *label279 notEqual *tmp285 false
  1388 label *label281
-    * set :findFreeUnit*retval null
  1389 jump *label276 always
-    * set :findFreeUnit*retval null
  1390 label *label276
  1391 return :findFreeUnit*retaddr
  1392 end
 
  1430 label *label297
  1431 label *label294
  1432 set :supplyBase0:supplied true
-    * set *tmp293 :supplyBase0:supplied
  1433 jump *label292 always
  1434 label *label291
-    * set *tmp293 null
  1435 label *label292
  1436 jump *label290 always
  1437 label *label289
 
  1472 label *label307
  1473 label *label304
  1474 set :supplyBase0:supplied true
-    * set *tmp304 :supplyBase0:supplied
  1475 jump *label302 always
  1476 label *label301
  1477 sensor *tmp310 .smelter @sand
 
  1512 label *label309
  1513 set *tmp312 null
  1514 label *label310
-    * set *tmp304 *tmp312
  1515 label *label302
  1516 jump *label300 always
  1517 label *label299
 
  1557 label *label319
  1558 set *tmp323 null
  1559 label *label320
-    * set *tmp320 *tmp323
  1560 jump *label318 always
  1561 label *label317
-    * set *tmp320 null
  1562 label *label318
  1563 jump *label288 always
  1564 label *label287
 
  1687 label *label338
  1688 set *tmp343 *tmp346
  1689 label *label334
-    * set *tmp339 *tmp343
  1690 jump *label332 always
  1691 label *label331
-    * set *tmp339 null
  1692 label *label332
  1693 jump *label330 always
  1694 label *label329
 
  1772 label *label374
  1773 set *tmp374 null
  1774 label *label375
-    * set *tmp371 *tmp374
  1775 jump *label373 always
  1776 label *label372
-    * set *tmp371 null
  1777 label *label373
  1778 jump *label371 always
  1779 label *label370

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1507 label *label315
  1508 label *label312
  1509 set :supplyBase0:supplied true
-    * set *tmp312 :supplyBase0:supplied
  1510 jump *label310 always
  1511 label *label309
-    * set *tmp312 null
  1512 label *label310
  1513 label *label302
  1514 jump *label300 always
 
  1550 label *label325
  1551 label *label322
  1552 set :supplyBase0:supplied true
-    * set *tmp323 :supplyBase0:supplied
  1553 jump *label320 always
  1554 label *label319
-    * set *tmp323 null
  1555 label *label320
  1556 jump *label318 always
  1557 label *label317
 
  1587 setaddr :mineOre.1*retaddr *label336 (h:*label336)
  1588 call *label12 *invalid :mineOre.1*retval (m:*label336) (h:*label336)
  1589 label *label336
-    * set *tmp343 null
  1590 jump *label334 always
  1591 label *label333
  1592 sensor *tmp344 .core @silicon
 
  1680 label *label344
  1681 set *tmp346 *tmp353
  1682 label *label338
-    * set *tmp343 *tmp346
  1683 label *label334
  1684 jump *label332 always
  1685 label *label331
 
  1761 label *label376
  1762 set *tmp377 null
  1763 label *label377
-    * set *tmp374 *tmp377
  1764 jump *label375 always
  1765 label *label374
-    * set *tmp374 null
  1766 label *label375
  1767 jump *label373 always
  1768 label *label372

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1611 setaddr :mineOre.1*retaddr *label342 (h:*label342)
  1612 call *label12 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
  1613 label *label342
-    * set *tmp346 null
  1614 jump *label338 always
  1615 label *label337
  1616 sensor *tmp351 .core @copper
 
  1677 label *label348
  1678 set *tmp353 *tmp356
  1679 label *label344
-    * set *tmp346 *tmp353
  1680 label *label338
  1681 label *label334
  1682 jump *label332 always
 
  1754 label *label378
  1755 set *tmp380 null
  1756 label *label379
-    * set *tmp377 *tmp380
  1757 jump *label377 always
  1758 label *label376
-    * set *tmp377 null
  1759 label *label377
  1760 jump *label375 always
  1761 label *label374

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1623 setaddr :mineOre.1*retaddr *label346 (h:*label346)
  1624 call *label12 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
  1625 label *label346
-    * set *tmp353 null
  1626 jump *label344 always
  1627 label *label343
  1628 sensor *tmp354 .core @lead
 
  1674 label *label352
  1675 set *tmp356 *tmp359
  1676 label *label348
-    * set *tmp353 *tmp356
  1677 label *label344
  1678 label *label338
  1679 label *label334
 
  1747 label *label380
  1748 set *tmp383 null
  1749 label *label381
-    * set *tmp380 *tmp383
  1750 jump *label379 always
  1751 label *label378
-    * set *tmp380 null
  1752 label *label379
  1753 jump *label377 always
  1754 label *label376

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1635 setaddr :mineOre.1*retaddr *label350 (h:*label350)
  1636 call *label12 *invalid :mineOre.1*retval (m:*label350) (h:*label350)
  1637 label *label350
-    * set *tmp356 null
  1638 jump *label348 always
  1639 label *label347
  1640 sensor *tmp357 .core @metaglass
 
  1671 label *label358
  1672 set *tmp359 null
  1673 label *label352
-    * set *tmp356 *tmp359
  1674 label *label348
  1675 label *label344
  1676 label *label338
 
  1740 jump *label380 equal *tmp382 false
  1741 set :targetMet*retval true
  1742 jump *label369 always
-    * set *tmp383 null
  1743 jump *label381 always
  1744 label *label380
-    * set *tmp383 null
  1745 label *label381
  1746 jump *label379 always
  1747 label *label378

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1647 setaddr :mineOre.1*retaddr *label354 (h:*label354)
  1648 call *label12 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
  1649 label *label354
-    * set *tmp359 null
  1650 jump *label352 always
  1651 label *label351
  1652 set :status1.9:text "Goal 10: supplying base"
 
  1668 setaddr :mineOre.1*retaddr *label358 (h:*label358)
  1669 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
  1670 label *label358
-    * set *tmp359 null
  1671 label *label352
  1672 label *label348
  1673 label *label344

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-79 instructions):
 
    18 write 511 bank1 511
    19 label *label29
    20 ubind @poly
-    * set *tmp77 @unit
-    * set .builder *tmp77
-    * ulocate building core false @copper .coreX .coreY *tmp79 *tmp78
-    * set .core *tmp78
+   21 set .builder @unit
+   22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label30
    24 op equal *tmp80 .core null
    25 jump *label29 notEqual *tmp80 false
 
    32 call *label28 *invalid :findUnits*retval (m:*label32) (h:*label32)
    33 label *label32
    34 write :findUnits:count .display ".monos"
-    * set *tmp82 :findUnits*retval
-    * set :monos *tmp82
+   35 set :monos :findUnits*retval
    36 set :findUnits:type @flare
    37 setaddr :findUnits*retaddr *label33 (h:*label33)
    38 call *label28 *invalid :findUnits*retval (m:*label33) (h:*label33)
    39 label *label33
    40 write :findUnits:count .display ".flares"
-    * set *tmp84 :findUnits*retval
-    * set :flares *tmp84
+   41 set :flares :findUnits*retval
    42 set :findUnits:type @poly
    43 setaddr :findUnits*retaddr *label34 (h:*label34)
    44 call *label28 *invalid :findUnits*retval (m:*label34) (h:*label34)
    45 label *label34
    46 write :findUnits:count .display ".polys"
-    * set *tmp86 :findUnits*retval
-    * set :polys *tmp86
+   47 set :polys :findUnits*retval
    48 set :buildBlockFromCfg:block @graphite-press
    49 set :buildBlockFromCfg:offsetX -1.5
    50 set :buildBlockFromCfg:offsetY 2.5
 
    58 set :buildBlockFromCfg:config null
    59 setaddr *tmp88 *label39
    60 label *label36
-    * op add *tmp89 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp89
-    * op add *tmp90 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp90
+   61 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   62 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    63 set :buildBlock:block :buildBlockFromCfg:block
    64 set :buildBlock:x :buildBlockFromCfg:x
    65 set :buildBlock:y :buildBlockFromCfg:y
 
    96 set :buildBlockFromCfg.1:config null
    97 setaddr *tmp92 *label45
    98 label *label42
-    * op add *tmp93 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp93
-    * op add *tmp94 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp94
+   99 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+  100 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
   101 set :buildBlock:block :buildBlockFromCfg.1:block
   102 set :buildBlock:x :buildBlockFromCfg.1:x
   103 set :buildBlock:y :buildBlockFromCfg.1:y
 
   134 set :buildBlockFromCfg.2:config null
   135 setaddr *tmp96 *label51
   136 label *label48
-    * op add *tmp97 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp97
-    * op add *tmp98 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp98
+  137 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  138 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   139 set :buildBlock:block :buildBlockFromCfg.2:block
   140 set :buildBlock:x :buildBlockFromCfg.2:x
   141 set :buildBlock:y :buildBlockFromCfg.2:y
 
   169 set :buildBlockFromCfg.3:config null
   170 setaddr *tmp100 *label57
   171 label *label54
-    * op add *tmp101 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp101
-    * op add *tmp102 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp102
+  172 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  173 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   174 set :buildBlock:block :buildBlockFromCfg.3:block
   175 set :buildBlock:x :buildBlockFromCfg.3:x
   176 set :buildBlock:y :buildBlockFromCfg.3:y
 
   208 set :buildBlockFromCfg.4:config null
   209 setaddr *tmp104 *label63
   210 label *label60
-    * op add *tmp105 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp105
-    * op add *tmp106 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp106
+  211 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  212 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   213 set :buildBlock:block :buildBlockFromCfg.4:block
   214 set :buildBlock:x :buildBlockFromCfg.4:x
   215 set :buildBlock:y :buildBlockFromCfg.4:y
 
   258 wait 1e-15
   259 read *tmp118 .oreLocator ":findDrillLocation*finished"
   260 jump *label68 equal *tmp118 false
-    * read *tmp115 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp115
-    * read *tmp116 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp116
-    * read *tmp119 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp119
+  261 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  262 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  263 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   264 op equal *tmp120 :buildTitaniumDrill:result false
   265 jump *label69 equal *tmp120 false
   266 set :error:error "Cannot locate spot for titanium drill"
 
   299 set :buildBlockFromCfg.5:config null
   300 setaddr *tmp123 *label77
   301 label *label74
-    * op add *tmp124 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp124
-    * op add *tmp125 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp125
+  302 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  303 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   304 set :buildBlock:block :buildBlockFromCfg.5:block
   305 set :buildBlock:x :buildBlockFromCfg.5:x
   306 set :buildBlock:y :buildBlockFromCfg.5:y
 
   337 set :buildBlockFromCfg.6:config processor2
   338 setaddr *tmp127 *label83
   339 label *label80
-    * op add *tmp128 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp128
-    * op add *tmp129 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp129
+  340 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  341 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   342 set :buildBlock:block :buildBlockFromCfg.6:block
   343 set :buildBlock:x :buildBlockFromCfg.6:x
   344 set :buildBlock:y :buildBlockFromCfg.6:y
 
   385 set :buildBlockFromCfg.7:config null
   386 setaddr *tmp131 *label89
   387 label *label86
-    * op add *tmp132 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp132
-    * op add *tmp133 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp133
+  388 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  389 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   390 set :buildBlock:block :buildBlockFromCfg.7:block
   391 set :buildBlock:x :buildBlockFromCfg.7:x
   392 set :buildBlock:y :buildBlockFromCfg.7:y
 
   420 set :buildBlockFromCfg.8:config null
   421 setaddr *tmp135 *label95
   422 label *label92
-    * op add *tmp136 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp136
-    * op add *tmp137 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp137
+  423 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  424 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   425 set :buildBlock:block :buildBlockFromCfg.8:block
   426 set :buildBlock:x :buildBlockFromCfg.8:x
   427 set :buildBlock:y :buildBlockFromCfg.8:y
 
   459 set :buildBlockFromCfg.9:config null
   460 setaddr *tmp139 *label101
   461 label *label98
-    * op add *tmp140 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp140
-    * op add *tmp141 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp141
+  462 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  463 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   464 set :buildBlock:block :buildBlockFromCfg.9:block
   465 set :buildBlock:x :buildBlockFromCfg.9:x
   466 set :buildBlock:y :buildBlockFromCfg.9:y
 
   494 set :buildBlockFromCfg.10:config @mono
   495 setaddr *tmp143 *label107
   496 label *label104
-    * op add *tmp144 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp144
-    * op add *tmp145 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp145
+  497 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  498 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   499 set :buildBlock:block :buildBlockFromCfg.10:block
   500 set :buildBlock:x :buildBlockFromCfg.10:x
   501 set :buildBlock:y :buildBlockFromCfg.10:y
 
   599 set :buildBlockFromCfg.11:config null
   600 setaddr *tmp166 *label125
   601 label *label122
-    * op add *tmp167 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp167
-    * op add *tmp168 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp168
+  602 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  603 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   604 set :buildBlock:block :buildBlockFromCfg.11:block
   605 set :buildBlock:x :buildBlockFromCfg.11:x
   606 set :buildBlock:y :buildBlockFromCfg.11:y
 
   634 set :buildBlockFromCfg.12:config null
   635 setaddr *tmp170 *label131
   636 label *label128
-    * op add *tmp171 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp171
-    * op add *tmp172 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp172
+  637 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  638 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   639 set :buildBlock:block :buildBlockFromCfg.12:block
   640 set :buildBlock:x :buildBlockFromCfg.12:x
   641 set :buildBlock:y :buildBlockFromCfg.12:y
 
   673 set :buildBlockFromCfg.13:config null
   674 setaddr *tmp174 *label137
   675 label *label134
-    * op add *tmp175 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp175
-    * op add *tmp176 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp176
+  676 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  677 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   678 set :buildBlock:block :buildBlockFromCfg.13:block
   679 set :buildBlock:x :buildBlockFromCfg.13:x
   680 set :buildBlock:y :buildBlockFromCfg.13:y
 
   708 set :buildBlockFromCfg.14:config null
   709 setaddr *tmp178 *label143
   710 label *label140
-    * op add *tmp179 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp179
-    * op add *tmp180 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp180
+  711 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  712 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   713 set :buildBlock:block :buildBlockFromCfg.14:block
   714 set :buildBlock:x :buildBlockFromCfg.14:x
   715 set :buildBlock:y :buildBlockFromCfg.14:y
 
   743 set :buildBlockFromCfg.15:config null
   744 setaddr *tmp182 *label149
   745 label *label146
-    * op add *tmp183 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp183
-    * op add *tmp184 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp184
+  746 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  747 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   748 set :buildBlock:block :buildBlockFromCfg.15:block
   749 set :buildBlock:x :buildBlockFromCfg.15:x
   750 set :buildBlock:y :buildBlockFromCfg.15:y
 
   823 wait 1e-15
   824 read *tmp194 .oreLocator ":layoutThoriumDrill*finished"
   825 jump *label165 equal *tmp194 false
-    * read *tmp195 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp195
+  826 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   827 op equal *tmp196 :buildThoriumDrill:result false
   828 jump *label166 equal *tmp196 false
   829 set :error.1:error "Cannot locate spot for thorium drill"
 
   834 label *label166
   835 label *label167
   836 set :buildBlockAt:block @laser-drill
-    * read *tmp64 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp64
-    * read *tmp65 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp65
+  837 read :buildBlockAt:x .oreLocator ".drillX"
+  838 read :buildBlockAt:y .oreLocator ".drillY"
   839 set :buildBlockAt:rotation null
   840 set :buildBlockAt:config 0
   841 set :buildBlockAt:skipError false
   842 setaddr :buildBlockAt*retaddr *label169 (h:*label169)
   843 call *label26 *invalid :buildBlockAt*retval (m:*label169) (h:*label169)
   844 label *label169
-    * set *tmp198 :buildBlockAt*retval
-    * set .thoriumDrill *tmp198
+  845 set .thoriumDrill :buildBlockAt*retval
   846 read *tmp66 .oreLocator ".water1X"
   847 op lessThan *tmp199 *tmp66 0
   848 jump *label170 equal *tmp199 false
 
   864 set :buildBlockAt:block @water-extractor
   865 read *tmp66 .oreLocator ".water1X"
   866 set :buildBlockAt:x *tmp66
-    * read *tmp67 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp67
+  867 read :buildBlockAt:y .oreLocator ".water1Y"
   868 set :buildBlockAt:rotation null
   869 set :buildBlockAt:config 0
   870 set :buildBlockAt:skipError false
 
   892 set :buildBlockAt:block @water-extractor
   893 read *tmp68 .oreLocator ".water2X"
   894 set :buildBlockAt:x *tmp68
-    * read *tmp69 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp69
+  895 read :buildBlockAt:y .oreLocator ".water2Y"
   896 set :buildBlockAt:rotation null
   897 set :buildBlockAt:config 0
   898 set :buildBlockAt:skipError false
 
   911 label *label181
   912 label *label180
   913 set :buildBlockAt:block @steam-generator
-    * read *tmp70 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp70
-    * read *tmp71 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp71
+  914 read :buildBlockAt:x .oreLocator ".generatorX"
+  915 read :buildBlockAt:y .oreLocator ".generatorY"
   916 set :buildBlockAt:rotation null
   917 set :buildBlockAt:config 0
   918 set :buildBlockAt:skipError false
   919 setaddr :buildBlockAt*retaddr *label182 (h:*label182)
   920 call *label26 *invalid :buildBlockAt*retval (m:*label182) (h:*label182)
   921 label *label182
-    * set *tmp205 :buildBlockAt*retval
-    * set .thoriumGenerator *tmp205
+  922 set .thoriumGenerator :buildBlockAt*retval
   923 set :meetTarget:block @power-node
   924 set :meetTarget:copper 2
   925 set :meetTarget:lead 6
 
   932 label *label184
   933 label *label183
   934 set :buildBlockAt:block @power-node
-    * read *tmp72 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp72
-    * read *tmp73 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp73
+  935 read :buildBlockAt:x .oreLocator ".nodeX"
+  936 read :buildBlockAt:y .oreLocator ".nodeY"
   937 set :buildBlockAt:rotation null
   938 set :buildBlockAt:config 0
   939 set :buildBlockAt:skipError false
 
   952 label *label187
   953 label *label186
   954 set :buildBlockAt:block @solar-panel
-    * read *tmp74 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp74
-    * read *tmp75 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp75
+  955 read :buildBlockAt:x .oreLocator ".panelX"
+  956 read :buildBlockAt:y .oreLocator ".panelY"
   957 set :buildBlockAt:rotation null
   958 set :buildBlockAt:config 0
   959 set :buildBlockAt:skipError false
 
   982 set :buildBlockFromCfg.16:config @coal
   983 setaddr *tmp212 *label194
   984 label *label191
-    * op add *tmp213 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp213
-    * op add *tmp214 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp214
+  985 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  986 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   987 set :buildBlock:block :buildBlockFromCfg.16:block
   988 set :buildBlock:x :buildBlockFromCfg.16:x
   989 set :buildBlock:y :buildBlockFromCfg.16:y
 
  1104 setaddr :moveToBlock*retaddr *label226 (h:*label226)
  1105 call *label8 *invalid :moveToBlock*retval (m:*label226) (h:*label226)
  1106 label *label226
-    * sensor *tmp232 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp232
+ 1107 sensor :depositItems:cap :depositItems:block @itemCapacity
  1108 label *label227
  1109 ucontrol itemDrop :depositItems:block 30
  1110 label *label228
 
  1134 return :depositItems*retaddr
  1135 end
  1136 label *label10
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp239 *tmp240
+ 1137 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp239 0
  1138 op equal *tmp241 *tmp239 false
  1139 jump *label235 equal *tmp241 false
  1140 set :error.3:error "Cannot locate ore"
 
  1148 return :locateOre*retaddr
  1149 end
  1150 label *label11
-    * op min *tmp243 :mineOre:amount 30
-    * set :mineOre:amount *tmp243
+ 1151 op min :mineOre:amount :mineOre:amount 30
  1152 set :transportStatus.1:target :mineOre:amount
  1153 set :transportStatus.1:item :mineOre:ore
  1154 write :transportStatus.1:target .display ".transportTarget"
 
  1186 op mul :second:result @second TIME_COMPRESS
  1187 set *tmp249 :second:result
  1188 label *label249
-    * op add *tmp250 *tmp249 10
-    * set :mineOre:stop *tmp250
+ 1189 op add :mineOre:stop *tmp249 10
  1190 label *label250
-    * sensor *tmp251 @unit @firstItem
-    * set :mineOre:item *tmp251
+ 1191 sensor :mineOre:item @unit @firstItem
  1192 op notEqual *tmp252 :mineOre:item null
  1193 op notEqual *tmp253 :mineOre:item :mineOre:ore
  1194 op land *tmp254 *tmp252 *tmp253
 
  1229 write :status2:item .display ".item2"
  1230 write :status2:block .display ".block2"
  1231 label *label260
-    * set *tmp261 :mineOre.1:ore
-    * set :mineOre:ore *tmp261
+ 1232 set :mineOre:ore :mineOre.1:ore
  1233 set :mineOre:amount 30
  1234 set :mineOre:block .core
  1235 setaddr :mineOre*retaddr *label261 (h:*label261)
 
  1239 return :mineOre.1*retaddr
  1240 end
  1241 label *label13
-    * sensor *tmp262 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp262
+ 1242 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1243 set :transportStatus.2:item :fetchBlock:item
  1244 write :transportStatus.2:target .display ".transportTarget"
  1245 write :transportStatus.2:item .display ".transportItem"
 
  1269 label *label266
  1270 label *label270
  1271 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp267 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp267
+ 1272 sensor :fetchBlock:unitItem @unit @firstItem
  1273 op notEqual *tmp268 :fetchBlock:unitItem null
  1274 op notEqual *tmp269 :fetchBlock:unitItem :fetchBlock:item
  1275 op land *tmp270 *tmp268 *tmp269
 
  1313 sensor *tmp281 :findFreeUnit:first_unit @dead
  1314 op equal *tmp282 *tmp281 1
  1315 jump *label284 equal *tmp282 false
-    * set *tmp284 @unit
-    * set :findFreeUnit:first_unit *tmp284
+ 1316 set :findFreeUnit:first_unit @unit
  1317 jump *label285 always
  1318 label *label284
  1319 label *label285
 
  1349 write :status2.2:item .display ".item2"
  1350 write :status2.2:block .display ".block2"
  1351 label *label295
-    * sensor *tmp294 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp294
+ 1352 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1353 sensor *tmp295 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp296 :supplyBlock:blockCapacity *tmp295
-    * set :supplyBlock:missing *tmp296
+ 1354 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp295
  1355 op greaterThan *tmp297 :supplyBlock:missing 0
  1356 jump *label296 equal *tmp297 false
  1357 set :mineOre:ore :supplyBlock:ore
 
  1389 write :status2.3:item .display ".item2"
  1390 write :status2.3:block .display ".block2"
  1391 label *label305
-    * sensor *tmp305 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp305
+ 1392 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1393 sensor *tmp306 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp307 :supplyBlock.1:blockCapacity *tmp306
-    * set :supplyBlock.1:missing *tmp307
+ 1394 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp306
  1395 op greaterThan *tmp308 :supplyBlock.1:missing 0
  1396 jump *label306 equal *tmp308 false
  1397 set :mineOre:ore :supplyBlock.1:ore
 
  1422 write :status2.4:item .display ".item2"
  1423 write :status2.4:block .display ".block2"
  1424 label *label313
-    * sensor *tmp313 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp313
+ 1425 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1426 sensor *tmp314 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp315 :supplyBlock.2:blockCapacity *tmp314
-    * set :supplyBlock.2:missing *tmp315
+ 1427 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp314
  1428 op greaterThan *tmp316 :supplyBlock.2:missing 0
  1429 jump *label314 equal *tmp316 false
  1430 set :mineOre:ore :supplyBlock.2:ore
 
  1463 write :status2.5:item .display ".item2"
  1464 write :status2.5:block .display ".block2"
  1465 label *label323
-    * sensor *tmp324 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp324
+ 1466 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1467 sensor *tmp325 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp326 :supplyBlock.3:blockCapacity *tmp325
-    * set :supplyBlock.3:missing *tmp326
+ 1468 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp325
  1469 op greaterThan *tmp327 :supplyBlock.3:missing 0
  1470 jump *label324 equal *tmp327 false
  1471 set :mineOre:ore :supplyBlock.3:ore
 
  1493 jump *label327 equal *tmp330 false
  1494 sensor *tmp332 .core @titanium
  1495 op sub *tmp333 .targetTitanium *tmp332
-    * op min *tmp334 7 *tmp333
-    * set *tmp331 *tmp334
+ 1496 op min *tmp331 7 *tmp333
  1497 jump *label328 always
  1498 label *label327
  1499 set *tmp331 100
 
  1523 set :status1.5:text "Goal 6: silicon requirement"
  1524 write :status1.5:text .display ".status1"
  1525 label *label339
-    * sensor *tmp347 .core @coal
-    * set :supplyBase0:coal *tmp347
-    * sensor *tmp348 .core @sand
-    * set :supplyBase0:sand *tmp348
+ 1526 sensor :supplyBase0:coal .core @coal
+ 1527 sensor :supplyBase0:sand .core @sand
  1528 op lessThan *tmp349 :supplyBase0:coal :supplyBase0:sand
  1529 jump *label340 equal *tmp349 false
  1530 set *tmp350 @coal
 
  1578 set :status1.9:text "Goal 10: supplying base"
  1579 write :status1.9:text .display ".status1"
  1580 label *label355
-    * sensor *tmp360 .core @coal
-    * set :supplyBase0:coal.1 *tmp360
-    * sensor *tmp361 .core @sand
-    * set :supplyBase0:sand.1 *tmp361
+ 1581 sensor :supplyBase0:coal.1 .core @coal
+ 1582 sensor :supplyBase0:sand.1 .core @sand
  1583 op lessThanEq *tmp362 :supplyBase0:coal.1 :supplyBase0:sand.1
  1584 jump *label356 equal *tmp362 false
  1585 set *tmp363 @coal
 
  1776 return :log*retaddr
  1777 end
  1778 label *label25
-    * sensor *tmp403 :logBlock:block @id
-    * set :log:encodedId *tmp403
+ 1779 sensor :log:encodedId :logBlock:block @id
  1780 setaddr :log*retaddr *label400 (h:*label400)
  1781 call *label24 *invalid :log*retval (m:*label400) (h:*label400)
  1782 label *label400
 
  1792 set :status3.4:text "Building..."
  1793 write :status3.4:text .display ".status3"
  1794 label *label403
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp404 *tmp405
-    * set :buildBlockAt:building *tmp404
+ 1795 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1796 op notEqual *tmp406 :buildBlockAt:building null
  1797 jump *label404 equal *tmp406 false
  1798 op equal *tmp408 :buildBlockAt:type :buildBlockAt:block
 
  1818 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1819 wait 0.25
  1820 label *label411
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp411 *tmp412
-    * set :buildBlockAt:building *tmp411
+ 1821 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1822 op equal *tmp413 :buildBlockAt:building null
  1823 jump *label414 equal *tmp413 false
  1824 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1018 jump *label196 notEqual *tmp216 false
  1019 label *label198
  1020 label *label200
-    * jump *label202 equal true false
  1021 setaddr :supplyBase*retaddr *label203 (h:*label203)
  1022 call *label21 *invalid :supplyBase*retval (m:*label203) (h:*label203)
  1023 label *label203

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-62 instructions):
 
    21 set .builder @unit
    22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label30
-    * op equal *tmp80 .core null
-    * jump *label29 notEqual *tmp80 false
+   24 jump *label29 equal .core null
    25 label *label31
    26 set .display processor1
    27 set .flareController processor3
 
   260 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   261 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   262 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp120 :buildTitaniumDrill:result false
-    * jump *label69 equal *tmp120 false
+  263 jump *label69 notEqual :buildTitaniumDrill:result false
   264 set :error:error "Cannot locate spot for titanium drill"
   265 set .ERROR :error:error
   266 stop
 
   565 call *label21 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   566 label *label117
   567 sensor *tmp158 .battery @totalPower
-    * op lessThan *tmp159 *tmp158 300
-    * jump *label118 equal *tmp159 false
+  568 jump *label118 greaterThanEq *tmp158 300
   569 jump *label112 always
   570 jump *label119 always
   571 label *label118
   572 label *label119
   573 label *label111
   574 read *tmp34 .controller ".monos"
-    * op lessThan *tmp161 *tmp34 3
-    * jump *label110 notEqual *tmp161 false
+  575 jump *label110 lessThan *tmp34 3
   576 label *label112
   577 write .core .flareController ":start:aCore"
   578 write .titaniumDrill .flareController ":start:drill"
 
   771 jump *label151 equal :searchThorium false
   772 label *label153
   773 read *tmp35 .controller ".flares"
-    * op lessThan *tmp186 *tmp35 1
-    * jump *label155 equal *tmp186 false
+  774 jump *label155 greaterThanEq *tmp35 1
   775 setaddr :supplyBase*retaddr *label156 (h:*label156)
   776 call *label21 *invalid :supplyBase*retval (m:*label156) (h:*label156)
   777 label *label156
 
   797 label *label161
   798 label *label159
   799 read *tmp192 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp193 *tmp192 false
-    * jump *label158 notEqual *tmp193 false
+  800 jump *label158 equal *tmp192 false
   801 label *label160
   802 jump *label152 always
   803 label *label151
 
   818 read *tmp194 .oreLocator ":layoutThoriumDrill*finished"
   819 jump *label165 equal *tmp194 false
   820 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp196 :buildThoriumDrill:result false
-    * jump *label166 equal *tmp196 false
+  821 jump *label166 notEqual :buildThoriumDrill:result false
   822 set :error.1:error "Cannot locate spot for thorium drill"
   823 set .ERROR :error.1:error
   824 stop
 
   837 label *label169
   838 set .thoriumDrill :buildBlockAt*retval
   839 read *tmp66 .oreLocator ".water1X"
-    * op lessThan *tmp199 *tmp66 0
-    * jump *label170 equal *tmp199 false
+  840 jump *label170 greaterThanEq *tmp66 0
   841 jump *label162 always
   842 jump *label171 always
   843 label *label170
 
   864 call *label26 *invalid :buildBlockAt*retval (m:*label174) (h:*label174)
   865 label *label174
   866 read *tmp68 .oreLocator ".water2X"
-    * op lessThan *tmp202 *tmp68 0
-    * jump *label175 equal *tmp202 false
+  867 jump *label175 greaterThanEq *tmp68 0
   868 jump *label162 always
   869 jump *label176 always
   870 label *label175
 
  1005 read *tmp35 .controller ".flares"
  1006 read *tmp34 .controller ".monos"
  1007 op add *tmp215 *tmp35 *tmp34
-    * op lessThan *tmp216 *tmp215 16
-    * jump *label196 notEqual *tmp216 false
+ 1008 jump *label196 lessThan *tmp215 16
  1009 label *label198
  1010 label *label200
  1011 setaddr :supplyBase*retaddr *label203 (h:*label203)
 
  1026 label *label207
  1027 label *label208
  1028 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
-    * op equal *tmp218 *tmp217 false
-    * jump *label210 equal *tmp218 false
+ 1029 jump *label210 notEqual *tmp217 false
  1030 op sub *tmp219 :moveTo:radius 0.5
  1031 ucontrol approach :moveTo:x :moveTo:y *tmp219
  1032 label *label209
 
  1053 label *label214
  1054 label *label215
  1055 sensor *tmp222 @unit @firstItem
-    * op notEqual *tmp223 *tmp222 null
-    * jump *label218 equal *tmp223 false
+ 1056 jump *label218 equal *tmp222 null
  1057 ucontrol itemDrop @air 1000
  1058 jump *label219 always
  1059 label *label218
 
  1061 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1062 label *label216
  1063 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp225
-    * op equal *tmp226 *tmp225 false
-    * jump *label215 notEqual *tmp226 false
+ 1064 jump *label215 equal *tmp225 false
  1065 label *label217
  1066 label *label213
  1067 return :moveToEmpty*retaddr
 
  1083 write :status3.2:text .display ".status3"
  1084 label *label223
  1085 sensor *tmp229 @unit @firstItem
-    * op equal *tmp230 *tmp229 :depositItems:item
-    * jump *label224 equal *tmp230 false
+ 1086 jump *label224 notEqual *tmp229 :depositItems:item
  1087 set :moveToBlock:block :depositItems:block
  1088 set :moveToBlock:radius 6
  1089 setaddr :moveToBlock*retaddr *label226 (h:*label226)
 
  1096 sensor *tmp233 @unit @firstItem
  1097 op mul *tmp234 *tmp233 :depositItems:cap
  1098 sensor *tmp235 :depositItems:block :depositItems:item
-    * op greaterThan *tmp236 *tmp234 *tmp235
-    * jump *label227 notEqual *tmp236 false
+ 1099 jump *label227 greaterThan *tmp234 *tmp235
  1100 label *label229
  1101 jump *label225 always
  1102 label *label224
  1103 label *label230
  1104 sensor *tmp237 @unit @firstItem
-    * op notEqual *tmp238 *tmp237 null
-    * jump *label232 equal *tmp238 false
+ 1105 jump *label232 equal *tmp237 null
  1106 ucontrol itemDrop @air 1000
  1107 label *label231
  1108 jump *label230 always
 
  1118 end
  1119 label *label10
  1120 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp239 0
-    * op equal *tmp241 *tmp239 false
-    * jump *label235 equal *tmp241 false
+ 1121 jump *label235 notEqual *tmp239 false
  1122 set :error.3:error "Cannot locate ore"
  1123 set .ERROR :error.3:error
  1124 stop
 
  1148 call *label7 *invalid :moveToEmpty*retval (m:*label241) (h:*label241)
  1149 label *label241
  1150 sensor *tmp244 @unit @firstItem
-    * op notEqual *tmp245 *tmp244 :mineOre:ore
-    * jump *label242 equal *tmp245 false
+ 1151 jump *label242 equal *tmp244 :mineOre:ore
  1152 label *label245
  1153 sensor *tmp247 @unit @firstItem
-    * op notEqual *tmp248 *tmp247 null
-    * jump *label247 equal *tmp248 false
+ 1154 jump *label247 equal *tmp247 null
  1155 ucontrol itemDrop @air 1000
  1156 label *label246
  1157 jump *label245 always
 
  1181 op mul :second.1:result @second TIME_COMPRESS
  1182 set *tmp256 :second.1:result
  1183 label *label255
-    * op greaterThan *tmp257 *tmp256 :mineOre:stop
-    * jump *label256 equal *tmp257 false
+ 1184 jump *label256 lessThanEq *tmp256 :mineOre:stop
  1185 jump *label252 always
  1186 jump *label257 always
  1187 label *label256
  1188 label *label257
  1189 label *label251
  1190 sensor *tmp259 @unit @totalItems
-    * op lessThan *tmp260 *tmp259 :mineOre:amount
-    * jump *label250 notEqual *tmp260 false
+ 1191 jump *label250 lessThan *tmp259 :mineOre:amount
  1192 label *label252
  1193 ucontrol unbind
  1194 set :depositItems:block :mineOre:block
 
  1238 label *label265
  1239 label *label267
  1240 sensor *tmp265 @unit @firstItem
-    * op notEqual *tmp266 *tmp265 null
-    * jump *label269 equal *tmp266 false
+ 1241 jump *label269 equal *tmp265 null
  1242 ucontrol itemDrop @air 1000
  1243 label *label268
  1244 jump *label267 always
 
  1272 end
  1273 label *label15
  1274 ubind :findFreeUnit:unit_type
-    * op equal *tmp276 @unit null
-    * jump *label277 equal *tmp276 false
+ 1275 jump *label277 notEqual @unit null
  1276 jump *label276 always
  1277 jump *label278 always
  1278 label *label277
 
  1280 set :findFreeUnit:first_unit @unit
  1281 label *label279
  1282 sensor *tmp278 @unit @controlled
-    * op equal *tmp279 *tmp278 0
-    * jump *label282 equal *tmp279 false
+ 1283 jump *label282 notEqual *tmp278 0
  1284 ucontrol flag :findFreeUnit:initial_flag
  1285 jump *label276 always
  1286 jump *label283 always
  1287 label *label282
  1288 sensor *tmp281 :findFreeUnit:first_unit @dead
-    * op equal *tmp282 *tmp281 1
-    * jump *label284 equal *tmp282 false
+ 1289 jump *label284 notEqual *tmp281 1
  1290 set :findFreeUnit:first_unit @unit
  1291 jump *label285 always
  1292 label *label284
 
  1294 label *label283
  1295 ubind :findFreeUnit:unit_type
  1296 label *label280
-    * op notEqual *tmp285 :findFreeUnit:first_unit @unit
-    * jump *label279 notEqual *tmp285 false
+ 1297 jump *label279 notEqual :findFreeUnit:first_unit @unit
  1298 label *label281
  1299 jump *label276 always
  1300 label *label276
 
  1302 end
  1303 label *label19
  1304 set :supplyBase0:supplied false
-    * op equal *tmp286 .unloader1 null
-    * jump *label287 equal *tmp286 false
+ 1305 jump *label287 notEqual .unloader1 null
  1306 sensor *tmp288 .core @graphite
-    * op lessThan *tmp289 *tmp288 .targetGraphite
-    * jump *label289 equal *tmp289 false
+ 1307 jump *label289 greaterThanEq *tmp288 .targetGraphite
  1308 sensor *tmp291 .press @coal
-    * op lessThan *tmp292 *tmp291 5
-    * jump *label291 equal *tmp292 false
+ 1309 jump *label291 greaterThanEq *tmp291 5
  1310 set :status1:text "Goal 1: graphite requirement"
  1311 write :status1:text .display ".status1"
  1312 label *label293
 
  1322 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1323 sensor *tmp295 :supplyBlock:block :supplyBlock:ore
  1324 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp295
-    * op greaterThan *tmp297 :supplyBlock:missing 0
-    * jump *label296 equal *tmp297 false
+ 1325 jump *label296 lessThanEq :supplyBlock:missing 0
  1326 set :mineOre:ore :supplyBlock:ore
  1327 set :mineOre:amount :supplyBlock:blockCapacity
  1328 set :mineOre:block :supplyBlock:block
 
  1341 label *label289
  1342 label *label290
  1343 sensor *tmp299 .core @silicon
-    * op lessThan *tmp300 *tmp299 .targetSilicon
-    * jump *label299 equal *tmp300 false
+ 1344 jump *label299 greaterThanEq *tmp299 .targetSilicon
  1345 sensor *tmp302 .smelter @coal
-    * op lessThan *tmp303 *tmp302 5
-    * jump *label301 equal *tmp303 false
+ 1346 jump *label301 greaterThanEq *tmp302 5
  1347 set :status1.1:text "Goal 2: coal for silicon requirement"
  1348 write :status1.1:text .display ".status1"
  1349 label *label303
 
  1359 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1360 sensor *tmp306 :supplyBlock.1:block :supplyBlock.1:ore
  1361 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp306
-    * op greaterThan *tmp308 :supplyBlock.1:missing 0
-    * jump *label306 equal *tmp308 false
+ 1362 jump *label306 lessThanEq :supplyBlock.1:missing 0
  1363 set :mineOre:ore :supplyBlock.1:ore
  1364 set :mineOre:amount :supplyBlock.1:blockCapacity
  1365 set :mineOre:block :supplyBlock.1:block
 
  1374 jump *label302 always
  1375 label *label301
  1376 sensor *tmp310 .smelter @sand
-    * op lessThan *tmp311 *tmp310 5
-    * jump *label309 equal *tmp311 false
+ 1377 jump *label309 greaterThanEq *tmp310 5
  1378 set :status1.2:text "Goal 3: sand for silicon requirement"
  1379 write :status1.2:text .display ".status1"
  1380 label *label311
 
  1390 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1391 sensor *tmp314 :supplyBlock.2:block :supplyBlock.2:ore
  1392 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp314
-    * op greaterThan *tmp316 :supplyBlock.2:missing 0
-    * jump *label314 equal *tmp316 false
+ 1393 jump *label314 lessThanEq :supplyBlock.2:missing 0
  1394 set :mineOre:ore :supplyBlock.2:ore
  1395 set :mineOre:amount :supplyBlock.2:blockCapacity
  1396 set :mineOre:block :supplyBlock.2:block
 
  1410 label *label299
  1411 label *label300
  1412 sensor *tmp318 .battery @totalPower
-    * op lessThan *tmp319 *tmp318 .powerTarget
-    * jump *label317 equal *tmp319 false
+ 1413 jump *label317 greaterThanEq *tmp318 .powerTarget
  1414 sensor *tmp321 .generator @coal
-    * op lessThan *tmp322 *tmp321 2
-    * jump *label319 equal *tmp322 false
+ 1415 jump *label319 greaterThanEq *tmp321 2
  1416 set :status1.3:text "Goal 4: supplying generator"
  1417 write :status1.3:text .display ".status1"
  1418 label *label321
 
  1428 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1429 sensor *tmp325 :supplyBlock.3:block :supplyBlock.3:ore
  1430 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp325
-    * op greaterThan *tmp327 :supplyBlock.3:missing 0
-    * jump *label324 equal *tmp327 false
+ 1431 jump *label324 lessThanEq :supplyBlock.3:missing 0
  1432 set :mineOre:ore :supplyBlock.3:ore
  1433 set :mineOre:amount :supplyBlock.3:blockCapacity
  1434 set :mineOre:block :supplyBlock.3:block
 
  1450 label *label287
  1451 label *label288
  1452 sensor *tmp329 .core @titanium
-    * op lessThan *tmp330 *tmp329 .targetTitanium
-    * jump *label327 equal *tmp330 false
+ 1453 jump *label327 greaterThanEq *tmp329 .targetTitanium
  1454 sensor *tmp332 .core @titanium
  1455 op sub *tmp333 .targetTitanium *tmp332
  1456 op min *tmp331 7 *tmp333
 
  1460 label *label328
  1461 set :supplyBase0:titaniumTrigger *tmp331
  1462 sensor *tmp335 .titaniumDrill @titanium
-    * op lessThan *tmp336 *tmp335 :supplyBase0:titaniumTrigger
-    * jump *label329 equal *tmp336 false
-    * op equal *tmp338 :supplyBase0:supplied false
-    * jump *label331 equal *tmp338 false
+ 1463 jump *label329 greaterThanEq *tmp335 :supplyBase0:titaniumTrigger
+ 1464 jump *label331 notEqual :supplyBase0:supplied false
  1465 sensor *tmp340 .battery @totalPower
  1466 op mul *tmp341 .unloader1 .powerTarget
-    * op lessThan *tmp342 *tmp340 *tmp341
-    * jump *label333 equal *tmp342 false
+ 1467 jump *label333 greaterThanEq *tmp340 *tmp341
  1468 set :status1.4:text "Goal 5: supplying generator"
  1469 write :status1.4:text .display ".status1"
  1470 label *label335
 
  1475 jump *label334 always
  1476 label *label333
  1477 sensor *tmp344 .core @silicon
-    * op lessThan *tmp345 *tmp344 .targetSilicon
-    * jump *label337 equal *tmp345 false
+ 1478 jump *label337 greaterThanEq *tmp344 .targetSilicon
  1479 set :status1.5:text "Goal 6: silicon requirement"
  1480 write :status1.5:text .display ".status1"
  1481 label *label339
  1482 sensor :supplyBase0:coal .core @coal
  1483 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp349 :supplyBase0:coal :supplyBase0:sand
-    * jump *label340 equal *tmp349 false
+ 1484 jump *label340 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1485 set *tmp350 @coal
  1486 jump *label341 always
  1487 label *label340
 
  1495 jump *label338 always
  1496 label *label337
  1497 sensor *tmp351 .core @copper
-    * op lessThan *tmp352 *tmp351 .targetCopper
-    * jump *label343 equal *tmp352 false
+ 1498 jump *label343 greaterThanEq *tmp351 .targetCopper
  1499 set :status1.6:text "Goal 7: copper requirement"
  1500 write :status1.6:text .display ".status1"
  1501 label *label345
 
  1506 jump *label344 always
  1507 label *label343
  1508 sensor *tmp354 .core @lead
-    * op lessThan *tmp355 *tmp354 .targetLead
-    * jump *label347 equal *tmp355 false
+ 1509 jump *label347 greaterThanEq *tmp354 .targetLead
  1510 set :status1.7:text "Goal 8: lead requirement"
  1511 write :status1.7:text .display ".status1"
  1512 label *label349
 
  1517 jump *label348 always
  1518 label *label347
  1519 sensor *tmp357 .core @metaglass
-    * op lessThan *tmp358 *tmp357 .targetMetaglass
-    * jump *label351 equal *tmp358 false
+ 1520 jump *label351 greaterThanEq *tmp357 .targetMetaglass
  1521 set :status1.8:text "Goal 9: metaglass requirement"
  1522 write :status1.8:text .display ".status1"
  1523 label *label353
 
  1532 label *label355
  1533 sensor :supplyBase0:coal.1 .core @coal
  1534 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp362 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label356 equal *tmp362 false
+ 1535 jump *label356 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1536 set *tmp363 @coal
  1537 jump *label357 always
  1538 label *label356
 
  1578 end
  1579 label *label21
  1580 read *tmp34 .controller ".monos"
-    * op greaterThan *tmp364 *tmp34 3
-    * jump *label365 equal *tmp364 false
+ 1581 jump *label365 lessThanEq *tmp34 3
  1582 setaddr :supplyBase1*retaddr *label367 (h:*label367)
  1583 call *label20 *invalid :supplyBase1*retval (m:*label367) (h:*label367)
  1584 label *label367
 
  1593 end
  1594 label *label22
  1595 sensor *tmp366 .core @copper
-    * op greaterThanEq *tmp367 *tmp366 .targetCopper
-    * jump *label370 equal *tmp367 false
+ 1596 jump *label370 lessThan *tmp366 .targetCopper
  1597 sensor *tmp369 .core @lead
-    * op greaterThanEq *tmp370 *tmp369 .targetLead
-    * jump *label372 equal *tmp370 false
+ 1598 jump *label372 lessThan *tmp369 .targetLead
  1599 sensor *tmp372 .core @graphite
-    * op greaterThanEq *tmp373 *tmp372 .targetGraphite
-    * jump *label374 equal *tmp373 false
+ 1600 jump *label374 lessThan *tmp372 .targetGraphite
  1601 sensor *tmp375 .core @silicon
-    * op greaterThanEq *tmp376 *tmp375 .targetSilicon
-    * jump *label376 equal *tmp376 false
+ 1602 jump *label376 lessThan *tmp375 .targetSilicon
  1603 sensor *tmp378 .core @titanium
-    * op greaterThanEq *tmp379 *tmp378 .targetTitanium
-    * jump *label378 equal *tmp379 false
+ 1604 jump *label378 lessThan *tmp378 .targetTitanium
  1605 sensor *tmp381 .core @metaglass
-    * op greaterThanEq *tmp382 *tmp381 .targetMetaglass
-    * jump *label380 equal *tmp382 false
+ 1606 jump *label380 lessThan *tmp381 .targetMetaglass
  1607 set :targetMet*retval true
  1608 jump *label369 always
  1609 jump *label381 always
 
  1693 setaddr :targetMet*retaddr *label395 (h:*label395)
  1694 call *label22 *invalid :targetMet*retval (m:*label395) (h:*label395)
  1695 label *label395
-    * op equal *tmp395 :targetMet*retval false
-    * jump *label394 equal *tmp395 false
+ 1696 jump *label394 notEqual :targetMet*retval false
  1697 setaddr :supplyBase*retaddr *label396 (h:*label396)
  1698 call *label21 *invalid :supplyBase*retval (m:*label396) (h:*label396)
  1699 label *label396
 
  1736 write :status3.4:text .display ".status3"
  1737 label *label403
  1738 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp406 :buildBlockAt:building null
-    * jump *label404 equal *tmp406 false
-    * op equal *tmp408 :buildBlockAt:type :buildBlockAt:block
-    * jump *label406 equal *tmp408 false
+ 1739 jump *label404 equal :buildBlockAt:building null
+ 1740 jump *label406 notEqual :buildBlockAt:type :buildBlockAt:block
  1741 set :buildBlockAt*retval :buildBlockAt:building
  1742 jump *label401 always
  1743 jump *label407 always
 
  1760 wait 0.25
  1761 label *label411
  1762 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp413 :buildBlockAt:building null
-    * jump *label414 equal *tmp413 false
+ 1763 jump *label414 notEqual :buildBlockAt:building null
  1764 set :buildBlockAt*retval null
  1765 jump *label401 always
  1766 jump *label415 always
  1767 label *label414
  1768 label *label415
  1769 label *label412
-    * op notEqual *tmp415 :buildBlockAt:type :buildBlockAt:block
-    * jump *label411 notEqual *tmp415 false
+ 1770 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
  1771 label *label413
  1772 set :logBlock:block :buildBlockAt:block
  1773 setaddr :logBlock*retaddr *label416 (h:*label416)
 
  1809 set :findUnits:count 0
  1810 ubind :findUnits:type
  1811 set :findUnits:firstUnit @unit
-    * op notEqual *tmp416 :findUnits:firstUnit null
-    * jump *label421 equal *tmp416 false
+ 1812 jump *label421 equal :findUnits:firstUnit null
  1813 label *label423
  1814 op add :findUnits:count :findUnits:count 1
  1815 ubind :findUnits:type
  1816 label *label424
-    * op notEqual *tmp419 @unit :findUnits:firstUnit
-    * jump *label423 notEqual *tmp419 false
+ 1817 jump *label423 notEqual @unit :findUnits:firstUnit
  1818 label *label425
  1819 jump *label422 always
  1820 label *label421

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-39 instructions):
 
   265 set .ERROR :error:error
   266 stop
   267 label *label71
-    * jump *label70 always
   268 label *label69
   269 label *label70
   270 write @pneumatic-drill .display ".nextBlock"
 
   557 wait 1e-15
   558 read *tmp157 .flareController ":start*finished"
   559 jump *label116 equal *tmp157 false
-    * jump *label114 always
   560 label *label113
   561 label *label114
   562 setaddr :supplyBase*retaddr *label117 (h:*label117)
 
   565 sensor *tmp158 .battery @totalPower
   566 jump *label118 greaterThanEq *tmp158 300
   567 jump *label112 always
-    * jump *label119 always
   568 label *label118
   569 label *label119
   570 label *label111
 
   796 read *tmp192 .oreLocator ":layoutThoriumDrill*finished"
   797 jump *label158 equal *tmp192 false
   798 label *label160
-    * jump *label152 always
   799 label *label151
   800 label *label152
   801 set :meetTarget:block @laser-drill
 
   819 set .ERROR :error.1:error
   820 stop
   821 label *label168
-    * jump *label167 always
   822 label *label166
   823 label *label167
   824 set :buildBlockAt:block @laser-drill
 
   834 read *tmp66 .oreLocator ".water1X"
   835 jump *label170 greaterThanEq *tmp66 0
   836 jump *label162 always
-    * jump *label171 always
   837 label *label170
   838 label *label171
   839 set :meetTarget:block @water-extractor
 
   860 read *tmp68 .oreLocator ".water2X"
   861 jump *label175 greaterThanEq *tmp68 0
   862 jump *label162 always
-    * jump *label176 always
   863 label *label175
   864 label *label176
   865 set :meetTarget:block @water-extractor
 
  1048 sensor *tmp222 @unit @firstItem
  1049 jump *label218 equal *tmp222 null
  1050 ucontrol itemDrop @air 1000
-    * jump *label219 always
  1051 label *label218
  1052 label *label219
  1053 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1115 set .ERROR :error.3:error
  1116 stop
  1117 label *label237
-    * jump *label236 always
  1118 label *label235
  1119 label *label236
  1120 label *label234
 
  1148 jump *label245 always
  1149 label *label247
  1150 label *label244
-    * jump *label243 always
  1151 label *label242
  1152 label *label243
  1153 set :status3.3:text "Mining..."
 
  1164 op land *tmp254 *tmp252 *tmp253
  1165 jump *label253 equal *tmp254 false
  1166 jump *label252 always
-    * jump *label254 always
  1167 label *label253
  1168 label *label254
  1169 ucontrol mine :mineOre:x :mineOre:y
 
  1172 label *label255
  1173 jump *label256 lessThanEq *tmp256 :mineOre:stop
  1174 jump *label252 always
-    * jump *label257 always
  1175 label *label256
  1176 label *label257
  1177 label *label251
 
  1240 op land *tmp270 *tmp268 *tmp269
  1241 jump *label273 equal *tmp270 false
  1242 ucontrol itemDrop @air 1000
-    * jump *label274 always
  1243 label *label273
  1244 label *label274
  1245 label *label271
 
  1261 ubind :findFreeUnit:unit_type
  1262 jump *label277 notEqual @unit null
  1263 jump *label276 always
-    * jump *label278 always
  1264 label *label277
  1265 label *label278
  1266 set :findFreeUnit:first_unit @unit
 
  1274 sensor *tmp281 :findFreeUnit:first_unit @dead
  1275 jump *label284 notEqual *tmp281 1
  1276 set :findFreeUnit:first_unit @unit
-    * jump *label285 always
  1277 label *label284
  1278 label *label285
  1279 label *label283
 
  1281 label *label280
  1282 jump *label279 notEqual :findFreeUnit:first_unit @unit
  1283 label *label281
-    * jump *label276 always
  1284 label *label276
  1285 return :findFreeUnit*retaddr
  1286 end
 
  1313 setaddr :mineOre*retaddr *label298 (h:*label298)
  1314 call *label11 *invalid :mineOre*retval (m:*label298) (h:*label298)
  1315 label *label298
-    * jump *label297 always
  1316 label *label296
  1317 label *label297
  1318 label *label294
  1319 set :supplyBase0:supplied true
-    * jump *label292 always
  1320 label *label291
  1321 label *label292
-    * jump *label290 always
  1322 label *label289
  1323 label *label290
  1324 sensor *tmp299 .core @silicon
 
  1347 setaddr :mineOre*retaddr *label308 (h:*label308)
  1348 call *label11 *invalid :mineOre*retval (m:*label308) (h:*label308)
  1349 label *label308
-    * jump *label307 always
  1350 label *label306
  1351 label *label307
  1352 label *label304
 
  1377 setaddr :mineOre*retaddr *label316 (h:*label316)
  1378 call *label11 *invalid :mineOre*retval (m:*label316) (h:*label316)
  1379 label *label316
-    * jump *label315 always
  1380 label *label314
  1381 label *label315
  1382 label *label312
  1383 set :supplyBase0:supplied true
-    * jump *label310 always
  1384 label *label309
  1385 label *label310
  1386 label *label302
-    * jump *label300 always
  1387 label *label299
  1388 label *label300
  1389 sensor *tmp318 .battery @totalPower
 
  1412 setaddr :mineOre*retaddr *label326 (h:*label326)
  1413 call *label11 *invalid :mineOre*retval (m:*label326) (h:*label326)
  1414 label *label326
-    * jump *label325 always
  1415 label *label324
  1416 label *label325
  1417 label *label322
  1418 set :supplyBase0:supplied true
-    * jump *label320 always
  1419 label *label319
  1420 label *label320
-    * jump *label318 always
  1421 label *label317
  1422 label *label318
-    * jump *label288 always
  1423 label *label287
  1424 label *label288
  1425 sensor *tmp329 .core @titanium
 
  1521 label *label344
  1522 label *label338
  1523 label *label334
-    * jump *label332 always
  1524 label *label331
  1525 label *label332
  1526 jump *label330 always
 
  1578 jump *label380 lessThan *tmp381 .targetMetaglass
  1579 set :targetMet*retval true
  1580 jump *label369 always
-    * jump *label381 always
  1581 label *label380
  1582 label *label381
-    * jump *label379 always
  1583 label *label378
  1584 label *label379
-    * jump *label377 always
  1585 label *label376
  1586 label *label377
-    * jump *label375 always
  1587 label *label374
  1588 label *label375
-    * jump *label373 always
  1589 label *label372
  1590 label *label373
-    * jump *label371 always
  1591 label *label370
  1592 label *label371
  1593 set :targetMet*retval false
 
  1706 jump *label406 notEqual :buildBlockAt:type :buildBlockAt:block
  1707 set :buildBlockAt*retval :buildBlockAt:building
  1708 jump *label401 always
-    * jump *label407 always
  1709 label *label406
  1710 label *label407
  1711 jump *label408 equal :buildBlockAt:skipError false
  1712 set :buildBlockAt*retval null
  1713 jump *label401 always
-    * jump *label409 always
  1714 label *label408
  1715 label *label409
  1716 set :error.4:error "Cannot build at ("
  1717 set .ERROR :error.4:error
  1718 stop
  1719 label *label410
-    * jump *label405 always
  1720 label *label404
  1721 label *label405
  1722 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1726 jump *label414 notEqual :buildBlockAt:building null
  1727 set :buildBlockAt*retval null
  1728 jump *label401 always
-    * jump *label415 always
  1729 label *label414
  1730 label *label415
  1731 label *label412
 
  1778 label *label424
  1779 jump *label423 notEqual @unit :findUnits:firstUnit
  1780 label *label425
-    * jump *label422 always
  1781 label *label421
  1782 label *label422
  1783 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-39 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .unloader2 null
-    * set .factory null
-    * set .generator2 null
-    * set .kiln null
-    * set .thoriumDrill null
-    * set .thoriumGenerator null
     8 set .phase 0
     9 set .graphiteSurplus 20
    10 set .siliconSurplus 20
 
    24 setaddr :findUnits*retaddr *label32 (h:*label32)
    25 call *label28 *invalid :findUnits*retval (m:*label32) (h:*label32)
    26 label *label32
-    * write :findUnits:count .display ".monos"
+   27 write :findUnits:count processor1 ".monos"
    28 set :monos :findUnits*retval
    29 set :findUnits:type @flare
    30 setaddr :findUnits*retaddr *label33 (h:*label33)
    31 call *label28 *invalid :findUnits*retval (m:*label33) (h:*label33)
    32 label *label33
-    * write :findUnits:count .display ".flares"
+   33 write :findUnits:count processor1 ".flares"
    34 set :flares :findUnits*retval
    35 set :findUnits:type @poly
    36 setaddr :findUnits*retaddr *label34 (h:*label34)
    37 call *label28 *invalid :findUnits*retval (m:*label34) (h:*label34)
    38 label *label34
-    * write :findUnits:count .display ".polys"
+   39 write :findUnits:count processor1 ".polys"
    40 set :polys :findUnits*retval
    41 set :buildBlockFromCfg:block @graphite-press
    42 set :buildBlockFromCfg:offsetX -1.5
 
    49 set :buildBlockFromCfg:metaglass 0
    50 set :buildBlockFromCfg:rotation 0
    51 set :buildBlockFromCfg:config null
-    * setaddr *tmp88 *label39
    52 label *label36
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   53 op add :buildBlockFromCfg:x .coreX -1.5
+   54 op add :buildBlockFromCfg:y .coreY 2.5
+   55 set :buildBlock:block @graphite-press
    56 set :buildBlock:x :buildBlockFromCfg:x
    57 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   58 set :buildBlock:copper 75
+   59 set :buildBlock:lead 30
+   60 set :buildBlock:graphite 0
+   61 set :buildBlock:silicon 0
+   62 set :buildBlock:titanium 0
+   63 set :buildBlock:metaglass 0
+   64 set :buildBlock:rotation 0
+   65 set :buildBlock:config null
    66 setaddr :buildBlock*retaddr *label40 (h:*label40)
    67 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    68 label *label40
 
    72 multijump *tmp88 0 0 (m:marker0)
    73 multilabel *label39 (m:marker0)
    74 label *label38
-    * set *tmp87 null
    75 label *label35
    76 set .press *tmp87
    77 set :buildBlockFromCfg.1:block @battery
 
    85 set :buildBlockFromCfg.1:metaglass 0
    86 set :buildBlockFromCfg.1:rotation 0
    87 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp92 *label45
    88 label *label42
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   89 op add :buildBlockFromCfg.1:x .coreX 0
+   90 op add :buildBlockFromCfg.1:y .coreY 4
+   91 set :buildBlock:block @battery
    92 set :buildBlock:x :buildBlockFromCfg.1:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   94 set :buildBlock:copper 5
+   95 set :buildBlock:lead 20
+   96 set :buildBlock:graphite 0
+   97 set :buildBlock:silicon 0
+   98 set :buildBlock:titanium 0
+   99 set :buildBlock:metaglass 0
+  100 set :buildBlock:rotation 0
+  101 set :buildBlock:config null
   102 setaddr :buildBlock*retaddr *label46 (h:*label46)
   103 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
   104 label *label46
 
   108 multijump *tmp92 0 0 (m:marker1)
   109 multilabel *label45 (m:marker1)
   110 label *label44
-    * set *tmp91 null
   111 label *label41
   112 set .battery *tmp91
   113 set :buildBlockFromCfg.2:block @battery
 
   121 set :buildBlockFromCfg.2:metaglass 0
   122 set :buildBlockFromCfg.2:rotation 0
   123 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp96 *label51
   124 label *label48
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  125 op add :buildBlockFromCfg.2:x .coreX -1
+  126 op add :buildBlockFromCfg.2:y .coreY 4
+  127 set :buildBlock:block @battery
   128 set :buildBlock:x :buildBlockFromCfg.2:x
   129 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  130 set :buildBlock:copper 5
+  131 set :buildBlock:lead 20
+  132 set :buildBlock:graphite 0
+  133 set :buildBlock:silicon 0
+  134 set :buildBlock:titanium 0
+  135 set :buildBlock:metaglass 0
+  136 set :buildBlock:rotation 0
+  137 set :buildBlock:config null
   138 setaddr :buildBlock*retaddr *label52 (h:*label52)
   139 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
   140 label *label52
 
   155 set :buildBlockFromCfg.3:metaglass 0
   156 set :buildBlockFromCfg.3:rotation 0
   157 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp100 *label57
   158 label *label54
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  159 op add :buildBlockFromCfg.3:x .coreX 0
+  160 op add :buildBlockFromCfg.3:y .coreY 3
+  161 set :buildBlock:block @combustion-generator
   162 set :buildBlock:x :buildBlockFromCfg.3:x
   163 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  164 set :buildBlock:copper 25
+  165 set :buildBlock:lead 15
+  166 set :buildBlock:graphite 0
+  167 set :buildBlock:silicon 0
+  168 set :buildBlock:titanium 0
+  169 set :buildBlock:metaglass 0
+  170 set :buildBlock:rotation 0
+  171 set :buildBlock:config null
   172 setaddr :buildBlock*retaddr *label58 (h:*label58)
   173 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   174 label *label58
 
   178 multijump *tmp100 0 0 (m:marker3)
   179 multilabel *label57 (m:marker3)
   180 label *label56
-    * set *tmp99 null
   181 label *label53
   182 set .generator *tmp99
   183 set .powerTarget 800
 
   192 set :buildBlockFromCfg.4:metaglass 0
   193 set :buildBlockFromCfg.4:rotation 0
   194 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp104 *label63
   195 label *label60
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  196 op add :buildBlockFromCfg.4:x .coreX 1.5
+  197 op add :buildBlockFromCfg.4:y .coreY 2.5
+  198 set :buildBlock:block @silicon-smelter
   199 set :buildBlock:x :buildBlockFromCfg.4:x
   200 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  201 set :buildBlock:copper 30
+  202 set :buildBlock:lead 25
+  203 set :buildBlock:graphite 0
+  204 set :buildBlock:silicon 0
+  205 set :buildBlock:titanium 0
+  206 set :buildBlock:metaglass 0
+  207 set :buildBlock:rotation 0
+  208 set :buildBlock:config null
   209 setaddr :buildBlock*retaddr *label64 (h:*label64)
   210 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   211 label *label64
 
   215 multijump *tmp104 0 0 (m:marker4)
   216 multilabel *label63 (m:marker4)
   217 label *label62
-    * set *tmp103 null
   218 label *label59
   219 set .smelter *tmp103
   220 set :meetTarget:block @pneumatic-drill
 
   228 call *label23 *invalid :meetTarget*retval (m:*label67) (h:*label67)
   229 label *label67
   230 label *label66
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  231 write @titanium processor1 ".nextBlock"
+  232 write .coreX processor4 ":findDrillLocation:x"
+  233 write .coreY processor4 ":findDrillLocation:y"
+  234 write @unit processor4 ":findDrillLocation:unit"
+  235 write @titanium processor4 ":findDrillLocation:item"
+  236 write @ore-titanium processor4 ":findDrillLocation:ore"
+  237 write false processor4 ":findDrillLocation:large"
+  238 write 4 processor4 ":findDrillLocation:limit"
+  239 write false processor4 ":findDrillLocation*finished"
+  240 write 1 processor4 "@counter"
   241 label *label68
   242 wait 1e-15
-    * read *tmp118 .oreLocator ":findDrillLocation*finished"
+  243 read *tmp118 processor4 ":findDrillLocation*finished"
   244 jump *label68 equal *tmp118 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  245 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  246 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  247 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   248 jump *label69 notEqual :buildTitaniumDrill:result false
   249 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  250 set .ERROR "Cannot locate spot for titanium drill"
   251 stop
   252 label *label71
   253 label *label69
   254 label *label70
-    * write @pneumatic-drill .display ".nextBlock"
+  255 write @pneumatic-drill processor1 ".nextBlock"
   256 set :buildBlockAt:block @pneumatic-drill
   257 set :buildBlockAt:x :buildTitaniumDrill:dx
   258 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   264 label *label72
   265 set *tmp107 :buildBlockAt*retval
   266 jump *label65 always
-    * set *tmp107 null
   267 label *label65
-    * set .titaniumDrill *tmp107
-    * write .titaniumDrill .display ".titaniumDrill"
+  268 set .titaniumDrill :buildBlockAt*retval
+  269 write *tmp107 processor1 ".titaniumDrill"
   270 set :buildBlockFromCfg.5:block @unloader
   271 set :buildBlockFromCfg.5:offsetX 0
   272 set :buildBlockFromCfg.5:offsetY 2
 
   278 set :buildBlockFromCfg.5:metaglass 0
   279 set :buildBlockFromCfg.5:rotation 0
   280 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp123 *label77
   281 label *label74
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  282 op add :buildBlockFromCfg.5:x .coreX 0
+  283 op add :buildBlockFromCfg.5:y .coreY 2
+  284 set :buildBlock:block @unloader
   285 set :buildBlock:x :buildBlockFromCfg.5:x
   286 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  287 set :buildBlock:copper 0
+  288 set :buildBlock:lead 0
+  289 set :buildBlock:graphite 0
+  290 set :buildBlock:silicon 30
+  291 set :buildBlock:titanium 25
+  292 set :buildBlock:metaglass 0
+  293 set :buildBlock:rotation 0
+  294 set :buildBlock:config null
   295 setaddr :buildBlock*retaddr *label78 (h:*label78)
   296 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   297 label *label78
 
   301 multijump *tmp123 0 0 (m:marker5)
   302 multilabel *label77 (m:marker5)
   303 label *label76
-    * set *tmp122 null
   304 label *label73
   305 set .unloader1 *tmp122
   306 set :buildBlockFromCfg.6:block @micro-processor
 
   314 set :buildBlockFromCfg.6:metaglass 0
   315 set :buildBlockFromCfg.6:rotation 0
   316 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp127 *label83
   317 label *label80
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  318 op add :buildBlockFromCfg.6:x .coreX 1
+  319 op add :buildBlockFromCfg.6:y .coreY 4
+  320 set :buildBlock:block @micro-processor
   321 set :buildBlock:x :buildBlockFromCfg.6:x
   322 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  323 set :buildBlock:copper 90
+  324 set :buildBlock:lead 50
+  325 set :buildBlock:graphite 0
+  326 set :buildBlock:silicon 50
+  327 set :buildBlock:titanium 0
+  328 set :buildBlock:metaglass 0
+  329 set :buildBlock:rotation 0
+  330 set :buildBlock:config processor2
   331 setaddr :buildBlock*retaddr *label84 (h:*label84)
   332 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   333 label *label84
 
   337 multijump *tmp127 0 0 (m:marker6)
   338 multilabel *label83 (m:marker6)
   339 label *label82
-    * set *tmp126 null
   340 label *label79
   341 set .controller *tmp126
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  342 write processor1 *tmp126 ".display"
+  343 write .core *tmp126 ".core"
+  344 write bank1 *tmp126 ".bank"
+  345 write *tmp91 *tmp126 ".battery"
+  346 write *tmp99 *tmp126 ".generator"
+  347 write *tmp103 *tmp126 ".smelter"
+  348 write *tmp87 *tmp126 ".press"
+  349 write :monos *tmp126 ".monos"
+  350 write :flares *tmp126 ".flares"
+  351 write :polys *tmp126 ".polys"
   352 set :buildBlockFromCfg.7:block @power-node
   353 set :buildBlockFromCfg.7:offsetX -2
   354 set :buildBlockFromCfg.7:offsetY -1
 
   360 set :buildBlockFromCfg.7:metaglass 0
   361 set :buildBlockFromCfg.7:rotation 0
   362 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp131 *label89
   363 label *label86
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  364 op add :buildBlockFromCfg.7:x .coreX -2
+  365 op add :buildBlockFromCfg.7:y .coreY -1
+  366 set :buildBlock:block @power-node
   367 set :buildBlock:x :buildBlockFromCfg.7:x
   368 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  369 set :buildBlock:copper 2
+  370 set :buildBlock:lead 6
+  371 set :buildBlock:graphite 0
+  372 set :buildBlock:silicon 0
+  373 set :buildBlock:titanium 0
+  374 set :buildBlock:metaglass 0
+  375 set :buildBlock:rotation 0
+  376 set :buildBlock:config null
   377 setaddr :buildBlock*retaddr *label90 (h:*label90)
   378 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   379 label *label90
 
   394 set :buildBlockFromCfg.8:metaglass 0
   395 set :buildBlockFromCfg.8:rotation 0
   396 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp135 *label95
   397 label *label92
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  398 op add :buildBlockFromCfg.8:x .coreX -2
+  399 op add :buildBlockFromCfg.8:y .coreY 1
+  400 set :buildBlock:block @unloader
   401 set :buildBlock:x :buildBlockFromCfg.8:x
   402 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  403 set :buildBlock:copper 0
+  404 set :buildBlock:lead 0
+  405 set :buildBlock:graphite 0
+  406 set :buildBlock:silicon 30
+  407 set :buildBlock:titanium 25
+  408 set :buildBlock:metaglass 0
+  409 set :buildBlock:rotation 0
+  410 set :buildBlock:config null
   411 setaddr :buildBlock*retaddr *label96 (h:*label96)
   412 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   413 label *label96
 
   417 multijump *tmp135 0 0 (m:marker8)
   418 multilabel *label95 (m:marker8)
   419 label *label94
-    * set *tmp134 null
   420 label *label91
   421 set .unloader2 *tmp134
-    * write .unloader2 .controller ".unloader2"
+  422 write *tmp134 *tmp126 ".unloader2"
   423 set :buildBlockFromCfg.9:block @overflow-gate
   424 set :buildBlockFromCfg.9:offsetX -3
   425 set :buildBlockFromCfg.9:offsetY 1
 
   431 set :buildBlockFromCfg.9:metaglass 0
   432 set :buildBlockFromCfg.9:rotation 0
   433 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp139 *label101
   434 label *label98
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  435 op add :buildBlockFromCfg.9:x .coreX -3
+  436 op add :buildBlockFromCfg.9:y .coreY 1
+  437 set :buildBlock:block @overflow-gate
   438 set :buildBlock:x :buildBlockFromCfg.9:x
   439 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  440 set :buildBlock:copper 4
+  441 set :buildBlock:lead 2
+  442 set :buildBlock:graphite 0
+  443 set :buildBlock:silicon 0
+  444 set :buildBlock:titanium 0
+  445 set :buildBlock:metaglass 0
+  446 set :buildBlock:rotation 0
+  447 set :buildBlock:config null
   448 setaddr :buildBlock*retaddr *label102 (h:*label102)
   449 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   450 label *label102
 
   465 set :buildBlockFromCfg.10:metaglass 0
   466 set :buildBlockFromCfg.10:rotation 3
   467 set :buildBlockFromCfg.10:config @mono
-    * setaddr *tmp143 *label107
   468 label *label104
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  469 op add :buildBlockFromCfg.10:x .coreX -4
+  470 op add :buildBlockFromCfg.10:y .coreY -1
+  471 set :buildBlock:block @air-factory
   472 set :buildBlock:x :buildBlockFromCfg.10:x
   473 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  474 set :buildBlock:copper 60
+  475 set :buildBlock:lead 70
+  476 set :buildBlock:graphite 0
+  477 set :buildBlock:silicon 0
+  478 set :buildBlock:titanium 0
+  479 set :buildBlock:metaglass 0
+  480 set :buildBlock:rotation 3
+  481 set :buildBlock:config @mono
   482 setaddr :buildBlock*retaddr *label108 (h:*label108)
   483 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   484 label *label108
 
   488 multijump *tmp143 0 0 (m:marker10)
   489 multilabel *label107 (m:marker10)
   490 label *label106
-    * set *tmp142 null
   491 label *label103
   492 set .factory *tmp142
-    * write .factory .controller ".factory"
-    * write .factory .display ".factory"
-    * write 2 .controller ".flareTarget"
+  493 write *tmp142 *tmp126 ".factory"
+  494 write *tmp142 processor1 ".factory"
+  495 write 2 *tmp126 ".flareTarget"
   496 set :buildUnits:unit @flare
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
-    * write 0 .controller ".leadReserve"
-    * write 0 .controller ".siliconReserve"
-    * write :buildUnits:unit .controller ".unitToProduce"
+  497 write 0 processor1 ".totalTargets"
+  498 write null processor1 ".nextBlock"
+  499 write 0 *tmp126 ".leadReserve"
+  500 write 0 *tmp126 ".siliconReserve"
+  501 write @flare *tmp126 ".unitToProduce"
   502 label *label109
-    * op add .phase .phase 1
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  503 op add .phase 0 1
+  504 write 85 *tmp126 ".pressTarget"
+  505 write 150 *tmp126 ".smelterTarget"
+  506 write 30 *tmp126 ".kilnTarget"
   507 set :searchThorium true
   508 label *label110
-    * read *tmp35 .controller ".flares"
+  509 read *tmp35 *tmp126 ".flares"
   510 op greaterThan *tmp147 *tmp35 0
   511 op land *tmp148 :searchThorium *tmp147
   512 jump *label113 equal *tmp148 false
 
   516 setaddr :findFreeUnit*retaddr *label115 (h:*label115)
   517 call *label15 *invalid :findFreeUnit*retval (m:*label115) (h:*label115)
   518 label *label115
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  519 write .coreX processor4 ":layoutThoriumDrill:x"
+  520 write .coreY processor4 ":layoutThoriumDrill:y"
+  521 write @unit processor4 ":layoutThoriumDrill:unit"
+  522 write 7 processor4 ":layoutThoriumDrill:limit"
+  523 write false processor4 ":layoutThoriumDrill*finished"
+  524 write 2 processor4 "@counter"
   525 ubind .builder
-    * write .core .flareController ":start:aCore"
-    * write .titaniumDrill .flareController ":start:drill"
-    * write false .flareController ":start*finished"
-    * write 3 .flareController "@counter"
+  526 write .core processor3 ":start:aCore"
+  527 write *tmp107 processor3 ":start:drill"
+  528 write false processor3 ":start*finished"
+  529 write 3 processor3 "@counter"
   530 label *label116
   531 wait 1e-15
-    * read *tmp157 .flareController ":start*finished"
+  532 read *tmp157 processor3 ":start*finished"
   533 jump *label116 equal *tmp157 false
   534 label *label113
   535 label *label114
   536 setaddr :supplyBase*retaddr *label117 (h:*label117)
   537 call *label21 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   538 label *label117
-    * sensor *tmp158 .battery @totalPower
+  539 sensor *tmp158 *tmp91 @totalPower
   540 jump *label118 greaterThanEq *tmp158 300
   541 jump *label112 always
   542 label *label118
   543 label *label119
   544 label *label111
-    * read *tmp34 .controller ".monos"
+  545 read *tmp34 *tmp126 ".monos"
   546 jump *label110 lessThan *tmp34 3
   547 label *label112
-    * write .core .flareController ":start:aCore"
-    * write .titaniumDrill .flareController ":start:drill"
-    * write false .flareController ":start*finished"
-    * write 3 .flareController "@counter"
+  548 write .core processor3 ":start:aCore"
+  549 write *tmp107 processor3 ":start:drill"
+  550 write false processor3 ":start*finished"
+  551 write 3 processor3 "@counter"
   552 label *label120
   553 wait 1e-15
-    * read *tmp164 .flareController ":start*finished"
+  554 read *tmp164 processor3 ":start*finished"
   555 jump *label120 equal *tmp164 false
   556 set :buildBlockFromCfg.11:block @unloader
   557 set :buildBlockFromCfg.11:offsetX 2
 
   564 set :buildBlockFromCfg.11:metaglass 0
   565 set :buildBlockFromCfg.11:rotation 0
   566 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp166 *label125
   567 label *label122
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  568 op add :buildBlockFromCfg.11:x .coreX 2
+  569 op add :buildBlockFromCfg.11:y .coreY 0
+  570 set :buildBlock:block @unloader
   571 set :buildBlock:x :buildBlockFromCfg.11:x
   572 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  573 set :buildBlock:copper 0
+  574 set :buildBlock:lead 0
+  575 set :buildBlock:graphite 0
+  576 set :buildBlock:silicon 30
+  577 set :buildBlock:titanium 25
+  578 set :buildBlock:metaglass 0
+  579 set :buildBlock:rotation 0
+  580 set :buildBlock:config null
   581 setaddr :buildBlock*retaddr *label126 (h:*label126)
   582 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   583 label *label126
 
   598 set :buildBlockFromCfg.12:metaglass 0
   599 set :buildBlockFromCfg.12:rotation 0
   600 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp170 *label131
   601 label *label128
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  602 op add :buildBlockFromCfg.12:x .coreX 3.5
+  603 op add :buildBlockFromCfg.12:y .coreY 0.5
+  604 set :buildBlock:block @kiln
   605 set :buildBlock:x :buildBlockFromCfg.12:x
   606 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  607 set :buildBlock:copper 60
+  608 set :buildBlock:lead 30
+  609 set :buildBlock:graphite 30
+  610 set :buildBlock:silicon 0
+  611 set :buildBlock:titanium 0
+  612 set :buildBlock:metaglass 0
+  613 set :buildBlock:rotation 0
+  614 set :buildBlock:config null
   615 setaddr :buildBlock*retaddr *label132 (h:*label132)
   616 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   617 label *label132
 
   621 multijump *tmp170 0 0 (m:marker12)
   622 multilabel *label131 (m:marker12)
   623 label *label130
-    * set *tmp169 null
   624 label *label127
   625 set .kiln *tmp169
-    * write .kiln .controller ".kiln"
+  626 write *tmp169 *tmp126 ".kiln"
   627 set :buildBlockFromCfg.13:block @junction
   628 set :buildBlockFromCfg.13:offsetX 2
   629 set :buildBlockFromCfg.13:offsetY 1
 
   635 set :buildBlockFromCfg.13:metaglass 0
   636 set :buildBlockFromCfg.13:rotation 0
   637 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp174 *label137
   638 label *label134
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  639 op add :buildBlockFromCfg.13:x .coreX 2
+  640 op add :buildBlockFromCfg.13:y .coreY 1
+  641 set :buildBlock:block @junction
   642 set :buildBlock:x :buildBlockFromCfg.13:x
   643 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  644 set :buildBlock:copper 3
+  645 set :buildBlock:lead 0
+  646 set :buildBlock:graphite 0
+  647 set :buildBlock:silicon 0
+  648 set :buildBlock:titanium 0
+  649 set :buildBlock:metaglass 0
+  650 set :buildBlock:rotation 0
+  651 set :buildBlock:config null
   652 setaddr :buildBlock*retaddr *label138 (h:*label138)
   653 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   654 label *label138
 
   669 set :buildBlockFromCfg.14:metaglass 30
   670 set :buildBlockFromCfg.14:rotation 0
   671 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp178 *label143
   672 label *label140
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  673 op add :buildBlockFromCfg.14:x .coreX -3.5
+  674 op add :buildBlockFromCfg.14:y .coreY 4.5
+  675 set :buildBlock:block @water-extractor
   676 set :buildBlock:x :buildBlockFromCfg.14:x
   677 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  678 set :buildBlock:copper 30
+  679 set :buildBlock:lead 30
+  680 set :buildBlock:graphite 30
+  681 set :buildBlock:silicon 0
+  682 set :buildBlock:titanium 0
+  683 set :buildBlock:metaglass 30
+  684 set :buildBlock:rotation 0
+  685 set :buildBlock:config null
   686 setaddr :buildBlock*retaddr *label144 (h:*label144)
   687 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   688 label *label144
 
   703 set :buildBlockFromCfg.15:metaglass 0
   704 set :buildBlockFromCfg.15:rotation 0
   705 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp182 *label149
   706 label *label146
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  707 op add :buildBlockFromCfg.15:x .coreX -3.5
+  708 op add :buildBlockFromCfg.15:y .coreY 2.5
+  709 set :buildBlock:block @steam-generator
   710 set :buildBlock:x :buildBlockFromCfg.15:x
   711 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  712 set :buildBlock:copper 35
+  713 set :buildBlock:lead 40
+  714 set :buildBlock:graphite 25
+  715 set :buildBlock:silicon 30
+  716 set :buildBlock:titanium 0
+  717 set :buildBlock:metaglass 0
+  718 set :buildBlock:rotation 0
+  719 set :buildBlock:config null
   720 setaddr :buildBlock*retaddr *label150 (h:*label150)
   721 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   722 label *label150
 
   726 multijump *tmp182 0 0 (m:marker15)
   727 multilabel *label149 (m:marker15)
   728 label *label148
-    * set *tmp181 null
   729 label *label145
   730 set .generator2 *tmp181
-    * write .generator2 .controller ".generator2"
+  731 write *tmp181 *tmp126 ".generator2"
   732 set .graphiteSurplus 200
   733 set .siliconSurplus 1000
   734 set .metaglassSurplus 200
   735 jump *label151 equal :searchThorium false
   736 label *label153
-    * read *tmp35 .controller ".flares"
+  737 read *tmp35 *tmp126 ".flares"
   738 jump *label155 greaterThanEq *tmp35 1
   739 setaddr :supplyBase*retaddr *label156 (h:*label156)
   740 call *label21 *invalid :supplyBase*retval (m:*label156) (h:*label156)
 
   742 label *label154
   743 jump *label153 always
   744 label *label155
-    * set :searchThorium false
   745 set :findFreeUnit:unit_type @flare
   746 set :findFreeUnit:initial_flag 0
   747 setaddr :findFreeUnit*retaddr *label157 (h:*label157)
   748 call *label15 *invalid :findFreeUnit*retval (m:*label157) (h:*label157)
   749 label *label157
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  750 write .coreX processor4 ":layoutThoriumDrill:x"
+  751 write .coreY processor4 ":layoutThoriumDrill:y"
+  752 write @unit processor4 ":layoutThoriumDrill:unit"
+  753 write 7 processor4 ":layoutThoriumDrill:limit"
+  754 write false processor4 ":layoutThoriumDrill*finished"
+  755 write 2 processor4 "@counter"
   756 ubind .builder
   757 label *label158
   758 setaddr :supplyBase*retaddr *label161 (h:*label161)
   759 call *label21 *invalid :supplyBase*retval (m:*label161) (h:*label161)
   760 label *label161
   761 label *label159
-    * read *tmp192 .oreLocator ":layoutThoriumDrill*finished"
+  762 read *tmp192 processor4 ":layoutThoriumDrill*finished"
   763 jump *label158 equal *tmp192 false
   764 label *label160
   765 label *label151
 
   777 label *label163
   778 label *label165
   779 wait 1e-15
-    * read *tmp194 .oreLocator ":layoutThoriumDrill*finished"
+  780 read *tmp194 processor4 ":layoutThoriumDrill*finished"
   781 jump *label165 equal *tmp194 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  782 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   783 jump *label166 notEqual :buildThoriumDrill:result false
   784 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  785 set .ERROR "Cannot locate spot for thorium drill"
   786 stop
   787 label *label168
   788 label *label166
   789 label *label167
   790 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  791 read :buildBlockAt:x processor4 ".drillX"
+  792 read :buildBlockAt:y processor4 ".drillY"
   793 set :buildBlockAt:rotation null
   794 set :buildBlockAt:config 0
   795 set :buildBlockAt:skipError false
 
   797 call *label26 *invalid :buildBlockAt*retval (m:*label169) (h:*label169)
   798 label *label169
   799 set .thoriumDrill :buildBlockAt*retval
-    * read *tmp66 .oreLocator ".water1X"
+  800 read *tmp66 processor4 ".water1X"
   801 jump *label170 greaterThanEq *tmp66 0
   802 jump *label162 always
   803 label *label170
 
   814 label *label173
   815 label *label172
   816 set :buildBlockAt:block @water-extractor
-    * read *tmp66 .oreLocator ".water1X"
+  817 read *tmp66 processor4 ".water1X"
   818 set :buildBlockAt:x *tmp66
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+  819 read :buildBlockAt:y processor4 ".water1Y"
   820 set :buildBlockAt:rotation null
   821 set :buildBlockAt:config 0
   822 set :buildBlockAt:skipError false
   823 setaddr :buildBlockAt*retaddr *label174 (h:*label174)
   824 call *label26 *invalid :buildBlockAt*retval (m:*label174) (h:*label174)
   825 label *label174
-    * read *tmp68 .oreLocator ".water2X"
+  826 read *tmp68 processor4 ".water2X"
   827 jump *label175 greaterThanEq *tmp68 0
   828 jump *label162 always
   829 label *label175
 
   840 label *label178
   841 label *label177
   842 set :buildBlockAt:block @water-extractor
-    * read *tmp68 .oreLocator ".water2X"
+  843 read *tmp68 processor4 ".water2X"
   844 set :buildBlockAt:x *tmp68
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+  845 read :buildBlockAt:y processor4 ".water2Y"
   846 set :buildBlockAt:rotation null
   847 set :buildBlockAt:config 0
   848 set :buildBlockAt:skipError false
 
   861 label *label181
   862 label *label180
   863 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+  864 read :buildBlockAt:x processor4 ".generatorX"
+  865 read :buildBlockAt:y processor4 ".generatorY"
   866 set :buildBlockAt:rotation null
   867 set :buildBlockAt:config 0
   868 set :buildBlockAt:skipError false
 
   882 label *label184
   883 label *label183
   884 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+  885 read :buildBlockAt:x processor4 ".nodeX"
+  886 read :buildBlockAt:y processor4 ".nodeY"
   887 set :buildBlockAt:rotation null
   888 set :buildBlockAt:config 0
   889 set :buildBlockAt:skipError false
 
   902 label *label187
   903 label *label186
   904 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+  905 read :buildBlockAt:x processor4 ".panelX"
+  906 read :buildBlockAt:y processor4 ".panelY"
   907 set :buildBlockAt:rotation null
   908 set :buildBlockAt:config 0
   909 set :buildBlockAt:skipError false
   910 setaddr :buildBlockAt*retaddr *label188 (h:*label188)
   911 call *label26 *invalid :buildBlockAt*retval (m:*label188) (h:*label188)
   912 label *label188
-    * write .thoriumDrill .flareController ":addThoriumDrill:drill"
-    * write .thoriumGenerator .flareController ":addThoriumDrill:generator"
-    * write false .flareController ":addThoriumDrill*finished"
-    * write 1 .flareController "@counter"
+  913 write .thoriumDrill processor3 ":addThoriumDrill:drill"
+  914 write .thoriumGenerator processor3 ":addThoriumDrill:generator"
+  915 write false processor3 ":addThoriumDrill*finished"
+  916 write 1 processor3 "@counter"
   917 label *label189
   918 wait 1e-15
-    * read *tmp210 .flareController ":addThoriumDrill*finished"
+  919 read *tmp210 processor3 ":addThoriumDrill*finished"
   920 jump *label189 equal *tmp210 false
   921 label *label162
   922 set :buildBlockFromCfg.16:block @sorter
 
   930 set :buildBlockFromCfg.16:metaglass 0
   931 set :buildBlockFromCfg.16:rotation 0
   932 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp212 *label194
   933 label *label191
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  934 op add :buildBlockFromCfg.16:x .coreX -4
+  935 op add :buildBlockFromCfg.16:y .coreY 1
+  936 set :buildBlock:block @sorter
   937 set :buildBlock:x :buildBlockFromCfg.16:x
   938 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  939 set :buildBlock:copper 2
+  940 set :buildBlock:lead 2
+  941 set :buildBlock:graphite 0
+  942 set :buildBlock:silicon 0
+  943 set :buildBlock:titanium 0
+  944 set :buildBlock:metaglass 0
+  945 set :buildBlock:rotation 0
+  946 set :buildBlock:config @coal
   947 setaddr :buildBlock*retaddr *label195 (h:*label195)
   948 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
   949 label *label195
 
   953 multilabel *label194 (m:marker16)
   954 label *label193
   955 label *label190
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  956 write 0 processor1 ".totalTargets"
+  957 write null processor1 ".nextBlock"
   958 label *label196
   959 setaddr :supplyBase*retaddr *label199 (h:*label199)
   960 call *label21 *invalid :supplyBase*retval (m:*label199) (h:*label199)
   961 label *label199
   962 label *label197
-    * read *tmp35 .controller ".flares"
-    * read *tmp34 .controller ".monos"
+  963 read *tmp35 *tmp126 ".flares"
+  964 read *tmp34 *tmp126 ".monos"
   965 op add *tmp215 *tmp35 *tmp34
   966 jump *label196 lessThan *tmp215 16
   967 label *label198
 
   973 jump *label200 always
   974 label *label202
   975 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+  976 set .ERROR "Done"
   977 stop
   978 label *label204
   979 end
   980 label *label5
   981 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+  982 write "Moving..." .display ".status3"
   983 label *label207
   984 label *label208
   985 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
 
   995 label *label6
   996 set *tmp220 :moveTo.1:x
   997 set *tmp221 :moveTo.1:y
-    * set :moveTo:x *tmp220
-    * set :moveTo:y *tmp221
+  998 set :moveTo:x :moveTo.1:x
+  999 set :moveTo:y :moveTo.1:y
  1000 set :moveTo:radius 6
  1001 setaddr :moveTo*retaddr *label212 (h:*label212)
  1002 call *label5 *invalid :moveTo*retval (m:*label212) (h:*label212)
 
  1006 end
  1007 label *label7
  1008 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+ 1009 write "Moving..." .display ".status3"
  1010 label *label214
  1011 label *label215
  1012 sensor *tmp222 @unit @firstItem
 
  1036 end
  1037 label *label9
  1038 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1039 write "Depositing..." .display ".status3"
  1040 label *label223
  1041 sensor *tmp229 @unit @firstItem
  1042 jump *label224 notEqual *tmp229 :depositItems:item
 
  1066 label *label225
  1067 set :transportStatus:target 0
  1068 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1069 write 0 .display ".transportTarget"
+ 1070 write null .display ".transportItem"
  1071 label *label233
  1072 label *label222
  1073 return :depositItems*retaddr
 
  1076 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp239 0
  1077 jump *label235 notEqual *tmp239 false
  1078 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+ 1079 set .ERROR "Cannot locate ore"
  1080 stop
  1081 label *label237
  1082 label *label235
 
  1088 op min :mineOre:amount :mineOre:amount 30
  1089 set :transportStatus.1:target :mineOre:amount
  1090 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1091 write :mineOre:amount .display ".transportTarget"
+ 1092 write :mineOre:ore .display ".transportItem"
  1093 label *label239
  1094 set :locateOre:ore :mineOre:ore
  1095 setaddr :locateOre*retaddr *label240 (h:*label240)
 
  1097 label *label240
  1098 set :mineOre:x :locateOre:x
  1099 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1100 set :moveToEmpty:x :locateOre:x
+ 1101 set :moveToEmpty:y :locateOre:y
  1102 setaddr :moveToEmpty*retaddr *label241 (h:*label241)
  1103 call *label7 *invalid :moveToEmpty*retval (m:*label241) (h:*label241)
  1104 label *label241
 
  1115 label *label242
  1116 label *label243
  1117 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1118 write "Mining..." .display ".status3"
  1119 label *label248
  1120 op mul :second:result @second TIME_COMPRESS
  1121 set *tmp249 :second:result
  1122 label *label249
-    * op add :mineOre:stop *tmp249 10
+ 1123 op add :mineOre:stop :second:result 10
  1124 label *label250
  1125 sensor :mineOre:item @unit @firstItem
  1126 op notEqual *tmp252 :mineOre:item null
 
  1134 op mul :second.1:result @second TIME_COMPRESS
  1135 set *tmp256 :second.1:result
  1136 label *label255
-    * jump *label256 lessThanEq *tmp256 :mineOre:stop
+ 1137 jump *label256 lessThanEq :second.1:result :mineOre:stop
  1138 jump *label252 always
  1139 label *label256
  1140 label *label257
 
  1155 set :status2:text "Mining "
  1156 set :status2:item :mineOre.1:ore
  1157 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1158 write "Mining " .display ".status2"
+ 1159 write :mineOre.1:ore .display ".item2"
+ 1160 write "core" .display ".block2"
  1161 label *label260
  1162 set :mineOre:ore :mineOre.1:ore
  1163 set :mineOre:amount 30
 
  1172 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1173 set :transportStatus.2:item :fetchBlock:item
  1174 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1175 write :fetchBlock:item .display ".transportItem"
  1176 label *label263
  1177 set :status2.1:text "Fetching "
  1178 set :status2.1:item :fetchBlock:item
  1179 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1180 write "Fetching " .display ".status2"
+ 1181 write :fetchBlock:item .display ".item2"
+ 1182 write :fetchBlock:block .display ".block2"
  1183 label *label264
  1184 sensor *tmp263 :fetchBlock:block @x
  1185 sensor *tmp264 :fetchBlock:block @y
 
  1256 sensor *tmp291 .press @coal
  1257 jump *label291 greaterThanEq *tmp291 5
  1258 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1259 write "Goal 1: graphite requirement" .display ".status1"
  1260 label *label293
  1261 set :supplyBlock:block .press
  1262 set :supplyBlock:ore @coal
  1263 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1264 set :status2.2:item @coal
+ 1265 set :status2.2:block .press
+ 1266 write "Supplying " .display ".status2"
+ 1267 write :supplyBlock:ore .display ".item2"
+ 1268 write :supplyBlock:block .display ".block2"
  1269 label *label295
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp295 :supplyBlock:block :supplyBlock:ore
+ 1270 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1271 sensor *tmp295 .press @coal
  1272 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp295
  1273 jump *label296 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1274 set :mineOre:ore @coal
  1275 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1276 set :mineOre:block .press
  1277 setaddr :mineOre*retaddr *label298 (h:*label298)
  1278 call *label11 *invalid :mineOre*retval (m:*label298) (h:*label298)
  1279 label *label298
 
  1290 sensor *tmp302 .smelter @coal
  1291 jump *label301 greaterThanEq *tmp302 5
  1292 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1293 write "Goal 2: coal for silicon requirement" .display ".status1"
  1294 label *label303
  1295 set :supplyBlock.1:block .smelter
  1296 set :supplyBlock.1:ore @coal
  1297 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1298 set :status2.3:item @coal
+ 1299 set :status2.3:block .smelter
+ 1300 write "Supplying " .display ".status2"
+ 1301 write :supplyBlock.1:ore .display ".item2"
+ 1302 write :supplyBlock.1:block .display ".block2"
  1303 label *label305
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp306 :supplyBlock.1:block :supplyBlock.1:ore
+ 1304 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1305 sensor *tmp306 .smelter @coal
  1306 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp306
  1307 jump *label306 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1308 set :mineOre:ore @coal
  1309 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1310 set :mineOre:block .smelter
  1311 setaddr :mineOre*retaddr *label308 (h:*label308)
  1312 call *label11 *invalid :mineOre*retval (m:*label308) (h:*label308)
  1313 label *label308
 
  1320 sensor *tmp310 .smelter @sand
  1321 jump *label309 greaterThanEq *tmp310 5
  1322 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1323 write "Goal 3: sand for silicon requirement" .display ".status1"
  1324 label *label311
  1325 set :supplyBlock.2:block .smelter
  1326 set :supplyBlock.2:ore @sand
  1327 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1328 set :status2.4:item @sand
+ 1329 set :status2.4:block .smelter
+ 1330 write "Supplying " .display ".status2"
+ 1331 write :supplyBlock.2:ore .display ".item2"
+ 1332 write :supplyBlock.2:block .display ".block2"
  1333 label *label313
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp314 :supplyBlock.2:block :supplyBlock.2:ore
+ 1334 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1335 sensor *tmp314 .smelter @sand
  1336 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp314
  1337 jump *label314 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1338 set :mineOre:ore @sand
  1339 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1340 set :mineOre:block .smelter
  1341 setaddr :mineOre*retaddr *label316 (h:*label316)
  1342 call *label11 *invalid :mineOre*retval (m:*label316) (h:*label316)
  1343 label *label316
 
  1355 sensor *tmp321 .generator @coal
  1356 jump *label319 greaterThanEq *tmp321 2
  1357 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1358 write "Goal 4: supplying generator" .display ".status1"
  1359 label *label321
  1360 set :supplyBlock.3:block .generator
  1361 set :supplyBlock.3:ore @coal
  1362 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1363 set :status2.5:item @coal
+ 1364 set :status2.5:block .generator
+ 1365 write "Supplying " .display ".status2"
+ 1366 write :supplyBlock.3:ore .display ".item2"
+ 1367 write :supplyBlock.3:block .display ".block2"
  1368 label *label323
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp325 :supplyBlock.3:block :supplyBlock.3:ore
+ 1369 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1370 sensor *tmp325 .generator @coal
  1371 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp325
  1372 jump *label324 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1373 set :mineOre:ore @coal
  1374 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1375 set :mineOre:block .generator
  1376 setaddr :mineOre*retaddr *label326 (h:*label326)
  1377 call *label11 *invalid :mineOre*retval (m:*label326) (h:*label326)
  1378 label *label326
 
  1397 label *label328
  1398 set :supplyBase0:titaniumTrigger *tmp331
  1399 sensor *tmp335 .titaniumDrill @titanium
-    * jump *label329 greaterThanEq *tmp335 :supplyBase0:titaniumTrigger
+ 1400 jump *label329 greaterThanEq *tmp335 *tmp331
  1401 jump *label331 notEqual :supplyBase0:supplied false
  1402 sensor *tmp340 .battery @totalPower
  1403 op mul *tmp341 .unloader1 .powerTarget
  1404 jump *label333 greaterThanEq *tmp340 *tmp341
  1405 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1406 write "Goal 5: supplying generator" .display ".status1"
  1407 label *label335
  1408 set :mineOre.1:ore @coal
  1409 setaddr :mineOre.1*retaddr *label336 (h:*label336)
 
  1414 sensor *tmp344 .core @silicon
  1415 jump *label337 greaterThanEq *tmp344 .targetSilicon
  1416 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1417 write "Goal 6: silicon requirement" .display ".status1"
  1418 label *label339
  1419 sensor :supplyBase0:coal .core @coal
  1420 sensor :supplyBase0:sand .core @sand
 
  1425 set *tmp350 @sand
  1426 label *label341
  1427 set :supplyBase0:ore *tmp350
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1428 set :mineOre.1:ore *tmp350
  1429 setaddr :mineOre.1*retaddr *label342 (h:*label342)
  1430 call *label12 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
  1431 label *label342
 
  1434 sensor *tmp351 .core @copper
  1435 jump *label343 greaterThanEq *tmp351 .targetCopper
  1436 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1437 write "Goal 7: copper requirement" .display ".status1"
  1438 label *label345
  1439 set :mineOre.1:ore @copper
  1440 setaddr :mineOre.1*retaddr *label346 (h:*label346)
 
  1445 sensor *tmp354 .core @lead
  1446 jump *label347 greaterThanEq *tmp354 .targetLead
  1447 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1448 write "Goal 8: lead requirement" .display ".status1"
  1449 label *label349
  1450 set :mineOre.1:ore @lead
  1451 setaddr :mineOre.1*retaddr *label350 (h:*label350)
 
  1456 sensor *tmp357 .core @metaglass
  1457 jump *label351 greaterThanEq *tmp357 .targetMetaglass
  1458 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1459 write "Goal 9: metaglass requirement" .display ".status1"
  1460 label *label353
  1461 set :mineOre.1:ore @sand
  1462 setaddr :mineOre.1*retaddr *label354 (h:*label354)
 
  1465 jump *label352 always
  1466 label *label351
  1467 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1468 write "Goal 10: supplying base" .display ".status1"
  1469 label *label355
  1470 sensor :supplyBase0:coal.1 .core @coal
  1471 sensor :supplyBase0:sand.1 .core @sand
 
  1476 set *tmp363 @sand
  1477 label *label357
  1478 set :supplyBase0:ore.1 *tmp363
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1479 set :mineOre.1:ore *tmp363
  1480 setaddr :mineOre.1*retaddr *label358 (h:*label358)
  1481 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
  1482 label *label358
 
  1490 jump *label330 always
  1491 label *label329
  1492 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1493 write "Goal 11: Fetching titanium" .display ".status1"
  1494 label *label359
  1495 set :fetchBlock:block .titaniumDrill
  1496 set :fetchBlock:item @titanium
 
  1503 end
  1504 label *label20
  1505 set :status1.11:text "Phase 1: supplying base"
-    * write :status1.11:text .display ".status1"
+ 1506 write "Phase 1: supplying base" .display ".status1"
  1507 label *label362
  1508 set :mineOre.1:ore @coal
  1509 setaddr :mineOre.1*retaddr *label363 (h:*label363)
 
  1556 label *label371
  1557 set :targetMet*retval false
  1558 jump *label369 always
-    * set :targetMet*retval null
  1559 label *label369
  1560 return :targetMet*retaddr
  1561 end
 
  1640 op mul :second.2:result @second TIME_COMPRESS
  1641 set *tmp399 :second.2:result
  1642 label *label398
-    * op floor *tmp400 *tmp399
+ 1643 op floor *tmp400 :second.2:result
  1644 op mul *tmp401 *tmp400 1000
  1645 op add *tmp402 :log:encodedId *tmp401
-    * write *tmp402 bank1 *tmp397
+ 1646 write *tmp402 bank1 *tmp396
  1647 label *label397
  1648 return :log*retaddr
  1649 end
 
  1662 call *label6 *invalid :moveTo.1*retval (m:*label402) (h:*label402)
  1663 label *label402
  1664 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1665 write "Building..." .display ".status3"
  1666 label *label403
  1667 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1668 jump *label404 equal :buildBlockAt:building null
 
  1677 label *label408
  1678 label *label409
  1679 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1680 set .ERROR "Cannot build at ("
  1681 stop
  1682 label *label410
  1683 label *label404
 
  1700 label *label416
  1701 set :buildBlockAt*retval :buildBlockAt:building
  1702 jump *label401 always
-    * set :buildBlockAt*retval null
  1703 label *label401
  1704 return :buildBlockAt*retaddr
  1705 end
 
  1725 label *label419
  1726 set :buildBlock*retval :buildBlockAt*retval
  1727 jump *label417 always
-    * set :buildBlock*retval null
  1728 label *label417
  1729 return :buildBlock*retaddr
  1730 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-258 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .phase 0
     8 set .graphiteSurplus 20
     9 set .siliconSurplus 20
    10 set .metaglassSurplus 20
 
    17 jump *label29 equal .core null
    18 label *label31
    19 set .display processor1
-    * set .flareController processor3
-    * set .oreLocator processor4
    20 set :findUnits:type @mono
    21 setaddr :findUnits*retaddr *label32 (h:*label32)
    22 call *label28 *invalid :findUnits*retval (m:*label32) (h:*label32)
 
    35 label *label34
    36 write :findUnits:count processor1 ".polys"
    37 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    38 label *label36
    39 op add :buildBlockFromCfg:x .coreX -1.5
    40 op add :buildBlockFromCfg:y .coreY 2.5
 
    60 label *label38
    61 label *label35
    62 set .press *tmp87
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    63 label *label42
    64 op add :buildBlockFromCfg.1:x .coreX 0
    65 op add :buildBlockFromCfg.1:y .coreY 4
 
    85 label *label44
    86 label *label41
    87 set .battery *tmp91
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    88 label *label48
    89 op add :buildBlockFromCfg.2:x .coreX -1
    90 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    91 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   92 set :buildBlock:y :buildBlockFromCfg.1:y
    93 set :buildBlock:graphite 0
    94 set :buildBlock:silicon 0
    95 set :buildBlock:titanium 0
 
   105 multilabel *label51 (m:marker2)
   106 label *label50
   107 label *label47
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   108 label *label54
   109 op add :buildBlockFromCfg.3:x .coreX 0
   110 op add :buildBlockFromCfg.3:y .coreY 3
   111 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  112 set :buildBlock:x :buildBlockFromCfg.1:x
   113 set :buildBlock:y :buildBlockFromCfg.3:y
   114 set :buildBlock:copper 25
   115 set :buildBlock:lead 15
 
   131 label *label53
   132 set .generator *tmp99
   133 set .powerTarget 800
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   134 label *label60
   135 op add :buildBlockFromCfg.4:x .coreX 1.5
   136 op add :buildBlockFromCfg.4:y .coreY 2.5
   137 set :buildBlock:block @silicon-smelter
   138 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  139 set :buildBlock:y :buildBlockFromCfg:y
   140 set :buildBlock:copper 30
   141 set :buildBlock:lead 25
   142 set :buildBlock:graphite 0
 
   185 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   186 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   187 jump *label69 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   188 set .ERROR "Cannot locate spot for titanium drill"
   189 stop
   190 label *label71
 
   204 jump *label65 always
   205 label *label65
   206 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp107 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  207 write :buildBlockAt*retval processor1 ".titaniumDrill"
   208 label *label74
   209 op add :buildBlockFromCfg.5:x .coreX 0
   210 op add :buildBlockFromCfg.5:y .coreY 2
   211 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  212 set :buildBlock:x :buildBlockFromCfg.1:x
   213 set :buildBlock:y :buildBlockFromCfg.5:y
   214 set :buildBlock:copper 0
   215 set :buildBlock:lead 0
 
   230 label *label76
   231 label *label73
   232 set .unloader1 *tmp122
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   233 label *label80
   234 op add :buildBlockFromCfg.6:x .coreX 1
   235 op add :buildBlockFromCfg.6:y .coreY 4
   236 set :buildBlock:block @micro-processor
   237 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  238 set :buildBlock:y :buildBlockFromCfg.1:y
   239 set :buildBlock:copper 90
   240 set :buildBlock:lead 50
   241 set :buildBlock:graphite 0
 
   265 write :monos *tmp126 ".monos"
   266 write :flares *tmp126 ".flares"
   267 write :polys *tmp126 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   268 label *label86
   269 op add :buildBlockFromCfg.7:x .coreX -2
   270 op add :buildBlockFromCfg.7:y .coreY -1
 
   288 multilabel *label89 (m:marker7)
   289 label *label88
   290 label *label85
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 1
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   291 label *label92
   292 op add :buildBlockFromCfg.8:x .coreX -2
   293 op add :buildBlockFromCfg.8:y .coreY 1
   294 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  295 set :buildBlock:x :buildBlockFromCfg.7:x
   296 set :buildBlock:y :buildBlockFromCfg.8:y
   297 set :buildBlock:copper 0
   298 set :buildBlock:lead 0
 
   312 multilabel *label95 (m:marker8)
   313 label *label94
   314 label *label91
-    * set .unloader2 *tmp134
   315 write *tmp134 *tmp126 ".unloader2"
-    * set :buildBlockFromCfg.9:block @overflow-gate
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 4
-    * set :buildBlockFromCfg.9:lead 2
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   316 label *label98
   317 op add :buildBlockFromCfg.9:x .coreX -3
   318 op add :buildBlockFromCfg.9:y .coreY 1
   319 set :buildBlock:block @overflow-gate
   320 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  321 set :buildBlock:y :buildBlockFromCfg.8:y
   322 set :buildBlock:copper 4
   323 set :buildBlock:lead 2
   324 set :buildBlock:graphite 0
 
   336 multilabel *label101 (m:marker9)
   337 label *label100
   338 label *label97
-    * set :buildBlockFromCfg.10:block @air-factory
-    * set :buildBlockFromCfg.10:offsetX -4
-    * set :buildBlockFromCfg.10:offsetY -1
-    * set :buildBlockFromCfg.10:copper 60
-    * set :buildBlockFromCfg.10:lead 70
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 3
-    * set :buildBlockFromCfg.10:config @mono
   339 label *label104
   340 op add :buildBlockFromCfg.10:x .coreX -4
   341 op add :buildBlockFromCfg.10:y .coreY -1
   342 set :buildBlock:block @air-factory
   343 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  344 set :buildBlock:y :buildBlockFromCfg.7:y
   345 set :buildBlock:copper 60
   346 set :buildBlock:lead 70
   347 set :buildBlock:graphite 0
 
   360 multilabel *label107 (m:marker10)
   361 label *label106
   362 label *label103
-    * set .factory *tmp142
   363 write *tmp142 *tmp126 ".factory"
   364 write *tmp142 processor1 ".factory"
   365 write 2 *tmp126 ".flareTarget"
-    * set :buildUnits:unit @flare
   366 write 0 processor1 ".totalTargets"
   367 write null processor1 ".nextBlock"
   368 write 0 *tmp126 ".leadReserve"
   369 write 0 *tmp126 ".siliconReserve"
   370 write @flare *tmp126 ".unitToProduce"
   371 label *label109
-    * op add .phase 0 1
   372 write 85 *tmp126 ".pressTarget"
   373 write 150 *tmp126 ".smelterTarget"
   374 write 30 *tmp126 ".kilnTarget"
 
   421 wait 1e-15
   422 read *tmp164 processor3 ":start*finished"
   423 jump *label120 equal *tmp164 false
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   424 label *label122
   425 op add :buildBlockFromCfg.11:x .coreX 2
   426 op add :buildBlockFromCfg.11:y .coreY 0
 
   429 set :buildBlock:y :buildBlockFromCfg.11:y
   430 set :buildBlock:copper 0
   431 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   432 set :buildBlock:silicon 30
   433 set :buildBlock:titanium 25
   434 set :buildBlock:metaglass 0
 
   443 multilabel *label125 (m:marker11)
   444 label *label124
   445 label *label121
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   446 label *label128
   447 op add :buildBlockFromCfg.12:x .coreX 3.5
   448 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   467 multilabel *label131 (m:marker12)
   468 label *label130
   469 label *label127
-    * set .kiln *tmp169
   470 write *tmp169 *tmp126 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   471 label *label134
   472 op add :buildBlockFromCfg.13:x .coreX 2
   473 op add :buildBlockFromCfg.13:y .coreY 1
   474 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  475 set :buildBlock:x :buildBlockFromCfg.11:x
+  476 set :buildBlock:y :buildBlockFromCfg.8:y
   477 set :buildBlock:copper 3
   478 set :buildBlock:lead 0
   479 set :buildBlock:graphite 0
 
   491 multilabel *label137 (m:marker13)
   492 label *label136
   493 label *label133
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   494 label *label140
   495 op add :buildBlockFromCfg.14:x .coreX -3.5
   496 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   500 set :buildBlock:copper 30
   501 set :buildBlock:lead 30
   502 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   503 set :buildBlock:titanium 0
   504 set :buildBlock:metaglass 30
   505 set :buildBlock:rotation 0
 
   513 multilabel *label143 (m:marker14)
   514 label *label142
   515 label *label139
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   516 label *label146
   517 op add :buildBlockFromCfg.15:x .coreX -3.5
   518 op add :buildBlockFromCfg.15:y .coreY 2.5
   519 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  520 set :buildBlock:x :buildBlockFromCfg.14:x
+  521 set :buildBlock:y :buildBlockFromCfg:y
   522 set :buildBlock:copper 35
   523 set :buildBlock:lead 40
   524 set :buildBlock:graphite 25
 
   526 set :buildBlock:titanium 0
   527 set :buildBlock:metaglass 0
   528 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   529 setaddr :buildBlock*retaddr *label150 (h:*label150)
   530 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   531 label *label150
 
   536 multilabel *label149 (m:marker15)
   537 label *label148
   538 label *label145
-    * set .generator2 *tmp181
   539 write *tmp181 *tmp126 ".generator2"
   540 set .graphiteSurplus 200
   541 set .siliconSurplus 1000
 
   589 jump *label165 equal *tmp194 false
   590 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   591 jump *label166 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   592 set .ERROR "Cannot locate spot for thorium drill"
   593 stop
   594 label *label168
 
   726 read *tmp210 processor3 ":addThoriumDrill*finished"
   727 jump *label189 equal *tmp210 false
   728 label *label162
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   729 label *label191
   730 op add :buildBlockFromCfg.16:x .coreX -4
   731 op add :buildBlockFromCfg.16:y .coreY 1
   732 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  733 set :buildBlock:x :buildBlockFromCfg.10:x
+  734 set :buildBlock:y :buildBlockFromCfg.8:y
   735 set :buildBlock:copper 2
   736 set :buildBlock:lead 2
   737 set :buildBlock:graphite 0
   738 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   739 set :buildBlock:config @coal
   740 setaddr :buildBlock*retaddr *label195 (h:*label195)
   741 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
 
   771 label *label204
   772 end
   773 label *label5
-    * set :status3:text "Moving..."
   774 write "Moving..." .display ".status3"
   775 label *label207
   776 label *label208
 
   785 return :moveTo*retaddr
   786 end
   787 label *label6
-    * set *tmp220 :moveTo.1:x
-    * set *tmp221 :moveTo.1:y
   788 set :moveTo:x :moveTo.1:x
   789 set :moveTo:y :moveTo.1:y
   790 set :moveTo:radius 6
 
   795 return :moveTo.1*retaddr
   796 end
   797 label *label7
-    * set :status3.1:text "Moving..."
   798 write "Moving..." .display ".status3"
   799 label *label214
   800 label *label215
 
   824 return :moveToBlock*retaddr
   825 end
   826 label *label9
-    * set :status3.2:text "Depositing..."
   827 write "Depositing..." .display ".status3"
   828 label *label223
   829 sensor *tmp229 @unit @firstItem
 
   852 jump *label230 always
   853 label *label232
   854 label *label225
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   855 write 0 .display ".transportTarget"
   856 write null .display ".transportItem"
   857 label *label233
 
   861 label *label10
   862 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp239 0
   863 jump *label235 notEqual *tmp239 false
-    * set :error.3:error "Cannot locate ore"
   864 set .ERROR "Cannot locate ore"
   865 stop
   866 label *label237
 
   871 end
   872 label *label11
   873 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   874 write :mineOre:amount .display ".transportTarget"
   875 write :mineOre:ore .display ".transportItem"
   876 label *label239
 
   897 label *label244
   898 label *label242
   899 label *label243
-    * set :status3.3:text "Mining..."
   900 write "Mining..." .display ".status3"
   901 label *label248
   902 op mul :second:result @second TIME_COMPRESS
-    * set *tmp249 :second:result
   903 label *label249
   904 op add :mineOre:stop :second:result 10
   905 label *label250
 
   913 label *label254
   914 ucontrol mine :mineOre:x :mineOre:y
   915 op mul :second.1:result @second TIME_COMPRESS
-    * set *tmp256 :second.1:result
   916 label *label255
   917 jump *label256 lessThanEq :second.1:result :mineOre:stop
   918 jump *label252 always
 
   932 return :mineOre*retaddr
   933 end
   934 label *label12
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   935 write "Mining " .display ".status2"
   936 write :mineOre.1:ore .display ".item2"
   937 write "core" .display ".block2"
 
   947 end
   948 label *label13
   949 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
   950 write :transportStatus.2:target .display ".transportTarget"
   951 write :fetchBlock:item .display ".transportItem"
   952 label *label263
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   953 write "Fetching " .display ".status2"
   954 write :fetchBlock:item .display ".item2"
   955 write :fetchBlock:block .display ".block2"
 
  1028 jump *label289 greaterThanEq *tmp288 .targetGraphite
  1029 sensor *tmp291 .press @coal
  1030 jump *label291 greaterThanEq *tmp291 5
-    * set :status1:text "Goal 1: graphite requirement"
  1031 write "Goal 1: graphite requirement" .display ".status1"
  1032 label *label293
  1033 set :supplyBlock:block .press
  1034 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1035 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1036 write @coal .display ".item2"
+ 1037 write .press .display ".block2"
  1038 label *label295
  1039 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1040 sensor *tmp295 .press @coal
 
  1058 jump *label299 greaterThanEq *tmp299 .targetSilicon
  1059 sensor *tmp302 .smelter @coal
  1060 jump *label301 greaterThanEq *tmp302 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1061 write "Goal 2: coal for silicon requirement" .display ".status1"
  1062 label *label303
  1063 set :supplyBlock.1:block .smelter
  1064 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1065 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1066 write @coal .display ".item2"
+ 1067 write .smelter .display ".block2"
  1068 label *label305
  1069 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1070 sensor *tmp306 .smelter @coal
 
  1084 label *label301
  1085 sensor *tmp310 .smelter @sand
  1086 jump *label309 greaterThanEq *tmp310 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1087 write "Goal 3: sand for silicon requirement" .display ".status1"
  1088 label *label311
  1089 set :supplyBlock.2:block .smelter
  1090 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1091 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1092 write @sand .display ".item2"
+ 1093 write .smelter .display ".block2"
  1094 label *label313
  1095 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1096 sensor *tmp314 .smelter @sand
 
  1115 jump *label317 greaterThanEq *tmp318 .powerTarget
  1116 sensor *tmp321 .generator @coal
  1117 jump *label319 greaterThanEq *tmp321 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1118 write "Goal 4: supplying generator" .display ".status1"
  1119 label *label321
  1120 set :supplyBlock.3:block .generator
  1121 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1122 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1123 write @coal .display ".item2"
+ 1124 write .generator .display ".block2"
  1125 label *label323
  1126 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1127 sensor *tmp325 .generator @coal
 
  1152 label *label327
  1153 set *tmp331 100
  1154 label *label328
-    * set :supplyBase0:titaniumTrigger *tmp331
  1155 sensor *tmp335 .titaniumDrill @titanium
  1156 jump *label329 greaterThanEq *tmp335 *tmp331
  1157 jump *label331 notEqual :supplyBase0:supplied false
  1158 sensor *tmp340 .battery @totalPower
  1159 op mul *tmp341 .unloader1 .powerTarget
  1160 jump *label333 greaterThanEq *tmp340 *tmp341
-    * set :status1.4:text "Goal 5: supplying generator"
  1161 write "Goal 5: supplying generator" .display ".status1"
  1162 label *label335
  1163 set :mineOre.1:ore @coal
 
  1168 label *label333
  1169 sensor *tmp344 .core @silicon
  1170 jump *label337 greaterThanEq *tmp344 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1171 write "Goal 6: silicon requirement" .display ".status1"
  1172 label *label339
  1173 sensor :supplyBase0:coal .core @coal
 
  1178 label *label340
  1179 set *tmp350 @sand
  1180 label *label341
-    * set :supplyBase0:ore *tmp350
  1181 set :mineOre.1:ore *tmp350
  1182 setaddr :mineOre.1*retaddr *label342 (h:*label342)
  1183 call *label12 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
 
  1186 label *label337
  1187 sensor *tmp351 .core @copper
  1188 jump *label343 greaterThanEq *tmp351 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1189 write "Goal 7: copper requirement" .display ".status1"
  1190 label *label345
  1191 set :mineOre.1:ore @copper
 
  1196 label *label343
  1197 sensor *tmp354 .core @lead
  1198 jump *label347 greaterThanEq *tmp354 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1199 write "Goal 8: lead requirement" .display ".status1"
  1200 label *label349
  1201 set :mineOre.1:ore @lead
 
  1206 label *label347
  1207 sensor *tmp357 .core @metaglass
  1208 jump *label351 greaterThanEq *tmp357 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1209 write "Goal 9: metaglass requirement" .display ".status1"
  1210 label *label353
  1211 set :mineOre.1:ore @sand
 
  1214 label *label354
  1215 jump *label352 always
  1216 label *label351
-    * set :status1.9:text "Goal 10: supplying base"
  1217 write "Goal 10: supplying base" .display ".status1"
  1218 label *label355
  1219 sensor :supplyBase0:coal.1 .core @coal
 
  1224 label *label356
  1225 set *tmp363 @sand
  1226 label *label357
-    * set :supplyBase0:ore.1 *tmp363
  1227 set :mineOre.1:ore *tmp363
  1228 setaddr :mineOre.1*retaddr *label358 (h:*label358)
  1229 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
 
  1237 label *label332
  1238 jump *label330 always
  1239 label *label329
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1240 write "Goal 11: Fetching titanium" .display ".status1"
  1241 label *label359
  1242 set :fetchBlock:block .titaniumDrill
 
  1249 return :supplyBase0*retaddr
  1250 end
  1251 label *label20
-    * set :status1.11:text "Phase 1: supplying base"
  1252 write "Phase 1: supplying base" .display ".status1"
  1253 label *label362
  1254 set :mineOre.1:ore @coal
 
  1382 read *tmp76 bank1 511
  1383 op sub *tmp396 *tmp76 1
  1384 write *tmp396 bank1 511
-    * set *tmp397 *tmp396
  1385 op mul :second.2:result @second TIME_COMPRESS
-    * set *tmp399 :second.2:result
  1386 label *label398
  1387 op floor *tmp400 :second.2:result
  1388 op mul *tmp401 *tmp400 1000
 
  1405 setaddr :moveTo.1*retaddr *label402 (h:*label402)
  1406 call *label6 *invalid :moveTo.1*retval (m:*label402) (h:*label402)
  1407 label *label402
-    * set :status3.4:text "Building..."
  1408 write "Building..." .display ".status3"
  1409 label *label403
  1410 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1419 jump *label401 always
  1420 label *label408
  1421 label *label409
-    * set :error.4:error "Cannot build at ("
  1422 set .ERROR "Cannot build at ("
  1423 stop
  1424 label *label410

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-28 instructions):
 
    87 set .battery *tmp91
    88 label *label48
    89 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    90 set :buildBlock:x :buildBlockFromCfg.2:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
    92 set :buildBlock:graphite 0
 
   105 label *label50
   106 label *label47
   107 label *label54
-    * op add :buildBlockFromCfg.3:x .coreX 0
   108 op add :buildBlockFromCfg.3:y .coreY 3
   109 set :buildBlock:block @combustion-generator
   110 set :buildBlock:x :buildBlockFromCfg.1:x
 
   131 set .powerTarget 800
   132 label *label60
   133 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   134 set :buildBlock:block @silicon-smelter
   135 set :buildBlock:x :buildBlockFromCfg.4:x
   136 set :buildBlock:y :buildBlockFromCfg:y
 
   203 set .titaniumDrill :buildBlockAt*retval
   204 write :buildBlockAt*retval processor1 ".titaniumDrill"
   205 label *label74
-    * op add :buildBlockFromCfg.5:x .coreX 0
   206 op add :buildBlockFromCfg.5:y .coreY 2
   207 set :buildBlock:block @unloader
   208 set :buildBlock:x :buildBlockFromCfg.1:x
 
   228 set .unloader1 *tmp122
   229 label *label80
   230 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   231 set :buildBlock:block @micro-processor
   232 set :buildBlock:x :buildBlockFromCfg.6:x
   233 set :buildBlock:y :buildBlockFromCfg.1:y
 
   284 label *label88
   285 label *label85
   286 label *label92
-    * op add :buildBlockFromCfg.8:x .coreX -2
   287 op add :buildBlockFromCfg.8:y .coreY 1
   288 set :buildBlock:block @unloader
   289 set :buildBlock:x :buildBlockFromCfg.7:x
 
   309 write *tmp134 *tmp126 ".unloader2"
   310 label *label98
   311 op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY 1
   312 set :buildBlock:block @overflow-gate
   313 set :buildBlock:x :buildBlockFromCfg.9:x
   314 set :buildBlock:y :buildBlockFromCfg.8:y
 
   331 label *label97
   332 label *label104
   333 op add :buildBlockFromCfg.10:x .coreX -4
-    * op add :buildBlockFromCfg.10:y .coreY -1
   334 set :buildBlock:block @air-factory
   335 set :buildBlock:x :buildBlockFromCfg.10:x
   336 set :buildBlock:y :buildBlockFromCfg.7:y
   337 set :buildBlock:copper 60
   338 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   339 set :buildBlock:silicon 0
   340 set :buildBlock:titanium 0
   341 set :buildBlock:metaglass 0
 
   460 label *label127
   461 write *tmp169 *tmp126 ".kiln"
   462 label *label134
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   463 set :buildBlock:block @junction
   464 set :buildBlock:x :buildBlockFromCfg.11:x
   465 set :buildBlock:y :buildBlockFromCfg.8:y
   466 set :buildBlock:copper 3
   467 set :buildBlock:lead 0
   468 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   469 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   470 set :buildBlock:rotation 0
   471 set :buildBlock:config null
   472 setaddr :buildBlock*retaddr *label138 (h:*label138)
 
   490 set :buildBlock:titanium 0
   491 set :buildBlock:metaglass 30
   492 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   493 setaddr :buildBlock*retaddr *label144 (h:*label144)
   494 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   495 label *label144
 
   500 label *label142
   501 label *label139
   502 label *label146
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   503 set :buildBlock:block @steam-generator
   504 set :buildBlock:x :buildBlockFromCfg.14:x
   505 set :buildBlock:y :buildBlockFromCfg:y
 
   507 set :buildBlock:lead 40
   508 set :buildBlock:graphite 25
   509 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   510 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   511 setaddr :buildBlock*retaddr *label150 (h:*label150)
   512 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   513 label *label150
 
   709 jump *label189 equal *tmp210 false
   710 label *label162
   711 label *label191
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
   712 set :buildBlock:block @sorter
   713 set :buildBlock:x :buildBlockFromCfg.10:x
   714 set :buildBlock:y :buildBlockFromCfg.8:y
 
  1010 jump *label291 greaterThanEq *tmp291 5
  1011 write "Goal 1: graphite requirement" .display ".status1"
  1012 label *label293
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
  1013 write "Supplying " .display ".status2"
  1014 write @coal .display ".item2"
  1015 write .press .display ".block2"
 
  1038 jump *label301 greaterThanEq *tmp302 5
  1039 write "Goal 2: coal for silicon requirement" .display ".status1"
  1040 label *label303
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1041 write "Supplying " .display ".status2"
  1042 write @coal .display ".item2"
  1043 write .smelter .display ".block2"
 
  1062 jump *label309 greaterThanEq *tmp310 5
  1063 write "Goal 3: sand for silicon requirement" .display ".status1"
  1064 label *label311
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1065 write "Supplying " .display ".status2"
  1066 write @sand .display ".item2"
  1067 write .smelter .display ".block2"
 
  1091 jump *label319 greaterThanEq *tmp321 2
  1092 write "Goal 4: supplying generator" .display ".status1"
  1093 label *label321
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1094 write "Supplying " .display ".status2"
  1095 write @coal .display ".item2"
  1096 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   314 set :buildBlock:y :buildBlockFromCfg.8:y
   315 set :buildBlock:copper 4
   316 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   317 set :buildBlock:silicon 0
   318 set :buildBlock:titanium 0
   319 set :buildBlock:metaglass 0
 
   335 set :buildBlock:y :buildBlockFromCfg.7:y
   336 set :buildBlock:copper 60
   337 set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
   338 set :buildBlock:titanium 0
   339 set :buildBlock:metaglass 0
   340 set :buildBlock:rotation 3
 
   443 set :buildBlock:graphite 30
   444 set :buildBlock:silicon 0
   445 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   446 set :buildBlock:rotation 0
   447 set :buildBlock:config null
   448 setaddr :buildBlock*retaddr *label132 (h:*label132)
 
   465 set :buildBlock:graphite 0
   466 set :buildBlock:titanium 0
   467 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   468 setaddr :buildBlock*retaddr *label138 (h:*label138)
   469 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   470 label *label138
 
   483 set :buildBlock:copper 30
   484 set :buildBlock:lead 30
   485 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
   486 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   487 setaddr :buildBlock*retaddr *label144 (h:*label144)
   488 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   489 label *label144

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   137 set :buildBlock:copper 30
   138 set :buildBlock:lead 25
   139 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   140 set :buildBlock:titanium 0
   141 set :buildBlock:metaglass 0
   142 set :buildBlock:rotation 0
 
   289 set :buildBlock:y :buildBlockFromCfg.8:y
   290 set :buildBlock:copper 0
   291 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   292 set :buildBlock:silicon 30
   293 set :buildBlock:titanium 25
   294 set :buildBlock:metaglass 0
 
   418 set :buildBlock:lead 0
   419 set :buildBlock:silicon 30
   420 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   421 set :buildBlock:rotation 0
   422 set :buildBlock:config null
   423 setaddr :buildBlock*retaddr *label126 (h:*label126)
 
   441 set :buildBlock:silicon 0
   442 set :buildBlock:titanium 0
   443 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   444 setaddr :buildBlock*retaddr *label132 (h:*label132)
   445 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   446 label *label132
 
   459 set :buildBlock:copper 3
   460 set :buildBlock:lead 0
   461 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   462 setaddr :buildBlock*retaddr *label138 (h:*label138)
   463 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   464 label *label138

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   112 set :buildBlock:copper 25
   113 set :buildBlock:lead 15
   114 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   115 set :buildBlock:titanium 0
   116 set :buildBlock:metaglass 0
   117 set :buildBlock:rotation 0
 
   266 set :buildBlock:y :buildBlockFromCfg.7:y
   267 set :buildBlock:copper 2
   268 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   269 set :buildBlock:silicon 0
   270 set :buildBlock:titanium 0
   271 set :buildBlock:metaglass 0
 
   314 set :buildBlock:titanium 0
   315 set :buildBlock:metaglass 0
   316 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   317 setaddr :buildBlock*retaddr *label102 (h:*label102)
   318 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   319 label *label102
 
   330 set :buildBlock:y :buildBlockFromCfg.7:y
   331 set :buildBlock:copper 60
   332 set :buildBlock:lead 70
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   333 set :buildBlock:rotation 3
   334 set :buildBlock:config @mono
   335 setaddr :buildBlock*retaddr *label108 (h:*label108)
 
   435 set :buildBlock:graphite 30
   436 set :buildBlock:silicon 0
   437 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   438 setaddr :buildBlock*retaddr *label132 (h:*label132)
   439 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   440 label *label132

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
    90 set :buildBlock:x :buildBlockFromCfg.2:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
    92 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    93 set :buildBlock:titanium 0
    94 set :buildBlock:metaglass 0
    95 set :buildBlock:rotation 0
 
   230 set :buildBlock:y :buildBlockFromCfg.1:y
   231 set :buildBlock:copper 90
   232 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   233 set :buildBlock:silicon 50
   234 set :buildBlock:titanium 0
   235 set :buildBlock:metaglass 0
 
   265 set :buildBlock:copper 2
   266 set :buildBlock:lead 6
   267 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   268 set :buildBlock:metaglass 0
   269 set :buildBlock:rotation 0
   270 set :buildBlock:config null
 
   288 set :buildBlock:titanium 25
   289 set :buildBlock:metaglass 0
   290 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   291 setaddr :buildBlock*retaddr *label96 (h:*label96)
   292 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   293 label *label96
 
   308 set :buildBlock:lead 2
   309 set :buildBlock:silicon 0
   310 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   311 setaddr :buildBlock*retaddr *label102 (h:*label102)
   312 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   313 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
    71 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    72 set :buildBlock:titanium 0
    73 set :buildBlock:metaglass 0
    74 set :buildBlock:rotation 0
 
   134 set :buildBlock:copper 30
   135 set :buildBlock:lead 25
   136 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   137 set :buildBlock:metaglass 0
   138 set :buildBlock:rotation 0
   139 set :buildBlock:config null
 
   204 set :buildBlock:y :buildBlockFromCfg.5:y
   205 set :buildBlock:copper 0
   206 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   207 set :buildBlock:silicon 30
   208 set :buildBlock:titanium 25
   209 set :buildBlock:metaglass 0
   210 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   211 setaddr :buildBlock*retaddr *label78 (h:*label78)
   212 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   213 label *label78
 
   282 set :buildBlock:lead 0
   283 set :buildBlock:silicon 30
   284 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   285 setaddr :buildBlock*retaddr *label96 (h:*label96)
   286 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   287 label *label96

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
   110 set :buildBlock:copper 25
   111 set :buildBlock:lead 15
   112 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   113 set :buildBlock:metaglass 0
   114 set :buildBlock:rotation 0
   115 set :buildBlock:config null
 
   132 set :buildBlock:y :buildBlockFromCfg:y
   133 set :buildBlock:copper 30
   134 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   135 set :buildBlock:metaglass 0
   136 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   137 setaddr :buildBlock*retaddr *label64 (h:*label64)
   138 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   139 label *label64
 
   258 set :buildBlock:copper 2
   259 set :buildBlock:lead 6
   260 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   261 set :buildBlock:config null
   262 setaddr :buildBlock*retaddr *label90 (h:*label90)
   263 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    89 set :buildBlock:x :buildBlockFromCfg.2:x
    90 set :buildBlock:y :buildBlockFromCfg.1:y
    91 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    92 set :buildBlock:metaglass 0
    93 set :buildBlock:rotation 0
    94 set :buildBlock:config null
 
   108 set :buildBlock:y :buildBlockFromCfg.3:y
   109 set :buildBlock:copper 25
   110 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   111 set :buildBlock:metaglass 0
   112 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   113 setaddr :buildBlock*retaddr *label58 (h:*label58)
   114 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   115 label *label58
 
   222 set :buildBlock:lead 50
   223 set :buildBlock:silicon 50
   224 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   225 set :buildBlock:config processor2
   226 setaddr :buildBlock*retaddr *label84 (h:*label84)
   227 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
    71 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    72 set :buildBlock:metaglass 0
    73 set :buildBlock:rotation 0
    74 set :buildBlock:config null
 
    87 op add :buildBlockFromCfg.2:x .coreX -1
    88 set :buildBlock:x :buildBlockFromCfg.2:x
    89 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    90 set :buildBlock:metaglass 0
    91 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    92 setaddr :buildBlock*retaddr *label52 (h:*label52)
    93 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    94 label *label52
 
   197 set :buildBlock:lead 0
   198 set :buildBlock:silicon 30
   199 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   200 setaddr :buildBlock*retaddr *label78 (h:*label78)
   201 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   202 label *label78

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    68 set :buildBlock:y :buildBlockFromCfg.1:y
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    71 set :buildBlock:metaglass 0
    72 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    73 setaddr :buildBlock*retaddr *label46 (h:*label46)
    74 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    75 label *label46
 
   124 set :buildBlock:y :buildBlockFromCfg:y
   125 set :buildBlock:copper 30
   126 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   127 setaddr :buildBlock*retaddr *label64 (h:*label64)
   128 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   129 label *label64

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-2 instructions):
 
   103 set :buildBlock:y :buildBlockFromCfg.3:y
   104 set :buildBlock:copper 25
   105 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   106 setaddr :buildBlock*retaddr *label58 (h:*label58)
   107 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   108 label *label58

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
    85 op add :buildBlockFromCfg.2:x .coreX -1
    86 set :buildBlock:x :buildBlockFromCfg.2:x
    87 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    88 setaddr :buildBlock*retaddr *label52 (h:*label52)
    89 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    90 label *label52

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    68 set :buildBlock:y :buildBlockFromCfg.1:y
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    71 setaddr :buildBlock*retaddr *label46 (h:*label46)
    72 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    73 label *label46

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    35 label *label34
    36 write :findUnits:count processor1 ".polys"
    37 set :polys :findUnits*retval
+   38 op add :buildBlockFromCfg:x .coreX -1.5
+   39 op add :buildBlockFromCfg:y .coreY 2.5
+   40 set :buildBlock:block @graphite-press
+   41 set :buildBlock:x :buildBlockFromCfg:x
+   42 set :buildBlock:y :buildBlockFromCfg:y
+   43 set :buildBlock:copper 75
+   44 set :buildBlock:lead 30
+   45 set :buildBlock:graphite 0
+   46 set :buildBlock:silicon 0
+   47 set :buildBlock:titanium 0
+   48 set :buildBlock:metaglass 0
+   49 set :buildBlock:rotation 0
+   50 set :buildBlock:config null
+   51 setaddr :buildBlock*retaddr *label40 (h:*label40)
    52 label *label36
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label40 (h:*label40)
    53 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    54 label *label40
    55 set *tmp87 :buildBlock*retval
 
    60 label *label38
    61 label *label35
    62 set .press *tmp87
+   63 op add :buildBlockFromCfg.1:x .coreX 0
+   64 op add :buildBlockFromCfg.1:y .coreY 4
+   65 set :buildBlock:block @battery
+   66 set :buildBlock:x :buildBlockFromCfg.1:x
+   67 set :buildBlock:y :buildBlockFromCfg.1:y
+   68 set :buildBlock:copper 5
+   69 set :buildBlock:lead 20
+   70 setaddr :buildBlock*retaddr *label46 (h:*label46)
    71 label *label42
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label46 (h:*label46)
    72 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    73 label *label46
    74 set *tmp91 :buildBlock*retval
 
    79 label *label44
    80 label *label41
    81 set .battery *tmp91
+   82 op add :buildBlockFromCfg.2:x .coreX -1
+   83 set :buildBlock:x :buildBlockFromCfg.2:x
+   84 set :buildBlock:y :buildBlockFromCfg.1:y
+   85 setaddr :buildBlock*retaddr *label52 (h:*label52)
    86 label *label48
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label52 (h:*label52)
    87 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    88 label *label52
    89 jump *label47 always
 
    92 multilabel *label51 (m:marker2)
    93 label *label50
    94 label *label47
+   95 op add :buildBlockFromCfg.3:y .coreY 3
+   96 set :buildBlock:block @combustion-generator
+   97 set :buildBlock:x :buildBlockFromCfg.1:x
+   98 set :buildBlock:y :buildBlockFromCfg.3:y
+   99 set :buildBlock:copper 25
+  100 set :buildBlock:lead 15
+  101 setaddr :buildBlock*retaddr *label58 (h:*label58)
   102 label *label54
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label58 (h:*label58)
   103 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   104 label *label58
   105 set *tmp99 :buildBlock*retval
 
   111 label *label53
   112 set .generator *tmp99
   113 set .powerTarget 800
+  114 op add :buildBlockFromCfg.4:x .coreX 1.5
+  115 set :buildBlock:block @silicon-smelter
+  116 set :buildBlock:x :buildBlockFromCfg.4:x
+  117 set :buildBlock:y :buildBlockFromCfg:y
+  118 set :buildBlock:copper 30
+  119 set :buildBlock:lead 25
+  120 setaddr :buildBlock*retaddr *label64 (h:*label64)
   121 label *label60
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label64 (h:*label64)
   122 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   123 label *label64
   124 set *tmp103 :buildBlock*retval
 
   178 label *label65
   179 set .titaniumDrill :buildBlockAt*retval
   180 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  181 op add :buildBlockFromCfg.5:y .coreY 2
+  182 set :buildBlock:block @unloader
+  183 set :buildBlock:x :buildBlockFromCfg.1:x
+  184 set :buildBlock:y :buildBlockFromCfg.5:y
+  185 set :buildBlock:copper 0
+  186 set :buildBlock:lead 0
+  187 set :buildBlock:silicon 30
+  188 set :buildBlock:titanium 25
+  189 setaddr :buildBlock*retaddr *label78 (h:*label78)
   190 label *label74
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label78 (h:*label78)
   191 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   192 label *label78
   193 set *tmp122 :buildBlock*retval
 
   198 label *label76
   199 label *label73
   200 set .unloader1 *tmp122
+  201 op add :buildBlockFromCfg.6:x .coreX 1
+  202 set :buildBlock:block @micro-processor
+  203 set :buildBlock:x :buildBlockFromCfg.6:x
+  204 set :buildBlock:y :buildBlockFromCfg.1:y
+  205 set :buildBlock:copper 90
+  206 set :buildBlock:lead 50
+  207 set :buildBlock:silicon 50
+  208 set :buildBlock:titanium 0
+  209 setaddr :buildBlock*retaddr *label84 (h:*label84)
   210 label *label80
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   211 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label84 (h:*label84)
   212 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   213 label *label84
   214 set *tmp126 :buildBlock*retval
 
   229 write :monos *tmp126 ".monos"
   230 write :flares *tmp126 ".flares"
   231 write :polys *tmp126 ".polys"
+  232 op add :buildBlockFromCfg.7:x .coreX -2
+  233 op add :buildBlockFromCfg.7:y .coreY -1
+  234 set :buildBlock:block @power-node
+  235 set :buildBlock:x :buildBlockFromCfg.7:x
+  236 set :buildBlock:y :buildBlockFromCfg.7:y
+  237 set :buildBlock:copper 2
+  238 set :buildBlock:lead 6
+  239 set :buildBlock:silicon 0
+  240 set :buildBlock:config null
+  241 setaddr :buildBlock*retaddr *label90 (h:*label90)
   242 label *label86
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label90 (h:*label90)
   243 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   244 label *label90
   245 jump *label85 always
 
   248 multilabel *label89 (m:marker7)
   249 label *label88
   250 label *label85
+  251 op add :buildBlockFromCfg.8:y .coreY 1
+  252 set :buildBlock:block @unloader
+  253 set :buildBlock:x :buildBlockFromCfg.7:x
+  254 set :buildBlock:y :buildBlockFromCfg.8:y
+  255 set :buildBlock:copper 0
+  256 set :buildBlock:lead 0
+  257 set :buildBlock:silicon 30
+  258 set :buildBlock:titanium 25
+  259 setaddr :buildBlock*retaddr *label96 (h:*label96)
   260 label *label92
-    * op add :buildBlockFromCfg.8:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label96 (h:*label96)
   261 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   262 label *label96
   263 set *tmp134 :buildBlock*retval
 
   268 label *label94
   269 label *label91
   270 write *tmp134 *tmp126 ".unloader2"
+  271 op add :buildBlockFromCfg.9:x .coreX -3
+  272 set :buildBlock:block @overflow-gate
+  273 set :buildBlock:x :buildBlockFromCfg.9:x
+  274 set :buildBlock:y :buildBlockFromCfg.8:y
+  275 set :buildBlock:copper 4
+  276 set :buildBlock:lead 2
+  277 set :buildBlock:silicon 0
+  278 set :buildBlock:titanium 0
+  279 setaddr :buildBlock*retaddr *label102 (h:*label102)
   280 label *label98
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label102 (h:*label102)
   281 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   282 label *label102
   283 jump *label97 always
 
   286 multilabel *label101 (m:marker9)
   287 label *label100
   288 label *label97
+  289 op add :buildBlockFromCfg.10:x .coreX -4
+  290 set :buildBlock:block @air-factory
+  291 set :buildBlock:x :buildBlockFromCfg.10:x
+  292 set :buildBlock:y :buildBlockFromCfg.7:y
+  293 set :buildBlock:copper 60
+  294 set :buildBlock:lead 70
+  295 set :buildBlock:rotation 3
+  296 set :buildBlock:config @mono
+  297 setaddr :buildBlock*retaddr *label108 (h:*label108)
   298 label *label104
-    * op add :buildBlockFromCfg.10:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label108 (h:*label108)
   299 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   300 label *label108
   301 set *tmp142 :buildBlock*retval
 
   366 wait 1e-15
   367 read *tmp164 processor3 ":start*finished"
   368 jump *label120 equal *tmp164 false
+  369 op add :buildBlockFromCfg.11:x .coreX 2
+  370 op add :buildBlockFromCfg.11:y .coreY 0
+  371 set :buildBlock:block @unloader
+  372 set :buildBlock:x :buildBlockFromCfg.11:x
+  373 set :buildBlock:y :buildBlockFromCfg.11:y
+  374 set :buildBlock:copper 0
+  375 set :buildBlock:lead 0
+  376 set :buildBlock:silicon 30
+  377 set :buildBlock:titanium 25
+  378 set :buildBlock:rotation 0
+  379 set :buildBlock:config null
+  380 setaddr :buildBlock*retaddr *label126 (h:*label126)
   381 label *label122
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label126 (h:*label126)
   382 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   383 label *label126
   384 jump *label121 always
 
   387 multilabel *label125 (m:marker11)
   388 label *label124
   389 label *label121
+  390 op add :buildBlockFromCfg.12:x .coreX 3.5
+  391 op add :buildBlockFromCfg.12:y .coreY 0.5
+  392 set :buildBlock:block @kiln
+  393 set :buildBlock:x :buildBlockFromCfg.12:x
+  394 set :buildBlock:y :buildBlockFromCfg.12:y
+  395 set :buildBlock:copper 60
+  396 set :buildBlock:lead 30
+  397 set :buildBlock:graphite 30
+  398 set :buildBlock:silicon 0
+  399 set :buildBlock:titanium 0
+  400 setaddr :buildBlock*retaddr *label132 (h:*label132)
   401 label *label128
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label132 (h:*label132)
   402 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   403 label *label132
   404 set *tmp169 :buildBlock*retval
 
   409 label *label130
   410 label *label127
   411 write *tmp169 *tmp126 ".kiln"
+  412 set :buildBlock:block @junction
+  413 set :buildBlock:x :buildBlockFromCfg.11:x
+  414 set :buildBlock:y :buildBlockFromCfg.8:y
+  415 set :buildBlock:copper 3
+  416 set :buildBlock:lead 0
+  417 set :buildBlock:graphite 0
+  418 setaddr :buildBlock*retaddr *label138 (h:*label138)
   419 label *label134
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label138 (h:*label138)
   420 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   421 label *label138
   422 jump *label133 always
 
   425 multilabel *label137 (m:marker13)
   426 label *label136
   427 label *label133
+  428 op add :buildBlockFromCfg.14:x .coreX -3.5
+  429 op add :buildBlockFromCfg.14:y .coreY 4.5
+  430 set :buildBlock:block @water-extractor
+  431 set :buildBlock:x :buildBlockFromCfg.14:x
+  432 set :buildBlock:y :buildBlockFromCfg.14:y
+  433 set :buildBlock:copper 30
+  434 set :buildBlock:lead 30
+  435 set :buildBlock:graphite 30
+  436 set :buildBlock:metaglass 30
+  437 setaddr :buildBlock*retaddr *label144 (h:*label144)
   438 label *label140
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label144 (h:*label144)
   439 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   440 label *label144
   441 jump *label139 always
 
   444 multilabel *label143 (m:marker14)
   445 label *label142
   446 label *label139
+  447 set :buildBlock:block @steam-generator
+  448 set :buildBlock:x :buildBlockFromCfg.14:x
+  449 set :buildBlock:y :buildBlockFromCfg:y
+  450 set :buildBlock:copper 35
+  451 set :buildBlock:lead 40
+  452 set :buildBlock:graphite 25
+  453 set :buildBlock:silicon 30
+  454 set :buildBlock:metaglass 0
+  455 setaddr :buildBlock*retaddr *label150 (h:*label150)
   456 label *label146
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label150 (h:*label150)
   457 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   458 label *label150
   459 set *tmp181 :buildBlock*retval
 
   653 read *tmp210 processor3 ":addThoriumDrill*finished"
   654 jump *label189 equal *tmp210 false
   655 label *label162
+  656 set :buildBlock:block @sorter
+  657 set :buildBlock:x :buildBlockFromCfg.10:x
+  658 set :buildBlock:y :buildBlockFromCfg.8:y
+  659 set :buildBlock:copper 2
+  660 set :buildBlock:lead 2
+  661 set :buildBlock:graphite 0
+  662 set :buildBlock:silicon 0
+  663 set :buildBlock:config @coal
+  664 setaddr :buildBlock*retaddr *label195 (h:*label195)
   665 label *label191
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label195 (h:*label195)
   666 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
   667 label *label195
   668 jump *label190 always
 
   698 label *label5
   699 write "Moving..." .display ".status3"
   700 label *label207
+  701 op sub *tmp219 :moveTo:radius 0.5
   702 label *label208
   703 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
   704 jump *label210 notEqual *tmp217 false
-    * op sub *tmp219 :moveTo:radius 0.5
   705 ucontrol approach :moveTo:x :moveTo:y *tmp219
   706 label *label209
   707 jump *label208 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1060 label *label318
  1061 label *label287
  1062 label *label288
+ 1063 set *tmp331 100
  1064 sensor *tmp329 .core @titanium
-    * jump *label327 greaterThanEq *tmp329 .targetTitanium
+ 1065 jump *label328 greaterThanEq *tmp329 .targetTitanium
  1066 sensor *tmp332 .core @titanium
  1067 op sub *tmp333 .targetTitanium *tmp332
  1068 op min *tmp331 7 *tmp333
  1069 jump *label328 always
-    * label *label327
-    * set *tmp331 100
  1070 label *label328
  1071 sensor *tmp335 .titaniumDrill @titanium
  1072 jump *label329 greaterThanEq *tmp335 *tmp331
 
  1088 label *label339
  1089 sensor :supplyBase0:coal .core @coal
  1090 sensor :supplyBase0:sand .core @sand
-    * jump *label340 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp350 @coal
+ 1091 set :mineOre.1:ore @sand
+ 1092 jump *label341 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1093 set :mineOre.1:ore @coal
  1094 jump *label341 always
-    * label *label340
-    * set *tmp350 @sand
  1095 label *label341
-    * set :mineOre.1:ore *tmp350
  1096 setaddr :mineOre.1*retaddr *label342 (h:*label342)
  1097 call *label12 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
  1098 label *label342
 
  1132 label *label355
  1133 sensor :supplyBase0:coal.1 .core @coal
  1134 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label356 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp363 @coal
+ 1135 set :mineOre.1:ore @sand
+ 1136 jump *label357 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1137 set :mineOre.1:ore @coal
  1138 jump *label357 always
-    * label *label356
-    * set *tmp363 @sand
  1139 label *label357
-    * set :mineOre.1:ore *tmp363
  1140 setaddr :mineOre.1*retaddr *label358 (h:*label358)
  1141 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
  1142 label *label358

Modifications by Unroll iteration loop at CoreBuilder.mnd:256:5 (-2 instructions):
 
  1219 end
  1220 label *label23
  1221 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp384 *label386
-    * jump *label383 always
-    * multilabel *label386 (m:marker17)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp384 *label387
-    * jump *label383 always
-    * multilabel *label387 (m:marker17)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp384 *label388
-    * jump *label383 always
-    * multilabel *label388 (m:marker17)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp384 *label389
-    * jump *label383 always
-    * multilabel *label389 (m:marker17)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp384 *label390
-    * jump *label383 always
-    * multilabel *label390 (m:marker17)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp384 *label391
-    * label *label383
-    * op sign *tmp385 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp385
-    * label *label384
-    * multijump *tmp384 0 0 (m:marker17)
-    * multilabel *label391 (m:marker17)
-    * label *label385
+ 1222 set :meetTarget:t :meetTarget:copper
+ 1223 label *label426
+ 1224 op sign *tmp385 :meetTarget:t
+ 1225 op add :meetTarget:count :meetTarget:count *tmp385
+ 1226 label *label427
+ 1227 set :meetTarget:t :meetTarget:lead
+ 1228 label *label430
+ 1229 op sign *tmp385 :meetTarget:t
+ 1230 op add :meetTarget:count :meetTarget:count *tmp385
+ 1231 label *label431
+ 1232 set :meetTarget:t :meetTarget:graphite
+ 1233 label *label434
+ 1234 op sign *tmp385 :meetTarget:t
+ 1235 op add :meetTarget:count :meetTarget:count *tmp385
+ 1236 label *label435
+ 1237 set :meetTarget:t :meetTarget:silicon
+ 1238 label *label438
+ 1239 op sign *tmp385 :meetTarget:t
+ 1240 op add :meetTarget:count :meetTarget:count *tmp385
+ 1241 label *label439
+ 1242 set :meetTarget:t :meetTarget:titanium
+ 1243 label *label442
+ 1244 op sign *tmp385 :meetTarget:t
+ 1245 op add :meetTarget:count :meetTarget:count *tmp385
+ 1246 label *label443
+ 1247 set :meetTarget:t :meetTarget:metaglass
+ 1248 label *label446
+ 1249 op sign *tmp385 :meetTarget:t
+ 1250 op add :meetTarget:count :meetTarget:count *tmp385
+ 1251 label *label447
+ 1252 label *label385
  1253 write :meetTarget:count .display ".totalTargets"
  1254 write :meetTarget:block .display ".nextBlock"
  1255 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1221 set :meetTarget:count 0
  1222 set :meetTarget:t :meetTarget:copper
  1223 label *label426
-    * op sign *tmp385 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp385
+ 1224 op sign *tmp385 :meetTarget:copper
+ 1225 op add :meetTarget:count 0 *tmp385
  1226 label *label427
  1227 set :meetTarget:t :meetTarget:lead
  1228 label *label430
-    * op sign *tmp385 :meetTarget:t
+ 1229 op sign *tmp385 :meetTarget:lead
  1230 op add :meetTarget:count :meetTarget:count *tmp385
  1231 label *label431
  1232 set :meetTarget:t :meetTarget:graphite
  1233 label *label434
-    * op sign *tmp385 :meetTarget:t
+ 1234 op sign *tmp385 :meetTarget:graphite
  1235 op add :meetTarget:count :meetTarget:count *tmp385
  1236 label *label435
  1237 set :meetTarget:t :meetTarget:silicon
  1238 label *label438
-    * op sign *tmp385 :meetTarget:t
+ 1239 op sign *tmp385 :meetTarget:silicon
  1240 op add :meetTarget:count :meetTarget:count *tmp385
  1241 label *label439
  1242 set :meetTarget:t :meetTarget:titanium
  1243 label *label442
-    * op sign *tmp385 :meetTarget:t
+ 1244 op sign *tmp385 :meetTarget:titanium
  1245 op add :meetTarget:count :meetTarget:count *tmp385
  1246 label *label443
  1247 set :meetTarget:t :meetTarget:metaglass
  1248 label *label446
-    * op sign *tmp385 :meetTarget:t
+ 1249 op sign *tmp385 :meetTarget:metaglass
  1250 op add :meetTarget:count :meetTarget:count *tmp385
  1251 label *label447
  1252 label *label385

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1218 return :targetMet*retaddr
  1219 end
  1220 label *label23
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1221 label *label426
  1222 op sign *tmp385 :meetTarget:copper
  1223 op add :meetTarget:count 0 *tmp385
  1224 label *label427
-    * set :meetTarget:t :meetTarget:lead
  1225 label *label430
  1226 op sign *tmp385 :meetTarget:lead
  1227 op add :meetTarget:count :meetTarget:count *tmp385
  1228 label *label431
-    * set :meetTarget:t :meetTarget:graphite
  1229 label *label434
  1230 op sign *tmp385 :meetTarget:graphite
  1231 op add :meetTarget:count :meetTarget:count *tmp385
  1232 label *label435
-    * set :meetTarget:t :meetTarget:silicon
  1233 label *label438
  1234 op sign *tmp385 :meetTarget:silicon
  1235 op add :meetTarget:count :meetTarget:count *tmp385
  1236 label *label439
-    * set :meetTarget:t :meetTarget:titanium
  1237 label *label442
  1238 op sign *tmp385 :meetTarget:titanium
  1239 op add :meetTarget:count :meetTarget:count *tmp385
  1240 label *label443
-    * set :meetTarget:t :meetTarget:metaglass
  1241 label *label446
  1242 op sign *tmp385 :meetTarget:metaglass
  1243 op add :meetTarget:count :meetTarget:count *tmp385

Modifications by Replicate loop condition at Actions.mnd:25:5 (+1 instructions):
 
   702 label *label208
   703 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
   704 jump *label210 notEqual *tmp217 false
+  705 label *label451
   706 ucontrol approach :moveTo:x :moveTo:y *tmp219
   707 label *label209
-    * jump *label208 always
+  708 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
+  709 jump *label451 equal *tmp217 false
   710 label *label210
   711 label *label206
   712 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:70:9 (+1 instructions):
 
   774 label *label230
   775 sensor *tmp237 @unit @firstItem
   776 jump *label232 equal *tmp237 null
+  777 label *label452
   778 ucontrol itemDrop @air 1000
   779 label *label231
-    * jump *label230 always
+  780 sensor *tmp237 @unit @firstItem
+  781 jump *label452 notEqual *tmp237 null
   782 label *label232
   783 label *label225
   784 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at Actions.mnd:47:5 (+1 instructions):
 
   819 label *label245
   820 sensor *tmp247 @unit @firstItem
   821 jump *label247 equal *tmp247 null
+  822 label *label453
   823 ucontrol itemDrop @air 1000
   824 label *label246
-    * jump *label245 always
+  825 sensor *tmp247 @unit @firstItem
+  826 jump *label453 notEqual *tmp247 null
   827 label *label247
   828 label *label244
   829 label *label242

Modifications by Replicate loop condition at Actions.mnd:47:5 (+1 instructions):
 
   895 label *label267
   896 sensor *tmp265 @unit @firstItem
   897 jump *label269 equal *tmp265 null
+  898 label *label454
   899 ucontrol itemDrop @air 1000
   900 label *label268
-    * jump *label267 always
+  901 sensor *tmp265 @unit @firstItem
+  902 jump *label454 notEqual *tmp265 null
   903 label *label269
   904 label *label266
   905 label *label270

Modifications by Replicate loop condition at CoreBuilder.mnd:279:5 (+2 instructions):
 
  1284 call *label22 *invalid :targetMet*retval (m:*label395) (h:*label395)
  1285 label *label395
  1286 jump *label394 notEqual :targetMet*retval false
+ 1287 label *label455
  1288 setaddr :supplyBase*retaddr *label396 (h:*label396)
  1289 call *label21 *invalid :supplyBase*retval (m:*label396) (h:*label396)
  1290 label *label396
  1291 label *label393
-    * jump *label392 always
+ 1292 setaddr :targetMet*retaddr *label456 (h:*label456)
+ 1293 call *label22 *invalid :targetMet*retval (m:*label456) (h:*label456)
+ 1294 label *label456
+ 1295 jump *label455 equal :targetMet*retval false
  1296 label *label394
  1297 label *label382
  1298 return :meetTarget*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:500:9 (+1 instructions):
 
   471 label *label153
   472 read *tmp35 *tmp126 ".flares"
   473 jump *label155 greaterThanEq *tmp35 1
+  474 label *label457
   475 setaddr :supplyBase*retaddr *label156 (h:*label156)
   476 call *label21 *invalid :supplyBase*retval (m:*label156) (h:*label156)
   477 label *label156
   478 label *label154
-    * jump *label153 always
+  479 read *tmp35 *tmp126 ".flares"
+  480 jump *label457 lessThan *tmp35 1
   481 label *label155
   482 set :findFreeUnit:unit_type @flare
   483 set :findFreeUnit:initial_flag 0

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   174 call *label26 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   175 label *label72
   176 set *tmp107 :buildBlockAt*retval
-    * jump *label65 always
   177 label *label65
   178 set .titaniumDrill :buildBlockAt*retval
   179 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1075 sensor *tmp332 .core @titanium
  1076 op sub *tmp333 .targetTitanium *tmp332
  1077 op min *tmp331 7 *tmp333
-    * jump *label328 always
  1078 label *label328
  1079 sensor *tmp335 .titaniumDrill @titanium
  1080 jump *label329 greaterThanEq *tmp335 *tmp331
 
  1099 set :mineOre.1:ore @sand
  1100 jump *label341 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1101 set :mineOre.1:ore @coal
-    * jump *label341 always
  1102 label *label341
  1103 setaddr :mineOre.1*retaddr *label342 (h:*label342)
  1104 call *label12 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
 
  1142 set :mineOre.1:ore @sand
  1143 jump *label357 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1144 set :mineOre.1:ore @coal
-    * jump *label357 always
  1145 label *label357
  1146 setaddr :mineOre.1*retaddr *label358 (h:*label358)
  1147 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
 
  1358 call *label25 *invalid :logBlock*retval (m:*label416) (h:*label416)
  1359 label *label416
  1360 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label401 always
  1361 label *label401
  1362 return :buildBlockAt*retaddr
  1363 end
 
  1382 call *label26 *invalid :buildBlockAt*retval (m:*label419) (h:*label419)
  1383 label *label419
  1384 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label417 always
  1385 label *label417
  1386 return :buildBlock*retaddr
  1387 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    60 label *label38
    61 label *label35
    62 set .press *tmp87
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   63 set :buildBlockFromCfg.1:x .coreX
    64 op add :buildBlockFromCfg.1:y .coreY 4
    65 set :buildBlock:block @battery
    66 set :buildBlock:x :buildBlockFromCfg.1:x
 
   366 read *tmp164 processor3 ":start*finished"
   367 jump *label120 equal *tmp164 false
   368 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  369 set :buildBlockFromCfg.11:y .coreY
   370 set :buildBlock:block @unloader
   371 set :buildBlock:x :buildBlockFromCfg.11:x
   372 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1226 label *label23
  1227 label *label426
  1228 op sign *tmp385 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp385
+ 1229 set :meetTarget:count *tmp385
  1230 label *label427
  1231 label *label430
  1232 op sign *tmp385 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1225 end
  1226 label *label23
  1227 label *label426
-    * op sign *tmp385 :meetTarget:copper
-    * set :meetTarget:count *tmp385
+ 1228 op sign :meetTarget:count :meetTarget:copper
  1229 label *label427
  1230 label *label430
  1231 op sign *tmp385 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    63 set :buildBlockFromCfg.1:x .coreX
    64 op add :buildBlockFromCfg.1:y .coreY 4
    65 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   66 set :buildBlock:x .coreX
    67 set :buildBlock:y :buildBlockFromCfg.1:y
    68 set :buildBlock:copper 5
    69 set :buildBlock:lead 20
 
    94 label *label47
    95 op add :buildBlockFromCfg.3:y .coreY 3
    96 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   97 set :buildBlock:x .coreX
    98 set :buildBlock:y :buildBlockFromCfg.3:y
    99 set :buildBlock:copper 25
   100 set :buildBlock:lead 15
 
   179 write :buildBlockAt*retval processor1 ".titaniumDrill"
   180 op add :buildBlockFromCfg.5:y .coreY 2
   181 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  182 set :buildBlock:x .coreX
   183 set :buildBlock:y :buildBlockFromCfg.5:y
   184 set :buildBlock:copper 0
   185 set :buildBlock:lead 0
 
   369 set :buildBlockFromCfg.11:y .coreY
   370 set :buildBlock:block @unloader
   371 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  372 set :buildBlock:y .coreY
   373 set :buildBlock:copper 0
   374 set :buildBlock:lead 0
   375 set :buildBlock:silicon 30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    60 label *label38
    61 label *label35
    62 set .press *tmp87
-    * set :buildBlockFromCfg.1:x .coreX
    63 op add :buildBlockFromCfg.1:y .coreY 4
    64 set :buildBlock:block @battery
    65 set :buildBlock:x .coreX
 
   365 read *tmp164 processor3 ":start*finished"
   366 jump *label120 equal *tmp164 false
   367 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
   368 set :buildBlock:block @unloader
   369 set :buildBlock:x :buildBlockFromCfg.11:x
   370 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    13 ubind @poly
    14 set .builder @unit
    15 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label30
    16 jump *label29 equal .core null
-    * label *label31
    17 set .display processor1
    18 set :findUnits:type @mono
    19 setaddr :findUnits*retaddr *label32 (h:*label32)
 
    47 set :buildBlock:rotation 0
    48 set :buildBlock:config null
    49 setaddr :buildBlock*retaddr *label40 (h:*label40)
-    * label *label36
    50 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    51 label *label40
    52 set *tmp87 :buildBlock*retval
    53 jump *label35 always
-    * label *label37
    54 multijump *tmp88 0 0 (m:marker0)
    55 multilabel *label39 (m:marker0)
-    * label *label38
    56 label *label35
    57 set .press *tmp87
    58 op add :buildBlockFromCfg.1:y .coreY 4
 
    62 set :buildBlock:copper 5
    63 set :buildBlock:lead 20
    64 setaddr :buildBlock*retaddr *label46 (h:*label46)
-    * label *label42
    65 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    66 label *label46
    67 set *tmp91 :buildBlock*retval
    68 jump *label41 always
-    * label *label43
    69 multijump *tmp92 0 0 (m:marker1)
    70 multilabel *label45 (m:marker1)
-    * label *label44
    71 label *label41
    72 set .battery *tmp91
    73 op add :buildBlockFromCfg.2:x .coreX -1
    74 set :buildBlock:x :buildBlockFromCfg.2:x
    75 set :buildBlock:y :buildBlockFromCfg.1:y
    76 setaddr :buildBlock*retaddr *label52 (h:*label52)
-    * label *label48
    77 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    78 label *label52
    79 jump *label47 always
-    * label *label49
    80 multijump *tmp96 0 0 (m:marker2)
    81 multilabel *label51 (m:marker2)
-    * label *label50
    82 label *label47
    83 op add :buildBlockFromCfg.3:y .coreY 3
    84 set :buildBlock:block @combustion-generator
 
    87 set :buildBlock:copper 25
    88 set :buildBlock:lead 15
    89 setaddr :buildBlock*retaddr *label58 (h:*label58)
-    * label *label54
    90 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    91 label *label58
    92 set *tmp99 :buildBlock*retval
    93 jump *label53 always
-    * label *label55
    94 multijump *tmp100 0 0 (m:marker3)
    95 multilabel *label57 (m:marker3)
-    * label *label56
    96 label *label53
    97 set .generator *tmp99
    98 set .powerTarget 800
 
   103 set :buildBlock:copper 30
   104 set :buildBlock:lead 25
   105 setaddr :buildBlock*retaddr *label64 (h:*label64)
-    * label *label60
   106 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   107 label *label64
   108 set *tmp103 :buildBlock*retval
   109 jump *label59 always
-    * label *label61
   110 multijump *tmp104 0 0 (m:marker4)
   111 multilabel *label63 (m:marker4)
-    * label *label62
   112 label *label59
   113 set .smelter *tmp103
   114 set :meetTarget:block @pneumatic-drill
 
   121 setaddr :meetTarget*retaddr *label67 (h:*label67)
   122 call *label23 *invalid :meetTarget*retval (m:*label67) (h:*label67)
   123 label *label67
-    * label *label66
   124 write @titanium processor1 ".nextBlock"
   125 write .coreX processor4 ":findDrillLocation:x"
   126 write .coreY processor4 ":findDrillLocation:y"
 
   141 jump *label69 notEqual :buildTitaniumDrill:result false
   142 set .ERROR "Cannot locate spot for titanium drill"
   143 stop
-    * label *label71
   144 label *label69
-    * label *label70
   145 write @pneumatic-drill processor1 ".nextBlock"
   146 set :buildBlockAt:block @pneumatic-drill
   147 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   153 call *label26 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   154 label *label72
   155 set *tmp107 :buildBlockAt*retval
-    * label *label65
   156 set .titaniumDrill :buildBlockAt*retval
   157 write :buildBlockAt*retval processor1 ".titaniumDrill"
   158 op add :buildBlockFromCfg.5:y .coreY 2
 
   164 set :buildBlock:silicon 30
   165 set :buildBlock:titanium 25
   166 setaddr :buildBlock*retaddr *label78 (h:*label78)
-    * label *label74
   167 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   168 label *label78
   169 set *tmp122 :buildBlock*retval
   170 jump *label73 always
-    * label *label75
   171 multijump *tmp123 0 0 (m:marker5)
   172 multilabel *label77 (m:marker5)
-    * label *label76
   173 label *label73
   174 set .unloader1 *tmp122
   175 op add :buildBlockFromCfg.6:x .coreX 1
 
   181 set :buildBlock:silicon 50
   182 set :buildBlock:titanium 0
   183 setaddr :buildBlock*retaddr *label84 (h:*label84)
-    * label *label80
   184 set :buildBlock:config processor2
   185 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   186 label *label84
   187 set *tmp126 :buildBlock*retval
   188 jump *label79 always
-    * label *label81
   189 multijump *tmp127 0 0 (m:marker6)
   190 multilabel *label83 (m:marker6)
-    * label *label82
   191 label *label79
   192 set .controller *tmp126
   193 write processor1 *tmp126 ".display"
 
   210 set :buildBlock:silicon 0
   211 set :buildBlock:config null
   212 setaddr :buildBlock*retaddr *label90 (h:*label90)
-    * label *label86
   213 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   214 label *label90
   215 jump *label85 always
-    * label *label87
   216 multijump *tmp131 0 0 (m:marker7)
   217 multilabel *label89 (m:marker7)
-    * label *label88
   218 label *label85
   219 op add :buildBlockFromCfg.8:y .coreY 1
   220 set :buildBlock:block @unloader
 
   225 set :buildBlock:silicon 30
   226 set :buildBlock:titanium 25
   227 setaddr :buildBlock*retaddr *label96 (h:*label96)
-    * label *label92
   228 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   229 label *label96
   230 set *tmp134 :buildBlock*retval
   231 jump *label91 always
-    * label *label93
   232 multijump *tmp135 0 0 (m:marker8)
   233 multilabel *label95 (m:marker8)
-    * label *label94
   234 label *label91
   235 write *tmp134 *tmp126 ".unloader2"
   236 op add :buildBlockFromCfg.9:x .coreX -3
 
   242 set :buildBlock:silicon 0
   243 set :buildBlock:titanium 0
   244 setaddr :buildBlock*retaddr *label102 (h:*label102)
-    * label *label98
   245 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   246 label *label102
   247 jump *label97 always
-    * label *label99
   248 multijump *tmp139 0 0 (m:marker9)
   249 multilabel *label101 (m:marker9)
-    * label *label100
   250 label *label97
   251 op add :buildBlockFromCfg.10:x .coreX -4
   252 set :buildBlock:block @air-factory
 
   257 set :buildBlock:rotation 3
   258 set :buildBlock:config @mono
   259 setaddr :buildBlock*retaddr *label108 (h:*label108)
-    * label *label104
   260 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   261 label *label108
   262 set *tmp142 :buildBlock*retval
   263 jump *label103 always
-    * label *label105
   264 multijump *tmp143 0 0 (m:marker10)
   265 multilabel *label107 (m:marker10)
-    * label *label106
   266 label *label103
   267 write *tmp142 *tmp126 ".factory"
   268 write *tmp142 processor1 ".factory"
 
   272 write 0 *tmp126 ".leadReserve"
   273 write 0 *tmp126 ".siliconReserve"
   274 write @flare *tmp126 ".unitToProduce"
-    * label *label109
   275 write 85 *tmp126 ".pressTarget"
   276 write 150 *tmp126 ".smelterTarget"
   277 write 30 *tmp126 ".kilnTarget"
 
   303 read *tmp157 processor3 ":start*finished"
   304 jump *label116 equal *tmp157 false
   305 label *label113
-    * label *label114
   306 setaddr :supplyBase*retaddr *label117 (h:*label117)
   307 call *label21 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   308 label *label117
 
   310 jump *label118 greaterThanEq *tmp158 300
   311 jump *label112 always
   312 label *label118
-    * label *label119
-    * label *label111
   313 read *tmp34 *tmp126 ".monos"
   314 jump *label110 lessThan *tmp34 3
   315 label *label112
 
   332 set :buildBlock:rotation 0
   333 set :buildBlock:config null
   334 setaddr :buildBlock*retaddr *label126 (h:*label126)
-    * label *label122
   335 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   336 label *label126
   337 jump *label121 always
-    * label *label123
   338 multijump *tmp166 0 0 (m:marker11)
   339 multilabel *label125 (m:marker11)
-    * label *label124
   340 label *label121
   341 op add :buildBlockFromCfg.12:x .coreX 3.5
   342 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   349 set :buildBlock:silicon 0
   350 set :buildBlock:titanium 0
   351 setaddr :buildBlock*retaddr *label132 (h:*label132)
-    * label *label128
   352 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   353 label *label132
   354 set *tmp169 :buildBlock*retval
   355 jump *label127 always
-    * label *label129
   356 multijump *tmp170 0 0 (m:marker12)
   357 multilabel *label131 (m:marker12)
-    * label *label130
   358 label *label127
   359 write *tmp169 *tmp126 ".kiln"
   360 set :buildBlock:block @junction
 
   364 set :buildBlock:lead 0
   365 set :buildBlock:graphite 0
   366 setaddr :buildBlock*retaddr *label138 (h:*label138)
-    * label *label134
   367 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   368 label *label138
   369 jump *label133 always
-    * label *label135
   370 multijump *tmp174 0 0 (m:marker13)
   371 multilabel *label137 (m:marker13)
-    * label *label136
   372 label *label133
   373 op add :buildBlockFromCfg.14:x .coreX -3.5
   374 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   380 set :buildBlock:graphite 30
   381 set :buildBlock:metaglass 30
   382 setaddr :buildBlock*retaddr *label144 (h:*label144)
-    * label *label140
   383 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   384 label *label144
   385 jump *label139 always
-    * label *label141
   386 multijump *tmp178 0 0 (m:marker14)
   387 multilabel *label143 (m:marker14)
-    * label *label142
   388 label *label139
   389 set :buildBlock:block @steam-generator
   390 set :buildBlock:x :buildBlockFromCfg.14:x
 
   395 set :buildBlock:silicon 30
   396 set :buildBlock:metaglass 0
   397 setaddr :buildBlock*retaddr *label150 (h:*label150)
-    * label *label146
   398 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   399 label *label150
   400 set *tmp181 :buildBlock*retval
   401 jump *label145 always
-    * label *label147
   402 multijump *tmp182 0 0 (m:marker15)
   403 multilabel *label149 (m:marker15)
-    * label *label148
   404 label *label145
   405 write *tmp181 *tmp126 ".generator2"
   406 set .graphiteSurplus 200
   407 set .siliconSurplus 1000
   408 set .metaglassSurplus 200
   409 jump *label151 equal :searchThorium false
-    * label *label153
   410 read *tmp35 *tmp126 ".flares"
   411 jump *label155 greaterThanEq *tmp35 1
   412 label *label457
   413 setaddr :supplyBase*retaddr *label156 (h:*label156)
   414 call *label21 *invalid :supplyBase*retval (m:*label156) (h:*label156)
   415 label *label156
-    * label *label154
   416 read *tmp35 *tmp126 ".flares"
   417 jump *label457 lessThan *tmp35 1
   418 label *label155
 
   432 setaddr :supplyBase*retaddr *label161 (h:*label161)
   433 call *label21 *invalid :supplyBase*retval (m:*label161) (h:*label161)
   434 label *label161
-    * label *label159
   435 read *tmp192 processor4 ":layoutThoriumDrill*finished"
   436 jump *label158 equal *tmp192 false
-    * label *label160
   437 label *label151
-    * label *label152
   438 set :meetTarget:block @laser-drill
   439 set :meetTarget:copper 35
   440 set :meetTarget:lead 0
 
   445 setaddr :meetTarget*retaddr *label164 (h:*label164)
   446 call *label23 *invalid :meetTarget*retval (m:*label164) (h:*label164)
   447 label *label164
-    * label *label163
   448 label *label165
   449 wait 1e-15
   450 read *tmp194 processor4 ":layoutThoriumDrill*finished"
 
   453 jump *label166 notEqual :buildThoriumDrill:result false
   454 set .ERROR "Cannot locate spot for thorium drill"
   455 stop
-    * label *label168
   456 label *label166
-    * label *label167
   457 set :buildBlockAt:block @laser-drill
   458 read :buildBlockAt:x processor4 ".drillX"
   459 read :buildBlockAt:y processor4 ".drillY"
 
   468 jump *label170 greaterThanEq *tmp66 0
   469 jump *label162 always
   470 label *label170
-    * label *label171
   471 set :meetTarget:block @water-extractor
   472 set :meetTarget:copper 30
   473 set :meetTarget:lead 30
 
   478 setaddr :meetTarget*retaddr *label173 (h:*label173)
   479 call *label23 *invalid :meetTarget*retval (m:*label173) (h:*label173)
   480 label *label173
-    * label *label172
   481 set :buildBlockAt:block @water-extractor
   482 read *tmp66 processor4 ".water1X"
   483 set :buildBlockAt:x *tmp66
 
   492 jump *label175 greaterThanEq *tmp68 0
   493 jump *label162 always
   494 label *label175
-    * label *label176
   495 set :meetTarget:block @water-extractor
   496 set :meetTarget:copper 30
   497 set :meetTarget:lead 30
 
   502 setaddr :meetTarget*retaddr *label178 (h:*label178)
   503 call *label23 *invalid :meetTarget*retval (m:*label178) (h:*label178)
   504 label *label178
-    * label *label177
   505 set :buildBlockAt:block @water-extractor
   506 read *tmp68 processor4 ".water2X"
   507 set :buildBlockAt:x *tmp68
 
   522 setaddr :meetTarget*retaddr *label181 (h:*label181)
   523 call *label23 *invalid :meetTarget*retval (m:*label181) (h:*label181)
   524 label *label181
-    * label *label180
   525 set :buildBlockAt:block @steam-generator
   526 read :buildBlockAt:x processor4 ".generatorX"
   527 read :buildBlockAt:y processor4 ".generatorY"
 
   542 setaddr :meetTarget*retaddr *label184 (h:*label184)
   543 call *label23 *invalid :meetTarget*retval (m:*label184) (h:*label184)
   544 label *label184
-    * label *label183
   545 set :buildBlockAt:block @power-node
   546 read :buildBlockAt:x processor4 ".nodeX"
   547 read :buildBlockAt:y processor4 ".nodeY"
 
   561 setaddr :meetTarget*retaddr *label187 (h:*label187)
   562 call *label23 *invalid :meetTarget*retval (m:*label187) (h:*label187)
   563 label *label187
-    * label *label186
   564 set :buildBlockAt:block @solar-panel
   565 read :buildBlockAt:x processor4 ".panelX"
   566 read :buildBlockAt:y processor4 ".panelY"
 
   588 set :buildBlock:silicon 0
   589 set :buildBlock:config @coal
   590 setaddr :buildBlock*retaddr *label195 (h:*label195)
-    * label *label191
   591 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
   592 label *label195
   593 jump *label190 always
-    * label *label192
   594 multijump *tmp212 0 0 (m:marker16)
   595 multilabel *label194 (m:marker16)
-    * label *label193
   596 label *label190
   597 write 0 processor1 ".totalTargets"
   598 write null processor1 ".nextBlock"
 
   600 setaddr :supplyBase*retaddr *label199 (h:*label199)
   601 call *label21 *invalid :supplyBase*retval (m:*label199) (h:*label199)
   602 label *label199
-    * label *label197
   603 read *tmp35 *tmp126 ".flares"
   604 read *tmp34 *tmp126 ".monos"
   605 op add *tmp215 *tmp35 *tmp34
   606 jump *label196 lessThan *tmp215 16
-    * label *label198
   607 label *label200
   608 setaddr :supplyBase*retaddr *label203 (h:*label203)
   609 call *label21 *invalid :supplyBase*retval (m:*label203) (h:*label203)
   610 label *label203
-    * label *label201
   611 jump *label200 always
-    * label *label202
   612 ucontrol stop
   613 set .ERROR "Done"
   614 stop
-    * label *label204
   615 end
   616 label *label5
   617 write "Moving..." .display ".status3"
-    * label *label207
   618 op sub *tmp219 :moveTo:radius 0.5
-    * label *label208
   619 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
   620 jump *label210 notEqual *tmp217 false
   621 label *label451
   622 ucontrol approach :moveTo:x :moveTo:y *tmp219
-    * label *label209
   623 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217
   624 jump *label451 equal *tmp217 false
   625 label *label210
-    * label *label206
   626 return :moveTo*retaddr
   627 end
   628 label *label6
 
   632 setaddr :moveTo*retaddr *label212 (h:*label212)
   633 call *label5 *invalid :moveTo*retval (m:*label212) (h:*label212)
   634 label *label212
-    * label *label211
   635 return :moveTo.1*retaddr
   636 end
   637 label *label7
   638 write "Moving..." .display ".status3"
-    * label *label214
   639 label *label215
   640 sensor *tmp222 @unit @firstItem
   641 jump *label218 equal *tmp222 null
   642 ucontrol itemDrop @air 1000
   643 label *label218
-    * label *label219
   644 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label216
   645 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp225
   646 jump *label215 equal *tmp225 false
-    * label *label217
-    * label *label213
   647 return :moveToEmpty*retaddr
   648 end
   649 label *label8
 
   655 setaddr :moveTo*retaddr *label221 (h:*label221)
   656 call *label5 *invalid :moveTo*retval (m:*label221) (h:*label221)
   657 label *label221
-    * label *label220
   658 return :moveToBlock*retaddr
   659 end
   660 label *label9
   661 write "Depositing..." .display ".status3"
-    * label *label223
   662 sensor *tmp229 @unit @firstItem
   663 jump *label224 notEqual *tmp229 :depositItems:item
   664 set :moveToBlock:block :depositItems:block
 
   669 sensor :depositItems:cap :depositItems:block @itemCapacity
   670 label *label227
   671 ucontrol itemDrop :depositItems:block 30
-    * label *label228
   672 sensor *tmp233 @unit @firstItem
   673 op mul *tmp234 *tmp233 :depositItems:cap
   674 sensor *tmp235 :depositItems:block :depositItems:item
   675 jump *label227 greaterThan *tmp234 *tmp235
-    * label *label229
   676 jump *label225 always
   677 label *label224
-    * label *label230
   678 sensor *tmp237 @unit @firstItem
   679 jump *label232 equal *tmp237 null
   680 label *label452
   681 ucontrol itemDrop @air 1000
-    * label *label231
   682 sensor *tmp237 @unit @firstItem
   683 jump *label452 notEqual *tmp237 null
   684 label *label232
   685 label *label225
   686 write 0 .display ".transportTarget"
   687 write null .display ".transportItem"
-    * label *label233
-    * label *label222
   688 return :depositItems*retaddr
   689 end
   690 label *label10
 
   692 jump *label235 notEqual *tmp239 false
   693 set .ERROR "Cannot locate ore"
   694 stop
-    * label *label237
   695 label *label235
-    * label *label236
-    * label *label234
   696 return :locateOre*retaddr
   697 end
   698 label *label11
   699 op min :mineOre:amount :mineOre:amount 30
   700 write :mineOre:amount .display ".transportTarget"
   701 write :mineOre:ore .display ".transportItem"
-    * label *label239
   702 set :locateOre:ore :mineOre:ore
   703 setaddr :locateOre*retaddr *label240 (h:*label240)
   704 call *label10 *invalid :locateOre*retval (m:*label240) (h:*label240)
 
   712 label *label241
   713 sensor *tmp244 @unit @firstItem
   714 jump *label242 equal *tmp244 :mineOre:ore
-    * label *label245
   715 sensor *tmp247 @unit @firstItem
   716 jump *label247 equal *tmp247 null
   717 label *label453
   718 ucontrol itemDrop @air 1000
-    * label *label246
   719 sensor *tmp247 @unit @firstItem
   720 jump *label453 notEqual *tmp247 null
   721 label *label247
-    * label *label244
   722 label *label242
-    * label *label243
   723 write "Mining..." .display ".status3"
-    * label *label248
   724 op mul :second:result @second TIME_COMPRESS
-    * label *label249
   725 op add :mineOre:stop :second:result 10
   726 label *label250
   727 sensor :mineOre:item @unit @firstItem
 
   731 jump *label253 equal *tmp254 false
   732 jump *label252 always
   733 label *label253
-    * label *label254
   734 ucontrol mine :mineOre:x :mineOre:y
   735 op mul :second.1:result @second TIME_COMPRESS
-    * label *label255
   736 jump *label256 lessThanEq :second.1:result :mineOre:stop
   737 jump *label252 always
   738 label *label256
-    * label *label257
-    * label *label251
   739 sensor *tmp259 @unit @totalItems
   740 jump *label250 lessThan *tmp259 :mineOre:amount
   741 label *label252
 
   745 setaddr :depositItems*retaddr *label258 (h:*label258)
   746 call *label9 *invalid :depositItems*retval (m:*label258) (h:*label258)
   747 label *label258
-    * label *label238
   748 return :mineOre*retaddr
   749 end
   750 label *label12
   751 write "Mining " .display ".status2"
   752 write :mineOre.1:ore .display ".item2"
   753 write "core" .display ".block2"
-    * label *label260
   754 set :mineOre:ore :mineOre.1:ore
   755 set :mineOre:amount 30
   756 set :mineOre:block .core
   757 setaddr :mineOre*retaddr *label261 (h:*label261)
   758 call *label11 *invalid :mineOre*retval (m:*label261) (h:*label261)
   759 label *label261
-    * label *label259
   760 return :mineOre.1*retaddr
   761 end
   762 label *label13
   763 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   764 write :transportStatus.2:target .display ".transportTarget"
   765 write :fetchBlock:item .display ".transportItem"
-    * label *label263
   766 write "Fetching " .display ".status2"
   767 write :fetchBlock:item .display ".item2"
   768 write :fetchBlock:block .display ".block2"
-    * label *label264
   769 sensor *tmp263 :fetchBlock:block @x
   770 sensor *tmp264 :fetchBlock:block @y
   771 set :moveToEmpty:x *tmp263
 
   773 setaddr :moveToEmpty*retaddr *label265 (h:*label265)
   774 call *label7 *invalid :moveToEmpty*retval (m:*label265) (h:*label265)
   775 label *label265
-    * label *label267
   776 sensor *tmp265 @unit @firstItem
   777 jump *label269 equal *tmp265 null
   778 label *label454
   779 ucontrol itemDrop @air 1000
-    * label *label268
   780 sensor *tmp265 @unit @firstItem
   781 jump *label454 notEqual *tmp265 null
   782 label *label269
-    * label *label266
   783 label *label270
   784 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   785 sensor :fetchBlock:unitItem @unit @firstItem
 
   789 jump *label273 equal *tmp270 false
   790 ucontrol itemDrop @air 1000
   791 label *label273
-    * label *label274
-    * label *label271
   792 sensor *tmp272 @unit :fetchBlock:item
   793 op lessThan *tmp273 *tmp272 30
   794 sensor *tmp274 :fetchBlock:block :fetchBlock:item
   795 op land *tmp275 *tmp273 *tmp274
   796 jump *label270 notEqual *tmp275 false
-    * label *label272
   797 set :depositItems:block .core
   798 set :depositItems:item :fetchBlock:item
   799 setaddr :depositItems*retaddr *label275 (h:*label275)
   800 call *label9 *invalid :depositItems*retval (m:*label275) (h:*label275)
   801 label *label275
-    * label *label262
   802 return :fetchBlock*retaddr
   803 end
   804 label *label15
 
   806 jump *label277 notEqual @unit null
   807 jump *label276 always
   808 label *label277
-    * label *label278
   809 set :findFreeUnit:first_unit @unit
   810 label *label279
   811 sensor *tmp278 @unit @controlled
 
   818 jump *label284 notEqual *tmp281 1
   819 set :findFreeUnit:first_unit @unit
   820 label *label284
-    * label *label285
   821 label *label283
   822 ubind :findFreeUnit:unit_type
-    * label *label280
   823 jump *label279 notEqual :findFreeUnit:first_unit @unit
-    * label *label281
   824 label *label276
   825 return :findFreeUnit*retaddr
   826 end
 
   832 sensor *tmp291 .press @coal
   833 jump *label291 greaterThanEq *tmp291 5
   834 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label293
   835 write "Supplying " .display ".status2"
   836 write @coal .display ".item2"
   837 write .press .display ".block2"
-    * label *label295
   838 sensor :supplyBlock:blockCapacity .press @itemCapacity
   839 sensor *tmp295 .press @coal
   840 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp295
 
   846 call *label11 *invalid :mineOre*retval (m:*label298) (h:*label298)
   847 label *label298
   848 label *label296
-    * label *label297
-    * label *label294
   849 set :supplyBase0:supplied true
   850 label *label291
-    * label *label292
   851 label *label289
-    * label *label290
   852 sensor *tmp299 .core @silicon
   853 jump *label299 greaterThanEq *tmp299 .targetSilicon
   854 sensor *tmp302 .smelter @coal
   855 jump *label301 greaterThanEq *tmp302 5
   856 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label303
   857 write "Supplying " .display ".status2"
   858 write @coal .display ".item2"
   859 write .smelter .display ".block2"
-    * label *label305
   860 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   861 sensor *tmp306 .smelter @coal
   862 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp306
 
   868 call *label11 *invalid :mineOre*retval (m:*label308) (h:*label308)
   869 label *label308
   870 label *label306
-    * label *label307
-    * label *label304
   871 set :supplyBase0:supplied true
   872 jump *label302 always
   873 label *label301
   874 sensor *tmp310 .smelter @sand
   875 jump *label309 greaterThanEq *tmp310 5
   876 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label311
   877 write "Supplying " .display ".status2"
   878 write @sand .display ".item2"
   879 write .smelter .display ".block2"
-    * label *label313
   880 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   881 sensor *tmp314 .smelter @sand
   882 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp314
 
   888 call *label11 *invalid :mineOre*retval (m:*label316) (h:*label316)
   889 label *label316
   890 label *label314
-    * label *label315
-    * label *label312
   891 set :supplyBase0:supplied true
   892 label *label309
-    * label *label310
   893 label *label302
   894 label *label299
-    * label *label300
   895 sensor *tmp318 .battery @totalPower
   896 jump *label317 greaterThanEq *tmp318 .powerTarget
   897 sensor *tmp321 .generator @coal
   898 jump *label319 greaterThanEq *tmp321 2
   899 write "Goal 4: supplying generator" .display ".status1"
-    * label *label321
   900 write "Supplying " .display ".status2"
   901 write @coal .display ".item2"
   902 write .generator .display ".block2"
-    * label *label323
   903 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   904 sensor *tmp325 .generator @coal
   905 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp325
 
   911 call *label11 *invalid :mineOre*retval (m:*label326) (h:*label326)
   912 label *label326
   913 label *label324
-    * label *label325
-    * label *label322
   914 set :supplyBase0:supplied true
   915 label *label319
-    * label *label320
   916 label *label317
-    * label *label318
   917 label *label287
-    * label *label288
   918 set *tmp331 100
   919 sensor *tmp329 .core @titanium
   920 jump *label328 greaterThanEq *tmp329 .targetTitanium
 
   929 op mul *tmp341 .unloader1 .powerTarget
   930 jump *label333 greaterThanEq *tmp340 *tmp341
   931 write "Goal 5: supplying generator" .display ".status1"
-    * label *label335
   932 set :mineOre.1:ore @coal
   933 setaddr :mineOre.1*retaddr *label336 (h:*label336)
   934 call *label12 *invalid :mineOre.1*retval (m:*label336) (h:*label336)
 
   938 sensor *tmp344 .core @silicon
   939 jump *label337 greaterThanEq *tmp344 .targetSilicon
   940 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label339
   941 sensor :supplyBase0:coal .core @coal
   942 sensor :supplyBase0:sand .core @sand
   943 set :mineOre.1:ore @sand
 
   952 sensor *tmp351 .core @copper
   953 jump *label343 greaterThanEq *tmp351 .targetCopper
   954 write "Goal 7: copper requirement" .display ".status1"
-    * label *label345
   955 set :mineOre.1:ore @copper
   956 setaddr :mineOre.1*retaddr *label346 (h:*label346)
   957 call *label12 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
 
   961 sensor *tmp354 .core @lead
   962 jump *label347 greaterThanEq *tmp354 .targetLead
   963 write "Goal 8: lead requirement" .display ".status1"
-    * label *label349
   964 set :mineOre.1:ore @lead
   965 setaddr :mineOre.1*retaddr *label350 (h:*label350)
   966 call *label12 *invalid :mineOre.1*retval (m:*label350) (h:*label350)
 
   970 sensor *tmp357 .core @metaglass
   971 jump *label351 greaterThanEq *tmp357 .targetMetaglass
   972 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label353
   973 set :mineOre.1:ore @sand
   974 setaddr :mineOre.1*retaddr *label354 (h:*label354)
   975 call *label12 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
 
   977 jump *label352 always
   978 label *label351
   979 write "Goal 10: supplying base" .display ".status1"
-    * label *label355
   980 sensor :supplyBase0:coal.1 .core @coal
   981 sensor :supplyBase0:sand.1 .core @sand
   982 set :mineOre.1:ore @sand
 
   992 label *label338
   993 label *label334
   994 label *label331
-    * label *label332
   995 jump *label330 always
   996 label *label329
   997 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label359
   998 set :fetchBlock:block .titaniumDrill
   999 set :fetchBlock:item @titanium
  1000 setaddr :fetchBlock*retaddr *label360 (h:*label360)
  1001 call *label13 *invalid :fetchBlock*retval (m:*label360) (h:*label360)
  1002 label *label360
  1003 label *label330
-    * label *label286
  1004 return :supplyBase0*retaddr
  1005 end
  1006 label *label20
  1007 write "Phase 1: supplying base" .display ".status1"
-    * label *label362
  1008 set :mineOre.1:ore @coal
  1009 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1010 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1011 label *label363
-    * label *label361
  1012 return :supplyBase1*retaddr
  1013 end
  1014 label *label21
 
  1023 call *label19 *invalid :supplyBase0*retval (m:*label368) (h:*label368)
  1024 label *label368
  1025 label *label366
-    * label *label364
  1026 return :supplyBase*retaddr
  1027 end
  1028 label *label22
 
  1041 set :targetMet*retval true
  1042 jump *label369 always
  1043 label *label380
-    * label *label381
  1044 label *label378
-    * label *label379
  1045 label *label376
-    * label *label377
  1046 label *label374
-    * label *label375
  1047 label *label372
-    * label *label373
  1048 label *label370
-    * label *label371
  1049 set :targetMet*retval false
  1050 jump *label369 always
  1051 label *label369
  1052 return :targetMet*retaddr
  1053 end
  1054 label *label23
-    * label *label426
  1055 op sign :meetTarget:count :meetTarget:copper
-    * label *label427
-    * label *label430
  1056 op sign *tmp385 :meetTarget:lead
  1057 op add :meetTarget:count :meetTarget:count *tmp385
-    * label *label431
-    * label *label434
  1058 op sign *tmp385 :meetTarget:graphite
  1059 op add :meetTarget:count :meetTarget:count *tmp385
-    * label *label435
-    * label *label438
  1060 op sign *tmp385 :meetTarget:silicon
  1061 op add :meetTarget:count :meetTarget:count *tmp385
-    * label *label439
-    * label *label442
  1062 op sign *tmp385 :meetTarget:titanium
  1063 op add :meetTarget:count :meetTarget:count *tmp385
-    * label *label443
-    * label *label446
  1064 op sign *tmp385 :meetTarget:metaglass
  1065 op add :meetTarget:count :meetTarget:count *tmp385
-    * label *label447
-    * label *label385
  1066 write :meetTarget:count .display ".totalTargets"
  1067 write :meetTarget:block .display ".nextBlock"
  1068 write :meetTarget:copper .display ".targetCopper"
 
  1091 op mul *tmp393 *tmp392 20
  1092 op add *tmp394 :meetTarget:silicon *tmp393
  1093 write *tmp394 .controller ".siliconReserve"
-    * label *label392
  1094 setaddr :targetMet*retaddr *label395 (h:*label395)
  1095 call *label22 *invalid :targetMet*retval (m:*label395) (h:*label395)
  1096 label *label395
 
  1099 setaddr :supplyBase*retaddr *label396 (h:*label396)
  1100 call *label21 *invalid :supplyBase*retval (m:*label396) (h:*label396)
  1101 label *label396
-    * label *label393
  1102 setaddr :targetMet*retaddr *label456 (h:*label456)
  1103 call *label22 *invalid :targetMet*retval (m:*label456) (h:*label456)
  1104 label *label456
  1105 jump *label455 equal :targetMet*retval false
  1106 label *label394
-    * label *label382
  1107 return :meetTarget*retaddr
  1108 end
  1109 label *label24
 
  1111 op sub *tmp396 *tmp76 1
  1112 write *tmp396 bank1 511
  1113 op mul :second.2:result @second TIME_COMPRESS
-    * label *label398
  1114 op floor *tmp400 :second.2:result
  1115 op mul *tmp401 *tmp400 1000
  1116 op add *tmp402 :log:encodedId *tmp401
  1117 write *tmp402 bank1 *tmp396
-    * label *label397
  1118 return :log*retaddr
  1119 end
  1120 label *label25
 
  1122 setaddr :log*retaddr *label400 (h:*label400)
  1123 call *label24 *invalid :log*retval (m:*label400) (h:*label400)
  1124 label *label400
-    * label *label399
  1125 return :logBlock*retaddr
  1126 end
  1127 label *label26
 
  1131 call *label6 *invalid :moveTo.1*retval (m:*label402) (h:*label402)
  1132 label *label402
  1133 write "Building..." .display ".status3"
-    * label *label403
  1134 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1135 jump *label404 equal :buildBlockAt:building null
  1136 jump *label406 notEqual :buildBlockAt:type :buildBlockAt:block
  1137 set :buildBlockAt*retval :buildBlockAt:building
  1138 jump *label401 always
  1139 label *label406
-    * label *label407
  1140 jump *label408 equal :buildBlockAt:skipError false
  1141 set :buildBlockAt*retval null
  1142 jump *label401 always
  1143 label *label408
-    * label *label409
  1144 set .ERROR "Cannot build at ("
  1145 stop
-    * label *label410
  1146 label *label404
-    * label *label405
  1147 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1148 wait 0.25
  1149 label *label411
 
  1152 set :buildBlockAt*retval null
  1153 jump *label401 always
  1154 label *label414
-    * label *label415
-    * label *label412
  1155 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label413
  1156 set :logBlock:block :buildBlockAt:block
  1157 setaddr :logBlock*retaddr *label416 (h:*label416)
  1158 call *label25 *invalid :logBlock*retval (m:*label416) (h:*label416)
 
  1182 call *label26 *invalid :buildBlockAt*retval (m:*label419) (h:*label419)
  1183 label *label419
  1184 set :buildBlock*retval :buildBlockAt*retval
-    * label *label417
  1185 return :buildBlock*retaddr
  1186 end
  1187 label *label28
 
  1192 label *label423
  1193 op add :findUnits:count :findUnits:count 1
  1194 ubind :findUnits:type
-    * label *label424
  1195 jump *label423 notEqual @unit :findUnits:firstUnit
-    * label *label425
  1196 label *label421
-    * label *label422
  1197 set :findUnits*retval :findUnits:count
-    * label *label420
  1198 return :findUnits*retaddr
  1199 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
   307 call *label21 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   308 label *label117
   309 sensor *tmp158 *tmp91 @totalPower
-    * jump *label118 greaterThanEq *tmp158 300
-    * jump *label112 always
+  310 jump *label112 lessThan *tmp158 300
   311 label *label118
   312 read *tmp34 *tmp126 ".monos"
   313 jump *label110 lessThan *tmp34 3
 
   464 label *label169
   465 set .thoriumDrill :buildBlockAt*retval
   466 read *tmp66 processor4 ".water1X"
-    * jump *label170 greaterThanEq *tmp66 0
-    * jump *label162 always
+  467 jump *label162 lessThan *tmp66 0
   468 label *label170
   469 set :meetTarget:block @water-extractor
   470 set :meetTarget:copper 30
 
   487 call *label26 *invalid :buildBlockAt*retval (m:*label174) (h:*label174)
   488 label *label174
   489 read *tmp68 processor4 ".water2X"
-    * jump *label175 greaterThanEq *tmp68 0
-    * jump *label162 always
+  490 jump *label162 lessThan *tmp68 0
   491 label *label175
   492 set :meetTarget:block @water-extractor
   493 set :meetTarget:copper 30
 
   725 op notEqual *tmp252 :mineOre:item null
   726 op notEqual *tmp253 :mineOre:item :mineOre:ore
   727 op land *tmp254 *tmp252 *tmp253
-    * jump *label253 equal *tmp254 false
-    * jump *label252 always
+  728 jump *label252 notEqual *tmp254 false
   729 label *label253
   730 ucontrol mine :mineOre:x :mineOre:y
   731 op mul :second.1:result @second TIME_COMPRESS
-    * jump *label256 lessThanEq :second.1:result :mineOre:stop
-    * jump *label252 always
+  732 jump *label252 greaterThan :second.1:result :mineOre:stop
   733 label *label256
   734 sensor *tmp259 @unit @totalItems
   735 jump *label250 lessThan *tmp259 :mineOre:amount
 
   798 end
   799 label *label15
   800 ubind :findFreeUnit:unit_type
-    * jump *label277 notEqual @unit null
-    * jump *label276 always
+  801 jump *label276 equal @unit null
   802 label *label277
   803 set :findFreeUnit:first_unit @unit
   804 label *label279

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   308 label *label117
   309 sensor *tmp158 *tmp91 @totalPower
   310 jump *label112 lessThan *tmp158 300
-    * label *label118
   311 read *tmp34 *tmp126 ".monos"
   312 jump *label110 lessThan *tmp34 3
   313 label *label112
 
   464 set .thoriumDrill :buildBlockAt*retval
   465 read *tmp66 processor4 ".water1X"
   466 jump *label162 lessThan *tmp66 0
-    * label *label170
   467 set :meetTarget:block @water-extractor
   468 set :meetTarget:copper 30
   469 set :meetTarget:lead 30
 
   486 label *label174
   487 read *tmp68 processor4 ".water2X"
   488 jump *label162 lessThan *tmp68 0
-    * label *label175
   489 set :meetTarget:block @water-extractor
   490 set :meetTarget:copper 30
   491 set :meetTarget:lead 30
 
   723 op notEqual *tmp253 :mineOre:item :mineOre:ore
   724 op land *tmp254 *tmp252 *tmp253
   725 jump *label252 notEqual *tmp254 false
-    * label *label253
   726 ucontrol mine :mineOre:x :mineOre:y
   727 op mul :second.1:result @second TIME_COMPRESS
   728 jump *label252 greaterThan :second.1:result :mineOre:stop
-    * label *label256
   729 sensor *tmp259 @unit @totalItems
   730 jump *label250 lessThan *tmp259 :mineOre:amount
   731 label *label252
 
   794 label *label15
   795 ubind :findFreeUnit:unit_type
   796 jump *label276 equal @unit null
-    * label *label277
   797 set :findFreeUnit:first_unit @unit
   798 label *label279
   799 sensor *tmp278 @unit @controlled

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   799 sensor *tmp278 @unit @controlled
   800 jump *label282 notEqual *tmp278 0
   801 ucontrol flag :findFreeUnit:initial_flag
-    * jump *label276 always
+  802 return :findFreeUnit*retaddr
   803 jump *label283 always
   804 label *label282
   805 sensor *tmp281 :findFreeUnit:first_unit @dead
 
   912 label *label328
   913 sensor *tmp335 .titaniumDrill @titanium
   914 jump *label329 greaterThanEq *tmp335 *tmp331
-    * jump *label331 notEqual :supplyBase0:supplied false
+  915 jump *label330 notEqual :supplyBase0:supplied false
   916 sensor *tmp340 .battery @totalPower
   917 op mul *tmp341 .unloader1 .powerTarget
   918 jump *label333 greaterThanEq *tmp340 *tmp341
 
   921 setaddr :mineOre.1*retaddr *label336 (h:*label336)
   922 call *label12 *invalid :mineOre.1*retval (m:*label336) (h:*label336)
   923 label *label336
-    * jump *label334 always
+  924 return :supplyBase0*retaddr
   925 label *label333
   926 sensor *tmp344 .core @silicon
   927 jump *label337 greaterThanEq *tmp344 .targetSilicon
 
   935 setaddr :mineOre.1*retaddr *label342 (h:*label342)
   936 call *label12 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
   937 label *label342
-    * jump *label338 always
+  938 return :supplyBase0*retaddr
   939 label *label337
   940 sensor *tmp351 .core @copper
   941 jump *label343 greaterThanEq *tmp351 .targetCopper
 
   944 setaddr :mineOre.1*retaddr *label346 (h:*label346)
   945 call *label12 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
   946 label *label346
-    * jump *label344 always
+  947 return :supplyBase0*retaddr
   948 label *label343
   949 sensor *tmp354 .core @lead
   950 jump *label347 greaterThanEq *tmp354 .targetLead
 
   953 setaddr :mineOre.1*retaddr *label350 (h:*label350)
   954 call *label12 *invalid :mineOre.1*retval (m:*label350) (h:*label350)
   955 label *label350
-    * jump *label348 always
+  956 return :supplyBase0*retaddr
   957 label *label347
   958 sensor *tmp357 .core @metaglass
   959 jump *label351 greaterThanEq *tmp357 .targetMetaglass
 
   962 setaddr :mineOre.1*retaddr *label354 (h:*label354)
   963 call *label12 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
   964 label *label354
-    * jump *label352 always
+  965 return :supplyBase0*retaddr
   966 label *label351
   967 write "Goal 10: supplying base" .display ".status1"
   968 sensor :supplyBase0:coal.1 .core @coal
 
   980 label *label338
   981 label *label334
   982 label *label331
-    * jump *label330 always
+  983 return :supplyBase0*retaddr
   984 label *label329
   985 write "Goal 11: Fetching titanium" .display ".status1"
   986 set :fetchBlock:block .titaniumDrill
 
  1005 setaddr :supplyBase1*retaddr *label367 (h:*label367)
  1006 call *label20 *invalid :supplyBase1*retval (m:*label367) (h:*label367)
  1007 label *label367
-    * jump *label366 always
+ 1008 return :supplyBase*retaddr
  1009 label *label365
  1010 setaddr :supplyBase0*retaddr *label368 (h:*label368)
  1011 call *label19 *invalid :supplyBase0*retval (m:*label368) (h:*label368)
 
  1027 sensor *tmp381 .core @metaglass
  1028 jump *label380 lessThan *tmp381 .targetMetaglass
  1029 set :targetMet*retval true
-    * jump *label369 always
+ 1030 return :targetMet*retaddr
  1031 label *label380
  1032 label *label378
  1033 label *label376
 
  1035 label *label372
  1036 label *label370
  1037 set :targetMet*retval false
-    * jump *label369 always
+ 1038 return :targetMet*retaddr
  1039 label *label369
  1040 return :targetMet*retaddr
  1041 end
 
  1123 jump *label404 equal :buildBlockAt:building null
  1124 jump *label406 notEqual :buildBlockAt:type :buildBlockAt:block
  1125 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label401 always
+ 1126 return :buildBlockAt*retaddr
  1127 label *label406
  1128 jump *label408 equal :buildBlockAt:skipError false
  1129 set :buildBlockAt*retval null
-    * jump *label401 always
+ 1130 return :buildBlockAt*retaddr
  1131 label *label408
  1132 set .ERROR "Cannot build at ("
  1133 stop
 
  1138 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1139 jump *label414 notEqual :buildBlockAt:building null
  1140 set :buildBlockAt*retval null
-    * jump *label401 always
+ 1141 return :buildBlockAt*retaddr
  1142 label *label414
  1143 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
  1144 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-43 instructions):
 
    51 label *label40
    52 set *tmp87 :buildBlock*retval
    53 jump *label35 always
-    * multijump *tmp88 0 0 (m:marker0)
-    * multilabel *label39 (m:marker0)
    54 label *label35
    55 set .press *tmp87
    56 op add :buildBlockFromCfg.1:y .coreY 4
 
    64 label *label46
    65 set *tmp91 :buildBlock*retval
    66 jump *label41 always
-    * multijump *tmp92 0 0 (m:marker1)
-    * multilabel *label45 (m:marker1)
    67 label *label41
    68 set .battery *tmp91
    69 op add :buildBlockFromCfg.2:x .coreX -1
 
    73 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    74 label *label52
    75 jump *label47 always
-    * multijump *tmp96 0 0 (m:marker2)
-    * multilabel *label51 (m:marker2)
    76 label *label47
    77 op add :buildBlockFromCfg.3:y .coreY 3
    78 set :buildBlock:block @combustion-generator
 
    85 label *label58
    86 set *tmp99 :buildBlock*retval
    87 jump *label53 always
-    * multijump *tmp100 0 0 (m:marker3)
-    * multilabel *label57 (m:marker3)
    88 label *label53
    89 set .generator *tmp99
    90 set .powerTarget 800
 
    99 label *label64
   100 set *tmp103 :buildBlock*retval
   101 jump *label59 always
-    * multijump *tmp104 0 0 (m:marker4)
-    * multilabel *label63 (m:marker4)
   102 label *label59
   103 set .smelter *tmp103
   104 set :meetTarget:block @pneumatic-drill
 
   158 label *label78
   159 set *tmp122 :buildBlock*retval
   160 jump *label73 always
-    * multijump *tmp123 0 0 (m:marker5)
-    * multilabel *label77 (m:marker5)
   161 label *label73
   162 set .unloader1 *tmp122
   163 op add :buildBlockFromCfg.6:x .coreX 1
 
   174 label *label84
   175 set *tmp126 :buildBlock*retval
   176 jump *label79 always
-    * multijump *tmp127 0 0 (m:marker6)
-    * multilabel *label83 (m:marker6)
   177 label *label79
   178 set .controller *tmp126
   179 write processor1 *tmp126 ".display"
 
   199 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   200 label *label90
   201 jump *label85 always
-    * multijump *tmp131 0 0 (m:marker7)
-    * multilabel *label89 (m:marker7)
   202 label *label85
   203 op add :buildBlockFromCfg.8:y .coreY 1
   204 set :buildBlock:block @unloader
 
   213 label *label96
   214 set *tmp134 :buildBlock*retval
   215 jump *label91 always
-    * multijump *tmp135 0 0 (m:marker8)
-    * multilabel *label95 (m:marker8)
   216 label *label91
   217 write *tmp134 *tmp126 ".unloader2"
   218 op add :buildBlockFromCfg.9:x .coreX -3
 
   227 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   228 label *label102
   229 jump *label97 always
-    * multijump *tmp139 0 0 (m:marker9)
-    * multilabel *label101 (m:marker9)
   230 label *label97
   231 op add :buildBlockFromCfg.10:x .coreX -4
   232 set :buildBlock:block @air-factory
 
   241 label *label108
   242 set *tmp142 :buildBlock*retval
   243 jump *label103 always
-    * multijump *tmp143 0 0 (m:marker10)
-    * multilabel *label107 (m:marker10)
   244 label *label103
   245 write *tmp142 *tmp126 ".factory"
   246 write *tmp142 processor1 ".factory"
 
   311 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   312 label *label126
   313 jump *label121 always
-    * multijump *tmp166 0 0 (m:marker11)
-    * multilabel *label125 (m:marker11)
   314 label *label121
   315 op add :buildBlockFromCfg.12:x .coreX 3.5
   316 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   327 label *label132
   328 set *tmp169 :buildBlock*retval
   329 jump *label127 always
-    * multijump *tmp170 0 0 (m:marker12)
-    * multilabel *label131 (m:marker12)
   330 label *label127
   331 write *tmp169 *tmp126 ".kiln"
   332 set :buildBlock:block @junction
 
   339 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   340 label *label138
   341 jump *label133 always
-    * multijump *tmp174 0 0 (m:marker13)
-    * multilabel *label137 (m:marker13)
   342 label *label133
   343 op add :buildBlockFromCfg.14:x .coreX -3.5
   344 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   353 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   354 label *label144
   355 jump *label139 always
-    * multijump *tmp178 0 0 (m:marker14)
-    * multilabel *label143 (m:marker14)
   356 label *label139
   357 set :buildBlock:block @steam-generator
   358 set :buildBlock:x :buildBlockFromCfg.14:x
 
   367 label *label150
   368 set *tmp181 :buildBlock*retval
   369 jump *label145 always
-    * multijump *tmp182 0 0 (m:marker15)
-    * multilabel *label149 (m:marker15)
   370 label *label145
   371 write *tmp181 *tmp126 ".generator2"
   372 set .graphiteSurplus 200
 
   553 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
   554 label *label195
   555 jump *label190 always
-    * multijump *tmp212 0 0 (m:marker16)
-    * multilabel *label194 (m:marker16)
   556 label *label190
   557 write 0 processor1 ".totalTargets"
   558 write null processor1 ".nextBlock"
 
   569 call *label21 *invalid :supplyBase*retval (m:*label203) (h:*label203)
   570 label *label203
   571 jump *label200 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   572 label *label5
   573 write "Moving..." .display ".status3"
   574 op sub *tmp219 :moveTo:radius 0.5
 
   580 jump *label451 equal *tmp217 false
   581 label *label210
   582 return :moveTo*retaddr
-    * end
   583 label *label6
   584 set :moveTo:x :moveTo.1:x
   585 set :moveTo:y :moveTo.1:y
 
   588 call *label5 *invalid :moveTo*retval (m:*label212) (h:*label212)
   589 label *label212
   590 return :moveTo.1*retaddr
-    * end
   591 label *label7
   592 write "Moving..." .display ".status3"
   593 label *label215
 
   599 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp225
   600 jump *label215 equal *tmp225 false
   601 return :moveToEmpty*retaddr
-    * end
   602 label *label8
   603 sensor *tmp227 :moveToBlock:block @x
   604 sensor *tmp228 :moveToBlock:block @y
 
   609 call *label5 *invalid :moveTo*retval (m:*label221) (h:*label221)
   610 label *label221
   611 return :moveToBlock*retaddr
-    * end
   612 label *label9
   613 write "Depositing..." .display ".status3"
   614 sensor *tmp229 @unit @firstItem
 
   638 write 0 .display ".transportTarget"
   639 write null .display ".transportItem"
   640 return :depositItems*retaddr
-    * end
   641 label *label10
   642 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp239 0
   643 jump *label235 notEqual *tmp239 false
 
   645 stop
   646 label *label235
   647 return :locateOre*retaddr
-    * end
   648 label *label11
   649 op min :mineOre:amount :mineOre:amount 30
   650 write :mineOre:amount .display ".transportTarget"
 
   692 call *label9 *invalid :depositItems*retval (m:*label258) (h:*label258)
   693 label *label258
   694 return :mineOre*retaddr
-    * end
   695 label *label12
   696 write "Mining " .display ".status2"
   697 write :mineOre.1:ore .display ".item2"
 
   703 call *label11 *invalid :mineOre*retval (m:*label261) (h:*label261)
   704 label *label261
   705 return :mineOre.1*retaddr
-    * end
   706 label *label13
   707 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   708 write :transportStatus.2:target .display ".transportTarget"
 
   744 call *label9 *invalid :depositItems*retval (m:*label275) (h:*label275)
   745 label *label275
   746 return :fetchBlock*retaddr
-    * end
   747 label *label15
   748 ubind :findFreeUnit:unit_type
   749 jump *label276 equal @unit null
 
   753 jump *label282 notEqual *tmp278 0
   754 ucontrol flag :findFreeUnit:initial_flag
   755 return :findFreeUnit*retaddr
-    * jump *label283 always
   756 label *label282
   757 sensor *tmp281 :findFreeUnit:first_unit @dead
   758 jump *label284 notEqual *tmp281 1
 
   763 jump *label279 notEqual :findFreeUnit:first_unit @unit
   764 label *label276
   765 return :findFreeUnit*retaddr
-    * end
   766 label *label19
   767 set :supplyBase0:supplied false
   768 jump *label287 notEqual .unloader1 null
 
   925 setaddr :mineOre.1*retaddr *label358 (h:*label358)
   926 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
   927 label *label358
-    * label *label352
-    * label *label348
-    * label *label344
-    * label *label338
-    * label *label334
-    * label *label331
   928 return :supplyBase0*retaddr
   929 label *label329
   930 write "Goal 11: Fetching titanium" .display ".status1"
 
   935 label *label360
   936 label *label330
   937 return :supplyBase0*retaddr
-    * end
   938 label *label20
   939 write "Phase 1: supplying base" .display ".status1"
   940 set :mineOre.1:ore @coal
 
   942 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
   943 label *label363
   944 return :supplyBase1*retaddr
-    * end
   945 label *label21
   946 read *tmp34 .controller ".monos"
   947 jump *label365 lessThanEq *tmp34 3
 
   953 setaddr :supplyBase0*retaddr *label368 (h:*label368)
   954 call *label19 *invalid :supplyBase0*retval (m:*label368) (h:*label368)
   955 label *label368
-    * label *label366
   956 return :supplyBase*retaddr
-    * end
   957 label *label22
   958 sensor *tmp366 .core @copper
   959 jump *label370 lessThan *tmp366 .targetCopper
 
   977 label *label370
   978 set :targetMet*retval false
   979 return :targetMet*retaddr
-    * label *label369
-    * return :targetMet*retaddr
-    * end
   980 label *label23
   981 op sign :meetTarget:count :meetTarget:copper
   982 op sign *tmp385 :meetTarget:lead
 
  1031 jump *label455 equal :targetMet*retval false
  1032 label *label394
  1033 return :meetTarget*retaddr
-    * end
  1034 label *label24
  1035 read *tmp76 bank1 511
  1036 op sub *tmp396 *tmp76 1
 
  1041 op add *tmp402 :log:encodedId *tmp401
  1042 write *tmp402 bank1 *tmp396
  1043 return :log*retaddr
-    * end
  1044 label *label25
  1045 sensor :log:encodedId :logBlock:block @id
  1046 setaddr :log*retaddr *label400 (h:*label400)
  1047 call *label24 *invalid :log*retval (m:*label400) (h:*label400)
  1048 label *label400
  1049 return :logBlock*retaddr
-    * end
  1050 label *label26
  1051 set :moveTo.1:x :buildBlockAt:x
  1052 set :moveTo.1:y :buildBlockAt:y
 
  1081 call *label25 *invalid :logBlock*retval (m:*label416) (h:*label416)
  1082 label *label416
  1083 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label401
  1084 return :buildBlockAt*retaddr
-    * end
  1085 label *label27
  1086 set :meetTarget:block :buildBlock:block
  1087 set :meetTarget:copper :buildBlock:copper
 
  1104 label *label419
  1105 set :buildBlock*retval :buildBlockAt*retval
  1106 return :buildBlock*retaddr
-    * end
  1107 label *label28
  1108 set :findUnits:count 0
  1109 ubind :findUnits:type
 
  1116 label *label421
  1117 set :findUnits*retval :findUnits:count
  1118 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   758 jump *label284 notEqual *tmp281 1
   759 set :findFreeUnit:first_unit @unit
   760 label *label284
-    * label *label283
   761 ubind :findFreeUnit:unit_type
   762 jump *label279 notEqual :findFreeUnit:first_unit @unit
   763 label *label276

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    50 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    51 label *label40
    52 set *tmp87 :buildBlock*retval
-    * jump *label35 always
    53 label *label35
    54 set .press *tmp87
    55 op add :buildBlockFromCfg.1:y .coreY 4
 
    62 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    63 label *label46
    64 set *tmp91 :buildBlock*retval
-    * jump *label41 always
    65 label *label41
    66 set .battery *tmp91
    67 op add :buildBlockFromCfg.2:x .coreX -1
 
    70 setaddr :buildBlock*retaddr *label52 (h:*label52)
    71 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    72 label *label52
-    * jump *label47 always
    73 label *label47
    74 op add :buildBlockFromCfg.3:y .coreY 3
    75 set :buildBlock:block @combustion-generator
 
    81 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    82 label *label58
    83 set *tmp99 :buildBlock*retval
-    * jump *label53 always
    84 label *label53
    85 set .generator *tmp99
    86 set .powerTarget 800
 
    94 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
    95 label *label64
    96 set *tmp103 :buildBlock*retval
-    * jump *label59 always
    97 label *label59
    98 set .smelter *tmp103
    99 set :meetTarget:block @pneumatic-drill
 
   152 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   153 label *label78
   154 set *tmp122 :buildBlock*retval
-    * jump *label73 always
   155 label *label73
   156 set .unloader1 *tmp122
   157 op add :buildBlockFromCfg.6:x .coreX 1
 
   167 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   168 label *label84
   169 set *tmp126 :buildBlock*retval
-    * jump *label79 always
   170 label *label79
   171 set .controller *tmp126
   172 write processor1 *tmp126 ".display"
 
   191 setaddr :buildBlock*retaddr *label90 (h:*label90)
   192 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   193 label *label90
-    * jump *label85 always
   194 label *label85
   195 op add :buildBlockFromCfg.8:y .coreY 1
   196 set :buildBlock:block @unloader
 
   204 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   205 label *label96
   206 set *tmp134 :buildBlock*retval
-    * jump *label91 always
   207 label *label91
   208 write *tmp134 *tmp126 ".unloader2"
   209 op add :buildBlockFromCfg.9:x .coreX -3
 
   217 setaddr :buildBlock*retaddr *label102 (h:*label102)
   218 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   219 label *label102
-    * jump *label97 always
   220 label *label97
   221 op add :buildBlockFromCfg.10:x .coreX -4
   222 set :buildBlock:block @air-factory
 
   230 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   231 label *label108
   232 set *tmp142 :buildBlock*retval
-    * jump *label103 always
   233 label *label103
   234 write *tmp142 *tmp126 ".factory"
   235 write *tmp142 processor1 ".factory"
 
   299 setaddr :buildBlock*retaddr *label126 (h:*label126)
   300 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   301 label *label126
-    * jump *label121 always
   302 label *label121
   303 op add :buildBlockFromCfg.12:x .coreX 3.5
   304 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   314 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   315 label *label132
   316 set *tmp169 :buildBlock*retval
-    * jump *label127 always
   317 label *label127
   318 write *tmp169 *tmp126 ".kiln"
   319 set :buildBlock:block @junction
 
   325 setaddr :buildBlock*retaddr *label138 (h:*label138)
   326 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   327 label *label138
-    * jump *label133 always
   328 label *label133
   329 op add :buildBlockFromCfg.14:x .coreX -3.5
   330 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   338 setaddr :buildBlock*retaddr *label144 (h:*label144)
   339 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   340 label *label144
-    * jump *label139 always
   341 label *label139
   342 set :buildBlock:block @steam-generator
   343 set :buildBlock:x :buildBlockFromCfg.14:x
 
   351 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   352 label *label150
   353 set *tmp181 :buildBlock*retval
-    * jump *label145 always
   354 label *label145
   355 write *tmp181 *tmp126 ".generator2"
   356 set .graphiteSurplus 200
 
   536 setaddr :buildBlock*retaddr *label195 (h:*label195)
   537 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
   538 label *label195
-    * jump *label190 always
   539 label *label190
   540 write 0 processor1 ".totalTargets"
   541 write null processor1 ".nextBlock"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    50 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    51 label *label40
    52 set *tmp87 :buildBlock*retval
-    * label *label35
    53 set .press *tmp87
    54 op add :buildBlockFromCfg.1:y .coreY 4
    55 set :buildBlock:block @battery
 
    61 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    62 label *label46
    63 set *tmp91 :buildBlock*retval
-    * label *label41
    64 set .battery *tmp91
    65 op add :buildBlockFromCfg.2:x .coreX -1
    66 set :buildBlock:x :buildBlockFromCfg.2:x
 
    68 setaddr :buildBlock*retaddr *label52 (h:*label52)
    69 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    70 label *label52
-    * label *label47
    71 op add :buildBlockFromCfg.3:y .coreY 3
    72 set :buildBlock:block @combustion-generator
    73 set :buildBlock:x .coreX
 
    78 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    79 label *label58
    80 set *tmp99 :buildBlock*retval
-    * label *label53
    81 set .generator *tmp99
    82 set .powerTarget 800
    83 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    90 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
    91 label *label64
    92 set *tmp103 :buildBlock*retval
-    * label *label59
    93 set .smelter *tmp103
    94 set :meetTarget:block @pneumatic-drill
    95 set :meetTarget:copper 18
 
   147 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   148 label *label78
   149 set *tmp122 :buildBlock*retval
-    * label *label73
   150 set .unloader1 *tmp122
   151 op add :buildBlockFromCfg.6:x .coreX 1
   152 set :buildBlock:block @micro-processor
 
   161 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   162 label *label84
   163 set *tmp126 :buildBlock*retval
-    * label *label79
   164 set .controller *tmp126
   165 write processor1 *tmp126 ".display"
   166 write .core *tmp126 ".core"
 
   184 setaddr :buildBlock*retaddr *label90 (h:*label90)
   185 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   186 label *label90
-    * label *label85
   187 op add :buildBlockFromCfg.8:y .coreY 1
   188 set :buildBlock:block @unloader
   189 set :buildBlock:x :buildBlockFromCfg.7:x
 
   196 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   197 label *label96
   198 set *tmp134 :buildBlock*retval
-    * label *label91
   199 write *tmp134 *tmp126 ".unloader2"
   200 op add :buildBlockFromCfg.9:x .coreX -3
   201 set :buildBlock:block @overflow-gate
 
   208 setaddr :buildBlock*retaddr *label102 (h:*label102)
   209 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   210 label *label102
-    * label *label97
   211 op add :buildBlockFromCfg.10:x .coreX -4
   212 set :buildBlock:block @air-factory
   213 set :buildBlock:x :buildBlockFromCfg.10:x
 
   220 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   221 label *label108
   222 set *tmp142 :buildBlock*retval
-    * label *label103
   223 write *tmp142 *tmp126 ".factory"
   224 write *tmp142 processor1 ".factory"
   225 write 2 *tmp126 ".flareTarget"
 
   288 setaddr :buildBlock*retaddr *label126 (h:*label126)
   289 call *label27 *invalid :buildBlock*retval (m:*label126) (h:*label126)
   290 label *label126
-    * label *label121
   291 op add :buildBlockFromCfg.12:x .coreX 3.5
   292 op add :buildBlockFromCfg.12:y .coreY 0.5
   293 set :buildBlock:block @kiln
 
   302 call *label27 *invalid :buildBlock*retval (m:*label132) (h:*label132)
   303 label *label132
   304 set *tmp169 :buildBlock*retval
-    * label *label127
   305 write *tmp169 *tmp126 ".kiln"
   306 set :buildBlock:block @junction
   307 set :buildBlock:x :buildBlockFromCfg.11:x
 
   312 setaddr :buildBlock*retaddr *label138 (h:*label138)
   313 call *label27 *invalid :buildBlock*retval (m:*label138) (h:*label138)
   314 label *label138
-    * label *label133
   315 op add :buildBlockFromCfg.14:x .coreX -3.5
   316 op add :buildBlockFromCfg.14:y .coreY 4.5
   317 set :buildBlock:block @water-extractor
 
   324 setaddr :buildBlock*retaddr *label144 (h:*label144)
   325 call *label27 *invalid :buildBlock*retval (m:*label144) (h:*label144)
   326 label *label144
-    * label *label139
   327 set :buildBlock:block @steam-generator
   328 set :buildBlock:x :buildBlockFromCfg.14:x
   329 set :buildBlock:y :buildBlockFromCfg:y
 
   336 call *label27 *invalid :buildBlock*retval (m:*label150) (h:*label150)
   337 label *label150
   338 set *tmp181 :buildBlock*retval
-    * label *label145
   339 write *tmp181 *tmp126 ".generator2"
   340 set .graphiteSurplus 200
   341 set .siliconSurplus 1000
 
   520 setaddr :buildBlock*retaddr *label195 (h:*label195)
   521 call *label27 *invalid :buildBlock*retval (m:*label195) (h:*label195)
   522 label *label195
-    * label *label190
   523 write 0 processor1 ".totalTargets"
   524 write null processor1 ".nextBlock"
   525 label *label196

Final code before resolving virtual instructions:

    0:  jump *label458 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 TIME_COMPRESS
    2:  draw triangle .ERROR .battery .builder .controller .core .coreX
    3:  draw triangle .coreY .display .generator .graphiteSurplus .metaglassSurplus .powerTarget
    4:  draw triangle .press .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead
    5:  draw triangle .targetMetaglass .targetSilicon .targetTitanium .thoriumDrill .thoriumGenerator .titaniumDrill
    6:  draw triangle .unloader1 :flares :monos :polys :searchThorium :buildBlock:block
    7:  draw triangle :buildBlock:config :buildBlock:copper :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation
    8:  draw triangle :buildBlock:silicon :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockAt:block :buildBlockAt:building
    9:  draw triangle :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y
   10:  draw triangle :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x :buildBlockFromCfg.9:x :buildBlockFromCfg.4:x :buildBlockFromCfg.12:x
   11:  draw triangle :buildBlockFromCfg.7:x :buildBlockFromCfg.11:x :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x :buildBlockFromCfg.14:y :buildBlockFromCfg.5:y
   12:  draw triangle :buildBlockFromCfg.1:y :buildBlockFromCfg:y :buildBlockFromCfg.8:y :buildBlockFromCfg.12:y :buildBlockFromCfg.3:y :buildBlockFromCfg.7:y
   13:  draw triangle :buildThoriumDrill:result :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block :depositItems:cap
   14:  draw triangle :depositItems:item :fetchBlock:block :fetchBlock:item :fetchBlock:unitItem :findFreeUnit:first_unit :findFreeUnit:initial_flag
   15:  draw triangle :findFreeUnit:unit_type :findUnits:count :findUnits:firstUnit :findUnits:type :locateOre:ore :locateOre:x
   16:  draw triangle :locateOre:y :log:encodedId :logBlock:block :meetTarget:block :meetTarget:copper :meetTarget:count
   17:  draw triangle :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon :meetTarget:titanium :mineOre:amount
   18:  draw triangle :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore :mineOre:stop :mineOre:x
   19:  draw triangle :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x :moveTo.1:y :moveTo:y
   20:  draw triangle :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y :second:result :second.2:result
   21:  draw triangle :second.1:result :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied
   22:  draw triangle :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing
   23:  draw triangle :supplyBlock.2:missing :supplyBlock.3:missing :transportStatus.2:target 0 0 0
        label *label458
   24:  set TIME_COMPRESS 8                                          common.mnd: param TIME_COMPRESS = 8;
   25:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   26:  set .press null                                              CoreBuilder.mnd: var
   27:  set .generator null                                          ...
   28:  set .battery null                                            ...
   29:  set .smelter null                                            ...
   30:  set .titaniumDrill null                                      ...
   31:  set .unloader1 null                                          ...
   32:  set .graphiteSurplus 20                                      CoreBuilder.mnd: var
   33:  set .siliconSurplus 20                                       ...
   34:  set .metaglassSurplus 20                                     ...
   35:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label29                                               CoreBuilder.mnd: do
   36:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   37:  set .builder @unit                                           ...
   38:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   39:  jump *label29 equal .core null                               CoreBuilder.mnd: do
   40:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   41:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.monos);
   42:  setaddr :findUnits*retaddr *label32                          ...
   43:  call *label28 *invalid :findUnits*retval                     ...
        label *label32                                               ...
   44:  write :findUnits:count processor1 ".monos"                   ...
   45:  set :monos :findUnits*retval                                 ...
   46:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.flares);
   47:  setaddr :findUnits*retaddr *label33                          ...
   48:  call *label28 *invalid :findUnits*retval                     ...
        label *label33                                               ...
   49:  write :findUnits:count processor1 ".flares"                  ...
   50:  set :flares :findUnits*retval                                ...
   51:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.polys);
   52:  setaddr :findUnits*retaddr *label34                          ...
   53:  call *label28 *invalid :findUnits*retval                     ...
        label *label34                                               ...
   54:  write :findUnits:count processor1 ".polys"                   ...
   55:  set :polys :findUnits*retval                                 ...
   56:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   57:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   58:  set :buildBlock:block @graphite-press                        ...
   59:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   60:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   61:  set :buildBlock:copper 75                                    ...
   62:  set :buildBlock:lead 30                                      ...
   63:  set :buildBlock:graphite 0                                   ...
   64:  set :buildBlock:silicon 0                                    ...
   65:  set :buildBlock:titanium 0                                   ...
   66:  set :buildBlock:metaglass 0                                  ...
   67:  set :buildBlock:rotation 0                                   ...
   68:  set :buildBlock:config null                                  ...
   69:  setaddr :buildBlock*retaddr *label40                         ...
   70:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label40                                               ...
   71:  set *tmp87 :buildBlock*retval                                ...
   72:  set .press *tmp87                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   73:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   74:  set :buildBlock:block @battery                               ...
   75:  set :buildBlock:x .coreX                                     ...
   76:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   77:  set :buildBlock:copper 5                                     ...
   78:  set :buildBlock:lead 20                                      ...
   79:  setaddr :buildBlock*retaddr *label46                         ...
   80:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label46                                               ...
   81:  set *tmp91 :buildBlock*retval                                ...
   82:  set .battery *tmp91                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   83:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   84:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   85:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   86:  setaddr :buildBlock*retaddr *label52                         ...
   87:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label52                                               ...
   88:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   89:  set :buildBlock:block @combustion-generator                  ...
   90:  set :buildBlock:x .coreX                                     ...
   91:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   92:  set :buildBlock:copper 25                                    ...
   93:  set :buildBlock:lead 15                                      ...
   94:  setaddr :buildBlock*retaddr *label58                         ...
   95:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label58                                               ...
   96:  set *tmp99 :buildBlock*retval                                ...
   97:  set .generator *tmp99                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   98:  set .powerTarget 800                                         CoreBuilder.mnd: powerTarget = 800;
   99:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  100:  set :buildBlock:block @silicon-smelter                       ...
  101:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  102:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  103:  set :buildBlock:copper 30                                    ...
  104:  set :buildBlock:lead 25                                      ...
  105:  setaddr :buildBlock*retaddr *label64                         ...
  106:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label64                                               ...
  107:  set *tmp103 :buildBlock*retval                               ...
  108:  set .smelter *tmp103                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  109:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  110:  set :meetTarget:copper 18                                    ...
  111:  set :meetTarget:lead 0                                       ...
  112:  set :meetTarget:graphite 10                                  ...
  113:  set :meetTarget:silicon 0                                    ...
  114:  set :meetTarget:titanium 0                                   ...
  115:  set :meetTarget:metaglass 0                                  ...
  116:  setaddr :meetTarget*retaddr *label67                         ...
  117:  call *label23 *invalid :meetTarget*retval                    ...
        label *label67                                               ...
  118:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  119:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  120:  write .coreY processor4 ":findDrillLocation:y"               ...
  121:  write @unit processor4 ":findDrillLocation:unit"             ...
  122:  write @titanium processor4 ":findDrillLocation:item"         ...
  123:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  124:  write false processor4 ":findDrillLocation:large"            ...
  125:  write 4 processor4 ":findDrillLocation:limit"                ...
  126:  write false processor4 ":findDrillLocation*finished"         ...
  127:  write 1 processor4 "@counter"                                ...
        label *label68                                               ...
  128:  wait 1e-15                                                   ...
  129:  read *tmp118 processor4 ":findDrillLocation*finished"        ...
  130:  jump *label68 equal *tmp118 false                            ...
  131:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  132:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  133:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  134:  jump *label69 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  135:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  136:  stop                                                         Actions.mnd: stopProcessor();
        label *label69                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  137:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  138:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  139:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  140:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  141:  set :buildBlockAt:rotation null                              ...
  142:  set :buildBlockAt:config 0                                   ...
  143:  set :buildBlockAt:skipError false                            ...
  144:  setaddr :buildBlockAt*retaddr *label72                       ...
  145:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label72                                               ...
  146:  set *tmp107 :buildBlockAt*retval                             ...
  147:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  148:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  149:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  150:  set :buildBlock:block @unloader                              ...
  151:  set :buildBlock:x .coreX                                     ...
  152:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  153:  set :buildBlock:copper 0                                     ...
  154:  set :buildBlock:lead 0                                       ...
  155:  set :buildBlock:silicon 30                                   ...
  156:  set :buildBlock:titanium 25                                  ...
  157:  setaddr :buildBlock*retaddr *label78                         ...
  158:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label78                                               ...
  159:  set *tmp122 :buildBlock*retval                               ...
  160:  set .unloader1 *tmp122                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  161:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  162:  set :buildBlock:block @micro-processor                       ...
  163:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  164:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  165:  set :buildBlock:copper 90                                    ...
  166:  set :buildBlock:lead 50                                      ...
  167:  set :buildBlock:silicon 50                                   ...
  168:  set :buildBlock:titanium 0                                   ...
  169:  setaddr :buildBlock*retaddr *label84                         ...
  170:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  171:  call *label27 *invalid :buildBlock*retval                    ...
        label *label84                                               ...
  172:  set *tmp126 :buildBlock*retval                               ...
  173:  set .controller *tmp126                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  174:  write processor1 *tmp126 ".display"                          CoreBuilder.mnd: controller.display = display;
  175:  write .core *tmp126 ".core"                                  CoreBuilder.mnd: controller.core = core;
  176:  write bank1 *tmp126 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  177:  write *tmp91 *tmp126 ".battery"                              CoreBuilder.mnd: controller.battery = battery;
  178:  write *tmp99 *tmp126 ".generator"                            CoreBuilder.mnd: controller.generator = generator;
  179:  write *tmp103 *tmp126 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  180:  write *tmp87 *tmp126 ".press"                                CoreBuilder.mnd: controller.press = press;
  181:  write :monos *tmp126 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  182:  write :flares *tmp126 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  183:  write :polys *tmp126 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  184:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  185:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  186:  set :buildBlock:block @power-node                            ...
  187:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  188:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  189:  set :buildBlock:copper 2                                     ...
  190:  set :buildBlock:lead 6                                       ...
  191:  set :buildBlock:silicon 0                                    ...
  192:  set :buildBlock:config null                                  ...
  193:  setaddr :buildBlock*retaddr *label90                         ...
  194:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label90                                               ...
  195:  op add :buildBlockFromCfg.8:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  196:  set :buildBlock:block @unloader                              ...
  197:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  198:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  199:  set :buildBlock:copper 0                                     ...
  200:  set :buildBlock:lead 0                                       ...
  201:  set :buildBlock:silicon 30                                   ...
  202:  set :buildBlock:titanium 25                                  ...
  203:  setaddr :buildBlock*retaddr *label96                         ...
  204:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label96                                               ...
  205:  set *tmp134 :buildBlock*retval                               ...
  206:  write *tmp134 *tmp126 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = unloader2;
  207:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  208:  set :buildBlock:block @overflow-gate                         ...
  209:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  210:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  211:  set :buildBlock:copper 4                                     ...
  212:  set :buildBlock:lead 2                                       ...
  213:  set :buildBlock:silicon 0                                    ...
  214:  set :buildBlock:titanium 0                                   ...
  215:  setaddr :buildBlock*retaddr *label102                        ...
  216:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label102                                              ...
  217:  op add :buildBlockFromCfg.10:x .coreX -4                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  218:  set :buildBlock:block @air-factory                           ...
  219:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  220:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  221:  set :buildBlock:copper 60                                    ...
  222:  set :buildBlock:lead 70                                      ...
  223:  set :buildBlock:rotation 3                                   ...
  224:  set :buildBlock:config @mono                                 ...
  225:  setaddr :buildBlock*retaddr *label108                        ...
  226:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label108                                              ...
  227:  set *tmp142 :buildBlock*retval                               ...
  228:  write *tmp142 *tmp126 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  229:  write *tmp142 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  230:  write 2 *tmp126 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 2;
  231:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  232:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  233:  write 0 *tmp126 ".leadReserve"                               CoreBuilder.mnd: controller.leadReserve = 0;
  234:  write 0 *tmp126 ".siliconReserve"                            CoreBuilder.mnd: controller.siliconReserve = 0;
  235:  write @flare *tmp126 ".unitToProduce"                        CoreBuilder.mnd: controller.unitToProduce = unit;
  236:  write 85 *tmp126 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  237:  write 150 *tmp126 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  238:  write 30 *tmp126 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  239:  set :searchThorium true                                      CoreBuilder.mnd: var searchThorium = true;
        label *label110                                              CoreBuilder.mnd: do
  240:  read *tmp35 *tmp126 ".flares"                                CoreBuilder.mnd: if searchThorium and controller.flares > 0 then
  241:  op greaterThan *tmp147 *tmp35 0                              ...
  242:  op land *tmp148 :searchThorium *tmp147                       ...
  243:  jump *label113 equal *tmp148 false                           ...
  244:  set :searchThorium false                                     CoreBuilder.mnd: searchThorium = false;
  245:  set :findFreeUnit:unit_type @flare                           CoreBuilder.mnd: findFreeUnit(@flare, 0);
  246:  set :findFreeUnit:initial_flag 0                             ...
  247:  setaddr :findFreeUnit*retaddr *label115                      ...
  248:  call *label15 *invalid :findFreeUnit*retval                  ...
        label *label115                                              ...
  249:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  250:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  251:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  252:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  253:  write false processor4 ":layoutThoriumDrill*finished"        ...
  254:  write 2 processor4 "@counter"                                ...
  255:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  256:  write .core processor3 ":start:aCore"                        CoreBuilder.mnd: flareController.start(core, titaniumDrill);
  257:  write *tmp107 processor3 ":start:drill"                      ...
  258:  write false processor3 ":start*finished"                     ...
  259:  write 3 processor3 "@counter"                                ...
        label *label116                                              ...
  260:  wait 1e-15                                                   ...
  261:  read *tmp157 processor3 ":start*finished"                    ...
  262:  jump *label116 equal *tmp157 false                           ...
        label *label113                                              CoreBuilder.mnd: if searchThorium and controller.flares > 0 then
  263:  setaddr :supplyBase*retaddr *label117                        CoreBuilder.mnd: supplyBase();
  264:  call *label21 *invalid :supplyBase*retval                    ...
        label *label117                                              ...
  265:  sensor *tmp158 *tmp91 @totalPower                            CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  266:  jump *label112 lessThan *tmp158 300                          ...
  267:  read *tmp34 *tmp126 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  268:  jump *label110 lessThan *tmp34 3                             CoreBuilder.mnd: do
        label *label112                                              ...
  269:  write .core processor3 ":start:aCore"                        CoreBuilder.mnd: flareController.start(core, titaniumDrill);
  270:  write *tmp107 processor3 ":start:drill"                      ...
  271:  write false processor3 ":start*finished"                     ...
  272:  write 3 processor3 "@counter"                                ...
        label *label120                                              ...
  273:  wait 1e-15                                                   ...
  274:  read *tmp164 processor3 ":start*finished"                    ...
  275:  jump *label120 equal *tmp164 false                           ...
  276:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  277:  set :buildBlock:block @unloader                              ...
  278:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  279:  set :buildBlock:y .coreY                                     ...
  280:  set :buildBlock:copper 0                                     ...
  281:  set :buildBlock:lead 0                                       ...
  282:  set :buildBlock:silicon 30                                   ...
  283:  set :buildBlock:titanium 25                                  ...
  284:  set :buildBlock:rotation 0                                   ...
  285:  set :buildBlock:config null                                  ...
  286:  setaddr :buildBlock*retaddr *label126                        ...
  287:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label126                                              ...
  288:  op add :buildBlockFromCfg.12:x .coreX 3.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  289:  op add :buildBlockFromCfg.12:y .coreY 0.5                    ...
  290:  set :buildBlock:block @kiln                                  ...
  291:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  292:  set :buildBlock:y :buildBlockFromCfg.12:y                    ...
  293:  set :buildBlock:copper 60                                    ...
  294:  set :buildBlock:lead 30                                      ...
  295:  set :buildBlock:graphite 30                                  ...
  296:  set :buildBlock:silicon 0                                    ...
  297:  set :buildBlock:titanium 0                                   ...
  298:  setaddr :buildBlock*retaddr *label132                        ...
  299:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label132                                              ...
  300:  set *tmp169 :buildBlock*retval                               ...
  301:  write *tmp169 *tmp126 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  302:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  303:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  304:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  305:  set :buildBlock:copper 3                                     ...
  306:  set :buildBlock:lead 0                                       ...
  307:  set :buildBlock:graphite 0                                   ...
  308:  setaddr :buildBlock*retaddr *label138                        ...
  309:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label138                                              ...
  310:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  311:  op add :buildBlockFromCfg.14:y .coreY 4.5                    ...
  312:  set :buildBlock:block @water-extractor                       ...
  313:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  314:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  315:  set :buildBlock:copper 30                                    ...
  316:  set :buildBlock:lead 30                                      ...
  317:  set :buildBlock:graphite 30                                  ...
  318:  set :buildBlock:metaglass 30                                 ...
  319:  setaddr :buildBlock*retaddr *label144                        ...
  320:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label144                                              ...
  321:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  322:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  323:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  324:  set :buildBlock:copper 35                                    ...
  325:  set :buildBlock:lead 40                                      ...
  326:  set :buildBlock:graphite 25                                  ...
  327:  set :buildBlock:silicon 30                                   ...
  328:  set :buildBlock:metaglass 0                                  ...
  329:  setaddr :buildBlock*retaddr *label150                        ...
  330:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label150                                              ...
  331:  set *tmp181 :buildBlock*retval                               ...
  332:  write *tmp181 *tmp126 ".generator2"                          CoreBuilder.mnd: controller.generator2 = generator2;
  333:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  334:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  335:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  336:  jump *label151 equal :searchThorium false                    CoreBuilder.mnd: if searchThorium then
  337:  read *tmp35 *tmp126 ".flares"                                CoreBuilder.mnd: while controller.flares < 1 do
  338:  jump *label155 greaterThanEq *tmp35 1                        ...
        label *label457                                              ...
  339:  setaddr :supplyBase*retaddr *label156                        CoreBuilder.mnd: supplyBase();
  340:  call *label21 *invalid :supplyBase*retval                    ...
        label *label156                                              ...
  341:  read *tmp35 *tmp126 ".flares"                                CoreBuilder.mnd: while controller.flares < 1 do
  342:  jump *label457 lessThan *tmp35 1                             ...
        label *label155                                              ...
  343:  set :findFreeUnit:unit_type @flare                           CoreBuilder.mnd: findFreeUnit(@flare, 0);
  344:  set :findFreeUnit:initial_flag 0                             ...
  345:  setaddr :findFreeUnit*retaddr *label157                      ...
  346:  call *label15 *invalid :findFreeUnit*retval                  ...
        label *label157                                              ...
  347:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  348:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  349:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  350:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  351:  write false processor4 ":layoutThoriumDrill*finished"        ...
  352:  write 2 processor4 "@counter"                                ...
  353:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label158                                              CoreBuilder.mnd: do
  354:  setaddr :supplyBase*retaddr *label161                        CoreBuilder.mnd: supplyBase();
  355:  call *label21 *invalid :supplyBase*retval                    ...
        label *label161                                              ...
  356:  read *tmp192 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  357:  jump *label158 equal *tmp192 false                           CoreBuilder.mnd: do
        label *label151                                              CoreBuilder.mnd: if searchThorium then
  358:  set :meetTarget:block @laser-drill                           CoreBuilder.mnd: meetTarget(
  359:  set :meetTarget:copper 35                                    ...
  360:  set :meetTarget:lead 0                                       ...
  361:  set :meetTarget:graphite 30                                  ...
  362:  set :meetTarget:silicon 30                                   ...
  363:  set :meetTarget:titanium 20                                  ...
  364:  set :meetTarget:metaglass 0                                  ...
  365:  setaddr :meetTarget*retaddr *label164                        ...
  366:  call *label23 *invalid :meetTarget*retval                    ...
        label *label164                                              ...
        label *label165                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  367:  wait 1e-15                                                   ...
  368:  read *tmp194 processor4 ":layoutThoriumDrill*finished"       ...
  369:  jump *label165 equal *tmp194 false                           ...
  370:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  371:  jump *label166 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  372:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  373:  stop                                                         Actions.mnd: stopProcessor();
        label *label166                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  374:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  375:  read :buildBlockAt:x processor4 ".drillX"                    ...
  376:  read :buildBlockAt:y processor4 ".drillY"                    ...
  377:  set :buildBlockAt:rotation null                              ...
  378:  set :buildBlockAt:config 0                                   ...
  379:  set :buildBlockAt:skipError false                            ...
  380:  setaddr :buildBlockAt*retaddr *label169                      ...
  381:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label169                                              ...
  382:  set .thoriumDrill :buildBlockAt*retval                       ...
  383:  read *tmp66 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  384:  jump *label162 lessThan *tmp66 0                             ...
  385:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  386:  set :meetTarget:copper 30                                    ...
  387:  set :meetTarget:lead 30                                      ...
  388:  set :meetTarget:graphite 30                                  ...
  389:  set :meetTarget:silicon 0                                    ...
  390:  set :meetTarget:titanium 0                                   ...
  391:  set :meetTarget:metaglass 30                                 ...
  392:  setaddr :meetTarget*retaddr *label173                        ...
  393:  call *label23 *invalid :meetTarget*retval                    ...
        label *label173                                              ...
  394:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  395:  read *tmp66 processor4 ".water1X"                            ...
  396:  set :buildBlockAt:x *tmp66                                   ...
  397:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  398:  set :buildBlockAt:rotation null                              ...
  399:  set :buildBlockAt:config 0                                   ...
  400:  set :buildBlockAt:skipError false                            ...
  401:  setaddr :buildBlockAt*retaddr *label174                      ...
  402:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label174                                              ...
  403:  read *tmp68 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  404:  jump *label162 lessThan *tmp68 0                             ...
  405:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  406:  set :meetTarget:copper 30                                    ...
  407:  set :meetTarget:lead 30                                      ...
  408:  set :meetTarget:graphite 30                                  ...
  409:  set :meetTarget:silicon 0                                    ...
  410:  set :meetTarget:titanium 0                                   ...
  411:  set :meetTarget:metaglass 30                                 ...
  412:  setaddr :meetTarget*retaddr *label178                        ...
  413:  call *label23 *invalid :meetTarget*retval                    ...
        label *label178                                              ...
  414:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  415:  read *tmp68 processor4 ".water2X"                            ...
  416:  set :buildBlockAt:x *tmp68                                   ...
  417:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  418:  set :buildBlockAt:rotation null                              ...
  419:  set :buildBlockAt:config 0                                   ...
  420:  set :buildBlockAt:skipError false                            ...
  421:  setaddr :buildBlockAt*retaddr *label179                      ...
  422:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label179                                              ...
  423:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  424:  set :meetTarget:copper 30                                    ...
  425:  set :meetTarget:lead 30                                      ...
  426:  set :meetTarget:graphite 30                                  ...
  427:  set :meetTarget:silicon 0                                    ...
  428:  set :meetTarget:titanium 0                                   ...
  429:  set :meetTarget:metaglass 30                                 ...
  430:  setaddr :meetTarget*retaddr *label181                        ...
  431:  call *label23 *invalid :meetTarget*retval                    ...
        label *label181                                              ...
  432:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  433:  read :buildBlockAt:x processor4 ".generatorX"                ...
  434:  read :buildBlockAt:y processor4 ".generatorY"                ...
  435:  set :buildBlockAt:rotation null                              ...
  436:  set :buildBlockAt:config 0                                   ...
  437:  set :buildBlockAt:skipError false                            ...
  438:  setaddr :buildBlockAt*retaddr *label182                      ...
  439:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label182                                              ...
  440:  set .thoriumGenerator :buildBlockAt*retval                   ...
  441:  set :meetTarget:block @power-node                            CoreBuilder.mnd: meetTarget(
  442:  set :meetTarget:copper 2                                     ...
  443:  set :meetTarget:lead 6                                       ...
  444:  set :meetTarget:graphite 0                                   ...
  445:  set :meetTarget:silicon 0                                    ...
  446:  set :meetTarget:titanium 0                                   ...
  447:  set :meetTarget:metaglass 0                                  ...
  448:  setaddr :meetTarget*retaddr *label184                        ...
  449:  call *label23 *invalid :meetTarget*retval                    ...
        label *label184                                              ...
  450:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  451:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  452:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  453:  set :buildBlockAt:rotation null                              ...
  454:  set :buildBlockAt:config 0                                   ...
  455:  set :buildBlockAt:skipError false                            ...
  456:  setaddr :buildBlockAt*retaddr *label185                      ...
  457:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label185                                              ...
  458:  set :meetTarget:block @solar-panel                           CoreBuilder.mnd: meetTarget(
  459:  set :meetTarget:copper 0                                     ...
  460:  set :meetTarget:lead 10                                      ...
  461:  set :meetTarget:graphite 0                                   ...
  462:  set :meetTarget:silicon 8                                    ...
  463:  set :meetTarget:titanium 0                                   ...
  464:  set :meetTarget:metaglass 0                                  ...
  465:  setaddr :meetTarget*retaddr *label187                        ...
  466:  call *label23 *invalid :meetTarget*retval                    ...
        label *label187                                              ...
  467:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  468:  read :buildBlockAt:x processor4 ".panelX"                    ...
  469:  read :buildBlockAt:y processor4 ".panelY"                    ...
  470:  set :buildBlockAt:rotation null                              ...
  471:  set :buildBlockAt:config 0                                   ...
  472:  set :buildBlockAt:skipError false                            ...
  473:  setaddr :buildBlockAt*retaddr *label188                      ...
  474:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label188                                              ...
  475:  write .thoriumDrill processor3 ":addThoriumDrill:drill"      CoreBuilder.mnd: flareController.addThoriumDrill(thoriumDrill, thoriumGenerator);
  476:  write .thoriumGenerator processor3 ":addThoriumDrill:generat ...
  477:  write false processor3 ":addThoriumDrill*finished"           ...
  478:  write 1 processor3 "@counter"                                ...
        label *label189                                              ...
  479:  wait 1e-15                                                   ...
  480:  read *tmp210 processor3 ":addThoriumDrill*finished"          ...
  481:  jump *label189 equal *tmp210 false                           ...
        label *label162                                              CoreBuilder.mnd: buildThoriumDrill();
  482:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  483:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  484:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  485:  set :buildBlock:copper 2                                     ...
  486:  set :buildBlock:lead 2                                       ...
  487:  set :buildBlock:graphite 0                                   ...
  488:  set :buildBlock:silicon 0                                    ...
  489:  set :buildBlock:config @coal                                 ...
  490:  setaddr :buildBlock*retaddr *label195                        ...
  491:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label195                                              ...
  492:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  493:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label196                                              CoreBuilder.mnd: do
  494:  setaddr :supplyBase*retaddr *label199                        CoreBuilder.mnd: supplyBase();
  495:  call *label21 *invalid :supplyBase*retval                    ...
        label *label199                                              ...
  496:  read *tmp35 *tmp126 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  497:  read *tmp34 *tmp126 ".monos"                                 ...
  498:  op add *tmp215 *tmp35 *tmp34                                 ...
  499:  jump *label196 lessThan *tmp215 16                           CoreBuilder.mnd: do
        label *label200                                              CoreBuilder.mnd: while true do
  500:  setaddr :supplyBase*retaddr *label203                        CoreBuilder.mnd: supplyBase();
  501:  call *label21 *invalid :supplyBase*retval                    ...
        label *label203                                              ...
  502:  jump *label200 always 0 0                                    CoreBuilder.mnd: while true do
        label *label5                                                Actions.mnd: void moveTo(x, y, radius)
  503:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  504:  op sub *tmp219 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
  505:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217 0 ...
  506:  jump *label210 notEqual *tmp217 false                        ...
        label *label451                                              ...
  507:  ucontrol approach :moveTo:x :moveTo:y *tmp219 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  508:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp217 0 Actions.mnd: while !within(x, y, radius) do
  509:  jump *label451 equal *tmp217 false                           ...
        label *label210                                              ...
  510:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label6                                                Actions.mnd: void moveTo(x, y)
  511:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  512:  set :moveTo:y :moveTo.1:y                                    ...
  513:  set :moveTo:radius 6                                         ...
  514:  setaddr :moveTo*retaddr *label212                            ...
  515:  call *label5 *invalid :moveTo*retval                         ...
        label *label212                                              ...
  516:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label7                                                Actions.mnd: void moveToEmpty(x, y)
  517:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label215                                              Actions.mnd: do
  518:  sensor *tmp222 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  519:  jump *label218 equal *tmp222 null                            ...
  520:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label218                                              ...
  521:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  522:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp225 0    Actions.mnd: while !within(x, y, RADIUS);
  523:  jump *label215 equal *tmp225 false                           Actions.mnd: do
  524:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label8                                                Actions.mnd: void moveToBlock(block, radius)
  525:  sensor *tmp227 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  526:  sensor *tmp228 :moveToBlock:block @y                         ...
  527:  set :moveTo:x *tmp227                                        ...
  528:  set :moveTo:y *tmp228                                        ...
  529:  set :moveTo:radius :moveToBlock:radius                       ...
  530:  setaddr :moveTo*retaddr *label221                            ...
  531:  call *label5 *invalid :moveTo*retval                         ...
        label *label221                                              ...
  532:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label9                                                Actions.mnd: void depositItems(block, item)
  533:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  534:  sensor *tmp229 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  535:  jump *label224 notEqual *tmp229 :depositItems:item           ...
  536:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  537:  set :moveToBlock:radius 6                                    ...
  538:  setaddr :moveToBlock*retaddr *label226                       ...
  539:  call *label8 *invalid :moveToBlock*retval                    ...
        label *label226                                              ...
  540:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label227                                              Actions.mnd: do
  541:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  542:  sensor *tmp233 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  543:  op mul *tmp234 *tmp233 :depositItems:cap                     ...
  544:  sensor *tmp235 :depositItems:block :depositItems:item        ...
  545:  jump *label227 greaterThan *tmp234 *tmp235                   Actions.mnd: do
  546:  jump *label225 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label224                                              ...
  547:  sensor *tmp237 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  548:  jump *label232 equal *tmp237 null                            ...
        label *label452                                              ...
  549:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  550:  sensor *tmp237 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  551:  jump *label452 notEqual *tmp237 null                         ...
        label *label232                                              ...
        label *label225                                              Actions.mnd: if @unit.@firstItem == item then
  552:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  553:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  554:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label10                                               Actions.mnd: void locateOre(ore, out x, out y)
  555:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  556:  jump *label235 notEqual *tmp239 false                        ...
  557:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  558:  stop                                                         Actions.mnd: stopProcessor();
        label *label235                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  559:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label11                                               Actions.mnd: void mineOre(ore, amount, block)
  560:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  561:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  562:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  563:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  564:  setaddr :locateOre*retaddr *label240                         ...
  565:  call *label10 *invalid :locateOre*retval                     ...
        label *label240                                              ...
  566:  set :mineOre:x :locateOre:x                                  ...
  567:  set :mineOre:y :locateOre:y                                  ...
  568:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  569:  set :moveToEmpty:y :locateOre:y                              ...
  570:  setaddr :moveToEmpty*retaddr *label241                       ...
  571:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label241                                              ...
  572:  sensor *tmp244 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  573:  jump *label242 equal *tmp244 :mineOre:ore                    ...
  574:  sensor *tmp247 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  575:  jump *label247 equal *tmp247 null                            ...
        label *label453                                              ...
  576:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  577:  sensor *tmp247 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  578:  jump *label453 notEqual *tmp247 null                         ...
        label *label247                                              ...
        label *label242                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  579:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  580:  op mul :second:result @second TIME_COMPRESS                  common.mnd: mlog (out result) {
  581:  op add :mineOre:stop :second:result 10                       Actions.mnd: var stop = second() + 10;
        label *label250                                              Actions.mnd: do
  582:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  583:  op notEqual *tmp252 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  584:  op notEqual *tmp253 :mineOre:item :mineOre:ore               ...
  585:  op land *tmp254 *tmp252 *tmp253                              ...
  586:  jump *label252 notEqual *tmp254 false                        ...
  587:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  588:  op mul :second.1:result @second TIME_COMPRESS                common.mnd: mlog (out result) {
  589:  jump *label252 greaterThan :second.1:result :mineOre:stop    Actions.mnd: if second() > stop then break; end;
  590:  sensor *tmp259 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  591:  jump *label250 lessThan *tmp259 :mineOre:amount              Actions.mnd: do
        label *label252                                              ...
  592:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  593:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  594:  set :depositItems:item :mineOre:ore                          ...
  595:  setaddr :depositItems*retaddr *label258                      ...
  596:  call *label9 *invalid :depositItems*retval                   ...
        label *label258                                              ...
  597:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label12                                               Actions.mnd: void mineOre(ore)
  598:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  599:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  600:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  601:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  602:  set :mineOre:amount 30                                       ...
  603:  set :mineOre:block .core                                     ...
  604:  setaddr :mineOre*retaddr *label261                           ...
  605:  call *label11 *invalid :mineOre*retval                       ...
        label *label261                                              ...
  606:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label13                                               Actions.mnd: void fetchBlock(block, item)
  607:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  608:  write :transportStatus.2:target .display ".transportTarget"  ...
  609:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  610:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  611:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  612:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  613:  sensor *tmp263 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  614:  sensor *tmp264 :fetchBlock:block @y                          ...
  615:  set :moveToEmpty:x *tmp263                                   ...
  616:  set :moveToEmpty:y *tmp264                                   ...
  617:  setaddr :moveToEmpty*retaddr *label265                       ...
  618:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label265                                              ...
  619:  sensor *tmp265 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  620:  jump *label269 equal *tmp265 null                            ...
        label *label454                                              ...
  621:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  622:  sensor *tmp265 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  623:  jump *label454 notEqual *tmp265 null                         ...
        label *label269                                              ...
        label *label270                                              Actions.mnd: do
  624:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  625:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  626:  op notEqual *tmp268 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  627:  op notEqual *tmp269 :fetchBlock:unitItem :fetchBlock:item    ...
  628:  op land *tmp270 *tmp268 *tmp269                              ...
  629:  jump *label273 equal *tmp270 false                           ...
  630:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label273                                              Actions.mnd: if unitItem != null and unitItem != item then
  631:  sensor *tmp272 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  632:  op lessThan *tmp273 *tmp272 30                               ...
  633:  sensor *tmp274 :fetchBlock:block :fetchBlock:item            ...
  634:  op land *tmp275 *tmp273 *tmp274                              ...
  635:  jump *label270 notEqual *tmp275 false                        Actions.mnd: do
  636:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  637:  set :depositItems:item :fetchBlock:item                      ...
  638:  setaddr :depositItems*retaddr *label275                      ...
  639:  call *label9 *invalid :depositItems*retval                   ...
        label *label275                                              ...
  640:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label15                                               *units: def findFreeUnit(unit_type, initial_flag)
  641:  ubind :findFreeUnit:unit_type                                *units: ubind(unit_type);
  642:  jump *label276 equal @unit null                              *units: if @unit == null then return null; end;
  643:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label279                                              *units: do
  644:  sensor *tmp278 @unit @controlled                             *units: if @unit.@controlled == 0 then
  645:  jump *label282 notEqual *tmp278 0                            ...
  646:  ucontrol flag :findFreeUnit:initial_flag 0 0 0 0             *units: flag(initial_flag);        // Mark unit as active
  647:  return :findFreeUnit*retaddr                                 *units: return @unit;
        label *label282                                              *units: if @unit.@controlled == 0 then
  648:  sensor *tmp281 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  649:  jump *label284 notEqual *tmp281 1                            ...
  650:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label284                                              *units: elsif first_unit.@dead == 1 then
  651:  ubind :findFreeUnit:unit_type                                *units: ubind(unit_type);
  652:  jump *label279 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label276                                              *units: def findFreeUnit(unit_type, initial_flag)
  653:  return :findFreeUnit*retaddr                                 ...
        label *label19                                               CoreBuilder.mnd: void supplyBase0()
  654:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  655:  jump *label287 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  656:  sensor *tmp288 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  657:  jump *label289 greaterThanEq *tmp288 .targetGraphite         ...
  658:  sensor *tmp291 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  659:  jump *label291 greaterThanEq *tmp291 5                       ...
  660:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  661:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  662:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  663:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  664:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  665:  sensor *tmp295 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  666:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  667:  jump *label296 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  668:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  669:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  670:  set :mineOre:block .press                                    ...
  671:  setaddr :mineOre*retaddr *label298                           ...
  672:  call *label11 *invalid :mineOre*retval                       ...
        label *label298                                              ...
        label *label296                                              CoreBuilder.mnd: if missing > 0 then
  673:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label291                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label289                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  674:  sensor *tmp299 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  675:  jump *label299 greaterThanEq *tmp299 .targetSilicon          ...
  676:  sensor *tmp302 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  677:  jump *label301 greaterThanEq *tmp302 5                       ...
  678:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  679:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  680:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  681:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  682:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  683:  sensor *tmp306 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  684:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  685:  jump *label306 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  686:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  687:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  688:  set :mineOre:block .smelter                                  ...
  689:  setaddr :mineOre*retaddr *label308                           ...
  690:  call *label11 *invalid :mineOre*retval                       ...
        label *label308                                              ...
        label *label306                                              CoreBuilder.mnd: if missing > 0 then
  691:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  692:  jump *label302 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label301                                              ...
  693:  sensor *tmp310 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  694:  jump *label309 greaterThanEq *tmp310 5                       ...
  695:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  696:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  697:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  698:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  699:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  700:  sensor *tmp314 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  701:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  702:  jump *label314 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  703:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  704:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  705:  set :mineOre:block .smelter                                  ...
  706:  setaddr :mineOre*retaddr *label316                           ...
  707:  call *label11 *invalid :mineOre*retval                       ...
        label *label316                                              ...
        label *label314                                              CoreBuilder.mnd: if missing > 0 then
  708:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label309                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label302                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label299                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  709:  sensor *tmp318 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  710:  jump *label317 greaterThanEq *tmp318 .powerTarget            ...
  711:  sensor *tmp321 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  712:  jump *label319 greaterThanEq *tmp321 2                       ...
  713:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  714:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  715:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  716:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  717:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  718:  sensor *tmp325 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  719:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  720:  jump *label324 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  721:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  722:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  723:  set :mineOre:block .generator                                ...
  724:  setaddr :mineOre*retaddr *label326                           ...
  725:  call *label11 *invalid :mineOre*retval                       ...
        label *label326                                              ...
        label *label324                                              CoreBuilder.mnd: if missing > 0 then
  726:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label319                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label317                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label287                                              CoreBuilder.mnd: if unloader1 == null then
  727:  set *tmp331 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  728:  sensor *tmp329 .core @titanium                               ...
  729:  jump *label328 greaterThanEq *tmp329 .targetTitanium         ...
  730:  sensor *tmp332 .core @titanium                               ...
  731:  op sub *tmp333 .targetTitanium *tmp332                       ...
  732:  op min *tmp331 7 *tmp333                                     ...
        label *label328                                              ...
  733:  sensor *tmp335 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  734:  jump *label329 greaterThanEq *tmp335 *tmp331                 ...
  735:  jump *label330 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  736:  sensor *tmp340 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  737:  op mul *tmp341 .unloader1 .powerTarget                       ...
  738:  jump *label333 greaterThanEq *tmp340 *tmp341                 ...
  739:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  740:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  741:  setaddr :mineOre.1*retaddr *label336                         ...
  742:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label336                                              ...
  743:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label333                                              ...
  744:  sensor *tmp344 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  745:  jump *label337 greaterThanEq *tmp344 .targetSilicon          ...
  746:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  747:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  748:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  749:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  750:  jump *label341 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  751:  set :mineOre.1:ore @coal                                     ...
        label *label341                                              ...
  752:  setaddr :mineOre.1*retaddr *label342                         CoreBuilder.mnd: mineOre(ore);
  753:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label342                                              ...
  754:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label337                                              ...
  755:  sensor *tmp351 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  756:  jump *label343 greaterThanEq *tmp351 .targetCopper           ...
  757:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  758:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  759:  setaddr :mineOre.1*retaddr *label346                         ...
  760:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label346                                              ...
  761:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label343                                              ...
  762:  sensor *tmp354 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  763:  jump *label347 greaterThanEq *tmp354 .targetLead             ...
  764:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  765:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  766:  setaddr :mineOre.1*retaddr *label350                         ...
  767:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label350                                              ...
  768:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label347                                              ...
  769:  sensor *tmp357 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  770:  jump *label351 greaterThanEq *tmp357 .targetMetaglass        ...
  771:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  772:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  773:  setaddr :mineOre.1*retaddr *label354                         ...
  774:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label354                                              ...
  775:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label351                                              ...
  776:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  777:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  778:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  779:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  780:  jump *label357 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  781:  set :mineOre.1:ore @coal                                     ...
        label *label357                                              ...
  782:  setaddr :mineOre.1*retaddr *label358                         CoreBuilder.mnd: mineOre(ore);
  783:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label358                                              ...
  784:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label329                                              ...
  785:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  786:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  787:  set :fetchBlock:item @titanium                               ...
  788:  setaddr :fetchBlock*retaddr *label360                        ...
  789:  call *label13 *invalid :fetchBlock*retval                    ...
        label *label360                                              ...
        label *label330                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  790:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label20                                               CoreBuilder.mnd: void supplyBase1()
  791:  write "Phase 1: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  792:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  793:  setaddr :mineOre.1*retaddr *label363                         ...
  794:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label363                                              ...
  795:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label21                                               CoreBuilder.mnd: void supplyBase()
  796:  read *tmp34 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  797:  jump *label365 lessThanEq *tmp34 3                           ...
  798:  setaddr :supplyBase1*retaddr *label367                       CoreBuilder.mnd: supplyBase1();
  799:  call *label20 *invalid :supplyBase1*retval                   ...
        label *label367                                              ...
  800:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label365                                              ...
  801:  setaddr :supplyBase0*retaddr *label368                       CoreBuilder.mnd: supplyBase0();
  802:  call *label19 *invalid :supplyBase0*retval                   ...
        label *label368                                              ...
  803:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label22                                               CoreBuilder.mnd: def targetMet()
  804:  sensor *tmp366 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  805:  jump *label370 lessThan *tmp366 .targetCopper                ...
  806:  sensor *tmp369 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  807:  jump *label372 lessThan *tmp369 .targetLead                  ...
  808:  sensor *tmp372 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  809:  jump *label374 lessThan *tmp372 .targetGraphite              ...
  810:  sensor *tmp375 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  811:  jump *label376 lessThan *tmp375 .targetSilicon               ...
  812:  sensor *tmp378 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  813:  jump *label378 lessThan *tmp378 .targetTitanium              ...
  814:  sensor *tmp381 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  815:  jump *label380 lessThan *tmp381 .targetMetaglass             ...
  816:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  817:  return :targetMet*retaddr                                    ...
        label *label380                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label378                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label376                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label374                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label372                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label370                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  818:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  819:  return :targetMet*retaddr                                    ...
        label *label23                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  820:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  821:  op sign *tmp385 :meetTarget:lead 0                           ...
  822:  op add :meetTarget:count :meetTarget:count *tmp385           ...
  823:  op sign *tmp385 :meetTarget:graphite 0                       ...
  824:  op add :meetTarget:count :meetTarget:count *tmp385           ...
  825:  op sign *tmp385 :meetTarget:silicon 0                        ...
  826:  op add :meetTarget:count :meetTarget:count *tmp385           ...
  827:  op sign *tmp385 :meetTarget:titanium 0                       ...
  828:  op add :meetTarget:count :meetTarget:count *tmp385           ...
  829:  op sign *tmp385 :meetTarget:metaglass 0                      ...
  830:  op add :meetTarget:count :meetTarget:count *tmp385           ...
  831:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  832:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  833:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  834:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  835:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  836:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  837:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  838:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  839:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  840:  set .targetLead :meetTarget:lead                             CoreBuilder.mnd: targetLead = lead;
  841:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  842:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  843:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  844:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  845:  op add *tmp386 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  846:  write *tmp386 .controller ".pressTarget"                     ...
  847:  op add *tmp387 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  848:  write *tmp387 .controller ".smelterTarget"                   ...
  849:  op add *tmp388 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  850:  write *tmp388 .controller ".kilnTarget"                      ...
  851:  op sign *tmp389 :meetTarget:lead 0                           CoreBuilder.mnd: controller.leadReserve = lead + sign(lead) * 20;
  852:  op mul *tmp390 *tmp389 20                                    ...
  853:  op add *tmp391 :meetTarget:lead *tmp390                      ...
  854:  write *tmp391 .controller ".leadReserve"                     ...
  855:  op sign *tmp392 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  856:  op mul *tmp393 *tmp392 20                                    ...
  857:  op add *tmp394 :meetTarget:silicon *tmp393                   ...
  858:  write *tmp394 .controller ".siliconReserve"                  ...
  859:  setaddr :targetMet*retaddr *label395                         CoreBuilder.mnd: while !targetMet() do
  860:  call *label22 *invalid :targetMet*retval                     ...
        label *label395                                              ...
  861:  jump *label394 notEqual :targetMet*retval false              ...
        label *label455                                              ...
  862:  setaddr :supplyBase*retaddr *label396                        CoreBuilder.mnd: supplyBase();
  863:  call *label21 *invalid :supplyBase*retval                    ...
        label *label396                                              ...
  864:  setaddr :targetMet*retaddr *label456                         CoreBuilder.mnd: while !targetMet() do
  865:  call *label22 *invalid :targetMet*retval                     ...
        label *label456                                              ...
  866:  jump *label455 equal :targetMet*retval false                 ...
        label *label394                                              ...
  867:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label24                                               CoreBuilder.mnd: void log(encodedId)
  868:  read *tmp76 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  869:  op sub *tmp396 *tmp76 1                                      ...
  870:  write *tmp396 bank1 511                                      ...
  871:  op mul :second.2:result @second TIME_COMPRESS                common.mnd: mlog (out result) {
  872:  op floor *tmp400 :second.2:result 0                          CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  873:  op mul *tmp401 *tmp400 1000                                  ...
  874:  op add *tmp402 :log:encodedId *tmp401                        ...
  875:  write *tmp402 bank1 *tmp396                                  ...
  876:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label25                                               CoreBuilder.mnd: void logBlock(block)
  877:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  878:  setaddr :log*retaddr *label400                               ...
  879:  call *label24 *invalid :log*retval                           ...
        label *label400                                              ...
  880:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label26                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  881:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  882:  set :moveTo.1:y :buildBlockAt:y                              ...
  883:  setaddr :moveTo.1*retaddr *label402                          ...
  884:  call *label6 *invalid :moveTo.1*retval                       ...
        label *label402                                              ...
  885:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  886:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  887:  jump *label404 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  888:  jump *label406 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  889:  set :buildBlockAt*retval :buildBlockAt:building              ...
  890:  return :buildBlockAt*retaddr                                 ...
        label *label406                                              ...
  891:  jump *label408 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  892:  set :buildBlockAt*retval null                                ...
  893:  return :buildBlockAt*retaddr                                 ...
        label *label408                                              ...
  894:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  895:  stop                                                         Actions.mnd: stopProcessor();
        label *label404                                              CoreBuilder.mnd: if building != null then
  896:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  897:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label411                                              CoreBuilder.mnd: do
  898:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  899:  jump *label414 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  900:  set :buildBlockAt*retval null                                ...
  901:  return :buildBlockAt*retaddr                                 ...
        label *label414                                              ...
  902:  jump *label411 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  903:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  904:  setaddr :logBlock*retaddr *label416                          ...
  905:  call *label25 *invalid :logBlock*retval                      ...
        label *label416                                              ...
  906:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  907:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label27                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  908:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  909:  set :meetTarget:copper :buildBlock:copper                    ...
  910:  set :meetTarget:lead :buildBlock:lead                        ...
  911:  set :meetTarget:graphite :buildBlock:graphite                ...
  912:  set :meetTarget:silicon :buildBlock:silicon                  ...
  913:  set :meetTarget:titanium :buildBlock:titanium                ...
  914:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  915:  setaddr :meetTarget*retaddr *label418                        ...
  916:  call *label23 *invalid :meetTarget*retval                    ...
        label *label418                                              ...
  917:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  918:  set :buildBlockAt:x :buildBlock:x                            ...
  919:  set :buildBlockAt:y :buildBlock:y                            ...
  920:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  921:  set :buildBlockAt:config :buildBlock:config                  ...
  922:  set :buildBlockAt:skipError false                            ...
  923:  setaddr :buildBlockAt*retaddr *label419                      ...
  924:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label419                                              ...
  925:  set :buildBlock*retval :buildBlockAt*retval                  ...
  926:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label28                                               CoreBuilder.mnd: def findUnits(type, out count)
  927:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  928:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  929:  set :findUnits:firstUnit @unit                               ...
  930:  jump *label421 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label423                                              CoreBuilder.mnd: do
  931:  op add :findUnits:count :findUnits:count 1                   ...
  932:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  933:  jump *label423 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label421                                              CoreBuilder.mnd: if firstUnit != null then
  934:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  935:  return :findUnits*retaddr                                    ...


Performance: parsed in 884 ms, compiled in 461 ms, optimized in 2,965 ms, run in 5 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (14 steps):
The program didn't generate any output.
Execution exception at instruction 36: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
