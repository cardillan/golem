  1367 instructions before optimizations.
    81 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   102 instructions eliminated by Dead Code Elimination (10 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    55 instructions eliminated by Jump Optimization (5 iterations).
    34 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   142 instructions eliminated by Data Flow Optimization (22 passes, 74 iterations).
     1 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (32 iterations).
     1 loops unrolled by Loop Unrolling.
    48 instructions added by Function Inlining (32 iterations).
    46 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by Jump Threading.
     3 calls threaded by Jump Threading.
    20 instructions eliminated by Unreachable Code Elimination (2 iterations).
   975 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  * Unroll iteration loop at CoreBuilder.mnd:182:5               size   -13, benefit     1080.0, efficiency   Infinity (-11 instructions)
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +181, benefit      280.0, efficiency      1.547
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:440:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:143:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:149:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:138:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:75:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:83:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:87:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:95:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:106:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:132:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:321:5                size   +91, benefit       28.0, efficiency      0.308
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:212:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:219:5                size   +91, benefit      238.0, efficiency      2.615
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity (-29 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:440:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:143:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:149:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:138:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:75:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:83:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:87:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:95:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:106:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:132:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:212:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 16):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity (-6 instructions)
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:440:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:149:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:212:9                size  +133, benefit     3000.0, efficiency     22.556
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 22):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 33):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     5308.6, efficiency    129.478
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2175.3, efficiency     63.979
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +21, benefit      562.5, efficiency     26.786
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1582.0, efficiency     45.201
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     2812.5, efficiency    133.929
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      593.3, efficiency     16.950
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     1933.6, efficiency     92.076
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2175.3, efficiency     63.979
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1582.0, efficiency     45.201
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      593.3, efficiency     16.950
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947

Pass 1: speed optimization selection (cost limit 44):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity (-8 instructions)
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 52):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 51):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 50):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355 (+1 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     5308.6, efficiency    108.339
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +25, benefit      562.5, efficiency     22.500
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     2812.5, efficiency    112.500
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     1933.6, efficiency     77.344

Pass 1: speed optimization selection (cost limit 49):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     5308.6, efficiency    104.090
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +26, benefit      562.5, efficiency     21.635
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     2812.5, efficiency    108.173
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     1933.6, efficiency     74.369

Pass 1: speed optimization selection (cost limit 51):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     5308.6, efficiency   5308.594 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 58):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     2812.5, efficiency     90.726
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:440:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +32, benefit     2250.0, efficiency     70.313
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +32, benefit      562.5, efficiency     17.578
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:212:9                size  +160, benefit     3000.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 60):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     3401.4, efficiency   1133.789 (-11 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:440:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:133:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:212:9                size  +160, benefit     3000.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 71):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447 (-8 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:440:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:282:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:133:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:212:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 79):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2175.3, efficiency     65.918
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:440:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:133:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1582.0, efficiency     46.530
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
  * Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344 (+3 instructions)
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      593.3, efficiency     17.449
  ! Inline function call at CoreBuilder.mnd:212:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 76):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1147.0, efficiency    382.324
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2175.3, efficiency     65.918
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:440:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1582.0, efficiency     46.530
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      593.3, efficiency     17.449
  ! Inline function call at CoreBuilder.mnd:212:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 76):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1147.0, efficiency    382.324 (-3 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:440:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +36, benefit     2250.0, efficiency     62.500
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:133:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 79):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2175.3, efficiency     58.792
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:440:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +36, benefit     2250.0, efficiency     62.500
  * Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit      984.4, efficiency    140.625 (+5 instructions)
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:133:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:212:9                size  +164, benefit     3000.0, efficiency     18.293
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 74):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3440.9, efficiency     45.879
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:440:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:152:5                size   +36, benefit     2250.0, efficiency     62.500
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:133:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  * Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188 (+21 instructions)
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:212:9                size  +169, benefit     3000.0, efficiency     17.751
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 53):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526 (+15 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3440.9, efficiency     45.879
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:440:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:212:9                size  +169, benefit     3000.0, efficiency     17.751
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 38):
    Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     3440.9, efficiency     29.410
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +190, benefit       75.0, efficiency      0.395
  ! Inline function call at CoreBuilder.mnd:440:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      562.5, efficiency     51.136 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +190, benefit     3000.0, efficiency     15.789
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 28):
  * Replicate loop condition at CoreBuilder.mnd:434:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:440:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 27):
  * Replicate loop condition at CoreBuilder.mnd:439:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:440:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 26):
  * Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:440:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 25):
  * Replicate loop condition at CoreBuilder.mnd:468:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:440:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 24):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:440:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
  * Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      123.0, efficiency     17.578 (+5 instructions)
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 19):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +83, benefit      120.0, efficiency      1.446
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      123.0, efficiency      4.557
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3915.5, efficiency     16.662
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +205, benefit       75.0, efficiency      0.366
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:440:9                size  +205, benefit       75.0, efficiency      0.366
    Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:462:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +205, benefit       75.0, efficiency      0.366
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  * Inline function call at CoreBuilder.mnd:235:5                size   +19, benefit      285.0, efficiency     15.000 (+18 instructions)
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      104.0, efficiency      4.952
    Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +205, benefit     3000.0, efficiency     14.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size  +155, benefit      120.0, efficiency      0.774
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      123.0, efficiency      4.557
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +18, benefit       49.0, efficiency      2.722
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3915.5, efficiency     16.662
  ! Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +39, benefit        4.0, efficiency      0.103
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +39, benefit        4.0, efficiency      0.103
  ! Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +39, benefit        4.0, efficiency      0.103
  ! Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:440:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:462:28               size   +39, benefit        4.0, efficiency      0.103
  ! Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:240:5                size   +39, benefit      104.0, efficiency      2.667
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:321:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +205, benefit     3000.0, efficiency     14.634
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      238.0, efficiency      2.938

Pass 2: speed optimization selection (cost limit 8):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size  +151, benefit      120.0, efficiency      0.795
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      123.0, efficiency      4.557
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +18, benefit       49.0, efficiency      2.722
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3915.5, efficiency     16.662
    Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +38, benefit        4.0, efficiency      0.105
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +202, benefit       75.0, efficiency      0.371
    Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +38, benefit        4.0, efficiency      0.105
    Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:440:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:462:28               size   +38, benefit        4.0, efficiency      0.105
    Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +202, benefit       75.0, efficiency      0.371
    Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  * Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       61.5, efficiency      8.789 (+6 instructions)
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:236:12               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:240:5                size   +38, benefit      104.0, efficiency      2.737
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:321:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +202, benefit     3000.0, efficiency     14.851
  ! Inline function call at CoreBuilder.mnd:219:5                size   +80, benefit      238.0, efficiency      2.975

Pass 2: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size  +151, benefit      120.0, efficiency      0.795
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +20, benefit       61.5, efficiency      3.076
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +18, benefit       49.0, efficiency      2.722
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     3994.6, efficiency     13.587
  ! Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:440:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:462:28               size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       79.1, efficiency      1.341
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:236:12               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:240:5                size   +38, benefit      104.0, efficiency      2.737
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:321:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +208, benefit     3000.0, efficiency     14.423
  ! Inline function call at CoreBuilder.mnd:219:5                size   +80, benefit      238.0, efficiency      2.975

Pass 3: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size  +151, benefit      120.0, efficiency      0.795
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size   +99, benefit       91.0, efficiency      0.919
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:320:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:515:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:529:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +20, benefit       61.5, efficiency      3.076
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +18, benefit       49.0, efficiency      2.722
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     3994.6, efficiency     13.587
  ! Inline function call at CoreBuilder.mnd:339:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:340:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:341:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:346:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:347:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:350:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:351:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:352:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:18               size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:384:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:386:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:397:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:398:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:399:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:403:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:404:5                size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:405:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:428:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:430:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:5                size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:432:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:435:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:440:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:279:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:285:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:459:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:462:28               size   +38, benefit        4.0, efficiency      0.105
  ! Inline function call at CoreBuilder.mnd:304:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:469:9                size  +208, benefit       75.0, efficiency      0.361
  ! Inline function call at CoreBuilder.mnd:502:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:503:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:504:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:505:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:509:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:510:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:511:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       79.1, efficiency      1.341
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:226:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:227:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:236:12               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:240:5                size   +38, benefit      104.0, efficiency      2.737
  ! Inline function call at CoreBuilder.mnd:245:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:246:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:321:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:212:9                size  +208, benefit     3000.0, efficiency     14.423
  ! Inline function call at CoreBuilder.mnd:219:5                size   +80, benefit      238.0, efficiency      2.975

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-75 instructions):
 
    47 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    48 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    49 label *label49
-    * set *tmp138 :buildBlockFromCfg.1*retval
    50 set :buildBlockFromCfg.1:cfg "|2:25"
    51 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    52 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
 
    64 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    65 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    66 label *label52
-    * set *tmp141 :buildBlockFromCfg.1*retval
    67 set :buildFirstTitaniumDrill:cfg "2228"
    68 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    69 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
 
    95 setaddr :error*retaddr *label58 (h:*label58)
    96 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    97 label *label58
-    * set *tmp156 null
    98 jump *label57 always
    99 label *label56
-    * set *tmp156 null
   100 label *label57
   101 write @pneumatic-drill .display ".nextBlock"
   102 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   124 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   125 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   126 label *label61
-    * set *tmp162 :buildBlockFromCfg.1*retval
   127 set :buildBlockFromCfg.1:cfg "f282;"
   128 setaddr :buildBlockFromCfg.1*retaddr *label62 (h:*label62)
   129 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label62) (h:*label62)
   130 label *label62
-    * set *tmp163 :buildBlockFromCfg.1*retval
   131 set .graphiteSurplus 100
   132 set :buildBlockFromCfg:cfg "½..2<"
   133 set :buildBlockFromCfg:config processor2
 
   149 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   150 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   151 label *label64
-    * set *tmp165 :buildBlockFromCfg.1*retval
   152 set :buildBlockFromCfg.1:cfg ".02>"
   153 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   154 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
 
   187 op lessThan *tmp169 *tmp168 300
   188 jump *label74 equal *tmp169 false
   189 jump *label72 always
-    * set *tmp170 null
   190 jump *label75 always
   191 label *label74
-    * set *tmp170 null
   192 label *label75
   193 label *label71
   194 read *tmp101 .controller ".monos"
 
   200 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   201 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   202 label *label76
-    * set *tmp172 :buildBlockFromCfg.1*retval
   203 set :buildBlockFromCfg.1:cfg "c622A"
   204 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   205 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   206 label *label77
-    * set *tmp173 :buildBlockFromCfg.1*retval
   207 set :buildBlockFromCfg.1:cfg "6752B"
   208 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   209 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   215 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   216 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   217 label *label79
-    * set *tmp175 :buildBlockFromCfg.1*retval
   218 set :buildBlockFromCfg:cfg "*42D"
   219 set :buildBlockFromCfg:config @coal
   220 setaddr :buildBlockFromCfg*retaddr *label80 (h:*label80)
   221 call *label37 *invalid :buildBlockFromCfg*retval (m:*label80) (h:*label80)
   222 label *label80
-    * set *tmp176 :buildBlockFromCfg*retval
   223 set :buildBlockFromCfg.1:cfg "~)72E"
   224 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   225 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
 
   257 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   258 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   259 label *label86
-    * set *tmp182 :buildBlockFromCfg.1*retval
   260 setaddr :buildUnits*retaddr *label87 (h:*label87)
   261 call *label40 *invalid :buildUnits*retval (m:*label87) (h:*label87)
   262 label *label87
 
   276 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   277 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
   278 label *label90
-    * set *tmp184 :buildBlockFromCfg.1*retval
   279 set :buildBlockFromCfg.1:cfg "c802P"
   280 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   281 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
   282 label *label91
-    * set *tmp185 :buildBlockFromCfg.1*retval
   283 set :buildBlockFromCfg:cfg "882Q"
   284 set :buildBlockFromCfg:config @sand
   285 setaddr :buildBlockFromCfg*retaddr *label92 (h:*label92)
   286 call *label37 *invalid :buildBlockFromCfg*retval (m:*label92) (h:*label92)
   287 label *label92
-    * set *tmp186 :buildBlockFromCfg*retval
   288 setaddr :buildUnits*retaddr *label93 (h:*label93)
   289 call *label40 *invalid :buildUnits*retval (m:*label93) (h:*label93)
   290 label *label93
 
   369 setaddr :error*retaddr *label112 (h:*label112)
   370 call *label13 *invalid :error*retval (m:*label112) (h:*label112)
   371 label *label112
-    * set *tmp211 null
   372 jump *label111 always
   373 label *label110
-    * set *tmp211 null
   374 label *label111
   375 write @laser-drill .blockBuilder ":buildBlockAt:block"
   376 read *tmp56 .oreLocator ".drillX"
 
   396 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   397 call *label36 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   398 label *label114
-    * set *tmp220 :buildRemoteBlock*retval
   399 set :buildRemoteBlock:cfg ");2C"
   400 read *tmp62 .oreLocator ".water2X"
   401 set :buildRemoteBlock:x *tmp62
 
   404 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   405 call *label36 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   406 label *label115
-    * set *tmp221 :buildRemoteBlock*retval
   407 set :buildRemoteBlock:cfg "~)72E"
   408 read *tmp64 .oreLocator ".generatorX"
   409 set :buildRemoteBlock:x *tmp64
 
   422 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   423 call *label36 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   424 label *label117
-    * set *tmp223 :buildRemoteBlock*retval
   425 set :buildRemoteBlock:cfg "v.22="
   426 read *tmp68 .oreLocator ".node2X"
   427 set :buildRemoteBlock:x *tmp68
 
   430 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   431 call *label36 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   432 label *label118
-    * set *tmp224 :buildRemoteBlock*retval
   433 set :buildRemoteBlock:cfg "222L"
   434 read *tmp70 .oreLocator ".panelX"
   435 set :buildRemoteBlock:x *tmp70
 
   438 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   439 call *label36 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   440 label *label119
-    * set *tmp225 :buildRemoteBlock*retval
   441 set :buildRemoteBlock:cfg "z2<23"
   442 read *tmp72 .oreLocator ".batteryX"
   443 set :buildRemoteBlock:x *tmp72
 
   461 op equal *tmp228 .thoriumContainer null
   462 jump *label122 equal *tmp228 false
   463 set .thoriumContainer .thoriumDrill
-    * set *tmp229 .thoriumContainer
   464 jump *label123 always
   465 label *label122
-    * set *tmp229 null
   466 label *label123
   467 write .thoriumDrill .display ".thoriumDrill"
   468 write .thoriumContainer .display ".thoriumContainer"
 
   607 label *label161
   608 set *tmp253 null
   609 label *label159
-    * set *tmp250 *tmp253
   610 jump *label157 always
   611 label *label156
-    * set *tmp250 null
   612 label *label157
   613 set :fetchBlock:block .thoriumContainer
   614 set :fetchBlock:item @thorium
 
   616 call *label23 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   617 label *label162
   618 label *label154
-    * set *tmp247 null
   619 jump *label153 always
   620 label *label152
   621 read *tmp101 .controller ".monos"
 
   657 label *label173
   658 set *tmp263 null
   659 label *label174
-    * set *tmp260 *tmp263
   660 jump *label172 always
   661 label *label171
-    * set *tmp260 null
   662 label *label172
   663 sensor *tmp264 .core @silicon
   664 op lessThan *tmp265 *tmp264 .targetSilicon
 
   699 label *label184
   700 set *tmp269 *tmp272
   701 label *label180
-    * set *tmp266 *tmp269
   702 jump *label178 always
   703 label *label177
-    * set *tmp266 null
   704 label *label178
   705 sensor *tmp273 .battery @totalPower
   706 op lessThan *tmp274 *tmp273 .powerTarget
 
   728 label *label187
   729 set *tmp275 null
   730 label *label188
-    * set *tmp257 *tmp275
   731 jump *label170 always
   732 label *label169
-    * set *tmp257 null
   733 label *label170
   734 sensor *tmp279 .core @titanium
   735 op lessThan *tmp280 *tmp279 .targetTitanium
 
   866 label *label197
   867 set *tmp289 null
   868 label *label198
-    * set *tmp287 *tmp289
   869 jump *label196 always
   870 label *label195
   871 set :status1:text "Goal 11: Fetching titanium"
 
   877 setaddr :fetchBlock*retaddr *label226 (h:*label226)
   878 call *label23 *invalid :fetchBlock*retval (m:*label226) (h:*label226)
   879 label *label226
-    * set *tmp287 null
   880 label *label196
   881 label *label168
   882 set *tmp255 null
   883 label *label164
-    * set *tmp247 *tmp255
   884 label *label153
   885 label *label151
   886 return :supplyBase*retaddr
 
   921 label *label231
   922 set :buildRemoteBlock*retval :buildBlock*retval
   923 jump *label227 always
-    * set *tmp316 null
   924 jump *label229 always
   925 label *label228
-    * set *tmp316 null
   926 label *label229
   927 set :buildRemoteBlock*retval false
   928 jump *label227 always
 
  1061 sensor *tmp324 @unit @mining
  1062 jump *label253 equal *tmp324 false
  1063 ucontrol stop
-    * set *tmp325 null
  1064 jump *label254 always
  1065 label *label253
-    * set *tmp325 null
  1066 label *label254
  1067 ubind :lineUpUnits:unit
  1068 label *label251
 
  1127 op land *tmp335 *tmp333 *tmp334
  1128 jump *label267 equal *tmp335 false
  1129 ucontrol itemDrop @air 1000
-    * set *tmp336 null
  1130 jump *label268 always
  1131 label *label267
-    * set *tmp336 null
  1132 label *label268
  1133 label *label265
  1134 sensor *tmp337 @unit :fetchBlock:item
 
  1165 setaddr :mineOre*retaddr *label274 (h:*label274)
  1166 call *label21 *invalid :mineOre*retval (m:*label274) (h:*label274)
  1167 label *label274
-    * set *tmp345 null
  1168 jump *label273 always
  1169 label *label272
-    * set *tmp345 null
  1170 label *label273
  1171 label *label270
  1172 return :supplyBlock*retaddr
 
  1202 op land *tmp351 *tmp349 *tmp350
  1203 jump *label283 equal *tmp351 false
  1204 ucontrol itemDrop @air 1000
-    * set *tmp352 null
  1205 jump *label284 always
  1206 label *label283
-    * set *tmp352 null
  1207 label *label284
  1208 label *label281
  1209 sensor *tmp353 @unit :supplyBlockFromCore:item
 
  1265 sensor *tmp381 :unpackCfg:type @thorium
  1266 set :unpackCfg:th *tmp381
  1267 sensor *tmp382 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp382
  1268 label *label286
  1269 return :unpackCfg*retaddr
  1270 end
 
  1345 jump *label302 equal *tmp399 false
  1346 set *tmp397 false
  1347 jump *label301 always
-    * set *tmp400 null
  1348 jump *label303 always
  1349 label *label302
-    * set *tmp400 null
  1350 label *label303
  1351 sensor *tmp401 .core @lead
  1352 op lessThan *tmp402 *tmp401 .targetLead
  1353 jump *label304 equal *tmp402 false
  1354 set *tmp397 false
  1355 jump *label301 always
-    * set *tmp403 null
  1356 jump *label305 always
  1357 label *label304
-    * set *tmp403 null
  1358 label *label305
  1359 sensor *tmp404 .core @graphite
  1360 op lessThan *tmp405 *tmp404 .targetGraphite
  1361 jump *label306 equal *tmp405 false
  1362 set *tmp397 false
  1363 jump *label301 always
-    * set *tmp406 null
  1364 jump *label307 always
  1365 label *label306
-    * set *tmp406 null
  1366 label *label307
  1367 sensor *tmp407 .core @silicon
  1368 op lessThan *tmp408 *tmp407 .targetSilicon
  1369 jump *label308 equal *tmp408 false
  1370 set *tmp397 false
  1371 jump *label301 always
-    * set *tmp409 null
  1372 jump *label309 always
  1373 label *label308
-    * set *tmp409 null
  1374 label *label309
  1375 sensor *tmp410 .core @titanium
  1376 op lessThan *tmp411 *tmp410 .targetTitanium
  1377 jump *label310 equal *tmp411 false
  1378 set *tmp397 false
  1379 jump *label301 always
-    * set *tmp412 null
  1380 jump *label311 always
  1381 label *label310
-    * set *tmp412 null
  1382 label *label311
  1383 sensor *tmp413 .core @metaglass
  1384 op lessThan *tmp414 *tmp413 .targetMetaglass
  1385 jump *label312 equal *tmp414 false
  1386 set *tmp397 false
  1387 jump *label301 always
-    * set *tmp415 null
  1388 jump *label313 always
  1389 label *label312
-    * set *tmp415 null
  1390 label *label313
  1391 sensor *tmp416 .core @thorium
  1392 op lessThan *tmp417 *tmp416 .targetThorium
  1393 jump *label314 equal *tmp417 false
  1394 set *tmp397 false
  1395 jump *label301 always
-    * set *tmp418 null
  1396 jump *label315 always
  1397 label *label314
-    * set *tmp418 null
  1398 label *label315
  1399 set *tmp397 true
  1400 jump *label301 always
 
  1465 op notEqual *tmp429 *tmp428 null
  1466 jump *label327 equal *tmp429 false
  1467 ucontrol itemDrop @air 1000
-    * set *tmp430 null
  1468 jump *label328 always
  1469 label *label327
-    * set *tmp430 null
  1470 label *label328
  1471 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1472 label *label325
 
  1513 op greaterThan *tmp442 *tmp440 *tmp441
  1514 jump *label338 notEqual *tmp442 false
  1515 label *label340
-    * set *tmp437 null
  1516 jump *label336 always
  1517 label *label335
  1518 label *label341
 
  1523 label *label342
  1524 jump *label341 always
  1525 label *label343
-    * set *tmp437 null
  1526 label *label336
  1527 set :transportStatus:target 0
  1528 set :transportStatus:item null
 
  1557 setaddr :dropAll*retaddr *label351 (h:*label351)
  1558 call *label17 *invalid :dropAll*retval (m:*label351) (h:*label351)
  1559 label *label351
-    * set *tmp448 null
  1560 jump *label350 always
  1561 label *label349
-    * set *tmp448 null
  1562 label *label350
  1563 set :status3:text "Mining..."
  1564 setaddr :status3*retaddr *label352 (h:*label352)
 
  1574 op land *tmp453 *tmp451 *tmp452
  1575 jump *label356 equal *tmp453 false
  1576 jump *label355 always
-    * set *tmp454 null
  1577 jump *label357 always
  1578 label *label356
-    * set *tmp454 null
  1579 label *label357
  1580 ucontrol mine :mineOre:x :mineOre:y
  1581 op greaterThan *tmp455 @second :mineOre:stop
  1582 jump *label358 equal *tmp455 false
  1583 jump *label355 always
-    * set *tmp456 null
  1584 jump *label359 always
  1585 label *label358
-    * set *tmp456 null
  1586 label *label359
  1587 label *label354
  1588 sensor *tmp457 @unit @totalItems
 
  1623 setaddr :error*retaddr *label367 (h:*label367)
  1624 call *label13 *invalid :error*retval (m:*label367) (h:*label367)
  1625 label *label367
-    * set *tmp464 null
  1626 jump *label366 always
  1627 label *label365
-    * set *tmp464 null
  1628 label *label366
  1629 label *label364
  1630 return :locateOre*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-13 instructions):
 
   597 setaddr :supplyBlock*retaddr *label160 (h:*label160)
   598 call *label24 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
   599 label *label160
-    * set *tmp253 null
   600 jump *label159 always
   601 label *label158
   602 set :supplyBlockFromCore:target .thoriumGenerator
 
   604 setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
   605 call *label25 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   606 label *label161
-    * set *tmp253 null
   607 label *label159
   608 jump *label157 always
   609 label *label156
 
   628 call *label22 *invalid :mineOre.1*retval (m:*label167) (h:*label167)
   629 label *label167
   630 label *label165
-    * set *tmp255 null
   631 jump *label164 always
   632 label *label163
   633 set :supplyBase0:supplied false
 
   649 call *label24 *invalid :supplyBlock*retval (m:*label176) (h:*label176)
   650 label *label176
   651 set :supplyBase0:supplied true
-    * set *tmp263 :supplyBase0:supplied
   652 jump *label174 always
   653 label *label173
-    * set *tmp263 null
   654 label *label174
   655 jump *label172 always
   656 label *label171
 
   671 call *label24 *invalid :supplyBlock*retval (m:*label182) (h:*label182)
   672 label *label182
   673 set :supplyBase0:supplied true
-    * set *tmp269 :supplyBase0:supplied
   674 jump *label180 always
   675 label *label179
   676 sensor *tmp270 .smelter @sand
 
   691 label *label183
   692 set *tmp272 null
   693 label *label184
-    * set *tmp269 *tmp272
   694 label *label180
   695 jump *label178 always
   696 label *label177
 
   716 label *label189
   717 set *tmp278 null
   718 label *label190
-    * set *tmp275 *tmp278
   719 jump *label188 always
   720 label *label187
-    * set *tmp275 null
   721 label *label188
   722 jump *label170 always
   723 label *label169
 
   852 label *label204
   853 set *tmp293 *tmp296
   854 label *label200
-    * set *tmp289 *tmp293
   855 jump *label198 always
   856 label *label197
-    * set *tmp289 null
   857 label *label198
   858 jump *label196 always
   859 label *label195
 
   868 label *label226
   869 label *label196
   870 label *label168
-    * set *tmp255 null
   871 label *label164
   872 label *label153
   873 label *label151
 
  1252 set :unpackCfg:mg *tmp380
  1253 sensor *tmp381 :unpackCfg:type @thorium
  1254 set :unpackCfg:th *tmp381
-    * sensor *tmp382 :unpackCfg:type @size
  1255 label *label286
  1256 return :unpackCfg*retaddr
  1257 end

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
   686 call *label24 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   687 label *label186
   688 set :supplyBase0:supplied true
-    * set *tmp272 :supplyBase0:supplied
   689 jump *label184 always
   690 label *label183
-    * set *tmp272 null
   691 label *label184
   692 label *label180
   693 jump *label178 always
 
   709 call *label24 *invalid :supplyBlock*retval (m:*label192) (h:*label192)
   710 label *label192
   711 set :supplyBase0:supplied true
-    * set *tmp278 :supplyBase0:supplied
   712 jump *label190 always
   713 label *label189
-    * set *tmp278 null
   714 label *label190
   715 jump *label188 always
   716 label *label187
 
   747 setaddr :mineOre.1*retaddr *label202 (h:*label202)
   748 call *label22 *invalid :mineOre.1*retval (m:*label202) (h:*label202)
   749 label *label202
-    * set *tmp293 null
   750 jump *label200 always
   751 label *label199
   752 sensor *tmp294 .core @silicon
 
   845 label *label210
   846 set *tmp296 *tmp303
   847 label *label204
-    * set *tmp293 *tmp296
   848 label *label200
   849 jump *label198 always
   850 label *label197

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   772 setaddr :mineOre.1*retaddr *label208 (h:*label208)
   773 call *label22 *invalid :mineOre.1*retval (m:*label208) (h:*label208)
   774 label *label208
-    * set *tmp296 null
   775 jump *label204 always
   776 label *label203
   777 sensor *tmp301 .core @copper
 
   842 label *label214
   843 set *tmp303 *tmp306
   844 label *label210
-    * set *tmp296 *tmp303
   845 label *label204
   846 label *label200
   847 jump *label198 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
   785 setaddr :mineOre.1*retaddr *label212 (h:*label212)
   786 call *label22 *invalid :mineOre.1*retval (m:*label212) (h:*label212)
   787 label *label212
-    * set *tmp303 null
   788 jump *label210 always
   789 label *label209
   790 sensor *tmp304 .core @lead
 
   839 label *label218
   840 set *tmp306 *tmp309
   841 label *label214
-    * set *tmp303 *tmp306
   842 label *label210
   843 label *label204
   844 label *label200

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
   798 setaddr :mineOre.1*retaddr *label216 (h:*label216)
   799 call *label22 *invalid :mineOre.1*retval (m:*label216) (h:*label216)
   800 label *label216
-    * set *tmp306 null
   801 jump *label214 always
   802 label *label213
   803 sensor *tmp307 .core @metaglass
 
   836 label *label224
   837 set *tmp309 null
   838 label *label218
-    * set *tmp306 *tmp309
   839 label *label214
   840 label *label210
   841 label *label204

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   811 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   812 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   813 label *label220
-    * set *tmp309 null
   814 jump *label218 always
   815 label *label217
   816 set :status1:text "Goal 10: supplying base"
 
   833 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   834 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   835 label *label224
-    * set *tmp309 null
   836 label *label218
   837 label *label214
   838 label *label210

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-81 instructions):
 
    23 write 511 bank1 511
    24 label *label44
    25 ubind @poly
-    * set *tmp132 @unit
-    * set .builder *tmp132
-    * ulocate building core false @copper .coreX .coreY *tmp134 *tmp133
-    * set .core *tmp133
+   26 set .builder @unit
+   27 ulocate building core false @copper .coreX .coreY *tmp134 .core
    28 label *label45
    29 op equal *tmp135 .core null
    30 jump *label44 notEqual *tmp135 false
 
    33 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    34 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    35 label *label47
-    * set *tmp136 :buildBlockFromCfg.1*retval
-    * set .press *tmp136
+   36 set .press :buildBlockFromCfg.1*retval
    37 set :buildBlockFromCfg.1:cfg "z2<23"
    38 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    39 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    40 label *label48
-    * set *tmp137 :buildBlockFromCfg.1*retval
-    * set .battery *tmp137
+   41 set .battery :buildBlockFromCfg.1*retval
    42 set :buildBlockFromCfg.1:cfg "z4<24"
    43 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    44 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
 
    47 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    48 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    49 label *label50
-    * set *tmp139 :buildBlockFromCfg.1*retval
-    * set .generator *tmp139
+   50 set .generator :buildBlockFromCfg.1*retval
    51 set .powerTarget 400
    52 set :buildBlockFromCfg.1:cfg "45926"
    53 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    54 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    55 label *label51
-    * set *tmp140 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp140
+   56 set .smelter :buildBlockFromCfg.1*retval
    57 set :buildBlockFromCfg.1:cfg "c4627"
    58 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    59 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
 
    77 wait 1e-15
    78 read *tmp153 .oreLocator ":findDrillLocation*finished"
    79 jump *label55 equal *tmp153 false
-    * read *tmp150 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp150
-    * read *tmp151 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp151
-    * read *tmp154 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp154
+   80 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   81 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   82 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    83 op equal *tmp155 :buildFirstTitaniumDrill:result false
    84 jump *label56 equal *tmp155 false
    85 set :error:error "Cannot locate spot for titanium drill"
 
    98 wait 1e-15
    99 read *tmp159 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
   100 jump *label59 equal *tmp159 false
-    * read *tmp160 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp142 *tmp160
+  101 read *tmp142 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
   102 jump *label53 always
   103 set *tmp142 null
   104 label *label53
 
   108 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   109 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   110 label *label60
-    * set *tmp161 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp161
+  111 set .unloader1 :buildBlockFromCfg.1*retval
   112 set :buildBlockFromCfg.1:cfg "c062:"
   113 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   114 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
 
   123 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   124 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   125 label *label63
-    * set *tmp164 :buildBlockFromCfg*retval
-    * set .controller *tmp164
+  126 set .controller :buildBlockFromCfg*retval
   127 write processor6 .controller ".timer"
   128 write .display .controller ".display"
   129 write .core .controller ".core"
 
   141 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   142 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   143 label *label65
-    * set *tmp166 :buildBlockFromCfg.1*retval
-    * write *tmp166 .controller ".unloader2"
+  144 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   145 set :buildBlockFromCfg.1:cfg "¦*05?"
   146 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
   147 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   148 label *label66
-    * set *tmp167 :buildBlockFromCfg.1*retval
-    * set :factory *tmp167
+  149 set :factory :buildBlockFromCfg.1*retval
   150 write :factory .controller ".factory"
   151 write :factory .display ".airFactory"
   152 set :setFlareTarget:target 1
 
   194 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   195 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   196 label *label78
-    * set *tmp174 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp174
+  197 set .kiln :buildBlockFromCfg.1*retval
   198 write .kiln .controller ".kiln"
   199 set :buildBlockFromCfg.1:cfg ");2C"
   200 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
 
   209 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   210 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   211 label *label81
-    * set *tmp177 :buildBlockFromCfg.1*retval
-    * write *tmp177 .controller ".generator2"
+  212 write :buildBlockFromCfg.1*retval .controller ".generator2"
   213 set :buildBlockFromCfg.1:cfg "3.:2F"
   214 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   215 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   216 label *label82
-    * set *tmp178 :buildBlockFromCfg.1*retval
-    * write *tmp178 .controller ".multipress"
+  217 write :buildBlockFromCfg.1*retval .controller ".multipress"
   218 set .graphiteSurplus 150
   219 set :buildBlockFromCfg.1:cfg "¯**2G"
   220 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   221 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   222 label *label83
-    * set *tmp179 :buildBlockFromCfg.1*retval
-    * write *tmp179 .controller ".payloadRouter"
+  223 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   224 set :buildBlockFromCfg.1:cfg "0.2H"
   225 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   226 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
   227 label *label84
-    * set *tmp180 :buildBlockFromCfg.1*retval
-    * write *tmp180 .controller ".unloader4"
+  228 write :buildBlockFromCfg.1*retval .controller ".unloader4"
   229 set :buildBlockFromCfg.1:cfg "¨0*2I"
   230 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   231 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   232 label *label85
-    * set *tmp181 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp181
+  233 set :reconstructor :buildBlockFromCfg.1*retval
   234 write :reconstructor .controller ".reconstructor"
   235 write :reconstructor .display ".reconstructor"
   236 set :buildBlockFromCfg.1:cfg "{<62J"
 
   250 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
   251 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label89) (h:*label89)
   252 label *label89
-    * set *tmp183 :buildBlockFromCfg.1*retval
-    * write *tmp183 .controller ".smelter2"
+  253 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   254 set :buildBlockFromCfg.1:cfg "c822O"
   255 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   256 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
 
   298 label *label103
   299 write @ore-titanium .display ".nextBlock"
   300 ubind @flare
-    * read *tmp54 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp54
+  301 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   302 write .coreX .oreLocator ":findDrillLocation:x"
   303 write .coreY .oreLocator ":findDrillLocation:y"
   304 write @unit .oreLocator ":findDrillLocation:unit"
 
   339 wait 1e-15
   340 read *tmp208 .oreLocator ":layoutThoriumDrill*finished"
   341 jump *label109 equal *tmp208 false
-    * read *tmp209 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp209
+  342 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   343 op equal *tmp210 :buildThoriumDrill:result false
   344 jump *label110 equal *tmp210 false
   345 set :error:error "Cannot locate spot for thorium drill"
 
   363 wait 1e-15
   364 read *tmp218 .blockBuilder ":buildBlockAt*finished"
   365 jump *label113 equal *tmp218 false
-    * read *tmp219 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp219
+  366 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   367 set :buildRemoteBlock:cfg ");2C"
-    * read *tmp58 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp59
+  368 read :buildRemoteBlock:x .oreLocator ".water1X"
+  369 read :buildRemoteBlock:y .oreLocator ".water1Y"
   370 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   371 call *label36 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   372 label *label114
   373 set :buildRemoteBlock:cfg ");2C"
-    * read *tmp62 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp63
+  374 read :buildRemoteBlock:x .oreLocator ".water2X"
+  375 read :buildRemoteBlock:y .oreLocator ".water2Y"
   376 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   377 call *label36 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   378 label *label115
   379 set :buildRemoteBlock:cfg "~)72E"
-    * read *tmp64 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp65
+  380 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  381 read :buildRemoteBlock:y .oreLocator ".generatorY"
   382 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   383 call *label36 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   384 label *label116
-    * set *tmp222 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp222
+  385 set .thoriumGenerator :buildRemoteBlock*retval
   386 set :buildRemoteBlock:cfg "v.22="
-    * read *tmp66 .oreLocator ".node1X"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 .oreLocator ".node1Y"
-    * set :buildRemoteBlock:y *tmp67
+  387 read :buildRemoteBlock:x .oreLocator ".node1X"
+  388 read :buildRemoteBlock:y .oreLocator ".node1Y"
   389 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   390 call *label36 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   391 label *label117
   392 set :buildRemoteBlock:cfg "v.22="
-    * read *tmp68 .oreLocator ".node2X"
-    * set :buildRemoteBlock:x *tmp68
-    * read *tmp69 .oreLocator ".node2Y"
-    * set :buildRemoteBlock:y *tmp69
+  393 read :buildRemoteBlock:x .oreLocator ".node2X"
+  394 read :buildRemoteBlock:y .oreLocator ".node2Y"
   395 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   396 call *label36 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   397 label *label118
   398 set :buildRemoteBlock:cfg "222L"
-    * read *tmp70 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp70
-    * read *tmp71 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp71
+  399 read :buildRemoteBlock:x .oreLocator ".panelX"
+  400 read :buildRemoteBlock:y .oreLocator ".panelY"
   401 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   402 call *label36 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   403 label *label119
   404 set :buildRemoteBlock:cfg "z2<23"
-    * read *tmp72 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp72
-    * read *tmp73 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp73
+  405 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  406 read :buildRemoteBlock:y .oreLocator ".batteryY"
   407 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   408 call *label36 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   409 label *label120
-    * set *tmp226 :buildRemoteBlock*retval
-    * set .thoriumBattery *tmp226
+  410 set .thoriumBattery :buildRemoteBlock*retval
   411 set :buildRemoteBlock:cfg "222M"
-    * read *tmp60 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp61
+  412 read :buildRemoteBlock:x .oreLocator ".containerX"
+  413 read :buildRemoteBlock:y .oreLocator ".containerY"
   414 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   415 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   416 label *label121
-    * set *tmp227 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp227
+  417 set .thoriumContainer :buildRemoteBlock*retval
   418 op equal *tmp228 .thoriumContainer null
   419 jump *label122 equal *tmp228 false
   420 set .thoriumContainer .thoriumDrill
 
   451 setaddr :buildBlockFromCfg*retaddr *label130 (h:*label130)
   452 call *label37 *invalid :buildBlockFromCfg*retval (m:*label130) (h:*label130)
   453 label *label130
-    * set *tmp233 :buildBlockFromCfg*retval
-    * write *tmp233 .controller ".unloader6"
+  454 write :buildBlockFromCfg*retval .controller ".unloader6"
   455 set :buildBlockFromCfg.1:cfg "©8*2S"
   456 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   457 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
 
   497 label *label142
   498 label *label143
   499 jump *label145 equal true false
-    * op sub *tmp240 @thisy 6
-    * set :lineUpUnits:y *tmp240
+  500 op sub :lineUpUnits:y @thisy 6
   501 set :lineUpUnits:unit @mega
   502 setaddr :lineUpUnits*retaddr *label146 (h:*label146)
   503 call *label42 *invalid :lineUpUnits*retval (m:*label146) (h:*label146)
   504 label *label146
-    * op sub *tmp241 @thisy 10
-    * set :lineUpUnits:y *tmp241
+  505 op sub :lineUpUnits:y @thisy 10
   506 set :lineUpUnits:unit @poly
   507 setaddr :lineUpUnits*retaddr *label147 (h:*label147)
   508 call *label42 *invalid :lineUpUnits*retval (m:*label147) (h:*label147)
   509 label *label147
-    * op sub *tmp242 @thisy 14
-    * set :lineUpUnits:y *tmp242
+  510 op sub :lineUpUnits:y @thisy 14
   511 set :lineUpUnits:unit @mono
   512 setaddr :lineUpUnits*retaddr *label148 (h:*label148)
   513 call *label42 *invalid :lineUpUnits*retval (m:*label148) (h:*label148)
   514 label *label148
-    * op sub *tmp243 @thisy 18
-    * set :lineUpUnits:y *tmp243
+  515 op sub :lineUpUnits:y @thisy 18
   516 set :lineUpUnits:unit @flare
   517 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   518 call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
 
   675 jump *label193 equal *tmp280 false
   676 sensor *tmp282 .core @titanium
   677 op sub *tmp283 .targetTitanium *tmp282
-    * op min *tmp284 7 *tmp283
-    * set *tmp281 *tmp284
+  678 op min *tmp281 7 *tmp283
   679 jump *label194 always
   680 label *label193
   681 set *tmp281 100
 
   707 setaddr :status1*retaddr *label205 (h:*label205)
   708 call *label9 *invalid :status1*retval (m:*label205) (h:*label205)
   709 label *label205
-    * sensor *tmp297 .core @coal
-    * set :supplyBase0:coal *tmp297
-    * sensor *tmp298 .core @sand
-    * set :supplyBase0:sand *tmp298
+  710 sensor :supplyBase0:coal .core @coal
+  711 sensor :supplyBase0:sand .core @sand
   712 op lessThan *tmp299 :supplyBase0:coal :supplyBase0:sand
   713 jump *label206 equal *tmp299 false
   714 set *tmp300 @coal
 
   766 setaddr :status1*retaddr *label221 (h:*label221)
   767 call *label9 *invalid :status1*retval (m:*label221) (h:*label221)
   768 label *label221
-    * sensor *tmp310 .core @coal
-    * set :supplyBase0:coal.1 *tmp310
-    * sensor *tmp311 .core @sand
-    * set :supplyBase0:sand.1 *tmp311
+  769 sensor :supplyBase0:coal.1 .core @coal
+  770 sensor :supplyBase0:sand.1 .core @sand
   771 op lessThanEq *tmp312 :supplyBase0:coal.1 :supplyBase0:sand.1
   772 jump *label222 equal *tmp312 false
   773 set *tmp313 @coal
 
   893 return :buildBlockFromCfg*retaddr
   894 end
   895 label *label38
-    * set *tmp319 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp319
+  896 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   897 set :buildBlockFromCfg:config null
   898 setaddr :buildBlockFromCfg*retaddr *label236 (h:*label236)
   899 call *label37 *invalid :buildBlockFromCfg*retval (m:*label236) (h:*label236)
 
   952 label *label41
   953 label *label243
   954 ubind :flagUnits:unit
-    * set *tmp320 @unit
-    * set :flagUnits:firstUnit *tmp320
+  955 set :flagUnits:firstUnit @unit
   956 label *label244
   957 op equal *tmp321 :flagUnits:firstUnit null
   958 jump *label243 notEqual *tmp321 false
 
   973 ubind :lineUpUnits:unit
   974 set :lineUpUnits:firstUnit @unit
   975 label *label250
-    * sensor *tmp323 @unit @flag
-    * set :lineUpUnits:x *tmp323
+  976 sensor :lineUpUnits:x @unit @flag
   977 ucontrol itemDrop @air 1000
   978 ucontrol move :lineUpUnits:x :lineUpUnits:y
   979 sensor *tmp324 @unit @mining
 
  1002 setaddr :status2*retaddr *label257 (h:*label257)
  1003 call *label10 *invalid :status2*retval (m:*label257) (h:*label257)
  1004 label *label257
-    * set *tmp327 :mineOre.1:ore
-    * set :mineOre:ore *tmp327
+ 1005 set :mineOre:ore :mineOre.1:ore
  1006 set :mineOre:amount 30
  1007 set :mineOre:block .core
  1008 setaddr :mineOre*retaddr *label258 (h:*label258)
 
  1013 end
  1014 label *label23
  1015 sensor *tmp328 :fetchBlock:block @itemCapacity
-    * op min *tmp329 *tmp328 30
-    * set :transportStatus:target *tmp329
+ 1016 op min :transportStatus:target *tmp328 30
  1017 set :transportStatus:item :fetchBlock:item
  1018 setaddr :transportStatus*retaddr *label260 (h:*label260)
  1019 call *label12 *invalid :transportStatus*retval (m:*label260) (h:*label260)
 
  1036 label *label263
  1037 label *label264
  1038 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp332 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp332
+ 1039 sensor :fetchBlock:unitItem @unit @firstItem
  1040 op notEqual *tmp333 :fetchBlock:unitItem null
  1041 op notEqual *tmp334 :fetchBlock:unitItem :fetchBlock:item
  1042 op land *tmp335 *tmp333 *tmp334
 
  1067 setaddr :status2*retaddr *label271 (h:*label271)
  1068 call *label10 *invalid :status2*retval (m:*label271) (h:*label271)
  1069 label *label271
-    * sensor *tmp341 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp341
+ 1070 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1071 sensor *tmp342 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp343 :supplyBlock:blockCapacity *tmp342
-    * set :supplyBlock:missing *tmp343
+ 1072 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
  1073 op greaterThan *tmp344 :supplyBlock:missing 0
  1074 jump *label272 equal *tmp344 false
  1075 set :mineOre:ore :supplyBlock:ore
 
  1086 end
  1087 label *label25
  1088 sensor *tmp346 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp347 *tmp346 30
-    * set :transportStatus:target *tmp347
+ 1089 op min :transportStatus:target *tmp346 30
  1090 set :transportStatus:item :supplyBlockFromCore:item
  1091 setaddr :transportStatus*retaddr *label276 (h:*label276)
  1092 call *label12 *invalid :transportStatus*retval (m:*label276) (h:*label276)
 
  1107 label *label279
  1108 label *label280
  1109 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp348 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp348
+ 1110 sensor :supplyBlockFromCore:unitItem @unit @firstItem
  1111 op notEqual *tmp349 :supplyBlockFromCore:unitItem null
  1112 op notEqual *tmp350 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
  1113 op land *tmp351 *tmp349 *tmp350
 
  1137 op add :unpackCfg:index :unpackCfg:index 1
  1138 read *tmp358 :unpackCfg:cfg *tmp357
  1139 op sub *tmp359 *tmp358 50
-    * lookup block *tmp360 *tmp359
-    * set :unpackCfg:type *tmp360
+ 1140 lookup block :unpackCfg:type *tmp359
  1141 set *tmp361 :unpackCfg:index
  1142 op add :unpackCfg:index :unpackCfg:index 1
  1143 read *tmp362 :unpackCfg:cfg *tmp361
  1144 op sub *tmp363 *tmp362 50
-    * op div *tmp364 *tmp363 2
-    * set :unpackCfg:x *tmp364
+ 1145 op div :unpackCfg:x *tmp363 2
  1146 set *tmp365 :unpackCfg:index
  1147 op add :unpackCfg:index :unpackCfg:index 1
  1148 read *tmp366 :unpackCfg:cfg *tmp365
  1149 op sub *tmp367 *tmp366 50
-    * op div *tmp368 *tmp367 2
-    * set :unpackCfg:y *tmp368
+ 1150 op div :unpackCfg:y *tmp367 2
  1151 set *tmp369 :unpackCfg:index
  1152 op add :unpackCfg:index :unpackCfg:index 1
  1153 read *tmp370 :unpackCfg:cfg *tmp369
-    * op sub *tmp371 *tmp370 50
-    * set :unpackCfg:rotation *tmp371
+ 1154 op sub :unpackCfg:rotation *tmp370 50
  1155 set *tmp372 :unpackCfg:index
  1156 op add :unpackCfg:index :unpackCfg:index 1
  1157 read *tmp373 :unpackCfg:cfg *tmp372
-    * op sub *tmp374 *tmp373 50
-    * set :unpackCfg:ind *tmp374
-    * sensor *tmp375 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp375
-    * sensor *tmp376 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp376
-    * sensor *tmp377 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp377
-    * sensor *tmp378 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp378
-    * sensor *tmp379 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp379
-    * sensor *tmp380 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp380
-    * sensor *tmp381 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp381
+ 1158 op sub :unpackCfg:ind *tmp373 50
+ 1159 sensor :unpackCfg:cu :unpackCfg:type @copper
+ 1160 sensor :unpackCfg:pb :unpackCfg:type @lead
+ 1161 sensor :unpackCfg:gr :unpackCfg:type @graphite
+ 1162 sensor :unpackCfg:si :unpackCfg:type @silicon
+ 1163 sensor :unpackCfg:ti :unpackCfg:type @titanium
+ 1164 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+ 1165 sensor :unpackCfg:th :unpackCfg:type @thorium
  1166 label *label286
  1167 return :unpackCfg*retaddr
  1168 end
 
  1212 write :meetTarget:thorium .display ".targetThorium"
  1213 set .targetCopper :meetTarget:copper
  1214 op add *tmp385 :meetTarget:lead .leadSurplus
-    * op add *tmp386 *tmp385 1
-    * set .targetLead *tmp386
+ 1215 op add .targetLead *tmp385 1
  1216 set .targetGraphite :meetTarget:graphite
  1217 set .targetSilicon :meetTarget:silicon
  1218 set .targetTitanium :meetTarget:titanium
 
  1332 wait 1e-15
  1333 read *tmp426 .blockBuilder ":buildBlockAt*finished"
  1334 jump *label319 equal *tmp426 false
-    * read *tmp427 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp427
+ 1335 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1336 jump *label317 always
  1337 set :buildBlock*retval null
  1338 label *label317
 
  1398 setaddr :moveToBlock*retaddr *label337 (h:*label337)
  1399 call *label18 *invalid :moveToBlock*retval (m:*label337) (h:*label337)
  1400 label *label337
-    * sensor *tmp438 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp438
+ 1401 sensor :depositItems:cap :depositItems:block @itemCapacity
  1402 label *label338
  1403 ucontrol itemDrop :depositItems:block 30
  1404 label *label339
 
  1428 return :depositItems*retaddr
  1429 end
  1430 label *label21
-    * op min *tmp445 :mineOre:amount 30
-    * set :mineOre:amount *tmp445
+ 1431 op min :mineOre:amount :mineOre:amount 30
  1432 set :transportStatus:target :mineOre:amount
  1433 set :transportStatus:item :mineOre:ore
  1434 setaddr :transportStatus*retaddr *label346 (h:*label346)
 
  1458 setaddr :status3*retaddr *label352 (h:*label352)
  1459 call *label11 *invalid :status3*retval (m:*label352) (h:*label352)
  1460 label *label352
-    * op add *tmp449 @second 10
-    * set :mineOre:stop *tmp449
+ 1461 op add :mineOre:stop @second 10
  1462 label *label353
-    * sensor *tmp450 @unit @firstItem
-    * set :mineOre:item *tmp450
+ 1463 sensor :mineOre:item @unit @firstItem
  1464 op notEqual *tmp451 :mineOre:item null
  1465 op notEqual *tmp452 :mineOre:item :mineOre:ore
  1466 op land *tmp453 *tmp451 *tmp452

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   496 call *label41 *invalid :flagUnits*retval (m:*label142) (h:*label142)
   497 label *label142
   498 label *label143
-    * jump *label145 equal true false
   499 op sub :lineUpUnits:y @thisy 6
   500 set :lineUpUnits:unit @mega
   501 setaddr :lineUpUnits*retaddr *label146 (h:*label146)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-55 instructions):
 
    26 set .builder @unit
    27 ulocate building core false @copper .coreX .coreY *tmp134 .core
    28 label *label45
-    * op equal *tmp135 .core null
-    * jump *label44 notEqual *tmp135 false
+   29 jump *label44 equal .core null
    30 label *label46
    31 set :buildBlockFromCfg.1:cfg "2-522"
    32 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
    79 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    80 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    81 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp155 :buildFirstTitaniumDrill:result false
-    * jump *label56 equal *tmp155 false
+   82 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    83 set :error:error "Cannot locate spot for titanium drill"
    84 setaddr :error*retaddr *label58 (h:*label58)
    85 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
 
   168 call *label33 *invalid :supplyBase*retval (m:*label73) (h:*label73)
   169 label *label73
   170 sensor *tmp168 .battery @totalPower
-    * op lessThan *tmp169 *tmp168 300
-    * jump *label74 equal *tmp169 false
+  171 jump *label74 greaterThanEq *tmp168 300
   172 jump *label72 always
   173 jump *label75 always
   174 label *label74
   175 label *label75
   176 label *label71
   177 read *tmp101 .controller ".monos"
-    * op lessThan *tmp171 *tmp101 3
-    * jump *label70 notEqual *tmp171 false
+  178 jump *label70 lessThan *tmp101 3
   179 label *label72
   180 set .siliconSurplus 65
   181 set :buildBlockFromCfg.1:cfg "602@"
 
   265 label *label93
   266 label *label94
   267 read *tmp102 .controller ".polys"
-    * op lessThan *tmp187 *tmp102 3
-    * jump *label96 equal *tmp187 false
+  268 jump *label96 greaterThanEq *tmp102 3
   269 setaddr :supplyBase*retaddr *label97 (h:*label97)
   270 call *label33 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   271 label *label97
 
   278 label *label98
   279 label *label99
   280 read *tmp100 .controller ".flares"
-    * op lessThan *tmp188 *tmp100 2
-    * jump *label101 equal *tmp188 false
+  281 jump *label101 greaterThanEq *tmp100 2
   282 setaddr :supplyBase*retaddr *label102 (h:*label102)
   283 call *label33 *invalid :supplyBase*retval (m:*label102) (h:*label102)
   284 label *label102
 
   334 read *tmp208 .oreLocator ":layoutThoriumDrill*finished"
   335 jump *label109 equal *tmp208 false
   336 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp210 :buildThoriumDrill:result false
-    * jump *label110 equal *tmp210 false
+  337 jump *label110 notEqual :buildThoriumDrill:result false
   338 set :error:error "Cannot locate spot for thorium drill"
   339 setaddr :error*retaddr *label112 (h:*label112)
   340 call *label13 *invalid :error*retval (m:*label112) (h:*label112)
 
   408 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   409 label *label121
   410 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp228 .thoriumContainer null
-    * jump *label122 equal *tmp228 false
+  411 jump *label122 notEqual .thoriumContainer null
   412 set .thoriumContainer .thoriumDrill
   413 jump *label123 always
   414 label *label122
 
   430 label *label125
   431 label *label126
   432 read *tmp102 .controller ".polys"
-    * op lessThan *tmp232 *tmp102 5
-    * jump *label128 equal *tmp232 false
+  433 jump *label128 greaterThanEq *tmp102 5
   434 setaddr :supplyBase*retaddr *label129 (h:*label129)
   435 call *label33 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   436 label *label129
 
   457 label *label133
   458 label *label134
   459 read *tmp103 .controller ".megas"
-    * op lessThan *tmp234 *tmp103 1
-    * jump *label136 equal *tmp234 false
+  460 jump *label136 greaterThanEq *tmp103 1
   461 setaddr :supplyBase*retaddr *label137 (h:*label137)
   462 call *label33 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   463 label *label137
 
   528 call *label9 *invalid :status1*retval (m:*label155) (h:*label155)
   529 label *label155
   530 sensor *tmp248 .thoriumBattery @totalPower
-    * op lessThan *tmp249 *tmp248 2000
-    * jump *label156 equal *tmp249 false
+  531 jump *label156 greaterThanEq *tmp248 2000
   532 sensor *tmp251 .core @coal
-    * op lessThan *tmp252 *tmp251 50
-    * jump *label158 equal *tmp252 false
+  533 jump *label158 greaterThanEq *tmp251 50
   534 set :supplyBlock:block .thoriumGenerator
   535 set :supplyBlock:ore @coal
   536 setaddr :supplyBlock*retaddr *label160 (h:*label160)
 
   556 jump *label153 always
   557 label *label152
   558 read *tmp101 .controller ".monos"
-    * op greaterThan *tmp254 *tmp101 3
-    * jump *label163 equal *tmp254 false
+  559 jump *label163 lessThanEq *tmp101 3
   560 set :status1:text "Phase 1: supplying base"
   561 setaddr :status1*retaddr *label166 (h:*label166)
   562 call *label9 *invalid :status1*retval (m:*label166) (h:*label166)
 
   569 jump *label164 always
   570 label *label163
   571 set :supplyBase0:supplied false
-    * op equal *tmp256 .unloader1 null
-    * jump *label169 equal *tmp256 false
+  572 jump *label169 notEqual .unloader1 null
   573 sensor *tmp258 .core @graphite
-    * op lessThan *tmp259 *tmp258 .targetGraphite
-    * jump *label171 equal *tmp259 false
+  574 jump *label171 greaterThanEq *tmp258 .targetGraphite
   575 sensor *tmp261 .press @coal
-    * op lessThan *tmp262 *tmp261 5
-    * jump *label173 equal *tmp262 false
+  576 jump *label173 greaterThanEq *tmp261 5
   577 set :status1:text "Goal 1: graphite requirement"
   578 setaddr :status1*retaddr *label175 (h:*label175)
   579 call *label9 *invalid :status1*retval (m:*label175) (h:*label175)
 
   591 label *label171
   592 label *label172
   593 sensor *tmp264 .core @silicon
-    * op lessThan *tmp265 *tmp264 .targetSilicon
-    * jump *label177 equal *tmp265 false
+  594 jump *label177 greaterThanEq *tmp264 .targetSilicon
   595 sensor *tmp267 .smelter @coal
-    * op lessThan *tmp268 *tmp267 5
-    * jump *label179 equal *tmp268 false
+  596 jump *label179 greaterThanEq *tmp267 5
   597 set :status1:text "Goal 2: coal for silicon requirement"
   598 setaddr :status1*retaddr *label181 (h:*label181)
   599 call *label9 *invalid :status1*retval (m:*label181) (h:*label181)
 
   607 jump *label180 always
   608 label *label179
   609 sensor *tmp270 .smelter @sand
-    * op lessThan *tmp271 *tmp270 5
-    * jump *label183 equal *tmp271 false
+  610 jump *label183 greaterThanEq *tmp270 5
   611 set :status1:text "Goal 3: sand for silicon requirement"
   612 setaddr :status1*retaddr *label185 (h:*label185)
   613 call *label9 *invalid :status1*retval (m:*label185) (h:*label185)
 
   626 label *label177
   627 label *label178
   628 sensor *tmp273 .battery @totalPower
-    * op lessThan *tmp274 *tmp273 .powerTarget
-    * jump *label187 equal *tmp274 false
+  629 jump *label187 greaterThanEq *tmp273 .powerTarget
   630 sensor *tmp276 .generator @coal
-    * op lessThan *tmp277 *tmp276 2
-    * jump *label189 equal *tmp277 false
+  631 jump *label189 greaterThanEq *tmp276 2
   632 set :status1:text "Goal 4: supplying generator"
   633 setaddr :status1*retaddr *label191 (h:*label191)
   634 call *label9 *invalid :status1*retval (m:*label191) (h:*label191)
 
   649 label *label169
   650 label *label170
   651 sensor *tmp279 .core @titanium
-    * op lessThan *tmp280 *tmp279 .targetTitanium
-    * jump *label193 equal *tmp280 false
+  652 jump *label193 greaterThanEq *tmp279 .targetTitanium
   653 sensor *tmp282 .core @titanium
   654 op sub *tmp283 .targetTitanium *tmp282
   655 op min *tmp281 7 *tmp283
 
   659 label *label194
   660 set :supplyBase0:titaniumTrigger *tmp281
   661 sensor *tmp285 .titaniumDrill @titanium
-    * op lessThan *tmp286 *tmp285 :supplyBase0:titaniumTrigger
-    * jump *label195 equal *tmp286 false
-    * op equal *tmp288 :supplyBase0:supplied false
-    * jump *label197 equal *tmp288 false
+  662 jump *label195 greaterThanEq *tmp285 :supplyBase0:titaniumTrigger
+  663 jump *label197 notEqual :supplyBase0:supplied false
   664 sensor *tmp290 .battery @totalPower
   665 op mul *tmp291 .unloader1 .powerTarget
-    * op lessThan *tmp292 *tmp290 *tmp291
-    * jump *label199 equal *tmp292 false
+  666 jump *label199 greaterThanEq *tmp290 *tmp291
   667 set :status1:text "Goal 5: supplying generator"
   668 setaddr :status1*retaddr *label201 (h:*label201)
   669 call *label9 *invalid :status1*retval (m:*label201) (h:*label201)
 
   675 jump *label200 always
   676 label *label199
   677 sensor *tmp294 .core @silicon
-    * op lessThan *tmp295 *tmp294 .targetSilicon
-    * jump *label203 equal *tmp295 false
+  678 jump *label203 greaterThanEq *tmp294 .targetSilicon
   679 set :status1:text "Goal 6: silicon requirement"
   680 setaddr :status1*retaddr *label205 (h:*label205)
   681 call *label9 *invalid :status1*retval (m:*label205) (h:*label205)
   682 label *label205
   683 sensor :supplyBase0:coal .core @coal
   684 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp299 :supplyBase0:coal :supplyBase0:sand
-    * jump *label206 equal *tmp299 false
+  685 jump *label206 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   686 set *tmp300 @coal
   687 jump *label207 always
   688 label *label206
 
   696 jump *label204 always
   697 label *label203
   698 sensor *tmp301 .core @copper
-    * op lessThan *tmp302 *tmp301 .targetCopper
-    * jump *label209 equal *tmp302 false
+  699 jump *label209 greaterThanEq *tmp301 .targetCopper
   700 set :status1:text "Goal 7: copper requirement"
   701 setaddr :status1*retaddr *label211 (h:*label211)
   702 call *label9 *invalid :status1*retval (m:*label211) (h:*label211)
 
   708 jump *label210 always
   709 label *label209
   710 sensor *tmp304 .core @lead
-    * op lessThan *tmp305 *tmp304 .targetLead
-    * jump *label213 equal *tmp305 false
+  711 jump *label213 greaterThanEq *tmp304 .targetLead
   712 set :status1:text "Goal 8: lead requirement"
   713 setaddr :status1*retaddr *label215 (h:*label215)
   714 call *label9 *invalid :status1*retval (m:*label215) (h:*label215)
 
   720 jump *label214 always
   721 label *label213
   722 sensor *tmp307 .core @metaglass
-    * op lessThan *tmp308 *tmp307 .targetMetaglass
-    * jump *label217 equal *tmp308 false
+  723 jump *label217 greaterThanEq *tmp307 .targetMetaglass
   724 set :status1:text "Goal 9: metaglass requirement"
   725 setaddr :status1*retaddr *label219 (h:*label219)
   726 call *label9 *invalid :status1*retval (m:*label219) (h:*label219)
 
   737 label *label221
   738 sensor :supplyBase0:coal.1 .core @coal
   739 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp312 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label222 equal *tmp312 false
+  740 jump *label222 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   741 set *tmp313 @coal
   742 jump *label223 always
   743 label *label222
 
   776 end
   777 label *label36
   778 op add *tmp314 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp315 *tmp314 0
-    * jump *label228 equal *tmp315 false
+  779 jump *label228 lessThanEq *tmp314 0
   780 set :unpackCfg:cfg :buildRemoteBlock:cfg
   781 setaddr :unpackCfg*retaddr *label230 (h:*label230)
   782 call *label27 *invalid :unpackCfg*retval (m:*label230) (h:*label230)
 
   921 ubind :flagUnits:unit
   922 set :flagUnits:firstUnit @unit
   923 label *label244
-    * op equal *tmp321 :flagUnits:firstUnit null
-    * jump *label243 notEqual *tmp321 false
+  924 jump *label243 equal :flagUnits:firstUnit null
   925 label *label245
   926 set :flagUnits:x @thisx
   927 label *label246
 
   929 op add :flagUnits:x :flagUnits:x 4
   930 ubind :flagUnits:unit
   931 label *label247
-    * op notEqual *tmp322 @unit :flagUnits:firstUnit
-    * jump *label246 notEqual *tmp322 false
+  932 jump *label246 notEqual @unit :flagUnits:firstUnit
   933 label *label248
   934 label *label242
   935 return :flagUnits*retaddr
 
   949 label *label254
   950 ubind :lineUpUnits:unit
   951 label *label251
-    * op notEqual *tmp326 @unit :lineUpUnits:firstUnit
-    * jump *label250 notEqual *tmp326 false
+  952 jump *label250 notEqual @unit :lineUpUnits:firstUnit
   953 label *label252
   954 label *label249
   955 return :lineUpUnits*retaddr
 
  1034 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1035 sensor *tmp342 :supplyBlock:block :supplyBlock:ore
  1036 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
-    * op greaterThan *tmp344 :supplyBlock:missing 0
-    * jump *label272 equal *tmp344 false
+ 1037 jump *label272 lessThanEq :supplyBlock:missing 0
  1038 set :mineOre:ore :supplyBlock:ore
  1039 set :mineOre:amount :supplyBlock:blockCapacity
  1040 set :mineOre:block :supplyBlock:block
 
  1201 write .targetCopper processor8 ".copperTarget"
  1202 label *label298
  1203 sensor *tmp398 .core @copper
-    * op lessThan *tmp399 *tmp398 .targetCopper
-    * jump *label302 equal *tmp399 false
+ 1204 jump *label302 greaterThanEq *tmp398 .targetCopper
  1205 set *tmp397 false
  1206 jump *label301 always
  1207 jump *label303 always
  1208 label *label302
  1209 label *label303
  1210 sensor *tmp401 .core @lead
-    * op lessThan *tmp402 *tmp401 .targetLead
-    * jump *label304 equal *tmp402 false
+ 1211 jump *label304 greaterThanEq *tmp401 .targetLead
  1212 set *tmp397 false
  1213 jump *label301 always
  1214 jump *label305 always
  1215 label *label304
  1216 label *label305
  1217 sensor *tmp404 .core @graphite
-    * op lessThan *tmp405 *tmp404 .targetGraphite
-    * jump *label306 equal *tmp405 false
+ 1218 jump *label306 greaterThanEq *tmp404 .targetGraphite
  1219 set *tmp397 false
  1220 jump *label301 always
  1221 jump *label307 always
  1222 label *label306
  1223 label *label307
  1224 sensor *tmp407 .core @silicon
-    * op lessThan *tmp408 *tmp407 .targetSilicon
-    * jump *label308 equal *tmp408 false
+ 1225 jump *label308 greaterThanEq *tmp407 .targetSilicon
  1226 set *tmp397 false
  1227 jump *label301 always
  1228 jump *label309 always
  1229 label *label308
  1230 label *label309
  1231 sensor *tmp410 .core @titanium
-    * op lessThan *tmp411 *tmp410 .targetTitanium
-    * jump *label310 equal *tmp411 false
+ 1232 jump *label310 greaterThanEq *tmp410 .targetTitanium
  1233 set *tmp397 false
  1234 jump *label301 always
  1235 jump *label311 always
  1236 label *label310
  1237 label *label311
  1238 sensor *tmp413 .core @metaglass
-    * op lessThan *tmp414 *tmp413 .targetMetaglass
-    * jump *label312 equal *tmp414 false
+ 1239 jump *label312 greaterThanEq *tmp413 .targetMetaglass
  1240 set *tmp397 false
  1241 jump *label301 always
  1242 jump *label313 always
  1243 label *label312
  1244 label *label313
  1245 sensor *tmp416 .core @thorium
-    * op lessThan *tmp417 *tmp416 .targetThorium
-    * jump *label314 equal *tmp417 false
+ 1246 jump *label314 greaterThanEq *tmp416 .targetThorium
  1247 set *tmp397 false
  1248 jump *label301 always
  1249 jump *label315 always
 
  1253 jump *label301 always
  1254 set *tmp397 null
  1255 label *label301
-    * op equal *tmp419 *tmp397 false
-    * jump *label300 equal *tmp419 false
+ 1256 jump *label300 notEqual *tmp397 false
  1257 setaddr :supplyBase*retaddr *label316 (h:*label316)
  1258 call *label33 *invalid :supplyBase*retval (m:*label316) (h:*label316)
  1259 label *label316
 
  1313 label *label323
  1314 label *label324
  1315 sensor *tmp428 @unit @firstItem
-    * op notEqual *tmp429 *tmp428 null
-    * jump *label327 equal *tmp429 false
+ 1316 jump *label327 equal *tmp428 null
  1317 ucontrol itemDrop @air 1000
  1318 jump *label328 always
  1319 label *label327
 
  1321 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1322 label *label325
  1323 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
-    * op equal *tmp432 *tmp431 false
-    * jump *label324 notEqual *tmp432 false
+ 1324 jump *label324 equal *tmp431 false
  1325 label *label326
  1326 label *label322
  1327 return :moveToEmpty*retaddr
 
  1329 label *label17
  1330 label *label330
  1331 sensor *tmp433 @unit @firstItem
-    * op notEqual *tmp434 *tmp433 null
-    * jump *label332 equal *tmp434 false
+ 1332 jump *label332 equal *tmp433 null
  1333 ucontrol itemDrop @air 1000
  1334 label *label331
  1335 jump *label330 always
 
  1343 call *label11 *invalid :status3*retval (m:*label334) (h:*label334)
  1344 label *label334
  1345 sensor *tmp435 @unit @firstItem
-    * op equal *tmp436 *tmp435 :depositItems:item
-    * jump *label335 equal *tmp436 false
+ 1346 jump *label335 notEqual *tmp435 :depositItems:item
  1347 set :moveToBlock:block :depositItems:block
  1348 set :moveToBlock:radius 6
  1349 setaddr :moveToBlock*retaddr *label337 (h:*label337)
 
  1356 sensor *tmp439 @unit @firstItem
  1357 op mul *tmp440 *tmp439 :depositItems:cap
  1358 sensor *tmp441 :depositItems:block :depositItems:item
-    * op greaterThan *tmp442 *tmp440 *tmp441
-    * jump *label338 notEqual *tmp442 false
+ 1359 jump *label338 greaterThan *tmp440 *tmp441
  1360 label *label340
  1361 jump *label336 always
  1362 label *label335
  1363 label *label341
  1364 sensor *tmp443 @unit @firstItem
-    * op notEqual *tmp444 *tmp443 null
-    * jump *label343 equal *tmp444 false
+ 1365 jump *label343 equal *tmp443 null
  1366 ucontrol itemDrop @air 1000
  1367 label *label342
  1368 jump *label341 always
 
  1395 call *label16 *invalid :moveToEmpty*retval (m:*label348) (h:*label348)
  1396 label *label348
  1397 sensor *tmp446 @unit @firstItem
-    * op notEqual *tmp447 *tmp446 :mineOre:ore
-    * jump *label349 equal *tmp447 false
+ 1398 jump *label349 equal *tmp446 :mineOre:ore
  1399 setaddr :dropAll*retaddr *label351 (h:*label351)
  1400 call *label17 *invalid :dropAll*retval (m:*label351) (h:*label351)
  1401 label *label351
 
  1418 label *label356
  1419 label *label357
  1420 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp455 @second :mineOre:stop
-    * jump *label358 equal *tmp455 false
+ 1421 jump *label358 lessThanEq @second :mineOre:stop
  1422 jump *label355 always
  1423 jump *label359 always
  1424 label *label358
  1425 label *label359
  1426 label *label354
  1427 sensor *tmp457 @unit @totalItems
-    * op lessThan *tmp458 *tmp457 :mineOre:amount
-    * jump *label353 notEqual *tmp458 false
+ 1428 jump *label353 lessThan *tmp457 :mineOre:amount
  1429 label *label355
  1430 ucontrol unbind
  1431 set :depositItems:block :mineOre:block
 
  1455 end
  1456 label *label20
  1457 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
-    * op equal *tmp463 *tmp461 false
-    * jump *label365 equal *tmp463 false
+ 1458 jump *label365 notEqual *tmp461 false
  1459 set :error:error "Cannot locate ore"
  1460 setaddr :error*retaddr *label367 (h:*label367)
  1461 call *label13 *invalid :error*retval (m:*label367) (h:*label367)
 
  1473 label *label369
  1474 label *label370
  1475 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp465
-    * op equal *tmp466 *tmp465 false
-    * jump *label372 equal *tmp466 false
+ 1476 jump *label372 notEqual *tmp465 false
  1477 op sub *tmp467 :moveTo:radius 0.5
  1478 ucontrol approach :moveTo:x :moveTo:y *tmp467
  1479 label *label371

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    84 setaddr :error*retaddr *label58 (h:*label58)
    85 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    86 label *label58
-    * jump *label57 always
    87 label *label56
    88 label *label57
    89 write @pneumatic-drill .display ".nextBlock"
 
   169 sensor *tmp168 .battery @totalPower
   170 jump *label74 greaterThanEq *tmp168 300
   171 jump *label72 always
-    * jump *label75 always
   172 label *label74
   173 label *label75
   174 label *label71
 
   337 setaddr :error*retaddr *label112 (h:*label112)
   338 call *label13 *invalid :error*retval (m:*label112) (h:*label112)
   339 label *label112
-    * jump *label111 always
   340 label *label110
   341 label *label111
   342 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   407 set .thoriumContainer :buildRemoteBlock*retval
   408 jump *label122 notEqual .thoriumContainer null
   409 set .thoriumContainer .thoriumDrill
-    * jump *label123 always
   410 label *label122
   411 label *label123
   412 write .thoriumDrill .display ".thoriumDrill"
 
   540 call *label25 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   541 label *label161
   542 label *label159
-    * jump *label157 always
   543 label *label156
   544 label *label157
   545 set :fetchBlock:block .thoriumContainer
 
   579 call *label24 *invalid :supplyBlock*retval (m:*label176) (h:*label176)
   580 label *label176
   581 set :supplyBase0:supplied true
-    * jump *label174 always
   582 label *label173
   583 label *label174
-    * jump *label172 always
   584 label *label171
   585 label *label172
   586 sensor *tmp264 .core @silicon
 
   611 call *label24 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   612 label *label186
   613 set :supplyBase0:supplied true
-    * jump *label184 always
   614 label *label183
   615 label *label184
   616 label *label180
-    * jump *label178 always
   617 label *label177
   618 label *label178
   619 sensor *tmp273 .battery @totalPower
 
   630 call *label24 *invalid :supplyBlock*retval (m:*label192) (h:*label192)
   631 label *label192
   632 set :supplyBase0:supplied true
-    * jump *label190 always
   633 label *label189
   634 label *label190
-    * jump *label188 always
   635 label *label187
   636 label *label188
-    * jump *label170 always
   637 label *label169
   638 label *label170
   639 sensor *tmp279 .core @titanium
 
   741 label *label210
   742 label *label204
   743 label *label200
-    * jump *label198 always
   744 label *label197
   745 label *label198
   746 jump *label196 always
 
   796 label *label231
   797 set :buildRemoteBlock*retval :buildBlock*retval
   798 jump *label227 always
-    * jump *label229 always
   799 label *label228
   800 label *label229
   801 set :buildRemoteBlock*retval false
 
   930 sensor *tmp324 @unit @mining
   931 jump *label253 equal *tmp324 false
   932 ucontrol stop
-    * jump *label254 always
   933 label *label253
   934 label *label254
   935 ubind :lineUpUnits:unit
 
   991 op land *tmp335 *tmp333 *tmp334
   992 jump *label267 equal *tmp335 false
   993 ucontrol itemDrop @air 1000
-    * jump *label268 always
   994 label *label267
   995 label *label268
   996 label *label265
 
  1025 setaddr :mineOre*retaddr *label274 (h:*label274)
  1026 call *label21 *invalid :mineOre*retval (m:*label274) (h:*label274)
  1027 label *label274
-    * jump *label273 always
  1028 label *label272
  1029 label *label273
  1030 label *label270
 
  1059 op land *tmp351 *tmp349 *tmp350
  1060 jump *label283 equal *tmp351 false
  1061 ucontrol itemDrop @air 1000
-    * jump *label284 always
  1062 label *label283
  1063 label *label284
  1064 label *label281
 
  1186 jump *label302 greaterThanEq *tmp398 .targetCopper
  1187 set *tmp397 false
  1188 jump *label301 always
-    * jump *label303 always
  1189 label *label302
  1190 label *label303
  1191 sensor *tmp401 .core @lead
  1192 jump *label304 greaterThanEq *tmp401 .targetLead
  1193 set *tmp397 false
  1194 jump *label301 always
-    * jump *label305 always
  1195 label *label304
  1196 label *label305
  1197 sensor *tmp404 .core @graphite
  1198 jump *label306 greaterThanEq *tmp404 .targetGraphite
  1199 set *tmp397 false
  1200 jump *label301 always
-    * jump *label307 always
  1201 label *label306
  1202 label *label307
  1203 sensor *tmp407 .core @silicon
  1204 jump *label308 greaterThanEq *tmp407 .targetSilicon
  1205 set *tmp397 false
  1206 jump *label301 always
-    * jump *label309 always
  1207 label *label308
  1208 label *label309
  1209 sensor *tmp410 .core @titanium
  1210 jump *label310 greaterThanEq *tmp410 .targetTitanium
  1211 set *tmp397 false
  1212 jump *label301 always
-    * jump *label311 always
  1213 label *label310
  1214 label *label311
  1215 sensor *tmp413 .core @metaglass
  1216 jump *label312 greaterThanEq *tmp413 .targetMetaglass
  1217 set *tmp397 false
  1218 jump *label301 always
-    * jump *label313 always
  1219 label *label312
  1220 label *label313
  1221 sensor *tmp416 .core @thorium
  1222 jump *label314 greaterThanEq *tmp416 .targetThorium
  1223 set *tmp397 false
  1224 jump *label301 always
-    * jump *label315 always
  1225 label *label314
  1226 label *label315
  1227 set *tmp397 true
 
  1290 sensor *tmp428 @unit @firstItem
  1291 jump *label327 equal *tmp428 null
  1292 ucontrol itemDrop @air 1000
-    * jump *label328 always
  1293 label *label327
  1294 label *label328
  1295 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1373 setaddr :dropAll*retaddr *label351 (h:*label351)
  1374 call *label17 *invalid :dropAll*retval (m:*label351) (h:*label351)
  1375 label *label351
-    * jump *label350 always
  1376 label *label349
  1377 label *label350
  1378 set :status3:text "Mining..."
 
  1387 op land *tmp453 *tmp451 *tmp452
  1388 jump *label356 equal *tmp453 false
  1389 jump *label355 always
-    * jump *label357 always
  1390 label *label356
  1391 label *label357
  1392 ucontrol mine :mineOre:x :mineOre:y
  1393 jump *label358 lessThanEq @second :mineOre:stop
  1394 jump *label355 always
-    * jump *label359 always
  1395 label *label358
  1396 label *label359
  1397 label *label354
 
  1431 setaddr :error*retaddr *label367 (h:*label367)
  1432 call *label13 *invalid :error*retval (m:*label367) (h:*label367)
  1433 label *label367
-    * jump *label366 always
  1434 label *label365
  1435 label *label366
  1436 label *label364

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    11 set .smelter null
    12 set .titaniumDrill null
    13 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
    14 set .thoriumBattery null
    15 set .thoriumContainer null
    16 set .thoriumGenerator null
 
    56 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    57 label *label52
    58 set :buildFirstTitaniumDrill:cfg "2228"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   59 set :meetTarget.1:cfg "2228"
    60 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    61 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
    62 label *label54
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   63 write @titanium processor1 ".nextBlock"
+   64 write .coreX processor4 ":findDrillLocation:x"
+   65 write .coreY processor4 ":findDrillLocation:y"
+   66 write @unit processor4 ":findDrillLocation:unit"
+   67 write @titanium processor4 ":findDrillLocation:item"
+   68 write @ore-titanium processor4 ":findDrillLocation:ore"
+   69 write 2 processor4 ":findDrillLocation:size"
+   70 write 4 processor4 ":findDrillLocation:limit"
+   71 write false processor4 ":findDrillLocation*finished"
+   72 write 1 processor4 "@counter"
    73 label *label55
    74 wait 1e-15
-    * read *tmp153 .oreLocator ":findDrillLocation*finished"
+   75 read *tmp153 processor4 ":findDrillLocation*finished"
    76 jump *label55 equal *tmp153 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   77 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   78 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   79 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    80 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    81 set :error:error "Cannot locate spot for titanium drill"
    82 setaddr :error*retaddr *label58 (h:*label58)
 
    84 label *label58
    85 label *label56
    86 label *label57
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   87 write @pneumatic-drill processor1 ".nextBlock"
+   88 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   89 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   90 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   91 write 2 processor5 "@counter"
    92 label *label59
    93 wait 1e-15
-    * read *tmp159 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   94 read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
    95 jump *label59 equal *tmp159 false
-    * read *tmp142 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   96 read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
    97 jump *label53 always
-    * set *tmp142 null
    98 label *label53
    99 set .titaniumDrill *tmp142
-    * write .titaniumDrill .display ".titaniumDrill"
+  100 write *tmp142 processor1 ".titaniumDrill"
   101 set :buildBlockFromCfg.1:cfg "2629"
   102 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   103 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   118 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   119 label *label63
   120 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .unloader1 .controller ".unloader1"
+  121 write processor6 :buildBlockFromCfg*retval ".timer"
+  122 write processor1 :buildBlockFromCfg*retval ".display"
+  123 write .core :buildBlockFromCfg*retval ".core"
+  124 write bank1 :buildBlockFromCfg*retval ".bank"
+  125 write .battery :buildBlockFromCfg*retval ".battery"
+  126 write .generator :buildBlockFromCfg*retval ".generator"
+  127 write .smelter :buildBlockFromCfg*retval ".smelter"
+  128 write .press :buildBlockFromCfg*retval ".press"
+  129 write .unloader1 :buildBlockFromCfg*retval ".unloader1"
   130 set :buildBlockFromCfg.1:cfg "v.22="
   131 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   132 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
   141 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   142 label *label66
   143 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  144 write :buildBlockFromCfg.1*retval .controller ".factory"
+  145 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   146 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  147 write 1 .controller ".flareTarget"
+  148 write 1 processor1 ".flareTarget"
   149 label *label67
   150 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  151 write 3 .controller ".monoTarget"
+  152 write 3 processor1 ".monoTarget"
   153 label *label68
   154 write 85 .controller ".pressTarget"
   155 write 150 .controller ".smelterTarget"
   156 write 30 .controller ".kilnTarget"
   157 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  158 set .siliconSurplus 20
   159 setaddr :buildUnits*retaddr *label69 (h:*label69)
   160 call *label40 *invalid :buildUnits*retval (m:*label69) (h:*label69)
   161 label *label69
 
   186 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   187 label *label78
   188 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  189 write :buildBlockFromCfg.1*retval .controller ".kiln"
   190 set :buildBlockFromCfg.1:cfg ");2C"
   191 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   192 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
 
   222 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   223 label *label85
   224 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  225 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  226 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   227 set :buildBlockFromCfg.1:cfg "{<62J"
   228 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   229 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
 
   234 set .siliconSurplus 1000
   235 set .metaglassSurplus 200
   236 set :setPolyTarget:target 6
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  237 write 6 .controller ".polyTarget"
+  238 write 6 processor1 ".polyTarget"
   239 label *label88
   240 set :buildBlockFromCfg.1:cfg "4;12N"
   241 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
 
   268 jump *label94 always
   269 label *label96
   270 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  271 write 3 .controller ".flareTarget"
+  272 write 3 processor1 ".flareTarget"
   273 label *label98
   274 label *label99
   275 read *tmp100 .controller ".flares"
 
   282 label *label101
   283 set .graphiteSurplus 100
   284 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  285 write 5 .controller ".monoTarget"
+  286 write 5 processor1 ".monoTarget"
   287 label *label103
-    * write @ore-titanium .display ".nextBlock"
+  288 write @ore-titanium processor1 ".nextBlock"
   289 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  290 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  291 write .coreX processor4 ":findDrillLocation:x"
+  292 write .coreY processor4 ":findDrillLocation:y"
+  293 write @unit processor4 ":findDrillLocation:unit"
+  294 write @titanium processor4 ":findDrillLocation:item"
+  295 write @ore-titanium processor4 ":findDrillLocation:ore"
+  296 write 4 processor4 ":findDrillLocation:size"
+  297 write 1000000000 processor4 ":findDrillLocation:limit"
+  298 write false processor4 ":findDrillLocation*finished"
+  299 write 1 processor4 "@counter"
   300 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  301 write .controller processor5 ":buildTitaniumDrills:aController"
+  302 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  303 write false processor5 ":buildTitaniumDrills*finished"
+  304 write 3 processor5 "@counter"
   305 label *label105
   306 wait 1e-15
-    * read *tmp201 .blockBuilder ":buildTitaniumDrills*finished"
+  307 read *tmp201 processor5 ":buildTitaniumDrills*finished"
   308 jump *label105 equal *tmp201 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  309 write false processor4 ":stopLocation*finished"
+  310 write 3 processor4 "@counter"
   311 label *label104
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  312 write null processor1 ".nextBlock"
+  313 write .coreX processor4 ":layoutThoriumDrill:x"
+  314 write .coreY processor4 ":layoutThoriumDrill:y"
+  315 write @unit processor4 ":layoutThoriumDrill:unit"
+  316 write 7 processor4 ":layoutThoriumDrill:limit"
+  317 write false processor4 ":layoutThoriumDrill*finished"
+  318 write 2 processor4 "@counter"
   319 label *label107
   320 wait 1e-15
-    * read *tmp206 .oreLocator ":layoutThoriumDrill*finished"
+  321 read *tmp206 processor4 ":layoutThoriumDrill*finished"
   322 jump *label107 equal *tmp206 false
   323 set :meetTarget.1:cfg "222K"
   324 setaddr :meetTarget.1*retaddr *label108 (h:*label108)
 
   326 label *label108
   327 label *label109
   328 wait 1e-15
-    * read *tmp208 .oreLocator ":layoutThoriumDrill*finished"
+  329 read *tmp208 processor4 ":layoutThoriumDrill*finished"
   330 jump *label109 equal *tmp208 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  331 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   332 jump *label110 notEqual :buildThoriumDrill:result false
   333 set :error:error "Cannot locate spot for thorium drill"
   334 setaddr :error*retaddr *label112 (h:*label112)
 
   336 label *label112
   337 label *label110
   338 label *label111
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp56 .oreLocator ".drillX"
-    * write *tmp56 .blockBuilder ":buildBlockAt:x"
-    * read *tmp57 .oreLocator ".drillY"
-    * write *tmp57 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write -1 .blockBuilder ":buildBlockAt:index"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  339 write @laser-drill processor5 ":buildBlockAt:block"
+  340 read *tmp56 processor4 ".drillX"
+  341 write *tmp56 processor5 ":buildBlockAt:x"
+  342 read *tmp57 processor4 ".drillY"
+  343 write *tmp57 processor5 ":buildBlockAt:y"
+  344 write null processor5 ":buildBlockAt:rotation"
+  345 write 0 processor5 ":buildBlockAt:config"
+  346 write -1 processor5 ":buildBlockAt:index"
+  347 write false processor5 ":buildBlockAt*finished"
+  348 write 1 processor5 "@counter"
   349 label *label113
   350 wait 1e-15
-    * read *tmp218 .blockBuilder ":buildBlockAt*finished"
+  351 read *tmp218 processor5 ":buildBlockAt*finished"
   352 jump *label113 equal *tmp218 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  353 read .thoriumDrill processor5 ":buildBlockAt*retval"
   354 set :buildRemoteBlock:cfg ");2C"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  355 read :buildRemoteBlock:x processor4 ".water1X"
+  356 read :buildRemoteBlock:y processor4 ".water1Y"
   357 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   358 call *label36 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   359 label *label114
   360 set :buildRemoteBlock:cfg ");2C"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  361 read :buildRemoteBlock:x processor4 ".water2X"
+  362 read :buildRemoteBlock:y processor4 ".water2Y"
   363 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   364 call *label36 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   365 label *label115
   366 set :buildRemoteBlock:cfg "~)72E"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  367 read :buildRemoteBlock:x processor4 ".generatorX"
+  368 read :buildRemoteBlock:y processor4 ".generatorY"
   369 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   370 call *label36 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   371 label *label116
   372 set .thoriumGenerator :buildRemoteBlock*retval
   373 set :buildRemoteBlock:cfg "v.22="
-    * read :buildRemoteBlock:x .oreLocator ".node1X"
-    * read :buildRemoteBlock:y .oreLocator ".node1Y"
+  374 read :buildRemoteBlock:x processor4 ".node1X"
+  375 read :buildRemoteBlock:y processor4 ".node1Y"
   376 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   377 call *label36 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   378 label *label117
-    * set :buildRemoteBlock:cfg "v.22="
-    * read :buildRemoteBlock:x .oreLocator ".node2X"
-    * read :buildRemoteBlock:y .oreLocator ".node2Y"
+  379 read :buildRemoteBlock:x processor4 ".node2X"
+  380 read :buildRemoteBlock:y processor4 ".node2Y"
   381 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   382 call *label36 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   383 label *label118
   384 set :buildRemoteBlock:cfg "222L"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  385 read :buildRemoteBlock:x processor4 ".panelX"
+  386 read :buildRemoteBlock:y processor4 ".panelY"
   387 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   388 call *label36 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   389 label *label119
   390 set :buildRemoteBlock:cfg "z2<23"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  391 read :buildRemoteBlock:x processor4 ".batteryX"
+  392 read :buildRemoteBlock:y processor4 ".batteryY"
   393 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   394 call *label36 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   395 label *label120
   396 set .thoriumBattery :buildRemoteBlock*retval
   397 set :buildRemoteBlock:cfg "222M"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  398 read :buildRemoteBlock:x processor4 ".containerX"
+  399 read :buildRemoteBlock:y processor4 ".containerY"
   400 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   401 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   402 label *label121
   403 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label122 notEqual .thoriumContainer null
+  404 jump *label122 notEqual :buildRemoteBlock*retval null
   405 set .thoriumContainer .thoriumDrill
   406 label *label122
   407 label *label123
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  408 write .thoriumDrill processor1 ".thoriumDrill"
+  409 write .thoriumContainer processor1 ".thoriumContainer"
+  410 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  411 write false processor3 ":setThoriumContainer*finished"
+  412 write 3 processor3 "@counter"
   413 label *label124
   414 wait 1e-15
-    * read *tmp231 .polyController ":setThoriumContainer*finished"
+  415 read *tmp231 processor3 ":setThoriumContainer*finished"
   416 jump *label124 equal *tmp231 false
   417 label *label106
-    * write null .display ".nextBlock"
+  418 write null processor1 ".nextBlock"
   419 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  420 write 1 .controller ".megaTarget"
+  421 write 1 processor1 ".megaTarget"
   422 label *label125
   423 label *label126
   424 read *tmp102 .controller ".polys"
 
   440 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   441 label *label132
   442 set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
-    * write :buildMultiplicativeReconstructor:multiReconstructor .controller ".multiReconstructor"
-    * write :buildMultiplicativeReconstructor:multiReconstructor .display ".multiReconstructor"
+  443 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  444 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   445 label *label131
   446 set .metaglassSurplus 50
   447 setaddr :buildUnits*retaddr *label133 (h:*label133)
 
   643 label *label194
   644 set :supplyBase0:titaniumTrigger *tmp281
   645 sensor *tmp285 .titaniumDrill @titanium
-    * jump *label195 greaterThanEq *tmp285 :supplyBase0:titaniumTrigger
+  646 jump *label195 greaterThanEq *tmp285 *tmp281
   647 jump *label197 notEqual :supplyBase0:supplied false
   648 sensor *tmp290 .battery @totalPower
   649 op mul *tmp291 .unloader1 .powerTarget
 
   673 set *tmp300 @sand
   674 label *label207
   675 set :supplyBase0:ore *tmp300
-    * set :mineOre.1:ore :supplyBase0:ore
+  676 set :mineOre.1:ore *tmp300
   677 setaddr :mineOre.1*retaddr *label208 (h:*label208)
   678 call *label22 *invalid :mineOre.1*retval (m:*label208) (h:*label208)
   679 label *label208
 
   728 set *tmp313 @sand
   729 label *label223
   730 set :supplyBase0:ore.1 *tmp313
-    * set :mineOre.1:ore :supplyBase0:ore.1
+  731 set :mineOre.1:ore *tmp313
   732 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   733 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   734 label *label224
 
   774 set :buildRemoteBlock:th :unpackCfg:th
   775 set :buildRemoteBlock:rotation :unpackCfg:rotation
   776 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+  777 set :buildBlock:block :unpackCfg:type
   778 set :buildBlock:x :buildRemoteBlock:x
   779 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+  780 set :buildBlock:copper :unpackCfg:cu
+  781 set :buildBlock:lead :unpackCfg:pb
+  782 set :buildBlock:graphite :unpackCfg:gr
+  783 set :buildBlock:silicon :unpackCfg:si
+  784 set :buildBlock:titanium :unpackCfg:ti
+  785 set :buildBlock:metaglass :unpackCfg:mg
+  786 set :buildBlock:thorium :unpackCfg:th
+  787 set :buildBlock:rotation :unpackCfg:rotation
   788 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+  789 set :buildBlock:index :unpackCfg:ind
   790 setaddr :buildBlock*retaddr *label231 (h:*label231)
   791 call *label35 *invalid :buildBlock*retval (m:*label231) (h:*label231)
   792 label *label231
 
   796 label *label229
   797 set :buildRemoteBlock*retval false
   798 jump *label227 always
-    * set :buildRemoteBlock*retval null
   799 label *label227
   800 return :buildRemoteBlock*retaddr
   801 end
 
   816 set :buildBlockFromCfg:th :unpackCfg:th
   817 set :buildBlockFromCfg:rotation :unpackCfg:rotation
   818 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp317 .coreX :buildBlockFromCfg:x
-    * op add *tmp318 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+  819 op add *tmp317 .coreX :unpackCfg:x
+  820 op add *tmp318 .coreY :unpackCfg:y
+  821 set :buildBlock:block :unpackCfg:type
   822 set :buildBlock:x *tmp317
   823 set :buildBlock:y *tmp318
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+  824 set :buildBlock:copper :unpackCfg:cu
+  825 set :buildBlock:lead :unpackCfg:pb
+  826 set :buildBlock:graphite :unpackCfg:gr
+  827 set :buildBlock:silicon :unpackCfg:si
+  828 set :buildBlock:titanium :unpackCfg:ti
+  829 set :buildBlock:metaglass :unpackCfg:mg
+  830 set :buildBlock:thorium :unpackCfg:th
+  831 set :buildBlock:rotation :unpackCfg:rotation
   832 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+  833 set :buildBlock:index :unpackCfg:ind
   834 setaddr :buildBlock*retaddr *label234 (h:*label234)
   835 call *label35 *invalid :buildBlock*retval (m:*label234) (h:*label234)
   836 label *label234
   837 set :buildBlockFromCfg*retval :buildBlock*retval
   838 jump *label232 always
-    * set :buildBlockFromCfg*retval null
   839 label *label232
   840 return :buildBlockFromCfg*retaddr
   841 end
 
   862 set :meetTarget.1:ti :unpackCfg:ti
   863 set :meetTarget.1:mg :unpackCfg:mg
   864 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+  865 set :meetTarget:block :unpackCfg:type
+  866 set :meetTarget:copper :unpackCfg:cu
+  867 set :meetTarget:lead :unpackCfg:pb
+  868 set :meetTarget:graphite :unpackCfg:gr
+  869 set :meetTarget:silicon :unpackCfg:si
+  870 set :meetTarget:titanium :unpackCfg:ti
+  871 set :meetTarget:metaglass :unpackCfg:mg
+  872 set :meetTarget:thorium :unpackCfg:th
   873 setaddr :meetTarget*retaddr *label239 (h:*label239)
   874 call *label34 *invalid :meetTarget*retval (m:*label239) (h:*label239)
   875 label *label239
 
  1072 end
  1073 label *label27
  1074 set :unpackCfg:index 0
-    * set *tmp357 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1075 set *tmp357 0
+ 1076 op add :unpackCfg:index 0 1
  1077 read *tmp358 :unpackCfg:cfg *tmp357
  1078 op sub *tmp359 *tmp358 50
  1079 lookup block :unpackCfg:type *tmp359
-    * set *tmp361 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1080 set *tmp361 1
+ 1081 op add :unpackCfg:index 1 1
  1082 read *tmp362 :unpackCfg:cfg *tmp361
  1083 op sub *tmp363 *tmp362 50
  1084 op div :unpackCfg:x *tmp363 2
-    * set *tmp365 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1085 set *tmp365 2
+ 1086 op add :unpackCfg:index 2 1
  1087 read *tmp366 :unpackCfg:cfg *tmp365
  1088 op sub *tmp367 *tmp366 50
  1089 op div :unpackCfg:y *tmp367 2
-    * set *tmp369 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1090 set *tmp369 3
+ 1091 op add :unpackCfg:index 3 1
  1092 read *tmp370 :unpackCfg:cfg *tmp369
  1093 op sub :unpackCfg:rotation *tmp370 50
-    * set *tmp372 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1094 set *tmp372 4
+ 1095 op add :unpackCfg:index 4 1
  1096 read *tmp373 :unpackCfg:cfg *tmp372
  1097 op sub :unpackCfg:ind *tmp373 50
  1098 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1164 op add *tmp389 :meetTarget:metaglass .metaglassSurplus
  1165 write *tmp389 .controller ".kilnTarget"
  1166 op add *tmp390 :meetTarget:lead .leadSurplus
-    * write *tmp390 .controller ".leadReserve"
+ 1167 write *tmp385 .controller ".leadReserve"
  1168 op sign *tmp391 :meetTarget:silicon
  1169 op mul *tmp392 *tmp391 20
  1170 op add *tmp393 :meetTarget:silicon *tmp392
 
  1174 op add *tmp396 :meetTarget:graphite *tmp395
  1175 write *tmp396 .controller ".graphiteReserve"
  1176 write .targetLead processor8 ".leadTarget"
-    * write .targetCopper processor8 ".copperTarget"
+ 1177 write :meetTarget:copper processor8 ".copperTarget"
  1178 label *label298
  1179 sensor *tmp398 .core @copper
  1180 jump *label302 greaterThanEq *tmp398 .targetCopper
 
  1220 label *label315
  1221 set *tmp397 true
  1222 jump *label301 always
-    * set *tmp397 null
  1223 label *label301
  1224 jump *label300 notEqual *tmp397 false
  1225 setaddr :supplyBase*retaddr *label316 (h:*label316)
 
  1257 jump *label319 equal *tmp426 false
  1258 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1259 jump *label317 always
-    * set :buildBlock*retval null
  1260 label *label317
  1261 return :buildBlock*retaddr
  1262 end
 
  1355 label *label347
  1356 set :mineOre:x :locateOre:x
  1357 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1358 set :moveToEmpty:x :locateOre:x
+ 1359 set :moveToEmpty:y :locateOre:y
  1360 setaddr :moveToEmpty*retaddr *label348 (h:*label348)
  1361 call *label16 *invalid :moveToEmpty*retval (m:*label348) (h:*label348)
  1362 label *label348

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-54 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 label *label43
     4 read *tmp114 processor8 "*signature"
     5 jump *label43 notEqual *tmp114 "0:v1"
 
    53 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    54 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    55 label *label52
-    * set :buildFirstTitaniumDrill:cfg "2228"
    56 set :meetTarget.1:cfg "2228"
    57 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    58 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
 
   137 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
   138 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   139 label *label66
-    * set :factory :buildBlockFromCfg.1*retval
   140 write :buildBlockFromCfg.1*retval .controller ".factory"
   141 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
-    * set :setFlareTarget:target 1
   142 write 1 .controller ".flareTarget"
   143 write 1 processor1 ".flareTarget"
   144 label *label67
-    * set :setMonoTarget:target 3
   145 write 3 .controller ".monoTarget"
   146 write 3 processor1 ".monoTarget"
   147 label *label68
 
   179 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   180 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   181 label *label78
-    * set .kiln :buildBlockFromCfg.1*retval
   182 write :buildBlockFromCfg.1*retval .controller ".kiln"
   183 set :buildBlockFromCfg.1:cfg ");2C"
   184 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
 
   214 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   215 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   216 label *label85
-    * set :reconstructor :buildBlockFromCfg.1*retval
   217 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   218 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   219 set :buildBlockFromCfg.1:cfg "{<62J"
 
   225 label *label87
   226 set .siliconSurplus 1000
   227 set .metaglassSurplus 200
-    * set :setPolyTarget:target 6
   228 write 6 .controller ".polyTarget"
   229 write 6 processor1 ".polyTarget"
   230 label *label88
 
   258 label *label95
   259 jump *label94 always
   260 label *label96
-    * set :setFlareTarget.1:target 3
   261 write 3 .controller ".flareTarget"
   262 write 3 processor1 ".flareTarget"
   263 label *label98
 
   271 jump *label99 always
   272 label *label101
   273 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   274 write 5 .controller ".monoTarget"
   275 write 5 processor1 ".monoTarget"
   276 label *label103
 
   346 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   347 call *label36 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   348 label *label114
-    * set :buildRemoteBlock:cfg ");2C"
   349 read :buildRemoteBlock:x processor4 ".water2X"
   350 read :buildRemoteBlock:y processor4 ".water2Y"
   351 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
 
   404 jump *label124 equal *tmp231 false
   405 label *label106
   406 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   407 write 1 .controller ".megaTarget"
   408 write 1 processor1 ".megaTarget"
   409 label *label125
 
   426 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   427 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   428 label *label132
-    * set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
   429 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   430 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   431 label *label131
 
   627 label *label193
   628 set *tmp281 100
   629 label *label194
-    * set :supplyBase0:titaniumTrigger *tmp281
   630 sensor *tmp285 .titaniumDrill @titanium
   631 jump *label195 greaterThanEq *tmp285 *tmp281
   632 jump *label197 notEqual :supplyBase0:supplied false
 
   657 label *label206
   658 set *tmp300 @sand
   659 label *label207
-    * set :supplyBase0:ore *tmp300
   660 set :mineOre.1:ore *tmp300
   661 setaddr :mineOre.1*retaddr *label208 (h:*label208)
   662 call *label22 *invalid :mineOre.1*retval (m:*label208) (h:*label208)
 
   711 label *label222
   712 set *tmp313 @sand
   713 label *label223
-    * set :supplyBase0:ore.1 *tmp313
   714 set :mineOre.1:ore *tmp313
   715 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   716 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
 
   747 setaddr :unpackCfg*retaddr *label230 (h:*label230)
   748 call *label27 *invalid :unpackCfg*retval (m:*label230) (h:*label230)
   749 label *label230
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   750 set :buildBlock:block :unpackCfg:type
   751 set :buildBlock:x :buildRemoteBlock:x
   752 set :buildBlock:y :buildRemoteBlock:y
 
   777 setaddr :unpackCfg*retaddr *label233 (h:*label233)
   778 call *label27 *invalid :unpackCfg*retval (m:*label233) (h:*label233)
   779 label *label233
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
   780 op add *tmp317 .coreX :unpackCfg:x
   781 op add *tmp318 .coreY :unpackCfg:y
   782 set :buildBlock:block :unpackCfg:type
 
   815 setaddr :unpackCfg*retaddr *label238 (h:*label238)
   816 call *label27 *invalid :unpackCfg*retval (m:*label238) (h:*label238)
   817 label *label238
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
   818 set :meetTarget:block :unpackCfg:type
   819 set :meetTarget:copper :unpackCfg:cu
   820 set :meetTarget:lead :unpackCfg:pb
 
  1024 return :supplyBlockFromCore*retaddr
  1025 end
  1026 label *label27
-    * set :unpackCfg:index 0
  1027 set *tmp357 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp358 :unpackCfg:cfg *tmp357
+ 1028 read *tmp358 :unpackCfg:cfg 0
  1029 op sub *tmp359 *tmp358 50
  1030 lookup block :unpackCfg:type *tmp359
  1031 set *tmp361 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp362 :unpackCfg:cfg *tmp361
+ 1032 read *tmp362 :unpackCfg:cfg 1
  1033 op sub *tmp363 *tmp362 50
  1034 op div :unpackCfg:x *tmp363 2
  1035 set *tmp365 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp366 :unpackCfg:cfg *tmp365
+ 1036 read *tmp366 :unpackCfg:cfg 2
  1037 op sub *tmp367 *tmp366 50
  1038 op div :unpackCfg:y *tmp367 2
  1039 set *tmp369 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp370 :unpackCfg:cfg *tmp369
+ 1040 read *tmp370 :unpackCfg:cfg 3
  1041 op sub :unpackCfg:rotation *tmp370 50
  1042 set *tmp372 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp373 :unpackCfg:cfg *tmp372
+ 1043 read *tmp373 :unpackCfg:cfg 4
  1044 op sub :unpackCfg:ind *tmp373 50
  1045 sensor :unpackCfg:cu :unpackCfg:type @copper
  1046 sensor :unpackCfg:pb :unpackCfg:type @lead
 
  1110 write *tmp388 .controller ".smelterTarget"
  1111 op add *tmp389 :meetTarget:metaglass .metaglassSurplus
  1112 write *tmp389 .controller ".kilnTarget"
-    * op add *tmp390 :meetTarget:lead .leadSurplus
  1113 write *tmp385 .controller ".leadReserve"
  1114 op sign *tmp391 :meetTarget:silicon
  1115 op mul *tmp392 *tmp391 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-5 instructions):
 
  1024 return :supplyBlockFromCore*retaddr
  1025 end
  1026 label *label27
-    * set *tmp357 0
  1027 read *tmp358 :unpackCfg:cfg 0
  1028 op sub *tmp359 *tmp358 50
  1029 lookup block :unpackCfg:type *tmp359
-    * set *tmp361 1
  1030 read *tmp362 :unpackCfg:cfg 1
  1031 op sub *tmp363 *tmp362 50
  1032 op div :unpackCfg:x *tmp363 2
-    * set *tmp365 2
  1033 read *tmp366 :unpackCfg:cfg 2
  1034 op sub *tmp367 *tmp366 50
  1035 op div :unpackCfg:y *tmp367 2
-    * set *tmp369 3
  1036 read *tmp370 :unpackCfg:cfg 3
  1037 op sub :unpackCfg:rotation *tmp370 50
-    * set *tmp372 4
  1038 read *tmp373 :unpackCfg:cfg 4
  1039 op sub :unpackCfg:ind *tmp373 50
  1040 sensor :unpackCfg:cu :unpackCfg:type @copper

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
  1374 setaddr :status3*retaddr *label369 (h:*label369)
  1375 call *label11 *invalid :status3*retval (m:*label369) (h:*label369)
  1376 label *label369
+ 1377 op sub *tmp467 :moveTo:radius 0.5
  1378 label *label370
  1379 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp465
  1380 jump *label372 notEqual *tmp465 false
-    * op sub *tmp467 :moveTo:radius 0.5
  1381 ucontrol approach :moveTo:x :moveTo:y *tmp467
  1382 label *label371
  1383 jump *label370 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   389 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   390 label *label121
   391 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label122 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label122
-    * label *label123
+  392 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   393 write .thoriumDrill processor1 ".thoriumDrill"
   394 write .thoriumContainer processor1 ".thoriumContainer"
   395 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
   648 label *label205
   649 sensor :supplyBase0:coal .core @coal
   650 sensor :supplyBase0:sand .core @sand
-    * jump *label206 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp300 @coal
-    * jump *label207 always
-    * label *label206
-    * set *tmp300 @sand
-    * label *label207
+  651 select *tmp300 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   652 set :mineOre.1:ore *tmp300
   653 setaddr :mineOre.1*retaddr *label208 (h:*label208)
   654 call *label22 *invalid :mineOre.1*retval (m:*label208) (h:*label208)
 
   697 label *label221
   698 sensor :supplyBase0:coal.1 .core @coal
   699 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label222 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp313 @coal
-    * jump *label223 always
-    * label *label222
-    * set *tmp313 @sand
-    * label *label223
+  700 select *tmp313 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   701 set :mineOre.1:ore *tmp313
   702 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   703 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   615 label *label188
   616 label *label169
   617 label *label170
+  618 set *tmp281 100
   619 sensor *tmp279 .core @titanium
-    * jump *label193 greaterThanEq *tmp279 .targetTitanium
+  620 jump *label194 greaterThanEq *tmp279 .targetTitanium
   621 sensor *tmp282 .core @titanium
   622 op sub *tmp283 .targetTitanium *tmp282
   623 op min *tmp281 7 *tmp283
   624 jump *label194 always
-    * label *label193
-    * set *tmp281 100
   625 label *label194
   626 sensor *tmp285 .titaniumDrill @titanium
   627 jump *label195 greaterThanEq *tmp285 *tmp281

Modifications by Unroll iteration loop at CoreBuilder.mnd:182:5 (-2 instructions):
 
  1035 end
  1036 label *label34
  1037 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp383 *label291
-    * jump *label288 always
-    * multilabel *label291 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp383 *label292
-    * jump *label288 always
-    * multilabel *label292 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp383 *label293
-    * jump *label288 always
-    * multilabel *label293 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp383 *label294
-    * jump *label288 always
-    * multilabel *label294 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp383 *label295
-    * jump *label288 always
-    * multilabel *label295 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp383 *label296
-    * jump *label288 always
-    * multilabel *label296 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp383 *label297
-    * label *label288
-    * op sign *tmp384 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label289
-    * multijump *tmp383 0 0 (m:marker0)
-    * multilabel *label297 (m:marker0)
-    * label *label290
+ 1038 set :meetTarget:t :meetTarget:copper
+ 1039 label *label375
+ 1040 op sign *tmp384 :meetTarget:t
+ 1041 op add :meetTarget:count :meetTarget:count *tmp384
+ 1042 label *label376
+ 1043 set :meetTarget:t :meetTarget:lead
+ 1044 label *label379
+ 1045 op sign *tmp384 :meetTarget:t
+ 1046 op add :meetTarget:count :meetTarget:count *tmp384
+ 1047 label *label380
+ 1048 set :meetTarget:t :meetTarget:graphite
+ 1049 label *label383
+ 1050 op sign *tmp384 :meetTarget:t
+ 1051 op add :meetTarget:count :meetTarget:count *tmp384
+ 1052 label *label384
+ 1053 set :meetTarget:t :meetTarget:silicon
+ 1054 label *label387
+ 1055 op sign *tmp384 :meetTarget:t
+ 1056 op add :meetTarget:count :meetTarget:count *tmp384
+ 1057 label *label388
+ 1058 set :meetTarget:t :meetTarget:titanium
+ 1059 label *label391
+ 1060 op sign *tmp384 :meetTarget:t
+ 1061 op add :meetTarget:count :meetTarget:count *tmp384
+ 1062 label *label392
+ 1063 set :meetTarget:t :meetTarget:metaglass
+ 1064 label *label395
+ 1065 op sign *tmp384 :meetTarget:t
+ 1066 op add :meetTarget:count :meetTarget:count *tmp384
+ 1067 label *label396
+ 1068 set :meetTarget:t :meetTarget:thorium
+ 1069 label *label399
+ 1070 op sign *tmp384 :meetTarget:t
+ 1071 op add :meetTarget:count :meetTarget:count *tmp384
+ 1072 label *label400
+ 1073 label *label290
  1074 write :meetTarget:count .display ".totalTargets"
  1075 write :meetTarget:block .display ".nextBlock"
  1076 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   389 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   390 label *label121
   391 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  392 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   393 write .thoriumDrill processor1 ".thoriumDrill"
   394 write .thoriumContainer processor1 ".thoriumContainer"
   395 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
  1037 set :meetTarget:count 0
  1038 set :meetTarget:t :meetTarget:copper
  1039 label *label375
-    * op sign *tmp384 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp384
+ 1040 op sign *tmp384 :meetTarget:copper
+ 1041 op add :meetTarget:count 0 *tmp384
  1042 label *label376
  1043 set :meetTarget:t :meetTarget:lead
  1044 label *label379
-    * op sign *tmp384 :meetTarget:t
+ 1045 op sign *tmp384 :meetTarget:lead
  1046 op add :meetTarget:count :meetTarget:count *tmp384
  1047 label *label380
  1048 set :meetTarget:t :meetTarget:graphite
  1049 label *label383
-    * op sign *tmp384 :meetTarget:t
+ 1050 op sign *tmp384 :meetTarget:graphite
  1051 op add :meetTarget:count :meetTarget:count *tmp384
  1052 label *label384
  1053 set :meetTarget:t :meetTarget:silicon
  1054 label *label387
-    * op sign *tmp384 :meetTarget:t
+ 1055 op sign *tmp384 :meetTarget:silicon
  1056 op add :meetTarget:count :meetTarget:count *tmp384
  1057 label *label388
  1058 set :meetTarget:t :meetTarget:titanium
  1059 label *label391
-    * op sign *tmp384 :meetTarget:t
+ 1060 op sign *tmp384 :meetTarget:titanium
  1061 op add :meetTarget:count :meetTarget:count *tmp384
  1062 label *label392
  1063 set :meetTarget:t :meetTarget:metaglass
  1064 label *label395
-    * op sign *tmp384 :meetTarget:t
+ 1065 op sign *tmp384 :meetTarget:metaglass
  1066 op add :meetTarget:count :meetTarget:count *tmp384
  1067 label *label396
  1068 set :meetTarget:t :meetTarget:thorium
  1069 label *label399
-    * op sign *tmp384 :meetTarget:t
+ 1070 op sign *tmp384 :meetTarget:thorium
  1071 op add :meetTarget:count :meetTarget:count *tmp384
  1072 label *label400
  1073 label *label290

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   388 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   389 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   390 label *label121
-    * set .thoriumContainer :buildRemoteBlock*retval
   391 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   392 write .thoriumDrill processor1 ".thoriumDrill"
   393 write .thoriumContainer processor1 ".thoriumContainer"
 
  1033 return :unpackCfg*retaddr
  1034 end
  1035 label *label34
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1036 label *label375
  1037 op sign *tmp384 :meetTarget:copper
  1038 op add :meetTarget:count 0 *tmp384
  1039 label *label376
-    * set :meetTarget:t :meetTarget:lead
  1040 label *label379
  1041 op sign *tmp384 :meetTarget:lead
  1042 op add :meetTarget:count :meetTarget:count *tmp384
  1043 label *label380
-    * set :meetTarget:t :meetTarget:graphite
  1044 label *label383
  1045 op sign *tmp384 :meetTarget:graphite
  1046 op add :meetTarget:count :meetTarget:count *tmp384
  1047 label *label384
-    * set :meetTarget:t :meetTarget:silicon
  1048 label *label387
  1049 op sign *tmp384 :meetTarget:silicon
  1050 op add :meetTarget:count :meetTarget:count *tmp384
  1051 label *label388
-    * set :meetTarget:t :meetTarget:titanium
  1052 label *label391
  1053 op sign *tmp384 :meetTarget:titanium
  1054 op add :meetTarget:count :meetTarget:count *tmp384
  1055 label *label392
-    * set :meetTarget:t :meetTarget:metaglass
  1056 label *label395
  1057 op sign *tmp384 :meetTarget:metaglass
  1058 op add :meetTarget:count :meetTarget:count *tmp384
  1059 label *label396
-    * set :meetTarget:t :meetTarget:thorium
  1060 label *label399
  1061 op sign *tmp384 :meetTarget:thorium
  1062 op add :meetTarget:count :meetTarget:count *tmp384

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   498 write *tmp246 processor8 ".sandTarget"
   499 jump *label152 equal .thoriumContainer false
   500 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label155 (h:*label155)
-    * call *label9 *invalid :status1*retval (m:*label155) (h:*label155)
-    * label *label155
+  501 label *label404
+  502 write :status1:text .display ".status1"
+  503 label *label405
   504 sensor *tmp248 .thoriumBattery @totalPower
   505 jump *label156 greaterThanEq *tmp248 2000
   506 sensor *tmp251 .core @coal
 
   531 read *tmp101 .controller ".monos"
   532 jump *label163 lessThanEq *tmp101 3
   533 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label166 (h:*label166)
-    * call *label9 *invalid :status1*retval (m:*label166) (h:*label166)
-    * label *label166
+  534 label *label406
+  535 write :status1:text .display ".status1"
+  536 label *label407
   537 set :mineOre.1:ore @coal
   538 setaddr :mineOre.1*retaddr *label167 (h:*label167)
   539 call *label22 *invalid :mineOre.1*retval (m:*label167) (h:*label167)
 
   548 sensor *tmp261 .press @coal
   549 jump *label173 greaterThanEq *tmp261 5
   550 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label175 (h:*label175)
-    * call *label9 *invalid :status1*retval (m:*label175) (h:*label175)
-    * label *label175
+  551 label *label408
+  552 write :status1:text .display ".status1"
+  553 label *label409
   554 set :supplyBlock:block .press
   555 set :supplyBlock:ore @coal
   556 setaddr :supplyBlock*retaddr *label176 (h:*label176)
 
   566 sensor *tmp267 .smelter @coal
   567 jump *label179 greaterThanEq *tmp267 5
   568 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label181 (h:*label181)
-    * call *label9 *invalid :status1*retval (m:*label181) (h:*label181)
-    * label *label181
+  569 label *label410
+  570 write :status1:text .display ".status1"
+  571 label *label411
   572 set :supplyBlock:block .smelter
   573 set :supplyBlock:ore @coal
   574 setaddr :supplyBlock*retaddr *label182 (h:*label182)
 
   580 sensor *tmp270 .smelter @sand
   581 jump *label183 greaterThanEq *tmp270 5
   582 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label185 (h:*label185)
-    * call *label9 *invalid :status1*retval (m:*label185) (h:*label185)
-    * label *label185
+  583 label *label412
+  584 write :status1:text .display ".status1"
+  585 label *label413
   586 set :supplyBlock:block .smelter
   587 set :supplyBlock:ore @sand
   588 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   599 sensor *tmp276 .generator @coal
   600 jump *label189 greaterThanEq *tmp276 2
   601 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label191 (h:*label191)
-    * call *label9 *invalid :status1*retval (m:*label191) (h:*label191)
-    * label *label191
+  602 label *label414
+  603 write :status1:text .display ".status1"
+  604 label *label415
   605 set :supplyBlock:block .generator
   606 set :supplyBlock:ore @coal
   607 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   629 op mul *tmp291 .unloader1 .powerTarget
   630 jump *label199 greaterThanEq *tmp290 *tmp291
   631 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label201 (h:*label201)
-    * call *label9 *invalid :status1*retval (m:*label201) (h:*label201)
-    * label *label201
+  632 label *label416
+  633 write :status1:text .display ".status1"
+  634 label *label417
   635 set :mineOre.1:ore @coal
   636 setaddr :mineOre.1*retaddr *label202 (h:*label202)
   637 call *label22 *invalid :mineOre.1*retval (m:*label202) (h:*label202)
 
   641 sensor *tmp294 .core @silicon
   642 jump *label203 greaterThanEq *tmp294 .targetSilicon
   643 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label205 (h:*label205)
-    * call *label9 *invalid :status1*retval (m:*label205) (h:*label205)
-    * label *label205
+  644 label *label418
+  645 write :status1:text .display ".status1"
+  646 label *label419
   647 sensor :supplyBase0:coal .core @coal
   648 sensor :supplyBase0:sand .core @sand
   649 select *tmp300 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   656 sensor *tmp301 .core @copper
   657 jump *label209 greaterThanEq *tmp301 .targetCopper
   658 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label211 (h:*label211)
-    * call *label9 *invalid :status1*retval (m:*label211) (h:*label211)
-    * label *label211
+  659 label *label420
+  660 write :status1:text .display ".status1"
+  661 label *label421
   662 set :mineOre.1:ore @copper
   663 setaddr :mineOre.1*retaddr *label212 (h:*label212)
   664 call *label22 *invalid :mineOre.1*retval (m:*label212) (h:*label212)
 
   668 sensor *tmp304 .core @lead
   669 jump *label213 greaterThanEq *tmp304 .targetLead
   670 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label215 (h:*label215)
-    * call *label9 *invalid :status1*retval (m:*label215) (h:*label215)
-    * label *label215
+  671 label *label422
+  672 write :status1:text .display ".status1"
+  673 label *label423
   674 set :mineOre.1:ore @lead
   675 setaddr :mineOre.1*retaddr *label216 (h:*label216)
   676 call *label22 *invalid :mineOre.1*retval (m:*label216) (h:*label216)
 
   680 sensor *tmp307 .core @metaglass
   681 jump *label217 greaterThanEq *tmp307 .targetMetaglass
   682 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label219 (h:*label219)
-    * call *label9 *invalid :status1*retval (m:*label219) (h:*label219)
-    * label *label219
+  683 label *label424
+  684 write :status1:text .display ".status1"
+  685 label *label425
   686 set :mineOre.1:ore @sand
   687 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   688 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
 
   690 jump *label218 always
   691 label *label217
   692 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label221 (h:*label221)
-    * call *label9 *invalid :status1*retval (m:*label221) (h:*label221)
-    * label *label221
+  693 label *label426
+  694 write :status1:text .display ".status1"
+  695 label *label427
   696 sensor :supplyBase0:coal.1 .core @coal
   697 sensor :supplyBase0:sand.1 .core @sand
   698 select *tmp313 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   710 jump *label196 always
   711 label *label195
   712 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label225 (h:*label225)
-    * call *label9 *invalid :status1*retval (m:*label225) (h:*label225)
-    * label *label225
+  713 label *label428
+  714 write :status1:text .display ".status1"
+  715 label *label429
   716 set :fetchBlock:block .titaniumDrill
   717 set :fetchBlock:item @titanium
   718 setaddr :fetchBlock*retaddr *label226 (h:*label226)
 
   871 label *label249
   872 return :lineUpUnits*retaddr
   873 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label255
-    * return :status1*retaddr
-    * end
   874 label *label22
   875 set :status2:text "Mining "
   876 set :status2:item :mineOre.1:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   499 jump *label152 equal .thoriumContainer false
   500 set :status1:text "Phase 2: servicing thorium drill"
   501 label *label404
-    * write :status1:text .display ".status1"
+  502 write "Phase 2: servicing thorium drill" .display ".status1"
   503 label *label405
   504 sensor *tmp248 .thoriumBattery @totalPower
   505 jump *label156 greaterThanEq *tmp248 2000
 
   532 jump *label163 lessThanEq *tmp101 3
   533 set :status1:text "Phase 1: supplying base"
   534 label *label406
-    * write :status1:text .display ".status1"
+  535 write "Phase 1: supplying base" .display ".status1"
   536 label *label407
   537 set :mineOre.1:ore @coal
   538 setaddr :mineOre.1*retaddr *label167 (h:*label167)
 
   549 jump *label173 greaterThanEq *tmp261 5
   550 set :status1:text "Goal 1: graphite requirement"
   551 label *label408
-    * write :status1:text .display ".status1"
+  552 write "Goal 1: graphite requirement" .display ".status1"
   553 label *label409
   554 set :supplyBlock:block .press
   555 set :supplyBlock:ore @coal
 
   567 jump *label179 greaterThanEq *tmp267 5
   568 set :status1:text "Goal 2: coal for silicon requirement"
   569 label *label410
-    * write :status1:text .display ".status1"
+  570 write "Goal 2: coal for silicon requirement" .display ".status1"
   571 label *label411
   572 set :supplyBlock:block .smelter
   573 set :supplyBlock:ore @coal
 
   581 jump *label183 greaterThanEq *tmp270 5
   582 set :status1:text "Goal 3: sand for silicon requirement"
   583 label *label412
-    * write :status1:text .display ".status1"
+  584 write "Goal 3: sand for silicon requirement" .display ".status1"
   585 label *label413
   586 set :supplyBlock:block .smelter
   587 set :supplyBlock:ore @sand
 
   600 jump *label189 greaterThanEq *tmp276 2
   601 set :status1:text "Goal 4: supplying generator"
   602 label *label414
-    * write :status1:text .display ".status1"
+  603 write "Goal 4: supplying generator" .display ".status1"
   604 label *label415
   605 set :supplyBlock:block .generator
   606 set :supplyBlock:ore @coal
 
   630 jump *label199 greaterThanEq *tmp290 *tmp291
   631 set :status1:text "Goal 5: supplying generator"
   632 label *label416
-    * write :status1:text .display ".status1"
+  633 write "Goal 5: supplying generator" .display ".status1"
   634 label *label417
   635 set :mineOre.1:ore @coal
   636 setaddr :mineOre.1*retaddr *label202 (h:*label202)
 
   642 jump *label203 greaterThanEq *tmp294 .targetSilicon
   643 set :status1:text "Goal 6: silicon requirement"
   644 label *label418
-    * write :status1:text .display ".status1"
+  645 write "Goal 6: silicon requirement" .display ".status1"
   646 label *label419
   647 sensor :supplyBase0:coal .core @coal
   648 sensor :supplyBase0:sand .core @sand
 
   657 jump *label209 greaterThanEq *tmp301 .targetCopper
   658 set :status1:text "Goal 7: copper requirement"
   659 label *label420
-    * write :status1:text .display ".status1"
+  660 write "Goal 7: copper requirement" .display ".status1"
   661 label *label421
   662 set :mineOre.1:ore @copper
   663 setaddr :mineOre.1*retaddr *label212 (h:*label212)
 
   669 jump *label213 greaterThanEq *tmp304 .targetLead
   670 set :status1:text "Goal 8: lead requirement"
   671 label *label422
-    * write :status1:text .display ".status1"
+  672 write "Goal 8: lead requirement" .display ".status1"
   673 label *label423
   674 set :mineOre.1:ore @lead
   675 setaddr :mineOre.1*retaddr *label216 (h:*label216)
 
   681 jump *label217 greaterThanEq *tmp307 .targetMetaglass
   682 set :status1:text "Goal 9: metaglass requirement"
   683 label *label424
-    * write :status1:text .display ".status1"
+  684 write "Goal 9: metaglass requirement" .display ".status1"
   685 label *label425
   686 set :mineOre.1:ore @sand
   687 setaddr :mineOre.1*retaddr *label220 (h:*label220)
 
   691 label *label217
   692 set :status1:text "Goal 10: supplying base"
   693 label *label426
-    * write :status1:text .display ".status1"
+  694 write "Goal 10: supplying base" .display ".status1"
   695 label *label427
   696 sensor :supplyBase0:coal.1 .core @coal
   697 sensor :supplyBase0:sand.1 .core @sand
 
   711 label *label195
   712 set :status1:text "Goal 11: Fetching titanium"
   713 label *label428
-    * write :status1:text .display ".status1"
+  714 write "Goal 11: Fetching titanium" .display ".status1"
   715 label *label429
   716 set :fetchBlock:block .titaniumDrill
   717 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   497 op max *tmp246 0 *tmp245
   498 write *tmp246 processor8 ".sandTarget"
   499 jump *label152 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   500 label *label404
   501 write "Phase 2: servicing thorium drill" .display ".status1"
   502 label *label405
 
   529 label *label152
   530 read *tmp101 .controller ".monos"
   531 jump *label163 lessThanEq *tmp101 3
-    * set :status1:text "Phase 1: supplying base"
   532 label *label406
   533 write "Phase 1: supplying base" .display ".status1"
   534 label *label407
 
   545 jump *label171 greaterThanEq *tmp258 .targetGraphite
   546 sensor *tmp261 .press @coal
   547 jump *label173 greaterThanEq *tmp261 5
-    * set :status1:text "Goal 1: graphite requirement"
   548 label *label408
   549 write "Goal 1: graphite requirement" .display ".status1"
   550 label *label409
 
   562 jump *label177 greaterThanEq *tmp264 .targetSilicon
   563 sensor *tmp267 .smelter @coal
   564 jump *label179 greaterThanEq *tmp267 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   565 label *label410
   566 write "Goal 2: coal for silicon requirement" .display ".status1"
   567 label *label411
 
   575 label *label179
   576 sensor *tmp270 .smelter @sand
   577 jump *label183 greaterThanEq *tmp270 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   578 label *label412
   579 write "Goal 3: sand for silicon requirement" .display ".status1"
   580 label *label413
 
   593 jump *label187 greaterThanEq *tmp273 .powerTarget
   594 sensor *tmp276 .generator @coal
   595 jump *label189 greaterThanEq *tmp276 2
-    * set :status1:text "Goal 4: supplying generator"
   596 label *label414
   597 write "Goal 4: supplying generator" .display ".status1"
   598 label *label415
 
   622 sensor *tmp290 .battery @totalPower
   623 op mul *tmp291 .unloader1 .powerTarget
   624 jump *label199 greaterThanEq *tmp290 *tmp291
-    * set :status1:text "Goal 5: supplying generator"
   625 label *label416
   626 write "Goal 5: supplying generator" .display ".status1"
   627 label *label417
 
   633 label *label199
   634 sensor *tmp294 .core @silicon
   635 jump *label203 greaterThanEq *tmp294 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   636 label *label418
   637 write "Goal 6: silicon requirement" .display ".status1"
   638 label *label419
 
   647 label *label203
   648 sensor *tmp301 .core @copper
   649 jump *label209 greaterThanEq *tmp301 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   650 label *label420
   651 write "Goal 7: copper requirement" .display ".status1"
   652 label *label421
 
   658 label *label209
   659 sensor *tmp304 .core @lead
   660 jump *label213 greaterThanEq *tmp304 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
   661 label *label422
   662 write "Goal 8: lead requirement" .display ".status1"
   663 label *label423
 
   669 label *label213
   670 sensor *tmp307 .core @metaglass
   671 jump *label217 greaterThanEq *tmp307 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   672 label *label424
   673 write "Goal 9: metaglass requirement" .display ".status1"
   674 label *label425
 
   678 label *label220
   679 jump *label218 always
   680 label *label217
-    * set :status1:text "Goal 10: supplying base"
   681 label *label426
   682 write "Goal 10: supplying base" .display ".status1"
   683 label *label427
 
   697 label *label198
   698 jump *label196 always
   699 label *label195
-    * set :status1:text "Goal 11: Fetching titanium"
   700 label *label428
   701 write "Goal 11: Fetching titanium" .display ".status1"
   702 label *label429

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   513 label *label158
   514 set :supplyBlockFromCore:target .thoriumGenerator
   515 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
-    * label *label161
+  516 label *label430
+  517 sensor *tmp346 :supplyBlockFromCore:target @itemCapacity
+  518 op min :transportStatus:target *tmp346 30
+  519 set :transportStatus:item :supplyBlockFromCore:item
+  520 setaddr :transportStatus*retaddr *label431 (h:*label431)
+  521 call *label12 *invalid :transportStatus*retval (m:*label431) (h:*label431)
+  522 label *label431
+  523 set :status2:text "Transferring "
+  524 set :status2:item :supplyBlockFromCore:item
+  525 set :status2:block :supplyBlockFromCore:target
+  526 setaddr :status2*retaddr *label432 (h:*label432)
+  527 call *label10 *invalid :status2*retval (m:*label432) (h:*label432)
+  528 label *label432
+  529 set :moveToEmpty:x .coreX
+  530 set :moveToEmpty:y .coreY
+  531 setaddr :moveToEmpty*retaddr *label433 (h:*label433)
+  532 call *label16 *invalid :moveToEmpty*retval (m:*label433) (h:*label433)
+  533 label *label433
+  534 setaddr :dropAll*retaddr *label434 (h:*label434)
+  535 call *label17 *invalid :dropAll*retval (m:*label434) (h:*label434)
+  536 label *label434
+  537 label *label435
+  538 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  539 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  540 op notEqual *tmp349 :supplyBlockFromCore:unitItem null
+  541 op notEqual *tmp350 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  542 op land *tmp351 *tmp349 *tmp350
+  543 jump *label436 equal *tmp351 false
+  544 ucontrol itemDrop @air 1000
+  545 label *label436
+  546 label *label437
+  547 label *label438
+  548 sensor *tmp353 @unit :supplyBlockFromCore:item
+  549 op lessThan *tmp354 *tmp353 30
+  550 sensor *tmp355 .core :supplyBlockFromCore:item
+  551 op land *tmp356 *tmp354 *tmp355
+  552 jump *label435 notEqual *tmp356 false
+  553 label *label439
+  554 set :depositItems:block :supplyBlockFromCore:target
+  555 set :depositItems:item :supplyBlockFromCore:item
+  556 setaddr :depositItems*retaddr *label440 (h:*label440)
+  557 call *label19 *invalid :depositItems*retval (m:*label440) (h:*label440)
+  558 label *label440
+  559 label *label441
   560 label *label159
   561 label *label156
   562 label *label157
 
   985 label *label270
   986 return :supplyBlock*retaddr
   987 end
-    * label *label25
-    * sensor *tmp346 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp346 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label276 (h:*label276)
-    * call *label12 *invalid :transportStatus*retval (m:*label276) (h:*label276)
-    * label *label276
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label277 (h:*label277)
-    * call *label10 *invalid :status2*retval (m:*label277) (h:*label277)
-    * label *label277
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label278 (h:*label278)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label278) (h:*label278)
-    * label *label278
-    * setaddr :dropAll*retaddr *label279 (h:*label279)
-    * call *label17 *invalid :dropAll*retval (m:*label279) (h:*label279)
-    * label *label279
-    * label *label280
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp349 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp350 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp351 *tmp349 *tmp350
-    * jump *label283 equal *tmp351 false
-    * ucontrol itemDrop @air 1000
-    * label *label283
-    * label *label284
-    * label *label281
-    * sensor *tmp353 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp354 *tmp353 30
-    * sensor *tmp355 .core :supplyBlockFromCore:item
-    * op land *tmp356 *tmp354 *tmp355
-    * jump *label280 notEqual *tmp356 false
-    * label *label282
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label285 (h:*label285)
-    * call *label19 *invalid :depositItems*retval (m:*label285) (h:*label285)
-    * label *label285
-    * label *label275
-    * return :supplyBlockFromCore*retaddr
-    * end
   988 label *label27
   989 read *tmp358 :unpackCfg:cfg 0
   990 op sub *tmp359 *tmp358 50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   514 set :supplyBlockFromCore:target .thoriumGenerator
   515 set :supplyBlockFromCore:item @coal
   516 label *label430
-    * sensor *tmp346 :supplyBlockFromCore:target @itemCapacity
+  517 sensor *tmp346 .thoriumGenerator @itemCapacity
   518 op min :transportStatus:target *tmp346 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  519 set :transportStatus:item @coal
   520 setaddr :transportStatus*retaddr *label431 (h:*label431)
   521 call *label12 *invalid :transportStatus*retval (m:*label431) (h:*label431)
   522 label *label431
   523 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  524 set :status2:item @coal
+  525 set :status2:block .thoriumGenerator
   526 setaddr :status2*retaddr *label432 (h:*label432)
   527 call *label10 *invalid :status2*retval (m:*label432) (h:*label432)
   528 label *label432
 
   535 call *label17 *invalid :dropAll*retval (m:*label434) (h:*label434)
   536 label *label434
   537 label *label435
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  538 ucontrol itemTake .core @coal 30
   539 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   540 op notEqual *tmp349 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp350 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  541 op notEqual *tmp350 :supplyBlockFromCore:unitItem @coal
   542 op land *tmp351 *tmp349 *tmp350
   543 jump *label436 equal *tmp351 false
   544 ucontrol itemDrop @air 1000
   545 label *label436
   546 label *label437
   547 label *label438
-    * sensor *tmp353 @unit :supplyBlockFromCore:item
+  548 sensor *tmp353 @unit @coal
   549 op lessThan *tmp354 *tmp353 30
-    * sensor *tmp355 .core :supplyBlockFromCore:item
+  550 sensor *tmp355 .core @coal
   551 op land *tmp356 *tmp354 *tmp355
   552 jump *label435 notEqual *tmp356 false
   553 label *label439
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  554 set :depositItems:block .thoriumGenerator
+  555 set :depositItems:item @coal
   556 setaddr :depositItems*retaddr *label440 (h:*label440)
   557 call *label19 *invalid :depositItems*retval (m:*label440) (h:*label440)
   558 label *label440

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   511 label *label160
   512 jump *label159 always
   513 label *label158
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   514 label *label430
   515 sensor *tmp346 .thoriumGenerator @itemCapacity
   516 op min :transportStatus:target *tmp346 30

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
  1171 end
  1172 label *label16
  1173 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label323 (h:*label323)
-    * call *label11 *invalid :status3*retval (m:*label323) (h:*label323)
-    * label *label323
+ 1174 label *label442
+ 1175 write :status3:text .display ".status3"
+ 1176 label *label443
  1177 label *label324
  1178 sensor *tmp428 @unit @firstItem
  1179 jump *label327 equal *tmp428 null
 
  1201 end
  1202 label *label19
  1203 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label334 (h:*label334)
-    * call *label11 *invalid :status3*retval (m:*label334) (h:*label334)
-    * label *label334
+ 1204 label *label444
+ 1205 write :status3:text .display ".status3"
+ 1206 label *label445
  1207 sensor *tmp435 @unit @firstItem
  1208 jump *label335 notEqual *tmp435 :depositItems:item
  1209 set :moveToBlock:block :depositItems:block
 
  1264 label *label349
  1265 label *label350
  1266 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label352 (h:*label352)
-    * call *label11 *invalid :status3*retval (m:*label352) (h:*label352)
-    * label *label352
+ 1267 label *label446
+ 1268 write :status3:text .display ".status3"
+ 1269 label *label447
  1270 op add :mineOre:stop @second 10
  1271 label *label353
  1272 sensor :mineOre:item @unit @firstItem
 
  1295 label *label345
  1296 return :mineOre*retaddr
  1297 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label361
-    * return :status3*retaddr
-    * end
  1298 label *label18
  1299 sensor *tmp459 :moveToBlock:block @x
  1300 sensor *tmp460 :moveToBlock:block @y
 
  1321 end
  1322 label *label14
  1323 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label369 (h:*label369)
-    * call *label11 *invalid :status3*retval (m:*label369) (h:*label369)
-    * label *label369
+ 1324 label *label448
+ 1325 write :status3:text .display ".status3"
+ 1326 label *label449
  1327 op sub *tmp467 :moveTo:radius 0.5
  1328 label *label370
  1329 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp465

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1172 label *label16
  1173 set :status3:text "Moving..."
  1174 label *label442
-    * write :status3:text .display ".status3"
+ 1175 write "Moving..." .display ".status3"
  1176 label *label443
  1177 label *label324
  1178 sensor *tmp428 @unit @firstItem
 
  1202 label *label19
  1203 set :status3:text "Depositing..."
  1204 label *label444
-    * write :status3:text .display ".status3"
+ 1205 write "Depositing..." .display ".status3"
  1206 label *label445
  1207 sensor *tmp435 @unit @firstItem
  1208 jump *label335 notEqual *tmp435 :depositItems:item
 
  1265 label *label350
  1266 set :status3:text "Mining..."
  1267 label *label446
-    * write :status3:text .display ".status3"
+ 1268 write "Mining..." .display ".status3"
  1269 label *label447
  1270 op add :mineOre:stop @second 10
  1271 label *label353
 
  1322 label *label14
  1323 set :status3:text "Moving..."
  1324 label *label448
-    * write :status3:text .display ".status3"
+ 1325 write "Moving..." .display ".status3"
  1326 label *label449
  1327 op sub *tmp467 :moveTo:radius 0.5
  1328 label *label370

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1170 return :transportStatus*retaddr
  1171 end
  1172 label *label16
-    * set :status3:text "Moving..."
  1173 label *label442
  1174 write "Moving..." .display ".status3"
  1175 label *label443
 
  1199 return :dropAll*retaddr
  1200 end
  1201 label *label19
-    * set :status3:text "Depositing..."
  1202 label *label444
  1203 write "Depositing..." .display ".status3"
  1204 label *label445
 
  1261 label *label351
  1262 label *label349
  1263 label *label350
-    * set :status3:text "Mining..."
  1264 label *label446
  1265 write "Mining..." .display ".status3"
  1266 label *label447
 
  1317 return :locateOre*retaddr
  1318 end
  1319 label *label14
-    * set :status3:text "Moving..."
  1320 label *label448
  1321 write "Moving..." .display ".status3"
  1322 label *label449

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
  1206 jump *label335 notEqual *tmp435 :depositItems:item
  1207 set :moveToBlock:block :depositItems:block
  1208 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label337 (h:*label337)
-    * call *label18 *invalid :moveToBlock*retval (m:*label337) (h:*label337)
-    * label *label337
+ 1209 label *label450
+ 1210 sensor *tmp459 :moveToBlock:block @x
+ 1211 sensor *tmp460 :moveToBlock:block @y
+ 1212 set :moveTo:x *tmp459
+ 1213 set :moveTo:y *tmp460
+ 1214 set :moveTo:radius :moveToBlock:radius
+ 1215 setaddr :moveTo*retaddr *label451 (h:*label451)
+ 1216 call *label14 *invalid :moveTo*retval (m:*label451) (h:*label451)
+ 1217 label *label451
+ 1218 label *label452
  1219 sensor :depositItems:cap :depositItems:block @itemCapacity
  1220 label *label338
  1221 ucontrol itemDrop :depositItems:block 30
 
  1299 label *label345
  1300 return :mineOre*retaddr
  1301 end
-    * label *label18
-    * sensor *tmp459 :moveToBlock:block @x
-    * sensor *tmp460 :moveToBlock:block @y
-    * set :moveTo:x *tmp459
-    * set :moveTo:y *tmp460
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label363 (h:*label363)
-    * call *label14 *invalid :moveTo*retval (m:*label363) (h:*label363)
-    * label *label363
-    * label *label362
-    * return :moveToBlock*retaddr
-    * end
  1302 label *label20
  1303 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1304 jump *label365 notEqual *tmp461 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1207 set :moveToBlock:block :depositItems:block
  1208 set :moveToBlock:radius 6
  1209 label *label450
-    * sensor *tmp459 :moveToBlock:block @x
-    * sensor *tmp460 :moveToBlock:block @y
+ 1210 sensor *tmp459 :depositItems:block @x
+ 1211 sensor *tmp460 :depositItems:block @y
  1212 set :moveTo:x *tmp459
  1213 set :moveTo:y *tmp460
-    * set :moveTo:radius :moveToBlock:radius
+ 1214 set :moveTo:radius 6
  1215 setaddr :moveTo*retaddr *label451 (h:*label451)
  1216 call *label14 *invalid :moveTo*retval (m:*label451) (h:*label451)
  1217 label *label451

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1204 label *label445
  1205 sensor *tmp435 @unit @firstItem
  1206 jump *label335 notEqual *tmp435 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
  1207 label *label450
  1208 sensor *tmp459 :depositItems:block @x
  1209 sensor *tmp460 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
  1249 call *label12 *invalid :transportStatus*retval (m:*label346) (h:*label346)
  1250 label *label346
  1251 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label347 (h:*label347)
-    * call *label20 *invalid :locateOre*retval (m:*label347) (h:*label347)
-    * label *label347
+ 1252 label *label453
+ 1253 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
+ 1254 jump *label455 notEqual *tmp461 false
+ 1255 set :error:error "Cannot locate ore"
+ 1256 setaddr :error*retaddr *label454 (h:*label454)
+ 1257 call *label13 *invalid :error*retval (m:*label454) (h:*label454)
+ 1258 label *label454
+ 1259 label *label455
+ 1260 label *label456
+ 1261 label *label457
  1262 set :mineOre:x :locateOre:x
  1263 set :mineOre:y :locateOre:y
  1264 set :moveToEmpty:x :locateOre:x
 
  1304 label *label345
  1305 return :mineOre*retaddr
  1306 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
-    * jump *label365 notEqual *tmp461 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label367 (h:*label367)
-    * call *label13 *invalid :error*retval (m:*label367) (h:*label367)
-    * label *label367
-    * label *label365
-    * label *label366
-    * label *label364
-    * return :locateOre*retaddr
-    * end
  1307 label *label14
  1308 label *label448
  1309 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1250 label *label346
  1251 set :locateOre:ore :mineOre:ore
  1252 label *label453
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
+ 1253 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1254 jump *label455 notEqual *tmp461 false
  1255 set :error:error "Cannot locate ore"
  1256 setaddr :error*retaddr *label454 (h:*label454)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1248 setaddr :transportStatus*retaddr *label346 (h:*label346)
  1249 call *label12 *invalid :transportStatus*retval (m:*label346) (h:*label346)
  1250 label *label346
-    * set :locateOre:ore :mineOre:ore
  1251 label *label453
  1252 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1253 jump *label455 notEqual *tmp461 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
  1210 set :moveTo:x *tmp459
  1211 set :moveTo:y *tmp460
  1212 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label451 (h:*label451)
-    * call *label14 *invalid :moveTo*retval (m:*label451) (h:*label451)
-    * label *label451
+ 1213 label *label458
+ 1214 label *label459
+ 1215 write "Moving..." .display ".status3"
+ 1216 label *label460
+ 1217 op sub *tmp467 :moveTo:radius 0.5
+ 1218 label *label461
+ 1219 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp465
+ 1220 jump *label463 notEqual *tmp465 false
+ 1221 ucontrol approach :moveTo:x :moveTo:y *tmp467
+ 1222 label *label462
+ 1223 jump *label461 always
+ 1224 label *label463
+ 1225 label *label464
  1226 label *label452
  1227 sensor :depositItems:cap :depositItems:block @itemCapacity
  1228 label *label338
 
  1313 label *label345
  1314 return :mineOre*retaddr
  1315 end
-    * label *label14
-    * label *label448
-    * write "Moving..." .display ".status3"
-    * label *label449
-    * op sub *tmp467 :moveTo:radius 0.5
-    * label *label370
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp465
-    * jump *label372 notEqual *tmp465 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp467
-    * label *label371
-    * jump *label370 always
-    * label *label372
-    * label *label368
-    * return :moveTo*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1214 label *label459
  1215 write "Moving..." .display ".status3"
  1216 label *label460
-    * op sub *tmp467 :moveTo:radius 0.5
+ 1217 op sub *tmp467 6 0.5
  1218 label *label461
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp465
+ 1219 ucontrol within *tmp459 *tmp460 6 *tmp465
  1220 jump *label463 notEqual *tmp465 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp467
+ 1221 ucontrol approach *tmp459 *tmp460 5.5
  1222 label *label462
  1223 jump *label461 always
  1224 label *label463

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1207 label *label450
  1208 sensor *tmp459 :depositItems:block @x
  1209 sensor *tmp460 :depositItems:block @y
-    * set :moveTo:x *tmp459
-    * set :moveTo:y *tmp460
-    * set :moveTo:radius 6
  1210 label *label458
  1211 label *label459
  1212 write "Moving..." .display ".status3"
  1213 label *label460
-    * op sub *tmp467 6 0.5
  1214 label *label461
  1215 ucontrol within *tmp459 *tmp460 6 *tmp465
  1216 jump *label463 notEqual *tmp465 false

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
  1191 label *label330
  1192 sensor *tmp433 @unit @firstItem
  1193 jump *label332 equal *tmp433 null
+ 1194 label *label465
  1195 ucontrol itemDrop @air 1000
  1196 label *label331
-    * jump *label330 always
+ 1197 sensor *tmp433 @unit @firstItem
+ 1198 jump *label465 notEqual *tmp433 null
  1199 label *label332
  1200 label *label329
  1201 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
  1216 label *label461
  1217 ucontrol within *tmp459 *tmp460 6 *tmp465
  1218 jump *label463 notEqual *tmp465 false
+ 1219 label *label466
  1220 ucontrol approach *tmp459 *tmp460 5.5
  1221 label *label462
-    * jump *label461 always
+ 1222 ucontrol within *tmp459 *tmp460 6 *tmp465
+ 1223 jump *label466 equal *tmp465 false
  1224 label *label463
  1225 label *label464
  1226 label *label452

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
  1238 label *label341
  1239 sensor *tmp443 @unit @firstItem
  1240 jump *label343 equal *tmp443 null
+ 1241 label *label467
  1242 ucontrol itemDrop @air 1000
  1243 label *label342
-    * jump *label341 always
+ 1244 sensor *tmp443 @unit @firstItem
+ 1245 jump *label467 notEqual *tmp443 null
  1246 label *label343
  1247 label *label336
  1248 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
  1247 label *label336
  1248 set :transportStatus:target 0
  1249 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label344 (h:*label344)
-    * call *label12 *invalid :transportStatus*retval (m:*label344) (h:*label344)
-    * label *label344
+ 1250 label *label468
+ 1251 write :transportStatus:target .display ".transportTarget"
+ 1252 write :transportStatus:item .display ".transportItem"
+ 1253 label *label469
  1254 label *label333
  1255 return :depositItems*retaddr
  1256 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1248 set :transportStatus:target 0
  1249 set :transportStatus:item null
  1250 label *label468
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1251 write 0 .display ".transportTarget"
+ 1252 write null .display ".transportItem"
  1253 label *label469
  1254 label *label333
  1255 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1245 jump *label467 notEqual *tmp443 null
  1246 label *label343
  1247 label *label336
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
  1248 label *label468
  1249 write 0 .display ".transportTarget"
  1250 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   515 sensor *tmp346 .thoriumGenerator @itemCapacity
   516 op min :transportStatus:target *tmp346 30
   517 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label431 (h:*label431)
-    * call *label12 *invalid :transportStatus*retval (m:*label431) (h:*label431)
-    * label *label431
+  518 label *label470
+  519 write :transportStatus:target .display ".transportTarget"
+  520 write :transportStatus:item .display ".transportItem"
+  521 label *label471
   522 set :status2:text "Transferring "
   523 set :status2:item @coal
   524 set :status2:block .thoriumGenerator
 
   918 sensor *tmp328 :fetchBlock:block @itemCapacity
   919 op min :transportStatus:target *tmp328 30
   920 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label260 (h:*label260)
-    * call *label12 *invalid :transportStatus*retval (m:*label260) (h:*label260)
-    * label *label260
+  921 label *label472
+  922 write :transportStatus:target .display ".transportTarget"
+  923 write :transportStatus:item .display ".transportItem"
+  924 label *label473
   925 set :status2:text "Fetching "
   926 set :status2:item :fetchBlock:item
   927 set :status2:block :fetchBlock:block
 
  1165 label *label320
  1166 return :status2*retaddr
  1167 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label321
-    * return :transportStatus*retaddr
-    * end
  1168 label *label16
  1169 label *label442
  1170 write "Moving..." .display ".status3"
 
  1252 op min :mineOre:amount :mineOre:amount 30
  1253 set :transportStatus:target :mineOre:amount
  1254 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label346 (h:*label346)
-    * call *label12 *invalid :transportStatus*retval (m:*label346) (h:*label346)
-    * label *label346
+ 1255 label *label474
+ 1256 write :transportStatus:target .display ".transportTarget"
+ 1257 write :transportStatus:item .display ".transportItem"
+ 1258 label *label475
  1259 label *label453
  1260 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1261 jump *label455 notEqual *tmp461 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   517 set :transportStatus:item @coal
   518 label *label470
   519 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  520 write @coal .display ".transportItem"
   521 label *label471
   522 set :status2:text "Transferring "
   523 set :status2:item @coal
 
   920 set :transportStatus:item :fetchBlock:item
   921 label *label472
   922 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  923 write :fetchBlock:item .display ".transportItem"
   924 label *label473
   925 set :status2:text "Fetching "
   926 set :status2:item :fetchBlock:item
 
  1253 set :transportStatus:target :mineOre:amount
  1254 set :transportStatus:item :mineOre:ore
  1255 label *label474
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1256 write :mineOre:amount .display ".transportTarget"
+ 1257 write :mineOre:ore .display ".transportItem"
  1258 label *label475
  1259 label *label453
  1260 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   514 label *label430
   515 sensor *tmp346 .thoriumGenerator @itemCapacity
   516 op min :transportStatus:target *tmp346 30
-    * set :transportStatus:item @coal
   517 label *label470
   518 write :transportStatus:target .display ".transportTarget"
   519 write @coal .display ".transportItem"
 
   916 label *label23
   917 sensor *tmp328 :fetchBlock:block @itemCapacity
   918 op min :transportStatus:target *tmp328 30
-    * set :transportStatus:item :fetchBlock:item
   919 label *label472
   920 write :transportStatus:target .display ".transportTarget"
   921 write :fetchBlock:item .display ".transportItem"
 
  1249 label *label21
  1250 op min :mineOre:amount :mineOre:amount 30
  1251 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
  1252 label *label474
  1253 write :mineOre:amount .display ".transportTarget"
  1254 write :mineOre:ore .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   923 set :status2:text "Fetching "
   924 set :status2:item :fetchBlock:item
   925 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label261 (h:*label261)
-    * call *label10 *invalid :status2*retval (m:*label261) (h:*label261)
-    * label *label261
+  926 label *label476
+  927 write :status2:text .display ".status2"
+  928 write :status2:item .display ".item2"
+  929 write :status2:block .display ".block2"
+  930 label *label477
   931 sensor *tmp330 :fetchBlock:block @x
   932 sensor *tmp331 :fetchBlock:block @y
   933 set :moveToEmpty:x *tmp330

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   924 set :status2:item :fetchBlock:item
   925 set :status2:block :fetchBlock:block
   926 label *label476
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  927 write "Fetching " .display ".status2"
+  928 write :fetchBlock:item .display ".item2"
+  929 write :fetchBlock:block .display ".block2"
   930 label *label477
   931 sensor *tmp330 :fetchBlock:block @x
   932 sensor *tmp331 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   920 write :transportStatus:target .display ".transportTarget"
   921 write :fetchBlock:item .display ".transportItem"
   922 label *label473
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   923 label *label476
   924 write "Fetching " .display ".status2"
   925 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   521 set :status2:text "Transferring "
   522 set :status2:item @coal
   523 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label432 (h:*label432)
-    * call *label10 *invalid :status2*retval (m:*label432) (h:*label432)
-    * label *label432
+  524 label *label478
+  525 write :status2:text .display ".status2"
+  526 write :status2:item .display ".item2"
+  527 write :status2:block .display ".block2"
+  528 label *label479
   529 set :moveToEmpty:x .coreX
   530 set :moveToEmpty:y .coreY
   531 setaddr :moveToEmpty*retaddr *label433 (h:*label433)
 
   903 set :status2:text "Mining "
   904 set :status2:item :mineOre.1:ore
   905 set :status2:block "core"
-    * setaddr :status2*retaddr *label257 (h:*label257)
-    * call *label10 *invalid :status2*retval (m:*label257) (h:*label257)
-    * label *label257
+  906 label *label480
+  907 write :status2:text .display ".status2"
+  908 write :status2:item .display ".item2"
+  909 write :status2:block .display ".block2"
+  910 label *label481
   911 set :mineOre:ore :mineOre.1:ore
   912 set :mineOre:amount 30
   913 set :mineOre:block .core
 
   968 set :status2:text "Supplying "
   969 set :status2:item :supplyBlock:ore
   970 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label271 (h:*label271)
-    * call *label10 *invalid :status2*retval (m:*label271) (h:*label271)
-    * label *label271
+  971 label *label482
+  972 write :status2:text .display ".status2"
+  973 write :status2:item .display ".item2"
+  974 write :status2:block .display ".block2"
+  975 label *label483
   976 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   977 sensor *tmp342 :supplyBlock:block :supplyBlock:ore
   978 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
 
  1161 label *label317
  1162 return :buildBlock*retaddr
  1163 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label320
-    * return :status2*retaddr
-    * end
  1164 label *label16
  1165 label *label442
  1166 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   522 set :status2:item @coal
   523 set :status2:block .thoriumGenerator
   524 label *label478
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  525 write "Transferring " .display ".status2"
+  526 write @coal .display ".item2"
+  527 write .thoriumGenerator .display ".block2"
   528 label *label479
   529 set :moveToEmpty:x .coreX
   530 set :moveToEmpty:y .coreY
 
   904 set :status2:item :mineOre.1:ore
   905 set :status2:block "core"
   906 label *label480
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  907 write "Mining " .display ".status2"
+  908 write :mineOre.1:ore .display ".item2"
+  909 write "core" .display ".block2"
   910 label *label481
   911 set :mineOre:ore :mineOre.1:ore
   912 set :mineOre:amount 30
 
   969 set :status2:item :supplyBlock:ore
   970 set :status2:block :supplyBlock:block
   971 label *label482
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  972 write "Supplying " .display ".status2"
+  973 write :supplyBlock:ore .display ".item2"
+  974 write :supplyBlock:block .display ".block2"
   975 label *label483
   976 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   977 sensor *tmp342 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   518 write :transportStatus:target .display ".transportTarget"
   519 write @coal .display ".transportItem"
   520 label *label471
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   521 label *label478
   522 write "Transferring " .display ".status2"
   523 write @coal .display ".item2"
 
   897 return :lineUpUnits*retaddr
   898 end
   899 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   900 label *label480
   901 write "Mining " .display ".status2"
   902 write :mineOre.1:ore .display ".item2"
 
   959 return :fetchBlock*retaddr
   960 end
   961 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   962 label *label482
   963 write "Supplying " .display ".status2"
   964 write :supplyBlock:ore .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    76 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    77 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    78 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label58 (h:*label58)
-    * call *label13 *invalid :error*retval (m:*label58) (h:*label58)
-    * label *label58
+   79 label *label484
+   80 set .ERROR :error:error
+   81 stop
+   82 label *label485
    83 label *label56
    84 label *label57
    85 write @pneumatic-drill processor1 ".nextBlock"
 
   321 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   322 jump *label110 notEqual :buildThoriumDrill:result false
   323 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label112 (h:*label112)
-    * call *label13 *invalid :error*retval (m:*label112) (h:*label112)
-    * label *label112
+  324 label *label486
+  325 set .ERROR :error:error
+  326 stop
+  327 label *label487
   328 label *label110
   329 label *label111
   330 write @laser-drill processor5 ":buildBlockAt:block"
 
   487 label *label145
   488 label *label138
   489 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label150
-    * return :error*retaddr
-    * end
   490 label *label33
   491 sensor *tmp244 .core @silicon
   492 op sub *tmp245 .targetSilicon *tmp244
 
  1242 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1243 jump *label455 notEqual *tmp461 false
  1244 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label454 (h:*label454)
-    * call *label13 *invalid :error*retval (m:*label454) (h:*label454)
-    * label *label454
+ 1245 label *label488
+ 1246 set .ERROR :error:error
+ 1247 stop
+ 1248 label *label489
  1249 label *label455
  1250 label *label456
  1251 label *label457

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    77 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    78 set :error:error "Cannot locate spot for titanium drill"
    79 label *label484
-    * set .ERROR :error:error
+   80 set .ERROR "Cannot locate spot for titanium drill"
    81 stop
    82 label *label485
    83 label *label56
 
   322 jump *label110 notEqual :buildThoriumDrill:result false
   323 set :error:error "Cannot locate spot for thorium drill"
   324 label *label486
-    * set .ERROR :error:error
+  325 set .ERROR "Cannot locate spot for thorium drill"
   326 stop
   327 label *label487
   328 label *label110
 
  1233 end
  1234 label *label21
  1235 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
  1236 label *label474
  1237 write :mineOre:amount .display ".transportTarget"
  1238 write :mineOre:ore .display ".transportItem"
 
  1242 jump *label455 notEqual *tmp461 false
  1243 set :error:error "Cannot locate ore"
  1244 label *label488
-    * set .ERROR :error:error
+ 1245 set .ERROR "Cannot locate ore"
  1246 stop
  1247 label *label489
  1248 label *label455

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    75 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    76 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    77 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    78 label *label484
    79 set .ERROR "Cannot locate spot for titanium drill"
    80 stop
 
   319 jump *label109 equal *tmp208 false
   320 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   321 jump *label110 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   322 label *label486
   323 set .ERROR "Cannot locate spot for thorium drill"
   324 stop
 
  1238 label *label453
  1239 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1240 jump *label455 notEqual *tmp461 false
-    * set :error:error "Cannot locate ore"
  1241 label *label488
  1242 set .ERROR "Cannot locate ore"
  1243 stop

Modifications by Inline function call at Actions.mnd:137:5 (+3 instructions):
 
   924 setaddr :moveToEmpty*retaddr *label262 (h:*label262)
   925 call *label16 *invalid :moveToEmpty*retval (m:*label262) (h:*label262)
   926 label *label262
-    * setaddr :dropAll*retaddr *label263 (h:*label263)
-    * call *label17 *invalid :dropAll*retval (m:*label263) (h:*label263)
-    * label *label263
+  927 label *label490
+  928 label *label491
+  929 sensor *tmp433 @unit @firstItem
+  930 jump *label494 equal *tmp433 null
+  931 label *label492
+  932 ucontrol itemDrop @air 1000
+  933 label *label493
+  934 sensor *tmp433 @unit @firstItem
+  935 jump *label492 notEqual *tmp433 null
+  936 label *label494
+  937 label *label495
   938 label *label264
   939 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   940 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   519 label *label479
   520 set :moveToEmpty:x .coreX
   521 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label433 (h:*label433)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label433) (h:*label433)
-    * label *label433
+  522 label *label496
+  523 label *label497
+  524 write "Moving..." .display ".status3"
+  525 label *label498
+  526 label *label499
+  527 sensor *tmp428 @unit @firstItem
+  528 jump *label500 equal *tmp428 null
+  529 ucontrol itemDrop @air 1000
+  530 label *label500
+  531 label *label501
+  532 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  533 label *label502
+  534 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
+  535 jump *label499 equal *tmp431 false
+  536 label *label503
+  537 label *label504
   538 setaddr :dropAll*retaddr *label434 (h:*label434)
   539 call *label17 *invalid :dropAll*retval (m:*label434) (h:*label434)
   540 label *label434
 
   934 sensor *tmp331 :fetchBlock:block @y
   935 set :moveToEmpty:x *tmp330
   936 set :moveToEmpty:y *tmp331
-    * setaddr :moveToEmpty*retaddr *label262 (h:*label262)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label262) (h:*label262)
-    * label *label262
+  937 label *label505
+  938 label *label506
+  939 write "Moving..." .display ".status3"
+  940 label *label507
+  941 label *label508
+  942 sensor *tmp428 @unit @firstItem
+  943 jump *label509 equal *tmp428 null
+  944 ucontrol itemDrop @air 1000
+  945 label *label509
+  946 label *label510
+  947 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  948 label *label511
+  949 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
+  950 jump *label508 equal *tmp431 false
+  951 label *label512
+  952 label *label513
   953 label *label490
   954 label *label491
   955 sensor *tmp433 @unit @firstItem
 
  1180 label *label317
  1181 return :buildBlock*retaddr
  1182 end
-    * label *label16
-    * label *label442
-    * write "Moving..." .display ".status3"
-    * label *label443
-    * label *label324
-    * sensor *tmp428 @unit @firstItem
-    * jump *label327 equal *tmp428 null
-    * ucontrol itemDrop @air 1000
-    * label *label327
-    * label *label328
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label325
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
-    * jump *label324 equal *tmp431 false
-    * label *label326
-    * label *label322
-    * return :moveToEmpty*retaddr
-    * end
  1183 label *label17
  1184 label *label330
  1185 sensor *tmp433 @unit @firstItem
 
  1265 set :mineOre:y :locateOre:y
  1266 set :moveToEmpty:x :locateOre:x
  1267 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label348 (h:*label348)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label348) (h:*label348)
-    * label *label348
+ 1268 label *label514
+ 1269 label *label515
+ 1270 write "Moving..." .display ".status3"
+ 1271 label *label516
+ 1272 label *label517
+ 1273 sensor *tmp428 @unit @firstItem
+ 1274 jump *label518 equal *tmp428 null
+ 1275 ucontrol itemDrop @air 1000
+ 1276 label *label518
+ 1277 label *label519
+ 1278 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1279 label *label520
+ 1280 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
+ 1281 jump *label517 equal *tmp431 false
+ 1282 label *label521
+ 1283 label *label522
  1284 sensor *tmp446 @unit @firstItem
  1285 jump *label349 equal *tmp446 :mineOre:ore
  1286 setaddr :dropAll*retaddr *label351 (h:*label351)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   529 ucontrol itemDrop @air 1000
   530 label *label500
   531 label *label501
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  532 ucontrol approach .coreX .coreY 5.5
   533 label *label502
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
+  534 ucontrol within .coreX .coreY 6 *tmp431
   535 jump *label499 equal *tmp431 false
   536 label *label503
   537 label *label504
 
   944 ucontrol itemDrop @air 1000
   945 label *label509
   946 label *label510
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  947 ucontrol approach *tmp330 *tmp331 5.5
   948 label *label511
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
+  949 ucontrol within *tmp330 *tmp331 6 *tmp431
   950 jump *label508 equal *tmp431 false
   951 label *label512
   952 label *label513
 
  1275 ucontrol itemDrop @air 1000
  1276 label *label518
  1277 label *label519
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1278 ucontrol approach :locateOre:x :locateOre:y 5.5
  1279 label *label520
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp431
+ 1280 ucontrol within :locateOre:x :locateOre:y 6 *tmp431
  1281 jump *label517 equal *tmp431 false
  1282 label *label521
  1283 label *label522

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   517 write @coal .display ".item2"
   518 write .thoriumGenerator .display ".block2"
   519 label *label479
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   520 label *label496
   521 label *label497
   522 write "Moving..." .display ".status3"
 
   930 label *label477
   931 sensor *tmp330 :fetchBlock:block @x
   932 sensor *tmp331 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp330
-    * set :moveToEmpty:y *tmp331
   933 label *label505
   934 label *label506
   935 write "Moving..." .display ".status3"
 
  1259 label *label457
  1260 set :mineOre:x :locateOre:x
  1261 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
  1262 label *label514
  1263 label *label515
  1264 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
   533 jump *label499 equal *tmp431 false
   534 label *label503
   535 label *label504
-    * setaddr :dropAll*retaddr *label434 (h:*label434)
-    * call *label17 *invalid :dropAll*retval (m:*label434) (h:*label434)
-    * label *label434
+  536 label *label523
+  537 label *label524
+  538 sensor *tmp433 @unit @firstItem
+  539 jump *label527 equal *tmp433 null
+  540 label *label525
+  541 ucontrol itemDrop @air 1000
+  542 label *label526
+  543 sensor *tmp433 @unit @firstItem
+  544 jump *label525 notEqual *tmp433 null
+  545 label *label527
+  546 label *label528
   547 label *label435
   548 ucontrol itemTake .core @coal 30
   549 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
  1184 label *label317
  1185 return :buildBlock*retaddr
  1186 end
-    * label *label17
-    * label *label330
-    * sensor *tmp433 @unit @firstItem
-    * jump *label332 equal *tmp433 null
-    * label *label465
-    * ucontrol itemDrop @air 1000
-    * label *label331
-    * sensor *tmp433 @unit @firstItem
-    * jump *label465 notEqual *tmp433 null
-    * label *label332
-    * label *label329
-    * return :dropAll*retaddr
-    * end
  1187 label *label19
  1188 label *label444
  1189 write "Depositing..." .display ".status3"
 
  1272 label *label522
  1273 sensor *tmp446 @unit @firstItem
  1274 jump *label349 equal *tmp446 :mineOre:ore
-    * setaddr :dropAll*retaddr *label351 (h:*label351)
-    * call *label17 *invalid :dropAll*retval (m:*label351) (h:*label351)
-    * label *label351
+ 1275 label *label529
+ 1276 label *label530
+ 1277 sensor *tmp433 @unit @firstItem
+ 1278 jump *label533 equal *tmp433 null
+ 1279 label *label531
+ 1280 ucontrol itemDrop @air 1000
+ 1281 label *label532
+ 1282 sensor *tmp433 @unit @firstItem
+ 1283 jump *label531 notEqual *tmp433 null
+ 1284 label *label533
+ 1285 label *label534
  1286 label *label349
  1287 label *label350
  1288 label *label446

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1298 jump *label355 always
  1299 label *label356
  1300 label *label357
-    * ucontrol mine :mineOre:x :mineOre:y
+ 1301 ucontrol mine :locateOre:x :locateOre:y
  1302 jump *label358 lessThanEq @second :mineOre:stop
  1303 jump *label355 always
  1304 label *label358

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1252 label *label455
  1253 label *label456
  1254 label *label457
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
  1255 label *label514
  1256 label *label515
  1257 write "Moving..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:139:5 (+6 instructions):
 
   584 write "Phase 1: supplying base" .display ".status1"
   585 label *label407
   586 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label167 (h:*label167)
-    * call *label22 *invalid :mineOre.1*retval (m:*label167) (h:*label167)
-    * label *label167
+  587 label *label535
+  588 label *label536
+  589 write "Mining " .display ".status2"
+  590 write :mineOre.1:ore .display ".item2"
+  591 write "core" .display ".block2"
+  592 label *label537
+  593 set :mineOre:ore :mineOre.1:ore
+  594 set :mineOre:amount 30
+  595 set :mineOre:block .core
+  596 setaddr :mineOre*retaddr *label538 (h:*label538)
+  597 call *label21 *invalid :mineOre*retval (m:*label538) (h:*label538)
+  598 label *label538
+  599 label *label539
   600 label *label165
   601 jump *label164 always
   602 label *label163

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   587 label *label535
   588 label *label536
   589 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  590 write @coal .display ".item2"
   591 write "core" .display ".block2"
   592 label *label537
-    * set :mineOre:ore :mineOre.1:ore
+  593 set :mineOre:ore @coal
   594 set :mineOre:amount 30
   595 set :mineOre:block .core
   596 setaddr :mineOre*retaddr *label538 (h:*label538)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   583 label *label406
   584 write "Phase 1: supplying base" .display ".status1"
   585 label *label407
-    * set :mineOre.1:ore @coal
   586 label *label535
   587 label *label536
   588 write "Mining " .display ".status2"

Modifications by Inline function call at Actions.mnd:147:5 (+23 instructions):
 
   993 label *label266
   994 set :depositItems:block .core
   995 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label269 (h:*label269)
-    * call *label19 *invalid :depositItems*retval (m:*label269) (h:*label269)
-    * label *label269
+  996 label *label540
+  997 label *label541
+  998 write "Depositing..." .display ".status3"
+  999 label *label542
+ 1000 sensor *tmp435 @unit @firstItem
+ 1001 jump *label556 notEqual *tmp435 :depositItems:item
+ 1002 label *label543
+ 1003 sensor *tmp459 :depositItems:block @x
+ 1004 sensor *tmp460 :depositItems:block @y
+ 1005 label *label544
+ 1006 label *label545
+ 1007 write "Moving..." .display ".status3"
+ 1008 label *label546
+ 1009 label *label547
+ 1010 ucontrol within *tmp459 *tmp460 6 *tmp465
+ 1011 jump *label550 notEqual *tmp465 false
+ 1012 label *label548
+ 1013 ucontrol approach *tmp459 *tmp460 5.5
+ 1014 label *label549
+ 1015 ucontrol within *tmp459 *tmp460 6 *tmp465
+ 1016 jump *label548 equal *tmp465 false
+ 1017 label *label550
+ 1018 label *label551
+ 1019 label *label552
+ 1020 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1021 label *label553
+ 1022 ucontrol itemDrop :depositItems:block 30
+ 1023 label *label554
+ 1024 sensor *tmp439 @unit @firstItem
+ 1025 op mul *tmp440 *tmp439 :depositItems:cap
+ 1026 sensor *tmp441 :depositItems:block :depositItems:item
+ 1027 jump *label553 greaterThan *tmp440 *tmp441
+ 1028 label *label555
+ 1029 jump *label561 always
+ 1030 label *label556
+ 1031 label *label557
+ 1032 sensor *tmp443 @unit @firstItem
+ 1033 jump *label560 equal *tmp443 null
+ 1034 label *label558
+ 1035 ucontrol itemDrop @air 1000
+ 1036 label *label559
+ 1037 sensor *tmp443 @unit @firstItem
+ 1038 jump *label558 notEqual *tmp443 null
+ 1039 label *label560
+ 1040 label *label561
+ 1041 label *label562
+ 1042 write 0 .display ".transportTarget"
+ 1043 write null .display ".transportItem"
+ 1044 label *label563
+ 1045 label *label564
  1046 label *label259
  1047 return :fetchBlock*retaddr
  1048 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   998 write "Depositing..." .display ".status3"
   999 label *label542
  1000 sensor *tmp435 @unit @firstItem
-    * jump *label556 notEqual *tmp435 :depositItems:item
+ 1001 jump *label556 notEqual *tmp435 :fetchBlock:item
  1002 label *label543
-    * sensor *tmp459 :depositItems:block @x
-    * sensor *tmp460 :depositItems:block @y
+ 1003 sensor *tmp459 .core @x
+ 1004 sensor *tmp460 .core @y
  1005 label *label544
  1006 label *label545
  1007 write "Moving..." .display ".status3"
 
  1017 label *label550
  1018 label *label551
  1019 label *label552
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1020 sensor :depositItems:cap .core @itemCapacity
  1021 label *label553
-    * ucontrol itemDrop :depositItems:block 30
+ 1022 ucontrol itemDrop .core 30
  1023 label *label554
  1024 sensor *tmp439 @unit @firstItem
  1025 op mul *tmp440 *tmp439 :depositItems:cap
-    * sensor *tmp441 :depositItems:block :depositItems:item
+ 1026 sensor *tmp441 .core :fetchBlock:item
  1027 jump *label553 greaterThan *tmp440 *tmp441
  1028 label *label555
  1029 jump *label561 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   991 op land *tmp340 *tmp338 *tmp339
   992 jump *label264 notEqual *tmp340 false
   993 label *label266
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   994 label *label540
   995 label *label541
   996 write "Depositing..." .display ".status3"

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+19 instructions):
 
   563 label *label439
   564 set :depositItems:block .thoriumGenerator
   565 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label440 (h:*label440)
-    * call *label19 *invalid :depositItems*retval (m:*label440) (h:*label440)
-    * label *label440
+  566 label *label565
+  567 label *label566
+  568 write "Depositing..." .display ".status3"
+  569 label *label567
+  570 sensor *tmp435 @unit @firstItem
+  571 jump *label581 notEqual *tmp435 :depositItems:item
+  572 label *label568
+  573 sensor *tmp459 :depositItems:block @x
+  574 sensor *tmp460 :depositItems:block @y
+  575 label *label569
+  576 label *label570
+  577 write "Moving..." .display ".status3"
+  578 label *label571
+  579 label *label572
+  580 ucontrol within *tmp459 *tmp460 6 *tmp465
+  581 jump *label575 notEqual *tmp465 false
+  582 label *label573
+  583 ucontrol approach *tmp459 *tmp460 5.5
+  584 label *label574
+  585 ucontrol within *tmp459 *tmp460 6 *tmp465
+  586 jump *label573 equal *tmp465 false
+  587 label *label575
+  588 label *label576
+  589 label *label577
+  590 sensor :depositItems:cap :depositItems:block @itemCapacity
+  591 label *label578
+  592 ucontrol itemDrop :depositItems:block 30
+  593 label *label579
+  594 sensor *tmp439 @unit @firstItem
+  595 op mul *tmp440 *tmp439 :depositItems:cap
+  596 sensor *tmp441 :depositItems:block :depositItems:item
+  597 jump *label578 greaterThan *tmp440 *tmp441
+  598 label *label580
+  599 jump *label586 always
+  600 label *label581
+  601 label *label582
+  602 sensor *tmp443 @unit @firstItem
+  603 jump *label585 equal *tmp443 null
+  604 label *label583
+  605 ucontrol itemDrop @air 1000
+  606 label *label584
+  607 sensor *tmp443 @unit @firstItem
+  608 jump *label583 notEqual *tmp443 null
+  609 label *label585
+  610 label *label586
+  611 label *label587
+  612 write 0 .display ".transportTarget"
+  613 write null .display ".transportItem"
+  614 label *label588
+  615 label *label589
   616 label *label441
   617 label *label159
   618 label *label156
 
  1285 label *label317
  1286 return :buildBlock*retaddr
  1287 end
-    * label *label19
-    * label *label444
-    * write "Depositing..." .display ".status3"
-    * label *label445
-    * sensor *tmp435 @unit @firstItem
-    * jump *label335 notEqual *tmp435 :depositItems:item
-    * label *label450
-    * sensor *tmp459 :depositItems:block @x
-    * sensor *tmp460 :depositItems:block @y
-    * label *label458
-    * label *label459
-    * write "Moving..." .display ".status3"
-    * label *label460
-    * label *label461
-    * ucontrol within *tmp459 *tmp460 6 *tmp465
-    * jump *label463 notEqual *tmp465 false
-    * label *label466
-    * ucontrol approach *tmp459 *tmp460 5.5
-    * label *label462
-    * ucontrol within *tmp459 *tmp460 6 *tmp465
-    * jump *label466 equal *tmp465 false
-    * label *label463
-    * label *label464
-    * label *label452
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label338
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label339
-    * sensor *tmp439 @unit @firstItem
-    * op mul *tmp440 *tmp439 :depositItems:cap
-    * sensor *tmp441 :depositItems:block :depositItems:item
-    * jump *label338 greaterThan *tmp440 *tmp441
-    * label *label340
-    * jump *label336 always
-    * label *label335
-    * label *label341
-    * sensor *tmp443 @unit @firstItem
-    * jump *label343 equal *tmp443 null
-    * label *label467
-    * ucontrol itemDrop @air 1000
-    * label *label342
-    * sensor *tmp443 @unit @firstItem
-    * jump *label467 notEqual *tmp443 null
-    * label *label343
-    * label *label336
-    * label *label468
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label469
-    * label *label333
-    * return :depositItems*retaddr
-    * end
  1288 label *label21
  1289 op min :mineOre:amount :mineOre:amount 30
  1290 label *label474
 
  1357 ucontrol unbind
  1358 set :depositItems:block :mineOre:block
  1359 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label360 (h:*label360)
-    * call *label19 *invalid :depositItems*retval (m:*label360) (h:*label360)
-    * label *label360
+ 1360 label *label590
+ 1361 label *label591
+ 1362 write "Depositing..." .display ".status3"
+ 1363 label *label592
+ 1364 sensor *tmp435 @unit @firstItem
+ 1365 jump *label606 notEqual *tmp435 :depositItems:item
+ 1366 label *label593
+ 1367 sensor *tmp459 :depositItems:block @x
+ 1368 sensor *tmp460 :depositItems:block @y
+ 1369 label *label594
+ 1370 label *label595
+ 1371 write "Moving..." .display ".status3"
+ 1372 label *label596
+ 1373 label *label597
+ 1374 ucontrol within *tmp459 *tmp460 6 *tmp465
+ 1375 jump *label600 notEqual *tmp465 false
+ 1376 label *label598
+ 1377 ucontrol approach *tmp459 *tmp460 5.5
+ 1378 label *label599
+ 1379 ucontrol within *tmp459 *tmp460 6 *tmp465
+ 1380 jump *label598 equal *tmp465 false
+ 1381 label *label600
+ 1382 label *label601
+ 1383 label *label602
+ 1384 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1385 label *label603
+ 1386 ucontrol itemDrop :depositItems:block 30
+ 1387 label *label604
+ 1388 sensor *tmp439 @unit @firstItem
+ 1389 op mul *tmp440 *tmp439 :depositItems:cap
+ 1390 sensor *tmp441 :depositItems:block :depositItems:item
+ 1391 jump *label603 greaterThan *tmp440 *tmp441
+ 1392 label *label605
+ 1393 jump *label611 always
+ 1394 label *label606
+ 1395 label *label607
+ 1396 sensor *tmp443 @unit @firstItem
+ 1397 jump *label610 equal *tmp443 null
+ 1398 label *label608
+ 1399 ucontrol itemDrop @air 1000
+ 1400 label *label609
+ 1401 sensor *tmp443 @unit @firstItem
+ 1402 jump *label608 notEqual *tmp443 null
+ 1403 label *label610
+ 1404 label *label611
+ 1405 label *label612
+ 1406 write 0 .display ".transportTarget"
+ 1407 write null .display ".transportItem"
+ 1408 label *label613
+ 1409 label *label614
  1410 label *label345
  1411 return :mineOre*retaddr
  1412 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   568 write "Depositing..." .display ".status3"
   569 label *label567
   570 sensor *tmp435 @unit @firstItem
-    * jump *label581 notEqual *tmp435 :depositItems:item
+  571 jump *label581 notEqual *tmp435 @coal
   572 label *label568
-    * sensor *tmp459 :depositItems:block @x
-    * sensor *tmp460 :depositItems:block @y
+  573 sensor *tmp459 .thoriumGenerator @x
+  574 sensor *tmp460 .thoriumGenerator @y
   575 label *label569
   576 label *label570
   577 write "Moving..." .display ".status3"
 
   587 label *label575
   588 label *label576
   589 label *label577
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  590 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   591 label *label578
-    * ucontrol itemDrop :depositItems:block 30
+  592 ucontrol itemDrop .thoriumGenerator 30
   593 label *label579
   594 sensor *tmp439 @unit @firstItem
   595 op mul *tmp440 *tmp439 :depositItems:cap
-    * sensor *tmp441 :depositItems:block :depositItems:item
+  596 sensor *tmp441 .thoriumGenerator @coal
   597 jump *label578 greaterThan *tmp440 *tmp441
   598 label *label580
   599 jump *label586 always
 
  1362 write "Depositing..." .display ".status3"
  1363 label *label592
  1364 sensor *tmp435 @unit @firstItem
-    * jump *label606 notEqual *tmp435 :depositItems:item
+ 1365 jump *label606 notEqual *tmp435 :mineOre:ore
  1366 label *label593
-    * sensor *tmp459 :depositItems:block @x
-    * sensor *tmp460 :depositItems:block @y
+ 1367 sensor *tmp459 :mineOre:block @x
+ 1368 sensor *tmp460 :mineOre:block @y
  1369 label *label594
  1370 label *label595
  1371 write "Moving..." .display ".status3"
 
  1381 label *label600
  1382 label *label601
  1383 label *label602
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1384 sensor :depositItems:cap :mineOre:block @itemCapacity
  1385 label *label603
-    * ucontrol itemDrop :depositItems:block 30
+ 1386 ucontrol itemDrop :mineOre:block 30
  1387 label *label604
  1388 sensor *tmp439 @unit @firstItem
  1389 op mul *tmp440 *tmp439 :depositItems:cap
-    * sensor *tmp441 :depositItems:block :depositItems:item
+ 1390 sensor *tmp441 :mineOre:block :mineOre:ore
  1391 jump *label603 greaterThan *tmp440 *tmp441
  1392 label *label605
  1393 jump *label611 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   561 op land *tmp356 *tmp354 *tmp355
   562 jump *label435 notEqual *tmp356 false
   563 label *label439
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   564 label *label565
   565 label *label566
   566 write "Depositing..." .display ".status3"
 
  1353 jump *label353 lessThan *tmp457 :mineOre:amount
  1354 label *label355
  1355 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
  1356 label *label590
  1357 label *label591
  1358 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:147:13 (+10 instructions):
 
   500 jump *label158 greaterThanEq *tmp251 50
   501 set :supplyBlock:block .thoriumGenerator
   502 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label160 (h:*label160)
-    * call *label24 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
-    * label *label160
+  503 label *label615
+  504 label *label616
+  505 write "Supplying " .display ".status2"
+  506 write :supplyBlock:ore .display ".item2"
+  507 write :supplyBlock:block .display ".block2"
+  508 label *label617
+  509 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  510 sensor *tmp342 :supplyBlock:block :supplyBlock:ore
+  511 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
+  512 jump *label619 lessThanEq :supplyBlock:missing 0
+  513 set :mineOre:ore :supplyBlock:ore
+  514 set :mineOre:amount :supplyBlock:blockCapacity
+  515 set :mineOre:block :supplyBlock:block
+  516 setaddr :mineOre*retaddr *label618 (h:*label618)
+  517 call *label21 *invalid :mineOre*retval (m:*label618) (h:*label618)
+  518 label *label618
+  519 label *label619
+  520 label *label620
+  521 label *label621
   522 jump *label159 always
   523 label *label158
   524 label *label430

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   503 label *label615
   504 label *label616
   505 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  506 write @coal .display ".item2"
+  507 write .thoriumGenerator .display ".block2"
   508 label *label617
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp342 :supplyBlock:block :supplyBlock:ore
+  509 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  510 sensor *tmp342 .thoriumGenerator @coal
   511 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
   512 jump *label619 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  513 set :mineOre:ore @coal
   514 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  515 set :mineOre:block .thoriumGenerator
   516 setaddr :mineOre*retaddr *label618 (h:*label618)
   517 call *label21 *invalid :mineOre*retval (m:*label618) (h:*label618)
   518 label *label618

Modifications by Replicate loop condition at CoreBuilder.mnd:434:5 (+1 instructions):
 
   252 label *label94
   253 read *tmp102 .controller ".polys"
   254 jump *label96 greaterThanEq *tmp102 3
+  255 label *label622
   256 setaddr :supplyBase*retaddr *label97 (h:*label97)
   257 call *label33 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   258 label *label97
   259 label *label95
-    * jump *label94 always
+  260 read *tmp102 .controller ".polys"
+  261 jump *label622 lessThan *tmp102 3
   262 label *label96
   263 write 3 .controller ".flareTarget"
   264 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:439:5 (+1 instructions):
 
   266 label *label99
   267 read *tmp100 .controller ".flares"
   268 jump *label101 greaterThanEq *tmp100 2
+  269 label *label623
   270 setaddr :supplyBase*retaddr *label102 (h:*label102)
   271 call *label33 *invalid :supplyBase*retval (m:*label102) (h:*label102)
   272 label *label102
   273 label *label100
-    * jump *label99 always
+  274 read *tmp100 .controller ".flares"
+  275 jump *label623 lessThan *tmp100 2
   276 label *label101
   277 set .graphiteSurplus 100
   278 write 5 .controller ".monoTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:458:5 (+1 instructions):
 
   410 label *label126
   411 read *tmp102 .controller ".polys"
   412 jump *label128 greaterThanEq *tmp102 5
+  413 label *label624
   414 setaddr :supplyBase*retaddr *label129 (h:*label129)
   415 call *label33 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   416 label *label129
   417 label *label127
-    * jump *label126 always
+  418 read *tmp102 .controller ".polys"
+  419 jump *label624 lessThan *tmp102 5
   420 label *label128
   421 set :buildBlockFromCfg:cfg "2.2R"
   422 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:468:5 (+1 instructions):
 
   438 label *label134
   439 read *tmp103 .controller ".megas"
   440 jump *label136 greaterThanEq *tmp103 1
+  441 label *label625
   442 setaddr :supplyBase*retaddr *label137 (h:*label137)
   443 call *label33 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   444 label *label137
   445 label *label135
-    * jump *label134 always
+  446 read *tmp103 .controller ".megas"
+  447 jump *label625 lessThan *tmp103 1
   448 label *label136
   449 control enabled processor7 false
   450 control enabled processor8 false

Modifications by Inline function call at CoreBuilder.mnd:107:17 (+6 instructions):
 
   755 write "Goal 5: supplying generator" .display ".status1"
   756 label *label417
   757 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label202 (h:*label202)
-    * call *label22 *invalid :mineOre.1*retval (m:*label202) (h:*label202)
-    * label *label202
+  758 label *label626
+  759 label *label627
+  760 write "Mining " .display ".status2"
+  761 write :mineOre.1:ore .display ".item2"
+  762 write "core" .display ".block2"
+  763 label *label628
+  764 set :mineOre:ore :mineOre.1:ore
+  765 set :mineOre:amount 30
+  766 set :mineOre:block .core
+  767 setaddr :mineOre*retaddr *label629 (h:*label629)
+  768 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
+  769 label *label629
+  770 label *label630
   771 jump *label200 always
   772 label *label199
   773 sensor *tmp294 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   758 label *label626
   759 label *label627
   760 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  761 write @coal .display ".item2"
   762 write "core" .display ".block2"
   763 label *label628
-    * set :mineOre:ore :mineOre.1:ore
+  764 set :mineOre:ore @coal
   765 set :mineOre:amount 30
   766 set :mineOre:block .core
   767 setaddr :mineOre*retaddr *label629 (h:*label629)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   754 label *label416
   755 write "Goal 5: supplying generator" .display ".status1"
   756 label *label417
-    * set :mineOre.1:ore @coal
   757 label *label626
   758 label *label627
   759 write "Mining " .display ".status2"

Modifications by Inline function call at CoreBuilder.mnd:235:5 (+18 instructions):
 
   884 end
   885 label *label37
   886 set :unpackCfg:cfg :buildBlockFromCfg:cfg
-    * setaddr :unpackCfg*retaddr *label233 (h:*label233)
-    * call *label27 *invalid :unpackCfg*retval (m:*label233) (h:*label233)
-    * label *label233
+  887 label *label631
+  888 read *tmp358 :unpackCfg:cfg 0
+  889 op sub *tmp359 *tmp358 50
+  890 lookup block :unpackCfg:type *tmp359
+  891 read *tmp362 :unpackCfg:cfg 1
+  892 op sub *tmp363 *tmp362 50
+  893 op div :unpackCfg:x *tmp363 2
+  894 read *tmp366 :unpackCfg:cfg 2
+  895 op sub *tmp367 *tmp366 50
+  896 op div :unpackCfg:y *tmp367 2
+  897 read *tmp370 :unpackCfg:cfg 3
+  898 op sub :unpackCfg:rotation *tmp370 50
+  899 read *tmp373 :unpackCfg:cfg 4
+  900 op sub :unpackCfg:ind *tmp373 50
+  901 sensor :unpackCfg:cu :unpackCfg:type @copper
+  902 sensor :unpackCfg:pb :unpackCfg:type @lead
+  903 sensor :unpackCfg:gr :unpackCfg:type @graphite
+  904 sensor :unpackCfg:si :unpackCfg:type @silicon
+  905 sensor :unpackCfg:ti :unpackCfg:type @titanium
+  906 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+  907 sensor :unpackCfg:th :unpackCfg:type @thorium
+  908 label *label632
   909 op add *tmp317 .coreX :unpackCfg:x
   910 op add *tmp318 .coreY :unpackCfg:y
   911 set :buildBlock:block :unpackCfg:type

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   885 label *label37
   886 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   887 label *label631
-    * read *tmp358 :unpackCfg:cfg 0
+  888 read *tmp358 :buildBlockFromCfg:cfg 0
   889 op sub *tmp359 *tmp358 50
   890 lookup block :unpackCfg:type *tmp359
-    * read *tmp362 :unpackCfg:cfg 1
+  891 read *tmp362 :buildBlockFromCfg:cfg 1
   892 op sub *tmp363 *tmp362 50
   893 op div :unpackCfg:x *tmp363 2
-    * read *tmp366 :unpackCfg:cfg 2
+  894 read *tmp366 :buildBlockFromCfg:cfg 2
   895 op sub *tmp367 *tmp366 50
   896 op div :unpackCfg:y *tmp367 2
-    * read *tmp370 :unpackCfg:cfg 3
+  897 read *tmp370 :buildBlockFromCfg:cfg 3
   898 op sub :unpackCfg:rotation *tmp370 50
-    * read *tmp373 :unpackCfg:cfg 4
+  899 read *tmp373 :buildBlockFromCfg:cfg 4
   900 op sub :unpackCfg:ind *tmp373 50
   901 sensor :unpackCfg:cu :unpackCfg:type @copper
   902 sensor :unpackCfg:pb :unpackCfg:type @lead

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    91 read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
    92 jump *label59 equal *tmp159 false
    93 read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label53 always
    94 label *label53
    95 set .titaniumDrill *tmp142
    96 write *tmp142 processor1 ".titaniumDrill"
 
   742 sensor *tmp282 .core @titanium
   743 op sub *tmp283 .targetTitanium *tmp282
   744 op min *tmp281 7 *tmp283
-    * jump *label194 always
   745 label *label194
   746 sensor *tmp285 .titaniumDrill @titanium
   747 jump *label195 greaterThanEq *tmp285 *tmp281
 
   923 call *label35 *invalid :buildBlock*retval (m:*label234) (h:*label234)
   924 label *label234
   925 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label232 always
   926 label *label232
   927 return :buildBlockFromCfg*retaddr
   928 end
 
  1328 read *tmp426 .blockBuilder ":buildBlockAt*finished"
  1329 jump *label319 equal *tmp426 false
  1330 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label317 always
  1331 label *label317
  1332 return :buildBlock*retaddr
  1333 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
  1186 label *label34
  1187 label *label375
  1188 op sign *tmp384 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp384
+ 1189 set :meetTarget:count *tmp384
  1190 label *label376
  1191 label *label379
  1192 op sign *tmp384 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   774 label *label419
   775 sensor :supplyBase0:coal .core @coal
   776 sensor :supplyBase0:sand .core @sand
-    * select *tmp300 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * set :mineOre.1:ore *tmp300
+  777 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   778 setaddr :mineOre.1*retaddr *label208 (h:*label208)
   779 call *label22 *invalid :mineOre.1*retval (m:*label208) (h:*label208)
   780 label *label208
 
   818 label *label427
   819 sensor :supplyBase0:coal.1 .core @coal
   820 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp313 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.1:ore *tmp313
+  821 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   822 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   823 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   824 label *label224
 
  1183 end
  1184 label *label34
  1185 label *label375
-    * op sign *tmp384 :meetTarget:copper
-    * set :meetTarget:count *tmp384
+ 1186 op sign :meetTarget:count :meetTarget:copper
  1187 label *label376
  1188 label *label379
  1189 op sign *tmp384 :meetTarget:lead

Modifications by Inline function call at CoreBuilder.mnd:113:17 (+6 instructions):
 
   775 sensor :supplyBase0:coal .core @coal
   776 sensor :supplyBase0:sand .core @sand
   777 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * setaddr :mineOre.1*retaddr *label208 (h:*label208)
-    * call *label22 *invalid :mineOre.1*retval (m:*label208) (h:*label208)
-    * label *label208
+  778 label *label633
+  779 label *label634
+  780 write "Mining " .display ".status2"
+  781 write :mineOre.1:ore .display ".item2"
+  782 write "core" .display ".block2"
+  783 label *label635
+  784 set :mineOre:ore :mineOre.1:ore
+  785 set :mineOre:amount 30
+  786 set :mineOre:block .core
+  787 setaddr :mineOre*retaddr *label636 (h:*label636)
+  788 call *label21 *invalid :mineOre*retval (m:*label636) (h:*label636)
+  789 label *label636
+  790 label *label637
   791 jump *label204 always
   792 label *label203
   793 sensor *tmp301 .core @copper

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    21 ubind @poly
    22 set .builder @unit
    23 ulocate building core false @copper .coreX .coreY *tmp134 .core
-    * label *label45
    24 jump *label44 equal .core null
-    * label *label46
    25 set :buildBlockFromCfg.1:cfg "2-522"
    26 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    27 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
 
    73 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    74 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    75 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * label *label484
    76 set .ERROR "Cannot locate spot for titanium drill"
    77 stop
-    * label *label485
    78 label *label56
-    * label *label57
    79 write @pneumatic-drill processor1 ".nextBlock"
    80 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    81 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    86 read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
    87 jump *label59 equal *tmp159 false
    88 read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label53
    89 set .titaniumDrill *tmp142
    90 write *tmp142 processor1 ".titaniumDrill"
    91 set :buildBlockFromCfg.1:cfg "2629"
 
   134 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   135 write 1 .controller ".flareTarget"
   136 write 1 processor1 ".flareTarget"
-    * label *label67
   137 write 3 .controller ".monoTarget"
   138 write 3 processor1 ".monoTarget"
-    * label *label68
   139 write 85 .controller ".pressTarget"
   140 write 150 .controller ".smelterTarget"
   141 write 30 .controller ".kilnTarget"
 
   152 jump *label74 greaterThanEq *tmp168 300
   153 jump *label72 always
   154 label *label74
-    * label *label75
-    * label *label71
   155 read *tmp101 .controller ".monos"
   156 jump *label70 lessThan *tmp101 3
   157 label *label72
 
   216 set .metaglassSurplus 200
   217 write 6 .controller ".polyTarget"
   218 write 6 processor1 ".polyTarget"
-    * label *label88
   219 set :buildBlockFromCfg.1:cfg "4;12N"
   220 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
   221 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label89) (h:*label89)
 
   237 setaddr :buildUnits*retaddr *label93 (h:*label93)
   238 call *label40 *invalid :buildUnits*retval (m:*label93) (h:*label93)
   239 label *label93
-    * label *label94
   240 read *tmp102 .controller ".polys"
   241 jump *label96 greaterThanEq *tmp102 3
   242 label *label622
   243 setaddr :supplyBase*retaddr *label97 (h:*label97)
   244 call *label33 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   245 label *label97
-    * label *label95
   246 read *tmp102 .controller ".polys"
   247 jump *label622 lessThan *tmp102 3
   248 label *label96
   249 write 3 .controller ".flareTarget"
   250 write 3 processor1 ".flareTarget"
-    * label *label98
-    * label *label99
   251 read *tmp100 .controller ".flares"
   252 jump *label101 greaterThanEq *tmp100 2
   253 label *label623
   254 setaddr :supplyBase*retaddr *label102 (h:*label102)
   255 call *label33 *invalid :supplyBase*retval (m:*label102) (h:*label102)
   256 label *label102
-    * label *label100
   257 read *tmp100 .controller ".flares"
   258 jump *label623 lessThan *tmp100 2
   259 label *label101
   260 set .graphiteSurplus 100
   261 write 5 .controller ".monoTarget"
   262 write 5 processor1 ".monoTarget"
-    * label *label103
   263 write @ore-titanium processor1 ".nextBlock"
   264 ubind @flare
   265 read :blocksBuildTitaniumDrills:current processor4 ".locations"
 
   283 jump *label105 equal *tmp201 false
   284 write false processor4 ":stopLocation*finished"
   285 write 3 processor4 "@counter"
-    * label *label104
   286 write null processor1 ".nextBlock"
   287 write .coreX processor4 ":layoutThoriumDrill:x"
   288 write .coreY processor4 ":layoutThoriumDrill:y"
 
   304 jump *label109 equal *tmp208 false
   305 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   306 jump *label110 notEqual :buildThoriumDrill:result false
-    * label *label486
   307 set .ERROR "Cannot locate spot for thorium drill"
   308 stop
-    * label *label487
   309 label *label110
-    * label *label111
   310 write @laser-drill processor5 ":buildBlockAt:block"
   311 read *tmp56 processor4 ".drillX"
   312 write *tmp56 processor5 ":buildBlockAt:x"
 
   380 wait 1e-15
   381 read *tmp231 processor3 ":setThoriumContainer*finished"
   382 jump *label124 equal *tmp231 false
-    * label *label106
   383 write null processor1 ".nextBlock"
   384 write 1 .controller ".megaTarget"
   385 write 1 processor1 ".megaTarget"
-    * label *label125
-    * label *label126
   386 read *tmp102 .controller ".polys"
   387 jump *label128 greaterThanEq *tmp102 5
   388 label *label624
   389 setaddr :supplyBase*retaddr *label129 (h:*label129)
   390 call *label33 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   391 label *label129
-    * label *label127
   392 read *tmp102 .controller ".polys"
   393 jump *label624 lessThan *tmp102 5
   394 label *label128
 
   404 label *label132
   405 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   406 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
-    * label *label131
   407 set .metaglassSurplus 50
   408 setaddr :buildUnits*retaddr *label133 (h:*label133)
   409 call *label40 *invalid :buildUnits*retval (m:*label133) (h:*label133)
   410 label *label133
-    * label *label134
   411 read *tmp103 .controller ".megas"
   412 jump *label136 greaterThanEq *tmp103 1
   413 label *label625
   414 setaddr :supplyBase*retaddr *label137 (h:*label137)
   415 call *label33 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   416 label *label137
-    * label *label135
   417 read *tmp103 .controller ".megas"
   418 jump *label625 lessThan *tmp103 1
   419 label *label136
 
   459 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   460 call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   461 label *label149
-    * label *label144
   462 jump *label143 always
-    * label *label145
-    * label *label138
   463 end
   464 label *label33
   465 sensor *tmp244 .core @silicon
 
   467 op max *tmp246 0 *tmp245
   468 write *tmp246 processor8 ".sandTarget"
   469 jump *label152 equal .thoriumContainer false
-    * label *label404
   470 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label405
   471 sensor *tmp248 .thoriumBattery @totalPower
   472 jump *label156 greaterThanEq *tmp248 2000
   473 sensor *tmp251 .core @coal
   474 jump *label158 greaterThanEq *tmp251 50
   475 set :supplyBlock:block .thoriumGenerator
   476 set :supplyBlock:ore @coal
-    * label *label615
-    * label *label616
   477 write "Supplying " .display ".status2"
   478 write @coal .display ".item2"
   479 write .thoriumGenerator .display ".block2"
-    * label *label617
   480 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   481 sensor *tmp342 .thoriumGenerator @coal
   482 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
 
   488 call *label21 *invalid :mineOre*retval (m:*label618) (h:*label618)
   489 label *label618
   490 label *label619
-    * label *label620
-    * label *label621
   491 jump *label159 always
   492 label *label158
-    * label *label430
   493 sensor *tmp346 .thoriumGenerator @itemCapacity
   494 op min :transportStatus:target *tmp346 30
-    * label *label470
   495 write :transportStatus:target .display ".transportTarget"
   496 write @coal .display ".transportItem"
-    * label *label471
-    * label *label478
   497 write "Transferring " .display ".status2"
   498 write @coal .display ".item2"
   499 write .thoriumGenerator .display ".block2"
-    * label *label479
-    * label *label496
-    * label *label497
   500 write "Moving..." .display ".status3"
-    * label *label498
   501 label *label499
   502 sensor *tmp428 @unit @firstItem
   503 jump *label500 equal *tmp428 null
   504 ucontrol itemDrop @air 1000
   505 label *label500
-    * label *label501
   506 ucontrol approach .coreX .coreY 5.5
-    * label *label502
   507 ucontrol within .coreX .coreY 6 *tmp431
   508 jump *label499 equal *tmp431 false
-    * label *label503
-    * label *label504
-    * label *label523
-    * label *label524
   509 sensor *tmp433 @unit @firstItem
   510 jump *label527 equal *tmp433 null
   511 label *label525
   512 ucontrol itemDrop @air 1000
-    * label *label526
   513 sensor *tmp433 @unit @firstItem
   514 jump *label525 notEqual *tmp433 null
   515 label *label527
-    * label *label528
   516 label *label435
   517 ucontrol itemTake .core @coal 30
   518 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   522 jump *label436 equal *tmp351 false
   523 ucontrol itemDrop @air 1000
   524 label *label436
-    * label *label437
-    * label *label438
   525 sensor *tmp353 @unit @coal
   526 op lessThan *tmp354 *tmp353 30
   527 sensor *tmp355 .core @coal
   528 op land *tmp356 *tmp354 *tmp355
   529 jump *label435 notEqual *tmp356 false
-    * label *label439
-    * label *label565
-    * label *label566
   530 write "Depositing..." .display ".status3"
-    * label *label567
   531 sensor *tmp435 @unit @firstItem
   532 jump *label581 notEqual *tmp435 @coal
-    * label *label568
   533 sensor *tmp459 .thoriumGenerator @x
   534 sensor *tmp460 .thoriumGenerator @y
-    * label *label569
-    * label *label570
   535 write "Moving..." .display ".status3"
-    * label *label571
-    * label *label572
   536 ucontrol within *tmp459 *tmp460 6 *tmp465
   537 jump *label575 notEqual *tmp465 false
   538 label *label573
   539 ucontrol approach *tmp459 *tmp460 5.5
-    * label *label574
   540 ucontrol within *tmp459 *tmp460 6 *tmp465
   541 jump *label573 equal *tmp465 false
   542 label *label575
-    * label *label576
-    * label *label577
   543 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   544 label *label578
   545 ucontrol itemDrop .thoriumGenerator 30
-    * label *label579
   546 sensor *tmp439 @unit @firstItem
   547 op mul *tmp440 *tmp439 :depositItems:cap
   548 sensor *tmp441 .thoriumGenerator @coal
   549 jump *label578 greaterThan *tmp440 *tmp441
-    * label *label580
   550 jump *label586 always
   551 label *label581
-    * label *label582
   552 sensor *tmp443 @unit @firstItem
   553 jump *label585 equal *tmp443 null
   554 label *label583
   555 ucontrol itemDrop @air 1000
-    * label *label584
   556 sensor *tmp443 @unit @firstItem
   557 jump *label583 notEqual *tmp443 null
   558 label *label585
   559 label *label586
-    * label *label587
   560 write 0 .display ".transportTarget"
   561 write null .display ".transportItem"
-    * label *label588
-    * label *label589
-    * label *label441
   562 label *label159
   563 label *label156
-    * label *label157
   564 set :fetchBlock:block .thoriumContainer
   565 set :fetchBlock:item @thorium
   566 setaddr :fetchBlock*retaddr *label162 (h:*label162)
   567 call *label23 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   568 label *label162
-    * label *label154
   569 jump *label153 always
   570 label *label152
   571 read *tmp101 .controller ".monos"
   572 jump *label163 lessThanEq *tmp101 3
-    * label *label406
   573 write "Phase 1: supplying base" .display ".status1"
-    * label *label407
-    * label *label535
-    * label *label536
   574 write "Mining " .display ".status2"
   575 write @coal .display ".item2"
   576 write "core" .display ".block2"
-    * label *label537
   577 set :mineOre:ore @coal
   578 set :mineOre:amount 30
   579 set :mineOre:block .core
   580 setaddr :mineOre*retaddr *label538 (h:*label538)
   581 call *label21 *invalid :mineOre*retval (m:*label538) (h:*label538)
   582 label *label538
-    * label *label539
-    * label *label165
   583 jump *label164 always
   584 label *label163
   585 set :supplyBase0:supplied false
 
   588 jump *label171 greaterThanEq *tmp258 .targetGraphite
   589 sensor *tmp261 .press @coal
   590 jump *label173 greaterThanEq *tmp261 5
-    * label *label408
   591 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label409
   592 set :supplyBlock:block .press
   593 set :supplyBlock:ore @coal
   594 setaddr :supplyBlock*retaddr *label176 (h:*label176)
 
   596 label *label176
   597 set :supplyBase0:supplied true
   598 label *label173
-    * label *label174
   599 label *label171
-    * label *label172
   600 sensor *tmp264 .core @silicon
   601 jump *label177 greaterThanEq *tmp264 .targetSilicon
   602 sensor *tmp267 .smelter @coal
   603 jump *label179 greaterThanEq *tmp267 5
-    * label *label410
   604 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label411
   605 set :supplyBlock:block .smelter
   606 set :supplyBlock:ore @coal
   607 setaddr :supplyBlock*retaddr *label182 (h:*label182)
 
   612 label *label179
   613 sensor *tmp270 .smelter @sand
   614 jump *label183 greaterThanEq *tmp270 5
-    * label *label412
   615 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label413
   616 set :supplyBlock:block .smelter
   617 set :supplyBlock:ore @sand
   618 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   620 label *label186
   621 set :supplyBase0:supplied true
   622 label *label183
-    * label *label184
   623 label *label180
   624 label *label177
-    * label *label178
   625 sensor *tmp273 .battery @totalPower
   626 jump *label187 greaterThanEq *tmp273 .powerTarget
   627 sensor *tmp276 .generator @coal
   628 jump *label189 greaterThanEq *tmp276 2
-    * label *label414
   629 write "Goal 4: supplying generator" .display ".status1"
-    * label *label415
   630 set :supplyBlock:block .generator
   631 set :supplyBlock:ore @coal
   632 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   634 label *label192
   635 set :supplyBase0:supplied true
   636 label *label189
-    * label *label190
   637 label *label187
-    * label *label188
   638 label *label169
-    * label *label170
   639 set *tmp281 100
   640 sensor *tmp279 .core @titanium
   641 jump *label194 greaterThanEq *tmp279 .targetTitanium
 
   649 sensor *tmp290 .battery @totalPower
   650 op mul *tmp291 .unloader1 .powerTarget
   651 jump *label199 greaterThanEq *tmp290 *tmp291
-    * label *label416
   652 write "Goal 5: supplying generator" .display ".status1"
-    * label *label417
-    * label *label626
-    * label *label627
   653 write "Mining " .display ".status2"
   654 write @coal .display ".item2"
   655 write "core" .display ".block2"
-    * label *label628
   656 set :mineOre:ore @coal
   657 set :mineOre:amount 30
   658 set :mineOre:block .core
   659 setaddr :mineOre*retaddr *label629 (h:*label629)
   660 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
   661 label *label629
-    * label *label630
   662 jump *label200 always
   663 label *label199
   664 sensor *tmp294 .core @silicon
   665 jump *label203 greaterThanEq *tmp294 .targetSilicon
-    * label *label418
   666 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label419
   667 sensor :supplyBase0:coal .core @coal
   668 sensor :supplyBase0:sand .core @sand
   669 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * label *label633
-    * label *label634
   670 write "Mining " .display ".status2"
   671 write :mineOre.1:ore .display ".item2"
   672 write "core" .display ".block2"
-    * label *label635
   673 set :mineOre:ore :mineOre.1:ore
   674 set :mineOre:amount 30
   675 set :mineOre:block .core
   676 setaddr :mineOre*retaddr *label636 (h:*label636)
   677 call *label21 *invalid :mineOre*retval (m:*label636) (h:*label636)
   678 label *label636
-    * label *label637
   679 jump *label204 always
   680 label *label203
   681 sensor *tmp301 .core @copper
   682 jump *label209 greaterThanEq *tmp301 .targetCopper
-    * label *label420
   683 write "Goal 7: copper requirement" .display ".status1"
-    * label *label421
   684 set :mineOre.1:ore @copper
   685 setaddr :mineOre.1*retaddr *label212 (h:*label212)
   686 call *label22 *invalid :mineOre.1*retval (m:*label212) (h:*label212)
 
   689 label *label209
   690 sensor *tmp304 .core @lead
   691 jump *label213 greaterThanEq *tmp304 .targetLead
-    * label *label422
   692 write "Goal 8: lead requirement" .display ".status1"
-    * label *label423
   693 set :mineOre.1:ore @lead
   694 setaddr :mineOre.1*retaddr *label216 (h:*label216)
   695 call *label22 *invalid :mineOre.1*retval (m:*label216) (h:*label216)
 
   698 label *label213
   699 sensor *tmp307 .core @metaglass
   700 jump *label217 greaterThanEq *tmp307 .targetMetaglass
-    * label *label424
   701 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label425
   702 set :mineOre.1:ore @sand
   703 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   704 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   705 label *label220
   706 jump *label218 always
   707 label *label217
-    * label *label426
   708 write "Goal 10: supplying base" .display ".status1"
-    * label *label427
   709 sensor :supplyBase0:coal.1 .core @coal
   710 sensor :supplyBase0:sand.1 .core @sand
   711 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   718 label *label204
   719 label *label200
   720 label *label197
-    * label *label198
   721 jump *label196 always
   722 label *label195
-    * label *label428
   723 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label429
   724 set :fetchBlock:block .titaniumDrill
   725 set :fetchBlock:item @titanium
   726 setaddr :fetchBlock*retaddr *label226 (h:*label226)
   727 call *label23 *invalid :fetchBlock*retval (m:*label226) (h:*label226)
   728 label *label226
   729 label *label196
-    * label *label168
   730 label *label164
   731 label *label153
-    * label *label151
   732 return :supplyBase*retaddr
   733 end
   734 label *label36
 
   757 set :buildRemoteBlock*retval :buildBlock*retval
   758 jump *label227 always
   759 label *label228
-    * label *label229
   760 set :buildRemoteBlock*retval false
   761 jump *label227 always
   762 label *label227
 
   764 end
   765 label *label37
   766 set :unpackCfg:cfg :buildBlockFromCfg:cfg
-    * label *label631
   767 read *tmp358 :buildBlockFromCfg:cfg 0
   768 op sub *tmp359 *tmp358 50
   769 lookup block :unpackCfg:type *tmp359
 
   784 sensor :unpackCfg:ti :unpackCfg:type @titanium
   785 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   786 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label632
   787 op add *tmp317 .coreX :unpackCfg:x
   788 op add *tmp318 .coreY :unpackCfg:y
   789 set :buildBlock:block :unpackCfg:type
 
   803 call *label35 *invalid :buildBlock*retval (m:*label234) (h:*label234)
   804 label *label234
   805 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label232
   806 return :buildBlockFromCfg*retaddr
   807 end
   808 label *label38
 
   812 call *label37 *invalid :buildBlockFromCfg*retval (m:*label236) (h:*label236)
   813 label *label236
   814 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label235
   815 return :buildBlockFromCfg.1*retaddr
   816 end
   817 label *label39
 
   830 setaddr :meetTarget*retaddr *label239 (h:*label239)
   831 call *label34 *invalid :meetTarget*retval (m:*label239) (h:*label239)
   832 label *label239
-    * label *label237
   833 return :meetTarget.1*retaddr
   834 end
   835 label *label40
 
   849 write 0 .controller ".leadReserve"
   850 write 0 .controller ".siliconReserve"
   851 write 0 .controller ".graphiteReserve"
-    * label *label240
   852 return :buildUnits*retaddr
   853 end
   854 label *label41
   855 label *label243
   856 ubind :flagUnits:unit
   857 set :flagUnits:firstUnit @unit
-    * label *label244
   858 jump *label243 equal :flagUnits:firstUnit null
-    * label *label245
   859 set :flagUnits:x @thisx
   860 label *label246
   861 ucontrol flag :flagUnits:x
   862 op add :flagUnits:x :flagUnits:x 4
   863 ubind :flagUnits:unit
-    * label *label247
   864 jump *label246 notEqual @unit :flagUnits:firstUnit
-    * label *label248
-    * label *label242
   865 return :flagUnits*retaddr
   866 end
   867 label *label42
 
   875 jump *label253 equal *tmp324 false
   876 ucontrol stop
   877 label *label253
-    * label *label254
   878 ubind :lineUpUnits:unit
-    * label *label251
   879 jump *label250 notEqual @unit :lineUpUnits:firstUnit
-    * label *label252
-    * label *label249
   880 return :lineUpUnits*retaddr
   881 end
   882 label *label22
-    * label *label480
   883 write "Mining " .display ".status2"
   884 write :mineOre.1:ore .display ".item2"
   885 write "core" .display ".block2"
-    * label *label481
   886 set :mineOre:ore :mineOre.1:ore
   887 set :mineOre:amount 30
   888 set :mineOre:block .core
   889 setaddr :mineOre*retaddr *label258 (h:*label258)
   890 call *label21 *invalid :mineOre*retval (m:*label258) (h:*label258)
   891 label *label258
-    * label *label256
   892 return :mineOre.1*retaddr
   893 end
   894 label *label23
   895 sensor *tmp328 :fetchBlock:block @itemCapacity
   896 op min :transportStatus:target *tmp328 30
-    * label *label472
   897 write :transportStatus:target .display ".transportTarget"
   898 write :fetchBlock:item .display ".transportItem"
-    * label *label473
-    * label *label476
   899 write "Fetching " .display ".status2"
   900 write :fetchBlock:item .display ".item2"
   901 write :fetchBlock:block .display ".block2"
-    * label *label477
   902 sensor *tmp330 :fetchBlock:block @x
   903 sensor *tmp331 :fetchBlock:block @y
-    * label *label505
-    * label *label506
   904 write "Moving..." .display ".status3"
-    * label *label507
   905 label *label508
   906 sensor *tmp428 @unit @firstItem
   907 jump *label509 equal *tmp428 null
   908 ucontrol itemDrop @air 1000
   909 label *label509
-    * label *label510
   910 ucontrol approach *tmp330 *tmp331 5.5
-    * label *label511
   911 ucontrol within *tmp330 *tmp331 6 *tmp431
   912 jump *label508 equal *tmp431 false
-    * label *label512
-    * label *label513
-    * label *label490
-    * label *label491
   913 sensor *tmp433 @unit @firstItem
   914 jump *label494 equal *tmp433 null
   915 label *label492
   916 ucontrol itemDrop @air 1000
-    * label *label493
   917 sensor *tmp433 @unit @firstItem
   918 jump *label492 notEqual *tmp433 null
   919 label *label494
-    * label *label495
   920 label *label264
   921 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   922 sensor :fetchBlock:unitItem @unit @firstItem
 
   926 jump *label267 equal *tmp335 false
   927 ucontrol itemDrop @air 1000
   928 label *label267
-    * label *label268
-    * label *label265
   929 sensor *tmp337 @unit :fetchBlock:item
   930 op lessThan *tmp338 *tmp337 30
   931 sensor *tmp339 :fetchBlock:block :fetchBlock:item
   932 op land *tmp340 *tmp338 *tmp339
   933 jump *label264 notEqual *tmp340 false
-    * label *label266
-    * label *label540
-    * label *label541
   934 write "Depositing..." .display ".status3"
-    * label *label542
   935 sensor *tmp435 @unit @firstItem
   936 jump *label556 notEqual *tmp435 :fetchBlock:item
-    * label *label543
   937 sensor *tmp459 .core @x
   938 sensor *tmp460 .core @y
-    * label *label544
-    * label *label545
   939 write "Moving..." .display ".status3"
-    * label *label546
-    * label *label547
   940 ucontrol within *tmp459 *tmp460 6 *tmp465
   941 jump *label550 notEqual *tmp465 false
   942 label *label548
   943 ucontrol approach *tmp459 *tmp460 5.5
-    * label *label549
   944 ucontrol within *tmp459 *tmp460 6 *tmp465
   945 jump *label548 equal *tmp465 false
   946 label *label550
-    * label *label551
-    * label *label552
   947 sensor :depositItems:cap .core @itemCapacity
   948 label *label553
   949 ucontrol itemDrop .core 30
-    * label *label554
   950 sensor *tmp439 @unit @firstItem
   951 op mul *tmp440 *tmp439 :depositItems:cap
   952 sensor *tmp441 .core :fetchBlock:item
   953 jump *label553 greaterThan *tmp440 *tmp441
-    * label *label555
   954 jump *label561 always
   955 label *label556
-    * label *label557
   956 sensor *tmp443 @unit @firstItem
   957 jump *label560 equal *tmp443 null
   958 label *label558
   959 ucontrol itemDrop @air 1000
-    * label *label559
   960 sensor *tmp443 @unit @firstItem
   961 jump *label558 notEqual *tmp443 null
   962 label *label560
   963 label *label561
-    * label *label562
   964 write 0 .display ".transportTarget"
   965 write null .display ".transportItem"
-    * label *label563
-    * label *label564
-    * label *label259
   966 return :fetchBlock*retaddr
   967 end
   968 label *label24
-    * label *label482
   969 write "Supplying " .display ".status2"
   970 write :supplyBlock:ore .display ".item2"
   971 write :supplyBlock:block .display ".block2"
-    * label *label483
   972 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   973 sensor *tmp342 :supplyBlock:block :supplyBlock:ore
   974 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
 
   980 call *label21 *invalid :mineOre*retval (m:*label274) (h:*label274)
   981 label *label274
   982 label *label272
-    * label *label273
-    * label *label270
   983 return :supplyBlock*retaddr
   984 end
   985 label *label27
 
  1003 sensor :unpackCfg:ti :unpackCfg:type @titanium
  1004 sensor :unpackCfg:mg :unpackCfg:type @metaglass
  1005 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label286
  1006 return :unpackCfg*retaddr
  1007 end
  1008 label *label34
-    * label *label375
  1009 op sign :meetTarget:count :meetTarget:copper
-    * label *label376
-    * label *label379
  1010 op sign *tmp384 :meetTarget:lead
  1011 op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label380
-    * label *label383
  1012 op sign *tmp384 :meetTarget:graphite
  1013 op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label384
-    * label *label387
  1014 op sign *tmp384 :meetTarget:silicon
  1015 op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label388
-    * label *label391
  1016 op sign *tmp384 :meetTarget:titanium
  1017 op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label392
-    * label *label395
  1018 op sign *tmp384 :meetTarget:metaglass
  1019 op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label396
-    * label *label399
  1020 op sign *tmp384 :meetTarget:thorium
  1021 op add :meetTarget:count :meetTarget:count *tmp384
-    * label *label400
-    * label *label290
  1022 write :meetTarget:count .display ".totalTargets"
  1023 write :meetTarget:block .display ".nextBlock"
  1024 write :meetTarget:copper .display ".targetCopper"
 
  1059 set *tmp397 false
  1060 jump *label301 always
  1061 label *label302
-    * label *label303
  1062 sensor *tmp401 .core @lead
  1063 jump *label304 greaterThanEq *tmp401 .targetLead
  1064 set *tmp397 false
  1065 jump *label301 always
  1066 label *label304
-    * label *label305
  1067 sensor *tmp404 .core @graphite
  1068 jump *label306 greaterThanEq *tmp404 .targetGraphite
  1069 set *tmp397 false
  1070 jump *label301 always
  1071 label *label306
-    * label *label307
  1072 sensor *tmp407 .core @silicon
  1073 jump *label308 greaterThanEq *tmp407 .targetSilicon
  1074 set *tmp397 false
  1075 jump *label301 always
  1076 label *label308
-    * label *label309
  1077 sensor *tmp410 .core @titanium
  1078 jump *label310 greaterThanEq *tmp410 .targetTitanium
  1079 set *tmp397 false
  1080 jump *label301 always
  1081 label *label310
-    * label *label311
  1082 sensor *tmp413 .core @metaglass
  1083 jump *label312 greaterThanEq *tmp413 .targetMetaglass
  1084 set *tmp397 false
  1085 jump *label301 always
  1086 label *label312
-    * label *label313
  1087 sensor *tmp416 .core @thorium
  1088 jump *label314 greaterThanEq *tmp416 .targetThorium
  1089 set *tmp397 false
  1090 jump *label301 always
  1091 label *label314
-    * label *label315
  1092 set *tmp397 true
  1093 jump *label301 always
  1094 label *label301
 
  1096 setaddr :supplyBase*retaddr *label316 (h:*label316)
  1097 call *label33 *invalid :supplyBase*retval (m:*label316) (h:*label316)
  1098 label *label316
-    * label *label299
  1099 jump *label298 always
  1100 label *label300
-    * label *label287
  1101 return :meetTarget*retaddr
  1102 end
  1103 label *label35
 
  1125 read *tmp426 .blockBuilder ":buildBlockAt*finished"
  1126 jump *label319 equal *tmp426 false
  1127 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label317
  1128 return :buildBlock*retaddr
  1129 end
  1130 label *label21
  1131 op min :mineOre:amount :mineOre:amount 30
-    * label *label474
  1132 write :mineOre:amount .display ".transportTarget"
  1133 write :mineOre:ore .display ".transportItem"
-    * label *label475
-    * label *label453
  1134 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
  1135 jump *label455 notEqual *tmp461 false
-    * label *label488
  1136 set .ERROR "Cannot locate ore"
  1137 stop
-    * label *label489
  1138 label *label455
-    * label *label456
-    * label *label457
-    * label *label514
-    * label *label515
  1139 write "Moving..." .display ".status3"
-    * label *label516
  1140 label *label517
  1141 sensor *tmp428 @unit @firstItem
  1142 jump *label518 equal *tmp428 null
  1143 ucontrol itemDrop @air 1000
  1144 label *label518
-    * label *label519
  1145 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label520
  1146 ucontrol within :locateOre:x :locateOre:y 6 *tmp431
  1147 jump *label517 equal *tmp431 false
-    * label *label521
-    * label *label522
  1148 sensor *tmp446 @unit @firstItem
  1149 jump *label349 equal *tmp446 :mineOre:ore
-    * label *label529
-    * label *label530
  1150 sensor *tmp433 @unit @firstItem
  1151 jump *label533 equal *tmp433 null
  1152 label *label531
  1153 ucontrol itemDrop @air 1000
-    * label *label532
  1154 sensor *tmp433 @unit @firstItem
  1155 jump *label531 notEqual *tmp433 null
  1156 label *label533
-    * label *label534
  1157 label *label349
-    * label *label350
-    * label *label446
  1158 write "Mining..." .display ".status3"
-    * label *label447
  1159 op add :mineOre:stop @second 10
  1160 label *label353
  1161 sensor :mineOre:item @unit @firstItem
 
  1165 jump *label356 equal *tmp453 false
  1166 jump *label355 always
  1167 label *label356
-    * label *label357
  1168 ucontrol mine :locateOre:x :locateOre:y
  1169 jump *label358 lessThanEq @second :mineOre:stop
  1170 jump *label355 always
  1171 label *label358
-    * label *label359
-    * label *label354
  1172 sensor *tmp457 @unit @totalItems
  1173 jump *label353 lessThan *tmp457 :mineOre:amount
  1174 label *label355
  1175 ucontrol unbind
-    * label *label590
-    * label *label591
  1176 write "Depositing..." .display ".status3"
-    * label *label592
  1177 sensor *tmp435 @unit @firstItem
  1178 jump *label606 notEqual *tmp435 :mineOre:ore
-    * label *label593
  1179 sensor *tmp459 :mineOre:block @x
  1180 sensor *tmp460 :mineOre:block @y
-    * label *label594
-    * label *label595
  1181 write "Moving..." .display ".status3"
-    * label *label596
-    * label *label597
  1182 ucontrol within *tmp459 *tmp460 6 *tmp465
  1183 jump *label600 notEqual *tmp465 false
  1184 label *label598
  1185 ucontrol approach *tmp459 *tmp460 5.5
-    * label *label599
  1186 ucontrol within *tmp459 *tmp460 6 *tmp465
  1187 jump *label598 equal *tmp465 false
  1188 label *label600
-    * label *label601
-    * label *label602
  1189 sensor :depositItems:cap :mineOre:block @itemCapacity
  1190 label *label603
  1191 ucontrol itemDrop :mineOre:block 30
-    * label *label604
  1192 sensor *tmp439 @unit @firstItem
  1193 op mul *tmp440 *tmp439 :depositItems:cap
  1194 sensor *tmp441 :mineOre:block :mineOre:ore
  1195 jump *label603 greaterThan *tmp440 *tmp441
-    * label *label605
  1196 jump *label611 always
  1197 label *label606
-    * label *label607
  1198 sensor *tmp443 @unit @firstItem
  1199 jump *label610 equal *tmp443 null
  1200 label *label608
  1201 ucontrol itemDrop @air 1000
-    * label *label609
  1202 sensor *tmp443 @unit @firstItem
  1203 jump *label608 notEqual *tmp443 null
  1204 label *label610
  1205 label *label611
-    * label *label612
  1206 write 0 .display ".transportTarget"
  1207 write null .display ".transportItem"
-    * label *label613
-    * label *label614
-    * label *label345
  1208 return :mineOre*retaddr
  1209 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   149 call *label33 *invalid :supplyBase*retval (m:*label73) (h:*label73)
   150 label *label73
   151 sensor *tmp168 .battery @totalPower
-    * jump *label74 greaterThanEq *tmp168 300
-    * jump *label72 always
+  152 jump *label72 lessThan *tmp168 300
   153 label *label74
   154 read *tmp101 .controller ".monos"
   155 jump *label70 lessThan *tmp101 3
 
  1161 op notEqual *tmp451 :mineOre:item null
  1162 op notEqual *tmp452 :mineOre:item :mineOre:ore
  1163 op land *tmp453 *tmp451 *tmp452
-    * jump *label356 equal *tmp453 false
-    * jump *label355 always
+ 1164 jump *label355 notEqual *tmp453 false
  1165 label *label356
  1166 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label358 lessThanEq @second :mineOre:stop
-    * jump *label355 always
+ 1167 jump *label355 greaterThan @second :mineOre:stop
  1168 label *label358
  1169 sensor *tmp457 @unit @totalItems
  1170 jump *label353 lessThan *tmp457 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   150 label *label73
   151 sensor *tmp168 .battery @totalPower
   152 jump *label72 lessThan *tmp168 300
-    * label *label74
   153 read *tmp101 .controller ".monos"
   154 jump *label70 lessThan *tmp101 3
   155 label *label72
 
  1161 op notEqual *tmp452 :mineOre:item :mineOre:ore
  1162 op land *tmp453 *tmp451 *tmp452
  1163 jump *label355 notEqual *tmp453 false
-    * label *label356
  1164 ucontrol mine :locateOre:x :locateOre:y
  1165 jump *label355 greaterThan @second :mineOre:stop
-    * label *label358
  1166 sensor *tmp457 @unit @totalItems
  1167 jump *label353 lessThan *tmp457 :mineOre:amount
  1168 label *label355

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   454 label *label148
   455 op sub :lineUpUnits:y @thisy 18
   456 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label149 (h:*label149)
+  457 setaddr :lineUpUnits*retaddr *label143 (h:*label149)
   458 call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   459 label *label149
   460 jump *label143 always
 
   478 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   479 sensor *tmp342 .thoriumGenerator @coal
   480 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
-    * jump *label619 lessThanEq :supplyBlock:missing 0
+  481 jump *label159 lessThanEq :supplyBlock:missing 0
   482 set :mineOre:ore @coal
   483 set :mineOre:amount :supplyBlock:blockCapacity
   484 set :mineOre:block .thoriumGenerator
-    * setaddr :mineOre*retaddr *label618 (h:*label618)
+  485 setaddr :mineOre*retaddr *label159 (h:*label618)
   486 call *label21 *invalid :mineOre*retval (m:*label618) (h:*label618)
   487 label *label618
   488 label *label619
 
   564 setaddr :fetchBlock*retaddr *label162 (h:*label162)
   565 call *label23 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   566 label *label162
-    * jump *label153 always
+  567 return :supplyBase*retaddr
   568 label *label152
   569 read *tmp101 .controller ".monos"
   570 jump *label163 lessThanEq *tmp101 3
 
   578 setaddr :mineOre*retaddr *label538 (h:*label538)
   579 call *label21 *invalid :mineOre*retval (m:*label538) (h:*label538)
   580 label *label538
-    * jump *label164 always
+  581 return :supplyBase*retaddr
   582 label *label163
   583 set :supplyBase0:supplied false
   584 jump *label169 notEqual .unloader1 null
 
   643 label *label194
   644 sensor *tmp285 .titaniumDrill @titanium
   645 jump *label195 greaterThanEq *tmp285 *tmp281
-    * jump *label197 notEqual :supplyBase0:supplied false
+  646 jump *label196 notEqual :supplyBase0:supplied false
   647 sensor *tmp290 .battery @totalPower
   648 op mul *tmp291 .unloader1 .powerTarget
   649 jump *label199 greaterThanEq *tmp290 *tmp291
 
   657 setaddr :mineOre*retaddr *label629 (h:*label629)
   658 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
   659 label *label629
-    * jump *label200 always
+  660 return :supplyBase*retaddr
   661 label *label199
   662 sensor *tmp294 .core @silicon
   663 jump *label203 greaterThanEq *tmp294 .targetSilicon
 
   674 setaddr :mineOre*retaddr *label636 (h:*label636)
   675 call *label21 *invalid :mineOre*retval (m:*label636) (h:*label636)
   676 label *label636
-    * jump *label204 always
+  677 return :supplyBase*retaddr
   678 label *label203
   679 sensor *tmp301 .core @copper
   680 jump *label209 greaterThanEq *tmp301 .targetCopper
 
   683 setaddr :mineOre.1*retaddr *label212 (h:*label212)
   684 call *label22 *invalid :mineOre.1*retval (m:*label212) (h:*label212)
   685 label *label212
-    * jump *label210 always
+  686 return :supplyBase*retaddr
   687 label *label209
   688 sensor *tmp304 .core @lead
   689 jump *label213 greaterThanEq *tmp304 .targetLead
 
   692 setaddr :mineOre.1*retaddr *label216 (h:*label216)
   693 call *label22 *invalid :mineOre.1*retval (m:*label216) (h:*label216)
   694 label *label216
-    * jump *label214 always
+  695 return :supplyBase*retaddr
   696 label *label213
   697 sensor *tmp307 .core @metaglass
   698 jump *label217 greaterThanEq *tmp307 .targetMetaglass
 
   701 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   702 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   703 label *label220
-    * jump *label218 always
+  704 return :supplyBase*retaddr
   705 label *label217
   706 write "Goal 10: supplying base" .display ".status1"
   707 sensor :supplyBase0:coal.1 .core @coal
 
   716 label *label204
   717 label *label200
   718 label *label197
-    * jump *label196 always
+  719 return :supplyBase*retaddr
   720 label *label195
   721 write "Goal 11: Fetching titanium" .display ".status1"
   722 set :fetchBlock:block .titaniumDrill
 
   753 call *label35 *invalid :buildBlock*retval (m:*label231) (h:*label231)
   754 label *label231
   755 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label227 always
+  756 return :buildRemoteBlock*retaddr
   757 label *label228
   758 set :buildRemoteBlock*retval false
-    * jump *label227 always
+  759 return :buildRemoteBlock*retaddr
   760 label *label227
   761 return :buildRemoteBlock*retaddr
   762 end
 
  1091 jump *label301 always
  1092 label *label301
  1093 jump *label300 notEqual *tmp397 false
-    * setaddr :supplyBase*retaddr *label316 (h:*label316)
+ 1094 setaddr :supplyBase*retaddr *label298 (h:*label316)
  1095 call *label33 *invalid :supplyBase*retval (m:*label316) (h:*label316)
  1096 label *label316
  1097 jump *label298 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-20 instructions):
 
   456 set :lineUpUnits:unit @flare
   457 setaddr :lineUpUnits*retaddr *label143 (h:*label149)
   458 call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
-    * label *label149
-    * jump *label143 always
-    * end
   459 label *label33
   460 sensor *tmp244 .core @silicon
   461 op sub *tmp245 .targetSilicon *tmp244
 
   481 set :mineOre:block .thoriumGenerator
   482 setaddr :mineOre*retaddr *label159 (h:*label618)
   483 call *label21 *invalid :mineOre*retval (m:*label618) (h:*label618)
-    * label *label618
-    * label *label619
-    * jump *label159 always
   484 label *label158
   485 sensor *tmp346 .thoriumGenerator @itemCapacity
   486 op min :transportStatus:target *tmp346 30
 
   704 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   705 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   706 label *label224
-    * label *label218
-    * label *label214
-    * label *label210
-    * label *label204
-    * label *label200
-    * label *label197
   707 return :supplyBase*retaddr
   708 label *label195
   709 write "Goal 11: Fetching titanium" .display ".status1"
 
   713 call *label23 *invalid :fetchBlock*retval (m:*label226) (h:*label226)
   714 label *label226
   715 label *label196
-    * label *label164
-    * label *label153
   716 return :supplyBase*retaddr
-    * end
   717 label *label36
   718 op add *tmp314 :buildRemoteBlock:x :buildRemoteBlock:y
   719 jump *label228 lessThanEq *tmp314 0
 
   742 label *label228
   743 set :buildRemoteBlock*retval false
   744 return :buildRemoteBlock*retaddr
-    * label *label227
-    * return :buildRemoteBlock*retaddr
-    * end
   745 label *label37
   746 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   747 read *tmp358 :buildBlockFromCfg:cfg 0
 
   784 label *label234
   785 set :buildBlockFromCfg*retval :buildBlock*retval
   786 return :buildBlockFromCfg*retaddr
-    * end
   787 label *label38
   788 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   789 set :buildBlockFromCfg:config null
 
   792 label *label236
   793 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
   794 return :buildBlockFromCfg.1*retaddr
-    * end
   795 label *label39
   796 set :unpackCfg:cfg :meetTarget.1:cfg
   797 setaddr :unpackCfg*retaddr *label238 (h:*label238)
 
   809 call *label34 *invalid :meetTarget*retval (m:*label239) (h:*label239)
   810 label *label239
   811 return :meetTarget.1*retaddr
-    * end
   812 label *label40
   813 set :meetTarget:block 0
   814 set :meetTarget:copper 0
 
   827 write 0 .controller ".siliconReserve"
   828 write 0 .controller ".graphiteReserve"
   829 return :buildUnits*retaddr
-    * end
   830 label *label41
   831 label *label243
   832 ubind :flagUnits:unit
 
   839 ubind :flagUnits:unit
   840 jump *label246 notEqual @unit :flagUnits:firstUnit
   841 return :flagUnits*retaddr
-    * end
   842 label *label42
   843 ubind :lineUpUnits:unit
   844 set :lineUpUnits:firstUnit @unit
 
   853 ubind :lineUpUnits:unit
   854 jump *label250 notEqual @unit :lineUpUnits:firstUnit
   855 return :lineUpUnits*retaddr
-    * end
   856 label *label22
   857 write "Mining " .display ".status2"
   858 write :mineOre.1:ore .display ".item2"
 
   864 call *label21 *invalid :mineOre*retval (m:*label258) (h:*label258)
   865 label *label258
   866 return :mineOre.1*retaddr
-    * end
   867 label *label23
   868 sensor *tmp328 :fetchBlock:block @itemCapacity
   869 op min :transportStatus:target *tmp328 30
 
   937 write 0 .display ".transportTarget"
   938 write null .display ".transportItem"
   939 return :fetchBlock*retaddr
-    * end
   940 label *label24
   941 write "Supplying " .display ".status2"
   942 write :supplyBlock:ore .display ".item2"
 
   953 label *label274
   954 label *label272
   955 return :supplyBlock*retaddr
-    * end
   956 label *label27
   957 read *tmp358 :unpackCfg:cfg 0
   958 op sub *tmp359 *tmp358 50
 
   975 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   976 sensor :unpackCfg:th :unpackCfg:type @thorium
   977 return :unpackCfg*retaddr
-    * end
   978 label *label34
   979 op sign :meetTarget:count :meetTarget:copper
   980 op sign *tmp384 :meetTarget:lead
 
  1065 jump *label300 notEqual *tmp397 false
  1066 setaddr :supplyBase*retaddr *label298 (h:*label316)
  1067 call *label33 *invalid :supplyBase*retval (m:*label316) (h:*label316)
-    * label *label316
-    * jump *label298 always
  1068 label *label300
  1069 return :meetTarget*retaddr
-    * end
  1070 label *label35
  1071 set :meetTarget:block :buildBlock:block
  1072 set :meetTarget:copper :buildBlock:copper
 
  1093 jump *label319 equal *tmp426 false
  1094 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1095 return :buildBlock*retaddr
-    * end
  1096 label *label21
  1097 op min :mineOre:amount :mineOre:amount 30
  1098 write :mineOre:amount .display ".transportTarget"
 
  1168 write 0 .display ".transportTarget"
  1169 write null .display ".transportItem"
  1170 return :mineOre*retaddr
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    20 label *label44
    21 ubind @poly
    22 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp134 .core
+   23 ulocate building core false @copper .coreX .coreY 0 .core
    24 jump *label44 equal .core null
    25 set :buildBlockFromCfg.1:cfg "2-522"
    26 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
  1097 op min :mineOre:amount :mineOre:amount 30
  1098 write :mineOre:amount .display ".transportTarget"
  1099 write :mineOre:ore .display ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 *tmp462
+ 1100 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 0
  1101 jump *label455 notEqual *tmp461 false
  1102 set .ERROR "Cannot locate ore"
  1103 stop

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
        label *label43                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    3:  read *tmp114 processor8 "*signature"                         ...
    4:  jump *label43 notEqual *tmp114 "0:v1"                        ...
    5:  set .press null                                              CoreBuilder.mnd: var
    6:  set .generator null                                          ...
    7:  set .battery null                                            ...
    8:  set .smelter null                                            ...
    9:  set .titaniumDrill null                                      ...
   10:  set .unloader1 null                                          ...
   11:  set .thoriumBattery null                                     ...
   12:  set .thoriumContainer null                                   ...
   13:  set .thoriumGenerator null                                   ...
   14:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   15:  set .graphiteSurplus 20                                      ...
   16:  set .siliconSurplus 20                                       ...
   17:  set .metaglassSurplus 20                                     ...
   18:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label44                                               CoreBuilder.mnd: do
   19:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   20:  set .builder @unit                                           ...
   21:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   22:  jump *label44 equal .core null                               CoreBuilder.mnd: do
   23:  set :buildBlockFromCfg.1:cfg "2-522"                         CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   24:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   25:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   26:  set .press :buildBlockFromCfg.1*retval                       ...
   27:  set :buildBlockFromCfg.1:cfg "z2<23"                         CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   28:  setaddr :buildBlockFromCfg.1*retaddr *label48                ...
   29:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label48                                               ...
   30:  set .battery :buildBlockFromCfg.1*retval                     ...
   31:  set :buildBlockFromCfg.1:cfg "z4<24"                         CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   32:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   33:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   34:  set :buildBlockFromCfg.1:cfg "|2:25"                         CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   35:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   36:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   37:  set .generator :buildBlockFromCfg.1*retval                   ...
   38:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   39:  set :buildBlockFromCfg.1:cfg "45926"                         CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   40:  setaddr :buildBlockFromCfg.1*retaddr *label51                ...
   41:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label51                                               ...
   42:  set .smelter :buildBlockFromCfg.1*retval                     ...
   43:  set :buildBlockFromCfg.1:cfg "c4627"                         CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   44:  setaddr :buildBlockFromCfg.1*retaddr *label52                ...
   45:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label52                                               ...
   46:  set :meetTarget.1:cfg "2228"                                CoreBuilder.mnd: meetTarget(cfg);
   47:  setaddr :meetTarget.1*retaddr *label54                       ...
   48:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label54                                               ...
   49:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   50:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   51:  write .coreY processor4 ":findDrillLocation:y"               ...
   52:  write @unit processor4 ":findDrillLocation:unit"             ...
   53:  write @titanium processor4 ":findDrillLocation:item"         ...
   54:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   55:  write 2 processor4 ":findDrillLocation:size"                 ...
   56:  write 4 processor4 ":findDrillLocation:limit"                ...
   57:  write false processor4 ":findDrillLocation*finished"         ...
   58:  write 1 processor4 "@counter"                                ...
        label *label55                                               ...
   59:  wait 1e-15                                                   ...
   60:  read *tmp153 processor4 ":findDrillLocation*finished"        ...
   61:  jump *label55 equal *tmp153 false                            ...
   62:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   63:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   64:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   65:  jump *label56 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   66:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   67:  stop                                                         Actions.mnd: stopProcessor();
        label *label56                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   68:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   69:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   70:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   71:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   72:  write 2 processor5 "@counter"                                ...
        label *label59                                               ...
   73:  wait 1e-15                                                   ...
   74:  read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished ...
   75:  jump *label59 equal *tmp159 false                            ...
   76:  read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   77:  set .titaniumDrill *tmp142                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   78:  write *tmp142 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   79:  set :buildBlockFromCfg.1:cfg "2629"                         CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
   80:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   81:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   82:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
   83:  set :buildBlockFromCfg.1:cfg "c062:"                         CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   84:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   85:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   86:  set :buildBlockFromCfg.1:cfg "f282;"                         CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   87:  setaddr :buildBlockFromCfg.1*retaddr *label62                ...
   88:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label62                                               ...
   89:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   90:  set :buildBlockFromCfg:cfg "½..2<"                           CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   91:  set :buildBlockFromCfg:config processor2                     ...
   92:  setaddr :buildBlockFromCfg*retaddr *label63                  ...
   93:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label63                                               ...
   94:  set .controller :buildBlockFromCfg*retval                    ...
   95:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   96:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   97:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   98:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   99:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
  100:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
  101:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
  102:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  103:  write .unloader1 :buildBlockFromCfg*retval ".unloader1"      CoreBuilder.mnd: controller.unloader1 = unloader1;
  104:  set :buildBlockFromCfg.1:cfg "v.22="                         CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  105:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
  106:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
  107:  set :buildBlockFromCfg.1:cfg ".02>"                         CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  108:  setaddr :buildBlockFromCfg.1*retaddr *label65                ...
  109:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label65                                               ...
  110:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  111:  set :buildBlockFromCfg.1:cfg "¦*05?"                         CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  112:  setaddr :buildBlockFromCfg.1*retaddr *label66                ...
  113:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label66                                               ...
  114:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  115:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  116:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  117:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  118:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  119:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  120:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  121:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  122:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  123:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  124:  set .siliconSurplus 20                                       ...
  125:  setaddr :buildUnits*retaddr *label69                         CoreBuilder.mnd: buildUnits();
  126:  call *label40 *invalid :buildUnits*retval                    ...
        label *label69                                               ...
        label *label70                                               CoreBuilder.mnd: do
  127:  setaddr :supplyBase*retaddr *label73                         CoreBuilder.mnd: supplyBase();
  128:  call *label33 *invalid :supplyBase*retval                    ...
        label *label73                                               ...
  129:  sensor *tmp168 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  130:  jump *label72 lessThan *tmp168 300                           ...
  131:  read *tmp101 .controller ".monos"                            CoreBuilder.mnd: while controller.monos < 3;
  132:  jump *label70 lessThan *tmp101 3                             CoreBuilder.mnd: do
        label *label72                                               ...
  133:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  134:  set :buildBlockFromCfg.1:cfg "602@"                         CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  135:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  136:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  137:  set :buildBlockFromCfg.1:cfg "c622A"                         CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  138:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  139:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  140:  set :buildBlockFromCfg.1:cfg "6752B"                         CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  141:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  142:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  143:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  144:  set :buildBlockFromCfg.1:cfg ");2C"                         CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  145:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  146:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  147:  set :buildBlockFromCfg:cfg "*42D"                           CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3A, @coal);
  148:  set :buildBlockFromCfg:config @coal                          ...
  149:  setaddr :buildBlockFromCfg*retaddr *label80                  ...
  150:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label80                                               ...
  151:  set :buildBlockFromCfg.1:cfg "~)72E"                         CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  152:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  153:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  154:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  155:  set :buildBlockFromCfg.1:cfg "3.:2F"                         CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  156:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  157:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  158:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  159:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  160:  set :buildBlockFromCfg.1:cfg "¯**2G"                         CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  161:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  162:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  163:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  164:  set :buildBlockFromCfg.1:cfg "0.2H"                         CoreBuilder.mnd: controller.unloader4 = buildBlockFromCfg(UNLOADER4);
  165:  setaddr :buildBlockFromCfg.1*retaddr *label84                ...
  166:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label84                                               ...
  167:  write :buildBlockFromCfg.1*retval .controller ".unloader4"   ...
  168:  set :buildBlockFromCfg.1:cfg "¨0*2I"                         CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  169:  setaddr :buildBlockFromCfg.1*retaddr *label85                ...
  170:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label85                                               ...
  171:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  172:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  173:  set :buildBlockFromCfg.1:cfg "{<62J"                         CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  174:  setaddr :buildBlockFromCfg.1*retaddr *label86                ...
  175:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label86                                               ...
  176:  setaddr :buildUnits*retaddr *label87                         CoreBuilder.mnd: buildUnits();
  177:  call *label40 *invalid :buildUnits*retval                    ...
        label *label87                                               ...
  178:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  179:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  180:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  181:  write 6 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  182:  set :buildBlockFromCfg.1:cfg "4;12N"                         CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  183:  setaddr :buildBlockFromCfg.1*retaddr *label89                ...
  184:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label89                                               ...
  185:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  186:  set :buildBlockFromCfg.1:cfg "c822O"                         CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  187:  setaddr :buildBlockFromCfg.1*retaddr *label90                ...
  188:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label90                                               ...
  189:  set :buildBlockFromCfg.1:cfg "c802P"                         CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  190:  setaddr :buildBlockFromCfg.1*retaddr *label91                ...
  191:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label91                                               ...
  192:  set :buildBlockFromCfg:cfg "882Q"                           CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  193:  set :buildBlockFromCfg:config @sand                          ...
  194:  setaddr :buildBlockFromCfg*retaddr *label92                  ...
  195:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label92                                               ...
  196:  setaddr :buildUnits*retaddr *label93                         CoreBuilder.mnd: buildUnits();
  197:  call *label40 *invalid :buildUnits*retval                    ...
        label *label93                                               ...
  198:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  199:  jump *label96 greaterThanEq *tmp102 3                        ...
        label *label622                                              ...
  200:  setaddr :supplyBase*retaddr *label97                         CoreBuilder.mnd: supplyBase();
  201:  call *label33 *invalid :supplyBase*retval                    ...
        label *label97                                               ...
  202:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  203:  jump *label622 lessThan *tmp102 3                            ...
        label *label96                                               ...
  204:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  205:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  206:  read *tmp100 .controller ".flares"                           CoreBuilder.mnd: while controller.flares < 2 do
  207:  jump *label101 greaterThanEq *tmp100 2                       ...
        label *label623                                              ...
  208:  setaddr :supplyBase*retaddr *label102                        CoreBuilder.mnd: supplyBase();
  209:  call *label33 *invalid :supplyBase*retval                    ...
        label *label102                                              ...
  210:  read *tmp100 .controller ".flares"                           CoreBuilder.mnd: while controller.flares < 2 do
  211:  jump *label623 lessThan *tmp100 2                            ...
        label *label101                                              ...
  212:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  213:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  214:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  215:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  216:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  217:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  218:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  219:  write .coreY processor4 ":findDrillLocation:y"               ...
  220:  write @unit processor4 ":findDrillLocation:unit"             ...
  221:  write @titanium processor4 ":findDrillLocation:item"         ...
  222:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  223:  write 4 processor4 ":findDrillLocation:size"                 ...
  224:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  225:  write false processor4 ":findDrillLocation*finished"         ...
  226:  write 1 processor4 "@counter"                                ...
  227:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  228:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  229:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  230:  write false processor5 ":buildTitaniumDrills*finished"       ...
  231:  write 3 processor5 "@counter"                                ...
        label *label105                                              ...
  232:  wait 1e-15                                                   ...
  233:  read *tmp201 processor5 ":buildTitaniumDrills*finished"      ...
  234:  jump *label105 equal *tmp201 false                           ...
  235:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  236:  write 3 processor4 "@counter"                                ...
  237:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  238:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  239:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  240:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  241:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  242:  write false processor4 ":layoutThoriumDrill*finished"        ...
  243:  write 2 processor4 "@counter"                                ...
        label *label107                                              ...
  244:  wait 1e-15                                                   ...
  245:  read *tmp206 processor4 ":layoutThoriumDrill*finished"       ...
  246:  jump *label107 equal *tmp206 false                           ...
  247:  set :meetTarget.1:cfg "222K"                                CoreBuilder.mnd: meetTarget(LASER_DRILL);
  248:  setaddr :meetTarget.1*retaddr *label108                      ...
  249:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label108                                              ...
        label *label109                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  250:  wait 1e-15                                                   ...
  251:  read *tmp208 processor4 ":layoutThoriumDrill*finished"       ...
  252:  jump *label109 equal *tmp208 false                           ...
  253:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  254:  jump *label110 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  255:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  256:  stop                                                         Actions.mnd: stopProcessor();
        label *label110                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  257:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  258:  read *tmp56 processor4 ".drillX"                             ...
  259:  write *tmp56 processor5 ":buildBlockAt:x"                    ...
  260:  read *tmp57 processor4 ".drillY"                             ...
  261:  write *tmp57 processor5 ":buildBlockAt:y"                    ...
  262:  write null processor5 ":buildBlockAt:rotation"               ...
  263:  write 0 processor5 ":buildBlockAt:config"                    ...
  264:  write -1 processor5 ":buildBlockAt:index"                    ...
  265:  write false processor5 ":buildBlockAt*finished"              ...
  266:  write 1 processor5 "@counter"                                ...
        label *label113                                              ...
  267:  wait 1e-15                                                   ...
  268:  read *tmp218 processor5 ":buildBlockAt*finished"             ...
  269:  jump *label113 equal *tmp218 false                           ...
  270:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  271:  set :buildRemoteBlock:cfg ");2C"                            CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  272:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  273:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  274:  setaddr :buildRemoteBlock*retaddr *label114                  ...
  275:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label114                                              ...
  276:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  277:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  278:  setaddr :buildRemoteBlock*retaddr *label115                  ...
  279:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label115                                              ...
  280:  set :buildRemoteBlock:cfg "~)72E"                            CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  281:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  282:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  283:  setaddr :buildRemoteBlock*retaddr *label116                  ...
  284:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label116                                              ...
  285:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  286:  set :buildRemoteBlock:cfg "v.22="                            CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  287:  read :buildRemoteBlock:x processor4 ".node1X"                ...
  288:  read :buildRemoteBlock:y processor4 ".node1Y"                ...
  289:  setaddr :buildRemoteBlock*retaddr *label117                  ...
  290:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label117                                              ...
  291:  read :buildRemoteBlock:x processor4 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  292:  read :buildRemoteBlock:y processor4 ".node2Y"                ...
  293:  setaddr :buildRemoteBlock*retaddr *label118                  ...
  294:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label118                                              ...
  295:  set :buildRemoteBlock:cfg "222L"                            CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  296:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  297:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  298:  setaddr :buildRemoteBlock*retaddr *label119                  ...
  299:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label119                                              ...
  300:  set :buildRemoteBlock:cfg "z2<23"                            CoreBuilder.mnd: thoriumBattery = buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  301:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  302:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  303:  setaddr :buildRemoteBlock*retaddr *label120                  ...
  304:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label120                                              ...
  305:  set .thoriumBattery :buildRemoteBlock*retval                 ...
  306:  set :buildRemoteBlock:cfg "222M"                            CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  307:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  308:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  309:  setaddr :buildRemoteBlock*retaddr *label121                  ...
  310:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label121                                              ...
  311:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  312:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  313:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  314:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  315:  write false processor3 ":setThoriumContainer*finished"       ...
  316:  write 3 processor3 "@counter"                                ...
        label *label124                                              ...
  317:  wait 1e-15                                                   ...
  318:  read *tmp231 processor3 ":setThoriumContainer*finished"      ...
  319:  jump *label124 equal *tmp231 false                           ...
  320:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  321:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  322:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  323:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  324:  jump *label128 greaterThanEq *tmp102 5                       ...
        label *label624                                              ...
  325:  setaddr :supplyBase*retaddr *label129                        CoreBuilder.mnd: supplyBase();
  326:  call *label33 *invalid :supplyBase*retval                    ...
        label *label129                                              ...
  327:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  328:  jump *label624 lessThan *tmp102 5                            ...
        label *label128                                              ...
  329:  set :buildBlockFromCfg:cfg "2.2R"                           CoreBuilder.mnd: controller.unloader6 = buildBlockFromCfg(UNLOADER6, @silicon);
  330:  set :buildBlockFromCfg:config @silicon                       ...
  331:  setaddr :buildBlockFromCfg*retaddr *label130                 ...
  332:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label130                                              ...
  333:  write :buildBlockFromCfg*retval .controller ".unloader6"     ...
  334:  set :buildBlockFromCfg.1:cfg "©8*2S"                         CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  335:  setaddr :buildBlockFromCfg.1*retaddr *label132               ...
  336:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label132                                              ...
  337:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  338:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  339:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  340:  setaddr :buildUnits*retaddr *label133                        CoreBuilder.mnd: buildUnits();
  341:  call *label40 *invalid :buildUnits*retval                    ...
        label *label133                                              ...
  342:  read *tmp103 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  343:  jump *label136 greaterThanEq *tmp103 1                       ...
        label *label625                                              ...
  344:  setaddr :supplyBase*retaddr *label137                        CoreBuilder.mnd: supplyBase();
  345:  call *label33 *invalid :supplyBase*retval                    ...
        label *label137                                              ...
  346:  read *tmp103 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  347:  jump *label625 lessThan *tmp103 1                            ...
        label *label136                                              ...
  348:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  349:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  350:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  351:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  352:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  353:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  354:  setaddr :flagUnits*retaddr *label139                         ...
  355:  call *label41 *invalid :flagUnits*retval                     ...
        label *label139                                              ...
  356:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  357:  setaddr :flagUnits*retaddr *label140                         ...
  358:  call *label41 *invalid :flagUnits*retval                     ...
        label *label140                                              ...
  359:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  360:  setaddr :flagUnits*retaddr *label141                         ...
  361:  call *label41 *invalid :flagUnits*retval                     ...
        label *label141                                              ...
  362:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  363:  setaddr :flagUnits*retaddr *label142                         ...
  364:  call *label41 *invalid :flagUnits*retval                     ...
        label *label142                                              ...
        label *label143                                              CoreBuilder.mnd: while true do
  365:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  366:  set :lineUpUnits:unit @mega                                  ...
  367:  setaddr :lineUpUnits*retaddr *label146                       ...
  368:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label146                                              ...
  369:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  370:  set :lineUpUnits:unit @poly                                  ...
  371:  setaddr :lineUpUnits*retaddr *label147                       ...
  372:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label147                                              ...
  373:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  374:  set :lineUpUnits:unit @mono                                  ...
  375:  setaddr :lineUpUnits*retaddr *label148                       ...
  376:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label148                                              ...
  377:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  378:  set :lineUpUnits:unit @flare                                 ...
  379:  setaddr :lineUpUnits*retaddr *label143                       ...
  380:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label33                                               CoreBuilder.mnd: void supplyBase()
  381:  sensor *tmp244 .core @silicon                                CoreBuilder.mnd: monoController.sandTarget = max(0, targetSilicon - core.@silicon);
  382:  op sub *tmp245 .targetSilicon *tmp244                        ...
  383:  op max *tmp246 0 *tmp245                                     ...
  384:  write *tmp246 processor8 ".sandTarget"                       ...
  385:  jump *label152 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  386:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  387:  sensor *tmp248 .thoriumBattery @totalPower                   CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  388:  jump *label156 greaterThanEq *tmp248 2000                    ...
  389:  sensor *tmp251 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  390:  jump *label158 greaterThanEq *tmp251 50                      ...
  391:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  392:  set :supplyBlock:ore @coal                                   ...
  393:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  394:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  395:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  396:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  397:  sensor *tmp342 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  398:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  399:  jump *label159 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  400:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  401:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  402:  set :mineOre:block .thoriumGenerator                         ...
  403:  setaddr :mineOre*retaddr *label159                           ...
  404:  call *label21 *invalid :mineOre*retval                       ...
        label *label158                                              CoreBuilder.mnd: if core.@coal < 50 then
  405:  sensor *tmp346 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  406:  op min :transportStatus:target *tmp346 30                    ...
  407:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  408:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  409:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  410:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  411:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  412:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label499                                              Actions.mnd: do
  413:  sensor *tmp428 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  414:  jump *label500 equal *tmp428 null                            ...
  415:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label500                                              ...
  416:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  417:  ucontrol within .coreX .coreY 6 *tmp431 0                    Actions.mnd: while !within(x, y, RADIUS);
  418:  jump *label499 equal *tmp431 false                           Actions.mnd: do
  419:  sensor *tmp433 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  420:  jump *label527 equal *tmp433 null                            ...
        label *label525                                              ...
  421:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  422:  sensor *tmp433 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  423:  jump *label525 notEqual *tmp433 null                         ...
        label *label527                                              ...
        label *label435                                              Actions.mnd: do
  424:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  425:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  426:  op notEqual *tmp349 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  427:  op notEqual *tmp350 :supplyBlockFromCore:unitItem @coal      ...
  428:  op land *tmp351 *tmp349 *tmp350                              ...
  429:  jump *label436 equal *tmp351 false                           ...
  430:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label436                                              Actions.mnd: if unitItem != null and unitItem != item then
  431:  sensor *tmp353 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  432:  op lessThan *tmp354 *tmp353 30                               ...
  433:  sensor *tmp355 .core @coal                                   ...
  434:  op land *tmp356 *tmp354 *tmp355                              ...
  435:  jump *label435 notEqual *tmp356 false                        Actions.mnd: do
  436:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  437:  sensor *tmp435 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  438:  jump *label581 notEqual *tmp435 @coal                        ...
  439:  sensor *tmp459 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  440:  sensor *tmp460 .thoriumGenerator @y                          ...
  441:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  442:  ucontrol within *tmp459 *tmp460 6 *tmp465 0                  Actions.mnd: while !within(x, y, radius) do
  443:  jump *label575 notEqual *tmp465 false                        ...
        label *label573                                              ...
  444:  ucontrol approach *tmp459 *tmp460 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  445:  ucontrol within *tmp459 *tmp460 6 *tmp465 0                  Actions.mnd: while !within(x, y, radius) do
  446:  jump *label573 equal *tmp465 false                           ...
        label *label575                                              ...
  447:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label578                                              Actions.mnd: do
  448:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  449:  sensor *tmp439 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  450:  op mul *tmp440 *tmp439 :depositItems:cap                     ...
  451:  sensor *tmp441 .thoriumGenerator @coal                       ...
  452:  jump *label578 greaterThan *tmp440 *tmp441                   Actions.mnd: do
  453:  jump *label586 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label581                                              ...
  454:  sensor *tmp443 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  455:  jump *label585 equal *tmp443 null                            ...
        label *label583                                              ...
  456:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  457:  sensor *tmp443 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  458:  jump *label583 notEqual *tmp443 null                         ...
        label *label585                                              ...
        label *label586                                              Actions.mnd: if @unit.@firstItem == item then
  459:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  460:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label159                                              CoreBuilder.mnd: if core.@coal < 50 then
        label *label156                                              CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  461:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  462:  set :fetchBlock:item @thorium                                ...
  463:  setaddr :fetchBlock*retaddr *label162                        ...
  464:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label162                                              ...
  465:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label152                                              ...
  466:  read *tmp101 .controller ".monos"                            CoreBuilder.mnd: elsif controller.monos > 3 then
  467:  jump *label163 lessThanEq *tmp101 3                          ...
  468:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  469:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  470:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  471:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  472:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  473:  set :mineOre:amount 30                                       ...
  474:  set :mineOre:block .core                                     ...
  475:  setaddr :mineOre*retaddr *label538                           ...
  476:  call *label21 *invalid :mineOre*retval                       ...
        label *label538                                              ...
  477:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label163                                              ...
  478:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  479:  jump *label169 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  480:  sensor *tmp258 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  481:  jump *label171 greaterThanEq *tmp258 .targetGraphite         ...
  482:  sensor *tmp261 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  483:  jump *label173 greaterThanEq *tmp261 5                       ...
  484:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  485:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  486:  set :supplyBlock:ore @coal                                   ...
  487:  setaddr :supplyBlock*retaddr *label176                       ...
  488:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label176                                              ...
  489:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label173                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label171                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  490:  sensor *tmp264 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  491:  jump *label177 greaterThanEq *tmp264 .targetSilicon          ...
  492:  sensor *tmp267 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  493:  jump *label179 greaterThanEq *tmp267 5                       ...
  494:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  495:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  496:  set :supplyBlock:ore @coal                                   ...
  497:  setaddr :supplyBlock*retaddr *label182                       ...
  498:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label182                                              ...
  499:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  500:  jump *label180 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label179                                              ...
  501:  sensor *tmp270 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  502:  jump *label183 greaterThanEq *tmp270 5                       ...
  503:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  504:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  505:  set :supplyBlock:ore @sand                                   ...
  506:  setaddr :supplyBlock*retaddr *label186                       ...
  507:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label186                                              ...
  508:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label183                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label180                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label177                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  509:  sensor *tmp273 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  510:  jump *label187 greaterThanEq *tmp273 .powerTarget            ...
  511:  sensor *tmp276 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  512:  jump *label189 greaterThanEq *tmp276 2                       ...
  513:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  514:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  515:  set :supplyBlock:ore @coal                                   ...
  516:  setaddr :supplyBlock*retaddr *label192                       ...
  517:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label192                                              ...
  518:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label189                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label187                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label169                                              CoreBuilder.mnd: if unloader1 == null then
  519:  set *tmp281 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  520:  sensor *tmp279 .core @titanium                               ...
  521:  jump *label194 greaterThanEq *tmp279 .targetTitanium         ...
  522:  sensor *tmp282 .core @titanium                               ...
  523:  op sub *tmp283 .targetTitanium *tmp282                       ...
  524:  op min *tmp281 7 *tmp283                                     ...
        label *label194                                              ...
  525:  sensor *tmp285 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  526:  jump *label195 greaterThanEq *tmp285 *tmp281                 ...
  527:  jump *label196 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  528:  sensor *tmp290 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  529:  op mul *tmp291 .unloader1 .powerTarget                       ...
  530:  jump *label199 greaterThanEq *tmp290 *tmp291                 ...
  531:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  532:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  533:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  534:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  535:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  536:  set :mineOre:amount 30                                       ...
  537:  set :mineOre:block .core                                     ...
  538:  setaddr :mineOre*retaddr *label629                           ...
  539:  call *label21 *invalid :mineOre*retval                       ...
        label *label629                                              ...
  540:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label199                                              ...
  541:  sensor *tmp294 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  542:  jump *label203 greaterThanEq *tmp294 .targetSilicon          ...
  543:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  544:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  545:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  546:  select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  547:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  548:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  549:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  550:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  551:  set :mineOre:amount 30                                       ...
  552:  set :mineOre:block .core                                     ...
  553:  setaddr :mineOre*retaddr *label636                           ...
  554:  call *label21 *invalid :mineOre*retval                       ...
        label *label636                                              ...
  555:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label203                                              ...
  556:  sensor *tmp301 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  557:  jump *label209 greaterThanEq *tmp301 .targetCopper           ...
  558:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  559:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  560:  setaddr :mineOre.1*retaddr *label212                         ...
  561:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label212                                              ...
  562:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label209                                              ...
  563:  sensor *tmp304 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  564:  jump *label213 greaterThanEq *tmp304 .targetLead             ...
  565:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  566:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  567:  setaddr :mineOre.1*retaddr *label216                         ...
  568:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label216                                              ...
  569:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label213                                              ...
  570:  sensor *tmp307 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  571:  jump *label217 greaterThanEq *tmp307 .targetMetaglass        ...
  572:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  573:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  574:  setaddr :mineOre.1*retaddr *label220                         ...
  575:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label220                                              ...
  576:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label217                                              ...
  577:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  578:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  579:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  580:  select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supply CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  581:  setaddr :mineOre.1*retaddr *label224                         CoreBuilder.mnd: mineOre(ore);
  582:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label224                                              ...
  583:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label195                                              ...
  584:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  585:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  586:  set :fetchBlock:item @titanium                               ...
  587:  setaddr :fetchBlock*retaddr *label226                        ...
  588:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label226                                              ...
        label *label196                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  589:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label36                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  590:  op add *tmp314 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  591:  jump *label228 lessThanEq *tmp314 0                          ...
  592:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  593:  setaddr :unpackCfg*retaddr *label230                         ...
  594:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label230                                              ...
  595:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  596:  set :buildBlock:x :buildRemoteBlock:x                        ...
  597:  set :buildBlock:y :buildRemoteBlock:y                        ...
  598:  set :buildBlock:copper :unpackCfg:cu                         ...
  599:  set :buildBlock:lead :unpackCfg:pb                           ...
  600:  set :buildBlock:graphite :unpackCfg:gr                       ...
  601:  set :buildBlock:silicon :unpackCfg:si                        ...
  602:  set :buildBlock:titanium :unpackCfg:ti                       ...
  603:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  604:  set :buildBlock:thorium :unpackCfg:th                        ...
  605:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  606:  set :buildBlock:config null                                  ...
  607:  set :buildBlock:index :unpackCfg:ind                         ...
  608:  setaddr :buildBlock*retaddr *label231                        ...
  609:  call *label35 *invalid :buildBlock*retval                    ...
        label *label231                                              ...
  610:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  611:  return :buildRemoteBlock*retaddr                             ...
        label *label228                                              CoreBuilder.mnd: if x + y > 0 then
  612:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  613:  return :buildRemoteBlock*retaddr                             ...
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  614:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  615:  read *tmp358 :buildBlockFromCfg:cfg 0                        Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  616:  op sub *tmp359 *tmp358 50                                    ...
  617:  lookup block :unpackCfg:type *tmp359                         ...
  618:  read *tmp362 :buildBlockFromCfg:cfg 1                        Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  619:  op sub *tmp363 *tmp362 50                                    ...
  620:  op div :unpackCfg:x *tmp363 2                                ...
  621:  read *tmp366 :buildBlockFromCfg:cfg 2                        Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  622:  op sub *tmp367 *tmp366 50                                    ...
  623:  op div :unpackCfg:y *tmp367 2                                ...
  624:  read *tmp370 :buildBlockFromCfg:cfg 3                        Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  625:  op sub :unpackCfg:rotation *tmp370 50                        ...
  626:  read *tmp373 :buildBlockFromCfg:cfg 4                        Common.mnd: ind = char(cfg, index++) - _Common_offset;
  627:  op sub :unpackCfg:ind *tmp373 50                             ...
  628:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  629:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  630:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  631:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  632:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  633:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  634:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  635:  op add *tmp317 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  636:  op add *tmp318 .coreY :unpackCfg:y                           ...
  637:  set :buildBlock:block :unpackCfg:type                        ...
  638:  set :buildBlock:x *tmp317                                    ...
  639:  set :buildBlock:y *tmp318                                    ...
  640:  set :buildBlock:copper :unpackCfg:cu                         ...
  641:  set :buildBlock:lead :unpackCfg:pb                           ...
  642:  set :buildBlock:graphite :unpackCfg:gr                       ...
  643:  set :buildBlock:silicon :unpackCfg:si                        ...
  644:  set :buildBlock:titanium :unpackCfg:ti                       ...
  645:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  646:  set :buildBlock:thorium :unpackCfg:th                        ...
  647:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  648:  set :buildBlock:config :buildBlockFromCfg:config             ...
  649:  set :buildBlock:index :unpackCfg:ind                         ...
  650:  setaddr :buildBlock*retaddr *label234                        ...
  651:  call *label35 *invalid :buildBlock*retval                    ...
        label *label234                                              ...
  652:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  653:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label38                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  654:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  655:  set :buildBlockFromCfg:config null                           ...
  656:  setaddr :buildBlockFromCfg*retaddr *label236                 ...
  657:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label236                                              ...
  658:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  659:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label39                                               CoreBuilder.mnd: void meetTarget(cfg)
  660:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  661:  setaddr :unpackCfg*retaddr *label238                         ...
  662:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label238                                              ...
  663:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  664:  set :meetTarget:copper :unpackCfg:cu                         ...
  665:  set :meetTarget:lead :unpackCfg:pb                           ...
  666:  set :meetTarget:graphite :unpackCfg:gr                       ...
  667:  set :meetTarget:silicon :unpackCfg:si                        ...
  668:  set :meetTarget:titanium :unpackCfg:ti                       ...
  669:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  670:  set :meetTarget:thorium :unpackCfg:th                        ...
  671:  setaddr :meetTarget*retaddr *label239                        ...
  672:  call *label34 *invalid :meetTarget*retval                    ...
        label *label239                                              ...
  673:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label40                                               CoreBuilder.mnd: void buildUnits()
  674:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  675:  set :meetTarget:copper 0                                     ...
  676:  set :meetTarget:lead 0                                       ...
  677:  set :meetTarget:graphite 0                                   ...
  678:  set :meetTarget:silicon 0                                    ...
  679:  set :meetTarget:titanium 0                                   ...
  680:  set :meetTarget:metaglass 0                                  ...
  681:  set :meetTarget:thorium 0                                    ...
  682:  setaddr :meetTarget*retaddr *label241                        ...
  683:  call *label34 *invalid :meetTarget*retval                    ...
        label *label241                                              ...
  684:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  685:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  686:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  687:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  688:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  689:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label41                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label243                                              CoreBuilder.mnd: do
  690:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  691:  set :flagUnits:firstUnit @unit                               ...
  692:  jump *label243 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  693:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label246                                              CoreBuilder.mnd: do
  694:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  695:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  696:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  697:  jump *label246 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  698:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label42                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  699:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  700:  set :lineUpUnits:firstUnit @unit                             ...
        label *label250                                              CoreBuilder.mnd: do
  701:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  702:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  703:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  704:  sensor *tmp324 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  705:  jump *label253 equal *tmp324 false                           ...
  706:  ucontrol stop 0 0 0 0 0                                      ...
        label *label253                                              ...
  707:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  708:  jump *label250 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  709:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)
        label *label22                                               Actions.mnd: void mineOre(ore)
  710:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  711:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  712:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  713:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  714:  set :mineOre:amount 30                                       ...
  715:  set :mineOre:block .core                                     ...
  716:  setaddr :mineOre*retaddr *label258                           ...
  717:  call *label21 *invalid :mineOre*retval                       ...
        label *label258                                              ...
  718:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  719:  sensor *tmp328 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  720:  op min :transportStatus:target *tmp328 30                    ...
  721:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  722:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  723:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  724:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  725:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  726:  sensor *tmp330 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  727:  sensor *tmp331 :fetchBlock:block @y                          ...
  728:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label508                                              Actions.mnd: do
  729:  sensor *tmp428 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  730:  jump *label509 equal *tmp428 null                            ...
  731:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label509                                              ...
  732:  ucontrol approach *tmp330 *tmp331 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  733:  ucontrol within *tmp330 *tmp331 6 *tmp431 0                  Actions.mnd: while !within(x, y, RADIUS);
  734:  jump *label508 equal *tmp431 false                           Actions.mnd: do
  735:  sensor *tmp433 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  736:  jump *label494 equal *tmp433 null                            ...
        label *label492                                              ...
  737:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  738:  sensor *tmp433 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  739:  jump *label492 notEqual *tmp433 null                         ...
        label *label494                                              ...
        label *label264                                              Actions.mnd: do
  740:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  741:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  742:  op notEqual *tmp333 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  743:  op notEqual *tmp334 :fetchBlock:unitItem :fetchBlock:item    ...
  744:  op land *tmp335 *tmp333 *tmp334                              ...
  745:  jump *label267 equal *tmp335 false                           ...
  746:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label267                                              Actions.mnd: if unitItem != null and unitItem != item then
  747:  sensor *tmp337 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  748:  op lessThan *tmp338 *tmp337 30                               ...
  749:  sensor *tmp339 :fetchBlock:block :fetchBlock:item            ...
  750:  op land *tmp340 *tmp338 *tmp339                              ...
  751:  jump *label264 notEqual *tmp340 false                        Actions.mnd: do
  752:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  753:  sensor *tmp435 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  754:  jump *label556 notEqual *tmp435 :fetchBlock:item             ...
  755:  sensor *tmp459 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  756:  sensor *tmp460 .core @y                                      ...
  757:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  758:  ucontrol within *tmp459 *tmp460 6 *tmp465 0                  Actions.mnd: while !within(x, y, radius) do
  759:  jump *label550 notEqual *tmp465 false                        ...
        label *label548                                              ...
  760:  ucontrol approach *tmp459 *tmp460 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  761:  ucontrol within *tmp459 *tmp460 6 *tmp465 0                  Actions.mnd: while !within(x, y, radius) do
  762:  jump *label548 equal *tmp465 false                           ...
        label *label550                                              ...
  763:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label553                                              Actions.mnd: do
  764:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  765:  sensor *tmp439 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  766:  op mul *tmp440 *tmp439 :depositItems:cap                     ...
  767:  sensor *tmp441 .core :fetchBlock:item                        ...
  768:  jump *label553 greaterThan *tmp440 *tmp441                   Actions.mnd: do
  769:  jump *label561 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label556                                              ...
  770:  sensor *tmp443 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  771:  jump *label560 equal *tmp443 null                            ...
        label *label558                                              ...
  772:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  773:  sensor *tmp443 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  774:  jump *label558 notEqual *tmp443 null                         ...
        label *label560                                              ...
        label *label561                                              Actions.mnd: if @unit.@firstItem == item then
  775:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  776:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  777:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  778:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  779:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  780:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  781:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  782:  sensor *tmp342 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  783:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  784:  jump *label272 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  785:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  786:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  787:  set :mineOre:block :supplyBlock:block                        ...
  788:  setaddr :mineOre*retaddr *label274                           ...
  789:  call *label21 *invalid :mineOre*retval                       ...
        label *label274                                              ...
        label *label272                                              Actions.mnd: if missing > 0 then
  790:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  791:  read *tmp358 :unpackCfg:cfg 0                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  792:  op sub *tmp359 *tmp358 50                                    ...
  793:  lookup block :unpackCfg:type *tmp359                         ...
  794:  read *tmp362 :unpackCfg:cfg 1                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  795:  op sub *tmp363 *tmp362 50                                    ...
  796:  op div :unpackCfg:x *tmp363 2                                ...
  797:  read *tmp366 :unpackCfg:cfg 2                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  798:  op sub *tmp367 *tmp366 50                                    ...
  799:  op div :unpackCfg:y *tmp367 2                                ...
  800:  read *tmp370 :unpackCfg:cfg 3                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  801:  op sub :unpackCfg:rotation *tmp370 50                        ...
  802:  read *tmp373 :unpackCfg:cfg 4                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  803:  op sub :unpackCfg:ind *tmp373 50                             ...
  804:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  805:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  806:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  807:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  808:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  809:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  810:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  811:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label34                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  812:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  813:  op sign *tmp384 :meetTarget:lead 0                           ...
  814:  op add :meetTarget:count :meetTarget:count *tmp384           ...
  815:  op sign *tmp384 :meetTarget:graphite 0                       ...
  816:  op add :meetTarget:count :meetTarget:count *tmp384           ...
  817:  op sign *tmp384 :meetTarget:silicon 0                        ...
  818:  op add :meetTarget:count :meetTarget:count *tmp384           ...
  819:  op sign *tmp384 :meetTarget:titanium 0                       ...
  820:  op add :meetTarget:count :meetTarget:count *tmp384           ...
  821:  op sign *tmp384 :meetTarget:metaglass 0                      ...
  822:  op add :meetTarget:count :meetTarget:count *tmp384           ...
  823:  op sign *tmp384 :meetTarget:thorium 0                        ...
  824:  op add :meetTarget:count :meetTarget:count *tmp384           ...
  825:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  826:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  827:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  828:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  829:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  830:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  831:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  832:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  833:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  834:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  835:  op add *tmp385 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  836:  op add .targetLead *tmp385 1                                 ...
  837:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  838:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  839:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  840:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  841:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  842:  op add *tmp387 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  843:  write *tmp387 .controller ".pressTarget"                     ...
  844:  op add *tmp388 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  845:  write *tmp388 .controller ".smelterTarget"                   ...
  846:  op add *tmp389 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  847:  write *tmp389 .controller ".kilnTarget"                      ...
  848:  write *tmp385 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  849:  op sign *tmp391 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  850:  op mul *tmp392 *tmp391 20                                    ...
  851:  op add *tmp393 :meetTarget:silicon *tmp392                   ...
  852:  write *tmp393 .controller ".siliconReserve"                  ...
  853:  op sign *tmp394 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  854:  op mul *tmp395 *tmp394 20                                    ...
  855:  op add *tmp396 :meetTarget:graphite *tmp395                  ...
  856:  write *tmp396 .controller ".graphiteReserve"                 ...
  857:  write .targetLead processor8 ".leadTarget"                   CoreBuilder.mnd: monoController.leadTarget = targetLead;
  858:  write :meetTarget:copper processor8 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
        label *label298                                              CoreBuilder.mnd: while !targetMet() do
  859:  sensor *tmp398 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  860:  jump *label302 greaterThanEq *tmp398 .targetCopper           ...
  861:  set *tmp397 false                                            ...
  862:  jump *label301 always 0 0                                    ...
        label *label302                                              ...
  863:  sensor *tmp401 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  864:  jump *label304 greaterThanEq *tmp401 .targetLead             ...
  865:  set *tmp397 false                                            ...
  866:  jump *label301 always 0 0                                    ...
        label *label304                                              ...
  867:  sensor *tmp404 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  868:  jump *label306 greaterThanEq *tmp404 .targetGraphite         ...
  869:  set *tmp397 false                                            ...
  870:  jump *label301 always 0 0                                    ...
        label *label306                                              ...
  871:  sensor *tmp407 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  872:  jump *label308 greaterThanEq *tmp407 .targetSilicon          ...
  873:  set *tmp397 false                                            ...
  874:  jump *label301 always 0 0                                    ...
        label *label308                                              ...
  875:  sensor *tmp410 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  876:  jump *label310 greaterThanEq *tmp410 .targetTitanium         ...
  877:  set *tmp397 false                                            ...
  878:  jump *label301 always 0 0                                    ...
        label *label310                                              ...
  879:  sensor *tmp413 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  880:  jump *label312 greaterThanEq *tmp413 .targetMetaglass        ...
  881:  set *tmp397 false                                            ...
  882:  jump *label301 always 0 0                                    ...
        label *label312                                              ...
  883:  sensor *tmp416 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  884:  jump *label314 greaterThanEq *tmp416 .targetThorium          ...
  885:  set *tmp397 false                                            ...
  886:  jump *label301 always 0 0                                    ...
        label *label314                                              ...
  887:  set *tmp397 true                                             CoreBuilder.mnd: return true;
  888:  jump *label301 always 0 0                                    ...
        label *label301                                              CoreBuilder.mnd: while !targetMet() do
  889:  jump *label300 notEqual *tmp397 false                        ...
  890:  setaddr :supplyBase*retaddr *label298                        CoreBuilder.mnd: supplyBase();
  891:  call *label33 *invalid :supplyBase*retval                    ...
        label *label300                                              CoreBuilder.mnd: while !targetMet() do
  892:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label35                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  893:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  894:  set :meetTarget:copper :buildBlock:copper                    ...
  895:  set :meetTarget:lead :buildBlock:lead                        ...
  896:  set :meetTarget:graphite :buildBlock:graphite                ...
  897:  set :meetTarget:silicon :buildBlock:silicon                  ...
  898:  set :meetTarget:titanium :buildBlock:titanium                ...
  899:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  900:  set :meetTarget:thorium :buildBlock:thorium                  ...
  901:  setaddr :meetTarget*retaddr *label318                        ...
  902:  call *label34 *invalid :meetTarget*retval                    ...
        label *label318                                              ...
  903:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  904:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  905:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  906:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  907:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  908:  write :buildBlock:index .blockBuilder ":buildBlockAt:index"  ...
  909:  write false .blockBuilder ":buildBlockAt*finished"           ...
  910:  write 1 .blockBuilder "@counter"                             ...
        label *label319                                              ...
  911:  wait 1e-15                                                   ...
  912:  read *tmp426 .blockBuilder ":buildBlockAt*finished"          ...
  913:  jump *label319 equal *tmp426 false                           ...
  914:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  915:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  916:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  917:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  918:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  919:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  920:  jump *label455 notEqual *tmp461 false                        ...
  921:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  922:  stop                                                         Actions.mnd: stopProcessor();
        label *label455                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  923:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label517                                              Actions.mnd: do
  924:  sensor *tmp428 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  925:  jump *label518 equal *tmp428 null                            ...
  926:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label518                                              ...
  927:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  928:  ucontrol within :locateOre:x :locateOre:y 6 *tmp431 0        Actions.mnd: while !within(x, y, RADIUS);
  929:  jump *label517 equal *tmp431 false                           Actions.mnd: do
  930:  sensor *tmp446 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  931:  jump *label349 equal *tmp446 :mineOre:ore                    ...
  932:  sensor *tmp433 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  933:  jump *label533 equal *tmp433 null                            ...
        label *label531                                              ...
  934:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  935:  sensor *tmp433 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  936:  jump *label531 notEqual *tmp433 null                         ...
        label *label533                                              ...
        label *label349                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  937:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  938:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label353                                              Actions.mnd: do
  939:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  940:  op notEqual *tmp451 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  941:  op notEqual *tmp452 :mineOre:item :mineOre:ore               ...
  942:  op land *tmp453 *tmp451 *tmp452                              ...
  943:  jump *label355 notEqual *tmp453 false                        ...
  944:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  945:  jump *label355 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  946:  sensor *tmp457 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  947:  jump *label353 lessThan *tmp457 :mineOre:amount              Actions.mnd: do
        label *label355                                              ...
  948:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  949:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  950:  sensor *tmp435 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  951:  jump *label606 notEqual *tmp435 :mineOre:ore                 ...
  952:  sensor *tmp459 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  953:  sensor *tmp460 :mineOre:block @y                             ...
  954:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  955:  ucontrol within *tmp459 *tmp460 6 *tmp465 0                  Actions.mnd: while !within(x, y, radius) do
  956:  jump *label600 notEqual *tmp465 false                        ...
        label *label598                                              ...
  957:  ucontrol approach *tmp459 *tmp460 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  958:  ucontrol within *tmp459 *tmp460 6 *tmp465 0                  Actions.mnd: while !within(x, y, radius) do
  959:  jump *label598 equal *tmp465 false                           ...
        label *label600                                              ...
  960:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label603                                              Actions.mnd: do
  961:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  962:  sensor *tmp439 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  963:  op mul *tmp440 *tmp439 :depositItems:cap                     ...
  964:  sensor *tmp441 :mineOre:block :mineOre:ore                   ...
  965:  jump *label603 greaterThan *tmp440 *tmp441                   Actions.mnd: do
  966:  jump *label611 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label606                                              ...
  967:  sensor *tmp443 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  968:  jump *label610 equal *tmp443 null                            ...
        label *label608                                              ...
  969:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  970:  sensor *tmp443 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  971:  jump *label608 notEqual *tmp443 null                         ...
        label *label610                                              ...
        label *label611                                              Actions.mnd: if @unit.@firstItem == item then
  972:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  973:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  974:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)


Performance: parsed in 857 ms, compiled in 443 ms, optimized in 4,946 ms, run in 7 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 3: read *tmp114 processor8 "*signature":
Variable 'processor8' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
