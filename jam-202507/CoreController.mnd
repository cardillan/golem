#set target = 8;
#set syntax = strict;
#set sort-variables;

module CoreController;

require "common.mnd";

noinit remote var
    core,
    display,
    bank,
    press,
    smelter,
    kiln,
    generator,

    battery,
    factory,
    unloader2,
    generator2,
    unitToProduce,

    // Lead and/or silicone will only be sent to the Air Factory
    // if they are above these limits
    leadReserve,
    siliconReserve,

    monos,
    flares,
    polys;

remote var
    pressTarget = 20,
    smelterTarget = 20,
    kilnTarget = 20,
    flareTarget = 1;

remote display ".monos" var displayMonos;
remote display ".flares" var displayFlares;

external bank[511] var logPosition;

void log(encodedId)
    bank[--logPosition] = encodedId + floor(second()) * 1000;
end;

void logUnit(unit)
    log(@blockCount + unit.@id);
end;

void unitFinished()
    logUnit(unitToProduce);
    if unitToProduce == @flare then
        displayFlares = ++flares;
    else
        displayMonos = ++monos;
    end;

    unitToProduce = flares < flareTarget ? @flare : monos < 8 ? @mono : flares < 8 ? @flare : null;
end;

inline def updateIfSmaller(ref value, in a, in b, in newValue)
    mlogSafe("select", out value, "lessThan", in a, in b, in newValue, in value);
end;

inline def fuzzyUpdate(ref state, in value, in limitLow, in limitHigh)
    updateIfSmaller(ref state, value, limitLow, false);
    updateIfSmaller(ref state, limitHigh, value, true);
end;

void backgroundProcess()
    var lastProgress = 0, factoryProgress = 0;
    var enableFactory = true;

    while true do
        var coreSilicon = core.@silicon;
        smelter.enabled = coreSilicon < smelterTarget;
        press.enabled = core.@graphite < pressTarget;
        kiln.enabled = core.@metaglass < kilnTarget;

        var power = battery.@totalPower;
        generator.enabled = power < 3500;
        generator2.enabled = power < 3800;

        fuzzyUpdate(ref enableFactory, power, 200, 500);

        factoryProgress = factory.@progress;

        if unitToProduce == null then
            factory.enabled = false;
            factory.config = @mono;
            lastProgress = 0;
        elsif lastProgress > factoryProgress + 0.1 then
            factory.enabled = enableFactory;
            unitFinished();
            lastProgress = 0;
        elsif factory.config != unitToProduce then
            factory.enabled = enableFactory;
            factory.config = unitToProduce;
            lastProgress = 0;
        else
            factory.enabled = enableFactory;
            lastProgress = factoryProgress;
        end;

        if generator2.@coal < generator2 then
            unloader2.config = @coal;
            continue;
        end;

        var leadLimit = (unitToProduce == @mono) * 30;
        if factory.@lead < leadLimit and core.@lead > leadReserve then
            unloader2.config = @lead;
        elsif coreSilicon > siliconReserve then
            unloader2.config = @silicon;
        else
            unloader2.config = @coal;
        end;
    end;
end;
