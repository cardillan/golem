Automatically added missing 'printflush(message1);' call to the end of the program.
   440 instructions before optimizations.
     1 instructions eliminated by Single Step Elimination (6 iterations).
    31 instructions modified by Expression Optimization (3 iterations).
   806 instructions eliminated by Data Flow Optimization (18 passes, 81 iterations).
   926 instructions added by Function Inlining (19 iterations).
    31 function calls inlined by Function Inlining.
   421 instructions eliminated by Print Merging.
   138 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 683):
  ! Inline function 'packCfg' defined at line 40:1               size  +959, benefit      263.5, efficiency      0.275
  * Inline function call at line 7:1                             size   +32, benefit        8.5, efficiency      0.266 (+25 instructions)
    Inline function call at line 8:1                             size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 9:1                             size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 10:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 11:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 12:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 658):
  ! Inline function 'packCfg' defined at line 40:1               size  +927, benefit      255.0, efficiency      0.275
  * Inline function call at line 8:1                             size   +32, benefit        8.5, efficiency      0.266 (+16 instructions)
    Inline function call at line 9:1                             size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 10:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 11:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 12:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 642):
  ! Inline function 'packCfg' defined at line 40:1               size  +895, benefit      246.5, efficiency      0.275
  * Inline function call at line 9:1                             size   +32, benefit        8.5, efficiency      0.266 (+12 instructions)
    Inline function call at line 10:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 11:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 12:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 630):
  ! Inline function 'packCfg' defined at line 40:1               size  +863, benefit      238.0, efficiency      0.276
  * Inline function call at line 10:1                            size   +32, benefit        8.5, efficiency      0.266 (+12 instructions)
    Inline function call at line 11:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 12:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 618):
  ! Inline function 'packCfg' defined at line 40:1               size  +831, benefit      229.5, efficiency      0.276
  * Inline function call at line 11:1                            size   +32, benefit        8.5, efficiency      0.266 (+12 instructions)
    Inline function call at line 12:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 606):
  ! Inline function 'packCfg' defined at line 40:1               size  +799, benefit      221.0, efficiency      0.277
  * Inline function call at line 12:1                            size   +32, benefit        8.5, efficiency      0.266 (+11 instructions)
    Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 595):
  ! Inline function 'packCfg' defined at line 40:1               size  +767, benefit      212.5, efficiency      0.277
  * Inline function call at line 13:1                            size   +32, benefit        8.5, efficiency      0.266 (+11 instructions)
    Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 584):
  ! Inline function 'packCfg' defined at line 40:1               size  +735, benefit      204.0, efficiency      0.278
  * Inline function call at line 14:1                            size   +32, benefit        8.5, efficiency      0.266 (+11 instructions)
    Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 573):
  ! Inline function 'packCfg' defined at line 40:1               size  +703, benefit      195.5, efficiency      0.278
  * Inline function call at line 15:1                            size   +32, benefit        8.5, efficiency      0.266 (+13 instructions)
    Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 560):
  ! Inline function 'packCfg' defined at line 40:1               size  +671, benefit      187.0, efficiency      0.279
  * Inline function call at line 16:1                            size   +32, benefit        8.5, efficiency      0.266 (+11 instructions)
    Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 549):
  ! Inline function 'packCfg' defined at line 40:1               size  +639, benefit      178.5, efficiency      0.279
  * Inline function call at line 17:1                            size   +32, benefit        8.5, efficiency      0.266 (+11 instructions)
    Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 538):
  ! Inline function 'packCfg' defined at line 40:1               size  +607, benefit      170.0, efficiency      0.280
  * Inline function call at line 18:1                            size   +32, benefit        8.5, efficiency      0.266 (+10 instructions)
    Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 528):
  ! Inline function 'packCfg' defined at line 40:1               size  +575, benefit      161.5, efficiency      0.281
  * Inline function call at line 19:1                            size   +32, benefit        8.5, efficiency      0.266 (+9 instructions)
    Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 519):
  ! Inline function 'packCfg' defined at line 40:1               size  +543, benefit      153.0, efficiency      0.282
  * Inline function call at line 20:1                            size   +32, benefit        8.5, efficiency      0.266 (+9 instructions)
    Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 510):
  ! Inline function 'packCfg' defined at line 40:1               size  +511, benefit      144.5, efficiency      0.283
  * Inline function call at line 21:1                            size   +32, benefit        8.5, efficiency      0.266 (+11 instructions)
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Pass 1: speed optimization selection (cost limit 499):
  * Inline function 'packCfg' defined at line 40:1               size  +479, benefit      136.0, efficiency      0.284 (+121 instructions)
    Inline function call at line 22:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 23:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 24:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 25:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 26:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 27:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 28:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 29:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 30:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 31:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 32:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 33:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 34:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 35:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 36:1                            size   +32, benefit        8.5, efficiency      0.266
    Inline function call at line 37:1                            size   +32, benefit        8.5, efficiency      0.266

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-10 instructions):
 
   264 call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
   265 label *label19
   266 set :packCfg:name "CFG_OVERFLOW_GATE3"
-    * set :packCfg:type @overflow-gate
   267 set :packCfg:x -4
   268 set :packCfg:y 0
   269 set :packCfg:cu 4
 
   325 set :packCfg:cu 10
   326 set :packCfg:pb 0
   327 set :packCfg:gr 15
-    * set :packCfg:si 0
   328 set :packCfg:ti 0
   329 set :packCfg:mg 0
   330 set :packCfg:rotation 0
 
   336 set :packCfg:x 0
   337 set :packCfg:y -2
   338 set :packCfg:cu 0
-    * set :packCfg:pb 0
   339 set :packCfg:gr 0
   340 set :packCfg:si 30
   341 set :packCfg:ti 25
 
   380 set :packCfg:pb 2
   381 set :packCfg:gr 0
   382 set :packCfg:si 0
-    * set :packCfg:ti 0
   383 set :packCfg:mg 0
   384 set :packCfg:rotation 0
   385 setaddr :packCfg*retaddr *label28 (h:*label28)
 
   401 label *label29
   402 set :packCfg:name "CFG_SOLAR_PANEL"
   403 set :packCfg:type @solar-panel
-    * set :packCfg:x 0
-    * set :packCfg:y 0
   404 set :packCfg:cu 0
   405 set :packCfg:pb 10
   406 set :packCfg:gr 0
 
   415 set :packCfg:type @battery-large
   416 set :packCfg:x 4
   417 set :packCfg:y 3
-    * set :packCfg:cu 0
   418 set :packCfg:pb 50
-    * set :packCfg:gr 0
   419 set :packCfg:si 30
   420 set :packCfg:ti 20
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   421 setaddr :packCfg*retaddr *label31 (h:*label31)
   422 call *label0 *invalid :packCfg*retval (m:*label31) (h:*label31)
   423 label *label31

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
    26 call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
    27 label *label2
    28 set :packCfg:name "CFG_BATTERY2"
-    * set :packCfg:type @battery
    29 set :packCfg:x 1
    30 set :packCfg:y 5
    31 set :packCfg:cu 5
 
   265 set :packCfg:name "CFG_OVERFLOW_GATE3"
   266 set :packCfg:x -4
   267 set :packCfg:y 0
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
   268 set :packCfg:gr 0
-    * set :packCfg:si 0
   269 set :packCfg:ti 0
   270 set :packCfg:mg 0
   271 set :packCfg:rotation 0
 
   356 label *label26
   357 set :packCfg:name "CFG_ADDITIVE_REC"
   358 set :packCfg:type @additive-reconstructor
-    * set :packCfg:x 0
   359 set :packCfg:y -5
   360 set :packCfg:cu 200
   361 set :packCfg:pb 120
   362 set :packCfg:gr 0
   363 set :packCfg:si 90
-    * set :packCfg:ti 0
   364 set :packCfg:mg 0
   365 set :packCfg:rotation 0
   366 setaddr :packCfg*retaddr *label27 (h:*label27)
 
   372 set :packCfg:y 0
   373 set :packCfg:cu 4
   374 set :packCfg:pb 2
-    * set :packCfg:gr 0
   375 set :packCfg:si 0
   376 set :packCfg:mg 0
   377 set :packCfg:rotation 0
 
   381 set :packCfg:name "CFG_LASER_DRILL"
   382 set :packCfg:type @laser-drill
   383 set :packCfg:x 0
-    * set :packCfg:y 0
   384 set :packCfg:cu 35
   385 set :packCfg:pb 0
   386 set :packCfg:gr 30
 
   398 set :packCfg:gr 0
   399 set :packCfg:si 8
   400 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   401 setaddr :packCfg*retaddr *label30 (h:*label30)
   402 call *label0 *invalid :packCfg*retval (m:*label30) (h:*label30)
   403 label *label30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-9 instructions):
 
    28 set :packCfg:name "CFG_BATTERY2"
    29 set :packCfg:x 1
    30 set :packCfg:y 5
-    * set :packCfg:cu 5
    31 set :packCfg:pb 20
    32 set :packCfg:gr 0
    33 set :packCfg:si 0
 
   238 set :packCfg:x -4.5
   239 set :packCfg:y 3.5
   240 set :packCfg:cu 30
-    * set :packCfg:pb 30
   241 set :packCfg:gr 30
   242 set :packCfg:si 0
   243 set :packCfg:ti 0
 
   253 set :packCfg:cu 4
   254 set :packCfg:pb 2
   255 set :packCfg:gr 0
-    * set :packCfg:si 0
   256 set :packCfg:ti 0
   257 set :packCfg:mg 0
   258 set :packCfg:rotation 0
 
   261 label *label19
   262 set :packCfg:name "CFG_OVERFLOW_GATE3"
   263 set :packCfg:x -4
-    * set :packCfg:y 0
   264 set :packCfg:gr 0
   265 set :packCfg:ti 0
   266 set :packCfg:mg 0
 
   317 set :packCfg:cu 10
   318 set :packCfg:pb 0
   319 set :packCfg:gr 15
-    * set :packCfg:ti 0
   320 set :packCfg:mg 0
   321 set :packCfg:rotation 0
   322 setaddr :packCfg*retaddr *label24 (h:*label24)
 
   337 label *label25
   338 set :packCfg:name "CFG_UNDERFLOW_GATE"
   339 set :packCfg:type @underflow-gate
-    * set :packCfg:x 0
   340 set :packCfg:y -3
   341 set :packCfg:cu 4
   342 set :packCfg:pb 2
 
   353 set :packCfg:y -5
   354 set :packCfg:cu 200
   355 set :packCfg:pb 120
-    * set :packCfg:gr 0
   356 set :packCfg:si 90
   357 set :packCfg:mg 0
   358 set :packCfg:rotation 0
 
   379 set :packCfg:gr 30
   380 set :packCfg:si 30
   381 set :packCfg:ti 20
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   382 setaddr :packCfg*retaddr *label29 (h:*label29)
   383 call *label0 *invalid :packCfg*retval (m:*label29) (h:*label29)
   384 label *label29

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-8 instructions):
 
   110 set :packCfg:name "CFG_INVERTED_SORT2"
   111 set :packCfg:type @inverted-sorter
   112 set :packCfg:x -1
-    * set :packCfg:y 2
   113 set :packCfg:cu 2
   114 set :packCfg:pb 2
   115 set :packCfg:gr 0
 
   125 set :packCfg:x 0
   126 set :packCfg:y 3
   127 set :packCfg:cu 4
-    * set :packCfg:pb 2
   128 set :packCfg:gr 0
   129 set :packCfg:si 0
   130 set :packCfg:ti 0
 
   205 label *label15
   206 set :packCfg:name "CFG_INVERTED_SORT3"
   207 set :packCfg:type @inverted-sorter
-    * set :packCfg:x 2
   208 set :packCfg:y 0
   209 set :packCfg:cu 2
   210 set :packCfg:pb 2
 
   236 set :packCfg:y 3.5
   237 set :packCfg:cu 30
   238 set :packCfg:gr 30
-    * set :packCfg:si 0
   239 set :packCfg:ti 0
   240 set :packCfg:mg 30
   241 set :packCfg:rotation 0
 
   272 set :packCfg:pb 40
   273 set :packCfg:gr 25
   274 set :packCfg:si 30
-    * set :packCfg:ti 0
   275 set :packCfg:mg 0
   276 set :packCfg:rotation 0
   277 setaddr :packCfg*retaddr *label21 (h:*label21)
 
   335 set :packCfg:y -3
   336 set :packCfg:cu 4
   337 set :packCfg:pb 2
-    * set :packCfg:gr 0
   338 set :packCfg:si 0
   339 set :packCfg:ti 0
   340 set :packCfg:mg 0
 
   360 set :packCfg:cu 4
   361 set :packCfg:pb 2
   362 set :packCfg:si 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   363 setaddr :packCfg*retaddr *label28 (h:*label28)
   364 call *label0 *invalid :packCfg*retval (m:*label28) (h:*label28)
   365 label *label28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-8 instructions):
 
    27 label *label2
    28 set :packCfg:name "CFG_BATTERY2"
    29 set :packCfg:x 1
-    * set :packCfg:y 5
    30 set :packCfg:pb 20
    31 set :packCfg:gr 0
    32 set :packCfg:si 0
 
    94 label *label7
    95 set :packCfg:name "CFG_UNLOADER1"
    96 set :packCfg:type @unloader
-    * set :packCfg:x 0
    97 set :packCfg:y 2
    98 set :packCfg:cu 0
-    * set :packCfg:pb 0
    99 set :packCfg:gr 0
   100 set :packCfg:si 30
   101 set :packCfg:ti 25
 
   220 set :packCfg:cu 60
   221 set :packCfg:pb 30
   222 set :packCfg:gr 30
-    * set :packCfg:si 0
   223 set :packCfg:ti 0
   224 set :packCfg:mg 0
   225 set :packCfg:rotation 0
 
   253 label *label19
   254 set :packCfg:name "CFG_OVERFLOW_GATE3"
   255 set :packCfg:x -4
-    * set :packCfg:gr 0
-    * set :packCfg:ti 0
   256 set :packCfg:mg 0
   257 set :packCfg:rotation 0
   258 setaddr :packCfg*retaddr *label20 (h:*label20)
 
   342 set :packCfg:cu 200
   343 set :packCfg:pb 120
   344 set :packCfg:si 90
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   345 setaddr :packCfg*retaddr *label27 (h:*label27)
   346 call *label0 *invalid :packCfg*retval (m:*label27) (h:*label27)
   347 label *label27

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
    27 label *label2
    28 set :packCfg:name "CFG_BATTERY2"
    29 set :packCfg:x 1
-    * set :packCfg:pb 20
    30 set :packCfg:gr 0
    31 set :packCfg:si 0
    32 set :packCfg:ti 0
 
   122 set :packCfg:y 3
   123 set :packCfg:cu 4
   124 set :packCfg:gr 0
-    * set :packCfg:si 0
   125 set :packCfg:ti 0
   126 set :packCfg:mg 0
   127 set :packCfg:rotation 0
 
   229 set :packCfg:x -4.5
   230 set :packCfg:y 3.5
   231 set :packCfg:cu 30
-    * set :packCfg:gr 30
   232 set :packCfg:ti 0
   233 set :packCfg:mg 30
   234 set :packCfg:rotation 0
 
   242 set :packCfg:cu 4
   243 set :packCfg:pb 2
   244 set :packCfg:gr 0
-    * set :packCfg:ti 0
   245 set :packCfg:mg 0
   246 set :packCfg:rotation 0
   247 setaddr :packCfg*retaddr *label19 (h:*label19)
 
   327 set :packCfg:pb 2
   328 set :packCfg:si 0
   329 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   330 setaddr :packCfg*retaddr *label26 (h:*label26)
   331 call *label0 *invalid :packCfg*retval (m:*label26) (h:*label26)
   332 label *label26

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-5 instructions):
 
    84 set :packCfg:cu 18
    85 set :packCfg:pb 0
    86 set :packCfg:gr 10
-    * set :packCfg:si 0
    87 set :packCfg:ti 0
    88 set :packCfg:mg 0
    89 set :packCfg:rotation 0
 
   202 set :packCfg:y 0
   203 set :packCfg:cu 2
   204 set :packCfg:pb 2
-    * set :packCfg:gr 0
   205 set :packCfg:si 0
   206 set :packCfg:ti 0
   207 set :packCfg:mg 0
 
   227 set :packCfg:x -4.5
   228 set :packCfg:y 3.5
   229 set :packCfg:cu 30
-    * set :packCfg:ti 0
   230 set :packCfg:mg 30
   231 set :packCfg:rotation 0
   232 setaddr :packCfg*retaddr *label18 (h:*label18)
 
   312 set :packCfg:gr 0
   313 set :packCfg:si 30
   314 set :packCfg:ti 25
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   315 setaddr :packCfg*retaddr *label25 (h:*label25)
   316 call *label0 *invalid :packCfg*retval (m:*label25) (h:*label25)
   317 label *label25

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-5 instructions):
 
    70 set :packCfg:cu 2
    71 set :packCfg:pb 2
    72 set :packCfg:gr 0
-    * set :packCfg:si 0
    73 set :packCfg:ti 0
    74 set :packCfg:mg 0
    75 set :packCfg:rotation 0
 
   188 set :packCfg:y -1
   189 set :packCfg:cu 0
   190 set :packCfg:pb 0
-    * set :packCfg:gr 0
   191 set :packCfg:si 30
   192 set :packCfg:ti 25
   193 set :packCfg:mg 0
 
   214 set :packCfg:cu 60
   215 set :packCfg:pb 30
   216 set :packCfg:gr 30
-    * set :packCfg:ti 0
   217 set :packCfg:mg 0
   218 set :packCfg:rotation 0
   219 setaddr :packCfg*retaddr *label17 (h:*label17)
 
   270 set :packCfg:gr 50
   271 set :packCfg:si 25
   272 set :packCfg:ti 100
-    * set :packCfg:mg 0
   273 set :packCfg:rotation 0
   274 setaddr :packCfg*retaddr *label22 (h:*label22)
   275 call *label0 *invalid :packCfg*retval (m:*label22) (h:*label22)
 
   296 set :packCfg:pb 0
   297 set :packCfg:gr 15
   298 set :packCfg:mg 0
-    * set :packCfg:rotation 0
   299 setaddr :packCfg*retaddr *label24 (h:*label24)
   300 call *label0 *invalid :packCfg*retval (m:*label24) (h:*label24)
   301 label *label24

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
    56 set :packCfg:cu 30
    57 set :packCfg:pb 25
    58 set :packCfg:gr 0
-    * set :packCfg:si 0
    59 set :packCfg:ti 0
    60 set :packCfg:mg 0
    61 set :packCfg:rotation 0
 
   147 set :packCfg:pb 6
   148 set :packCfg:gr 0
   149 set :packCfg:si 0
-    * set :packCfg:ti 0
   150 set :packCfg:mg 0
   151 set :packCfg:rotation 0
   152 setaddr :packCfg*retaddr *label12 (h:*label12)
 
   172 set :packCfg:y -2
   173 set :packCfg:cu 60
   174 set :packCfg:pb 70
-    * set :packCfg:gr 0
   175 set :packCfg:si 0
   176 set :packCfg:ti 0
   177 set :packCfg:mg 0
 
   253 set :packCfg:pb 40
   254 set :packCfg:gr 25
   255 set :packCfg:si 30
-    * set :packCfg:mg 0
   256 set :packCfg:rotation 0
   257 setaddr :packCfg*retaddr *label21 (h:*label21)
   258 call *label0 *invalid :packCfg*retval (m:*label21) (h:*label21)
 
   280 set :packCfg:si 0
   281 set :packCfg:ti 0
   282 set :packCfg:mg 30
-    * set :packCfg:rotation 0
   283 setaddr :packCfg*retaddr *label23 (h:*label23)
   284 call *label0 *invalid :packCfg*retval (m:*label23) (h:*label23)
   285 label *label23

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    42 set :packCfg:cu 25
    43 set :packCfg:pb 15
    44 set :packCfg:gr 0
-    * set :packCfg:si 0
    45 set :packCfg:ti 0
    46 set :packCfg:mg 0
    47 set :packCfg:rotation 0
 
   132 set :packCfg:pb 50
   133 set :packCfg:gr 0
   134 set :packCfg:si 50
-    * set :packCfg:ti 0
   135 set :packCfg:mg 0
   136 set :packCfg:rotation 0
   137 setaddr :packCfg*retaddr *label11 (h:*label11)
 
   156 set :packCfg:y 0
   157 set :packCfg:cu 0
   158 set :packCfg:pb 0
-    * set :packCfg:gr 0
   159 set :packCfg:si 30
   160 set :packCfg:ti 25
   161 set :packCfg:mg 0
 
   237 label *label19
   238 set :packCfg:name "CFG_OVERFLOW_GATE3"
   239 set :packCfg:x -4
-    * set :packCfg:mg 0
   240 set :packCfg:rotation 0
   241 setaddr :packCfg*retaddr *label20 (h:*label20)
   242 call *label0 *invalid :packCfg*retval (m:*label20) (h:*label20)
 
   262 set :packCfg:gr 50
   263 set :packCfg:si 25
   264 set :packCfg:ti 100
-    * set :packCfg:rotation 0
   265 setaddr :packCfg*retaddr *label22 (h:*label22)
   266 call *label0 *invalid :packCfg*retval (m:*label22) (h:*label22)
   267 label *label22

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    28 set :packCfg:name "CFG_BATTERY2"
    29 set :packCfg:x 1
    30 set :packCfg:gr 0
-    * set :packCfg:si 0
    31 set :packCfg:ti 0
    32 set :packCfg:mg 0
    33 set :packCfg:rotation 0
 
   117 set :packCfg:y 3
   118 set :packCfg:cu 4
   119 set :packCfg:gr 0
-    * set :packCfg:ti 0
   120 set :packCfg:mg 0
   121 set :packCfg:rotation 0
   122 setaddr :packCfg*retaddr *label10 (h:*label10)
 
   141 set :packCfg:y -3
   142 set :packCfg:cu 2
   143 set :packCfg:pb 6
-    * set :packCfg:gr 0
   144 set :packCfg:si 0
   145 set :packCfg:mg 0
   146 set :packCfg:rotation 0
 
   205 set :packCfg:cu 60
   206 set :packCfg:pb 30
   207 set :packCfg:gr 30
-    * set :packCfg:mg 0
   208 set :packCfg:rotation 0
   209 setaddr :packCfg*retaddr *label17 (h:*label17)
   210 call *label0 *invalid :packCfg*retval (m:*label17) (h:*label17)
 
   245 set :packCfg:pb 40
   246 set :packCfg:gr 25
   247 set :packCfg:si 30
-    * set :packCfg:rotation 0
   248 setaddr :packCfg*retaddr *label21 (h:*label21)
   249 call *label0 *invalid :packCfg*retval (m:*label21) (h:*label21)
   250 label *label21

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-5 instructions):
 
    18 set :packCfg:cu 5
    19 set :packCfg:pb 20
    20 set :packCfg:gr 0
-    * set :packCfg:si 0
    21 set :packCfg:ti 0
    22 set :packCfg:mg 0
    23 set :packCfg:rotation 0
 
    79 set :packCfg:cu 18
    80 set :packCfg:pb 0
    81 set :packCfg:gr 10
-    * set :packCfg:ti 0
    82 set :packCfg:mg 0
    83 set :packCfg:rotation 0
    84 setaddr :packCfg*retaddr *label7 (h:*label7)
 
   126 set :packCfg:y 4
   127 set :packCfg:cu 90
   128 set :packCfg:pb 50
-    * set :packCfg:gr 0
   129 set :packCfg:si 50
   130 set :packCfg:mg 0
   131 set :packCfg:rotation 0
 
   190 set :packCfg:pb 2
   191 set :packCfg:si 0
   192 set :packCfg:ti 0
-    * set :packCfg:mg 0
   193 set :packCfg:rotation 0
   194 setaddr :packCfg*retaddr *label16 (h:*label16)
   195 call *label0 *invalid :packCfg*retval (m:*label16) (h:*label16)
 
   229 label *label19
   230 set :packCfg:name "CFG_OVERFLOW_GATE3"
   231 set :packCfg:x -4
-    * set :packCfg:rotation 0
   232 setaddr :packCfg*retaddr *label20 (h:*label20)
   233 call *label0 *invalid :packCfg*retval (m:*label20) (h:*label20)
   234 label *label20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-4 instructions):
 
    66 set :packCfg:cu 2
    67 set :packCfg:pb 2
    68 set :packCfg:gr 0
-    * set :packCfg:ti 0
    69 set :packCfg:mg 0
    70 set :packCfg:rotation 0
    71 setaddr :packCfg*retaddr *label6 (h:*label6)
 
   113 set :packCfg:x 0
   114 set :packCfg:y 3
   115 set :packCfg:cu 4
-    * set :packCfg:gr 0
   116 set :packCfg:mg 0
   117 set :packCfg:rotation 0
   118 setaddr :packCfg*retaddr *label10 (h:*label10)
 
   176 set :packCfg:pb 0
   177 set :packCfg:si 30
   178 set :packCfg:ti 25
-    * set :packCfg:mg 0
   179 set :packCfg:rotation 0
   180 setaddr :packCfg*retaddr *label15 (h:*label15)
   181 call *label0 *invalid :packCfg*retval (m:*label15) (h:*label15)
 
   220 set :packCfg:pb 2
   221 set :packCfg:gr 0
   222 set :packCfg:mg 0
-    * set :packCfg:rotation 0
   223 setaddr :packCfg*retaddr *label19 (h:*label19)
   224 call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
   225 label *label19

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-4 instructions):
 
    53 set :packCfg:cu 30
    54 set :packCfg:pb 25
    55 set :packCfg:gr 0
-    * set :packCfg:ti 0
    56 set :packCfg:mg 0
    57 set :packCfg:rotation 0
    58 setaddr :packCfg*retaddr *label5 (h:*label5)
 
    99 set :packCfg:x -1
   100 set :packCfg:cu 2
   101 set :packCfg:pb 2
-    * set :packCfg:gr 0
   102 set :packCfg:si 0
   103 set :packCfg:ti 0
   104 set :packCfg:mg 0
 
   161 set :packCfg:pb 70
   162 set :packCfg:si 0
   163 set :packCfg:ti 0
-    * set :packCfg:mg 0
   164 set :packCfg:rotation 3
   165 setaddr :packCfg*retaddr *label14 (h:*label14)
   166 call *label0 *invalid :packCfg*retval (m:*label14) (h:*label14)
 
   205 set :packCfg:y 3.5
   206 set :packCfg:cu 30
   207 set :packCfg:mg 30
-    * set :packCfg:rotation 0
   208 setaddr :packCfg*retaddr *label18 (h:*label18)
   209 call *label0 *invalid :packCfg*retval (m:*label18) (h:*label18)
   210 label *label18

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-4 instructions):
 
    40 set :packCfg:cu 25
    41 set :packCfg:pb 15
    42 set :packCfg:gr 0
-    * set :packCfg:ti 0
    43 set :packCfg:mg 0
    44 set :packCfg:rotation 0
    45 setaddr :packCfg*retaddr *label4 (h:*label4)
 
    63 set :packCfg:y 2
    64 set :packCfg:cu 2
    65 set :packCfg:pb 2
-    * set :packCfg:gr 0
    66 set :packCfg:mg 0
    67 set :packCfg:rotation 0
    68 setaddr :packCfg*retaddr *label6 (h:*label6)
 
   146 set :packCfg:pb 0
   147 set :packCfg:si 30
   148 set :packCfg:ti 25
-    * set :packCfg:mg 0
   149 set :packCfg:rotation 0
   150 setaddr :packCfg*retaddr *label13 (h:*label13)
   151 call *label0 *invalid :packCfg*retval (m:*label13) (h:*label13)
 
   192 set :packCfg:cu 60
   193 set :packCfg:pb 30
   194 set :packCfg:gr 30
-    * set :packCfg:rotation 0
   195 setaddr :packCfg*retaddr *label17 (h:*label17)
   196 call *label0 *invalid :packCfg*retval (m:*label17) (h:*label17)
   197 label *label17

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-4 instructions):
 
    27 set :packCfg:name "CFG_BATTERY2"
    28 set :packCfg:x 1
    29 set :packCfg:gr 0
-    * set :packCfg:ti 0
    30 set :packCfg:mg 0
    31 set :packCfg:rotation 0
    32 setaddr :packCfg*retaddr *label3 (h:*label3)
 
    50 set :packCfg:y 3.5
    51 set :packCfg:cu 30
    52 set :packCfg:pb 25
-    * set :packCfg:gr 0
    53 set :packCfg:mg 0
    54 set :packCfg:rotation 0
    55 setaddr :packCfg*retaddr *label5 (h:*label5)
 
   131 set :packCfg:cu 2
   132 set :packCfg:pb 6
   133 set :packCfg:si 0
-    * set :packCfg:mg 0
   134 set :packCfg:rotation 0
   135 setaddr :packCfg*retaddr *label12 (h:*label12)
   136 call *label0 *invalid :packCfg*retval (m:*label12) (h:*label12)
 
   178 set :packCfg:pb 2
   179 set :packCfg:si 0
   180 set :packCfg:ti 0
-    * set :packCfg:rotation 0
   181 setaddr :packCfg*retaddr *label16 (h:*label16)
   182 call *label0 *invalid :packCfg*retval (m:*label16) (h:*label16)
   183 label *label16

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 17 (-4 instructions):
 
    18 set :packCfg:cu 5
    19 set :packCfg:pb 20
    20 set :packCfg:gr 0
-    * set :packCfg:ti 0
    21 set :packCfg:mg 0
    22 set :packCfg:rotation 0
    23 setaddr :packCfg*retaddr *label2 (h:*label2)
 
    37 set :packCfg:y 4
    38 set :packCfg:cu 25
    39 set :packCfg:pb 15
-    * set :packCfg:gr 0
    40 set :packCfg:mg 0
    41 set :packCfg:rotation 0
    42 setaddr :packCfg*retaddr *label4 (h:*label4)
 
   117 set :packCfg:cu 90
   118 set :packCfg:pb 50
   119 set :packCfg:si 50
-    * set :packCfg:mg 0
   120 set :packCfg:rotation 0
   121 setaddr :packCfg*retaddr *label11 (h:*label11)
   122 call *label0 *invalid :packCfg*retval (m:*label11) (h:*label11)
 
   140 set :packCfg:pb 0
   141 set :packCfg:si 30
   142 set :packCfg:ti 25
-    * set :packCfg:rotation 0
   143 setaddr :packCfg*retaddr *label13 (h:*label13)
   144 call *label0 *invalid :packCfg*retval (m:*label13) (h:*label13)
   145 label *label13

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 18 (-3 instructions):
 
    25 label *label2
    26 set :packCfg:name "CFG_BATTERY2"
    27 set :packCfg:x 1
-    * set :packCfg:gr 0
    28 set :packCfg:mg 0
    29 set :packCfg:rotation 0
    30 setaddr :packCfg*retaddr *label3 (h:*label3)
 
   104 set :packCfg:x 0
   105 set :packCfg:y 3
   106 set :packCfg:cu 4
-    * set :packCfg:mg 0
   107 set :packCfg:rotation 0
   108 setaddr :packCfg*retaddr *label10 (h:*label10)
   109 call *label0 *invalid :packCfg*retval (m:*label10) (h:*label10)
 
   126 set :packCfg:cu 2
   127 set :packCfg:pb 6
   128 set :packCfg:si 0
-    * set :packCfg:rotation 0
   129 setaddr :packCfg*retaddr *label12 (h:*label12)
   130 call *label0 *invalid :packCfg*retval (m:*label12) (h:*label12)
   131 label *label12

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 19 (-3 instructions):
 
    17 set :packCfg:y 5
    18 set :packCfg:cu 5
    19 set :packCfg:pb 20
-    * set :packCfg:gr 0
    20 set :packCfg:mg 0
    21 set :packCfg:rotation 0
    22 setaddr :packCfg*retaddr *label2 (h:*label2)
 
    93 set :packCfg:pb 2
    94 set :packCfg:si 0
    95 set :packCfg:ti 0
-    * set :packCfg:mg 0
    96 set :packCfg:rotation 0
    97 setaddr :packCfg*retaddr *label9 (h:*label9)
    98 call *label0 *invalid :packCfg*retval (m:*label9) (h:*label9)
 
   113 set :packCfg:cu 90
   114 set :packCfg:pb 50
   115 set :packCfg:si 50
-    * set :packCfg:rotation 0
   116 setaddr :packCfg*retaddr *label11 (h:*label11)
   117 call *label0 *invalid :packCfg*retval (m:*label11) (h:*label11)
   118 label *label11

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 20 (-2 instructions):
 
    81 set :packCfg:gr 0
    82 set :packCfg:si 30
    83 set :packCfg:ti 25
-    * set :packCfg:mg 0
    84 set :packCfg:rotation 0
    85 setaddr :packCfg*retaddr *label8 (h:*label8)
    86 call *label0 *invalid :packCfg*retval (m:*label8) (h:*label8)
 
   101 set :packCfg:x 0
   102 set :packCfg:y 3
   103 set :packCfg:cu 4
-    * set :packCfg:rotation 0
   104 setaddr :packCfg*retaddr *label10 (h:*label10)
   105 call *label0 *invalid :packCfg*retval (m:*label10) (h:*label10)
   106 label *label10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 21 (-2 instructions):
 
    69 set :packCfg:cu 18
    70 set :packCfg:pb 0
    71 set :packCfg:gr 10
-    * set :packCfg:mg 0
    72 set :packCfg:rotation 0
    73 setaddr :packCfg*retaddr *label7 (h:*label7)
    74 call *label0 *invalid :packCfg*retval (m:*label7) (h:*label7)
 
    91 set :packCfg:pb 2
    92 set :packCfg:si 0
    93 set :packCfg:ti 0
-    * set :packCfg:rotation 0
    94 setaddr :packCfg*retaddr *label9 (h:*label9)
    95 call *label0 *invalid :packCfg*retval (m:*label9) (h:*label9)
    96 label *label9

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 22 (-2 instructions):
 
    57 set :packCfg:y 2
    58 set :packCfg:cu 2
    59 set :packCfg:pb 2
-    * set :packCfg:mg 0
    60 set :packCfg:rotation 0
    61 setaddr :packCfg*retaddr *label6 (h:*label6)
    62 call *label0 *invalid :packCfg*retval (m:*label6) (h:*label6)
 
    79 set :packCfg:gr 0
    80 set :packCfg:si 30
    81 set :packCfg:ti 25
-    * set :packCfg:rotation 0
    82 setaddr :packCfg*retaddr *label8 (h:*label8)
    83 call *label0 *invalid :packCfg*retval (m:*label8) (h:*label8)
    84 label *label8

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 23 (-2 instructions):
 
    46 set :packCfg:y 3.5
    47 set :packCfg:cu 30
    48 set :packCfg:pb 25
-    * set :packCfg:mg 0
    49 set :packCfg:rotation 0
    50 setaddr :packCfg*retaddr *label5 (h:*label5)
    51 call *label0 *invalid :packCfg*retval (m:*label5) (h:*label5)
 
    67 set :packCfg:cu 18
    68 set :packCfg:pb 0
    69 set :packCfg:gr 10
-    * set :packCfg:rotation 0
    70 setaddr :packCfg*retaddr *label7 (h:*label7)
    71 call *label0 *invalid :packCfg*retval (m:*label7) (h:*label7)
    72 label *label7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 24 (-2 instructions):
 
    35 set :packCfg:y 4
    36 set :packCfg:cu 25
    37 set :packCfg:pb 15
-    * set :packCfg:mg 0
    38 set :packCfg:rotation 0
    39 setaddr :packCfg*retaddr *label4 (h:*label4)
    40 call *label0 *invalid :packCfg*retval (m:*label4) (h:*label4)
 
    55 set :packCfg:y 2
    56 set :packCfg:cu 2
    57 set :packCfg:pb 2
-    * set :packCfg:rotation 0
    58 setaddr :packCfg*retaddr *label6 (h:*label6)
    59 call *label0 *invalid :packCfg*retval (m:*label6) (h:*label6)
    60 label *label6

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 25 (-2 instructions):
 
    24 label *label2
    25 set :packCfg:name "CFG_BATTERY2"
    26 set :packCfg:x 1
-    * set :packCfg:mg 0
    27 set :packCfg:rotation 0
    28 setaddr :packCfg*retaddr *label3 (h:*label3)
    29 call *label0 *invalid :packCfg*retval (m:*label3) (h:*label3)
 
    44 set :packCfg:y 3.5
    45 set :packCfg:cu 30
    46 set :packCfg:pb 25
-    * set :packCfg:rotation 0
    47 setaddr :packCfg*retaddr *label5 (h:*label5)
    48 call *label0 *invalid :packCfg*retval (m:*label5) (h:*label5)
    49 label *label5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 26 (-2 instructions):
 
    17 set :packCfg:y 5
    18 set :packCfg:cu 5
    19 set :packCfg:pb 20
-    * set :packCfg:mg 0
    20 set :packCfg:rotation 0
    21 setaddr :packCfg*retaddr *label2 (h:*label2)
    22 call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
 
    33 set :packCfg:y 4
    34 set :packCfg:cu 25
    35 set :packCfg:pb 15
-    * set :packCfg:rotation 0
    36 setaddr :packCfg*retaddr *label4 (h:*label4)
    37 call *label0 *invalid :packCfg*retval (m:*label4) (h:*label4)
    38 label *label4

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 27 (-1 instructions):
 
    23 label *label2
    24 set :packCfg:name "CFG_BATTERY2"
    25 set :packCfg:x 1
-    * set :packCfg:rotation 0
    26 setaddr :packCfg*retaddr *label3 (h:*label3)
    27 call *label0 *invalid :packCfg*retval (m:*label3) (h:*label3)
    28 label *label3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 28 (-1 instructions):
 
    17 set :packCfg:y 5
    18 set :packCfg:cu 5
    19 set :packCfg:pb 20
-    * set :packCfg:rotation 0
    20 setaddr :packCfg*retaddr *label2 (h:*label2)
    21 call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
    22 label *label2

Modifications by Inline function call at line 7:1 (+31 instructions):
 
     8 set :packCfg:ti 0
     9 set :packCfg:mg 0
    10 set :packCfg:rotation 0
-    * setaddr :packCfg*retaddr *label1 (h:*label1)
-    * call *label0 *invalid :packCfg*retval (m:*label1) (h:*label1)
-    * label *label1
+   11 label *label33
+   12 print "const "
+   13 print :packCfg:name
+   14 print " "
+   15 print "= "
+   16 printchar 34
+   17 sensor *tmp0 :packCfg:type @id
+   18 op add *tmp1 35 *tmp0
+   19 printchar *tmp1
+   20 op add *tmp2 7 :packCfg:x
+   21 op floor *tmp3 *tmp2
+   22 op add *tmp4 35 *tmp3
+   23 printchar *tmp4
+   24 op add *tmp5 7 :packCfg:y
+   25 op floor *tmp6 *tmp5
+   26 op add *tmp7 35 *tmp6
+   27 printchar *tmp7
+   28 op add *tmp8 35 :packCfg:cu
+   29 printchar *tmp8
+   30 op add *tmp9 35 :packCfg:pb
+   31 printchar *tmp9
+   32 op add *tmp10 35 :packCfg:gr
+   33 printchar *tmp10
+   34 op add *tmp11 35 :packCfg:si
+   35 printchar *tmp11
+   36 op add *tmp12 35 :packCfg:ti
+   37 printchar *tmp12
+   38 op add *tmp13 35 :packCfg:mg
+   39 printchar *tmp13
+   40 op add *tmp14 35 :packCfg:rotation
+   41 printchar *tmp14
+   42 printchar 34
+   43 print ";"
+   44 print "\n"
+   45 label *label34
    46 set :packCfg:name "CFG_BATTERY1"
    47 set :packCfg:type @battery
    48 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    10 set :packCfg:rotation 0
    11 label *label33
    12 print "const "
-    * print :packCfg:name
+   13 print "CFG_PRESS"
    14 print " "
    15 print "= "
    16 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   17 sensor *tmp0 @graphite-press @id
    18 op add *tmp1 35 *tmp0
    19 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+   20 op add *tmp2 7 -2.5
+   21 op floor *tmp3 4.5
+   22 op add *tmp4 35 4
+   23 printchar 39
+   24 op add *tmp5 7 1.5
+   25 op floor *tmp6 8.5
+   26 op add *tmp7 35 8
+   27 printchar 43
+   28 op add *tmp8 35 75
+   29 printchar 110
+   30 op add *tmp9 35 30
+   31 printchar 65
+   32 op add *tmp10 35 0
+   33 printchar 35
+   34 op add *tmp11 35 0
+   35 printchar 35
+   36 op add *tmp12 35 0
+   37 printchar 35
+   38 op add *tmp13 35 0
+   39 printchar 35
+   40 op add *tmp14 35 0
+   41 printchar 35
    42 printchar 34
    43 print ";"
    44 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
-    * set :packCfg:name "CFG_PRESS"
-    * set :packCfg:type @graphite-press
-    * set :packCfg:x -2.5
-    * set :packCfg:y 1.5
-    * set :packCfg:cu 75
-    * set :packCfg:pb 30
     0 set :packCfg:gr 0
     1 set :packCfg:si 0
     2 set :packCfg:ti 0

Modifications by Inline function call at line 8:1 (+31 instructions):
 
    43 set :packCfg:y 5
    44 set :packCfg:cu 5
    45 set :packCfg:pb 20
-    * setaddr :packCfg*retaddr *label2 (h:*label2)
-    * call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
-    * label *label2
+   46 label *label35
+   47 print "const "
+   48 print :packCfg:name
+   49 print " "
+   50 print "= "
+   51 printchar 34
+   52 sensor *tmp0 :packCfg:type @id
+   53 op add *tmp1 35 *tmp0
+   54 printchar *tmp1
+   55 op add *tmp2 7 :packCfg:x
+   56 op floor *tmp3 *tmp2
+   57 op add *tmp4 35 *tmp3
+   58 printchar *tmp4
+   59 op add *tmp5 7 :packCfg:y
+   60 op floor *tmp6 *tmp5
+   61 op add *tmp7 35 *tmp6
+   62 printchar *tmp7
+   63 op add *tmp8 35 :packCfg:cu
+   64 printchar *tmp8
+   65 op add *tmp9 35 :packCfg:pb
+   66 printchar *tmp9
+   67 op add *tmp10 35 :packCfg:gr
+   68 printchar *tmp10
+   69 op add *tmp11 35 :packCfg:si
+   70 printchar *tmp11
+   71 op add *tmp12 35 :packCfg:ti
+   72 printchar *tmp12
+   73 op add *tmp13 35 :packCfg:mg
+   74 printchar *tmp13
+   75 op add *tmp14 35 :packCfg:rotation
+   76 printchar *tmp14
+   77 printchar 34
+   78 print ";"
+   79 print "\n"
+   80 label *label36
    81 set :packCfg:name "CFG_BATTERY2"
    82 set :packCfg:x 1
    83 setaddr :packCfg*retaddr *label3 (h:*label3)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
    11 sensor *tmp0 @graphite-press @id
    12 op add *tmp1 35 *tmp0
    13 printchar *tmp1
-    * op add *tmp2 7 -2.5
-    * op floor *tmp3 4.5
-    * op add *tmp4 35 4
    14 printchar 39
-    * op add *tmp5 7 1.5
-    * op floor *tmp6 8.5
-    * op add *tmp7 35 8
    15 printchar 43
-    * op add *tmp8 35 75
    16 printchar 110
-    * op add *tmp9 35 30
    17 printchar 65
-    * op add *tmp10 35 0
    18 printchar 35
-    * op add *tmp11 35 0
    19 printchar 35
-    * op add *tmp12 35 0
    20 printchar 35
-    * op add *tmp13 35 0
    21 printchar 35
-    * op add *tmp14 35 0
    22 printchar 35
    23 printchar 34
    24 print ";"
 
    32 set :packCfg:pb 20
    33 label *label35
    34 print "const "
-    * print :packCfg:name
+   35 print "CFG_BATTERY1"
    36 print " "
    37 print "= "
    38 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   39 sensor *tmp0 @battery @id
    40 op add *tmp1 35 *tmp0
    41 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+   42 op add *tmp2 7 0
+   43 op floor *tmp3 7
+   44 op add *tmp4 35 7
+   45 printchar 42
+   46 op add *tmp5 7 5
+   47 op floor *tmp6 12
+   48 op add *tmp7 35 12
+   49 printchar 47
+   50 op add *tmp8 35 5
+   51 printchar 40
+   52 op add *tmp9 35 20
+   53 printchar 55
+   54 op add *tmp10 35 0
+   55 printchar 35
+   56 op add *tmp11 35 0
+   57 printchar 35
+   58 op add *tmp12 35 0
+   59 printchar 35
+   60 op add *tmp13 35 0
+   61 printchar 35
+   62 op add *tmp14 35 0
+   63 printchar 35
    64 printchar 34
    65 print ";"
    66 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    24 print ";"
    25 print "\n"
    26 label *label34
-    * set :packCfg:name "CFG_BATTERY1"
    27 set :packCfg:type @battery
-    * set :packCfg:x 0
    28 set :packCfg:y 5
    29 set :packCfg:cu 5
    30 set :packCfg:pb 20

Modifications by Inline function call at line 9:1 (+31 instructions):
 
    65 label *label36
    66 set :packCfg:name "CFG_BATTERY2"
    67 set :packCfg:x 1
-    * setaddr :packCfg*retaddr *label3 (h:*label3)
-    * call *label0 *invalid :packCfg*retval (m:*label3) (h:*label3)
-    * label *label3
+   68 label *label37
+   69 print "const "
+   70 print :packCfg:name
+   71 print " "
+   72 print "= "
+   73 printchar 34
+   74 sensor *tmp0 :packCfg:type @id
+   75 op add *tmp1 35 *tmp0
+   76 printchar *tmp1
+   77 op add *tmp2 7 :packCfg:x
+   78 op floor *tmp3 *tmp2
+   79 op add *tmp4 35 *tmp3
+   80 printchar *tmp4
+   81 op add *tmp5 7 :packCfg:y
+   82 op floor *tmp6 *tmp5
+   83 op add *tmp7 35 *tmp6
+   84 printchar *tmp7
+   85 op add *tmp8 35 :packCfg:cu
+   86 printchar *tmp8
+   87 op add *tmp9 35 :packCfg:pb
+   88 printchar *tmp9
+   89 op add *tmp10 35 :packCfg:gr
+   90 printchar *tmp10
+   91 op add *tmp11 35 :packCfg:si
+   92 printchar *tmp11
+   93 op add *tmp12 35 :packCfg:ti
+   94 printchar *tmp12
+   95 op add *tmp13 35 :packCfg:mg
+   96 printchar *tmp13
+   97 op add *tmp14 35 :packCfg:rotation
+   98 printchar *tmp14
+   99 printchar 34
+  100 print ";"
+  101 print "\n"
+  102 label *label38
   103 set :packCfg:name "CFG_GENERATOR"
   104 set :packCfg:type @combustion-generator
   105 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
    37 sensor *tmp0 @battery @id
    38 op add *tmp1 35 *tmp0
    39 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
    40 printchar 42
-    * op add *tmp5 7 5
-    * op floor *tmp6 12
-    * op add *tmp7 35 12
    41 printchar 47
-    * op add *tmp8 35 5
    42 printchar 40
-    * op add *tmp9 35 20
    43 printchar 55
-    * op add *tmp10 35 0
    44 printchar 35
-    * op add *tmp11 35 0
    45 printchar 35
-    * op add *tmp12 35 0
    46 printchar 35
-    * op add *tmp13 35 0
    47 printchar 35
-    * op add *tmp14 35 0
    48 printchar 35
    49 printchar 34
    50 print ";"
 
    54 set :packCfg:x 1
    55 label *label37
    56 print "const "
-    * print :packCfg:name
+   57 print "CFG_BATTERY2"
    58 print " "
    59 print "= "
    60 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   61 sensor *tmp0 @battery @id
    62 op add *tmp1 35 *tmp0
    63 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+   64 op add *tmp2 7 1
+   65 op floor *tmp3 8
+   66 op add *tmp4 35 8
+   67 printchar 43
+   68 op add *tmp5 7 5
+   69 op floor *tmp6 12
+   70 op add *tmp7 35 12
+   71 printchar 47
+   72 op add *tmp8 35 5
+   73 printchar 40
+   74 op add *tmp9 35 20
+   75 printchar 55
+   76 op add *tmp10 35 0
+   77 printchar 35
+   78 op add *tmp11 35 0
+   79 printchar 35
+   80 op add *tmp12 35 0
+   81 printchar 35
+   82 op add *tmp13 35 0
+   83 printchar 35
+   84 op add *tmp14 35 0
+   85 printchar 35
    86 printchar 34
    87 print ";"
    88 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    24 print ";"
    25 print "\n"
    26 label *label34
-    * set :packCfg:type @battery
-    * set :packCfg:y 5
-    * set :packCfg:cu 5
-    * set :packCfg:pb 20
    27 label *label35
    28 print "const "
    29 print "CFG_BATTERY1"
 
    46 print ";"
    47 print "\n"
    48 label *label36
-    * set :packCfg:name "CFG_BATTERY2"
-    * set :packCfg:x 1
    49 label *label37
    50 print "const "
    51 print "CFG_BATTERY2"

Modifications by Inline function call at line 10:1 (+31 instructions):
 
    87 set :packCfg:y 4
    88 set :packCfg:cu 25
    89 set :packCfg:pb 15
-    * setaddr :packCfg*retaddr *label4 (h:*label4)
-    * call *label0 *invalid :packCfg*retval (m:*label4) (h:*label4)
-    * label *label4
+   90 label *label39
+   91 print "const "
+   92 print :packCfg:name
+   93 print " "
+   94 print "= "
+   95 printchar 34
+   96 sensor *tmp0 :packCfg:type @id
+   97 op add *tmp1 35 *tmp0
+   98 printchar *tmp1
+   99 op add *tmp2 7 :packCfg:x
+  100 op floor *tmp3 *tmp2
+  101 op add *tmp4 35 *tmp3
+  102 printchar *tmp4
+  103 op add *tmp5 7 :packCfg:y
+  104 op floor *tmp6 *tmp5
+  105 op add *tmp7 35 *tmp6
+  106 printchar *tmp7
+  107 op add *tmp8 35 :packCfg:cu
+  108 printchar *tmp8
+  109 op add *tmp9 35 :packCfg:pb
+  110 printchar *tmp9
+  111 op add *tmp10 35 :packCfg:gr
+  112 printchar *tmp10
+  113 op add *tmp11 35 :packCfg:si
+  114 printchar *tmp11
+  115 op add *tmp12 35 :packCfg:ti
+  116 printchar *tmp12
+  117 op add *tmp13 35 :packCfg:mg
+  118 printchar *tmp13
+  119 op add *tmp14 35 :packCfg:rotation
+  120 printchar *tmp14
+  121 printchar 34
+  122 print ";"
+  123 print "\n"
+  124 label *label40
   125 set :packCfg:name "CFG_SMELTER"
   126 set :packCfg:type @silicon-smelter
   127 set :packCfg:x 1.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
    55 sensor *tmp0 @battery @id
    56 op add *tmp1 35 *tmp0
    57 printchar *tmp1
-    * op add *tmp2 7 1
-    * op floor *tmp3 8
-    * op add *tmp4 35 8
    58 printchar 43
-    * op add *tmp5 7 5
-    * op floor *tmp6 12
-    * op add *tmp7 35 12
    59 printchar 47
-    * op add *tmp8 35 5
    60 printchar 40
-    * op add *tmp9 35 20
    61 printchar 55
-    * op add *tmp10 35 0
    62 printchar 35
-    * op add *tmp11 35 0
    63 printchar 35
-    * op add *tmp12 35 0
    64 printchar 35
-    * op add *tmp13 35 0
    65 printchar 35
-    * op add *tmp14 35 0
    66 printchar 35
    67 printchar 34
    68 print ";"
 
    76 set :packCfg:pb 15
    77 label *label39
    78 print "const "
-    * print :packCfg:name
+   79 print "CFG_GENERATOR"
    80 print " "
    81 print "= "
    82 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   83 sensor *tmp0 @combustion-generator @id
    84 op add *tmp1 35 *tmp0
    85 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+   86 op add *tmp2 7 0
+   87 op floor *tmp3 7
+   88 op add *tmp4 35 7
+   89 printchar 42
+   90 op add *tmp5 7 4
+   91 op floor *tmp6 11
+   92 op add *tmp7 35 11
+   93 printchar 46
+   94 op add *tmp8 35 25
+   95 printchar 60
+   96 op add *tmp9 35 15
+   97 printchar 50
+   98 op add *tmp10 35 0
+   99 printchar 35
+  100 op add *tmp11 35 0
+  101 printchar 35
+  102 op add *tmp12 35 0
+  103 printchar 35
+  104 op add *tmp13 35 0
+  105 printchar 35
+  106 op add *tmp14 35 0
+  107 printchar 35
   108 printchar 34
   109 print ";"
   110 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    68 print ";"
    69 print "\n"
    70 label *label38
-    * set :packCfg:name "CFG_GENERATOR"
-    * set :packCfg:type @combustion-generator
-    * set :packCfg:x 0
-    * set :packCfg:y 4
-    * set :packCfg:cu 25
-    * set :packCfg:pb 15
    71 label *label39
    72 print "const "
    73 print "CFG_GENERATOR"

Modifications by Inline function call at line 11:1 (+31 instructions):
 
   109 set :packCfg:y 3.5
   110 set :packCfg:cu 30
   111 set :packCfg:pb 25
-    * setaddr :packCfg*retaddr *label5 (h:*label5)
-    * call *label0 *invalid :packCfg*retval (m:*label5) (h:*label5)
-    * label *label5
+  112 label *label41
+  113 print "const "
+  114 print :packCfg:name
+  115 print " "
+  116 print "= "
+  117 printchar 34
+  118 sensor *tmp0 :packCfg:type @id
+  119 op add *tmp1 35 *tmp0
+  120 printchar *tmp1
+  121 op add *tmp2 7 :packCfg:x
+  122 op floor *tmp3 *tmp2
+  123 op add *tmp4 35 *tmp3
+  124 printchar *tmp4
+  125 op add *tmp5 7 :packCfg:y
+  126 op floor *tmp6 *tmp5
+  127 op add *tmp7 35 *tmp6
+  128 printchar *tmp7
+  129 op add *tmp8 35 :packCfg:cu
+  130 printchar *tmp8
+  131 op add *tmp9 35 :packCfg:pb
+  132 printchar *tmp9
+  133 op add *tmp10 35 :packCfg:gr
+  134 printchar *tmp10
+  135 op add *tmp11 35 :packCfg:si
+  136 printchar *tmp11
+  137 op add *tmp12 35 :packCfg:ti
+  138 printchar *tmp12
+  139 op add *tmp13 35 :packCfg:mg
+  140 printchar *tmp13
+  141 op add *tmp14 35 :packCfg:rotation
+  142 printchar *tmp14
+  143 printchar 34
+  144 print ";"
+  145 print "\n"
+  146 label *label42
   147 set :packCfg:name "CFG_INVERTED_SORT1"
   148 set :packCfg:type @inverted-sorter
   149 set :packCfg:x 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
    77 sensor *tmp0 @combustion-generator @id
    78 op add *tmp1 35 *tmp0
    79 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
    80 printchar 42
-    * op add *tmp5 7 4
-    * op floor *tmp6 11
-    * op add *tmp7 35 11
    81 printchar 46
-    * op add *tmp8 35 25
    82 printchar 60
-    * op add *tmp9 35 15
    83 printchar 50
-    * op add *tmp10 35 0
    84 printchar 35
-    * op add *tmp11 35 0
    85 printchar 35
-    * op add *tmp12 35 0
    86 printchar 35
-    * op add *tmp13 35 0
    87 printchar 35
-    * op add *tmp14 35 0
    88 printchar 35
    89 printchar 34
    90 print ";"
 
    98 set :packCfg:pb 25
    99 label *label41
   100 print "const "
-    * print :packCfg:name
+  101 print "CFG_SMELTER"
   102 print " "
   103 print "= "
   104 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  105 sensor *tmp0 @silicon-smelter @id
   106 op add *tmp1 35 *tmp0
   107 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  108 op add *tmp2 7 1.5
+  109 op floor *tmp3 8.5
+  110 op add *tmp4 35 8
+  111 printchar 43
+  112 op add *tmp5 7 3.5
+  113 op floor *tmp6 10.5
+  114 op add *tmp7 35 10
+  115 printchar 45
+  116 op add *tmp8 35 30
+  117 printchar 65
+  118 op add *tmp9 35 25
+  119 printchar 60
+  120 op add *tmp10 35 0
+  121 printchar 35
+  122 op add *tmp11 35 0
+  123 printchar 35
+  124 op add *tmp12 35 0
+  125 printchar 35
+  126 op add *tmp13 35 0
+  127 printchar 35
+  128 op add *tmp14 35 0
+  129 printchar 35
   130 printchar 34
   131 print ";"
   132 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    90 print ";"
    91 print "\n"
    92 label *label40
-    * set :packCfg:name "CFG_SMELTER"
-    * set :packCfg:type @silicon-smelter
-    * set :packCfg:x 1.5
-    * set :packCfg:y 3.5
-    * set :packCfg:cu 30
-    * set :packCfg:pb 25
    93 label *label41
    94 print "const "
    95 print "CFG_SMELTER"

Modifications by Inline function call at line 12:1 (+31 instructions):
 
   131 set :packCfg:y 2
   132 set :packCfg:cu 2
   133 set :packCfg:pb 2
-    * setaddr :packCfg*retaddr *label6 (h:*label6)
-    * call *label0 *invalid :packCfg*retval (m:*label6) (h:*label6)
-    * label *label6
+  134 label *label43
+  135 print "const "
+  136 print :packCfg:name
+  137 print " "
+  138 print "= "
+  139 printchar 34
+  140 sensor *tmp0 :packCfg:type @id
+  141 op add *tmp1 35 *tmp0
+  142 printchar *tmp1
+  143 op add *tmp2 7 :packCfg:x
+  144 op floor *tmp3 *tmp2
+  145 op add *tmp4 35 *tmp3
+  146 printchar *tmp4
+  147 op add *tmp5 7 :packCfg:y
+  148 op floor *tmp6 *tmp5
+  149 op add *tmp7 35 *tmp6
+  150 printchar *tmp7
+  151 op add *tmp8 35 :packCfg:cu
+  152 printchar *tmp8
+  153 op add *tmp9 35 :packCfg:pb
+  154 printchar *tmp9
+  155 op add *tmp10 35 :packCfg:gr
+  156 printchar *tmp10
+  157 op add *tmp11 35 :packCfg:si
+  158 printchar *tmp11
+  159 op add *tmp12 35 :packCfg:ti
+  160 printchar *tmp12
+  161 op add *tmp13 35 :packCfg:mg
+  162 printchar *tmp13
+  163 op add *tmp14 35 :packCfg:rotation
+  164 printchar *tmp14
+  165 printchar 34
+  166 print ";"
+  167 print "\n"
+  168 label *label44
   169 set :packCfg:name "CFG_PNEUMATIC_DRILL"
   170 set :packCfg:type @pneumatic-drill
   171 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
    99 sensor *tmp0 @silicon-smelter @id
   100 op add *tmp1 35 *tmp0
   101 printchar *tmp1
-    * op add *tmp2 7 1.5
-    * op floor *tmp3 8.5
-    * op add *tmp4 35 8
   102 printchar 43
-    * op add *tmp5 7 3.5
-    * op floor *tmp6 10.5
-    * op add *tmp7 35 10
   103 printchar 45
-    * op add *tmp8 35 30
   104 printchar 65
-    * op add *tmp9 35 25
   105 printchar 60
-    * op add *tmp10 35 0
   106 printchar 35
-    * op add *tmp11 35 0
   107 printchar 35
-    * op add *tmp12 35 0
   108 printchar 35
-    * op add *tmp13 35 0
   109 printchar 35
-    * op add *tmp14 35 0
   110 printchar 35
   111 printchar 34
   112 print ";"
 
   120 set :packCfg:pb 2
   121 label *label43
   122 print "const "
-    * print :packCfg:name
+  123 print "CFG_INVERTED_SORT1"
   124 print " "
   125 print "= "
   126 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  127 sensor *tmp0 @inverted-sorter @id
   128 op add *tmp1 35 *tmp0
   129 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  130 op add *tmp2 7 1
+  131 op floor *tmp3 8
+  132 op add *tmp4 35 8
+  133 printchar 43
+  134 op add *tmp5 7 2
+  135 op floor *tmp6 9
+  136 op add *tmp7 35 9
+  137 printchar 44
+  138 op add *tmp8 35 2
+  139 printchar 37
+  140 op add *tmp9 35 2
+  141 printchar 37
+  142 op add *tmp10 35 0
+  143 printchar 35
+  144 op add *tmp11 35 0
+  145 printchar 35
+  146 op add *tmp12 35 0
+  147 printchar 35
+  148 op add *tmp13 35 0
+  149 printchar 35
+  150 op add *tmp14 35 0
+  151 printchar 35
   152 printchar 34
   153 print ";"
   154 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
-    * set :packCfg:gr 0
     0 set :packCfg:si 0
     1 set :packCfg:ti 0
     2 set :packCfg:mg 0
 
   111 print ";"
   112 print "\n"
   113 label *label42
-    * set :packCfg:name "CFG_INVERTED_SORT1"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:x 1
-    * set :packCfg:y 2
-    * set :packCfg:cu 2
-    * set :packCfg:pb 2
   114 label *label43
   115 print "const "
   116 print "CFG_INVERTED_SORT1"

Modifications by Inline function call at line 13:1 (+31 instructions):
 
   153 set :packCfg:cu 18
   154 set :packCfg:pb 0
   155 set :packCfg:gr 10
-    * setaddr :packCfg*retaddr *label7 (h:*label7)
-    * call *label0 *invalid :packCfg*retval (m:*label7) (h:*label7)
-    * label *label7
+  156 label *label45
+  157 print "const "
+  158 print :packCfg:name
+  159 print " "
+  160 print "= "
+  161 printchar 34
+  162 sensor *tmp0 :packCfg:type @id
+  163 op add *tmp1 35 *tmp0
+  164 printchar *tmp1
+  165 op add *tmp2 7 :packCfg:x
+  166 op floor *tmp3 *tmp2
+  167 op add *tmp4 35 *tmp3
+  168 printchar *tmp4
+  169 op add *tmp5 7 :packCfg:y
+  170 op floor *tmp6 *tmp5
+  171 op add *tmp7 35 *tmp6
+  172 printchar *tmp7
+  173 op add *tmp8 35 :packCfg:cu
+  174 printchar *tmp8
+  175 op add *tmp9 35 :packCfg:pb
+  176 printchar *tmp9
+  177 op add *tmp10 35 :packCfg:gr
+  178 printchar *tmp10
+  179 op add *tmp11 35 :packCfg:si
+  180 printchar *tmp11
+  181 op add *tmp12 35 :packCfg:ti
+  182 printchar *tmp12
+  183 op add *tmp13 35 :packCfg:mg
+  184 printchar *tmp13
+  185 op add *tmp14 35 :packCfg:rotation
+  186 printchar *tmp14
+  187 printchar 34
+  188 print ";"
+  189 print "\n"
+  190 label *label46
   191 set :packCfg:name "CFG_UNLOADER1"
   192 set :packCfg:type @unloader
   193 set :packCfg:y 2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   120 sensor *tmp0 @inverted-sorter @id
   121 op add *tmp1 35 *tmp0
   122 printchar *tmp1
-    * op add *tmp2 7 1
-    * op floor *tmp3 8
-    * op add *tmp4 35 8
   123 printchar 43
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   124 printchar 44
-    * op add *tmp8 35 2
   125 printchar 37
-    * op add *tmp9 35 2
   126 printchar 37
-    * op add *tmp10 35 0
   127 printchar 35
-    * op add *tmp11 35 0
   128 printchar 35
-    * op add *tmp12 35 0
   129 printchar 35
-    * op add *tmp13 35 0
   130 printchar 35
-    * op add *tmp14 35 0
   131 printchar 35
   132 printchar 34
   133 print ";"
 
   142 set :packCfg:gr 10
   143 label *label45
   144 print "const "
-    * print :packCfg:name
+  145 print "CFG_PNEUMATIC_DRILL"
   146 print " "
   147 print "= "
   148 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  149 sensor *tmp0 @pneumatic-drill @id
   150 op add *tmp1 35 *tmp0
   151 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  152 op add *tmp2 7 0
+  153 op floor *tmp3 7
+  154 op add *tmp4 35 7
+  155 printchar 42
+  156 op add *tmp5 7 0
+  157 op floor *tmp6 7
+  158 op add *tmp7 35 7
+  159 printchar 42
+  160 op add *tmp8 35 18
+  161 printchar 53
+  162 op add *tmp9 35 0
+  163 printchar 35
+  164 op add *tmp10 35 10
+  165 printchar 45
+  166 op add *tmp11 35 0
+  167 printchar 35
+  168 op add *tmp12 35 0
+  169 printchar 35
+  170 op add *tmp13 35 0
+  171 printchar 35
+  172 op add *tmp14 35 0
+  173 printchar 35
   174 printchar 34
   175 print ";"
   176 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
     0 set :packCfg:mg 0
     1 set :packCfg:rotation 0
     2 label *label33
 
   131 print ";"
   132 print "\n"
   133 label *label44
-    * set :packCfg:name "CFG_PNEUMATIC_DRILL"
-    * set :packCfg:type @pneumatic-drill
   134 set :packCfg:x 0
-    * set :packCfg:y 0
-    * set :packCfg:cu 18
   135 set :packCfg:pb 0
-    * set :packCfg:gr 10
   136 label *label45
   137 print "const "
   138 print "CFG_PNEUMATIC_DRILL"

Modifications by Inline function call at line 14:1 (+31 instructions):
 
   175 set :packCfg:gr 0
   176 set :packCfg:si 30
   177 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label8 (h:*label8)
-    * call *label0 *invalid :packCfg*retval (m:*label8) (h:*label8)
-    * label *label8
+  178 label *label47
+  179 print "const "
+  180 print :packCfg:name
+  181 print " "
+  182 print "= "
+  183 printchar 34
+  184 sensor *tmp0 :packCfg:type @id
+  185 op add *tmp1 35 *tmp0
+  186 printchar *tmp1
+  187 op add *tmp2 7 :packCfg:x
+  188 op floor *tmp3 *tmp2
+  189 op add *tmp4 35 *tmp3
+  190 printchar *tmp4
+  191 op add *tmp5 7 :packCfg:y
+  192 op floor *tmp6 *tmp5
+  193 op add *tmp7 35 *tmp6
+  194 printchar *tmp7
+  195 op add *tmp8 35 :packCfg:cu
+  196 printchar *tmp8
+  197 op add *tmp9 35 :packCfg:pb
+  198 printchar *tmp9
+  199 op add *tmp10 35 :packCfg:gr
+  200 printchar *tmp10
+  201 op add *tmp11 35 :packCfg:si
+  202 printchar *tmp11
+  203 op add *tmp12 35 :packCfg:ti
+  204 printchar *tmp12
+  205 op add *tmp13 35 :packCfg:mg
+  206 printchar *tmp13
+  207 op add *tmp14 35 :packCfg:rotation
+  208 printchar *tmp14
+  209 printchar 34
+  210 print ";"
+  211 print "\n"
+  212 label *label48
   213 set :packCfg:name "CFG_INVERTED_SORT2"
   214 set :packCfg:type @inverted-sorter
   215 set :packCfg:x -1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   142 sensor *tmp0 @pneumatic-drill @id
   143 op add *tmp1 35 *tmp0
   144 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   145 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   146 printchar 42
-    * op add *tmp8 35 18
   147 printchar 53
-    * op add *tmp9 35 0
   148 printchar 35
-    * op add *tmp10 35 10
   149 printchar 45
-    * op add *tmp11 35 0
   150 printchar 35
-    * op add *tmp12 35 0
   151 printchar 35
-    * op add *tmp13 35 0
   152 printchar 35
-    * op add *tmp14 35 0
   153 printchar 35
   154 printchar 34
   155 print ";"
 
   164 set :packCfg:ti 25
   165 label *label47
   166 print "const "
-    * print :packCfg:name
+  167 print "CFG_UNLOADER1"
   168 print " "
   169 print "= "
   170 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  171 sensor *tmp0 @unloader @id
   172 op add *tmp1 35 *tmp0
   173 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  174 op add *tmp2 7 0
+  175 op floor *tmp3 7
+  176 op add *tmp4 35 7
+  177 printchar 42
+  178 op add *tmp5 7 2
+  179 op floor *tmp6 9
+  180 op add *tmp7 35 9
+  181 printchar 44
+  182 op add *tmp8 35 0
+  183 printchar 35
+  184 op add *tmp9 35 0
+  185 printchar 35
+  186 op add *tmp10 35 0
+  187 printchar 35
+  188 op add *tmp11 35 30
+  189 printchar 65
+  190 op add *tmp12 35 25
+  191 printchar 60
+  192 op add *tmp13 35 0
+  193 printchar 35
+  194 op add *tmp14 35 0
+  195 printchar 35
   196 printchar 34
   197 print ";"
   198 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   131 print ";"
   132 print "\n"
   133 label *label44
-    * set :packCfg:x 0
-    * set :packCfg:pb 0
   134 label *label45
   135 print "const "
   136 print "CFG_PNEUMATIC_DRILL"
 
   153 print ";"
   154 print "\n"
   155 label *label46
-    * set :packCfg:name "CFG_UNLOADER1"
-    * set :packCfg:type @unloader
   156 set :packCfg:y 2
-    * set :packCfg:cu 0
   157 set :packCfg:gr 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   158 label *label47
   159 print "const "
   160 print "CFG_UNLOADER1"

Modifications by Inline function call at line 15:1 (+31 instructions):
 
   197 set :packCfg:pb 2
   198 set :packCfg:si 0
   199 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label9 (h:*label9)
-    * call *label0 *invalid :packCfg*retval (m:*label9) (h:*label9)
-    * label *label9
+  200 label *label49
+  201 print "const "
+  202 print :packCfg:name
+  203 print " "
+  204 print "= "
+  205 printchar 34
+  206 sensor *tmp0 :packCfg:type @id
+  207 op add *tmp1 35 *tmp0
+  208 printchar *tmp1
+  209 op add *tmp2 7 :packCfg:x
+  210 op floor *tmp3 *tmp2
+  211 op add *tmp4 35 *tmp3
+  212 printchar *tmp4
+  213 op add *tmp5 7 :packCfg:y
+  214 op floor *tmp6 *tmp5
+  215 op add *tmp7 35 *tmp6
+  216 printchar *tmp7
+  217 op add *tmp8 35 :packCfg:cu
+  218 printchar *tmp8
+  219 op add *tmp9 35 :packCfg:pb
+  220 printchar *tmp9
+  221 op add *tmp10 35 :packCfg:gr
+  222 printchar *tmp10
+  223 op add *tmp11 35 :packCfg:si
+  224 printchar *tmp11
+  225 op add *tmp12 35 :packCfg:ti
+  226 printchar *tmp12
+  227 op add *tmp13 35 :packCfg:mg
+  228 printchar *tmp13
+  229 op add *tmp14 35 :packCfg:rotation
+  230 printchar *tmp14
+  231 printchar 34
+  232 print ";"
+  233 print "\n"
+  234 label *label50
   235 set :packCfg:name "CFG_OVERFLOW_GATE1"
   236 set :packCfg:type @overflow-gate
   237 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   164 sensor *tmp0 @unloader @id
   165 op add *tmp1 35 *tmp0
   166 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   167 printchar 42
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   168 printchar 44
-    * op add *tmp8 35 0
   169 printchar 35
-    * op add *tmp9 35 0
   170 printchar 35
-    * op add *tmp10 35 0
   171 printchar 35
-    * op add *tmp11 35 30
   172 printchar 65
-    * op add *tmp12 35 25
   173 printchar 60
-    * op add *tmp13 35 0
   174 printchar 35
-    * op add *tmp14 35 0
   175 printchar 35
   176 printchar 34
   177 print ";"
 
   186 set :packCfg:ti 0
   187 label *label49
   188 print "const "
-    * print :packCfg:name
+  189 print "CFG_INVERTED_SORT2"
   190 print " "
   191 print "= "
   192 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  193 sensor *tmp0 @inverted-sorter @id
   194 op add *tmp1 35 *tmp0
   195 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  196 op add *tmp2 7 -1
+  197 op floor *tmp3 6
+  198 op add *tmp4 35 6
+  199 printchar 41
+  200 op add *tmp5 7 2
+  201 op floor *tmp6 9
+  202 op add *tmp7 35 9
+  203 printchar 44
+  204 op add *tmp8 35 2
+  205 printchar 37
+  206 op add *tmp9 35 2
+  207 printchar 37
+  208 op add *tmp10 35 0
+  209 printchar 35
+  210 op add *tmp11 35 0
+  211 printchar 35
+  212 op add *tmp12 35 0
+  213 printchar 35
+  214 op add *tmp13 35 0
+  215 printchar 35
+  216 op add *tmp14 35 0
+  217 printchar 35
   218 printchar 34
   219 print ";"
   220 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   153 print ";"
   154 print "\n"
   155 label *label46
-    * set :packCfg:y 2
   156 set :packCfg:gr 0
   157 label *label47
   158 print "const "
 
   176 print ";"
   177 print "\n"
   178 label *label48
-    * set :packCfg:name "CFG_INVERTED_SORT2"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:x -1
-    * set :packCfg:cu 2
   179 set :packCfg:pb 2
   180 set :packCfg:si 0
   181 set :packCfg:ti 0

Modifications by Inline function call at line 16:1 (+31 instructions):
 
   219 set :packCfg:x 0
   220 set :packCfg:y 3
   221 set :packCfg:cu 4
-    * setaddr :packCfg*retaddr *label10 (h:*label10)
-    * call *label0 *invalid :packCfg*retval (m:*label10) (h:*label10)
-    * label *label10
+  222 label *label51
+  223 print "const "
+  224 print :packCfg:name
+  225 print " "
+  226 print "= "
+  227 printchar 34
+  228 sensor *tmp0 :packCfg:type @id
+  229 op add *tmp1 35 *tmp0
+  230 printchar *tmp1
+  231 op add *tmp2 7 :packCfg:x
+  232 op floor *tmp3 *tmp2
+  233 op add *tmp4 35 *tmp3
+  234 printchar *tmp4
+  235 op add *tmp5 7 :packCfg:y
+  236 op floor *tmp6 *tmp5
+  237 op add *tmp7 35 *tmp6
+  238 printchar *tmp7
+  239 op add *tmp8 35 :packCfg:cu
+  240 printchar *tmp8
+  241 op add *tmp9 35 :packCfg:pb
+  242 printchar *tmp9
+  243 op add *tmp10 35 :packCfg:gr
+  244 printchar *tmp10
+  245 op add *tmp11 35 :packCfg:si
+  246 printchar *tmp11
+  247 op add *tmp12 35 :packCfg:ti
+  248 printchar *tmp12
+  249 op add *tmp13 35 :packCfg:mg
+  250 printchar *tmp13
+  251 op add *tmp14 35 :packCfg:rotation
+  252 printchar *tmp14
+  253 printchar 34
+  254 print ";"
+  255 print "\n"
+  256 label *label52
   257 set :packCfg:name "CFG_PROCESSOR"
   258 set :packCfg:type @micro-processor
   259 set :packCfg:x 3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   188 sensor *tmp0 @inverted-sorter @id
   189 op add *tmp1 35 *tmp0
   190 printchar *tmp1
-    * op add *tmp2 7 -1
-    * op floor *tmp3 6
-    * op add *tmp4 35 6
   191 printchar 41
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   192 printchar 44
-    * op add *tmp8 35 2
   193 printchar 37
-    * op add *tmp9 35 2
   194 printchar 37
-    * op add *tmp10 35 0
   195 printchar 35
-    * op add *tmp11 35 0
   196 printchar 35
-    * op add *tmp12 35 0
   197 printchar 35
-    * op add *tmp13 35 0
   198 printchar 35
-    * op add *tmp14 35 0
   199 printchar 35
   200 printchar 34
   201 print ";"
 
   208 set :packCfg:cu 4
   209 label *label51
   210 print "const "
-    * print :packCfg:name
+  211 print "CFG_OVERFLOW_GATE1"
   212 print " "
   213 print "= "
   214 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  215 sensor *tmp0 @overflow-gate @id
   216 op add *tmp1 35 *tmp0
   217 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  218 op add *tmp2 7 0
+  219 op floor *tmp3 7
+  220 op add *tmp4 35 7
+  221 printchar 42
+  222 op add *tmp5 7 3
+  223 op floor *tmp6 10
+  224 op add *tmp7 35 10
+  225 printchar 45
+  226 op add *tmp8 35 4
+  227 printchar 39
+  228 op add *tmp9 35 2
+  229 printchar 37
+  230 op add *tmp10 35 0
+  231 printchar 35
+  232 op add *tmp11 35 0
+  233 printchar 35
+  234 op add *tmp12 35 0
+  235 printchar 35
+  236 op add *tmp13 35 0
+  237 printchar 35
+  238 op add *tmp14 35 0
+  239 printchar 35
   240 printchar 34
   241 print ";"
   242 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   176 print ";"
   177 print "\n"
   178 label *label48
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
   179 set :packCfg:ti 0
   180 label *label49
   181 print "const "
 
   199 print ";"
   200 print "\n"
   201 label *label50
-    * set :packCfg:name "CFG_OVERFLOW_GATE1"
-    * set :packCfg:type @overflow-gate
-    * set :packCfg:x 0
-    * set :packCfg:y 3
-    * set :packCfg:cu 4
   202 label *label51
   203 print "const "
   204 print "CFG_OVERFLOW_GATE1"

Modifications by Inline function call at line 17:1 (+31 instructions):
 
   241 set :packCfg:cu 90
   242 set :packCfg:pb 50
   243 set :packCfg:si 50
-    * setaddr :packCfg*retaddr *label11 (h:*label11)
-    * call *label0 *invalid :packCfg*retval (m:*label11) (h:*label11)
-    * label *label11
+  244 label *label53
+  245 print "const "
+  246 print :packCfg:name
+  247 print " "
+  248 print "= "
+  249 printchar 34
+  250 sensor *tmp0 :packCfg:type @id
+  251 op add *tmp1 35 *tmp0
+  252 printchar *tmp1
+  253 op add *tmp2 7 :packCfg:x
+  254 op floor *tmp3 *tmp2
+  255 op add *tmp4 35 *tmp3
+  256 printchar *tmp4
+  257 op add *tmp5 7 :packCfg:y
+  258 op floor *tmp6 *tmp5
+  259 op add *tmp7 35 *tmp6
+  260 printchar *tmp7
+  261 op add *tmp8 35 :packCfg:cu
+  262 printchar *tmp8
+  263 op add *tmp9 35 :packCfg:pb
+  264 printchar *tmp9
+  265 op add *tmp10 35 :packCfg:gr
+  266 printchar *tmp10
+  267 op add *tmp11 35 :packCfg:si
+  268 printchar *tmp11
+  269 op add *tmp12 35 :packCfg:ti
+  270 printchar *tmp12
+  271 op add *tmp13 35 :packCfg:mg
+  272 printchar *tmp13
+  273 op add *tmp14 35 :packCfg:rotation
+  274 printchar *tmp14
+  275 printchar 34
+  276 print ";"
+  277 print "\n"
+  278 label *label54
   279 set :packCfg:name "CFG_POWER_NODE"
   280 set :packCfg:type @power-node
   281 set :packCfg:x -1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   208 sensor *tmp0 @overflow-gate @id
   209 op add *tmp1 35 *tmp0
   210 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   211 printchar 42
-    * op add *tmp5 7 3
-    * op floor *tmp6 10
-    * op add *tmp7 35 10
   212 printchar 45
-    * op add *tmp8 35 4
   213 printchar 39
-    * op add *tmp9 35 2
   214 printchar 37
-    * op add *tmp10 35 0
   215 printchar 35
-    * op add *tmp11 35 0
   216 printchar 35
-    * op add *tmp12 35 0
   217 printchar 35
-    * op add *tmp13 35 0
   218 printchar 35
-    * op add *tmp14 35 0
   219 printchar 35
   220 printchar 34
   221 print ";"
 
   230 set :packCfg:si 50
   231 label *label53
   232 print "const "
-    * print :packCfg:name
+  233 print "CFG_PROCESSOR"
   234 print " "
   235 print "= "
   236 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  237 sensor *tmp0 @micro-processor @id
   238 op add *tmp1 35 *tmp0
   239 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  240 op add *tmp2 7 3
+  241 op floor *tmp3 10
+  242 op add *tmp4 35 10
+  243 printchar 45
+  244 op add *tmp5 7 4
+  245 op floor *tmp6 11
+  246 op add *tmp7 35 11
+  247 printchar 46
+  248 op add *tmp8 35 90
+  249 printchar 125
+  250 op add *tmp9 35 50
+  251 printchar 85
+  252 op add *tmp10 35 0
+  253 printchar 35
+  254 op add *tmp11 35 50
+  255 printchar 85
+  256 op add *tmp12 35 0
+  257 printchar 35
+  258 op add *tmp13 35 0
+  259 printchar 35
+  260 op add *tmp14 35 0
+  261 printchar 35
   262 printchar 34
   263 print ";"
   264 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   221 print ";"
   222 print "\n"
   223 label *label52
-    * set :packCfg:name "CFG_PROCESSOR"
-    * set :packCfg:type @micro-processor
-    * set :packCfg:x 3
-    * set :packCfg:y 4
-    * set :packCfg:cu 90
-    * set :packCfg:pb 50
-    * set :packCfg:si 50
   224 label *label53
   225 print "const "
   226 print "CFG_PROCESSOR"

Modifications by Inline function call at line 18:1 (+31 instructions):
 
   263 set :packCfg:cu 2
   264 set :packCfg:pb 6
   265 set :packCfg:si 0
-    * setaddr :packCfg*retaddr *label12 (h:*label12)
-    * call *label0 *invalid :packCfg*retval (m:*label12) (h:*label12)
-    * label *label12
+  266 label *label55
+  267 print "const "
+  268 print :packCfg:name
+  269 print " "
+  270 print "= "
+  271 printchar 34
+  272 sensor *tmp0 :packCfg:type @id
+  273 op add *tmp1 35 *tmp0
+  274 printchar *tmp1
+  275 op add *tmp2 7 :packCfg:x
+  276 op floor *tmp3 *tmp2
+  277 op add *tmp4 35 *tmp3
+  278 printchar *tmp4
+  279 op add *tmp5 7 :packCfg:y
+  280 op floor *tmp6 *tmp5
+  281 op add *tmp7 35 *tmp6
+  282 printchar *tmp7
+  283 op add *tmp8 35 :packCfg:cu
+  284 printchar *tmp8
+  285 op add *tmp9 35 :packCfg:pb
+  286 printchar *tmp9
+  287 op add *tmp10 35 :packCfg:gr
+  288 printchar *tmp10
+  289 op add *tmp11 35 :packCfg:si
+  290 printchar *tmp11
+  291 op add *tmp12 35 :packCfg:ti
+  292 printchar *tmp12
+  293 op add *tmp13 35 :packCfg:mg
+  294 printchar *tmp13
+  295 op add *tmp14 35 :packCfg:rotation
+  296 printchar *tmp14
+  297 printchar 34
+  298 print ";"
+  299 print "\n"
+  300 label *label56
   301 set :packCfg:name "CFG_UNLOADER2"
   302 set :packCfg:type @unloader
   303 set :packCfg:x -2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   230 sensor *tmp0 @micro-processor @id
   231 op add *tmp1 35 *tmp0
   232 printchar *tmp1
-    * op add *tmp2 7 3
-    * op floor *tmp3 10
-    * op add *tmp4 35 10
   233 printchar 45
-    * op add *tmp5 7 4
-    * op floor *tmp6 11
-    * op add *tmp7 35 11
   234 printchar 46
-    * op add *tmp8 35 90
   235 printchar 125
-    * op add *tmp9 35 50
   236 printchar 85
-    * op add *tmp10 35 0
   237 printchar 35
-    * op add *tmp11 35 50
   238 printchar 85
-    * op add *tmp12 35 0
   239 printchar 35
-    * op add *tmp13 35 0
   240 printchar 35
-    * op add *tmp14 35 0
   241 printchar 35
   242 printchar 34
   243 print ";"
 
   252 set :packCfg:si 0
   253 label *label55
   254 print "const "
-    * print :packCfg:name
+  255 print "CFG_POWER_NODE"
   256 print " "
   257 print "= "
   258 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  259 sensor *tmp0 @power-node @id
   260 op add *tmp1 35 *tmp0
   261 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  262 op add *tmp2 7 -1
+  263 op floor *tmp3 6
+  264 op add *tmp4 35 6
+  265 printchar 41
+  266 op add *tmp5 7 -3
+  267 op floor *tmp6 4
+  268 op add *tmp7 35 4
+  269 printchar 39
+  270 op add *tmp8 35 2
+  271 printchar 37
+  272 op add *tmp9 35 6
+  273 printchar 41
+  274 op add *tmp10 35 0
+  275 printchar 35
+  276 op add *tmp11 35 0
+  277 printchar 35
+  278 op add *tmp12 35 0
+  279 printchar 35
+  280 op add *tmp13 35 0
+  281 printchar 35
+  282 op add *tmp14 35 0
+  283 printchar 35
   284 printchar 34
   285 print ";"
   286 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   176 print ";"
   177 print "\n"
   178 label *label48
-    * set :packCfg:ti 0
   179 label *label49
   180 print "const "
   181 print "CFG_INVERTED_SORT2"
 
   242 print ";"
   243 print "\n"
   244 label *label54
-    * set :packCfg:name "CFG_POWER_NODE"
-    * set :packCfg:type @power-node
-    * set :packCfg:x -1
-    * set :packCfg:y -3
-    * set :packCfg:cu 2
-    * set :packCfg:pb 6
-    * set :packCfg:si 0
   245 label *label55
   246 print "const "
   247 print "CFG_POWER_NODE"

Modifications by Inline function call at line 19:1 (+31 instructions):
 
   285 set :packCfg:pb 0
   286 set :packCfg:si 30
   287 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label13 (h:*label13)
-    * call *label0 *invalid :packCfg*retval (m:*label13) (h:*label13)
-    * label *label13
+  288 label *label57
+  289 print "const "
+  290 print :packCfg:name
+  291 print " "
+  292 print "= "
+  293 printchar 34
+  294 sensor *tmp0 :packCfg:type @id
+  295 op add *tmp1 35 *tmp0
+  296 printchar *tmp1
+  297 op add *tmp2 7 :packCfg:x
+  298 op floor *tmp3 *tmp2
+  299 op add *tmp4 35 *tmp3
+  300 printchar *tmp4
+  301 op add *tmp5 7 :packCfg:y
+  302 op floor *tmp6 *tmp5
+  303 op add *tmp7 35 *tmp6
+  304 printchar *tmp7
+  305 op add *tmp8 35 :packCfg:cu
+  306 printchar *tmp8
+  307 op add *tmp9 35 :packCfg:pb
+  308 printchar *tmp9
+  309 op add *tmp10 35 :packCfg:gr
+  310 printchar *tmp10
+  311 op add *tmp11 35 :packCfg:si
+  312 printchar *tmp11
+  313 op add *tmp12 35 :packCfg:ti
+  314 printchar *tmp12
+  315 op add *tmp13 35 :packCfg:mg
+  316 printchar *tmp13
+  317 op add *tmp14 35 :packCfg:rotation
+  318 printchar *tmp14
+  319 printchar 34
+  320 print ";"
+  321 print "\n"
+  322 label *label58
   323 set :packCfg:name "CFG_AIR_FACTORY"
   324 set :packCfg:type @air-factory
   325 set :packCfg:x -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   251 sensor *tmp0 @power-node @id
   252 op add *tmp1 35 *tmp0
   253 printchar *tmp1
-    * op add *tmp2 7 -1
-    * op floor *tmp3 6
-    * op add *tmp4 35 6
   254 printchar 41
-    * op add *tmp5 7 -3
-    * op floor *tmp6 4
-    * op add *tmp7 35 4
   255 printchar 39
-    * op add *tmp8 35 2
   256 printchar 37
-    * op add *tmp9 35 6
   257 printchar 41
-    * op add *tmp10 35 0
   258 printchar 35
-    * op add *tmp11 35 0
   259 printchar 35
-    * op add *tmp12 35 0
   260 printchar 35
-    * op add *tmp13 35 0
   261 printchar 35
-    * op add *tmp14 35 0
   262 printchar 35
   263 printchar 34
   264 print ";"
 
   274 set :packCfg:ti 25
   275 label *label57
   276 print "const "
-    * print :packCfg:name
+  277 print "CFG_UNLOADER2"
   278 print " "
   279 print "= "
   280 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  281 sensor *tmp0 @unloader @id
   282 op add *tmp1 35 *tmp0
   283 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  284 op add *tmp2 7 -2
+  285 op floor *tmp3 5
+  286 op add *tmp4 35 5
+  287 printchar 40
+  288 op add *tmp5 7 0
+  289 op floor *tmp6 7
+  290 op add *tmp7 35 7
+  291 printchar 42
+  292 op add *tmp8 35 0
+  293 printchar 35
+  294 op add *tmp9 35 0
+  295 printchar 35
+  296 op add *tmp10 35 0
+  297 printchar 35
+  298 op add *tmp11 35 30
+  299 printchar 65
+  300 op add *tmp12 35 25
+  301 printchar 60
+  302 op add *tmp13 35 0
+  303 printchar 35
+  304 op add *tmp14 35 0
+  305 printchar 35
   306 printchar 34
   307 print ";"
   308 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
     0 set :packCfg:mg 0
-    * set :packCfg:rotation 0
     1 label *label33
     2 print "const "
     3 print "CFG_PRESS"
 
   263 print ";"
   264 print "\n"
   265 label *label56
-    * set :packCfg:name "CFG_UNLOADER2"
-    * set :packCfg:type @unloader
-    * set :packCfg:x -2
-    * set :packCfg:y 0
-    * set :packCfg:cu 0
-    * set :packCfg:pb 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   266 label *label57
   267 print "const "
   268 print "CFG_UNLOADER2"

Modifications by Inline function call at line 20:1 (+31 instructions):
 
   307 set :packCfg:si 0
   308 set :packCfg:ti 0
   309 set :packCfg:rotation 3
-    * setaddr :packCfg*retaddr *label14 (h:*label14)
-    * call *label0 *invalid :packCfg*retval (m:*label14) (h:*label14)
-    * label *label14
+  310 label *label59
+  311 print "const "
+  312 print :packCfg:name
+  313 print " "
+  314 print "= "
+  315 printchar 34
+  316 sensor *tmp0 :packCfg:type @id
+  317 op add *tmp1 35 *tmp0
+  318 printchar *tmp1
+  319 op add *tmp2 7 :packCfg:x
+  320 op floor *tmp3 *tmp2
+  321 op add *tmp4 35 *tmp3
+  322 printchar *tmp4
+  323 op add *tmp5 7 :packCfg:y
+  324 op floor *tmp6 *tmp5
+  325 op add *tmp7 35 *tmp6
+  326 printchar *tmp7
+  327 op add *tmp8 35 :packCfg:cu
+  328 printchar *tmp8
+  329 op add *tmp9 35 :packCfg:pb
+  330 printchar *tmp9
+  331 op add *tmp10 35 :packCfg:gr
+  332 printchar *tmp10
+  333 op add *tmp11 35 :packCfg:si
+  334 printchar *tmp11
+  335 op add *tmp12 35 :packCfg:ti
+  336 printchar *tmp12
+  337 op add *tmp13 35 :packCfg:mg
+  338 printchar *tmp13
+  339 op add *tmp14 35 :packCfg:rotation
+  340 printchar *tmp14
+  341 printchar 34
+  342 print ";"
+  343 print "\n"
+  344 label *label60
   345 set :packCfg:name "CFG_UNLOADER3"
   346 set :packCfg:type @unloader
   347 set :packCfg:x 2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   272 sensor *tmp0 @unloader @id
   273 op add *tmp1 35 *tmp0
   274 printchar *tmp1
-    * op add *tmp2 7 -2
-    * op floor *tmp3 5
-    * op add *tmp4 35 5
   275 printchar 40
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   276 printchar 42
-    * op add *tmp8 35 0
   277 printchar 35
-    * op add *tmp9 35 0
   278 printchar 35
-    * op add *tmp10 35 0
   279 printchar 35
-    * op add *tmp11 35 30
   280 printchar 65
-    * op add *tmp12 35 25
   281 printchar 60
-    * op add *tmp13 35 0
   282 printchar 35
-    * op add *tmp14 35 0
   283 printchar 35
   284 printchar 34
   285 print ";"
 
   296 set :packCfg:rotation 3
   297 label *label59
   298 print "const "
-    * print :packCfg:name
+  299 print "CFG_AIR_FACTORY"
   300 print " "
   301 print "= "
   302 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  303 sensor *tmp0 @air-factory @id
   304 op add *tmp1 35 *tmp0
   305 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  306 op add *tmp2 7 -3
+  307 op floor *tmp3 4
+  308 op add *tmp4 35 4
+  309 printchar 39
+  310 op add *tmp5 7 -2
+  311 op floor *tmp6 5
+  312 op add *tmp7 35 5
+  313 printchar 40
+  314 op add *tmp8 35 60
+  315 printchar 95
+  316 op add *tmp9 35 70
+  317 printchar 105
+  318 op add *tmp10 35 0
+  319 printchar 35
+  320 op add *tmp11 35 0
+  321 printchar 35
+  322 op add *tmp12 35 0
+  323 printchar 35
+  324 op add *tmp13 35 0
+  325 printchar 35
+  326 op add *tmp14 35 3
+  327 printchar 38
   328 printchar 34
   329 print ";"
   330 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   285 print ";"
   286 print "\n"
   287 label *label58
-    * set :packCfg:name "CFG_AIR_FACTORY"
-    * set :packCfg:type @air-factory
-    * set :packCfg:x -3
-    * set :packCfg:y -2
-    * set :packCfg:cu 60
-    * set :packCfg:pb 70
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
-    * set :packCfg:rotation 3
   288 label *label59
   289 print "const "
   290 print "CFG_AIR_FACTORY"

Modifications by Inline function call at line 21:1 (+31 instructions):
 
   329 set :packCfg:si 30
   330 set :packCfg:ti 25
   331 set :packCfg:rotation 0
-    * setaddr :packCfg*retaddr *label15 (h:*label15)
-    * call *label0 *invalid :packCfg*retval (m:*label15) (h:*label15)
-    * label *label15
+  332 label *label61
+  333 print "const "
+  334 print :packCfg:name
+  335 print " "
+  336 print "= "
+  337 printchar 34
+  338 sensor *tmp0 :packCfg:type @id
+  339 op add *tmp1 35 *tmp0
+  340 printchar *tmp1
+  341 op add *tmp2 7 :packCfg:x
+  342 op floor *tmp3 *tmp2
+  343 op add *tmp4 35 *tmp3
+  344 printchar *tmp4
+  345 op add *tmp5 7 :packCfg:y
+  346 op floor *tmp6 *tmp5
+  347 op add *tmp7 35 *tmp6
+  348 printchar *tmp7
+  349 op add *tmp8 35 :packCfg:cu
+  350 printchar *tmp8
+  351 op add *tmp9 35 :packCfg:pb
+  352 printchar *tmp9
+  353 op add *tmp10 35 :packCfg:gr
+  354 printchar *tmp10
+  355 op add *tmp11 35 :packCfg:si
+  356 printchar *tmp11
+  357 op add *tmp12 35 :packCfg:ti
+  358 printchar *tmp12
+  359 op add *tmp13 35 :packCfg:mg
+  360 printchar *tmp13
+  361 op add *tmp14 35 :packCfg:rotation
+  362 printchar *tmp14
+  363 printchar 34
+  364 print ";"
+  365 print "\n"
+  366 label *label62
   367 set :packCfg:name "CFG_INVERTED_SORT3"
   368 set :packCfg:type @inverted-sorter
   369 set :packCfg:y 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   294 sensor *tmp0 @air-factory @id
   295 op add *tmp1 35 *tmp0
   296 printchar *tmp1
-    * op add *tmp2 7 -3
-    * op floor *tmp3 4
-    * op add *tmp4 35 4
   297 printchar 39
-    * op add *tmp5 7 -2
-    * op floor *tmp6 5
-    * op add *tmp7 35 5
   298 printchar 40
-    * op add *tmp8 35 60
   299 printchar 95
-    * op add *tmp9 35 70
   300 printchar 105
-    * op add *tmp10 35 0
   301 printchar 35
-    * op add *tmp11 35 0
   302 printchar 35
-    * op add *tmp12 35 0
   303 printchar 35
-    * op add *tmp13 35 0
   304 printchar 35
-    * op add *tmp14 35 3
   305 printchar 38
   306 printchar 34
   307 print ";"
 
   318 set :packCfg:rotation 0
   319 label *label61
   320 print "const "
-    * print :packCfg:name
+  321 print "CFG_UNLOADER3"
   322 print " "
   323 print "= "
   324 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  325 sensor *tmp0 @unloader @id
   326 op add *tmp1 35 *tmp0
   327 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  328 op add *tmp2 7 2
+  329 op floor *tmp3 9
+  330 op add *tmp4 35 9
+  331 printchar 44
+  332 op add *tmp5 7 -1
+  333 op floor *tmp6 6
+  334 op add *tmp7 35 6
+  335 printchar 41
+  336 op add *tmp8 35 0
+  337 printchar 35
+  338 op add *tmp9 35 0
+  339 printchar 35
+  340 op add *tmp10 35 0
+  341 printchar 35
+  342 op add *tmp11 35 30
+  343 printchar 65
+  344 op add *tmp12 35 25
+  345 printchar 60
+  346 op add *tmp13 35 0
+  347 printchar 35
+  348 op add *tmp14 35 0
+  349 printchar 35
   350 printchar 34
   351 print ";"
   352 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   307 print ";"
   308 print "\n"
   309 label *label60
-    * set :packCfg:name "CFG_UNLOADER3"
-    * set :packCfg:type @unloader
   310 set :packCfg:x 2
-    * set :packCfg:y -1
-    * set :packCfg:cu 0
-    * set :packCfg:pb 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   311 set :packCfg:rotation 0
   312 label *label61
   313 print "const "

Modifications by Inline function 'packCfg' defined at line 40:1 (+461 instructions):
 
   351 set :packCfg:pb 2
   352 set :packCfg:si 0
   353 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label16 (h:*label16)
-    * call *label0 *invalid :packCfg*retval (m:*label16) (h:*label16)
-    * label *label16
+  354 label *label63
+  355 print "const "
+  356 print :packCfg:name
+  357 print " "
+  358 print "= "
+  359 printchar 34
+  360 sensor *tmp0 :packCfg:type @id
+  361 op add *tmp1 35 *tmp0
+  362 printchar *tmp1
+  363 op add *tmp2 7 :packCfg:x
+  364 op floor *tmp3 *tmp2
+  365 op add *tmp4 35 *tmp3
+  366 printchar *tmp4
+  367 op add *tmp5 7 :packCfg:y
+  368 op floor *tmp6 *tmp5
+  369 op add *tmp7 35 *tmp6
+  370 printchar *tmp7
+  371 op add *tmp8 35 :packCfg:cu
+  372 printchar *tmp8
+  373 op add *tmp9 35 :packCfg:pb
+  374 printchar *tmp9
+  375 op add *tmp10 35 :packCfg:gr
+  376 printchar *tmp10
+  377 op add *tmp11 35 :packCfg:si
+  378 printchar *tmp11
+  379 op add *tmp12 35 :packCfg:ti
+  380 printchar *tmp12
+  381 op add *tmp13 35 :packCfg:mg
+  382 printchar *tmp13
+  383 op add *tmp14 35 :packCfg:rotation
+  384 printchar *tmp14
+  385 printchar 34
+  386 print ";"
+  387 print "\n"
+  388 label *label64
   389 set :packCfg:name "CFG_KILN"
   390 set :packCfg:type @kiln
   391 set :packCfg:x 2.5
 
   393 set :packCfg:cu 60
   394 set :packCfg:pb 30
   395 set :packCfg:gr 30
-    * setaddr :packCfg*retaddr *label17 (h:*label17)
-    * call *label0 *invalid :packCfg*retval (m:*label17) (h:*label17)
-    * label *label17
+  396 label *label65
+  397 print "const "
+  398 print :packCfg:name
+  399 print " "
+  400 print "= "
+  401 printchar 34
+  402 sensor *tmp0 :packCfg:type @id
+  403 op add *tmp1 35 *tmp0
+  404 printchar *tmp1
+  405 op add *tmp2 7 :packCfg:x
+  406 op floor *tmp3 *tmp2
+  407 op add *tmp4 35 *tmp3
+  408 printchar *tmp4
+  409 op add *tmp5 7 :packCfg:y
+  410 op floor *tmp6 *tmp5
+  411 op add *tmp7 35 *tmp6
+  412 printchar *tmp7
+  413 op add *tmp8 35 :packCfg:cu
+  414 printchar *tmp8
+  415 op add *tmp9 35 :packCfg:pb
+  416 printchar *tmp9
+  417 op add *tmp10 35 :packCfg:gr
+  418 printchar *tmp10
+  419 op add *tmp11 35 :packCfg:si
+  420 printchar *tmp11
+  421 op add *tmp12 35 :packCfg:ti
+  422 printchar *tmp12
+  423 op add *tmp13 35 :packCfg:mg
+  424 printchar *tmp13
+  425 op add *tmp14 35 :packCfg:rotation
+  426 printchar *tmp14
+  427 printchar 34
+  428 print ";"
+  429 print "\n"
+  430 label *label66
   431 set :packCfg:name "CFG_WATER_EXT"
   432 set :packCfg:type @water-extractor
   433 set :packCfg:x -4.5
   434 set :packCfg:y 3.5
   435 set :packCfg:cu 30
   436 set :packCfg:mg 30
-    * setaddr :packCfg*retaddr *label18 (h:*label18)
-    * call *label0 *invalid :packCfg*retval (m:*label18) (h:*label18)
-    * label *label18
+  437 label *label67
+  438 print "const "
+  439 print :packCfg:name
+  440 print " "
+  441 print "= "
+  442 printchar 34
+  443 sensor *tmp0 :packCfg:type @id
+  444 op add *tmp1 35 *tmp0
+  445 printchar *tmp1
+  446 op add *tmp2 7 :packCfg:x
+  447 op floor *tmp3 *tmp2
+  448 op add *tmp4 35 *tmp3
+  449 printchar *tmp4
+  450 op add *tmp5 7 :packCfg:y
+  451 op floor *tmp6 *tmp5
+  452 op add *tmp7 35 *tmp6
+  453 printchar *tmp7
+  454 op add *tmp8 35 :packCfg:cu
+  455 printchar *tmp8
+  456 op add *tmp9 35 :packCfg:pb
+  457 printchar *tmp9
+  458 op add *tmp10 35 :packCfg:gr
+  459 printchar *tmp10
+  460 op add *tmp11 35 :packCfg:si
+  461 printchar *tmp11
+  462 op add *tmp12 35 :packCfg:ti
+  463 printchar *tmp12
+  464 op add *tmp13 35 :packCfg:mg
+  465 printchar *tmp13
+  466 op add *tmp14 35 :packCfg:rotation
+  467 printchar *tmp14
+  468 printchar 34
+  469 print ";"
+  470 print "\n"
+  471 label *label68
   472 set :packCfg:name "CFG_OVERFLOW_GATE2"
   473 set :packCfg:type @overflow-gate
   474 set :packCfg:x -3
 
   477 set :packCfg:pb 2
   478 set :packCfg:gr 0
   479 set :packCfg:mg 0
-    * setaddr :packCfg*retaddr *label19 (h:*label19)
-    * call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
-    * label *label19
+  480 label *label69
+  481 print "const "
+  482 print :packCfg:name
+  483 print " "
+  484 print "= "
+  485 printchar 34
+  486 sensor *tmp0 :packCfg:type @id
+  487 op add *tmp1 35 *tmp0
+  488 printchar *tmp1
+  489 op add *tmp2 7 :packCfg:x
+  490 op floor *tmp3 *tmp2
+  491 op add *tmp4 35 *tmp3
+  492 printchar *tmp4
+  493 op add *tmp5 7 :packCfg:y
+  494 op floor *tmp6 *tmp5
+  495 op add *tmp7 35 *tmp6
+  496 printchar *tmp7
+  497 op add *tmp8 35 :packCfg:cu
+  498 printchar *tmp8
+  499 op add *tmp9 35 :packCfg:pb
+  500 printchar *tmp9
+  501 op add *tmp10 35 :packCfg:gr
+  502 printchar *tmp10
+  503 op add *tmp11 35 :packCfg:si
+  504 printchar *tmp11
+  505 op add *tmp12 35 :packCfg:ti
+  506 printchar *tmp12
+  507 op add *tmp13 35 :packCfg:mg
+  508 printchar *tmp13
+  509 op add *tmp14 35 :packCfg:rotation
+  510 printchar *tmp14
+  511 printchar 34
+  512 print ";"
+  513 print "\n"
+  514 label *label70
   515 set :packCfg:name "CFG_OVERFLOW_GATE3"
   516 set :packCfg:x -4
-    * setaddr :packCfg*retaddr *label20 (h:*label20)
-    * call *label0 *invalid :packCfg*retval (m:*label20) (h:*label20)
-    * label *label20
+  517 label *label71
+  518 print "const "
+  519 print :packCfg:name
+  520 print " "
+  521 print "= "
+  522 printchar 34
+  523 sensor *tmp0 :packCfg:type @id
+  524 op add *tmp1 35 *tmp0
+  525 printchar *tmp1
+  526 op add *tmp2 7 :packCfg:x
+  527 op floor *tmp3 *tmp2
+  528 op add *tmp4 35 *tmp3
+  529 printchar *tmp4
+  530 op add *tmp5 7 :packCfg:y
+  531 op floor *tmp6 *tmp5
+  532 op add *tmp7 35 *tmp6
+  533 printchar *tmp7
+  534 op add *tmp8 35 :packCfg:cu
+  535 printchar *tmp8
+  536 op add *tmp9 35 :packCfg:pb
+  537 printchar *tmp9
+  538 op add *tmp10 35 :packCfg:gr
+  539 printchar *tmp10
+  540 op add *tmp11 35 :packCfg:si
+  541 printchar *tmp11
+  542 op add *tmp12 35 :packCfg:ti
+  543 printchar *tmp12
+  544 op add *tmp13 35 :packCfg:mg
+  545 printchar *tmp13
+  546 op add *tmp14 35 :packCfg:rotation
+  547 printchar *tmp14
+  548 printchar 34
+  549 print ";"
+  550 print "\n"
+  551 label *label72
   552 set :packCfg:name "CFG_STEAM_GEN"
   553 set :packCfg:type @steam-generator
   554 set :packCfg:x -4.5
 
   557 set :packCfg:pb 40
   558 set :packCfg:gr 25
   559 set :packCfg:si 30
-    * setaddr :packCfg*retaddr *label21 (h:*label21)
-    * call *label0 *invalid :packCfg*retval (m:*label21) (h:*label21)
-    * label *label21
+  560 label *label73
+  561 print "const "
+  562 print :packCfg:name
+  563 print " "
+  564 print "= "
+  565 printchar 34
+  566 sensor *tmp0 :packCfg:type @id
+  567 op add *tmp1 35 *tmp0
+  568 printchar *tmp1
+  569 op add *tmp2 7 :packCfg:x
+  570 op floor *tmp3 *tmp2
+  571 op add *tmp4 35 *tmp3
+  572 printchar *tmp4
+  573 op add *tmp5 7 :packCfg:y
+  574 op floor *tmp6 *tmp5
+  575 op add *tmp7 35 *tmp6
+  576 printchar *tmp7
+  577 op add *tmp8 35 :packCfg:cu
+  578 printchar *tmp8
+  579 op add *tmp9 35 :packCfg:pb
+  580 printchar *tmp9
+  581 op add *tmp10 35 :packCfg:gr
+  582 printchar *tmp10
+  583 op add *tmp11 35 :packCfg:si
+  584 printchar *tmp11
+  585 op add *tmp12 35 :packCfg:ti
+  586 printchar *tmp12
+  587 op add *tmp13 35 :packCfg:mg
+  588 printchar *tmp13
+  589 op add *tmp14 35 :packCfg:rotation
+  590 printchar *tmp14
+  591 printchar 34
+  592 print ";"
+  593 print "\n"
+  594 label *label74
   595 set :packCfg:name "CFG_MULTIPRESS"
   596 set :packCfg:type @multi-press
   597 set :packCfg:x -2
 
   601 set :packCfg:gr 50
   602 set :packCfg:si 25
   603 set :packCfg:ti 100
-    * setaddr :packCfg*retaddr *label22 (h:*label22)
-    * call *label0 *invalid :packCfg*retval (m:*label22) (h:*label22)
-    * label *label22
+  604 label *label75
+  605 print "const "
+  606 print :packCfg:name
+  607 print " "
+  608 print "= "
+  609 printchar 34
+  610 sensor *tmp0 :packCfg:type @id
+  611 op add *tmp1 35 *tmp0
+  612 printchar *tmp1
+  613 op add *tmp2 7 :packCfg:x
+  614 op floor *tmp3 *tmp2
+  615 op add *tmp4 35 *tmp3
+  616 printchar *tmp4
+  617 op add *tmp5 7 :packCfg:y
+  618 op floor *tmp6 *tmp5
+  619 op add *tmp7 35 *tmp6
+  620 printchar *tmp7
+  621 op add *tmp8 35 :packCfg:cu
+  622 printchar *tmp8
+  623 op add *tmp9 35 :packCfg:pb
+  624 printchar *tmp9
+  625 op add *tmp10 35 :packCfg:gr
+  626 printchar *tmp10
+  627 op add *tmp11 35 :packCfg:si
+  628 printchar *tmp11
+  629 op add *tmp12 35 :packCfg:ti
+  630 printchar *tmp12
+  631 op add *tmp13 35 :packCfg:mg
+  632 printchar *tmp13
+  633 op add *tmp14 35 :packCfg:rotation
+  634 printchar *tmp14
+  635 printchar 34
+  636 print ";"
+  637 print "\n"
+  638 label *label76
   639 set :packCfg:name "CFG_WATER_EXT2"
   640 set :packCfg:type @water-extractor
   641 set :packCfg:x -4.5
 
   646 set :packCfg:si 0
   647 set :packCfg:ti 0
   648 set :packCfg:mg 30
-    * setaddr :packCfg*retaddr *label23 (h:*label23)
-    * call *label0 *invalid :packCfg*retval (m:*label23) (h:*label23)
-    * label *label23
+  649 label *label77
+  650 print "const "
+  651 print :packCfg:name
+  652 print " "
+  653 print "= "
+  654 printchar 34
+  655 sensor *tmp0 :packCfg:type @id
+  656 op add *tmp1 35 *tmp0
+  657 printchar *tmp1
+  658 op add *tmp2 7 :packCfg:x
+  659 op floor *tmp3 *tmp2
+  660 op add *tmp4 35 *tmp3
+  661 printchar *tmp4
+  662 op add *tmp5 7 :packCfg:y
+  663 op floor *tmp6 *tmp5
+  664 op add *tmp7 35 *tmp6
+  665 printchar *tmp7
+  666 op add *tmp8 35 :packCfg:cu
+  667 printchar *tmp8
+  668 op add *tmp9 35 :packCfg:pb
+  669 printchar *tmp9
+  670 op add *tmp10 35 :packCfg:gr
+  671 printchar *tmp10
+  672 op add *tmp11 35 :packCfg:si
+  673 printchar *tmp11
+  674 op add *tmp12 35 :packCfg:ti
+  675 printchar *tmp12
+  676 op add *tmp13 35 :packCfg:mg
+  677 printchar *tmp13
+  678 op add *tmp14 35 :packCfg:rotation
+  679 printchar *tmp14
+  680 printchar 34
+  681 print ";"
+  682 print "\n"
+  683 label *label78
   684 set :packCfg:name "CFG_PAYLOAD_ROUTER"
   685 set :packCfg:type @payload-router
   686 set :packCfg:x -3
 
   689 set :packCfg:pb 0
   690 set :packCfg:gr 15
   691 set :packCfg:mg 0
-    * setaddr :packCfg*retaddr *label24 (h:*label24)
-    * call *label0 *invalid :packCfg*retval (m:*label24) (h:*label24)
-    * label *label24
+  692 label *label79
+  693 print "const "
+  694 print :packCfg:name
+  695 print " "
+  696 print "= "
+  697 printchar 34
+  698 sensor *tmp0 :packCfg:type @id
+  699 op add *tmp1 35 *tmp0
+  700 printchar *tmp1
+  701 op add *tmp2 7 :packCfg:x
+  702 op floor *tmp3 *tmp2
+  703 op add *tmp4 35 *tmp3
+  704 printchar *tmp4
+  705 op add *tmp5 7 :packCfg:y
+  706 op floor *tmp6 *tmp5
+  707 op add *tmp7 35 *tmp6
+  708 printchar *tmp7
+  709 op add *tmp8 35 :packCfg:cu
+  710 printchar *tmp8
+  711 op add *tmp9 35 :packCfg:pb
+  712 printchar *tmp9
+  713 op add *tmp10 35 :packCfg:gr
+  714 printchar *tmp10
+  715 op add *tmp11 35 :packCfg:si
+  716 printchar *tmp11
+  717 op add *tmp12 35 :packCfg:ti
+  718 printchar *tmp12
+  719 op add *tmp13 35 :packCfg:mg
+  720 printchar *tmp13
+  721 op add *tmp14 35 :packCfg:rotation
+  722 printchar *tmp14
+  723 printchar 34
+  724 print ";"
+  725 print "\n"
+  726 label *label80
   727 set :packCfg:name "CFG_UNLOADER4"
   728 set :packCfg:type @unloader
   729 set :packCfg:x 0
 
   732 set :packCfg:gr 0
   733 set :packCfg:si 30
   734 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label25 (h:*label25)
-    * call *label0 *invalid :packCfg*retval (m:*label25) (h:*label25)
-    * label *label25
+  735 label *label81
+  736 print "const "
+  737 print :packCfg:name
+  738 print " "
+  739 print "= "
+  740 printchar 34
+  741 sensor *tmp0 :packCfg:type @id
+  742 op add *tmp1 35 *tmp0
+  743 printchar *tmp1
+  744 op add *tmp2 7 :packCfg:x
+  745 op floor *tmp3 *tmp2
+  746 op add *tmp4 35 *tmp3
+  747 printchar *tmp4
+  748 op add *tmp5 7 :packCfg:y
+  749 op floor *tmp6 *tmp5
+  750 op add *tmp7 35 *tmp6
+  751 printchar *tmp7
+  752 op add *tmp8 35 :packCfg:cu
+  753 printchar *tmp8
+  754 op add *tmp9 35 :packCfg:pb
+  755 printchar *tmp9
+  756 op add *tmp10 35 :packCfg:gr
+  757 printchar *tmp10
+  758 op add *tmp11 35 :packCfg:si
+  759 printchar *tmp11
+  760 op add *tmp12 35 :packCfg:ti
+  761 printchar *tmp12
+  762 op add *tmp13 35 :packCfg:mg
+  763 printchar *tmp13
+  764 op add *tmp14 35 :packCfg:rotation
+  765 printchar *tmp14
+  766 printchar 34
+  767 print ";"
+  768 print "\n"
+  769 label *label82
   770 set :packCfg:name "CFG_UNDERFLOW_GATE"
   771 set :packCfg:type @underflow-gate
   772 set :packCfg:y -3
 
   774 set :packCfg:pb 2
   775 set :packCfg:si 0
   776 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label26 (h:*label26)
-    * call *label0 *invalid :packCfg*retval (m:*label26) (h:*label26)
-    * label *label26
+  777 label *label83
+  778 print "const "
+  779 print :packCfg:name
+  780 print " "
+  781 print "= "
+  782 printchar 34
+  783 sensor *tmp0 :packCfg:type @id
+  784 op add *tmp1 35 *tmp0
+  785 printchar *tmp1
+  786 op add *tmp2 7 :packCfg:x
+  787 op floor *tmp3 *tmp2
+  788 op add *tmp4 35 *tmp3
+  789 printchar *tmp4
+  790 op add *tmp5 7 :packCfg:y
+  791 op floor *tmp6 *tmp5
+  792 op add *tmp7 35 *tmp6
+  793 printchar *tmp7
+  794 op add *tmp8 35 :packCfg:cu
+  795 printchar *tmp8
+  796 op add *tmp9 35 :packCfg:pb
+  797 printchar *tmp9
+  798 op add *tmp10 35 :packCfg:gr
+  799 printchar *tmp10
+  800 op add *tmp11 35 :packCfg:si
+  801 printchar *tmp11
+  802 op add *tmp12 35 :packCfg:ti
+  803 printchar *tmp12
+  804 op add *tmp13 35 :packCfg:mg
+  805 printchar *tmp13
+  806 op add *tmp14 35 :packCfg:rotation
+  807 printchar *tmp14
+  808 printchar 34
+  809 print ";"
+  810 print "\n"
+  811 label *label84
   812 set :packCfg:name "CFG_ADDITIVE_REC"
   813 set :packCfg:type @additive-reconstructor
   814 set :packCfg:y -5
   815 set :packCfg:cu 200
   816 set :packCfg:pb 120
   817 set :packCfg:si 90
-    * setaddr :packCfg*retaddr *label27 (h:*label27)
-    * call *label0 *invalid :packCfg*retval (m:*label27) (h:*label27)
-    * label *label27
+  818 label *label85
+  819 print "const "
+  820 print :packCfg:name
+  821 print " "
+  822 print "= "
+  823 printchar 34
+  824 sensor *tmp0 :packCfg:type @id
+  825 op add *tmp1 35 *tmp0
+  826 printchar *tmp1
+  827 op add *tmp2 7 :packCfg:x
+  828 op floor *tmp3 *tmp2
+  829 op add *tmp4 35 *tmp3
+  830 printchar *tmp4
+  831 op add *tmp5 7 :packCfg:y
+  832 op floor *tmp6 *tmp5
+  833 op add *tmp7 35 *tmp6
+  834 printchar *tmp7
+  835 op add *tmp8 35 :packCfg:cu
+  836 printchar *tmp8
+  837 op add *tmp9 35 :packCfg:pb
+  838 printchar *tmp9
+  839 op add *tmp10 35 :packCfg:gr
+  840 printchar *tmp10
+  841 op add *tmp11 35 :packCfg:si
+  842 printchar *tmp11
+  843 op add *tmp12 35 :packCfg:ti
+  844 printchar *tmp12
+  845 op add *tmp13 35 :packCfg:mg
+  846 printchar *tmp13
+  847 op add *tmp14 35 :packCfg:rotation
+  848 printchar *tmp14
+  849 printchar 34
+  850 print ";"
+  851 print "\n"
+  852 label *label86
   853 set :packCfg:name "CFG_OVERFLOW_GATE4"
   854 set :packCfg:type @overflow-gate
   855 set :packCfg:x -4
 
   857 set :packCfg:cu 4
   858 set :packCfg:pb 2
   859 set :packCfg:si 0
-    * setaddr :packCfg*retaddr *label28 (h:*label28)
-    * call *label0 *invalid :packCfg*retval (m:*label28) (h:*label28)
-    * label *label28
+  860 label *label87
+  861 print "const "
+  862 print :packCfg:name
+  863 print " "
+  864 print "= "
+  865 printchar 34
+  866 sensor *tmp0 :packCfg:type @id
+  867 op add *tmp1 35 *tmp0
+  868 printchar *tmp1
+  869 op add *tmp2 7 :packCfg:x
+  870 op floor *tmp3 *tmp2
+  871 op add *tmp4 35 *tmp3
+  872 printchar *tmp4
+  873 op add *tmp5 7 :packCfg:y
+  874 op floor *tmp6 *tmp5
+  875 op add *tmp7 35 *tmp6
+  876 printchar *tmp7
+  877 op add *tmp8 35 :packCfg:cu
+  878 printchar *tmp8
+  879 op add *tmp9 35 :packCfg:pb
+  880 printchar *tmp9
+  881 op add *tmp10 35 :packCfg:gr
+  882 printchar *tmp10
+  883 op add *tmp11 35 :packCfg:si
+  884 printchar *tmp11
+  885 op add *tmp12 35 :packCfg:ti
+  886 printchar *tmp12
+  887 op add *tmp13 35 :packCfg:mg
+  888 printchar *tmp13
+  889 op add *tmp14 35 :packCfg:rotation
+  890 printchar *tmp14
+  891 printchar 34
+  892 print ";"
+  893 print "\n"
+  894 label *label88
   895 set :packCfg:name "CFG_LASER_DRILL"
   896 set :packCfg:type @laser-drill
   897 set :packCfg:x 0
 
   900 set :packCfg:gr 30
   901 set :packCfg:si 30
   902 set :packCfg:ti 20
-    * setaddr :packCfg*retaddr *label29 (h:*label29)
-    * call *label0 *invalid :packCfg*retval (m:*label29) (h:*label29)
-    * label *label29
+  903 label *label89
+  904 print "const "
+  905 print :packCfg:name
+  906 print " "
+  907 print "= "
+  908 printchar 34
+  909 sensor *tmp0 :packCfg:type @id
+  910 op add *tmp1 35 *tmp0
+  911 printchar *tmp1
+  912 op add *tmp2 7 :packCfg:x
+  913 op floor *tmp3 *tmp2
+  914 op add *tmp4 35 *tmp3
+  915 printchar *tmp4
+  916 op add *tmp5 7 :packCfg:y
+  917 op floor *tmp6 *tmp5
+  918 op add *tmp7 35 *tmp6
+  919 printchar *tmp7
+  920 op add *tmp8 35 :packCfg:cu
+  921 printchar *tmp8
+  922 op add *tmp9 35 :packCfg:pb
+  923 printchar *tmp9
+  924 op add *tmp10 35 :packCfg:gr
+  925 printchar *tmp10
+  926 op add *tmp11 35 :packCfg:si
+  927 printchar *tmp11
+  928 op add *tmp12 35 :packCfg:ti
+  929 printchar *tmp12
+  930 op add *tmp13 35 :packCfg:mg
+  931 printchar *tmp13
+  932 op add *tmp14 35 :packCfg:rotation
+  933 printchar *tmp14
+  934 printchar 34
+  935 print ";"
+  936 print "\n"
+  937 label *label90
   938 set :packCfg:name "CFG_SOLAR_PANEL"
   939 set :packCfg:type @solar-panel
   940 set :packCfg:cu 0
 
   942 set :packCfg:gr 0
   943 set :packCfg:si 8
   944 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label30 (h:*label30)
-    * call *label0 *invalid :packCfg*retval (m:*label30) (h:*label30)
-    * label *label30
+  945 label *label91
+  946 print "const "
+  947 print :packCfg:name
+  948 print " "
+  949 print "= "
+  950 printchar 34
+  951 sensor *tmp0 :packCfg:type @id
+  952 op add *tmp1 35 *tmp0
+  953 printchar *tmp1
+  954 op add *tmp2 7 :packCfg:x
+  955 op floor *tmp3 *tmp2
+  956 op add *tmp4 35 *tmp3
+  957 printchar *tmp4
+  958 op add *tmp5 7 :packCfg:y
+  959 op floor *tmp6 *tmp5
+  960 op add *tmp7 35 *tmp6
+  961 printchar *tmp7
+  962 op add *tmp8 35 :packCfg:cu
+  963 printchar *tmp8
+  964 op add *tmp9 35 :packCfg:pb
+  965 printchar *tmp9
+  966 op add *tmp10 35 :packCfg:gr
+  967 printchar *tmp10
+  968 op add *tmp11 35 :packCfg:si
+  969 printchar *tmp11
+  970 op add *tmp12 35 :packCfg:ti
+  971 printchar *tmp12
+  972 op add *tmp13 35 :packCfg:mg
+  973 printchar *tmp13
+  974 op add *tmp14 35 :packCfg:rotation
+  975 printchar *tmp14
+  976 printchar 34
+  977 print ";"
+  978 print "\n"
+  979 label *label92
   980 set :packCfg:name "CFG_BATTERY_LARGE"
   981 set :packCfg:type @battery-large
   982 set :packCfg:x 4
 
   984 set :packCfg:pb 50
   985 set :packCfg:si 30
   986 set :packCfg:ti 20
-    * setaddr :packCfg*retaddr *label31 (h:*label31)
-    * call *label0 *invalid :packCfg*retval (m:*label31) (h:*label31)
-    * label *label31
+  987 label *label93
+  988 print "const "
+  989 print :packCfg:name
+  990 print " "
+  991 print "= "
+  992 printchar 34
+  993 sensor *tmp0 :packCfg:type @id
+  994 op add *tmp1 35 *tmp0
+  995 printchar *tmp1
+  996 op add *tmp2 7 :packCfg:x
+  997 op floor *tmp3 *tmp2
+  998 op add *tmp4 35 *tmp3
+  999 printchar *tmp4
+ 1000 op add *tmp5 7 :packCfg:y
+ 1001 op floor *tmp6 *tmp5
+ 1002 op add *tmp7 35 *tmp6
+ 1003 printchar *tmp7
+ 1004 op add *tmp8 35 :packCfg:cu
+ 1005 printchar *tmp8
+ 1006 op add *tmp9 35 :packCfg:pb
+ 1007 printchar *tmp9
+ 1008 op add *tmp10 35 :packCfg:gr
+ 1009 printchar *tmp10
+ 1010 op add *tmp11 35 :packCfg:si
+ 1011 printchar *tmp11
+ 1012 op add *tmp12 35 :packCfg:ti
+ 1013 printchar *tmp12
+ 1014 op add *tmp13 35 :packCfg:mg
+ 1015 printchar *tmp13
+ 1016 op add *tmp14 35 :packCfg:rotation
+ 1017 printchar *tmp14
+ 1018 printchar 34
+ 1019 print ";"
+ 1020 print "\n"
+ 1021 label *label94
  1022 printflush message1
  1023 end
-    * label *label0
-    * print "const "
-    * print :packCfg:name
-    * print " "
-    * print "= "
-    * printchar 34
-    * sensor *tmp0 :packCfg:type @id
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
-    * printchar 34
-    * print ";"
-    * print "\n"
-    * label *label32
-    * return :packCfg*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-13 instructions):
 
   318 sensor *tmp0 @unloader @id
   319 op add *tmp1 35 *tmp0
   320 printchar *tmp1
-    * op add *tmp2 7 2
-    * op floor *tmp3 9
-    * op add *tmp4 35 9
   321 printchar 44
-    * op add *tmp5 7 -1
-    * op floor *tmp6 6
-    * op add *tmp7 35 6
   322 printchar 41
-    * op add *tmp8 35 0
   323 printchar 35
-    * op add *tmp9 35 0
   324 printchar 35
-    * op add *tmp10 35 0
   325 printchar 35
-    * op add *tmp11 35 30
   326 printchar 65
-    * op add *tmp12 35 25
   327 printchar 60
-    * op add *tmp13 35 0
   328 printchar 35
-    * op add *tmp14 35 0
   329 printchar 35
   330 printchar 34
   331 print ";"
 
   340 set :packCfg:ti 0
   341 label *label63
   342 print "const "
-    * print :packCfg:name
+  343 print "CFG_INVERTED_SORT3"
   344 print " "
   345 print "= "
   346 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  347 sensor *tmp0 @inverted-sorter @id
   348 op add *tmp1 35 *tmp0
   349 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  350 op add *tmp2 7 2
+  351 op floor *tmp3 9
+  352 op add *tmp4 35 9
+  353 printchar 44
+  354 op add *tmp5 7 0
+  355 op floor *tmp6 7
+  356 op add *tmp7 35 7
+  357 printchar 42
+  358 op add *tmp8 35 2
+  359 printchar 37
+  360 op add *tmp9 35 2
+  361 printchar 37
+  362 op add *tmp10 35 0
+  363 printchar 35
+  364 op add *tmp11 35 0
+  365 printchar 35
+  366 op add *tmp12 35 0
+  367 printchar 35
+  368 op add *tmp13 35 0
+  369 printchar 35
+  370 op add *tmp14 35 0
+  371 printchar 35
   372 printchar 34
   373 print ";"
   374 print "\n"
 
   382 set :packCfg:gr 30
   383 label *label65
   384 print "const "
-    * print :packCfg:name
+  385 print "CFG_KILN"
   386 print " "
   387 print "= "
   388 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  389 sensor *tmp0 @kiln @id
   390 op add *tmp1 35 *tmp0
   391 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  392 op add *tmp2 7 2.5
+  393 op floor *tmp3 9.5
+  394 op add *tmp4 35 9
+  395 printchar 44
+  396 op add *tmp5 7 1.5
+  397 op floor *tmp6 8.5
+  398 op add *tmp7 35 8
+  399 printchar 43
+  400 op add *tmp8 35 60
+  401 printchar 95
+  402 op add *tmp9 35 30
+  403 printchar 65
+  404 op add *tmp10 35 30
+  405 printchar 65
+  406 op add *tmp11 35 0
+  407 printchar 35
+  408 op add *tmp12 35 0
+  409 printchar 35
+  410 op add *tmp13 35 0
+  411 printchar 35
+  412 op add *tmp14 35 0
+  413 printchar 35
   414 printchar 34
   415 print ";"
   416 print "\n"
 
   423 set :packCfg:mg 30
   424 label *label67
   425 print "const "
-    * print :packCfg:name
+  426 print "CFG_WATER_EXT"
   427 print " "
   428 print "= "
   429 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  430 sensor *tmp0 @water-extractor @id
   431 op add *tmp1 35 *tmp0
   432 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  433 op add *tmp2 7 -4.5
+  434 op floor *tmp3 2.5
+  435 op add *tmp4 35 2
+  436 printchar 37
+  437 op add *tmp5 7 3.5
+  438 op floor *tmp6 10.5
+  439 op add *tmp7 35 10
+  440 printchar 45
+  441 op add *tmp8 35 30
+  442 printchar 65
+  443 op add *tmp9 35 30
+  444 printchar 65
+  445 op add *tmp10 35 30
+  446 printchar 65
+  447 op add *tmp11 35 0
+  448 printchar 35
+  449 op add *tmp12 35 0
+  450 printchar 35
+  451 op add *tmp13 35 30
+  452 printchar 65
+  453 op add *tmp14 35 0
+  454 printchar 35
   455 printchar 34
   456 print ";"
   457 print "\n"
 
   466 set :packCfg:mg 0
   467 label *label69
   468 print "const "
-    * print :packCfg:name
+  469 print "CFG_OVERFLOW_GATE2"
   470 print " "
   471 print "= "
   472 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  473 sensor *tmp0 @overflow-gate @id
   474 op add *tmp1 35 *tmp0
   475 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  476 op add *tmp2 7 -3
+  477 op floor *tmp3 4
+  478 op add *tmp4 35 4
+  479 printchar 39
+  480 op add *tmp5 7 0
+  481 op floor *tmp6 7
+  482 op add *tmp7 35 7
+  483 printchar 42
+  484 op add *tmp8 35 4
+  485 printchar 39
+  486 op add *tmp9 35 2
+  487 printchar 37
+  488 op add *tmp10 35 0
+  489 printchar 35
+  490 op add *tmp11 35 0
+  491 printchar 35
+  492 op add *tmp12 35 0
+  493 printchar 35
+  494 op add *tmp13 35 0
+  495 printchar 35
+  496 op add *tmp14 35 0
+  497 printchar 35
   498 printchar 34
   499 print ";"
   500 print "\n"
 
   503 set :packCfg:x -4
   504 label *label71
   505 print "const "
-    * print :packCfg:name
+  506 print "CFG_OVERFLOW_GATE3"
   507 print " "
   508 print "= "
   509 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  510 sensor *tmp0 @overflow-gate @id
   511 op add *tmp1 35 *tmp0
   512 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  513 op add *tmp2 7 -4
+  514 op floor *tmp3 3
+  515 op add *tmp4 35 3
+  516 printchar 38
+  517 op add *tmp5 7 0
+  518 op floor *tmp6 7
+  519 op add *tmp7 35 7
+  520 printchar 42
+  521 op add *tmp8 35 4
+  522 printchar 39
+  523 op add *tmp9 35 2
+  524 printchar 37
+  525 op add *tmp10 35 0
+  526 printchar 35
+  527 op add *tmp11 35 0
+  528 printchar 35
+  529 op add *tmp12 35 0
+  530 printchar 35
+  531 op add *tmp13 35 0
+  532 printchar 35
+  533 op add *tmp14 35 0
+  534 printchar 35
   535 printchar 34
   536 print ";"
   537 print "\n"
 
   546 set :packCfg:si 30
   547 label *label73
   548 print "const "
-    * print :packCfg:name
+  549 print "CFG_STEAM_GEN"
   550 print " "
   551 print "= "
   552 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  553 sensor *tmp0 @steam-generator @id
   554 op add *tmp1 35 *tmp0
   555 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  556 op add *tmp2 7 -4.5
+  557 op floor *tmp3 2.5
+  558 op add *tmp4 35 2
+  559 printchar 37
+  560 op add *tmp5 7 1.5
+  561 op floor *tmp6 8.5
+  562 op add *tmp7 35 8
+  563 printchar 43
+  564 op add *tmp8 35 35
+  565 printchar 70
+  566 op add *tmp9 35 40
+  567 printchar 75
+  568 op add *tmp10 35 25
+  569 printchar 60
+  570 op add *tmp11 35 30
+  571 printchar 65
+  572 op add *tmp12 35 0
+  573 printchar 35
+  574 op add *tmp13 35 0
+  575 printchar 35
+  576 op add *tmp14 35 0
+  577 printchar 35
   578 printchar 34
   579 print ";"
   580 print "\n"
 
   590 set :packCfg:ti 100
   591 label *label75
   592 print "const "
-    * print :packCfg:name
+  593 print "CFG_MULTIPRESS"
   594 print " "
   595 print "= "
   596 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  597 sensor *tmp0 @multi-press @id
   598 op add *tmp1 35 *tmp0
   599 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  600 op add *tmp2 7 -2
+  601 op floor *tmp3 5
+  602 op add *tmp4 35 5
+  603 printchar 40
+  604 op add *tmp5 7 4
+  605 op floor *tmp6 11
+  606 op add *tmp7 35 11
+  607 printchar 46
+  608 op add *tmp8 35 0
+  609 printchar 35
+  610 op add *tmp9 35 100
+  611 printchar 135
+  612 op add *tmp10 35 50
+  613 printchar 85
+  614 op add *tmp11 35 25
+  615 printchar 60
+  616 op add *tmp12 35 100
+  617 printchar 135
+  618 op add *tmp13 35 0
+  619 printchar 35
+  620 op add *tmp14 35 0
+  621 printchar 35
   622 printchar 34
   623 print ";"
   624 print "\n"
 
   635 set :packCfg:mg 30
   636 label *label77
   637 print "const "
-    * print :packCfg:name
+  638 print "CFG_WATER_EXT2"
   639 print " "
   640 print "= "
   641 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  642 sensor *tmp0 @water-extractor @id
   643 op add *tmp1 35 *tmp0
   644 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  645 op add *tmp2 7 -4.5
+  646 op floor *tmp3 2.5
+  647 op add *tmp4 35 2
+  648 printchar 37
+  649 op add *tmp5 7 5.5
+  650 op floor *tmp6 12.5
+  651 op add *tmp7 35 12
+  652 printchar 47
+  653 op add *tmp8 35 30
+  654 printchar 65
+  655 op add *tmp9 35 30
+  656 printchar 65
+  657 op add *tmp10 35 30
+  658 printchar 65
+  659 op add *tmp11 35 0
+  660 printchar 35
+  661 op add *tmp12 35 0
+  662 printchar 35
+  663 op add *tmp13 35 30
+  664 printchar 65
+  665 op add *tmp14 35 0
+  666 printchar 35
   667 printchar 34
   668 print ";"
   669 print "\n"
 
   678 set :packCfg:mg 0
   679 label *label79
   680 print "const "
-    * print :packCfg:name
+  681 print "CFG_PAYLOAD_ROUTER"
   682 print " "
   683 print "= "
   684 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  685 sensor *tmp0 @payload-router @id
   686 op add *tmp1 35 *tmp0
   687 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  688 op add *tmp2 7 -3
+  689 op floor *tmp3 4
+  690 op add *tmp4 35 4
+  691 printchar 39
+  692 op add *tmp5 7 -5
+  693 op floor *tmp6 2
+  694 op add *tmp7 35 2
+  695 printchar 37
+  696 op add *tmp8 35 10
+  697 printchar 45
+  698 op add *tmp9 35 0
+  699 printchar 35
+  700 op add *tmp10 35 15
+  701 printchar 50
+  702 op add *tmp11 35 0
+  703 printchar 35
+  704 op add *tmp12 35 0
+  705 printchar 35
+  706 op add *tmp13 35 0
+  707 printchar 35
+  708 op add *tmp14 35 0
+  709 printchar 35
   710 printchar 34
   711 print ";"
   712 print "\n"
 
   721 set :packCfg:ti 25
   722 label *label81
   723 print "const "
-    * print :packCfg:name
+  724 print "CFG_UNLOADER4"
   725 print " "
   726 print "= "
   727 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  728 sensor *tmp0 @unloader @id
   729 op add *tmp1 35 *tmp0
   730 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  731 op add *tmp2 7 0
+  732 op floor *tmp3 7
+  733 op add *tmp4 35 7
+  734 printchar 42
+  735 op add *tmp5 7 -2
+  736 op floor *tmp6 5
+  737 op add *tmp7 35 5
+  738 printchar 40
+  739 op add *tmp8 35 0
+  740 printchar 35
+  741 op add *tmp9 35 0
+  742 printchar 35
+  743 op add *tmp10 35 0
+  744 printchar 35
+  745 op add *tmp11 35 30
+  746 printchar 65
+  747 op add *tmp12 35 25
+  748 printchar 60
+  749 op add *tmp13 35 0
+  750 printchar 35
+  751 op add *tmp14 35 0
+  752 printchar 35
   753 printchar 34
   754 print ";"
   755 print "\n"
 
   763 set :packCfg:ti 0
   764 label *label83
   765 print "const "
-    * print :packCfg:name
+  766 print "CFG_UNDERFLOW_GATE"
   767 print " "
   768 print "= "
   769 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  770 sensor *tmp0 @underflow-gate @id
   771 op add *tmp1 35 *tmp0
   772 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  773 op add *tmp2 7 0
+  774 op floor *tmp3 7
+  775 op add *tmp4 35 7
+  776 printchar 42
+  777 op add *tmp5 7 -3
+  778 op floor *tmp6 4
+  779 op add *tmp7 35 4
+  780 printchar 39
+  781 op add *tmp8 35 4
+  782 printchar 39
+  783 op add *tmp9 35 2
+  784 printchar 37
+  785 op add *tmp10 35 0
+  786 printchar 35
+  787 op add *tmp11 35 0
+  788 printchar 35
+  789 op add *tmp12 35 0
+  790 printchar 35
+  791 op add *tmp13 35 0
+  792 printchar 35
+  793 op add *tmp14 35 0
+  794 printchar 35
   795 printchar 34
   796 print ";"
   797 print "\n"
 
   804 set :packCfg:si 90
   805 label *label85
   806 print "const "
-    * print :packCfg:name
+  807 print "CFG_ADDITIVE_REC"
   808 print " "
   809 print "= "
   810 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  811 sensor *tmp0 @additive-reconstructor @id
   812 op add *tmp1 35 *tmp0
   813 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  814 op add *tmp2 7 0
+  815 op floor *tmp3 7
+  816 op add *tmp4 35 7
+  817 printchar 42
+  818 op add *tmp5 7 -5
+  819 op floor *tmp6 2
+  820 op add *tmp7 35 2
+  821 printchar 37
+  822 op add *tmp8 35 200
+  823 printchar 235
+  824 op add *tmp9 35 120
+  825 printchar 155
+  826 op add *tmp10 35 0
+  827 printchar 35
+  828 op add *tmp11 35 90
+  829 printchar 125
+  830 op add *tmp12 35 0
+  831 printchar 35
+  832 op add *tmp13 35 0
+  833 printchar 35
+  834 op add *tmp14 35 0
+  835 printchar 35
   836 printchar 34
   837 print ";"
   838 print "\n"
 
   846 set :packCfg:si 0
   847 label *label87
   848 print "const "
-    * print :packCfg:name
+  849 print "CFG_OVERFLOW_GATE4"
   850 print " "
   851 print "= "
   852 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  853 sensor *tmp0 @overflow-gate @id
   854 op add *tmp1 35 *tmp0
   855 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  856 op add *tmp2 7 -4
+  857 op floor *tmp3 3
+  858 op add *tmp4 35 3
+  859 printchar 38
+  860 op add *tmp5 7 0
+  861 op floor *tmp6 7
+  862 op add *tmp7 35 7
+  863 printchar 42
+  864 op add *tmp8 35 4
+  865 printchar 39
+  866 op add *tmp9 35 2
+  867 printchar 37
+  868 op add *tmp10 35 0
+  869 printchar 35
+  870 op add *tmp11 35 0
+  871 printchar 35
+  872 op add *tmp12 35 0
+  873 printchar 35
+  874 op add *tmp13 35 0
+  875 printchar 35
+  876 op add *tmp14 35 0
+  877 printchar 35
   878 printchar 34
   879 print ";"
   880 print "\n"
 
   889 set :packCfg:ti 20
   890 label *label89
   891 print "const "
-    * print :packCfg:name
+  892 print "CFG_LASER_DRILL"
   893 print " "
   894 print "= "
   895 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  896 sensor *tmp0 @laser-drill @id
   897 op add *tmp1 35 *tmp0
   898 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  899 op add *tmp2 7 0
+  900 op floor *tmp3 7
+  901 op add *tmp4 35 7
+  902 printchar 42
+  903 op add *tmp5 7 0
+  904 op floor *tmp6 7
+  905 op add *tmp7 35 7
+  906 printchar 42
+  907 op add *tmp8 35 35
+  908 printchar 70
+  909 op add *tmp9 35 0
+  910 printchar 35
+  911 op add *tmp10 35 30
+  912 printchar 65
+  913 op add *tmp11 35 30
+  914 printchar 65
+  915 op add *tmp12 35 20
+  916 printchar 55
+  917 op add *tmp13 35 0
+  918 printchar 35
+  919 op add *tmp14 35 0
+  920 printchar 35
   921 printchar 34
   922 print ";"
   923 print "\n"
 
   931 set :packCfg:ti 0
   932 label *label91
   933 print "const "
-    * print :packCfg:name
+  934 print "CFG_SOLAR_PANEL"
   935 print " "
   936 print "= "
   937 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  938 sensor *tmp0 @solar-panel @id
   939 op add *tmp1 35 *tmp0
   940 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  941 op add *tmp2 7 0
+  942 op floor *tmp3 7
+  943 op add *tmp4 35 7
+  944 printchar 42
+  945 op add *tmp5 7 0
+  946 op floor *tmp6 7
+  947 op add *tmp7 35 7
+  948 printchar 42
+  949 op add *tmp8 35 0
+  950 printchar 35
+  951 op add *tmp9 35 10
+  952 printchar 45
+  953 op add *tmp10 35 0
+  954 printchar 35
+  955 op add *tmp11 35 8
+  956 printchar 43
+  957 op add *tmp12 35 0
+  958 printchar 35
+  959 op add *tmp13 35 0
+  960 printchar 35
+  961 op add *tmp14 35 0
+  962 printchar 35
   963 printchar 34
   964 print ";"
   965 print "\n"
 
   973 set :packCfg:ti 20
   974 label *label93
   975 print "const "
-    * print :packCfg:name
+  976 print "CFG_BATTERY_LARGE"
   977 print " "
   978 print "= "
   979 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  980 sensor *tmp0 @battery-large @id
   981 op add *tmp1 35 *tmp0
   982 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:rotation
-    * printchar *tmp14
+  983 op add *tmp2 7 4
+  984 op floor *tmp3 11
+  985 op add *tmp4 35 11
+  986 printchar 46
+  987 op add *tmp5 7 3
+  988 op floor *tmp6 10
+  989 op add *tmp7 35 10
+  990 printchar 45
+  991 op add *tmp8 35 0
+  992 printchar 35
+  993 op add *tmp9 35 50
+  994 printchar 85
+  995 op add *tmp10 35 0
+  996 printchar 35
+  997 op add *tmp11 35 30
+  998 printchar 65
+  999 op add *tmp12 35 20
+ 1000 printchar 55
+ 1001 op add *tmp13 35 0
+ 1002 printchar 35
+ 1003 op add *tmp14 35 0
+ 1004 printchar 35
  1005 printchar 34
  1006 print ";"
  1007 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-327 instructions):
-    * set :packCfg:mg 0
     0 label *label33
     1 print "const "
     2 print "CFG_PRESS"
 
   151 print ";"
   152 print "\n"
   153 label *label46
-    * set :packCfg:gr 0
   154 label *label47
   155 print "const "
   156 print "CFG_UNLOADER1"
 
   305 print ";"
   306 print "\n"
   307 label *label60
-    * set :packCfg:x 2
-    * set :packCfg:rotation 0
   308 label *label61
   309 print "const "
   310 print "CFG_UNLOADER3"
 
   327 print ";"
   328 print "\n"
   329 label *label62
-    * set :packCfg:name "CFG_INVERTED_SORT3"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:y 0
-    * set :packCfg:cu 2
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   330 label *label63
   331 print "const "
   332 print "CFG_INVERTED_SORT3"
 
   336 sensor *tmp0 @inverted-sorter @id
   337 op add *tmp1 35 *tmp0
   338 printchar *tmp1
-    * op add *tmp2 7 2
-    * op floor *tmp3 9
-    * op add *tmp4 35 9
   339 printchar 44
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   340 printchar 42
-    * op add *tmp8 35 2
   341 printchar 37
-    * op add *tmp9 35 2
   342 printchar 37
-    * op add *tmp10 35 0
   343 printchar 35
-    * op add *tmp11 35 0
   344 printchar 35
-    * op add *tmp12 35 0
   345 printchar 35
-    * op add *tmp13 35 0
   346 printchar 35
-    * op add *tmp14 35 0
   347 printchar 35
   348 printchar 34
   349 print ";"
   350 print "\n"
   351 label *label64
-    * set :packCfg:name "CFG_KILN"
-    * set :packCfg:type @kiln
-    * set :packCfg:x 2.5
-    * set :packCfg:y 1.5
-    * set :packCfg:cu 60
-    * set :packCfg:pb 30
-    * set :packCfg:gr 30
   352 label *label65
   353 print "const "
   354 print "CFG_KILN"
 
   358 sensor *tmp0 @kiln @id
   359 op add *tmp1 35 *tmp0
   360 printchar *tmp1
-    * op add *tmp2 7 2.5
-    * op floor *tmp3 9.5
-    * op add *tmp4 35 9
   361 printchar 44
-    * op add *tmp5 7 1.5
-    * op floor *tmp6 8.5
-    * op add *tmp7 35 8
   362 printchar 43
-    * op add *tmp8 35 60
   363 printchar 95
-    * op add *tmp9 35 30
   364 printchar 65
-    * op add *tmp10 35 30
   365 printchar 65
-    * op add *tmp11 35 0
   366 printchar 35
-    * op add *tmp12 35 0
   367 printchar 35
-    * op add *tmp13 35 0
   368 printchar 35
-    * op add *tmp14 35 0
   369 printchar 35
   370 printchar 34
   371 print ";"
   372 print "\n"
   373 label *label66
-    * set :packCfg:name "CFG_WATER_EXT"
-    * set :packCfg:type @water-extractor
-    * set :packCfg:x -4.5
-    * set :packCfg:y 3.5
-    * set :packCfg:cu 30
-    * set :packCfg:mg 30
   374 label *label67
   375 print "const "
   376 print "CFG_WATER_EXT"
 
   380 sensor *tmp0 @water-extractor @id
   381 op add *tmp1 35 *tmp0
   382 printchar *tmp1
-    * op add *tmp2 7 -4.5
-    * op floor *tmp3 2.5
-    * op add *tmp4 35 2
   383 printchar 37
-    * op add *tmp5 7 3.5
-    * op floor *tmp6 10.5
-    * op add *tmp7 35 10
   384 printchar 45
-    * op add *tmp8 35 30
   385 printchar 65
-    * op add *tmp9 35 30
   386 printchar 65
-    * op add *tmp10 35 30
   387 printchar 65
-    * op add *tmp11 35 0
   388 printchar 35
-    * op add *tmp12 35 0
   389 printchar 35
-    * op add *tmp13 35 30
   390 printchar 65
-    * op add *tmp14 35 0
   391 printchar 35
   392 printchar 34
   393 print ";"
   394 print "\n"
   395 label *label68
-    * set :packCfg:name "CFG_OVERFLOW_GATE2"
-    * set :packCfg:type @overflow-gate
-    * set :packCfg:x -3
-    * set :packCfg:y 0
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:gr 0
-    * set :packCfg:mg 0
   396 label *label69
   397 print "const "
   398 print "CFG_OVERFLOW_GATE2"
 
   402 sensor *tmp0 @overflow-gate @id
   403 op add *tmp1 35 *tmp0
   404 printchar *tmp1
-    * op add *tmp2 7 -3
-    * op floor *tmp3 4
-    * op add *tmp4 35 4
   405 printchar 39
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   406 printchar 42
-    * op add *tmp8 35 4
   407 printchar 39
-    * op add *tmp9 35 2
   408 printchar 37
-    * op add *tmp10 35 0
   409 printchar 35
-    * op add *tmp11 35 0
   410 printchar 35
-    * op add *tmp12 35 0
   411 printchar 35
-    * op add *tmp13 35 0
   412 printchar 35
-    * op add *tmp14 35 0
   413 printchar 35
   414 printchar 34
   415 print ";"
   416 print "\n"
   417 label *label70
-    * set :packCfg:name "CFG_OVERFLOW_GATE3"
-    * set :packCfg:x -4
   418 label *label71
   419 print "const "
   420 print "CFG_OVERFLOW_GATE3"
 
   424 sensor *tmp0 @overflow-gate @id
   425 op add *tmp1 35 *tmp0
   426 printchar *tmp1
-    * op add *tmp2 7 -4
-    * op floor *tmp3 3
-    * op add *tmp4 35 3
   427 printchar 38
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   428 printchar 42
-    * op add *tmp8 35 4
   429 printchar 39
-    * op add *tmp9 35 2
   430 printchar 37
-    * op add *tmp10 35 0
   431 printchar 35
-    * op add *tmp11 35 0
   432 printchar 35
-    * op add *tmp12 35 0
   433 printchar 35
-    * op add *tmp13 35 0
   434 printchar 35
-    * op add *tmp14 35 0
   435 printchar 35
   436 printchar 34
   437 print ";"
   438 print "\n"
   439 label *label72
-    * set :packCfg:name "CFG_STEAM_GEN"
-    * set :packCfg:type @steam-generator
-    * set :packCfg:x -4.5
-    * set :packCfg:y 1.5
-    * set :packCfg:cu 35
-    * set :packCfg:pb 40
-    * set :packCfg:gr 25
-    * set :packCfg:si 30
   440 label *label73
   441 print "const "
   442 print "CFG_STEAM_GEN"
 
   446 sensor *tmp0 @steam-generator @id
   447 op add *tmp1 35 *tmp0
   448 printchar *tmp1
-    * op add *tmp2 7 -4.5
-    * op floor *tmp3 2.5
-    * op add *tmp4 35 2
   449 printchar 37
-    * op add *tmp5 7 1.5
-    * op floor *tmp6 8.5
-    * op add *tmp7 35 8
   450 printchar 43
-    * op add *tmp8 35 35
   451 printchar 70
-    * op add *tmp9 35 40
   452 printchar 75
-    * op add *tmp10 35 25
   453 printchar 60
-    * op add *tmp11 35 30
   454 printchar 65
-    * op add *tmp12 35 0
   455 printchar 35
-    * op add *tmp13 35 0
   456 printchar 35
-    * op add *tmp14 35 0
   457 printchar 35
   458 printchar 34
   459 print ";"
   460 print "\n"
   461 label *label74
-    * set :packCfg:name "CFG_MULTIPRESS"
-    * set :packCfg:type @multi-press
-    * set :packCfg:x -2
-    * set :packCfg:y 4
-    * set :packCfg:cu 0
-    * set :packCfg:pb 100
-    * set :packCfg:gr 50
-    * set :packCfg:si 25
-    * set :packCfg:ti 100
   462 label *label75
   463 print "const "
   464 print "CFG_MULTIPRESS"
 
   468 sensor *tmp0 @multi-press @id
   469 op add *tmp1 35 *tmp0
   470 printchar *tmp1
-    * op add *tmp2 7 -2
-    * op floor *tmp3 5
-    * op add *tmp4 35 5
   471 printchar 40
-    * op add *tmp5 7 4
-    * op floor *tmp6 11
-    * op add *tmp7 35 11
   472 printchar 46
-    * op add *tmp8 35 0
   473 printchar 35
-    * op add *tmp9 35 100
   474 printchar 135
-    * op add *tmp10 35 50
   475 printchar 85
-    * op add *tmp11 35 25
   476 printchar 60
-    * op add *tmp12 35 100
   477 printchar 135
-    * op add *tmp13 35 0
   478 printchar 35
-    * op add *tmp14 35 0
   479 printchar 35
   480 printchar 34
   481 print ";"
   482 print "\n"
   483 label *label76
-    * set :packCfg:name "CFG_WATER_EXT2"
-    * set :packCfg:type @water-extractor
-    * set :packCfg:x -4.5
-    * set :packCfg:y 5.5
-    * set :packCfg:cu 30
-    * set :packCfg:pb 30
-    * set :packCfg:gr 30
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
-    * set :packCfg:mg 30
   484 label *label77
   485 print "const "
   486 print "CFG_WATER_EXT2"
 
   490 sensor *tmp0 @water-extractor @id
   491 op add *tmp1 35 *tmp0
   492 printchar *tmp1
-    * op add *tmp2 7 -4.5
-    * op floor *tmp3 2.5
-    * op add *tmp4 35 2
   493 printchar 37
-    * op add *tmp5 7 5.5
-    * op floor *tmp6 12.5
-    * op add *tmp7 35 12
   494 printchar 47
-    * op add *tmp8 35 30
   495 printchar 65
-    * op add *tmp9 35 30
   496 printchar 65
-    * op add *tmp10 35 30
   497 printchar 65
-    * op add *tmp11 35 0
   498 printchar 35
-    * op add *tmp12 35 0
   499 printchar 35
-    * op add *tmp13 35 30
   500 printchar 65
-    * op add *tmp14 35 0
   501 printchar 35
   502 printchar 34
   503 print ";"
   504 print "\n"
   505 label *label78
-    * set :packCfg:name "CFG_PAYLOAD_ROUTER"
-    * set :packCfg:type @payload-router
-    * set :packCfg:x -3
-    * set :packCfg:y -5
-    * set :packCfg:cu 10
-    * set :packCfg:pb 0
-    * set :packCfg:gr 15
-    * set :packCfg:mg 0
   506 label *label79
   507 print "const "
   508 print "CFG_PAYLOAD_ROUTER"
 
   512 sensor *tmp0 @payload-router @id
   513 op add *tmp1 35 *tmp0
   514 printchar *tmp1
-    * op add *tmp2 7 -3
-    * op floor *tmp3 4
-    * op add *tmp4 35 4
   515 printchar 39
-    * op add *tmp5 7 -5
-    * op floor *tmp6 2
-    * op add *tmp7 35 2
   516 printchar 37
-    * op add *tmp8 35 10
   517 printchar 45
-    * op add *tmp9 35 0
   518 printchar 35
-    * op add *tmp10 35 15
   519 printchar 50
-    * op add *tmp11 35 0
   520 printchar 35
-    * op add *tmp12 35 0
   521 printchar 35
-    * op add *tmp13 35 0
   522 printchar 35
-    * op add *tmp14 35 0
   523 printchar 35
   524 printchar 34
   525 print ";"
   526 print "\n"
   527 label *label80
-    * set :packCfg:name "CFG_UNLOADER4"
-    * set :packCfg:type @unloader
-    * set :packCfg:x 0
-    * set :packCfg:y -2
-    * set :packCfg:cu 0
-    * set :packCfg:gr 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   528 label *label81
   529 print "const "
   530 print "CFG_UNLOADER4"
 
   534 sensor *tmp0 @unloader @id
   535 op add *tmp1 35 *tmp0
   536 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   537 printchar 42
-    * op add *tmp5 7 -2
-    * op floor *tmp6 5
-    * op add *tmp7 35 5
   538 printchar 40
-    * op add *tmp8 35 0
   539 printchar 35
-    * op add *tmp9 35 0
   540 printchar 35
-    * op add *tmp10 35 0
   541 printchar 35
-    * op add *tmp11 35 30
   542 printchar 65
-    * op add *tmp12 35 25
   543 printchar 60
-    * op add *tmp13 35 0
   544 printchar 35
-    * op add *tmp14 35 0
   545 printchar 35
   546 printchar 34
   547 print ";"
   548 print "\n"
   549 label *label82
-    * set :packCfg:name "CFG_UNDERFLOW_GATE"
-    * set :packCfg:type @underflow-gate
-    * set :packCfg:y -3
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   550 label *label83
   551 print "const "
   552 print "CFG_UNDERFLOW_GATE"
 
   556 sensor *tmp0 @underflow-gate @id
   557 op add *tmp1 35 *tmp0
   558 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   559 printchar 42
-    * op add *tmp5 7 -3
-    * op floor *tmp6 4
-    * op add *tmp7 35 4
   560 printchar 39
-    * op add *tmp8 35 4
   561 printchar 39
-    * op add *tmp9 35 2
   562 printchar 37
-    * op add *tmp10 35 0
   563 printchar 35
-    * op add *tmp11 35 0
   564 printchar 35
-    * op add *tmp12 35 0
   565 printchar 35
-    * op add *tmp13 35 0
   566 printchar 35
-    * op add *tmp14 35 0
   567 printchar 35
   568 printchar 34
   569 print ";"
   570 print "\n"
   571 label *label84
-    * set :packCfg:name "CFG_ADDITIVE_REC"
-    * set :packCfg:type @additive-reconstructor
-    * set :packCfg:y -5
-    * set :packCfg:cu 200
-    * set :packCfg:pb 120
-    * set :packCfg:si 90
   572 label *label85
   573 print "const "
   574 print "CFG_ADDITIVE_REC"
 
   578 sensor *tmp0 @additive-reconstructor @id
   579 op add *tmp1 35 *tmp0
   580 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   581 printchar 42
-    * op add *tmp5 7 -5
-    * op floor *tmp6 2
-    * op add *tmp7 35 2
   582 printchar 37
-    * op add *tmp8 35 200
   583 printchar 235
-    * op add *tmp9 35 120
   584 printchar 155
-    * op add *tmp10 35 0
   585 printchar 35
-    * op add *tmp11 35 90
   586 printchar 125
-    * op add *tmp12 35 0
   587 printchar 35
-    * op add *tmp13 35 0
   588 printchar 35
-    * op add *tmp14 35 0
   589 printchar 35
   590 printchar 34
   591 print ";"
   592 print "\n"
   593 label *label86
-    * set :packCfg:name "CFG_OVERFLOW_GATE4"
-    * set :packCfg:type @overflow-gate
-    * set :packCfg:x -4
-    * set :packCfg:y 0
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
   594 label *label87
   595 print "const "
   596 print "CFG_OVERFLOW_GATE4"
 
   600 sensor *tmp0 @overflow-gate @id
   601 op add *tmp1 35 *tmp0
   602 printchar *tmp1
-    * op add *tmp2 7 -4
-    * op floor *tmp3 3
-    * op add *tmp4 35 3
   603 printchar 38
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   604 printchar 42
-    * op add *tmp8 35 4
   605 printchar 39
-    * op add *tmp9 35 2
   606 printchar 37
-    * op add *tmp10 35 0
   607 printchar 35
-    * op add *tmp11 35 0
   608 printchar 35
-    * op add *tmp12 35 0
   609 printchar 35
-    * op add *tmp13 35 0
   610 printchar 35
-    * op add *tmp14 35 0
   611 printchar 35
   612 printchar 34
   613 print ";"
   614 print "\n"
   615 label *label88
-    * set :packCfg:name "CFG_LASER_DRILL"
-    * set :packCfg:type @laser-drill
-    * set :packCfg:x 0
-    * set :packCfg:cu 35
-    * set :packCfg:pb 0
-    * set :packCfg:gr 30
-    * set :packCfg:si 30
-    * set :packCfg:ti 20
   616 label *label89
   617 print "const "
   618 print "CFG_LASER_DRILL"
 
   622 sensor *tmp0 @laser-drill @id
   623 op add *tmp1 35 *tmp0
   624 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   625 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   626 printchar 42
-    * op add *tmp8 35 35
   627 printchar 70
-    * op add *tmp9 35 0
   628 printchar 35
-    * op add *tmp10 35 30
   629 printchar 65
-    * op add *tmp11 35 30
   630 printchar 65
-    * op add *tmp12 35 20
   631 printchar 55
-    * op add *tmp13 35 0
   632 printchar 35
-    * op add *tmp14 35 0
   633 printchar 35
   634 printchar 34
   635 print ";"
   636 print "\n"
   637 label *label90
-    * set :packCfg:name "CFG_SOLAR_PANEL"
-    * set :packCfg:type @solar-panel
-    * set :packCfg:cu 0
-    * set :packCfg:pb 10
-    * set :packCfg:gr 0
-    * set :packCfg:si 8
-    * set :packCfg:ti 0
   638 label *label91
   639 print "const "
   640 print "CFG_SOLAR_PANEL"
 
   644 sensor *tmp0 @solar-panel @id
   645 op add *tmp1 35 *tmp0
   646 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   647 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   648 printchar 42
-    * op add *tmp8 35 0
   649 printchar 35
-    * op add *tmp9 35 10
   650 printchar 45
-    * op add *tmp10 35 0
   651 printchar 35
-    * op add *tmp11 35 8
   652 printchar 43
-    * op add *tmp12 35 0
   653 printchar 35
-    * op add *tmp13 35 0
   654 printchar 35
-    * op add *tmp14 35 0
   655 printchar 35
   656 printchar 34
   657 print ";"
   658 print "\n"
   659 label *label92
-    * set :packCfg:name "CFG_BATTERY_LARGE"
-    * set :packCfg:type @battery-large
-    * set :packCfg:x 4
-    * set :packCfg:y 3
-    * set :packCfg:pb 50
-    * set :packCfg:si 30
-    * set :packCfg:ti 20
   660 label *label93
   661 print "const "
   662 print "CFG_BATTERY_LARGE"
 
   666 sensor *tmp0 @battery-large @id
   667 op add *tmp1 35 *tmp0
   668 printchar *tmp1
-    * op add *tmp2 7 4
-    * op floor *tmp3 11
-    * op add *tmp4 35 11
   669 printchar 46
-    * op add *tmp5 7 3
-    * op floor *tmp6 10
-    * op add *tmp7 35 10
   670 printchar 45
-    * op add *tmp8 35 0
   671 printchar 35
-    * op add *tmp9 35 50
   672 printchar 85
-    * op add *tmp10 35 0
   673 printchar 35
-    * op add *tmp11 35 30
   674 printchar 65
-    * op add *tmp12 35 20
   675 printchar 55
-    * op add *tmp13 35 0
   676 printchar 35
-    * op add *tmp14 35 0
   677 printchar 35
   678 printchar 34
   679 print ";"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
     3 print " "
     4 print "= "
     5 printchar 34
-    * sensor *tmp0 @graphite-press @id
+    6 set *tmp0 0
     7 op add *tmp1 35 *tmp0
     8 printchar *tmp1
     9 printchar 39
 
    25 print " "
    26 print "= "
    27 printchar 34
-    * sensor *tmp0 @battery @id
+   28 set *tmp0 72
    29 op add *tmp1 35 *tmp0
    30 printchar *tmp1
    31 printchar 42
 
    47 print " "
    48 print "= "
    49 printchar 34
-    * sensor *tmp0 @battery @id
+   50 set *tmp0 72
    51 op add *tmp1 35 *tmp0
    52 printchar *tmp1
    53 printchar 43
 
    69 print " "
    70 print "= "
    71 printchar 34
-    * sensor *tmp0 @combustion-generator @id
+   72 set *tmp0 74
    73 op add *tmp1 35 *tmp0
    74 printchar *tmp1
    75 printchar 42
 
    91 print " "
    92 print "= "
    93 printchar 34
-    * sensor *tmp0 @silicon-smelter @id
+   94 set *tmp0 2
    95 op add *tmp1 35 *tmp0
    96 printchar *tmp1
    97 printchar 43
 
   113 print " "
   114 print "= "
   115 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  116 set *tmp0 49
   117 op add *tmp1 35 *tmp0
   118 printchar *tmp1
   119 printchar 43
 
   135 print " "
   136 print "= "
   137 printchar 34
-    * sensor *tmp0 @pneumatic-drill @id
+  138 set *tmp0 84
   139 op add *tmp1 35 *tmp0
   140 printchar *tmp1
   141 printchar 42
 
   157 print " "
   158 print "= "
   159 printchar 34
-    * sensor *tmp0 @unloader @id
+  160 set *tmp0 95
   161 op add *tmp1 35 *tmp0
   162 printchar *tmp1
   163 printchar 42
 
   179 print " "
   180 print "= "
   181 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  182 set *tmp0 49
   183 op add *tmp1 35 *tmp0
   184 printchar *tmp1
   185 printchar 41
 
   201 print " "
   202 print "= "
   203 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  204 set *tmp0 52
   205 op add *tmp1 35 *tmp0
   206 printchar *tmp1
   207 printchar 42
 
   223 print " "
   224 print "= "
   225 printchar 34
-    * sensor *tmp0 @micro-processor @id
+  226 set *tmp0 139
   227 op add *tmp1 35 *tmp0
   228 printchar *tmp1
   229 printchar 45
 
   245 print " "
   246 print "= "
   247 printchar 34
-    * sensor *tmp0 @power-node @id
+  248 set *tmp0 68
   249 op add *tmp1 35 *tmp0
   250 printchar *tmp1
   251 printchar 41
 
   267 print " "
   268 print "= "
   269 printchar 34
-    * sensor *tmp0 @unloader @id
+  270 set *tmp0 95
   271 op add *tmp1 35 *tmp0
   272 printchar *tmp1
   273 printchar 40
 
   289 print " "
   290 print "= "
   291 printchar 34
-    * sensor *tmp0 @air-factory @id
+  292 set *tmp0 116
   293 op add *tmp1 35 *tmp0
   294 printchar *tmp1
   295 printchar 39
 
   311 print " "
   312 print "= "
   313 printchar 34
-    * sensor *tmp0 @unloader @id
+  314 set *tmp0 95
   315 op add *tmp1 35 *tmp0
   316 printchar *tmp1
   317 printchar 44
 
   333 print " "
   334 print "= "
   335 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  336 set *tmp0 49
   337 op add *tmp1 35 *tmp0
   338 printchar *tmp1
   339 printchar 44
 
   355 print " "
   356 print "= "
   357 printchar 34
-    * sensor *tmp0 @kiln @id
+  358 set *tmp0 4
   359 op add *tmp1 35 *tmp0
   360 printchar *tmp1
   361 printchar 44
 
   377 print " "
   378 print "= "
   379 printchar 34
-    * sensor *tmp0 @water-extractor @id
+  380 set *tmp0 87
   381 op add *tmp1 35 *tmp0
   382 printchar *tmp1
   383 printchar 37
 
   399 print " "
   400 print "= "
   401 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  402 set *tmp0 52
   403 op add *tmp1 35 *tmp0
   404 printchar *tmp1
   405 printchar 39
 
   421 print " "
   422 print "= "
   423 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  424 set *tmp0 52
   425 op add *tmp1 35 *tmp0
   426 printchar *tmp1
   427 printchar 38
 
   443 print " "
   444 print "= "
   445 printchar 34
-    * sensor *tmp0 @steam-generator @id
+  446 set *tmp0 76
   447 op add *tmp1 35 *tmp0
   448 printchar *tmp1
   449 printchar 37
 
   465 print " "
   466 print "= "
   467 printchar 34
-    * sensor *tmp0 @multi-press @id
+  468 set *tmp0 1
   469 op add *tmp1 35 *tmp0
   470 printchar *tmp1
   471 printchar 40
 
   487 print " "
   488 print "= "
   489 printchar 34
-    * sensor *tmp0 @water-extractor @id
+  490 set *tmp0 87
   491 op add *tmp1 35 *tmp0
   492 printchar *tmp1
   493 printchar 37
 
   509 print " "
   510 print "= "
   511 printchar 34
-    * sensor *tmp0 @payload-router @id
+  512 set *tmp0 125
   513 op add *tmp1 35 *tmp0
   514 printchar *tmp1
   515 printchar 39
 
   531 print " "
   532 print "= "
   533 printchar 34
-    * sensor *tmp0 @unloader @id
+  534 set *tmp0 95
   535 op add *tmp1 35 *tmp0
   536 printchar *tmp1
   537 printchar 42
 
   553 print " "
   554 print "= "
   555 printchar 34
-    * sensor *tmp0 @underflow-gate @id
+  556 set *tmp0 53
   557 op add *tmp1 35 *tmp0
   558 printchar *tmp1
   559 printchar 42
 
   575 print " "
   576 print "= "
   577 printchar 34
-    * sensor *tmp0 @additive-reconstructor @id
+  578 set *tmp0 118
   579 op add *tmp1 35 *tmp0
   580 printchar *tmp1
   581 printchar 42
 
   597 print " "
   598 print "= "
   599 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  600 set *tmp0 52
   601 op add *tmp1 35 *tmp0
   602 printchar *tmp1
   603 printchar 38
 
   619 print " "
   620 print "= "
   621 printchar 34
-    * sensor *tmp0 @laser-drill @id
+  622 set *tmp0 85
   623 op add *tmp1 35 *tmp0
   624 printchar *tmp1
   625 printchar 42
 
   641 print " "
   642 print "= "
   643 printchar 34
-    * sensor *tmp0 @solar-panel @id
+  644 set *tmp0 79
   645 op add *tmp1 35 *tmp0
   646 printchar *tmp1
   647 printchar 42
 
   663 print " "
   664 print "= "
   665 printchar 34
-    * sensor *tmp0 @battery-large @id
+  666 set *tmp0 73
   667 op add *tmp1 35 *tmp0
   668 printchar *tmp1
   669 printchar 46

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     4 print "= "
     5 printchar 34
     6 set *tmp0 0
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+    7 op add *tmp1 35 0
+    8 printchar 35
     9 printchar 39
    10 printchar 43
    11 printchar 110
 
    26 print "= "
    27 printchar 34
    28 set *tmp0 72
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   29 op add *tmp1 35 72
+   30 printchar 107
    31 printchar 42
    32 printchar 47
    33 printchar 40
 
    48 print "= "
    49 printchar 34
    50 set *tmp0 72
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   51 op add *tmp1 35 72
+   52 printchar 107
    53 printchar 43
    54 printchar 47
    55 printchar 40
 
    70 print "= "
    71 printchar 34
    72 set *tmp0 74
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   73 op add *tmp1 35 74
+   74 printchar 109
    75 printchar 42
    76 printchar 46
    77 printchar 60
 
    92 print "= "
    93 printchar 34
    94 set *tmp0 2
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   95 op add *tmp1 35 2
+   96 printchar 37
    97 printchar 43
    98 printchar 45
    99 printchar 65
 
   114 print "= "
   115 printchar 34
   116 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  117 op add *tmp1 35 49
+  118 printchar 84
   119 printchar 43
   120 printchar 44
   121 printchar 37
 
   136 print "= "
   137 printchar 34
   138 set *tmp0 84
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  139 op add *tmp1 35 84
+  140 printchar 119
   141 printchar 42
   142 printchar 42
   143 printchar 53
 
   158 print "= "
   159 printchar 34
   160 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  161 op add *tmp1 35 95
+  162 printchar 130
   163 printchar 42
   164 printchar 44
   165 printchar 35
 
   180 print "= "
   181 printchar 34
   182 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  183 op add *tmp1 35 49
+  184 printchar 84
   185 printchar 41
   186 printchar 44
   187 printchar 37
 
   202 print "= "
   203 printchar 34
   204 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  205 op add *tmp1 35 52
+  206 printchar 87
   207 printchar 42
   208 printchar 45
   209 printchar 39
 
   224 print "= "
   225 printchar 34
   226 set *tmp0 139
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  227 op add *tmp1 35 139
+  228 printchar 174
   229 printchar 45
   230 printchar 46
   231 printchar 125
 
   246 print "= "
   247 printchar 34
   248 set *tmp0 68
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  249 op add *tmp1 35 68
+  250 printchar 103
   251 printchar 41
   252 printchar 39
   253 printchar 37
 
   268 print "= "
   269 printchar 34
   270 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  271 op add *tmp1 35 95
+  272 printchar 130
   273 printchar 40
   274 printchar 42
   275 printchar 35
 
   290 print "= "
   291 printchar 34
   292 set *tmp0 116
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  293 op add *tmp1 35 116
+  294 printchar 151
   295 printchar 39
   296 printchar 40
   297 printchar 95
 
   312 print "= "
   313 printchar 34
   314 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  315 op add *tmp1 35 95
+  316 printchar 130
   317 printchar 44
   318 printchar 41
   319 printchar 35
 
   334 print "= "
   335 printchar 34
   336 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  337 op add *tmp1 35 49
+  338 printchar 84
   339 printchar 44
   340 printchar 42
   341 printchar 37
 
   356 print "= "
   357 printchar 34
   358 set *tmp0 4
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  359 op add *tmp1 35 4
+  360 printchar 39
   361 printchar 44
   362 printchar 43
   363 printchar 95
 
   378 print "= "
   379 printchar 34
   380 set *tmp0 87
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  381 op add *tmp1 35 87
+  382 printchar 122
   383 printchar 37
   384 printchar 45
   385 printchar 65
 
   400 print "= "
   401 printchar 34
   402 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  403 op add *tmp1 35 52
+  404 printchar 87
   405 printchar 39
   406 printchar 42
   407 printchar 39
 
   422 print "= "
   423 printchar 34
   424 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  425 op add *tmp1 35 52
+  426 printchar 87
   427 printchar 38
   428 printchar 42
   429 printchar 39
 
   444 print "= "
   445 printchar 34
   446 set *tmp0 76
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  447 op add *tmp1 35 76
+  448 printchar 111
   449 printchar 37
   450 printchar 43
   451 printchar 70
 
   466 print "= "
   467 printchar 34
   468 set *tmp0 1
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  469 op add *tmp1 35 1
+  470 printchar 36
   471 printchar 40
   472 printchar 46
   473 printchar 35
 
   488 print "= "
   489 printchar 34
   490 set *tmp0 87
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  491 op add *tmp1 35 87
+  492 printchar 122
   493 printchar 37
   494 printchar 47
   495 printchar 65
 
   510 print "= "
   511 printchar 34
   512 set *tmp0 125
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  513 op add *tmp1 35 125
+  514 printchar 160
   515 printchar 39
   516 printchar 37
   517 printchar 45
 
   532 print "= "
   533 printchar 34
   534 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  535 op add *tmp1 35 95
+  536 printchar 130
   537 printchar 42
   538 printchar 40
   539 printchar 35
 
   554 print "= "
   555 printchar 34
   556 set *tmp0 53
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  557 op add *tmp1 35 53
+  558 printchar 88
   559 printchar 42
   560 printchar 39
   561 printchar 39
 
   576 print "= "
   577 printchar 34
   578 set *tmp0 118
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  579 op add *tmp1 35 118
+  580 printchar 153
   581 printchar 42
   582 printchar 37
   583 printchar 235
 
   598 print "= "
   599 printchar 34
   600 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  601 op add *tmp1 35 52
+  602 printchar 87
   603 printchar 38
   604 printchar 42
   605 printchar 39
 
   620 print "= "
   621 printchar 34
   622 set *tmp0 85
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  623 op add *tmp1 35 85
+  624 printchar 120
   625 printchar 42
   626 printchar 42
   627 printchar 70
 
   642 print "= "
   643 printchar 34
   644 set *tmp0 79
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  645 op add *tmp1 35 79
+  646 printchar 114
   647 printchar 42
   648 printchar 42
   649 printchar 35
 
   664 print "= "
   665 printchar 34
   666 set *tmp0 73
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  667 op add *tmp1 35 73
+  668 printchar 108
   669 printchar 46
   670 printchar 45
   671 printchar 35

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-62 instructions):
 
     3 print " "
     4 print "= "
     5 printchar 34
-    * set *tmp0 0
-    * op add *tmp1 35 0
     6 printchar 35
     7 printchar 39
     8 printchar 43
 
    23 print " "
    24 print "= "
    25 printchar 34
-    * set *tmp0 72
-    * op add *tmp1 35 72
    26 printchar 107
    27 printchar 42
    28 printchar 47
 
    43 print " "
    44 print "= "
    45 printchar 34
-    * set *tmp0 72
-    * op add *tmp1 35 72
    46 printchar 107
    47 printchar 43
    48 printchar 47
 
    63 print " "
    64 print "= "
    65 printchar 34
-    * set *tmp0 74
-    * op add *tmp1 35 74
    66 printchar 109
    67 printchar 42
    68 printchar 46
 
    83 print " "
    84 print "= "
    85 printchar 34
-    * set *tmp0 2
-    * op add *tmp1 35 2
    86 printchar 37
    87 printchar 43
    88 printchar 45
 
   103 print " "
   104 print "= "
   105 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   106 printchar 84
   107 printchar 43
   108 printchar 44
 
   123 print " "
   124 print "= "
   125 printchar 34
-    * set *tmp0 84
-    * op add *tmp1 35 84
   126 printchar 119
   127 printchar 42
   128 printchar 42
 
   143 print " "
   144 print "= "
   145 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   146 printchar 130
   147 printchar 42
   148 printchar 44
 
   163 print " "
   164 print "= "
   165 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   166 printchar 84
   167 printchar 41
   168 printchar 44
 
   183 print " "
   184 print "= "
   185 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   186 printchar 87
   187 printchar 42
   188 printchar 45
 
   203 print " "
   204 print "= "
   205 printchar 34
-    * set *tmp0 139
-    * op add *tmp1 35 139
   206 printchar 174
   207 printchar 45
   208 printchar 46
 
   223 print " "
   224 print "= "
   225 printchar 34
-    * set *tmp0 68
-    * op add *tmp1 35 68
   226 printchar 103
   227 printchar 41
   228 printchar 39
 
   243 print " "
   244 print "= "
   245 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   246 printchar 130
   247 printchar 40
   248 printchar 42
 
   263 print " "
   264 print "= "
   265 printchar 34
-    * set *tmp0 116
-    * op add *tmp1 35 116
   266 printchar 151
   267 printchar 39
   268 printchar 40
 
   283 print " "
   284 print "= "
   285 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   286 printchar 130
   287 printchar 44
   288 printchar 41
 
   303 print " "
   304 print "= "
   305 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   306 printchar 84
   307 printchar 44
   308 printchar 42
 
   323 print " "
   324 print "= "
   325 printchar 34
-    * set *tmp0 4
-    * op add *tmp1 35 4
   326 printchar 39
   327 printchar 44
   328 printchar 43
 
   343 print " "
   344 print "= "
   345 printchar 34
-    * set *tmp0 87
-    * op add *tmp1 35 87
   346 printchar 122
   347 printchar 37
   348 printchar 45
 
   363 print " "
   364 print "= "
   365 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   366 printchar 87
   367 printchar 39
   368 printchar 42
 
   383 print " "
   384 print "= "
   385 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   386 printchar 87
   387 printchar 38
   388 printchar 42
 
   403 print " "
   404 print "= "
   405 printchar 34
-    * set *tmp0 76
-    * op add *tmp1 35 76
   406 printchar 111
   407 printchar 37
   408 printchar 43
 
   423 print " "
   424 print "= "
   425 printchar 34
-    * set *tmp0 1
-    * op add *tmp1 35 1
   426 printchar 36
   427 printchar 40
   428 printchar 46
 
   443 print " "
   444 print "= "
   445 printchar 34
-    * set *tmp0 87
-    * op add *tmp1 35 87
   446 printchar 122
   447 printchar 37
   448 printchar 47
 
   463 print " "
   464 print "= "
   465 printchar 34
-    * set *tmp0 125
-    * op add *tmp1 35 125
   466 printchar 160
   467 printchar 39
   468 printchar 37
 
   483 print " "
   484 print "= "
   485 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   486 printchar 130
   487 printchar 42
   488 printchar 40
 
   503 print " "
   504 print "= "
   505 printchar 34
-    * set *tmp0 53
-    * op add *tmp1 35 53
   506 printchar 88
   507 printchar 42
   508 printchar 39
 
   523 print " "
   524 print "= "
   525 printchar 34
-    * set *tmp0 118
-    * op add *tmp1 35 118
   526 printchar 153
   527 printchar 42
   528 printchar 37
 
   543 print " "
   544 print "= "
   545 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   546 printchar 87
   547 printchar 38
   548 printchar 42
 
   563 print " "
   564 print "= "
   565 printchar 34
-    * set *tmp0 85
-    * op add *tmp1 35 85
   566 printchar 120
   567 printchar 42
   568 printchar 42
 
   583 print " "
   584 print "= "
   585 printchar 34
-    * set *tmp0 79
-    * op add *tmp1 35 79
   586 printchar 114
   587 printchar 42
   588 printchar 42
 
   603 print " "
   604 print "= "
   605 printchar 34
-    * set *tmp0 73
-    * op add *tmp1 35 73
   606 printchar 108
   607 printchar 46
   608 printchar 45

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
-    * label *label33
     0 print "const "
     1 print "CFG_PRESS"
     2 print " "
 
    15 printchar 34
    16 print ";"
    17 print "\n"
-    * label *label34
-    * label *label35
    18 print "const "
    19 print "CFG_BATTERY1"
    20 print " "
 
    33 printchar 34
    34 print ";"
    35 print "\n"
-    * label *label36
-    * label *label37
    36 print "const "
    37 print "CFG_BATTERY2"
    38 print " "
 
    51 printchar 34
    52 print ";"
    53 print "\n"
-    * label *label38
-    * label *label39
    54 print "const "
    55 print "CFG_GENERATOR"
    56 print " "
 
    69 printchar 34
    70 print ";"
    71 print "\n"
-    * label *label40
-    * label *label41
    72 print "const "
    73 print "CFG_SMELTER"
    74 print " "
 
    87 printchar 34
    88 print ";"
    89 print "\n"
-    * label *label42
-    * label *label43
    90 print "const "
    91 print "CFG_INVERTED_SORT1"
    92 print " "
 
   105 printchar 34
   106 print ";"
   107 print "\n"
-    * label *label44
-    * label *label45
   108 print "const "
   109 print "CFG_PNEUMATIC_DRILL"
   110 print " "
 
   123 printchar 34
   124 print ";"
   125 print "\n"
-    * label *label46
-    * label *label47
   126 print "const "
   127 print "CFG_UNLOADER1"
   128 print " "
 
   141 printchar 34
   142 print ";"
   143 print "\n"
-    * label *label48
-    * label *label49
   144 print "const "
   145 print "CFG_INVERTED_SORT2"
   146 print " "
 
   159 printchar 34
   160 print ";"
   161 print "\n"
-    * label *label50
-    * label *label51
   162 print "const "
   163 print "CFG_OVERFLOW_GATE1"
   164 print " "
 
   177 printchar 34
   178 print ";"
   179 print "\n"
-    * label *label52
-    * label *label53
   180 print "const "
   181 print "CFG_PROCESSOR"
   182 print " "
 
   195 printchar 34
   196 print ";"
   197 print "\n"
-    * label *label54
-    * label *label55
   198 print "const "
   199 print "CFG_POWER_NODE"
   200 print " "
 
   213 printchar 34
   214 print ";"
   215 print "\n"
-    * label *label56
-    * label *label57
   216 print "const "
   217 print "CFG_UNLOADER2"
   218 print " "
 
   231 printchar 34
   232 print ";"
   233 print "\n"
-    * label *label58
-    * label *label59
   234 print "const "
   235 print "CFG_AIR_FACTORY"
   236 print " "
 
   249 printchar 34
   250 print ";"
   251 print "\n"
-    * label *label60
-    * label *label61
   252 print "const "
   253 print "CFG_UNLOADER3"
   254 print " "
 
   267 printchar 34
   268 print ";"
   269 print "\n"
-    * label *label62
-    * label *label63
   270 print "const "
   271 print "CFG_INVERTED_SORT3"
   272 print " "
 
   285 printchar 34
   286 print ";"
   287 print "\n"
-    * label *label64
-    * label *label65
   288 print "const "
   289 print "CFG_KILN"
   290 print " "
 
   303 printchar 34
   304 print ";"
   305 print "\n"
-    * label *label66
-    * label *label67
   306 print "const "
   307 print "CFG_WATER_EXT"
   308 print " "
 
   321 printchar 34
   322 print ";"
   323 print "\n"
-    * label *label68
-    * label *label69
   324 print "const "
   325 print "CFG_OVERFLOW_GATE2"
   326 print " "
 
   339 printchar 34
   340 print ";"
   341 print "\n"
-    * label *label70
-    * label *label71
   342 print "const "
   343 print "CFG_OVERFLOW_GATE3"
   344 print " "
 
   357 printchar 34
   358 print ";"
   359 print "\n"
-    * label *label72
-    * label *label73
   360 print "const "
   361 print "CFG_STEAM_GEN"
   362 print " "
 
   375 printchar 34
   376 print ";"
   377 print "\n"
-    * label *label74
-    * label *label75
   378 print "const "
   379 print "CFG_MULTIPRESS"
   380 print " "
 
   393 printchar 34
   394 print ";"
   395 print "\n"
-    * label *label76
-    * label *label77
   396 print "const "
   397 print "CFG_WATER_EXT2"
   398 print " "
 
   411 printchar 34
   412 print ";"
   413 print "\n"
-    * label *label78
-    * label *label79
   414 print "const "
   415 print "CFG_PAYLOAD_ROUTER"
   416 print " "
 
   429 printchar 34
   430 print ";"
   431 print "\n"
-    * label *label80
-    * label *label81
   432 print "const "
   433 print "CFG_UNLOADER4"
   434 print " "
 
   447 printchar 34
   448 print ";"
   449 print "\n"
-    * label *label82
-    * label *label83
   450 print "const "
   451 print "CFG_UNDERFLOW_GATE"
   452 print " "
 
   465 printchar 34
   466 print ";"
   467 print "\n"
-    * label *label84
-    * label *label85
   468 print "const "
   469 print "CFG_ADDITIVE_REC"
   470 print " "
 
   483 printchar 34
   484 print ";"
   485 print "\n"
-    * label *label86
-    * label *label87
   486 print "const "
   487 print "CFG_OVERFLOW_GATE4"
   488 print " "
 
   501 printchar 34
   502 print ";"
   503 print "\n"
-    * label *label88
-    * label *label89
   504 print "const "
   505 print "CFG_LASER_DRILL"
   506 print " "
 
   519 printchar 34
   520 print ";"
   521 print "\n"
-    * label *label90
-    * label *label91
   522 print "const "
   523 print "CFG_SOLAR_PANEL"
   524 print " "
 
   537 printchar 34
   538 print ";"
   539 print "\n"
-    * label *label92
-    * label *label93
   540 print "const "
   541 print "CFG_BATTERY_LARGE"
   542 print " "
 
   555 printchar 34
   556 print ";"
   557 print "\n"
-    * label *label94
   558 printflush message1
   559 end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   556 print ";"
   557 print "\n"
   558 printflush message1
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-421 instructions):
-    * print "const "
-    * print "CFG_PRESS"
-    * print " "
-    * print "= "
+    0 print "const CFG_PRESS = "
     1 printchar 34
-    * printchar 35
-    * printchar 39
-    * printchar 43
-    * printchar 110
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+    2 print "#'+nA#####"
     3 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_BATTERY1"
-    * print " "
-    * print "= "
+    4 print ";\nconst CFG_BATTERY1 = "
     5 printchar 34
-    * printchar 107
-    * printchar 42
-    * printchar 47
-    * printchar 40
-    * printchar 55
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+    6 print "k*/(7#####"
     7 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_BATTERY2"
-    * print " "
-    * print "= "
+    8 print ";\nconst CFG_BATTERY2 = "
     9 printchar 34
-    * printchar 107
-    * printchar 43
-    * printchar 47
-    * printchar 40
-    * printchar 55
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   10 print "k+/(7#####"
    11 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_GENERATOR"
-    * print " "
-    * print "= "
+   12 print ";\nconst CFG_GENERATOR = "
    13 printchar 34
-    * printchar 109
-    * printchar 42
-    * printchar 46
-    * printchar 60
-    * printchar 50
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   14 print "m*.<2#####"
    15 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_SMELTER"
-    * print " "
-    * print "= "
+   16 print ";\nconst CFG_SMELTER = "
    17 printchar 34
-    * printchar 37
-    * printchar 43
-    * printchar 45
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   18 print "%+-A<#####"
    19 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_INVERTED_SORT1"
-    * print " "
-    * print "= "
+   20 print ";\nconst CFG_INVERTED_SORT1 = "
    21 printchar 34
-    * printchar 84
-    * printchar 43
-    * printchar 44
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   22 print "T+,%%#####"
    23 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_PNEUMATIC_DRILL"
-    * print " "
-    * print "= "
+   24 print ";\nconst CFG_PNEUMATIC_DRILL = "
    25 printchar 34
-    * printchar 119
-    * printchar 42
-    * printchar 42
-    * printchar 53
-    * printchar 35
-    * printchar 45
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   26 print "w**5#-####"
    27 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_UNLOADER1"
-    * print " "
-    * print "= "
+   28 print ";\nconst CFG_UNLOADER1 = "
    29 printchar 34
    30 printchar 130
-    * printchar 42
-    * printchar 44
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
+   31 print "*,###A<##"
    32 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_INVERTED_SORT2"
-    * print " "
-    * print "= "
+   33 print ";\nconst CFG_INVERTED_SORT2 = "
    34 printchar 34
-    * printchar 84
-    * printchar 41
-    * printchar 44
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   35 print "T),%%#####"
    36 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_OVERFLOW_GATE1"
-    * print " "
-    * print "= "
+   37 print ";\nconst CFG_OVERFLOW_GATE1 = "
    38 printchar 34
-    * printchar 87
-    * printchar 42
-    * printchar 45
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   39 print "W*-'%#####"
    40 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_PROCESSOR"
-    * print " "
-    * print "= "
+   41 print ";\nconst CFG_PROCESSOR = "
    42 printchar 34
-    * printchar 174
-    * printchar 45
-    * printchar 46
-    * printchar 125
-    * printchar 85
-    * printchar 35
-    * printchar 85
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   43 print "®-.}U#U###"
    44 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_POWER_NODE"
-    * print " "
-    * print "= "
+   45 print ";\nconst CFG_POWER_NODE = "
    46 printchar 34
-    * printchar 103
-    * printchar 41
-    * printchar 39
-    * printchar 37
-    * printchar 41
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   47 print "g)'%)#####"
    48 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_UNLOADER2"
-    * print " "
-    * print "= "
+   49 print ";\nconst CFG_UNLOADER2 = "
    50 printchar 34
    51 printchar 130
-    * printchar 40
-    * printchar 42
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
+   52 print "(*###A<##"
    53 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_AIR_FACTORY"
-    * print " "
-    * print "= "
+   54 print ";\nconst CFG_AIR_FACTORY = "
    55 printchar 34
    56 printchar 151
-    * printchar 39
-    * printchar 40
-    * printchar 95
-    * printchar 105
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 38
+   57 print "'(_i####&"
    58 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_UNLOADER3"
-    * print " "
-    * print "= "
+   59 print ";\nconst CFG_UNLOADER3 = "
    60 printchar 34
    61 printchar 130
-    * printchar 44
-    * printchar 41
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
+   62 print ",)###A<##"
    63 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_INVERTED_SORT3"
-    * print " "
-    * print "= "
+   64 print ";\nconst CFG_INVERTED_SORT3 = "
    65 printchar 34
-    * printchar 84
-    * printchar 44
-    * printchar 42
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   66 print "T,*%%#####"
    67 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_KILN"
-    * print " "
-    * print "= "
+   68 print ";\nconst CFG_KILN = "
    69 printchar 34
-    * printchar 39
-    * printchar 44
-    * printchar 43
-    * printchar 95
-    * printchar 65
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   70 print "',+_AA####"
    71 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_WATER_EXT"
-    * print " "
-    * print "= "
+   72 print ";\nconst CFG_WATER_EXT = "
    73 printchar 34
-    * printchar 122
-    * printchar 37
-    * printchar 45
-    * printchar 65
-    * printchar 65
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 35
+   74 print "z%-AAA##A#"
    75 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_OVERFLOW_GATE2"
-    * print " "
-    * print "= "
+   76 print ";\nconst CFG_OVERFLOW_GATE2 = "
    77 printchar 34
-    * printchar 87
-    * printchar 39
-    * printchar 42
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   78 print "W'*'%#####"
    79 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_OVERFLOW_GATE3"
-    * print " "
-    * print "= "
+   80 print ";\nconst CFG_OVERFLOW_GATE3 = "
    81 printchar 34
-    * printchar 87
-    * printchar 38
-    * printchar 42
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   82 print "W&*'%#####"
    83 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_STEAM_GEN"
-    * print " "
-    * print "= "
+   84 print ";\nconst CFG_STEAM_GEN = "
    85 printchar 34
-    * printchar 111
-    * printchar 37
-    * printchar 43
-    * printchar 70
-    * printchar 75
-    * printchar 60
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   86 print "o%+FK<A###"
    87 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_MULTIPRESS"
-    * print " "
-    * print "= "
+   88 print ";\nconst CFG_MULTIPRESS = "
    89 printchar 34
-    * printchar 36
-    * printchar 40
-    * printchar 46
-    * printchar 35
+   90 print "$(.#"
    91 printchar 135
-    * printchar 85
-    * printchar 60
+   92 print "U<"
    93 printchar 135
-    * printchar 35
-    * printchar 35
+   94 print "##"
    95 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_WATER_EXT2"
-    * print " "
-    * print "= "
+   96 print ";\nconst CFG_WATER_EXT2 = "
    97 printchar 34
-    * printchar 122
-    * printchar 37
-    * printchar 47
-    * printchar 65
-    * printchar 65
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 35
+   98 print "z%/AAA##A#"
    99 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_PAYLOAD_ROUTER"
-    * print " "
-    * print "= "
+  100 print ";\nconst CFG_PAYLOAD_ROUTER = "
   101 printchar 34
-    * printchar 160
-    * printchar 39
-    * printchar 37
-    * printchar 45
-    * printchar 35
-    * printchar 50
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  102 print " '%-#2####"
   103 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_UNLOADER4"
-    * print " "
-    * print "= "
+  104 print ";\nconst CFG_UNLOADER4 = "
   105 printchar 34
   106 printchar 130
-    * printchar 42
-    * printchar 40
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
+  107 print "*(###A<##"
   108 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_UNDERFLOW_GATE"
-    * print " "
-    * print "= "
+  109 print ";\nconst CFG_UNDERFLOW_GATE = "
   110 printchar 34
-    * printchar 88
-    * printchar 42
-    * printchar 39
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  111 print "X*''%#####"
   112 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_ADDITIVE_REC"
-    * print " "
-    * print "= "
+  113 print ";\nconst CFG_ADDITIVE_REC = "
   114 printchar 34
   115 printchar 153
-    * printchar 42
-    * printchar 37
-    * printchar 235
+  116 print "*%ë"
   117 printchar 155
-    * printchar 35
-    * printchar 125
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  118 print "#}###"
   119 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_OVERFLOW_GATE4"
-    * print " "
-    * print "= "
+  120 print ";\nconst CFG_OVERFLOW_GATE4 = "
   121 printchar 34
-    * printchar 87
-    * printchar 38
-    * printchar 42
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  122 print "W&*'%#####"
   123 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_LASER_DRILL"
-    * print " "
-    * print "= "
+  124 print ";\nconst CFG_LASER_DRILL = "
   125 printchar 34
-    * printchar 120
-    * printchar 42
-    * printchar 42
-    * printchar 70
-    * printchar 35
-    * printchar 65
-    * printchar 65
-    * printchar 55
-    * printchar 35
-    * printchar 35
+  126 print "x**F#AA7##"
   127 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_SOLAR_PANEL"
-    * print " "
-    * print "= "
+  128 print ";\nconst CFG_SOLAR_PANEL = "
   129 printchar 34
-    * printchar 114
-    * printchar 42
-    * printchar 42
-    * printchar 35
-    * printchar 45
-    * printchar 35
-    * printchar 43
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  130 print "r**#-#+###"
   131 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CFG_BATTERY_LARGE"
-    * print " "
-    * print "= "
+  132 print ";\nconst CFG_BATTERY_LARGE = "
   133 printchar 34
-    * printchar 108
-    * printchar 46
-    * printchar 45
-    * printchar 35
-    * printchar 85
-    * printchar 35
-    * printchar 65
-    * printchar 55
-    * printchar 35
-    * printchar 35
+  134 print "l.-#U#A7##"
   135 printchar 34
-    * print ";"
-    * print "\n"
+  136 print ";\n"
   137 printflush message1

Final code before resolving virtual instructions:

    0:  print "const CFG_PRESS = "                                   print($"const $name = ");
    1:  printchar 34                                                 printchar('"');
    2:  print "#'+nA#####"                                           printchar(35 + type.@id);
    3:  printchar 34                                                 printchar('"');
    4:  print ";\nconst CFG_BATTERY1 = "                             println(";");
    5:  printchar 34                                                 printchar('"');
    6:  print "k*/(7#####"                                           printchar(35 + type.@id);
    7:  printchar 34                                                 printchar('"');
    8:  print ";\nconst CFG_BATTERY2 = "                             println(";");
    9:  printchar 34                                                 printchar('"');
   10:  print "k+/(7#####"                                           printchar(35 + type.@id);
   11:  printchar 34                                                 printchar('"');
   12:  print ";\nconst CFG_GENERATOR = "                            println(";");
   13:  printchar 34                                                 printchar('"');
   14:  print "m*.<2#####"                                           printchar(35 + type.@id);
   15:  printchar 34                                                 printchar('"');
   16:  print ";\nconst CFG_SMELTER = "                              println(";");
   17:  printchar 34                                                 printchar('"');
   18:  print "%+-A<#####"                                           printchar(35 + type.@id);
   19:  printchar 34                                                 printchar('"');
   20:  print ";\nconst CFG_INVERTED_SORT1 = "                       println(";");
   21:  printchar 34                                                 printchar('"');
   22:  print "T+,%%#####"                                           printchar(35 + type.@id);
   23:  printchar 34                                                 printchar('"');
   24:  print ";\nconst CFG_PNEUMATIC_DRILL = "                      println(";");
   25:  printchar 34                                                 printchar('"');
   26:  print "w**5#-####"                                           printchar(35 + type.@id);
   27:  printchar 34                                                 printchar('"');
   28:  print ";\nconst CFG_UNLOADER1 = "                            println(";");
   29:  printchar 34                                                 printchar('"');
   30:  printchar 130                                                printchar(35 + type.@id);
   31:  print "*,###A<##"                                            printchar(35 + floor(7 + x));
   32:  printchar 34                                                 printchar('"');
   33:  print ";\nconst CFG_INVERTED_SORT2 = "                       println(";");
   34:  printchar 34                                                 printchar('"');
   35:  print "T),%%#####"                                           printchar(35 + type.@id);
   36:  printchar 34                                                 printchar('"');
   37:  print ";\nconst CFG_OVERFLOW_GATE1 = "                       println(";");
   38:  printchar 34                                                 printchar('"');
   39:  print "W*-'%#####"                                           printchar(35 + type.@id);
   40:  printchar 34                                                 printchar('"');
   41:  print ";\nconst CFG_PROCESSOR = "                            println(";");
   42:  printchar 34                                                 printchar('"');
   43:  print "®-.}U#U###"                                           printchar(35 + type.@id);
   44:  printchar 34                                                 printchar('"');
   45:  print ";\nconst CFG_POWER_NODE = "                           println(";");
   46:  printchar 34                                                 printchar('"');
   47:  print "g)'%)#####"                                           printchar(35 + type.@id);
   48:  printchar 34                                                 printchar('"');
   49:  print ";\nconst CFG_UNLOADER2 = "                            println(";");
   50:  printchar 34                                                 printchar('"');
   51:  printchar 130                                                printchar(35 + type.@id);
   52:  print "(*###A<##"                                            printchar(35 + floor(7 + x));
   53:  printchar 34                                                 printchar('"');
   54:  print ";\nconst CFG_AIR_FACTORY = "                          println(";");
   55:  printchar 34                                                 printchar('"');
   56:  printchar 151                                                printchar(35 + type.@id);
   57:  print "'(_i####&"                                            printchar(35 + floor(7 + x));
   58:  printchar 34                                                 printchar('"');
   59:  print ";\nconst CFG_UNLOADER3 = "                            println(";");
   60:  printchar 34                                                 printchar('"');
   61:  printchar 130                                                printchar(35 + type.@id);
   62:  print ",)###A<##"                                            printchar(35 + floor(7 + x));
   63:  printchar 34                                                 printchar('"');
   64:  print ";\nconst CFG_INVERTED_SORT3 = "                       println(";");
   65:  printchar 34                                                 printchar('"');
   66:  print "T,*%%#####"                                           printchar(35 + type.@id);
   67:  printchar 34                                                 printchar('"');
   68:  print ";\nconst CFG_KILN = "                                 println(";");
   69:  printchar 34                                                 printchar('"');
   70:  print "',+_AA####"                                           printchar(35 + type.@id);
   71:  printchar 34                                                 printchar('"');
   72:  print ";\nconst CFG_WATER_EXT = "                            println(";");
   73:  printchar 34                                                 printchar('"');
   74:  print "z%-AAA##A#"                                           printchar(35 + type.@id);
   75:  printchar 34                                                 printchar('"');
   76:  print ";\nconst CFG_OVERFLOW_GATE2 = "                       println(";");
   77:  printchar 34                                                 printchar('"');
   78:  print "W'*'%#####"                                           printchar(35 + type.@id);
   79:  printchar 34                                                 printchar('"');
   80:  print ";\nconst CFG_OVERFLOW_GATE3 = "                       println(";");
   81:  printchar 34                                                 printchar('"');
   82:  print "W&*'%#####"                                           printchar(35 + type.@id);
   83:  printchar 34                                                 printchar('"');
   84:  print ";\nconst CFG_STEAM_GEN = "                            println(";");
   85:  printchar 34                                                 printchar('"');
   86:  print "o%+FK<A###"                                           printchar(35 + type.@id);
   87:  printchar 34                                                 printchar('"');
   88:  print ";\nconst CFG_MULTIPRESS = "                           println(";");
   89:  printchar 34                                                 printchar('"');
   90:  print "$(.#"                                                 printchar(35 + type.@id);
   91:  printchar 135                                                printchar(35 + pb);
   92:  print "U<"                                                   printchar(35 + gr);
   93:  printchar 135                                                printchar(35 + ti);
   94:  print "##"                                                   printchar(35 + mg);
   95:  printchar 34                                                 printchar('"');
   96:  print ";\nconst CFG_WATER_EXT2 = "                           println(";");
   97:  printchar 34                                                 printchar('"');
   98:  print "z%/AAA##A#"                                           printchar(35 + type.@id);
   99:  printchar 34                                                 printchar('"');
  100:  print ";\nconst CFG_PAYLOAD_ROUTER = "                       println(";");
  101:  printchar 34                                                 printchar('"');
  102:  print " '%-#2####"                                           printchar(35 + type.@id);
  103:  printchar 34                                                 printchar('"');
  104:  print ";\nconst CFG_UNLOADER4 = "                            println(";");
  105:  printchar 34                                                 printchar('"');
  106:  printchar 130                                                printchar(35 + type.@id);
  107:  print "*(###A<##"                                            printchar(35 + floor(7 + x));
  108:  printchar 34                                                 printchar('"');
  109:  print ";\nconst CFG_UNDERFLOW_GATE = "                       println(";");
  110:  printchar 34                                                 printchar('"');
  111:  print "X*''%#####"                                           printchar(35 + type.@id);
  112:  printchar 34                                                 printchar('"');
  113:  print ";\nconst CFG_ADDITIVE_REC = "                         println(";");
  114:  printchar 34                                                 printchar('"');
  115:  printchar 153                                                printchar(35 + type.@id);
  116:  print "*%ë"                                                  printchar(35 + floor(7 + x));
  117:  printchar 155                                                printchar(35 + pb);
  118:  print "#}###"                                                printchar(35 + gr);
  119:  printchar 34                                                 printchar('"');
  120:  print ";\nconst CFG_OVERFLOW_GATE4 = "                       println(";");
  121:  printchar 34                                                 printchar('"');
  122:  print "W&*'%#####"                                           printchar(35 + type.@id);
  123:  printchar 34                                                 printchar('"');
  124:  print ";\nconst CFG_LASER_DRILL = "                          println(";");
  125:  printchar 34                                                 printchar('"');
  126:  print "x**F#AA7##"                                           printchar(35 + type.@id);
  127:  printchar 34                                                 printchar('"');
  128:  print ";\nconst CFG_SOLAR_PANEL = "                          println(";");
  129:  printchar 34                                                 printchar('"');
  130:  print "r**#-#+###"                                           printchar(35 + type.@id);
  131:  printchar 34                                                 printchar('"');
  132:  print ";\nconst CFG_BATTERY_LARGE = "                        println(";");
  133:  printchar 34                                                 printchar('"');
  134:  print "l.-#U#A7##"                                           printchar(35 + type.@id);
  135:  printchar 34                                                 printchar('"');
  136:  print ";\n"                                                  println(";");
  137:  printflush message1                                          #set target = 8;


Performance: parsed in 169 ms, compiled in 224 ms, optimized in 600 ms, run in 15 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (138 steps):
const CFG_PRESS = "#'+nA#####";
const CFG_BATTERY1 = "k*/(7#####";
const CFG_BATTERY2 = "k+/(7#####";
const CFG_GENERATOR = "m*.<2#####";
const CFG_SMELTER = "%+-A<#####";
const CFG_INVERTED_SORT1 = "T+,%%#####";
const CFG_PNEUMATIC_DRILL = "w**5#-####";
const CFG_UNLOADER1 = "*,###A<##";
const CFG_INVERTED_SORT2 = "T),%%#####";
const CFG_OVERFLOW_GATE1 = "W*-'%#####";
const CFG_PROCESSOR = "®-.}U#U###";
const CFG_POWER_NODE = "g)'%)#####";
const CFG_UNLOADER2 = "(*###A<##";
const CFG_AIR_FACTORY = "'(_i####&";
const CFG_UNLOADER3 = ",)###A<##";
const CFG_INVERTED_SORT3 = "T,*%%#####";
const CFG_KILN = "',+_AA####";
const CFG_WATER_EXT = "z%-AAA##A#";
const CFG_OVERFLOW_GATE2 = "W'*'%#####";
const CFG_OVERFLOW_GATE3 = "W&*'%#####";
const CFG_STEAM_GEN = "o%+FK<A###";
const CFG_MULTIPRESS = "$(.#U<##";
const CFG_WATER_EXT2 = "z%/AAA##A#";
const CFG_PAYLOAD_ROUTER = " '%-#2####";
const CFG_UNLOADER4 = "*(###A<##";
const CFG_UNDERFLOW_GATE = "X*''%#####";
const CFG_ADDITIVE_REC = "*%ë#}###";
const CFG_OVERFLOW_GATE4 = "W&*'%#####";
const CFG_LASER_DRILL = "x**F#AA7##";
const CFG_SOLAR_PANEL = "r**#-#+###";
const CFG_BATTERY_LARGE = "l.-#U#A7##";

