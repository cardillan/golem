Automatically added missing 'printflush(message1);' call to the end of the program.
   585 instructions before optimizations.
     1 instructions eliminated by Single Step Elimination (6 iterations).
    39 instructions modified by Expression Optimization (3 iterations).
  1092 instructions eliminated by Data Flow Optimization (35 passes, 141 iterations).
  1250 instructions added by Function Inlining (36 iterations).
    39 function calls inlined by Function Inlining.
   566 instructions eliminated by Print Merging.
   176 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 616):
  * Inline function call at line 7:1                             size   +34, benefit        9.0, efficiency      0.265 (+27 instructions)
    Inline function call at line 8:1                             size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 9:1                             size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 10:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 11:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 12:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 589):
  * Inline function call at line 8:1                             size   +34, benefit        9.0, efficiency      0.265 (+17 instructions)
    Inline function call at line 9:1                             size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 10:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 11:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 12:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 572):
  * Inline function call at line 9:1                             size   +34, benefit        9.0, efficiency      0.265 (+13 instructions)
    Inline function call at line 10:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 11:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 12:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 559):
  * Inline function call at line 10:1                            size   +34, benefit        9.0, efficiency      0.265 (+13 instructions)
    Inline function call at line 11:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 12:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 546):
  * Inline function call at line 11:1                            size   +34, benefit        9.0, efficiency      0.265 (+13 instructions)
    Inline function call at line 12:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 533):
  * Inline function call at line 12:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 521):
  * Inline function call at line 13:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 509):
  * Inline function call at line 14:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 497):
  * Inline function call at line 15:1                            size   +34, benefit        9.0, efficiency      0.265 (+14 instructions)
    Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 483):
  * Inline function call at line 16:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 471):
  ! Inline function 'packCfg' defined at line 47:1               size  +951, benefit      261.0, efficiency      0.274
  * Inline function call at line 17:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 459):
  ! Inline function 'packCfg' defined at line 47:1               size  +917, benefit      252.0, efficiency      0.275
  * Inline function call at line 18:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 448):
  ! Inline function 'packCfg' defined at line 47:1               size  +883, benefit      243.0, efficiency      0.275
  * Inline function call at line 19:1                            size   +34, benefit        9.0, efficiency      0.265 (+10 instructions)
    Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 438):
  ! Inline function 'packCfg' defined at line 47:1               size  +849, benefit      234.0, efficiency      0.276
  * Inline function call at line 20:1                            size   +34, benefit        9.0, efficiency      0.265 (+10 instructions)
    Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 428):
  ! Inline function 'packCfg' defined at line 47:1               size  +815, benefit      225.0, efficiency      0.276
  * Inline function call at line 21:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 416):
  ! Inline function 'packCfg' defined at line 47:1               size  +781, benefit      216.0, efficiency      0.277
  * Inline function call at line 22:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 404):
  ! Inline function 'packCfg' defined at line 47:1               size  +747, benefit      207.0, efficiency      0.277
  * Inline function call at line 23:1                            size   +34, benefit        9.0, efficiency      0.265 (+13 instructions)
    Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 391):
  ! Inline function 'packCfg' defined at line 47:1               size  +713, benefit      198.0, efficiency      0.278
  * Inline function call at line 24:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 380):
  ! Inline function 'packCfg' defined at line 47:1               size  +679, benefit      189.0, efficiency      0.278
  * Inline function call at line 25:1                            size   +34, benefit        9.0, efficiency      0.265 (+17 instructions)
    Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 363):
  ! Inline function 'packCfg' defined at line 47:1               size  +645, benefit      180.0, efficiency      0.279
  * Inline function call at line 26:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 352):
  ! Inline function 'packCfg' defined at line 47:1               size  +611, benefit      171.0, efficiency      0.280
  * Inline function call at line 27:1                            size   +34, benefit        9.0, efficiency      0.265 (+10 instructions)
    Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 342):
  ! Inline function 'packCfg' defined at line 47:1               size  +577, benefit      162.0, efficiency      0.281
  * Inline function call at line 28:1                            size   +34, benefit        9.0, efficiency      0.265 (+9 instructions)
    Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 333):
  ! Inline function 'packCfg' defined at line 47:1               size  +543, benefit      153.0, efficiency      0.282
  * Inline function call at line 29:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 322):
  ! Inline function 'packCfg' defined at line 47:1               size  +509, benefit      144.0, efficiency      0.283
  * Inline function call at line 30:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 311):
  ! Inline function 'packCfg' defined at line 47:1               size  +475, benefit      135.0, efficiency      0.284
  * Inline function call at line 31:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 299):
  ! Inline function 'packCfg' defined at line 47:1               size  +441, benefit      126.0, efficiency      0.286
  * Inline function call at line 32:1                            size   +34, benefit        9.0, efficiency      0.265 (+13 instructions)
    Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 286):
  ! Inline function 'packCfg' defined at line 47:1               size  +407, benefit      117.0, efficiency      0.287
  * Inline function call at line 33:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 275):
  ! Inline function 'packCfg' defined at line 47:1               size  +373, benefit      108.0, efficiency      0.290
  * Inline function call at line 34:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 264):
  ! Inline function 'packCfg' defined at line 47:1               size  +339, benefit       99.0, efficiency      0.292
  * Inline function call at line 35:1                            size   +34, benefit        9.0, efficiency      0.265 (+11 instructions)
    Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 253):
  ! Inline function 'packCfg' defined at line 47:1               size  +305, benefit       90.0, efficiency      0.295
  * Inline function call at line 36:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 241):
  ! Inline function 'packCfg' defined at line 47:1               size  +271, benefit       81.0, efficiency      0.299
  * Inline function call at line 37:1                            size   +34, benefit        9.0, efficiency      0.265 (+14 instructions)
    Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 227):
  ! Inline function 'packCfg' defined at line 47:1               size  +237, benefit       72.0, efficiency      0.304
  * Inline function call at line 38:1                            size   +34, benefit        9.0, efficiency      0.265 (+12 instructions)
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Pass 1: speed optimization selection (cost limit 215):
  * Inline function 'packCfg' defined at line 47:1               size  +203, benefit       63.0, efficiency      0.310 (+36 instructions)
    Inline function call at line 39:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 40:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 41:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 42:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 43:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 44:1                            size   +34, benefit        9.0, efficiency      0.265
    Inline function call at line 45:1                            size   +34, benefit        9.0, efficiency      0.265

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-11 instructions):
 
   465 set :packCfg:name "CONTAINER"
   466 set :packCfg:type @container
   467 set :packCfg:x 0
-    * set :packCfg:y 0
   468 set :packCfg:cu 0
   469 set :packCfg:pb 0
   470 set :packCfg:gr 0
 
   537 call *label0 *invalid :packCfg*retval (m:*label36) (h:*label36)
   538 label *label36
   539 set :packCfg:name "UNLOADER6"
-    * set :packCfg:type @unloader
   540 set :packCfg:x 1
   541 set :packCfg:y -2
-    * set :packCfg:cu 0
-    * set :packCfg:pb 0
   542 set :packCfg:gr 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   543 set :packCfg:mg 0
   544 set :packCfg:th 0
   545 set :packCfg:rotation 0
 
   548 label *label37
   549 set :packCfg:name "UNDERFLOW_GATE2"
   550 set :packCfg:type @underflow-gate
-    * set :packCfg:x 1
   551 set :packCfg:y -3
   552 set :packCfg:cu 4
   553 set :packCfg:pb 2
 
   555 set :packCfg:si 0
   556 set :packCfg:ti 0
   557 set :packCfg:mg 0
-    * set :packCfg:th 0
   558 set :packCfg:rotation 0
   559 setaddr :packCfg*retaddr *label38 (h:*label38)
   560 call *label0 *invalid :packCfg*retval (m:*label38) (h:*label38)
 
   565 set :packCfg:y -4
   566 set :packCfg:cu 0
   567 set :packCfg:pb 650
-    * set :packCfg:gr 0
   568 set :packCfg:si 450
   569 set :packCfg:ti 350
-    * set :packCfg:mg 0
   570 set :packCfg:th 650
-    * set :packCfg:rotation 0
   571 setaddr :packCfg*retaddr *label39 (h:*label39)
   572 call *label0 *invalid :packCfg*retval (m:*label39) (h:*label39)
   573 label *label39

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   450 set :packCfg:name "SOLAR_PANEL"
   451 set :packCfg:type @solar-panel
   452 set :packCfg:x 0
-    * set :packCfg:y 0
   453 set :packCfg:cu 0
   454 set :packCfg:pb 10
   455 set :packCfg:gr 0
 
   506 call *label0 *invalid :packCfg*retval (m:*label34) (h:*label34)
   507 label *label34
   508 set :packCfg:name "INVERTED_SORT5"
-    * set :packCfg:type @inverted-sorter
   509 set :packCfg:x 3
   510 set :packCfg:y -1
-    * set :packCfg:cu 2
-    * set :packCfg:pb 2
   511 set :packCfg:gr 0
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   512 set :packCfg:mg 0
   513 set :packCfg:th 0
   514 set :packCfg:rotation 0
 
   517 label *label35
   518 set :packCfg:name "UNLOADER5"
   519 set :packCfg:type @unloader
-    * set :packCfg:x 3
   520 set :packCfg:y 3
   521 set :packCfg:cu 0
   522 set :packCfg:pb 0
 
   534 set :packCfg:y -2
   535 set :packCfg:gr 0
   536 set :packCfg:mg 0
-    * set :packCfg:th 0
   537 set :packCfg:rotation 0
   538 setaddr :packCfg*retaddr *label37 (h:*label37)
   539 call *label0 *invalid :packCfg*retval (m:*label37) (h:*label37)
 
   543 set :packCfg:y -3
   544 set :packCfg:cu 4
   545 set :packCfg:pb 2
-    * set :packCfg:gr 0
   546 set :packCfg:si 0
   547 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   548 setaddr :packCfg*retaddr *label38 (h:*label38)
   549 call *label0 *invalid :packCfg*retval (m:*label38) (h:*label38)
   550 label *label38

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-11 instructions):
 
   283 call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
   284 label *label19
   285 set :packCfg:name "OVERFLOW_GATE3"
-    * set :packCfg:type @overflow-gate
   286 set :packCfg:x -4
   287 set :packCfg:y 0
   288 set :packCfg:cu 4
 
   361 set :packCfg:x 0
   362 set :packCfg:y -2
   363 set :packCfg:cu 0
-    * set :packCfg:pb 0
   364 set :packCfg:gr 0
   365 set :packCfg:si 30
   366 set :packCfg:ti 25
 
   433 set :packCfg:name "LASER_DRILL"
   434 set :packCfg:type @laser-drill
   435 set :packCfg:x 0
-    * set :packCfg:y 0
   436 set :packCfg:cu 35
   437 set :packCfg:pb 0
   438 set :packCfg:gr 30
 
   461 set :packCfg:name "CONTAINER"
   462 set :packCfg:type @container
   463 set :packCfg:x 0
-    * set :packCfg:cu 0
   464 set :packCfg:pb 0
   465 set :packCfg:gr 0
   466 set :packCfg:si 0
 
   493 set :packCfg:cu 2
   494 set :packCfg:pb 2
   495 set :packCfg:gr 0
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   496 set :packCfg:mg 0
   497 set :packCfg:th 0
   498 set :packCfg:rotation 0
 
   500 call *label0 *invalid :packCfg*retval (m:*label34) (h:*label34)
   501 label *label34
   502 set :packCfg:name "INVERTED_SORT5"
-    * set :packCfg:x 3
   503 set :packCfg:y -1
   504 set :packCfg:gr 0
   505 set :packCfg:mg 0
 
   517 set :packCfg:si 30
   518 set :packCfg:ti 25
   519 set :packCfg:mg 0
-    * set :packCfg:th 0
   520 set :packCfg:rotation 0
   521 setaddr :packCfg*retaddr *label36 (h:*label36)
   522 call *label0 *invalid :packCfg*retval (m:*label36) (h:*label36)
 
   524 set :packCfg:name "UNLOADER6"
   525 set :packCfg:x 1
   526 set :packCfg:y -2
-    * set :packCfg:gr 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   527 setaddr :packCfg*retaddr *label37 (h:*label37)
   528 call *label0 *invalid :packCfg*retval (m:*label37) (h:*label37)
   529 label *label37

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-11 instructions):
 
    28 call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
    29 label *label2
    30 set :packCfg:name "BATTERY2"
-    * set :packCfg:type @battery
    31 set :packCfg:x 1
    32 set :packCfg:y 5
    33 set :packCfg:cu 5
 
   283 label *label19
   284 set :packCfg:name "OVERFLOW_GATE3"
   285 set :packCfg:x -4
-    * set :packCfg:y 0
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
   286 set :packCfg:gr 0
   287 set :packCfg:si 0
   288 set :packCfg:ti 0
 
   389 set :packCfg:pb 120
   390 set :packCfg:gr 0
   391 set :packCfg:si 90
-    * set :packCfg:ti 0
   392 set :packCfg:mg 0
   393 set :packCfg:th 0
   394 set :packCfg:rotation 0
 
   455 label *label31
   456 set :packCfg:name "CONTAINER"
   457 set :packCfg:type @container
-    * set :packCfg:x 0
   458 set :packCfg:pb 0
   459 set :packCfg:gr 0
   460 set :packCfg:si 0
 
   472 set :packCfg:cu 30
   473 set :packCfg:pb 25
   474 set :packCfg:gr 0
-    * set :packCfg:si 0
   475 set :packCfg:ti 0
   476 set :packCfg:mg 0
   477 set :packCfg:th 0
 
   496 set :packCfg:y -1
   497 set :packCfg:gr 0
   498 set :packCfg:mg 0
-    * set :packCfg:th 0
   499 set :packCfg:rotation 0
   500 setaddr :packCfg*retaddr *label35 (h:*label35)
   501 call *label0 *invalid :packCfg*retval (m:*label35) (h:*label35)
 
   505 set :packCfg:y 3
   506 set :packCfg:cu 0
   507 set :packCfg:pb 0
-    * set :packCfg:gr 0
   508 set :packCfg:si 30
   509 set :packCfg:ti 25
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   510 setaddr :packCfg*retaddr *label36 (h:*label36)
   511 call *label0 *invalid :packCfg*retval (m:*label36) (h:*label36)
   512 label *label36

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-10 instructions):
 
    30 set :packCfg:name "BATTERY2"
    31 set :packCfg:x 1
    32 set :packCfg:y 5
-    * set :packCfg:cu 5
    33 set :packCfg:pb 20
    34 set :packCfg:gr 0
    35 set :packCfg:si 0
 
   118 set :packCfg:name "INVERTED_SORT2"
   119 set :packCfg:type @inverted-sorter
   120 set :packCfg:x -1
-    * set :packCfg:y 2
   121 set :packCfg:cu 2
   122 set :packCfg:pb 2
   123 set :packCfg:gr 0
 
   254 set :packCfg:x -4.5
   255 set :packCfg:y 3.5
   256 set :packCfg:cu 30
-    * set :packCfg:pb 30
   257 set :packCfg:gr 30
   258 set :packCfg:si 0
   259 set :packCfg:ti 0
 
   341 set :packCfg:cu 10
   342 set :packCfg:pb 0
   343 set :packCfg:gr 15
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   344 set :packCfg:mg 0
   345 set :packCfg:th 0
   346 set :packCfg:rotation 0
 
   436 label *label30
   437 set :packCfg:name "SOLAR_PANEL"
   438 set :packCfg:type @solar-panel
-    * set :packCfg:x 0
   439 set :packCfg:cu 0
   440 set :packCfg:pb 10
   441 set :packCfg:gr 0
 
   481 set :packCfg:pb 2
   482 set :packCfg:gr 0
   483 set :packCfg:mg 0
-    * set :packCfg:th 0
   484 set :packCfg:rotation 0
   485 setaddr :packCfg*retaddr *label34 (h:*label34)
   486 call *label0 *invalid :packCfg*retval (m:*label34) (h:*label34)
   487 label *label34
   488 set :packCfg:name "INVERTED_SORT5"
   489 set :packCfg:y -1
-    * set :packCfg:gr 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   490 setaddr :packCfg*retaddr *label35 (h:*label35)
   491 call *label0 *invalid :packCfg*retval (m:*label35) (h:*label35)
   492 label *label35

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-9 instructions):
 
    29 label *label2
    30 set :packCfg:name "BATTERY2"
    31 set :packCfg:x 1
-    * set :packCfg:y 5
    32 set :packCfg:pb 20
    33 set :packCfg:gr 0
    34 set :packCfg:si 0
 
   133 set :packCfg:x 0
   134 set :packCfg:y 3
   135 set :packCfg:cu 4
-    * set :packCfg:pb 2
   136 set :packCfg:gr 0
   137 set :packCfg:si 0
   138 set :packCfg:ti 0
 
   279 set :packCfg:name "OVERFLOW_GATE3"
   280 set :packCfg:x -4
   281 set :packCfg:gr 0
-    * set :packCfg:si 0
   282 set :packCfg:ti 0
   283 set :packCfg:mg 0
   284 set :packCfg:th 0
 
   294 set :packCfg:pb 40
   295 set :packCfg:gr 25
   296 set :packCfg:si 30
-    * set :packCfg:ti 0
   297 set :packCfg:mg 0
   298 set :packCfg:th 0
   299 set :packCfg:rotation 0
 
   374 label *label26
   375 set :packCfg:name "ADDITIVE_REC"
   376 set :packCfg:type @additive-reconstructor
-    * set :packCfg:x 0
   377 set :packCfg:y -5
   378 set :packCfg:cu 200
   379 set :packCfg:pb 120
 
   463 set :packCfg:gr 0
   464 set :packCfg:ti 0
   465 set :packCfg:mg 0
-    * set :packCfg:th 0
   466 set :packCfg:rotation 0
   467 setaddr :packCfg*retaddr *label33 (h:*label33)
   468 call *label0 *invalid :packCfg*retval (m:*label33) (h:*label33)
 
   473 set :packCfg:y 0
   474 set :packCfg:cu 2
   475 set :packCfg:pb 2
-    * set :packCfg:gr 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   476 setaddr :packCfg*retaddr *label34 (h:*label34)
   477 call *label0 *invalid :packCfg*retval (m:*label34) (h:*label34)
   478 label *label34

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-8 instructions):
 
   104 set :packCfg:x 0
   105 set :packCfg:y 2
   106 set :packCfg:cu 0
-    * set :packCfg:pb 0
   107 set :packCfg:gr 0
   108 set :packCfg:si 30
   109 set :packCfg:ti 25
 
   267 set :packCfg:cu 4
   268 set :packCfg:pb 2
   269 set :packCfg:gr 0
-    * set :packCfg:si 0
   270 set :packCfg:ti 0
   271 set :packCfg:mg 0
   272 set :packCfg:th 0
 
   277 set :packCfg:name "OVERFLOW_GATE3"
   278 set :packCfg:x -4
   279 set :packCfg:gr 0
-    * set :packCfg:ti 0
   280 set :packCfg:mg 0
   281 set :packCfg:th 0
   282 set :packCfg:rotation 0
 
   356 label *label25
   357 set :packCfg:name "UNDERFLOW_GATE"
   358 set :packCfg:type @underflow-gate
-    * set :packCfg:x 0
   359 set :packCfg:y -3
   360 set :packCfg:cu 4
   361 set :packCfg:pb 2
 
   445 set :packCfg:si 0
   446 set :packCfg:ti 100
   447 set :packCfg:mg 0
-    * set :packCfg:th 0
   448 set :packCfg:rotation 0
   449 setaddr :packCfg*retaddr *label32 (h:*label32)
   450 call *label0 *invalid :packCfg*retval (m:*label32) (h:*label32)
 
   455 set :packCfg:y -0.5
   456 set :packCfg:cu 30
   457 set :packCfg:pb 25
-    * set :packCfg:gr 0
   458 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   459 setaddr :packCfg*retaddr *label33 (h:*label33)
   460 call *label0 *invalid :packCfg*retval (m:*label33) (h:*label33)
   461 label *label33

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-8 instructions):
 
    29 label *label2
    30 set :packCfg:name "BATTERY2"
    31 set :packCfg:x 1
-    * set :packCfg:pb 20
    32 set :packCfg:gr 0
    33 set :packCfg:si 0
    34 set :packCfg:ti 0
 
   217 label *label15
   218 set :packCfg:name "INVERTED_SORT3"
   219 set :packCfg:type @inverted-sorter
-    * set :packCfg:x 2
   220 set :packCfg:y 0
   221 set :packCfg:cu 2
   222 set :packCfg:pb 2
 
   250 set :packCfg:y 3.5
   251 set :packCfg:cu 30
   252 set :packCfg:gr 30
-    * set :packCfg:si 0
   253 set :packCfg:ti 0
   254 set :packCfg:mg 30
   255 set :packCfg:th 0
 
   264 set :packCfg:cu 4
   265 set :packCfg:pb 2
   266 set :packCfg:gr 0
-    * set :packCfg:ti 0
   267 set :packCfg:mg 0
   268 set :packCfg:th 0
   269 set :packCfg:rotation 0
 
   429 set :packCfg:si 8
   430 set :packCfg:ti 0
   431 set :packCfg:mg 0
-    * set :packCfg:th 0
   432 set :packCfg:rotation 0
   433 setaddr :packCfg*retaddr *label31 (h:*label31)
   434 call *label0 *invalid :packCfg*retval (m:*label31) (h:*label31)
 
   436 set :packCfg:name "CONTAINER"
   437 set :packCfg:type @container
   438 set :packCfg:pb 0
-    * set :packCfg:gr 0
   439 set :packCfg:si 0
   440 set :packCfg:ti 100
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   441 setaddr :packCfg*retaddr *label32 (h:*label32)
   442 call *label0 *invalid :packCfg*retval (m:*label32) (h:*label32)
   443 label *label32

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-7 instructions):
 
   100 label *label7
   101 set :packCfg:name "UNLOADER1"
   102 set :packCfg:type @unloader
-    * set :packCfg:x 0
   103 set :packCfg:y 2
   104 set :packCfg:cu 0
   105 set :packCfg:gr 0
 
   235 set :packCfg:cu 60
   236 set :packCfg:pb 30
   237 set :packCfg:gr 30
-    * set :packCfg:si 0
   238 set :packCfg:ti 0
   239 set :packCfg:mg 0
   240 set :packCfg:th 0
 
   248 set :packCfg:y 3.5
   249 set :packCfg:cu 30
   250 set :packCfg:gr 30
-    * set :packCfg:ti 0
   251 set :packCfg:mg 30
   252 set :packCfg:th 0
   253 set :packCfg:rotation 0
 
   395 set :packCfg:y 0
   396 set :packCfg:cu 4
   397 set :packCfg:pb 2
-    * set :packCfg:gr 0
   398 set :packCfg:si 0
   399 set :packCfg:ti 0
   400 set :packCfg:mg 0
 
   412 set :packCfg:si 30
   413 set :packCfg:ti 20
   414 set :packCfg:mg 0
-    * set :packCfg:th 0
   415 set :packCfg:rotation 0
   416 setaddr :packCfg*retaddr *label30 (h:*label30)
   417 call *label0 *invalid :packCfg*retval (m:*label30) (h:*label30)
 
   423 set :packCfg:gr 0
   424 set :packCfg:si 8
   425 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   426 setaddr :packCfg*retaddr *label31 (h:*label31)
   427 call *label0 *invalid :packCfg*retval (m:*label31) (h:*label31)
   428 label *label31

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-6 instructions):
 
   131 set :packCfg:y 3
   132 set :packCfg:cu 4
   133 set :packCfg:gr 0
-    * set :packCfg:si 0
   134 set :packCfg:ti 0
   135 set :packCfg:mg 0
   136 set :packCfg:th 0
 
   234 set :packCfg:cu 60
   235 set :packCfg:pb 30
   236 set :packCfg:gr 30
-    * set :packCfg:ti 0
   237 set :packCfg:mg 0
   238 set :packCfg:th 0
   239 set :packCfg:rotation 0
 
   378 set :packCfg:y 2
   379 set :packCfg:cu 0
   380 set :packCfg:pb 50
-    * set :packCfg:gr 0
   381 set :packCfg:si 30
   382 set :packCfg:ti 20
   383 set :packCfg:mg 0
 
   395 set :packCfg:si 0
   396 set :packCfg:ti 0
   397 set :packCfg:mg 0
-    * set :packCfg:th 0
   398 set :packCfg:rotation 0
   399 setaddr :packCfg*retaddr *label29 (h:*label29)
   400 call *label0 *invalid :packCfg*retval (m:*label29) (h:*label29)
 
   407 set :packCfg:gr 30
   408 set :packCfg:si 30
   409 set :packCfg:ti 20
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   410 setaddr :packCfg*retaddr *label30 (h:*label30)
   411 call *label0 *invalid :packCfg*retval (m:*label30) (h:*label30)
   412 label *label30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-6 instructions):
 
    90 set :packCfg:cu 18
    91 set :packCfg:pb 0
    92 set :packCfg:gr 10
-    * set :packCfg:si 0
    93 set :packCfg:ti 0
    94 set :packCfg:mg 0
    95 set :packCfg:th 0
 
   160 set :packCfg:pb 6
   161 set :packCfg:gr 0
   162 set :packCfg:si 0
-    * set :packCfg:ti 0
   163 set :packCfg:mg 0
   164 set :packCfg:th 0
   165 set :packCfg:rotation 0
 
   362 set :packCfg:y -5
   363 set :packCfg:cu 200
   364 set :packCfg:pb 120
-    * set :packCfg:gr 0
   365 set :packCfg:si 90
   366 set :packCfg:mg 0
   367 set :packCfg:th 0
 
   378 set :packCfg:si 30
   379 set :packCfg:ti 20
   380 set :packCfg:mg 0
-    * set :packCfg:th 0
   381 set :packCfg:rotation 0
   382 setaddr :packCfg*retaddr *label28 (h:*label28)
   383 call *label0 *invalid :packCfg*retval (m:*label28) (h:*label28)
 
   390 set :packCfg:pb 2
   391 set :packCfg:si 0
   392 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   393 setaddr :packCfg*retaddr *label29 (h:*label29)
   394 call *label0 *invalid :packCfg*retval (m:*label29) (h:*label29)
   395 label *label29

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-6 instructions):
 
    75 set :packCfg:cu 2
    76 set :packCfg:pb 2
    77 set :packCfg:gr 0
-    * set :packCfg:si 0
    78 set :packCfg:ti 0
    79 set :packCfg:mg 0
    80 set :packCfg:th 0
 
   144 set :packCfg:pb 50
   145 set :packCfg:gr 0
   146 set :packCfg:si 50
-    * set :packCfg:ti 0
   147 set :packCfg:mg 0
   148 set :packCfg:th 0
   149 set :packCfg:rotation 0
 
   346 set :packCfg:y -3
   347 set :packCfg:cu 4
   348 set :packCfg:pb 2
-    * set :packCfg:gr 0
   349 set :packCfg:si 0
   350 set :packCfg:ti 0
   351 set :packCfg:mg 0
 
   361 set :packCfg:pb 120
   362 set :packCfg:si 90
   363 set :packCfg:mg 0
-    * set :packCfg:th 0
   364 set :packCfg:rotation 0
   365 setaddr :packCfg*retaddr *label27 (h:*label27)
   366 call *label0 *invalid :packCfg*retval (m:*label27) (h:*label27)
 
   373 set :packCfg:pb 50
   374 set :packCfg:si 30
   375 set :packCfg:ti 20
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   376 setaddr :packCfg*retaddr *label28 (h:*label28)
   377 call *label0 *invalid :packCfg*retval (m:*label28) (h:*label28)
   378 label *label28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-6 instructions):
 
    60 set :packCfg:cu 30
    61 set :packCfg:pb 25
    62 set :packCfg:gr 0
-    * set :packCfg:si 0
    63 set :packCfg:ti 0
    64 set :packCfg:mg 0
    65 set :packCfg:th 0
 
   128 set :packCfg:y 3
   129 set :packCfg:cu 4
   130 set :packCfg:gr 0
-    * set :packCfg:ti 0
   131 set :packCfg:mg 0
   132 set :packCfg:th 0
   133 set :packCfg:rotation 0
 
   261 label *label19
   262 set :packCfg:name "OVERFLOW_GATE3"
   263 set :packCfg:x -4
-    * set :packCfg:gr 0
   264 set :packCfg:mg 0
   265 set :packCfg:th 0
   266 set :packCfg:rotation 0
 
   346 set :packCfg:si 0
   347 set :packCfg:ti 0
   348 set :packCfg:mg 0
-    * set :packCfg:th 0
   349 set :packCfg:rotation 0
   350 setaddr :packCfg*retaddr *label26 (h:*label26)
   351 call *label0 *invalid :packCfg*retval (m:*label26) (h:*label26)
 
   356 set :packCfg:cu 200
   357 set :packCfg:pb 120
   358 set :packCfg:si 90
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   359 setaddr :packCfg*retaddr *label27 (h:*label27)
   360 call *label0 *invalid :packCfg*retval (m:*label27) (h:*label27)
   361 label *label27

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-6 instructions):
 
    45 set :packCfg:cu 25
    46 set :packCfg:pb 15
    47 set :packCfg:gr 0
-    * set :packCfg:si 0
    48 set :packCfg:ti 0
    49 set :packCfg:mg 0
    50 set :packCfg:th 0
 
    87 set :packCfg:cu 18
    88 set :packCfg:pb 0
    89 set :packCfg:gr 10
-    * set :packCfg:ti 0
    90 set :packCfg:mg 0
    91 set :packCfg:th 0
    92 set :packCfg:rotation 0
 
   237 set :packCfg:x -4.5
   238 set :packCfg:y 3.5
   239 set :packCfg:cu 30
-    * set :packCfg:gr 30
   240 set :packCfg:mg 30
   241 set :packCfg:th 0
   242 set :packCfg:rotation 0
 
   330 set :packCfg:si 30
   331 set :packCfg:ti 25
   332 set :packCfg:mg 0
-    * set :packCfg:th 0
   333 set :packCfg:rotation 0
   334 setaddr :packCfg*retaddr *label25 (h:*label25)
   335 call *label0 *invalid :packCfg*retval (m:*label25) (h:*label25)
 
   341 set :packCfg:pb 2
   342 set :packCfg:si 0
   343 set :packCfg:ti 0
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   344 setaddr :packCfg*retaddr *label26 (h:*label26)
   345 call *label0 *invalid :packCfg*retval (m:*label26) (h:*label26)
   346 label *label26

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-6 instructions):
 
    30 set :packCfg:name "BATTERY2"
    31 set :packCfg:x 1
    32 set :packCfg:gr 0
-    * set :packCfg:si 0
    33 set :packCfg:ti 0
    34 set :packCfg:mg 0
    35 set :packCfg:th 0
 
    72 set :packCfg:cu 2
    73 set :packCfg:pb 2
    74 set :packCfg:gr 0
-    * set :packCfg:ti 0
    75 set :packCfg:mg 0
    76 set :packCfg:th 0
    77 set :packCfg:rotation 0
 
   208 set :packCfg:y 0
   209 set :packCfg:cu 2
   210 set :packCfg:pb 2
-    * set :packCfg:gr 0
   211 set :packCfg:si 0
   212 set :packCfg:ti 0
   213 set :packCfg:mg 0
 
   313 set :packCfg:pb 0
   314 set :packCfg:gr 15
   315 set :packCfg:mg 0
-    * set :packCfg:th 0
   316 set :packCfg:rotation 0
   317 setaddr :packCfg*retaddr *label24 (h:*label24)
   318 call *label0 *invalid :packCfg*retval (m:*label24) (h:*label24)
 
   325 set :packCfg:gr 0
   326 set :packCfg:si 30
   327 set :packCfg:ti 25
-    * set :packCfg:mg 0
-    * set :packCfg:rotation 0
   328 setaddr :packCfg*retaddr *label25 (h:*label25)
   329 call *label0 *invalid :packCfg*retval (m:*label25) (h:*label25)
   330 label *label25

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-6 instructions):
 
    19 set :packCfg:cu 5
    20 set :packCfg:pb 20
    21 set :packCfg:gr 0
-    * set :packCfg:si 0
    22 set :packCfg:ti 0
    23 set :packCfg:mg 0
    24 set :packCfg:th 0
 
    57 set :packCfg:cu 30
    58 set :packCfg:pb 25
    59 set :packCfg:gr 0
-    * set :packCfg:ti 0
    60 set :packCfg:mg 0
    61 set :packCfg:th 0
    62 set :packCfg:rotation 0
 
   192 set :packCfg:y -1
   193 set :packCfg:cu 0
   194 set :packCfg:pb 0
-    * set :packCfg:gr 0
   195 set :packCfg:si 30
   196 set :packCfg:ti 25
   197 set :packCfg:mg 0
 
   281 set :packCfg:gr 50
   282 set :packCfg:si 25
   283 set :packCfg:ti 100
-    * set :packCfg:mg 0
   284 set :packCfg:th 0
   285 set :packCfg:rotation 0
   286 setaddr :packCfg*retaddr *label22 (h:*label22)
 
   296 set :packCfg:si 0
   297 set :packCfg:ti 0
   298 set :packCfg:mg 30
-    * set :packCfg:th 0
   299 set :packCfg:rotation 0
   300 setaddr :packCfg*retaddr *label23 (h:*label23)
   301 call *label0 *invalid :packCfg*retval (m:*label23) (h:*label23)
 
   308 set :packCfg:pb 0
   309 set :packCfg:gr 15
   310 set :packCfg:mg 0
-    * set :packCfg:rotation 0
   311 setaddr :packCfg*retaddr *label24 (h:*label24)
   312 call *label0 *invalid :packCfg*retval (m:*label24) (h:*label24)
   313 label *label24

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 17 (-5 instructions):
 
    43 set :packCfg:cu 25
    44 set :packCfg:pb 15
    45 set :packCfg:gr 0
-    * set :packCfg:ti 0
    46 set :packCfg:mg 0
    47 set :packCfg:th 0
    48 set :packCfg:rotation 0
 
   176 set :packCfg:y -2
   177 set :packCfg:cu 60
   178 set :packCfg:pb 70
-    * set :packCfg:gr 0
   179 set :packCfg:si 0
   180 set :packCfg:ti 0
   181 set :packCfg:mg 0
 
   264 set :packCfg:pb 40
   265 set :packCfg:gr 25
   266 set :packCfg:si 30
-    * set :packCfg:mg 0
   267 set :packCfg:th 0
   268 set :packCfg:rotation 0
   269 setaddr :packCfg*retaddr *label21 (h:*label21)
 
   278 set :packCfg:gr 50
   279 set :packCfg:si 25
   280 set :packCfg:ti 100
-    * set :packCfg:th 0
   281 set :packCfg:rotation 0
   282 setaddr :packCfg*retaddr *label22 (h:*label22)
   283 call *label0 *invalid :packCfg*retval (m:*label22) (h:*label22)
 
   292 set :packCfg:si 0
   293 set :packCfg:ti 0
   294 set :packCfg:mg 30
-    * set :packCfg:rotation 0
   295 setaddr :packCfg*retaddr *label23 (h:*label23)
   296 call *label0 *invalid :packCfg*retval (m:*label23) (h:*label23)
   297 label *label23

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 18 (-5 instructions):
 
    29 set :packCfg:name "BATTERY2"
    30 set :packCfg:x 1
    31 set :packCfg:gr 0
-    * set :packCfg:ti 0
    32 set :packCfg:mg 0
    33 set :packCfg:th 0
    34 set :packCfg:rotation 0
 
   160 set :packCfg:y 0
   161 set :packCfg:cu 0
   162 set :packCfg:pb 0
-    * set :packCfg:gr 0
   163 set :packCfg:si 30
   164 set :packCfg:ti 25
   165 set :packCfg:mg 0
 
   248 label *label19
   249 set :packCfg:name "OVERFLOW_GATE3"
   250 set :packCfg:x -4
-    * set :packCfg:mg 0
   251 set :packCfg:th 0
   252 set :packCfg:rotation 0
   253 setaddr :packCfg*retaddr *label20 (h:*label20)
 
   261 set :packCfg:pb 40
   262 set :packCfg:gr 25
   263 set :packCfg:si 30
-    * set :packCfg:th 0
   264 set :packCfg:rotation 0
   265 setaddr :packCfg*retaddr *label21 (h:*label21)
   266 call *label0 *invalid :packCfg*retval (m:*label21) (h:*label21)
 
   274 set :packCfg:gr 50
   275 set :packCfg:si 25
   276 set :packCfg:ti 100
-    * set :packCfg:rotation 0
   277 setaddr :packCfg*retaddr *label22 (h:*label22)
   278 call *label0 *invalid :packCfg*retval (m:*label22) (h:*label22)
   279 label *label22

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 19 (-5 instructions):
 
    19 set :packCfg:cu 5
    20 set :packCfg:pb 20
    21 set :packCfg:gr 0
-    * set :packCfg:ti 0
    22 set :packCfg:mg 0
    23 set :packCfg:th 0
    24 set :packCfg:rotation 0
 
   145 set :packCfg:y -3
   146 set :packCfg:cu 2
   147 set :packCfg:pb 6
-    * set :packCfg:gr 0
   148 set :packCfg:si 0
   149 set :packCfg:mg 0
   150 set :packCfg:th 0
 
   214 set :packCfg:cu 60
   215 set :packCfg:pb 30
   216 set :packCfg:gr 30
-    * set :packCfg:mg 0
   217 set :packCfg:th 0
   218 set :packCfg:rotation 0
   219 setaddr :packCfg*retaddr *label17 (h:*label17)
 
   245 label *label19
   246 set :packCfg:name "OVERFLOW_GATE3"
   247 set :packCfg:x -4
-    * set :packCfg:th 0
   248 set :packCfg:rotation 0
   249 setaddr :packCfg*retaddr *label20 (h:*label20)
   250 call *label0 *invalid :packCfg*retval (m:*label20) (h:*label20)
 
   257 set :packCfg:pb 40
   258 set :packCfg:gr 25
   259 set :packCfg:si 30
-    * set :packCfg:rotation 0
   260 setaddr :packCfg*retaddr *label21 (h:*label21)
   261 call *label0 *invalid :packCfg*retval (m:*label21) (h:*label21)
   262 label *label21

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 20 (-4 instructions):
 
   131 set :packCfg:y 4
   132 set :packCfg:cu 90
   133 set :packCfg:pb 50
-    * set :packCfg:gr 0
   134 set :packCfg:si 50
   135 set :packCfg:mg 0
   136 set :packCfg:th 0
 
   200 set :packCfg:pb 2
   201 set :packCfg:si 0
   202 set :packCfg:ti 0
-    * set :packCfg:mg 0
   203 set :packCfg:th 0
   204 set :packCfg:rotation 0
   205 setaddr :packCfg*retaddr *label16 (h:*label16)
 
   236 set :packCfg:pb 2
   237 set :packCfg:gr 0
   238 set :packCfg:mg 0
-    * set :packCfg:th 0
   239 set :packCfg:rotation 0
   240 setaddr :packCfg*retaddr *label19 (h:*label19)
   241 call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
   242 label *label19
   243 set :packCfg:name "OVERFLOW_GATE3"
   244 set :packCfg:x -4
-    * set :packCfg:rotation 0
   245 setaddr :packCfg*retaddr *label20 (h:*label20)
   246 call *label0 *invalid :packCfg*retval (m:*label20) (h:*label20)
   247 label *label20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 21 (-4 instructions):
 
   118 set :packCfg:x 0
   119 set :packCfg:y 3
   120 set :packCfg:cu 4
-    * set :packCfg:gr 0
   121 set :packCfg:mg 0
   122 set :packCfg:th 0
   123 set :packCfg:rotation 0
 
   186 set :packCfg:pb 0
   187 set :packCfg:si 30
   188 set :packCfg:ti 25
-    * set :packCfg:mg 0
   189 set :packCfg:th 0
   190 set :packCfg:rotation 0
   191 setaddr :packCfg*retaddr *label15 (h:*label15)
 
   221 set :packCfg:y 3.5
   222 set :packCfg:cu 30
   223 set :packCfg:mg 30
-    * set :packCfg:th 0
   224 set :packCfg:rotation 0
   225 setaddr :packCfg*retaddr *label18 (h:*label18)
   226 call *label0 *invalid :packCfg*retval (m:*label18) (h:*label18)
 
   233 set :packCfg:pb 2
   234 set :packCfg:gr 0
   235 set :packCfg:mg 0
-    * set :packCfg:rotation 0
   236 setaddr :packCfg*retaddr *label19 (h:*label19)
   237 call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
   238 label *label19

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 22 (-4 instructions):
 
   104 set :packCfg:x -1
   105 set :packCfg:cu 2
   106 set :packCfg:pb 2
-    * set :packCfg:gr 0
   107 set :packCfg:si 0
   108 set :packCfg:ti 0
   109 set :packCfg:mg 0
 
   171 set :packCfg:pb 70
   172 set :packCfg:si 0
   173 set :packCfg:ti 0
-    * set :packCfg:mg 0
   174 set :packCfg:th 0
   175 set :packCfg:rotation 3
   176 setaddr :packCfg*retaddr *label14 (h:*label14)
 
   208 set :packCfg:cu 60
   209 set :packCfg:pb 30
   210 set :packCfg:gr 30
-    * set :packCfg:th 0
   211 set :packCfg:rotation 0
   212 setaddr :packCfg*retaddr *label17 (h:*label17)
   213 call *label0 *invalid :packCfg*retval (m:*label17) (h:*label17)
 
   218 set :packCfg:y 3.5
   219 set :packCfg:cu 30
   220 set :packCfg:mg 30
-    * set :packCfg:rotation 0
   221 setaddr :packCfg*retaddr *label18 (h:*label18)
   222 call *label0 *invalid :packCfg*retval (m:*label18) (h:*label18)
   223 label *label18

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 23 (-4 instructions):
 
    66 set :packCfg:y 2
    67 set :packCfg:cu 2
    68 set :packCfg:pb 2
-    * set :packCfg:gr 0
    69 set :packCfg:mg 0
    70 set :packCfg:th 0
    71 set :packCfg:rotation 0
 
   156 set :packCfg:pb 0
   157 set :packCfg:si 30
   158 set :packCfg:ti 25
-    * set :packCfg:mg 0
   159 set :packCfg:th 0
   160 set :packCfg:rotation 0
   161 setaddr :packCfg*retaddr *label13 (h:*label13)
 
   194 set :packCfg:pb 2
   195 set :packCfg:si 0
   196 set :packCfg:ti 0
-    * set :packCfg:th 0
   197 set :packCfg:rotation 0
   198 setaddr :packCfg*retaddr *label16 (h:*label16)
   199 call *label0 *invalid :packCfg*retval (m:*label16) (h:*label16)
 
   205 set :packCfg:cu 60
   206 set :packCfg:pb 30
   207 set :packCfg:gr 30
-    * set :packCfg:rotation 0
   208 setaddr :packCfg*retaddr *label17 (h:*label17)
   209 call *label0 *invalid :packCfg*retval (m:*label17) (h:*label17)
   210 label *label17

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 24 (-4 instructions):
 
    53 set :packCfg:y 3.5
    54 set :packCfg:cu 30
    55 set :packCfg:pb 25
-    * set :packCfg:gr 0
    56 set :packCfg:mg 0
    57 set :packCfg:th 0
    58 set :packCfg:rotation 0
 
   141 set :packCfg:cu 2
   142 set :packCfg:pb 6
   143 set :packCfg:si 0
-    * set :packCfg:mg 0
   144 set :packCfg:th 0
   145 set :packCfg:rotation 0
   146 setaddr :packCfg*retaddr *label12 (h:*label12)
 
   180 set :packCfg:pb 0
   181 set :packCfg:si 30
   182 set :packCfg:ti 25
-    * set :packCfg:th 0
   183 set :packCfg:rotation 0
   184 setaddr :packCfg*retaddr *label15 (h:*label15)
   185 call *label0 *invalid :packCfg*retval (m:*label15) (h:*label15)
 
   191 set :packCfg:pb 2
   192 set :packCfg:si 0
   193 set :packCfg:ti 0
-    * set :packCfg:rotation 0
   194 setaddr :packCfg*retaddr *label16 (h:*label16)
   195 call *label0 *invalid :packCfg*retval (m:*label16) (h:*label16)
   196 label *label16

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 25 (-4 instructions):
 
    40 set :packCfg:y 4
    41 set :packCfg:cu 25
    42 set :packCfg:pb 15
-    * set :packCfg:gr 0
    43 set :packCfg:mg 0
    44 set :packCfg:th 0
    45 set :packCfg:rotation 0
 
   127 set :packCfg:cu 90
   128 set :packCfg:pb 50
   129 set :packCfg:si 50
-    * set :packCfg:mg 0
   130 set :packCfg:th 0
   131 set :packCfg:rotation 0
   132 setaddr :packCfg*retaddr *label11 (h:*label11)
 
   153 set :packCfg:si 30
   154 set :packCfg:ti 25
   155 set :packCfg:th 0
-    * set :packCfg:rotation 0
   156 setaddr :packCfg*retaddr *label13 (h:*label13)
   157 call *label0 *invalid :packCfg*retval (m:*label13) (h:*label13)
   158 label *label13
 
   164 set :packCfg:pb 70
   165 set :packCfg:si 0
   166 set :packCfg:ti 0
-    * set :packCfg:th 0
   167 set :packCfg:rotation 3
   168 setaddr :packCfg*retaddr *label14 (h:*label14)
   169 call *label0 *invalid :packCfg*retval (m:*label14) (h:*label14)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 26 (-4 instructions):
 
    27 label *label2
    28 set :packCfg:name "BATTERY2"
    29 set :packCfg:x 1
-    * set :packCfg:gr 0
    30 set :packCfg:mg 0
    31 set :packCfg:th 0
    32 set :packCfg:rotation 0
 
   113 set :packCfg:x 0
   114 set :packCfg:y 3
   115 set :packCfg:cu 4
-    * set :packCfg:mg 0
   116 set :packCfg:th 0
   117 set :packCfg:rotation 0
   118 setaddr :packCfg*retaddr *label10 (h:*label10)
 
   138 set :packCfg:pb 6
   139 set :packCfg:si 0
   140 set :packCfg:th 0
-    * set :packCfg:rotation 0
   141 setaddr :packCfg*retaddr *label12 (h:*label12)
   142 call *label0 *invalid :packCfg*retval (m:*label12) (h:*label12)
   143 label *label12
 
   149 set :packCfg:pb 0
   150 set :packCfg:si 30
   151 set :packCfg:ti 25
-    * set :packCfg:th 0
   152 setaddr :packCfg*retaddr *label13 (h:*label13)
   153 call *label0 *invalid :packCfg*retval (m:*label13) (h:*label13)
   154 label *label13

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 27 (-4 instructions):
 
    18 set :packCfg:y 5
    19 set :packCfg:cu 5
    20 set :packCfg:pb 20
-    * set :packCfg:gr 0
    21 set :packCfg:mg 0
    22 set :packCfg:th 0
    23 set :packCfg:rotation 0
 
   101 set :packCfg:pb 2
   102 set :packCfg:si 0
   103 set :packCfg:ti 0
-    * set :packCfg:mg 0
   104 set :packCfg:th 0
   105 set :packCfg:rotation 0
   106 setaddr :packCfg*retaddr *label9 (h:*label9)
 
   124 set :packCfg:pb 50
   125 set :packCfg:si 50
   126 set :packCfg:th 0
-    * set :packCfg:rotation 0
   127 setaddr :packCfg*retaddr *label11 (h:*label11)
   128 call *label0 *invalid :packCfg*retval (m:*label11) (h:*label11)
   129 label *label11
 
   134 set :packCfg:cu 2
   135 set :packCfg:pb 6
   136 set :packCfg:si 0
-    * set :packCfg:th 0
   137 setaddr :packCfg*retaddr *label12 (h:*label12)
   138 call *label0 *invalid :packCfg*retval (m:*label12) (h:*label12)
   139 label *label12

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 28 (-3 instructions):
 
    88 set :packCfg:gr 0
    89 set :packCfg:si 30
    90 set :packCfg:ti 25
-    * set :packCfg:mg 0
    91 set :packCfg:th 0
    92 set :packCfg:rotation 0
    93 setaddr :packCfg*retaddr *label8 (h:*label8)
 
   111 set :packCfg:y 3
   112 set :packCfg:cu 4
   113 set :packCfg:th 0
-    * set :packCfg:rotation 0
   114 setaddr :packCfg*retaddr *label10 (h:*label10)
   115 call *label0 *invalid :packCfg*retval (m:*label10) (h:*label10)
   116 label *label10
 
   121 set :packCfg:cu 90
   122 set :packCfg:pb 50
   123 set :packCfg:si 50
-    * set :packCfg:th 0
   124 setaddr :packCfg*retaddr *label11 (h:*label11)
   125 call *label0 *invalid :packCfg*retval (m:*label11) (h:*label11)
   126 label *label11

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 29 (-3 instructions):
 
    75 set :packCfg:cu 18
    76 set :packCfg:pb 0
    77 set :packCfg:gr 10
-    * set :packCfg:mg 0
    78 set :packCfg:th 0
    79 set :packCfg:rotation 0
    80 setaddr :packCfg*retaddr *label7 (h:*label7)
 
   100 set :packCfg:si 0
   101 set :packCfg:ti 0
   102 set :packCfg:th 0
-    * set :packCfg:rotation 0
   103 setaddr :packCfg*retaddr *label9 (h:*label9)
   104 call *label0 *invalid :packCfg*retval (m:*label9) (h:*label9)
   105 label *label9
 
   108 set :packCfg:x 0
   109 set :packCfg:y 3
   110 set :packCfg:cu 4
-    * set :packCfg:th 0
   111 setaddr :packCfg*retaddr *label10 (h:*label10)
   112 call *label0 *invalid :packCfg*retval (m:*label10) (h:*label10)
   113 label *label10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 30 (-3 instructions):
 
    62 set :packCfg:y 2
    63 set :packCfg:cu 2
    64 set :packCfg:pb 2
-    * set :packCfg:mg 0
    65 set :packCfg:th 0
    66 set :packCfg:rotation 0
    67 setaddr :packCfg*retaddr *label6 (h:*label6)
 
    87 set :packCfg:si 30
    88 set :packCfg:ti 25
    89 set :packCfg:th 0
-    * set :packCfg:rotation 0
    90 setaddr :packCfg*retaddr *label8 (h:*label8)
    91 call *label0 *invalid :packCfg*retval (m:*label8) (h:*label8)
    92 label *label8
 
    97 set :packCfg:pb 2
    98 set :packCfg:si 0
    99 set :packCfg:ti 0
-    * set :packCfg:th 0
   100 setaddr :packCfg*retaddr *label9 (h:*label9)
   101 call *label0 *invalid :packCfg*retval (m:*label9) (h:*label9)
   102 label *label9

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 31 (-3 instructions):
 
    50 set :packCfg:y 3.5
    51 set :packCfg:cu 30
    52 set :packCfg:pb 25
-    * set :packCfg:mg 0
    53 set :packCfg:th 0
    54 set :packCfg:rotation 0
    55 setaddr :packCfg*retaddr *label5 (h:*label5)
 
    74 set :packCfg:pb 0
    75 set :packCfg:gr 10
    76 set :packCfg:th 0
-    * set :packCfg:rotation 0
    77 setaddr :packCfg*retaddr *label7 (h:*label7)
    78 call *label0 *invalid :packCfg*retval (m:*label7) (h:*label7)
    79 label *label7
 
    84 set :packCfg:gr 0
    85 set :packCfg:si 30
    86 set :packCfg:ti 25
-    * set :packCfg:th 0
    87 setaddr :packCfg*retaddr *label8 (h:*label8)
    88 call *label0 *invalid :packCfg*retval (m:*label8) (h:*label8)
    89 label *label8

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 32 (-3 instructions):
 
    38 set :packCfg:y 4
    39 set :packCfg:cu 25
    40 set :packCfg:pb 15
-    * set :packCfg:mg 0
    41 set :packCfg:th 0
    42 set :packCfg:rotation 0
    43 setaddr :packCfg*retaddr *label4 (h:*label4)
 
    61 set :packCfg:cu 2
    62 set :packCfg:pb 2
    63 set :packCfg:th 0
-    * set :packCfg:rotation 0
    64 setaddr :packCfg*retaddr *label6 (h:*label6)
    65 call *label0 *invalid :packCfg*retval (m:*label6) (h:*label6)
    66 label *label6
 
    71 set :packCfg:cu 18
    72 set :packCfg:pb 0
    73 set :packCfg:gr 10
-    * set :packCfg:th 0
    74 setaddr :packCfg*retaddr *label7 (h:*label7)
    75 call *label0 *invalid :packCfg*retval (m:*label7) (h:*label7)
    76 label *label7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 33 (-3 instructions):
 
    26 label *label2
    27 set :packCfg:name "BATTERY2"
    28 set :packCfg:x 1
-    * set :packCfg:mg 0
    29 set :packCfg:th 0
    30 set :packCfg:rotation 0
    31 setaddr :packCfg*retaddr *label3 (h:*label3)
 
    49 set :packCfg:cu 30
    50 set :packCfg:pb 25
    51 set :packCfg:th 0
-    * set :packCfg:rotation 0
    52 setaddr :packCfg*retaddr *label5 (h:*label5)
    53 call *label0 *invalid :packCfg*retval (m:*label5) (h:*label5)
    54 label *label5
 
    58 set :packCfg:y 2
    59 set :packCfg:cu 2
    60 set :packCfg:pb 2
-    * set :packCfg:th 0
    61 setaddr :packCfg*retaddr *label6 (h:*label6)
    62 call *label0 *invalid :packCfg*retval (m:*label6) (h:*label6)
    63 label *label6

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 34 (-3 instructions):
 
    18 set :packCfg:y 5
    19 set :packCfg:cu 5
    20 set :packCfg:pb 20
-    * set :packCfg:mg 0
    21 set :packCfg:th 0
    22 set :packCfg:rotation 0
    23 setaddr :packCfg*retaddr *label2 (h:*label2)
 
    37 set :packCfg:cu 25
    38 set :packCfg:pb 15
    39 set :packCfg:th 0
-    * set :packCfg:rotation 0
    40 setaddr :packCfg*retaddr *label4 (h:*label4)
    41 call *label0 *invalid :packCfg*retval (m:*label4) (h:*label4)
    42 label *label4
 
    46 set :packCfg:y 3.5
    47 set :packCfg:cu 30
    48 set :packCfg:pb 25
-    * set :packCfg:th 0
    49 setaddr :packCfg*retaddr *label5 (h:*label5)
    50 call *label0 *invalid :packCfg*retval (m:*label5) (h:*label5)
    51 label *label5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 35 (-2 instructions):
 
    26 set :packCfg:name "BATTERY2"
    27 set :packCfg:x 1
    28 set :packCfg:th 0
-    * set :packCfg:rotation 0
    29 setaddr :packCfg*retaddr *label3 (h:*label3)
    30 call *label0 *invalid :packCfg*retval (m:*label3) (h:*label3)
    31 label *label3
 
    35 set :packCfg:y 4
    36 set :packCfg:cu 25
    37 set :packCfg:pb 15
-    * set :packCfg:th 0
    38 setaddr :packCfg*retaddr *label4 (h:*label4)
    39 call *label0 *invalid :packCfg*retval (m:*label4) (h:*label4)
    40 label *label4

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 36 (-2 instructions):
 
    19 set :packCfg:cu 5
    20 set :packCfg:pb 20
    21 set :packCfg:th 0
-    * set :packCfg:rotation 0
    22 setaddr :packCfg*retaddr *label2 (h:*label2)
    23 call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
    24 label *label2
    25 set :packCfg:name "BATTERY2"
    26 set :packCfg:x 1
-    * set :packCfg:th 0
    27 setaddr :packCfg*retaddr *label3 (h:*label3)
    28 call *label0 *invalid :packCfg*retval (m:*label3) (h:*label3)
    29 label *label3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 37 (-1 instructions):
 
    18 set :packCfg:y 5
    19 set :packCfg:cu 5
    20 set :packCfg:pb 20
-    * set :packCfg:th 0
    21 setaddr :packCfg*retaddr *label2 (h:*label2)
    22 call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
    23 label *label2

Modifications by Inline function call at line 7:1 (+33 instructions):
 
     9 set :packCfg:mg 0
    10 set :packCfg:th 0
    11 set :packCfg:rotation 0
-    * setaddr :packCfg*retaddr *label1 (h:*label1)
-    * call *label0 *invalid :packCfg*retval (m:*label1) (h:*label1)
-    * label *label1
+   12 label *label41
+   13 print "const "
+   14 print :packCfg:name
+   15 print " "
+   16 print "= "
+   17 printchar 34
+   18 sensor *tmp0 :packCfg:type @id
+   19 op add *tmp1 35 *tmp0
+   20 printchar *tmp1
+   21 op add *tmp2 7 :packCfg:x
+   22 op floor *tmp3 *tmp2
+   23 op add *tmp4 35 *tmp3
+   24 printchar *tmp4
+   25 op add *tmp5 7 :packCfg:y
+   26 op floor *tmp6 *tmp5
+   27 op add *tmp7 35 *tmp6
+   28 printchar *tmp7
+   29 op add *tmp8 35 :packCfg:cu
+   30 printchar *tmp8
+   31 op add *tmp9 35 :packCfg:pb
+   32 printchar *tmp9
+   33 op add *tmp10 35 :packCfg:gr
+   34 printchar *tmp10
+   35 op add *tmp11 35 :packCfg:si
+   36 printchar *tmp11
+   37 op add *tmp12 35 :packCfg:ti
+   38 printchar *tmp12
+   39 op add *tmp13 35 :packCfg:mg
+   40 printchar *tmp13
+   41 op add *tmp14 35 :packCfg:th
+   42 printchar *tmp14
+   43 op add *tmp15 35 :packCfg:rotation
+   44 printchar *tmp15
+   45 printchar 34
+   46 print ";"
+   47 print "\n"
+   48 label *label42
    49 set :packCfg:name "BATTERY1"
    50 set :packCfg:type @battery
    51 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    11 set :packCfg:rotation 0
    12 label *label41
    13 print "const "
-    * print :packCfg:name
+   14 print "PRESS"
    15 print " "
    16 print "= "
    17 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   18 sensor *tmp0 @graphite-press @id
    19 op add *tmp1 35 *tmp0
    20 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+   21 op add *tmp2 7 -2.5
+   22 op floor *tmp3 4.5
+   23 op add *tmp4 35 4
+   24 printchar 39
+   25 op add *tmp5 7 1.5
+   26 op floor *tmp6 8.5
+   27 op add *tmp7 35 8
+   28 printchar 43
+   29 op add *tmp8 35 75
+   30 printchar 110
+   31 op add *tmp9 35 30
+   32 printchar 65
+   33 op add *tmp10 35 0
+   34 printchar 35
+   35 op add *tmp11 35 0
+   36 printchar 35
+   37 op add *tmp12 35 0
+   38 printchar 35
+   39 op add *tmp13 35 0
+   40 printchar 35
+   41 op add *tmp14 35 0
+   42 printchar 35
+   43 op add *tmp15 35 0
+   44 printchar 35
    45 printchar 34
    46 print ";"
    47 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
-    * set :packCfg:name "PRESS"
-    * set :packCfg:type @graphite-press
-    * set :packCfg:x -2.5
-    * set :packCfg:y 1.5
-    * set :packCfg:cu 75
-    * set :packCfg:pb 30
     0 set :packCfg:gr 0
     1 set :packCfg:si 0
     2 set :packCfg:ti 0

Modifications by Inline function call at line 8:1 (+33 instructions):
 
    46 set :packCfg:y 5
    47 set :packCfg:cu 5
    48 set :packCfg:pb 20
-    * setaddr :packCfg*retaddr *label2 (h:*label2)
-    * call *label0 *invalid :packCfg*retval (m:*label2) (h:*label2)
-    * label *label2
+   49 label *label43
+   50 print "const "
+   51 print :packCfg:name
+   52 print " "
+   53 print "= "
+   54 printchar 34
+   55 sensor *tmp0 :packCfg:type @id
+   56 op add *tmp1 35 *tmp0
+   57 printchar *tmp1
+   58 op add *tmp2 7 :packCfg:x
+   59 op floor *tmp3 *tmp2
+   60 op add *tmp4 35 *tmp3
+   61 printchar *tmp4
+   62 op add *tmp5 7 :packCfg:y
+   63 op floor *tmp6 *tmp5
+   64 op add *tmp7 35 *tmp6
+   65 printchar *tmp7
+   66 op add *tmp8 35 :packCfg:cu
+   67 printchar *tmp8
+   68 op add *tmp9 35 :packCfg:pb
+   69 printchar *tmp9
+   70 op add *tmp10 35 :packCfg:gr
+   71 printchar *tmp10
+   72 op add *tmp11 35 :packCfg:si
+   73 printchar *tmp11
+   74 op add *tmp12 35 :packCfg:ti
+   75 printchar *tmp12
+   76 op add *tmp13 35 :packCfg:mg
+   77 printchar *tmp13
+   78 op add *tmp14 35 :packCfg:th
+   79 printchar *tmp14
+   80 op add *tmp15 35 :packCfg:rotation
+   81 printchar *tmp15
+   82 printchar 34
+   83 print ";"
+   84 print "\n"
+   85 label *label44
    86 set :packCfg:name "BATTERY2"
    87 set :packCfg:x 1
    88 setaddr :packCfg*retaddr *label3 (h:*label3)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
    12 sensor *tmp0 @graphite-press @id
    13 op add *tmp1 35 *tmp0
    14 printchar *tmp1
-    * op add *tmp2 7 -2.5
-    * op floor *tmp3 4.5
-    * op add *tmp4 35 4
    15 printchar 39
-    * op add *tmp5 7 1.5
-    * op floor *tmp6 8.5
-    * op add *tmp7 35 8
    16 printchar 43
-    * op add *tmp8 35 75
    17 printchar 110
-    * op add *tmp9 35 30
    18 printchar 65
-    * op add *tmp10 35 0
    19 printchar 35
-    * op add *tmp11 35 0
    20 printchar 35
-    * op add *tmp12 35 0
    21 printchar 35
-    * op add *tmp13 35 0
    22 printchar 35
-    * op add *tmp14 35 0
    23 printchar 35
-    * op add *tmp15 35 0
    24 printchar 35
    25 printchar 34
    26 print ";"
 
    34 set :packCfg:pb 20
    35 label *label43
    36 print "const "
-    * print :packCfg:name
+   37 print "BATTERY1"
    38 print " "
    39 print "= "
    40 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   41 sensor *tmp0 @battery @id
    42 op add *tmp1 35 *tmp0
    43 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+   44 op add *tmp2 7 0
+   45 op floor *tmp3 7
+   46 op add *tmp4 35 7
+   47 printchar 42
+   48 op add *tmp5 7 5
+   49 op floor *tmp6 12
+   50 op add *tmp7 35 12
+   51 printchar 47
+   52 op add *tmp8 35 5
+   53 printchar 40
+   54 op add *tmp9 35 20
+   55 printchar 55
+   56 op add *tmp10 35 0
+   57 printchar 35
+   58 op add *tmp11 35 0
+   59 printchar 35
+   60 op add *tmp12 35 0
+   61 printchar 35
+   62 op add *tmp13 35 0
+   63 printchar 35
+   64 op add *tmp14 35 0
+   65 printchar 35
+   66 op add *tmp15 35 0
+   67 printchar 35
    68 printchar 34
    69 print ";"
    70 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    26 print ";"
    27 print "\n"
    28 label *label42
-    * set :packCfg:name "BATTERY1"
    29 set :packCfg:type @battery
-    * set :packCfg:x 0
    30 set :packCfg:y 5
    31 set :packCfg:cu 5
    32 set :packCfg:pb 20

Modifications by Inline function call at line 9:1 (+33 instructions):
 
    69 label *label44
    70 set :packCfg:name "BATTERY2"
    71 set :packCfg:x 1
-    * setaddr :packCfg*retaddr *label3 (h:*label3)
-    * call *label0 *invalid :packCfg*retval (m:*label3) (h:*label3)
-    * label *label3
+   72 label *label45
+   73 print "const "
+   74 print :packCfg:name
+   75 print " "
+   76 print "= "
+   77 printchar 34
+   78 sensor *tmp0 :packCfg:type @id
+   79 op add *tmp1 35 *tmp0
+   80 printchar *tmp1
+   81 op add *tmp2 7 :packCfg:x
+   82 op floor *tmp3 *tmp2
+   83 op add *tmp4 35 *tmp3
+   84 printchar *tmp4
+   85 op add *tmp5 7 :packCfg:y
+   86 op floor *tmp6 *tmp5
+   87 op add *tmp7 35 *tmp6
+   88 printchar *tmp7
+   89 op add *tmp8 35 :packCfg:cu
+   90 printchar *tmp8
+   91 op add *tmp9 35 :packCfg:pb
+   92 printchar *tmp9
+   93 op add *tmp10 35 :packCfg:gr
+   94 printchar *tmp10
+   95 op add *tmp11 35 :packCfg:si
+   96 printchar *tmp11
+   97 op add *tmp12 35 :packCfg:ti
+   98 printchar *tmp12
+   99 op add *tmp13 35 :packCfg:mg
+  100 printchar *tmp13
+  101 op add *tmp14 35 :packCfg:th
+  102 printchar *tmp14
+  103 op add *tmp15 35 :packCfg:rotation
+  104 printchar *tmp15
+  105 printchar 34
+  106 print ";"
+  107 print "\n"
+  108 label *label46
   109 set :packCfg:name "GENERATOR"
   110 set :packCfg:type @combustion-generator
   111 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
    39 sensor *tmp0 @battery @id
    40 op add *tmp1 35 *tmp0
    41 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
    42 printchar 42
-    * op add *tmp5 7 5
-    * op floor *tmp6 12
-    * op add *tmp7 35 12
    43 printchar 47
-    * op add *tmp8 35 5
    44 printchar 40
-    * op add *tmp9 35 20
    45 printchar 55
-    * op add *tmp10 35 0
    46 printchar 35
-    * op add *tmp11 35 0
    47 printchar 35
-    * op add *tmp12 35 0
    48 printchar 35
-    * op add *tmp13 35 0
    49 printchar 35
-    * op add *tmp14 35 0
    50 printchar 35
-    * op add *tmp15 35 0
    51 printchar 35
    52 printchar 34
    53 print ";"
 
    57 set :packCfg:x 1
    58 label *label45
    59 print "const "
-    * print :packCfg:name
+   60 print "BATTERY2"
    61 print " "
    62 print "= "
    63 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   64 sensor *tmp0 @battery @id
    65 op add *tmp1 35 *tmp0
    66 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+   67 op add *tmp2 7 1
+   68 op floor *tmp3 8
+   69 op add *tmp4 35 8
+   70 printchar 43
+   71 op add *tmp5 7 5
+   72 op floor *tmp6 12
+   73 op add *tmp7 35 12
+   74 printchar 47
+   75 op add *tmp8 35 5
+   76 printchar 40
+   77 op add *tmp9 35 20
+   78 printchar 55
+   79 op add *tmp10 35 0
+   80 printchar 35
+   81 op add *tmp11 35 0
+   82 printchar 35
+   83 op add *tmp12 35 0
+   84 printchar 35
+   85 op add *tmp13 35 0
+   86 printchar 35
+   87 op add *tmp14 35 0
+   88 printchar 35
+   89 op add *tmp15 35 0
+   90 printchar 35
    91 printchar 34
    92 print ";"
    93 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    26 print ";"
    27 print "\n"
    28 label *label42
-    * set :packCfg:type @battery
-    * set :packCfg:y 5
-    * set :packCfg:cu 5
-    * set :packCfg:pb 20
    29 label *label43
    30 print "const "
    31 print "BATTERY1"
 
    49 print ";"
    50 print "\n"
    51 label *label44
-    * set :packCfg:name "BATTERY2"
-    * set :packCfg:x 1
    52 label *label45
    53 print "const "
    54 print "BATTERY2"

Modifications by Inline function call at line 10:1 (+33 instructions):
 
    92 set :packCfg:y 4
    93 set :packCfg:cu 25
    94 set :packCfg:pb 15
-    * setaddr :packCfg*retaddr *label4 (h:*label4)
-    * call *label0 *invalid :packCfg*retval (m:*label4) (h:*label4)
-    * label *label4
+   95 label *label47
+   96 print "const "
+   97 print :packCfg:name
+   98 print " "
+   99 print "= "
+  100 printchar 34
+  101 sensor *tmp0 :packCfg:type @id
+  102 op add *tmp1 35 *tmp0
+  103 printchar *tmp1
+  104 op add *tmp2 7 :packCfg:x
+  105 op floor *tmp3 *tmp2
+  106 op add *tmp4 35 *tmp3
+  107 printchar *tmp4
+  108 op add *tmp5 7 :packCfg:y
+  109 op floor *tmp6 *tmp5
+  110 op add *tmp7 35 *tmp6
+  111 printchar *tmp7
+  112 op add *tmp8 35 :packCfg:cu
+  113 printchar *tmp8
+  114 op add *tmp9 35 :packCfg:pb
+  115 printchar *tmp9
+  116 op add *tmp10 35 :packCfg:gr
+  117 printchar *tmp10
+  118 op add *tmp11 35 :packCfg:si
+  119 printchar *tmp11
+  120 op add *tmp12 35 :packCfg:ti
+  121 printchar *tmp12
+  122 op add *tmp13 35 :packCfg:mg
+  123 printchar *tmp13
+  124 op add *tmp14 35 :packCfg:th
+  125 printchar *tmp14
+  126 op add *tmp15 35 :packCfg:rotation
+  127 printchar *tmp15
+  128 printchar 34
+  129 print ";"
+  130 print "\n"
+  131 label *label48
   132 set :packCfg:name "SMELTER"
   133 set :packCfg:type @silicon-smelter
   134 set :packCfg:x 1.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
    58 sensor *tmp0 @battery @id
    59 op add *tmp1 35 *tmp0
    60 printchar *tmp1
-    * op add *tmp2 7 1
-    * op floor *tmp3 8
-    * op add *tmp4 35 8
    61 printchar 43
-    * op add *tmp5 7 5
-    * op floor *tmp6 12
-    * op add *tmp7 35 12
    62 printchar 47
-    * op add *tmp8 35 5
    63 printchar 40
-    * op add *tmp9 35 20
    64 printchar 55
-    * op add *tmp10 35 0
    65 printchar 35
-    * op add *tmp11 35 0
    66 printchar 35
-    * op add *tmp12 35 0
    67 printchar 35
-    * op add *tmp13 35 0
    68 printchar 35
-    * op add *tmp14 35 0
    69 printchar 35
-    * op add *tmp15 35 0
    70 printchar 35
    71 printchar 34
    72 print ";"
 
    80 set :packCfg:pb 15
    81 label *label47
    82 print "const "
-    * print :packCfg:name
+   83 print "GENERATOR"
    84 print " "
    85 print "= "
    86 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+   87 sensor *tmp0 @combustion-generator @id
    88 op add *tmp1 35 *tmp0
    89 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+   90 op add *tmp2 7 0
+   91 op floor *tmp3 7
+   92 op add *tmp4 35 7
+   93 printchar 42
+   94 op add *tmp5 7 4
+   95 op floor *tmp6 11
+   96 op add *tmp7 35 11
+   97 printchar 46
+   98 op add *tmp8 35 25
+   99 printchar 60
+  100 op add *tmp9 35 15
+  101 printchar 50
+  102 op add *tmp10 35 0
+  103 printchar 35
+  104 op add *tmp11 35 0
+  105 printchar 35
+  106 op add *tmp12 35 0
+  107 printchar 35
+  108 op add *tmp13 35 0
+  109 printchar 35
+  110 op add *tmp14 35 0
+  111 printchar 35
+  112 op add *tmp15 35 0
+  113 printchar 35
   114 printchar 34
   115 print ";"
   116 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    72 print ";"
    73 print "\n"
    74 label *label46
-    * set :packCfg:name "GENERATOR"
-    * set :packCfg:type @combustion-generator
-    * set :packCfg:x 0
-    * set :packCfg:y 4
-    * set :packCfg:cu 25
-    * set :packCfg:pb 15
    75 label *label47
    76 print "const "
    77 print "GENERATOR"

Modifications by Inline function call at line 11:1 (+33 instructions):
 
   115 set :packCfg:y 3.5
   116 set :packCfg:cu 30
   117 set :packCfg:pb 25
-    * setaddr :packCfg*retaddr *label5 (h:*label5)
-    * call *label0 *invalid :packCfg*retval (m:*label5) (h:*label5)
-    * label *label5
+  118 label *label49
+  119 print "const "
+  120 print :packCfg:name
+  121 print " "
+  122 print "= "
+  123 printchar 34
+  124 sensor *tmp0 :packCfg:type @id
+  125 op add *tmp1 35 *tmp0
+  126 printchar *tmp1
+  127 op add *tmp2 7 :packCfg:x
+  128 op floor *tmp3 *tmp2
+  129 op add *tmp4 35 *tmp3
+  130 printchar *tmp4
+  131 op add *tmp5 7 :packCfg:y
+  132 op floor *tmp6 *tmp5
+  133 op add *tmp7 35 *tmp6
+  134 printchar *tmp7
+  135 op add *tmp8 35 :packCfg:cu
+  136 printchar *tmp8
+  137 op add *tmp9 35 :packCfg:pb
+  138 printchar *tmp9
+  139 op add *tmp10 35 :packCfg:gr
+  140 printchar *tmp10
+  141 op add *tmp11 35 :packCfg:si
+  142 printchar *tmp11
+  143 op add *tmp12 35 :packCfg:ti
+  144 printchar *tmp12
+  145 op add *tmp13 35 :packCfg:mg
+  146 printchar *tmp13
+  147 op add *tmp14 35 :packCfg:th
+  148 printchar *tmp14
+  149 op add *tmp15 35 :packCfg:rotation
+  150 printchar *tmp15
+  151 printchar 34
+  152 print ";"
+  153 print "\n"
+  154 label *label50
   155 set :packCfg:name "INVERTED_SORT1"
   156 set :packCfg:type @inverted-sorter
   157 set :packCfg:x 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
    81 sensor *tmp0 @combustion-generator @id
    82 op add *tmp1 35 *tmp0
    83 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
    84 printchar 42
-    * op add *tmp5 7 4
-    * op floor *tmp6 11
-    * op add *tmp7 35 11
    85 printchar 46
-    * op add *tmp8 35 25
    86 printchar 60
-    * op add *tmp9 35 15
    87 printchar 50
-    * op add *tmp10 35 0
    88 printchar 35
-    * op add *tmp11 35 0
    89 printchar 35
-    * op add *tmp12 35 0
    90 printchar 35
-    * op add *tmp13 35 0
    91 printchar 35
-    * op add *tmp14 35 0
    92 printchar 35
-    * op add *tmp15 35 0
    93 printchar 35
    94 printchar 34
    95 print ";"
 
   103 set :packCfg:pb 25
   104 label *label49
   105 print "const "
-    * print :packCfg:name
+  106 print "SMELTER"
   107 print " "
   108 print "= "
   109 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  110 sensor *tmp0 @silicon-smelter @id
   111 op add *tmp1 35 *tmp0
   112 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  113 op add *tmp2 7 1.5
+  114 op floor *tmp3 8.5
+  115 op add *tmp4 35 8
+  116 printchar 43
+  117 op add *tmp5 7 3.5
+  118 op floor *tmp6 10.5
+  119 op add *tmp7 35 10
+  120 printchar 45
+  121 op add *tmp8 35 30
+  122 printchar 65
+  123 op add *tmp9 35 25
+  124 printchar 60
+  125 op add *tmp10 35 0
+  126 printchar 35
+  127 op add *tmp11 35 0
+  128 printchar 35
+  129 op add *tmp12 35 0
+  130 printchar 35
+  131 op add *tmp13 35 0
+  132 printchar 35
+  133 op add *tmp14 35 0
+  134 printchar 35
+  135 op add *tmp15 35 0
+  136 printchar 35
   137 printchar 34
   138 print ";"
   139 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    95 print ";"
    96 print "\n"
    97 label *label48
-    * set :packCfg:name "SMELTER"
-    * set :packCfg:type @silicon-smelter
-    * set :packCfg:x 1.5
-    * set :packCfg:y 3.5
-    * set :packCfg:cu 30
-    * set :packCfg:pb 25
    98 label *label49
    99 print "const "
   100 print "SMELTER"

Modifications by Inline function call at line 12:1 (+33 instructions):
 
   138 set :packCfg:y 2
   139 set :packCfg:cu 2
   140 set :packCfg:pb 2
-    * setaddr :packCfg*retaddr *label6 (h:*label6)
-    * call *label0 *invalid :packCfg*retval (m:*label6) (h:*label6)
-    * label *label6
+  141 label *label51
+  142 print "const "
+  143 print :packCfg:name
+  144 print " "
+  145 print "= "
+  146 printchar 34
+  147 sensor *tmp0 :packCfg:type @id
+  148 op add *tmp1 35 *tmp0
+  149 printchar *tmp1
+  150 op add *tmp2 7 :packCfg:x
+  151 op floor *tmp3 *tmp2
+  152 op add *tmp4 35 *tmp3
+  153 printchar *tmp4
+  154 op add *tmp5 7 :packCfg:y
+  155 op floor *tmp6 *tmp5
+  156 op add *tmp7 35 *tmp6
+  157 printchar *tmp7
+  158 op add *tmp8 35 :packCfg:cu
+  159 printchar *tmp8
+  160 op add *tmp9 35 :packCfg:pb
+  161 printchar *tmp9
+  162 op add *tmp10 35 :packCfg:gr
+  163 printchar *tmp10
+  164 op add *tmp11 35 :packCfg:si
+  165 printchar *tmp11
+  166 op add *tmp12 35 :packCfg:ti
+  167 printchar *tmp12
+  168 op add *tmp13 35 :packCfg:mg
+  169 printchar *tmp13
+  170 op add *tmp14 35 :packCfg:th
+  171 printchar *tmp14
+  172 op add *tmp15 35 :packCfg:rotation
+  173 printchar *tmp15
+  174 printchar 34
+  175 print ";"
+  176 print "\n"
+  177 label *label52
   178 set :packCfg:name "PNEUMATIC_DRILL"
   179 set :packCfg:type @pneumatic-drill
   180 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   104 sensor *tmp0 @silicon-smelter @id
   105 op add *tmp1 35 *tmp0
   106 printchar *tmp1
-    * op add *tmp2 7 1.5
-    * op floor *tmp3 8.5
-    * op add *tmp4 35 8
   107 printchar 43
-    * op add *tmp5 7 3.5
-    * op floor *tmp6 10.5
-    * op add *tmp7 35 10
   108 printchar 45
-    * op add *tmp8 35 30
   109 printchar 65
-    * op add *tmp9 35 25
   110 printchar 60
-    * op add *tmp10 35 0
   111 printchar 35
-    * op add *tmp11 35 0
   112 printchar 35
-    * op add *tmp12 35 0
   113 printchar 35
-    * op add *tmp13 35 0
   114 printchar 35
-    * op add *tmp14 35 0
   115 printchar 35
-    * op add *tmp15 35 0
   116 printchar 35
   117 printchar 34
   118 print ";"
 
   126 set :packCfg:pb 2
   127 label *label51
   128 print "const "
-    * print :packCfg:name
+  129 print "INVERTED_SORT1"
   130 print " "
   131 print "= "
   132 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  133 sensor *tmp0 @inverted-sorter @id
   134 op add *tmp1 35 *tmp0
   135 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  136 op add *tmp2 7 1
+  137 op floor *tmp3 8
+  138 op add *tmp4 35 8
+  139 printchar 43
+  140 op add *tmp5 7 2
+  141 op floor *tmp6 9
+  142 op add *tmp7 35 9
+  143 printchar 44
+  144 op add *tmp8 35 2
+  145 printchar 37
+  146 op add *tmp9 35 2
+  147 printchar 37
+  148 op add *tmp10 35 0
+  149 printchar 35
+  150 op add *tmp11 35 0
+  151 printchar 35
+  152 op add *tmp12 35 0
+  153 printchar 35
+  154 op add *tmp13 35 0
+  155 printchar 35
+  156 op add *tmp14 35 0
+  157 printchar 35
+  158 op add *tmp15 35 0
+  159 printchar 35
   160 printchar 34
   161 print ";"
   162 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
-    * set :packCfg:gr 0
     0 set :packCfg:si 0
     1 set :packCfg:ti 0
     2 set :packCfg:mg 0
 
   117 print ";"
   118 print "\n"
   119 label *label50
-    * set :packCfg:name "INVERTED_SORT1"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:x 1
-    * set :packCfg:y 2
-    * set :packCfg:cu 2
-    * set :packCfg:pb 2
   120 label *label51
   121 print "const "
   122 print "INVERTED_SORT1"

Modifications by Inline function call at line 13:1 (+33 instructions):
 
   161 set :packCfg:cu 18
   162 set :packCfg:pb 0
   163 set :packCfg:gr 10
-    * setaddr :packCfg*retaddr *label7 (h:*label7)
-    * call *label0 *invalid :packCfg*retval (m:*label7) (h:*label7)
-    * label *label7
+  164 label *label53
+  165 print "const "
+  166 print :packCfg:name
+  167 print " "
+  168 print "= "
+  169 printchar 34
+  170 sensor *tmp0 :packCfg:type @id
+  171 op add *tmp1 35 *tmp0
+  172 printchar *tmp1
+  173 op add *tmp2 7 :packCfg:x
+  174 op floor *tmp3 *tmp2
+  175 op add *tmp4 35 *tmp3
+  176 printchar *tmp4
+  177 op add *tmp5 7 :packCfg:y
+  178 op floor *tmp6 *tmp5
+  179 op add *tmp7 35 *tmp6
+  180 printchar *tmp7
+  181 op add *tmp8 35 :packCfg:cu
+  182 printchar *tmp8
+  183 op add *tmp9 35 :packCfg:pb
+  184 printchar *tmp9
+  185 op add *tmp10 35 :packCfg:gr
+  186 printchar *tmp10
+  187 op add *tmp11 35 :packCfg:si
+  188 printchar *tmp11
+  189 op add *tmp12 35 :packCfg:ti
+  190 printchar *tmp12
+  191 op add *tmp13 35 :packCfg:mg
+  192 printchar *tmp13
+  193 op add *tmp14 35 :packCfg:th
+  194 printchar *tmp14
+  195 op add *tmp15 35 :packCfg:rotation
+  196 printchar *tmp15
+  197 printchar 34
+  198 print ";"
+  199 print "\n"
+  200 label *label54
   201 set :packCfg:name "UNLOADER1"
   202 set :packCfg:type @unloader
   203 set :packCfg:y 2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   126 sensor *tmp0 @inverted-sorter @id
   127 op add *tmp1 35 *tmp0
   128 printchar *tmp1
-    * op add *tmp2 7 1
-    * op floor *tmp3 8
-    * op add *tmp4 35 8
   129 printchar 43
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   130 printchar 44
-    * op add *tmp8 35 2
   131 printchar 37
-    * op add *tmp9 35 2
   132 printchar 37
-    * op add *tmp10 35 0
   133 printchar 35
-    * op add *tmp11 35 0
   134 printchar 35
-    * op add *tmp12 35 0
   135 printchar 35
-    * op add *tmp13 35 0
   136 printchar 35
-    * op add *tmp14 35 0
   137 printchar 35
-    * op add *tmp15 35 0
   138 printchar 35
   139 printchar 34
   140 print ";"
 
   149 set :packCfg:gr 10
   150 label *label53
   151 print "const "
-    * print :packCfg:name
+  152 print "PNEUMATIC_DRILL"
   153 print " "
   154 print "= "
   155 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  156 sensor *tmp0 @pneumatic-drill @id
   157 op add *tmp1 35 *tmp0
   158 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  159 op add *tmp2 7 0
+  160 op floor *tmp3 7
+  161 op add *tmp4 35 7
+  162 printchar 42
+  163 op add *tmp5 7 0
+  164 op floor *tmp6 7
+  165 op add *tmp7 35 7
+  166 printchar 42
+  167 op add *tmp8 35 18
+  168 printchar 53
+  169 op add *tmp9 35 0
+  170 printchar 35
+  171 op add *tmp10 35 10
+  172 printchar 45
+  173 op add *tmp11 35 0
+  174 printchar 35
+  175 op add *tmp12 35 0
+  176 printchar 35
+  177 op add *tmp13 35 0
+  178 printchar 35
+  179 op add *tmp14 35 0
+  180 printchar 35
+  181 op add *tmp15 35 0
+  182 printchar 35
   183 printchar 34
   184 print ";"
   185 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
     0 set :packCfg:mg 0
     1 set :packCfg:th 0
     2 set :packCfg:rotation 0
 
   138 print ";"
   139 print "\n"
   140 label *label52
-    * set :packCfg:name "PNEUMATIC_DRILL"
-    * set :packCfg:type @pneumatic-drill
   141 set :packCfg:x 0
-    * set :packCfg:y 0
-    * set :packCfg:cu 18
   142 set :packCfg:pb 0
-    * set :packCfg:gr 10
   143 label *label53
   144 print "const "
   145 print "PNEUMATIC_DRILL"

Modifications by Inline function call at line 14:1 (+33 instructions):
 
   184 set :packCfg:gr 0
   185 set :packCfg:si 30
   186 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label8 (h:*label8)
-    * call *label0 *invalid :packCfg*retval (m:*label8) (h:*label8)
-    * label *label8
+  187 label *label55
+  188 print "const "
+  189 print :packCfg:name
+  190 print " "
+  191 print "= "
+  192 printchar 34
+  193 sensor *tmp0 :packCfg:type @id
+  194 op add *tmp1 35 *tmp0
+  195 printchar *tmp1
+  196 op add *tmp2 7 :packCfg:x
+  197 op floor *tmp3 *tmp2
+  198 op add *tmp4 35 *tmp3
+  199 printchar *tmp4
+  200 op add *tmp5 7 :packCfg:y
+  201 op floor *tmp6 *tmp5
+  202 op add *tmp7 35 *tmp6
+  203 printchar *tmp7
+  204 op add *tmp8 35 :packCfg:cu
+  205 printchar *tmp8
+  206 op add *tmp9 35 :packCfg:pb
+  207 printchar *tmp9
+  208 op add *tmp10 35 :packCfg:gr
+  209 printchar *tmp10
+  210 op add *tmp11 35 :packCfg:si
+  211 printchar *tmp11
+  212 op add *tmp12 35 :packCfg:ti
+  213 printchar *tmp12
+  214 op add *tmp13 35 :packCfg:mg
+  215 printchar *tmp13
+  216 op add *tmp14 35 :packCfg:th
+  217 printchar *tmp14
+  218 op add *tmp15 35 :packCfg:rotation
+  219 printchar *tmp15
+  220 printchar 34
+  221 print ";"
+  222 print "\n"
+  223 label *label56
   224 set :packCfg:name "INVERTED_SORT2"
   225 set :packCfg:type @inverted-sorter
   226 set :packCfg:x -1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   149 sensor *tmp0 @pneumatic-drill @id
   150 op add *tmp1 35 *tmp0
   151 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   152 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   153 printchar 42
-    * op add *tmp8 35 18
   154 printchar 53
-    * op add *tmp9 35 0
   155 printchar 35
-    * op add *tmp10 35 10
   156 printchar 45
-    * op add *tmp11 35 0
   157 printchar 35
-    * op add *tmp12 35 0
   158 printchar 35
-    * op add *tmp13 35 0
   159 printchar 35
-    * op add *tmp14 35 0
   160 printchar 35
-    * op add *tmp15 35 0
   161 printchar 35
   162 printchar 34
   163 print ";"
 
   172 set :packCfg:ti 25
   173 label *label55
   174 print "const "
-    * print :packCfg:name
+  175 print "UNLOADER1"
   176 print " "
   177 print "= "
   178 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  179 sensor *tmp0 @unloader @id
   180 op add *tmp1 35 *tmp0
   181 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  182 op add *tmp2 7 0
+  183 op floor *tmp3 7
+  184 op add *tmp4 35 7
+  185 printchar 42
+  186 op add *tmp5 7 2
+  187 op floor *tmp6 9
+  188 op add *tmp7 35 9
+  189 printchar 44
+  190 op add *tmp8 35 0
+  191 printchar 35
+  192 op add *tmp9 35 0
+  193 printchar 35
+  194 op add *tmp10 35 0
+  195 printchar 35
+  196 op add *tmp11 35 30
+  197 printchar 65
+  198 op add *tmp12 35 25
+  199 printchar 60
+  200 op add *tmp13 35 0
+  201 printchar 35
+  202 op add *tmp14 35 0
+  203 printchar 35
+  204 op add *tmp15 35 0
+  205 printchar 35
   206 printchar 34
   207 print ";"
   208 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   138 print ";"
   139 print "\n"
   140 label *label52
-    * set :packCfg:x 0
-    * set :packCfg:pb 0
   141 label *label53
   142 print "const "
   143 print "PNEUMATIC_DRILL"
 
   161 print ";"
   162 print "\n"
   163 label *label54
-    * set :packCfg:name "UNLOADER1"
-    * set :packCfg:type @unloader
   164 set :packCfg:y 2
-    * set :packCfg:cu 0
   165 set :packCfg:gr 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   166 label *label55
   167 print "const "
   168 print "UNLOADER1"

Modifications by Inline function call at line 15:1 (+33 instructions):
 
   207 set :packCfg:pb 2
   208 set :packCfg:si 0
   209 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label9 (h:*label9)
-    * call *label0 *invalid :packCfg*retval (m:*label9) (h:*label9)
-    * label *label9
+  210 label *label57
+  211 print "const "
+  212 print :packCfg:name
+  213 print " "
+  214 print "= "
+  215 printchar 34
+  216 sensor *tmp0 :packCfg:type @id
+  217 op add *tmp1 35 *tmp0
+  218 printchar *tmp1
+  219 op add *tmp2 7 :packCfg:x
+  220 op floor *tmp3 *tmp2
+  221 op add *tmp4 35 *tmp3
+  222 printchar *tmp4
+  223 op add *tmp5 7 :packCfg:y
+  224 op floor *tmp6 *tmp5
+  225 op add *tmp7 35 *tmp6
+  226 printchar *tmp7
+  227 op add *tmp8 35 :packCfg:cu
+  228 printchar *tmp8
+  229 op add *tmp9 35 :packCfg:pb
+  230 printchar *tmp9
+  231 op add *tmp10 35 :packCfg:gr
+  232 printchar *tmp10
+  233 op add *tmp11 35 :packCfg:si
+  234 printchar *tmp11
+  235 op add *tmp12 35 :packCfg:ti
+  236 printchar *tmp12
+  237 op add *tmp13 35 :packCfg:mg
+  238 printchar *tmp13
+  239 op add *tmp14 35 :packCfg:th
+  240 printchar *tmp14
+  241 op add *tmp15 35 :packCfg:rotation
+  242 printchar *tmp15
+  243 printchar 34
+  244 print ";"
+  245 print "\n"
+  246 label *label58
   247 set :packCfg:name "OVERFLOW_GATE1"
   248 set :packCfg:type @overflow-gate
   249 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   172 sensor *tmp0 @unloader @id
   173 op add *tmp1 35 *tmp0
   174 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   175 printchar 42
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   176 printchar 44
-    * op add *tmp8 35 0
   177 printchar 35
-    * op add *tmp9 35 0
   178 printchar 35
-    * op add *tmp10 35 0
   179 printchar 35
-    * op add *tmp11 35 30
   180 printchar 65
-    * op add *tmp12 35 25
   181 printchar 60
-    * op add *tmp13 35 0
   182 printchar 35
-    * op add *tmp14 35 0
   183 printchar 35
-    * op add *tmp15 35 0
   184 printchar 35
   185 printchar 34
   186 print ";"
 
   195 set :packCfg:ti 0
   196 label *label57
   197 print "const "
-    * print :packCfg:name
+  198 print "INVERTED_SORT2"
   199 print " "
   200 print "= "
   201 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  202 sensor *tmp0 @inverted-sorter @id
   203 op add *tmp1 35 *tmp0
   204 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  205 op add *tmp2 7 -1
+  206 op floor *tmp3 6
+  207 op add *tmp4 35 6
+  208 printchar 41
+  209 op add *tmp5 7 2
+  210 op floor *tmp6 9
+  211 op add *tmp7 35 9
+  212 printchar 44
+  213 op add *tmp8 35 2
+  214 printchar 37
+  215 op add *tmp9 35 2
+  216 printchar 37
+  217 op add *tmp10 35 0
+  218 printchar 35
+  219 op add *tmp11 35 0
+  220 printchar 35
+  221 op add *tmp12 35 0
+  222 printchar 35
+  223 op add *tmp13 35 0
+  224 printchar 35
+  225 op add *tmp14 35 0
+  226 printchar 35
+  227 op add *tmp15 35 0
+  228 printchar 35
   229 printchar 34
   230 print ";"
   231 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   161 print ";"
   162 print "\n"
   163 label *label54
-    * set :packCfg:y 2
   164 set :packCfg:gr 0
   165 label *label55
   166 print "const "
 
   185 print ";"
   186 print "\n"
   187 label *label56
-    * set :packCfg:name "INVERTED_SORT2"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:x -1
-    * set :packCfg:cu 2
   188 set :packCfg:pb 2
   189 set :packCfg:si 0
   190 set :packCfg:ti 0

Modifications by Inline function call at line 16:1 (+33 instructions):
 
   230 set :packCfg:x 0
   231 set :packCfg:y 3
   232 set :packCfg:cu 4
-    * setaddr :packCfg*retaddr *label10 (h:*label10)
-    * call *label0 *invalid :packCfg*retval (m:*label10) (h:*label10)
-    * label *label10
+  233 label *label59
+  234 print "const "
+  235 print :packCfg:name
+  236 print " "
+  237 print "= "
+  238 printchar 34
+  239 sensor *tmp0 :packCfg:type @id
+  240 op add *tmp1 35 *tmp0
+  241 printchar *tmp1
+  242 op add *tmp2 7 :packCfg:x
+  243 op floor *tmp3 *tmp2
+  244 op add *tmp4 35 *tmp3
+  245 printchar *tmp4
+  246 op add *tmp5 7 :packCfg:y
+  247 op floor *tmp6 *tmp5
+  248 op add *tmp7 35 *tmp6
+  249 printchar *tmp7
+  250 op add *tmp8 35 :packCfg:cu
+  251 printchar *tmp8
+  252 op add *tmp9 35 :packCfg:pb
+  253 printchar *tmp9
+  254 op add *tmp10 35 :packCfg:gr
+  255 printchar *tmp10
+  256 op add *tmp11 35 :packCfg:si
+  257 printchar *tmp11
+  258 op add *tmp12 35 :packCfg:ti
+  259 printchar *tmp12
+  260 op add *tmp13 35 :packCfg:mg
+  261 printchar *tmp13
+  262 op add *tmp14 35 :packCfg:th
+  263 printchar *tmp14
+  264 op add *tmp15 35 :packCfg:rotation
+  265 printchar *tmp15
+  266 printchar 34
+  267 print ";"
+  268 print "\n"
+  269 label *label60
   270 set :packCfg:name "PROCESSOR"
   271 set :packCfg:type @micro-processor
   272 set :packCfg:x 3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   197 sensor *tmp0 @inverted-sorter @id
   198 op add *tmp1 35 *tmp0
   199 printchar *tmp1
-    * op add *tmp2 7 -1
-    * op floor *tmp3 6
-    * op add *tmp4 35 6
   200 printchar 41
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   201 printchar 44
-    * op add *tmp8 35 2
   202 printchar 37
-    * op add *tmp9 35 2
   203 printchar 37
-    * op add *tmp10 35 0
   204 printchar 35
-    * op add *tmp11 35 0
   205 printchar 35
-    * op add *tmp12 35 0
   206 printchar 35
-    * op add *tmp13 35 0
   207 printchar 35
-    * op add *tmp14 35 0
   208 printchar 35
-    * op add *tmp15 35 0
   209 printchar 35
   210 printchar 34
   211 print ";"
 
   218 set :packCfg:cu 4
   219 label *label59
   220 print "const "
-    * print :packCfg:name
+  221 print "OVERFLOW_GATE1"
   222 print " "
   223 print "= "
   224 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  225 sensor *tmp0 @overflow-gate @id
   226 op add *tmp1 35 *tmp0
   227 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  228 op add *tmp2 7 0
+  229 op floor *tmp3 7
+  230 op add *tmp4 35 7
+  231 printchar 42
+  232 op add *tmp5 7 3
+  233 op floor *tmp6 10
+  234 op add *tmp7 35 10
+  235 printchar 45
+  236 op add *tmp8 35 4
+  237 printchar 39
+  238 op add *tmp9 35 2
+  239 printchar 37
+  240 op add *tmp10 35 0
+  241 printchar 35
+  242 op add *tmp11 35 0
+  243 printchar 35
+  244 op add *tmp12 35 0
+  245 printchar 35
+  246 op add *tmp13 35 0
+  247 printchar 35
+  248 op add *tmp14 35 0
+  249 printchar 35
+  250 op add *tmp15 35 0
+  251 printchar 35
   252 printchar 34
   253 print ";"
   254 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   185 print ";"
   186 print "\n"
   187 label *label56
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
   188 set :packCfg:ti 0
   189 label *label57
   190 print "const "
 
   209 print ";"
   210 print "\n"
   211 label *label58
-    * set :packCfg:name "OVERFLOW_GATE1"
-    * set :packCfg:type @overflow-gate
-    * set :packCfg:x 0
-    * set :packCfg:y 3
-    * set :packCfg:cu 4
   212 label *label59
   213 print "const "
   214 print "OVERFLOW_GATE1"

Modifications by Inline function call at line 17:1 (+33 instructions):
 
   253 set :packCfg:cu 90
   254 set :packCfg:pb 50
   255 set :packCfg:si 50
-    * setaddr :packCfg*retaddr *label11 (h:*label11)
-    * call *label0 *invalid :packCfg*retval (m:*label11) (h:*label11)
-    * label *label11
+  256 label *label61
+  257 print "const "
+  258 print :packCfg:name
+  259 print " "
+  260 print "= "
+  261 printchar 34
+  262 sensor *tmp0 :packCfg:type @id
+  263 op add *tmp1 35 *tmp0
+  264 printchar *tmp1
+  265 op add *tmp2 7 :packCfg:x
+  266 op floor *tmp3 *tmp2
+  267 op add *tmp4 35 *tmp3
+  268 printchar *tmp4
+  269 op add *tmp5 7 :packCfg:y
+  270 op floor *tmp6 *tmp5
+  271 op add *tmp7 35 *tmp6
+  272 printchar *tmp7
+  273 op add *tmp8 35 :packCfg:cu
+  274 printchar *tmp8
+  275 op add *tmp9 35 :packCfg:pb
+  276 printchar *tmp9
+  277 op add *tmp10 35 :packCfg:gr
+  278 printchar *tmp10
+  279 op add *tmp11 35 :packCfg:si
+  280 printchar *tmp11
+  281 op add *tmp12 35 :packCfg:ti
+  282 printchar *tmp12
+  283 op add *tmp13 35 :packCfg:mg
+  284 printchar *tmp13
+  285 op add *tmp14 35 :packCfg:th
+  286 printchar *tmp14
+  287 op add *tmp15 35 :packCfg:rotation
+  288 printchar *tmp15
+  289 printchar 34
+  290 print ";"
+  291 print "\n"
+  292 label *label62
   293 set :packCfg:name "POWER_NODE"
   294 set :packCfg:type @power-node
   295 set :packCfg:x -1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   218 sensor *tmp0 @overflow-gate @id
   219 op add *tmp1 35 *tmp0
   220 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   221 printchar 42
-    * op add *tmp5 7 3
-    * op floor *tmp6 10
-    * op add *tmp7 35 10
   222 printchar 45
-    * op add *tmp8 35 4
   223 printchar 39
-    * op add *tmp9 35 2
   224 printchar 37
-    * op add *tmp10 35 0
   225 printchar 35
-    * op add *tmp11 35 0
   226 printchar 35
-    * op add *tmp12 35 0
   227 printchar 35
-    * op add *tmp13 35 0
   228 printchar 35
-    * op add *tmp14 35 0
   229 printchar 35
-    * op add *tmp15 35 0
   230 printchar 35
   231 printchar 34
   232 print ";"
 
   241 set :packCfg:si 50
   242 label *label61
   243 print "const "
-    * print :packCfg:name
+  244 print "PROCESSOR"
   245 print " "
   246 print "= "
   247 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  248 sensor *tmp0 @micro-processor @id
   249 op add *tmp1 35 *tmp0
   250 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  251 op add *tmp2 7 3
+  252 op floor *tmp3 10
+  253 op add *tmp4 35 10
+  254 printchar 45
+  255 op add *tmp5 7 4
+  256 op floor *tmp6 11
+  257 op add *tmp7 35 11
+  258 printchar 46
+  259 op add *tmp8 35 90
+  260 printchar 125
+  261 op add *tmp9 35 50
+  262 printchar 85
+  263 op add *tmp10 35 0
+  264 printchar 35
+  265 op add *tmp11 35 50
+  266 printchar 85
+  267 op add *tmp12 35 0
+  268 printchar 35
+  269 op add *tmp13 35 0
+  270 printchar 35
+  271 op add *tmp14 35 0
+  272 printchar 35
+  273 op add *tmp15 35 0
+  274 printchar 35
   275 printchar 34
   276 print ";"
   277 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   232 print ";"
   233 print "\n"
   234 label *label60
-    * set :packCfg:name "PROCESSOR"
-    * set :packCfg:type @micro-processor
-    * set :packCfg:x 3
-    * set :packCfg:y 4
-    * set :packCfg:cu 90
-    * set :packCfg:pb 50
-    * set :packCfg:si 50
   235 label *label61
   236 print "const "
   237 print "PROCESSOR"

Modifications by Inline function call at line 18:1 (+33 instructions):
 
   276 set :packCfg:cu 2
   277 set :packCfg:pb 6
   278 set :packCfg:si 0
-    * setaddr :packCfg*retaddr *label12 (h:*label12)
-    * call *label0 *invalid :packCfg*retval (m:*label12) (h:*label12)
-    * label *label12
+  279 label *label63
+  280 print "const "
+  281 print :packCfg:name
+  282 print " "
+  283 print "= "
+  284 printchar 34
+  285 sensor *tmp0 :packCfg:type @id
+  286 op add *tmp1 35 *tmp0
+  287 printchar *tmp1
+  288 op add *tmp2 7 :packCfg:x
+  289 op floor *tmp3 *tmp2
+  290 op add *tmp4 35 *tmp3
+  291 printchar *tmp4
+  292 op add *tmp5 7 :packCfg:y
+  293 op floor *tmp6 *tmp5
+  294 op add *tmp7 35 *tmp6
+  295 printchar *tmp7
+  296 op add *tmp8 35 :packCfg:cu
+  297 printchar *tmp8
+  298 op add *tmp9 35 :packCfg:pb
+  299 printchar *tmp9
+  300 op add *tmp10 35 :packCfg:gr
+  301 printchar *tmp10
+  302 op add *tmp11 35 :packCfg:si
+  303 printchar *tmp11
+  304 op add *tmp12 35 :packCfg:ti
+  305 printchar *tmp12
+  306 op add *tmp13 35 :packCfg:mg
+  307 printchar *tmp13
+  308 op add *tmp14 35 :packCfg:th
+  309 printchar *tmp14
+  310 op add *tmp15 35 :packCfg:rotation
+  311 printchar *tmp15
+  312 printchar 34
+  313 print ";"
+  314 print "\n"
+  315 label *label64
   316 set :packCfg:name "UNLOADER2"
   317 set :packCfg:type @unloader
   318 set :packCfg:x -2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   241 sensor *tmp0 @micro-processor @id
   242 op add *tmp1 35 *tmp0
   243 printchar *tmp1
-    * op add *tmp2 7 3
-    * op floor *tmp3 10
-    * op add *tmp4 35 10
   244 printchar 45
-    * op add *tmp5 7 4
-    * op floor *tmp6 11
-    * op add *tmp7 35 11
   245 printchar 46
-    * op add *tmp8 35 90
   246 printchar 125
-    * op add *tmp9 35 50
   247 printchar 85
-    * op add *tmp10 35 0
   248 printchar 35
-    * op add *tmp11 35 50
   249 printchar 85
-    * op add *tmp12 35 0
   250 printchar 35
-    * op add *tmp13 35 0
   251 printchar 35
-    * op add *tmp14 35 0
   252 printchar 35
-    * op add *tmp15 35 0
   253 printchar 35
   254 printchar 34
   255 print ";"
 
   264 set :packCfg:si 0
   265 label *label63
   266 print "const "
-    * print :packCfg:name
+  267 print "POWER_NODE"
   268 print " "
   269 print "= "
   270 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  271 sensor *tmp0 @power-node @id
   272 op add *tmp1 35 *tmp0
   273 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  274 op add *tmp2 7 -1
+  275 op floor *tmp3 6
+  276 op add *tmp4 35 6
+  277 printchar 41
+  278 op add *tmp5 7 -3
+  279 op floor *tmp6 4
+  280 op add *tmp7 35 4
+  281 printchar 39
+  282 op add *tmp8 35 2
+  283 printchar 37
+  284 op add *tmp9 35 6
+  285 printchar 41
+  286 op add *tmp10 35 0
+  287 printchar 35
+  288 op add *tmp11 35 0
+  289 printchar 35
+  290 op add *tmp12 35 0
+  291 printchar 35
+  292 op add *tmp13 35 0
+  293 printchar 35
+  294 op add *tmp14 35 0
+  295 printchar 35
+  296 op add *tmp15 35 0
+  297 printchar 35
   298 printchar 34
   299 print ";"
   300 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   185 print ";"
   186 print "\n"
   187 label *label56
-    * set :packCfg:ti 0
   188 label *label57
   189 print "const "
   190 print "INVERTED_SORT2"
 
   254 print ";"
   255 print "\n"
   256 label *label62
-    * set :packCfg:name "POWER_NODE"
-    * set :packCfg:type @power-node
-    * set :packCfg:x -1
-    * set :packCfg:y -3
-    * set :packCfg:cu 2
-    * set :packCfg:pb 6
-    * set :packCfg:si 0
   257 label *label63
   258 print "const "
   259 print "POWER_NODE"

Modifications by Inline function call at line 19:1 (+33 instructions):
 
   299 set :packCfg:pb 0
   300 set :packCfg:si 30
   301 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label13 (h:*label13)
-    * call *label0 *invalid :packCfg*retval (m:*label13) (h:*label13)
-    * label *label13
+  302 label *label65
+  303 print "const "
+  304 print :packCfg:name
+  305 print " "
+  306 print "= "
+  307 printchar 34
+  308 sensor *tmp0 :packCfg:type @id
+  309 op add *tmp1 35 *tmp0
+  310 printchar *tmp1
+  311 op add *tmp2 7 :packCfg:x
+  312 op floor *tmp3 *tmp2
+  313 op add *tmp4 35 *tmp3
+  314 printchar *tmp4
+  315 op add *tmp5 7 :packCfg:y
+  316 op floor *tmp6 *tmp5
+  317 op add *tmp7 35 *tmp6
+  318 printchar *tmp7
+  319 op add *tmp8 35 :packCfg:cu
+  320 printchar *tmp8
+  321 op add *tmp9 35 :packCfg:pb
+  322 printchar *tmp9
+  323 op add *tmp10 35 :packCfg:gr
+  324 printchar *tmp10
+  325 op add *tmp11 35 :packCfg:si
+  326 printchar *tmp11
+  327 op add *tmp12 35 :packCfg:ti
+  328 printchar *tmp12
+  329 op add *tmp13 35 :packCfg:mg
+  330 printchar *tmp13
+  331 op add *tmp14 35 :packCfg:th
+  332 printchar *tmp14
+  333 op add *tmp15 35 :packCfg:rotation
+  334 printchar *tmp15
+  335 printchar 34
+  336 print ";"
+  337 print "\n"
+  338 label *label66
   339 set :packCfg:name "AIR_FACTORY"
   340 set :packCfg:type @air-factory
   341 set :packCfg:x -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   263 sensor *tmp0 @power-node @id
   264 op add *tmp1 35 *tmp0
   265 printchar *tmp1
-    * op add *tmp2 7 -1
-    * op floor *tmp3 6
-    * op add *tmp4 35 6
   266 printchar 41
-    * op add *tmp5 7 -3
-    * op floor *tmp6 4
-    * op add *tmp7 35 4
   267 printchar 39
-    * op add *tmp8 35 2
   268 printchar 37
-    * op add *tmp9 35 6
   269 printchar 41
-    * op add *tmp10 35 0
   270 printchar 35
-    * op add *tmp11 35 0
   271 printchar 35
-    * op add *tmp12 35 0
   272 printchar 35
-    * op add *tmp13 35 0
   273 printchar 35
-    * op add *tmp14 35 0
   274 printchar 35
-    * op add *tmp15 35 0
   275 printchar 35
   276 printchar 34
   277 print ";"
 
   287 set :packCfg:ti 25
   288 label *label65
   289 print "const "
-    * print :packCfg:name
+  290 print "UNLOADER2"
   291 print " "
   292 print "= "
   293 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  294 sensor *tmp0 @unloader @id
   295 op add *tmp1 35 *tmp0
   296 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  297 op add *tmp2 7 -2
+  298 op floor *tmp3 5
+  299 op add *tmp4 35 5
+  300 printchar 40
+  301 op add *tmp5 7 0
+  302 op floor *tmp6 7
+  303 op add *tmp7 35 7
+  304 printchar 42
+  305 op add *tmp8 35 0
+  306 printchar 35
+  307 op add *tmp9 35 0
+  308 printchar 35
+  309 op add *tmp10 35 0
+  310 printchar 35
+  311 op add *tmp11 35 30
+  312 printchar 65
+  313 op add *tmp12 35 25
+  314 printchar 60
+  315 op add *tmp13 35 0
+  316 printchar 35
+  317 op add *tmp14 35 0
+  318 printchar 35
+  319 op add *tmp15 35 0
+  320 printchar 35
   321 printchar 34
   322 print ";"
   323 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
     0 set :packCfg:mg 0
     1 set :packCfg:th 0
-    * set :packCfg:rotation 0
     2 label *label41
     3 print "const "
     4 print "PRESS"
 
   276 print ";"
   277 print "\n"
   278 label *label64
-    * set :packCfg:name "UNLOADER2"
-    * set :packCfg:type @unloader
-    * set :packCfg:x -2
-    * set :packCfg:y 0
-    * set :packCfg:cu 0
-    * set :packCfg:pb 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   279 label *label65
   280 print "const "
   281 print "UNLOADER2"

Modifications by Inline function call at line 20:1 (+33 instructions):
 
   322 set :packCfg:si 0
   323 set :packCfg:ti 0
   324 set :packCfg:rotation 3
-    * setaddr :packCfg*retaddr *label14 (h:*label14)
-    * call *label0 *invalid :packCfg*retval (m:*label14) (h:*label14)
-    * label *label14
+  325 label *label67
+  326 print "const "
+  327 print :packCfg:name
+  328 print " "
+  329 print "= "
+  330 printchar 34
+  331 sensor *tmp0 :packCfg:type @id
+  332 op add *tmp1 35 *tmp0
+  333 printchar *tmp1
+  334 op add *tmp2 7 :packCfg:x
+  335 op floor *tmp3 *tmp2
+  336 op add *tmp4 35 *tmp3
+  337 printchar *tmp4
+  338 op add *tmp5 7 :packCfg:y
+  339 op floor *tmp6 *tmp5
+  340 op add *tmp7 35 *tmp6
+  341 printchar *tmp7
+  342 op add *tmp8 35 :packCfg:cu
+  343 printchar *tmp8
+  344 op add *tmp9 35 :packCfg:pb
+  345 printchar *tmp9
+  346 op add *tmp10 35 :packCfg:gr
+  347 printchar *tmp10
+  348 op add *tmp11 35 :packCfg:si
+  349 printchar *tmp11
+  350 op add *tmp12 35 :packCfg:ti
+  351 printchar *tmp12
+  352 op add *tmp13 35 :packCfg:mg
+  353 printchar *tmp13
+  354 op add *tmp14 35 :packCfg:th
+  355 printchar *tmp14
+  356 op add *tmp15 35 :packCfg:rotation
+  357 printchar *tmp15
+  358 printchar 34
+  359 print ";"
+  360 print "\n"
+  361 label *label68
   362 set :packCfg:name "UNLOADER3"
   363 set :packCfg:type @unloader
   364 set :packCfg:x 2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   285 sensor *tmp0 @unloader @id
   286 op add *tmp1 35 *tmp0
   287 printchar *tmp1
-    * op add *tmp2 7 -2
-    * op floor *tmp3 5
-    * op add *tmp4 35 5
   288 printchar 40
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   289 printchar 42
-    * op add *tmp8 35 0
   290 printchar 35
-    * op add *tmp9 35 0
   291 printchar 35
-    * op add *tmp10 35 0
   292 printchar 35
-    * op add *tmp11 35 30
   293 printchar 65
-    * op add *tmp12 35 25
   294 printchar 60
-    * op add *tmp13 35 0
   295 printchar 35
-    * op add *tmp14 35 0
   296 printchar 35
-    * op add *tmp15 35 0
   297 printchar 35
   298 printchar 34
   299 print ";"
 
   310 set :packCfg:rotation 3
   311 label *label67
   312 print "const "
-    * print :packCfg:name
+  313 print "AIR_FACTORY"
   314 print " "
   315 print "= "
   316 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  317 sensor *tmp0 @air-factory @id
   318 op add *tmp1 35 *tmp0
   319 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  320 op add *tmp2 7 -3
+  321 op floor *tmp3 4
+  322 op add *tmp4 35 4
+  323 printchar 39
+  324 op add *tmp5 7 -2
+  325 op floor *tmp6 5
+  326 op add *tmp7 35 5
+  327 printchar 40
+  328 op add *tmp8 35 60
+  329 printchar 95
+  330 op add *tmp9 35 70
+  331 printchar 105
+  332 op add *tmp10 35 0
+  333 printchar 35
+  334 op add *tmp11 35 0
+  335 printchar 35
+  336 op add *tmp12 35 0
+  337 printchar 35
+  338 op add *tmp13 35 0
+  339 printchar 35
+  340 op add *tmp14 35 0
+  341 printchar 35
+  342 op add *tmp15 35 3
+  343 printchar 38
   344 printchar 34
   345 print ";"
   346 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   299 print ";"
   300 print "\n"
   301 label *label66
-    * set :packCfg:name "AIR_FACTORY"
-    * set :packCfg:type @air-factory
-    * set :packCfg:x -3
-    * set :packCfg:y -2
-    * set :packCfg:cu 60
-    * set :packCfg:pb 70
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
-    * set :packCfg:rotation 3
   302 label *label67
   303 print "const "
   304 print "AIR_FACTORY"

Modifications by Inline function call at line 21:1 (+33 instructions):
 
   345 set :packCfg:si 30
   346 set :packCfg:ti 25
   347 set :packCfg:rotation 0
-    * setaddr :packCfg*retaddr *label15 (h:*label15)
-    * call *label0 *invalid :packCfg*retval (m:*label15) (h:*label15)
-    * label *label15
+  348 label *label69
+  349 print "const "
+  350 print :packCfg:name
+  351 print " "
+  352 print "= "
+  353 printchar 34
+  354 sensor *tmp0 :packCfg:type @id
+  355 op add *tmp1 35 *tmp0
+  356 printchar *tmp1
+  357 op add *tmp2 7 :packCfg:x
+  358 op floor *tmp3 *tmp2
+  359 op add *tmp4 35 *tmp3
+  360 printchar *tmp4
+  361 op add *tmp5 7 :packCfg:y
+  362 op floor *tmp6 *tmp5
+  363 op add *tmp7 35 *tmp6
+  364 printchar *tmp7
+  365 op add *tmp8 35 :packCfg:cu
+  366 printchar *tmp8
+  367 op add *tmp9 35 :packCfg:pb
+  368 printchar *tmp9
+  369 op add *tmp10 35 :packCfg:gr
+  370 printchar *tmp10
+  371 op add *tmp11 35 :packCfg:si
+  372 printchar *tmp11
+  373 op add *tmp12 35 :packCfg:ti
+  374 printchar *tmp12
+  375 op add *tmp13 35 :packCfg:mg
+  376 printchar *tmp13
+  377 op add *tmp14 35 :packCfg:th
+  378 printchar *tmp14
+  379 op add *tmp15 35 :packCfg:rotation
+  380 printchar *tmp15
+  381 printchar 34
+  382 print ";"
+  383 print "\n"
+  384 label *label70
   385 set :packCfg:name "INVERTED_SORT3"
   386 set :packCfg:type @inverted-sorter
   387 set :packCfg:y 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   308 sensor *tmp0 @air-factory @id
   309 op add *tmp1 35 *tmp0
   310 printchar *tmp1
-    * op add *tmp2 7 -3
-    * op floor *tmp3 4
-    * op add *tmp4 35 4
   311 printchar 39
-    * op add *tmp5 7 -2
-    * op floor *tmp6 5
-    * op add *tmp7 35 5
   312 printchar 40
-    * op add *tmp8 35 60
   313 printchar 95
-    * op add *tmp9 35 70
   314 printchar 105
-    * op add *tmp10 35 0
   315 printchar 35
-    * op add *tmp11 35 0
   316 printchar 35
-    * op add *tmp12 35 0
   317 printchar 35
-    * op add *tmp13 35 0
   318 printchar 35
-    * op add *tmp14 35 0
   319 printchar 35
-    * op add *tmp15 35 3
   320 printchar 38
   321 printchar 34
   322 print ";"
 
   333 set :packCfg:rotation 0
   334 label *label69
   335 print "const "
-    * print :packCfg:name
+  336 print "UNLOADER3"
   337 print " "
   338 print "= "
   339 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  340 sensor *tmp0 @unloader @id
   341 op add *tmp1 35 *tmp0
   342 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  343 op add *tmp2 7 2
+  344 op floor *tmp3 9
+  345 op add *tmp4 35 9
+  346 printchar 44
+  347 op add *tmp5 7 -1
+  348 op floor *tmp6 6
+  349 op add *tmp7 35 6
+  350 printchar 41
+  351 op add *tmp8 35 0
+  352 printchar 35
+  353 op add *tmp9 35 0
+  354 printchar 35
+  355 op add *tmp10 35 0
+  356 printchar 35
+  357 op add *tmp11 35 30
+  358 printchar 65
+  359 op add *tmp12 35 25
+  360 printchar 60
+  361 op add *tmp13 35 0
+  362 printchar 35
+  363 op add *tmp14 35 0
+  364 printchar 35
+  365 op add *tmp15 35 0
+  366 printchar 35
   367 printchar 34
   368 print ";"
   369 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   322 print ";"
   323 print "\n"
   324 label *label68
-    * set :packCfg:name "UNLOADER3"
-    * set :packCfg:type @unloader
   325 set :packCfg:x 2
-    * set :packCfg:y -1
-    * set :packCfg:cu 0
-    * set :packCfg:pb 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   326 set :packCfg:rotation 0
   327 label *label69
   328 print "const "

Modifications by Inline function call at line 22:1 (+33 instructions):
 
   368 set :packCfg:pb 2
   369 set :packCfg:si 0
   370 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label16 (h:*label16)
-    * call *label0 *invalid :packCfg*retval (m:*label16) (h:*label16)
-    * label *label16
+  371 label *label71
+  372 print "const "
+  373 print :packCfg:name
+  374 print " "
+  375 print "= "
+  376 printchar 34
+  377 sensor *tmp0 :packCfg:type @id
+  378 op add *tmp1 35 *tmp0
+  379 printchar *tmp1
+  380 op add *tmp2 7 :packCfg:x
+  381 op floor *tmp3 *tmp2
+  382 op add *tmp4 35 *tmp3
+  383 printchar *tmp4
+  384 op add *tmp5 7 :packCfg:y
+  385 op floor *tmp6 *tmp5
+  386 op add *tmp7 35 *tmp6
+  387 printchar *tmp7
+  388 op add *tmp8 35 :packCfg:cu
+  389 printchar *tmp8
+  390 op add *tmp9 35 :packCfg:pb
+  391 printchar *tmp9
+  392 op add *tmp10 35 :packCfg:gr
+  393 printchar *tmp10
+  394 op add *tmp11 35 :packCfg:si
+  395 printchar *tmp11
+  396 op add *tmp12 35 :packCfg:ti
+  397 printchar *tmp12
+  398 op add *tmp13 35 :packCfg:mg
+  399 printchar *tmp13
+  400 op add *tmp14 35 :packCfg:th
+  401 printchar *tmp14
+  402 op add *tmp15 35 :packCfg:rotation
+  403 printchar *tmp15
+  404 printchar 34
+  405 print ";"
+  406 print "\n"
+  407 label *label72
   408 set :packCfg:name "KILN"
   409 set :packCfg:type @kiln
   410 set :packCfg:x 2.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   333 sensor *tmp0 @unloader @id
   334 op add *tmp1 35 *tmp0
   335 printchar *tmp1
-    * op add *tmp2 7 2
-    * op floor *tmp3 9
-    * op add *tmp4 35 9
   336 printchar 44
-    * op add *tmp5 7 -1
-    * op floor *tmp6 6
-    * op add *tmp7 35 6
   337 printchar 41
-    * op add *tmp8 35 0
   338 printchar 35
-    * op add *tmp9 35 0
   339 printchar 35
-    * op add *tmp10 35 0
   340 printchar 35
-    * op add *tmp11 35 30
   341 printchar 65
-    * op add *tmp12 35 25
   342 printchar 60
-    * op add *tmp13 35 0
   343 printchar 35
-    * op add *tmp14 35 0
   344 printchar 35
-    * op add *tmp15 35 0
   345 printchar 35
   346 printchar 34
   347 print ";"
 
   356 set :packCfg:ti 0
   357 label *label71
   358 print "const "
-    * print :packCfg:name
+  359 print "INVERTED_SORT3"
   360 print " "
   361 print "= "
   362 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  363 sensor *tmp0 @inverted-sorter @id
   364 op add *tmp1 35 *tmp0
   365 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  366 op add *tmp2 7 2
+  367 op floor *tmp3 9
+  368 op add *tmp4 35 9
+  369 printchar 44
+  370 op add *tmp5 7 0
+  371 op floor *tmp6 7
+  372 op add *tmp7 35 7
+  373 printchar 42
+  374 op add *tmp8 35 2
+  375 printchar 37
+  376 op add *tmp9 35 2
+  377 printchar 37
+  378 op add *tmp10 35 0
+  379 printchar 35
+  380 op add *tmp11 35 0
+  381 printchar 35
+  382 op add *tmp12 35 0
+  383 printchar 35
+  384 op add *tmp13 35 0
+  385 printchar 35
+  386 op add *tmp14 35 0
+  387 printchar 35
+  388 op add *tmp15 35 0
+  389 printchar 35
   390 printchar 34
   391 print ";"
   392 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   160 print ";"
   161 print "\n"
   162 label *label54
-    * set :packCfg:gr 0
   163 label *label55
   164 print "const "
   165 print "UNLOADER1"
 
   321 print ";"
   322 print "\n"
   323 label *label68
-    * set :packCfg:x 2
   324 set :packCfg:rotation 0
   325 label *label69
   326 print "const "
 
   345 print ";"
   346 print "\n"
   347 label *label70
-    * set :packCfg:name "INVERTED_SORT3"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:y 0
-    * set :packCfg:cu 2
-    * set :packCfg:pb 2
   348 set :packCfg:si 0
   349 set :packCfg:ti 0
   350 label *label71

Modifications by Inline function call at line 23:1 (+33 instructions):
 
   391 set :packCfg:cu 60
   392 set :packCfg:pb 30
   393 set :packCfg:gr 30
-    * setaddr :packCfg*retaddr *label17 (h:*label17)
-    * call *label0 *invalid :packCfg*retval (m:*label17) (h:*label17)
-    * label *label17
+  394 label *label73
+  395 print "const "
+  396 print :packCfg:name
+  397 print " "
+  398 print "= "
+  399 printchar 34
+  400 sensor *tmp0 :packCfg:type @id
+  401 op add *tmp1 35 *tmp0
+  402 printchar *tmp1
+  403 op add *tmp2 7 :packCfg:x
+  404 op floor *tmp3 *tmp2
+  405 op add *tmp4 35 *tmp3
+  406 printchar *tmp4
+  407 op add *tmp5 7 :packCfg:y
+  408 op floor *tmp6 *tmp5
+  409 op add *tmp7 35 *tmp6
+  410 printchar *tmp7
+  411 op add *tmp8 35 :packCfg:cu
+  412 printchar *tmp8
+  413 op add *tmp9 35 :packCfg:pb
+  414 printchar *tmp9
+  415 op add *tmp10 35 :packCfg:gr
+  416 printchar *tmp10
+  417 op add *tmp11 35 :packCfg:si
+  418 printchar *tmp11
+  419 op add *tmp12 35 :packCfg:ti
+  420 printchar *tmp12
+  421 op add *tmp13 35 :packCfg:mg
+  422 printchar *tmp13
+  423 op add *tmp14 35 :packCfg:th
+  424 printchar *tmp14
+  425 op add *tmp15 35 :packCfg:rotation
+  426 printchar *tmp15
+  427 printchar 34
+  428 print ";"
+  429 print "\n"
+  430 label *label74
   431 set :packCfg:name "WATER_EXT"
   432 set :packCfg:type @water-extractor
   433 set :packCfg:x -4.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   356 sensor *tmp0 @inverted-sorter @id
   357 op add *tmp1 35 *tmp0
   358 printchar *tmp1
-    * op add *tmp2 7 2
-    * op floor *tmp3 9
-    * op add *tmp4 35 9
   359 printchar 44
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   360 printchar 42
-    * op add *tmp8 35 2
   361 printchar 37
-    * op add *tmp9 35 2
   362 printchar 37
-    * op add *tmp10 35 0
   363 printchar 35
-    * op add *tmp11 35 0
   364 printchar 35
-    * op add *tmp12 35 0
   365 printchar 35
-    * op add *tmp13 35 0
   366 printchar 35
-    * op add *tmp14 35 0
   367 printchar 35
-    * op add *tmp15 35 0
   368 printchar 35
   369 printchar 34
   370 print ";"
 
   379 set :packCfg:gr 30
   380 label *label73
   381 print "const "
-    * print :packCfg:name
+  382 print "KILN"
   383 print " "
   384 print "= "
   385 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  386 sensor *tmp0 @kiln @id
   387 op add *tmp1 35 *tmp0
   388 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  389 op add *tmp2 7 2.5
+  390 op floor *tmp3 9.5
+  391 op add *tmp4 35 9
+  392 printchar 44
+  393 op add *tmp5 7 1.5
+  394 op floor *tmp6 8.5
+  395 op add *tmp7 35 8
+  396 printchar 43
+  397 op add *tmp8 35 60
+  398 printchar 95
+  399 op add *tmp9 35 30
+  400 printchar 65
+  401 op add *tmp10 35 30
+  402 printchar 65
+  403 op add *tmp11 35 0
+  404 printchar 35
+  405 op add *tmp12 35 0
+  406 printchar 35
+  407 op add *tmp13 35 0
+  408 printchar 35
+  409 op add *tmp14 35 0
+  410 printchar 35
+  411 op add *tmp15 35 0
+  412 printchar 35
   413 printchar 34
   414 print ";"
   415 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
-    * set :packCfg:mg 0
     0 set :packCfg:th 0
     1 label *label41
     2 print "const "
 
   369 print ";"
   370 print "\n"
   371 label *label72
-    * set :packCfg:name "KILN"
-    * set :packCfg:type @kiln
-    * set :packCfg:x 2.5
-    * set :packCfg:y 1.5
-    * set :packCfg:cu 60
   372 set :packCfg:pb 30
   373 set :packCfg:gr 30
   374 label *label73

Modifications by Inline function call at line 24:1 (+33 instructions):
 
   414 set :packCfg:y 3.5
   415 set :packCfg:cu 30
   416 set :packCfg:mg 30
-    * setaddr :packCfg*retaddr *label18 (h:*label18)
-    * call *label0 *invalid :packCfg*retval (m:*label18) (h:*label18)
-    * label *label18
+  417 label *label75
+  418 print "const "
+  419 print :packCfg:name
+  420 print " "
+  421 print "= "
+  422 printchar 34
+  423 sensor *tmp0 :packCfg:type @id
+  424 op add *tmp1 35 *tmp0
+  425 printchar *tmp1
+  426 op add *tmp2 7 :packCfg:x
+  427 op floor *tmp3 *tmp2
+  428 op add *tmp4 35 *tmp3
+  429 printchar *tmp4
+  430 op add *tmp5 7 :packCfg:y
+  431 op floor *tmp6 *tmp5
+  432 op add *tmp7 35 *tmp6
+  433 printchar *tmp7
+  434 op add *tmp8 35 :packCfg:cu
+  435 printchar *tmp8
+  436 op add *tmp9 35 :packCfg:pb
+  437 printchar *tmp9
+  438 op add *tmp10 35 :packCfg:gr
+  439 printchar *tmp10
+  440 op add *tmp11 35 :packCfg:si
+  441 printchar *tmp11
+  442 op add *tmp12 35 :packCfg:ti
+  443 printchar *tmp12
+  444 op add *tmp13 35 :packCfg:mg
+  445 printchar *tmp13
+  446 op add *tmp14 35 :packCfg:th
+  447 printchar *tmp14
+  448 op add *tmp15 35 :packCfg:rotation
+  449 printchar *tmp15
+  450 printchar 34
+  451 print ";"
+  452 print "\n"
+  453 label *label76
   454 set :packCfg:name "OVERFLOW_GATE2"
   455 set :packCfg:type @overflow-gate
   456 set :packCfg:x -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   380 sensor *tmp0 @kiln @id
   381 op add *tmp1 35 *tmp0
   382 printchar *tmp1
-    * op add *tmp2 7 2.5
-    * op floor *tmp3 9.5
-    * op add *tmp4 35 9
   383 printchar 44
-    * op add *tmp5 7 1.5
-    * op floor *tmp6 8.5
-    * op add *tmp7 35 8
   384 printchar 43
-    * op add *tmp8 35 60
   385 printchar 95
-    * op add *tmp9 35 30
   386 printchar 65
-    * op add *tmp10 35 30
   387 printchar 65
-    * op add *tmp11 35 0
   388 printchar 35
-    * op add *tmp12 35 0
   389 printchar 35
-    * op add *tmp13 35 0
   390 printchar 35
-    * op add *tmp14 35 0
   391 printchar 35
-    * op add *tmp15 35 0
   392 printchar 35
   393 printchar 34
   394 print ";"
 
   402 set :packCfg:mg 30
   403 label *label75
   404 print "const "
-    * print :packCfg:name
+  405 print "WATER_EXT"
   406 print " "
   407 print "= "
   408 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  409 sensor *tmp0 @water-extractor @id
   410 op add *tmp1 35 *tmp0
   411 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  412 op add *tmp2 7 -4.5
+  413 op floor *tmp3 2.5
+  414 op add *tmp4 35 2
+  415 printchar 37
+  416 op add *tmp5 7 3.5
+  417 op floor *tmp6 10.5
+  418 op add *tmp7 35 10
+  419 printchar 45
+  420 op add *tmp8 35 30
+  421 printchar 65
+  422 op add *tmp9 35 30
+  423 printchar 65
+  424 op add *tmp10 35 30
+  425 printchar 65
+  426 op add *tmp11 35 0
+  427 printchar 35
+  428 op add *tmp12 35 0
+  429 printchar 35
+  430 op add *tmp13 35 30
+  431 printchar 65
+  432 op add *tmp14 35 0
+  433 printchar 35
+  434 op add *tmp15 35 0
+  435 printchar 35
   436 printchar 34
   437 print ";"
   438 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   369 print ";"
   370 print "\n"
   371 label *label72
-    * set :packCfg:pb 30
-    * set :packCfg:gr 30
   372 label *label73
   373 print "const "
   374 print "KILN"
 
   392 print ";"
   393 print "\n"
   394 label *label74
-    * set :packCfg:name "WATER_EXT"
-    * set :packCfg:type @water-extractor
-    * set :packCfg:x -4.5
-    * set :packCfg:y 3.5
-    * set :packCfg:cu 30
-    * set :packCfg:mg 30
   395 label *label75
   396 print "const "
   397 print "WATER_EXT"

Modifications by Inline function call at line 25:1 (+33 instructions):
 
   437 set :packCfg:pb 2
   438 set :packCfg:gr 0
   439 set :packCfg:mg 0
-    * setaddr :packCfg*retaddr *label19 (h:*label19)
-    * call *label0 *invalid :packCfg*retval (m:*label19) (h:*label19)
-    * label *label19
+  440 label *label77
+  441 print "const "
+  442 print :packCfg:name
+  443 print " "
+  444 print "= "
+  445 printchar 34
+  446 sensor *tmp0 :packCfg:type @id
+  447 op add *tmp1 35 *tmp0
+  448 printchar *tmp1
+  449 op add *tmp2 7 :packCfg:x
+  450 op floor *tmp3 *tmp2
+  451 op add *tmp4 35 *tmp3
+  452 printchar *tmp4
+  453 op add *tmp5 7 :packCfg:y
+  454 op floor *tmp6 *tmp5
+  455 op add *tmp7 35 *tmp6
+  456 printchar *tmp7
+  457 op add *tmp8 35 :packCfg:cu
+  458 printchar *tmp8
+  459 op add *tmp9 35 :packCfg:pb
+  460 printchar *tmp9
+  461 op add *tmp10 35 :packCfg:gr
+  462 printchar *tmp10
+  463 op add *tmp11 35 :packCfg:si
+  464 printchar *tmp11
+  465 op add *tmp12 35 :packCfg:ti
+  466 printchar *tmp12
+  467 op add *tmp13 35 :packCfg:mg
+  468 printchar *tmp13
+  469 op add *tmp14 35 :packCfg:th
+  470 printchar *tmp14
+  471 op add *tmp15 35 :packCfg:rotation
+  472 printchar *tmp15
+  473 printchar 34
+  474 print ";"
+  475 print "\n"
+  476 label *label78
   477 set :packCfg:name "OVERFLOW_GATE3"
   478 set :packCfg:x -4
   479 setaddr :packCfg*retaddr *label20 (h:*label20)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   401 sensor *tmp0 @water-extractor @id
   402 op add *tmp1 35 *tmp0
   403 printchar *tmp1
-    * op add *tmp2 7 -4.5
-    * op floor *tmp3 2.5
-    * op add *tmp4 35 2
   404 printchar 37
-    * op add *tmp5 7 3.5
-    * op floor *tmp6 10.5
-    * op add *tmp7 35 10
   405 printchar 45
-    * op add *tmp8 35 30
   406 printchar 65
-    * op add *tmp9 35 30
   407 printchar 65
-    * op add *tmp10 35 30
   408 printchar 65
-    * op add *tmp11 35 0
   409 printchar 35
-    * op add *tmp12 35 0
   410 printchar 35
-    * op add *tmp13 35 30
   411 printchar 65
-    * op add *tmp14 35 0
   412 printchar 35
-    * op add *tmp15 35 0
   413 printchar 35
   414 printchar 34
   415 print ";"
 
   425 set :packCfg:mg 0
   426 label *label77
   427 print "const "
-    * print :packCfg:name
+  428 print "OVERFLOW_GATE2"
   429 print " "
   430 print "= "
   431 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  432 sensor *tmp0 @overflow-gate @id
   433 op add *tmp1 35 *tmp0
   434 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  435 op add *tmp2 7 -3
+  436 op floor *tmp3 4
+  437 op add *tmp4 35 4
+  438 printchar 39
+  439 op add *tmp5 7 0
+  440 op floor *tmp6 7
+  441 op add *tmp7 35 7
+  442 printchar 42
+  443 op add *tmp8 35 4
+  444 printchar 39
+  445 op add *tmp9 35 2
+  446 printchar 37
+  447 op add *tmp10 35 0
+  448 printchar 35
+  449 op add *tmp11 35 0
+  450 printchar 35
+  451 op add *tmp12 35 0
+  452 printchar 35
+  453 op add *tmp13 35 0
+  454 printchar 35
+  455 op add *tmp14 35 0
+  456 printchar 35
+  457 op add *tmp15 35 0
+  458 printchar 35
   459 printchar 34
   460 print ";"
   461 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   415 print ";"
   416 print "\n"
   417 label *label76
-    * set :packCfg:name "OVERFLOW_GATE2"
   418 set :packCfg:type @overflow-gate
-    * set :packCfg:x -3
   419 set :packCfg:y 0
   420 set :packCfg:cu 4
   421 set :packCfg:pb 2

Modifications by Inline function call at line 26:1 (+33 instructions):
 
   460 label *label78
   461 set :packCfg:name "OVERFLOW_GATE3"
   462 set :packCfg:x -4
-    * setaddr :packCfg*retaddr *label20 (h:*label20)
-    * call *label0 *invalid :packCfg*retval (m:*label20) (h:*label20)
-    * label *label20
+  463 label *label79
+  464 print "const "
+  465 print :packCfg:name
+  466 print " "
+  467 print "= "
+  468 printchar 34
+  469 sensor *tmp0 :packCfg:type @id
+  470 op add *tmp1 35 *tmp0
+  471 printchar *tmp1
+  472 op add *tmp2 7 :packCfg:x
+  473 op floor *tmp3 *tmp2
+  474 op add *tmp4 35 *tmp3
+  475 printchar *tmp4
+  476 op add *tmp5 7 :packCfg:y
+  477 op floor *tmp6 *tmp5
+  478 op add *tmp7 35 *tmp6
+  479 printchar *tmp7
+  480 op add *tmp8 35 :packCfg:cu
+  481 printchar *tmp8
+  482 op add *tmp9 35 :packCfg:pb
+  483 printchar *tmp9
+  484 op add *tmp10 35 :packCfg:gr
+  485 printchar *tmp10
+  486 op add *tmp11 35 :packCfg:si
+  487 printchar *tmp11
+  488 op add *tmp12 35 :packCfg:ti
+  489 printchar *tmp12
+  490 op add *tmp13 35 :packCfg:mg
+  491 printchar *tmp13
+  492 op add *tmp14 35 :packCfg:th
+  493 printchar *tmp14
+  494 op add *tmp15 35 :packCfg:rotation
+  495 printchar *tmp15
+  496 printchar 34
+  497 print ";"
+  498 print "\n"
+  499 label *label80
   500 set :packCfg:name "STEAM_GEN"
   501 set :packCfg:type @steam-generator
   502 set :packCfg:x -4.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   430 sensor *tmp0 @overflow-gate @id
   431 op add *tmp1 35 *tmp0
   432 printchar *tmp1
-    * op add *tmp2 7 -3
-    * op floor *tmp3 4
-    * op add *tmp4 35 4
   433 printchar 39
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   434 printchar 42
-    * op add *tmp8 35 4
   435 printchar 39
-    * op add *tmp9 35 2
   436 printchar 37
-    * op add *tmp10 35 0
   437 printchar 35
-    * op add *tmp11 35 0
   438 printchar 35
-    * op add *tmp12 35 0
   439 printchar 35
-    * op add *tmp13 35 0
   440 printchar 35
-    * op add *tmp14 35 0
   441 printchar 35
-    * op add *tmp15 35 0
   442 printchar 35
   443 printchar 34
   444 print ";"
 
   448 set :packCfg:x -4
   449 label *label79
   450 print "const "
-    * print :packCfg:name
+  451 print "OVERFLOW_GATE3"
   452 print " "
   453 print "= "
   454 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  455 sensor *tmp0 @overflow-gate @id
   456 op add *tmp1 35 *tmp0
   457 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  458 op add *tmp2 7 -4
+  459 op floor *tmp3 3
+  460 op add *tmp4 35 3
+  461 printchar 38
+  462 op add *tmp5 7 0
+  463 op floor *tmp6 7
+  464 op add *tmp7 35 7
+  465 printchar 42
+  466 op add *tmp8 35 4
+  467 printchar 39
+  468 op add *tmp9 35 2
+  469 printchar 37
+  470 op add *tmp10 35 0
+  471 printchar 35
+  472 op add *tmp11 35 0
+  473 printchar 35
+  474 op add *tmp12 35 0
+  475 printchar 35
+  476 op add *tmp13 35 0
+  477 printchar 35
+  478 op add *tmp14 35 0
+  479 printchar 35
+  480 op add *tmp15 35 0
+  481 printchar 35
   482 printchar 34
   483 print ";"
   484 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   344 print ";"
   345 print "\n"
   346 label *label70
-    * set :packCfg:si 0
   347 set :packCfg:ti 0
   348 label *label71
   349 print "const "
 
   414 print ";"
   415 print "\n"
   416 label *label76
-    * set :packCfg:type @overflow-gate
-    * set :packCfg:y 0
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:gr 0
   417 set :packCfg:mg 0
   418 label *label77
   419 print "const "
 
   438 print ";"
   439 print "\n"
   440 label *label78
-    * set :packCfg:name "OVERFLOW_GATE3"
-    * set :packCfg:x -4
   441 label *label79
   442 print "const "
   443 print "OVERFLOW_GATE3"

Modifications by Inline function call at line 27:1 (+33 instructions):
 
   483 set :packCfg:pb 40
   484 set :packCfg:gr 25
   485 set :packCfg:si 30
-    * setaddr :packCfg*retaddr *label21 (h:*label21)
-    * call *label0 *invalid :packCfg*retval (m:*label21) (h:*label21)
-    * label *label21
+  486 label *label81
+  487 print "const "
+  488 print :packCfg:name
+  489 print " "
+  490 print "= "
+  491 printchar 34
+  492 sensor *tmp0 :packCfg:type @id
+  493 op add *tmp1 35 *tmp0
+  494 printchar *tmp1
+  495 op add *tmp2 7 :packCfg:x
+  496 op floor *tmp3 *tmp2
+  497 op add *tmp4 35 *tmp3
+  498 printchar *tmp4
+  499 op add *tmp5 7 :packCfg:y
+  500 op floor *tmp6 *tmp5
+  501 op add *tmp7 35 *tmp6
+  502 printchar *tmp7
+  503 op add *tmp8 35 :packCfg:cu
+  504 printchar *tmp8
+  505 op add *tmp9 35 :packCfg:pb
+  506 printchar *tmp9
+  507 op add *tmp10 35 :packCfg:gr
+  508 printchar *tmp10
+  509 op add *tmp11 35 :packCfg:si
+  510 printchar *tmp11
+  511 op add *tmp12 35 :packCfg:ti
+  512 printchar *tmp12
+  513 op add *tmp13 35 :packCfg:mg
+  514 printchar *tmp13
+  515 op add *tmp14 35 :packCfg:th
+  516 printchar *tmp14
+  517 op add *tmp15 35 :packCfg:rotation
+  518 printchar *tmp15
+  519 printchar 34
+  520 print ";"
+  521 print "\n"
+  522 label *label82
   523 set :packCfg:name "MULTIPRESS"
   524 set :packCfg:type @multi-press
   525 set :packCfg:x -2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   447 sensor *tmp0 @overflow-gate @id
   448 op add *tmp1 35 *tmp0
   449 printchar *tmp1
-    * op add *tmp2 7 -4
-    * op floor *tmp3 3
-    * op add *tmp4 35 3
   450 printchar 38
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   451 printchar 42
-    * op add *tmp8 35 4
   452 printchar 39
-    * op add *tmp9 35 2
   453 printchar 37
-    * op add *tmp10 35 0
   454 printchar 35
-    * op add *tmp11 35 0
   455 printchar 35
-    * op add *tmp12 35 0
   456 printchar 35
-    * op add *tmp13 35 0
   457 printchar 35
-    * op add *tmp14 35 0
   458 printchar 35
-    * op add *tmp15 35 0
   459 printchar 35
   460 printchar 34
   461 print ";"
 
   471 set :packCfg:si 30
   472 label *label81
   473 print "const "
-    * print :packCfg:name
+  474 print "STEAM_GEN"
   475 print " "
   476 print "= "
   477 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  478 sensor *tmp0 @steam-generator @id
   479 op add *tmp1 35 *tmp0
   480 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  481 op add *tmp2 7 -4.5
+  482 op floor *tmp3 2.5
+  483 op add *tmp4 35 2
+  484 printchar 37
+  485 op add *tmp5 7 1.5
+  486 op floor *tmp6 8.5
+  487 op add *tmp7 35 8
+  488 printchar 43
+  489 op add *tmp8 35 35
+  490 printchar 70
+  491 op add *tmp9 35 40
+  492 printchar 75
+  493 op add *tmp10 35 25
+  494 printchar 60
+  495 op add *tmp11 35 30
+  496 printchar 65
+  497 op add *tmp12 35 0
+  498 printchar 35
+  499 op add *tmp13 35 0
+  500 printchar 35
+  501 op add *tmp14 35 0
+  502 printchar 35
+  503 op add *tmp15 35 0
+  504 printchar 35
   505 printchar 34
   506 print ";"
   507 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   344 print ";"
   345 print "\n"
   346 label *label70
-    * set :packCfg:ti 0
   347 label *label71
   348 print "const "
   349 print "INVERTED_SORT3"
 
   460 print ";"
   461 print "\n"
   462 label *label80
-    * set :packCfg:name "STEAM_GEN"
-    * set :packCfg:type @steam-generator
-    * set :packCfg:x -4.5
-    * set :packCfg:y 1.5
-    * set :packCfg:cu 35
-    * set :packCfg:pb 40
-    * set :packCfg:gr 25
-    * set :packCfg:si 30
   463 label *label81
   464 print "const "
   465 print "STEAM_GEN"

Modifications by Inline function call at line 28:1 (+33 instructions):
 
   506 set :packCfg:gr 50
   507 set :packCfg:si 25
   508 set :packCfg:ti 100
-    * setaddr :packCfg*retaddr *label22 (h:*label22)
-    * call *label0 *invalid :packCfg*retval (m:*label22) (h:*label22)
-    * label *label22
+  509 label *label83
+  510 print "const "
+  511 print :packCfg:name
+  512 print " "
+  513 print "= "
+  514 printchar 34
+  515 sensor *tmp0 :packCfg:type @id
+  516 op add *tmp1 35 *tmp0
+  517 printchar *tmp1
+  518 op add *tmp2 7 :packCfg:x
+  519 op floor *tmp3 *tmp2
+  520 op add *tmp4 35 *tmp3
+  521 printchar *tmp4
+  522 op add *tmp5 7 :packCfg:y
+  523 op floor *tmp6 *tmp5
+  524 op add *tmp7 35 *tmp6
+  525 printchar *tmp7
+  526 op add *tmp8 35 :packCfg:cu
+  527 printchar *tmp8
+  528 op add *tmp9 35 :packCfg:pb
+  529 printchar *tmp9
+  530 op add *tmp10 35 :packCfg:gr
+  531 printchar *tmp10
+  532 op add *tmp11 35 :packCfg:si
+  533 printchar *tmp11
+  534 op add *tmp12 35 :packCfg:ti
+  535 printchar *tmp12
+  536 op add *tmp13 35 :packCfg:mg
+  537 printchar *tmp13
+  538 op add *tmp14 35 :packCfg:th
+  539 printchar *tmp14
+  540 op add *tmp15 35 :packCfg:rotation
+  541 printchar *tmp15
+  542 printchar 34
+  543 print ";"
+  544 print "\n"
+  545 label *label84
   546 set :packCfg:name "WATER_EXT2"
   547 set :packCfg:type @water-extractor
   548 set :packCfg:x -4.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   469 sensor *tmp0 @steam-generator @id
   470 op add *tmp1 35 *tmp0
   471 printchar *tmp1
-    * op add *tmp2 7 -4.5
-    * op floor *tmp3 2.5
-    * op add *tmp4 35 2
   472 printchar 37
-    * op add *tmp5 7 1.5
-    * op floor *tmp6 8.5
-    * op add *tmp7 35 8
   473 printchar 43
-    * op add *tmp8 35 35
   474 printchar 70
-    * op add *tmp9 35 40
   475 printchar 75
-    * op add *tmp10 35 25
   476 printchar 60
-    * op add *tmp11 35 30
   477 printchar 65
-    * op add *tmp12 35 0
   478 printchar 35
-    * op add *tmp13 35 0
   479 printchar 35
-    * op add *tmp14 35 0
   480 printchar 35
-    * op add *tmp15 35 0
   481 printchar 35
   482 printchar 34
   483 print ";"
 
   494 set :packCfg:ti 100
   495 label *label83
   496 print "const "
-    * print :packCfg:name
+  497 print "MULTIPRESS"
   498 print " "
   499 print "= "
   500 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  501 sensor *tmp0 @multi-press @id
   502 op add *tmp1 35 *tmp0
   503 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  504 op add *tmp2 7 -2
+  505 op floor *tmp3 5
+  506 op add *tmp4 35 5
+  507 printchar 40
+  508 op add *tmp5 7 4
+  509 op floor *tmp6 11
+  510 op add *tmp7 35 11
+  511 printchar 46
+  512 op add *tmp8 35 0
+  513 printchar 35
+  514 op add *tmp9 35 100
+  515 printchar 135
+  516 op add *tmp10 35 50
+  517 printchar 85
+  518 op add *tmp11 35 25
+  519 printchar 60
+  520 op add *tmp12 35 100
+  521 printchar 135
+  522 op add *tmp13 35 0
+  523 printchar 35
+  524 op add *tmp14 35 0
+  525 printchar 35
+  526 op add *tmp15 35 0
+  527 printchar 35
   528 printchar 34
   529 print ";"
   530 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
   413 print ";"
   414 print "\n"
   415 label *label76
-    * set :packCfg:mg 0
   416 label *label77
   417 print "const "
   418 print "OVERFLOW_GATE2"
 
   482 print ";"
   483 print "\n"
   484 label *label82
-    * set :packCfg:name "MULTIPRESS"
-    * set :packCfg:type @multi-press
-    * set :packCfg:x -2
-    * set :packCfg:y 4
-    * set :packCfg:cu 0
-    * set :packCfg:pb 100
-    * set :packCfg:gr 50
-    * set :packCfg:si 25
-    * set :packCfg:ti 100
   485 label *label83
   486 print "const "
   487 print "MULTIPRESS"

Modifications by Inline function call at line 29:1 (+33 instructions):
 
   529 set :packCfg:si 0
   530 set :packCfg:ti 0
   531 set :packCfg:mg 30
-    * setaddr :packCfg*retaddr *label23 (h:*label23)
-    * call *label0 *invalid :packCfg*retval (m:*label23) (h:*label23)
-    * label *label23
+  532 label *label85
+  533 print "const "
+  534 print :packCfg:name
+  535 print " "
+  536 print "= "
+  537 printchar 34
+  538 sensor *tmp0 :packCfg:type @id
+  539 op add *tmp1 35 *tmp0
+  540 printchar *tmp1
+  541 op add *tmp2 7 :packCfg:x
+  542 op floor *tmp3 *tmp2
+  543 op add *tmp4 35 *tmp3
+  544 printchar *tmp4
+  545 op add *tmp5 7 :packCfg:y
+  546 op floor *tmp6 *tmp5
+  547 op add *tmp7 35 *tmp6
+  548 printchar *tmp7
+  549 op add *tmp8 35 :packCfg:cu
+  550 printchar *tmp8
+  551 op add *tmp9 35 :packCfg:pb
+  552 printchar *tmp9
+  553 op add *tmp10 35 :packCfg:gr
+  554 printchar *tmp10
+  555 op add *tmp11 35 :packCfg:si
+  556 printchar *tmp11
+  557 op add *tmp12 35 :packCfg:ti
+  558 printchar *tmp12
+  559 op add *tmp13 35 :packCfg:mg
+  560 printchar *tmp13
+  561 op add *tmp14 35 :packCfg:th
+  562 printchar *tmp14
+  563 op add *tmp15 35 :packCfg:rotation
+  564 printchar *tmp15
+  565 printchar 34
+  566 print ";"
+  567 print "\n"
+  568 label *label86
   569 set :packCfg:name "PAYLOAD_ROUTER"
   570 set :packCfg:type @payload-router
   571 set :packCfg:x -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   491 sensor *tmp0 @multi-press @id
   492 op add *tmp1 35 *tmp0
   493 printchar *tmp1
-    * op add *tmp2 7 -2
-    * op floor *tmp3 5
-    * op add *tmp4 35 5
   494 printchar 40
-    * op add *tmp5 7 4
-    * op floor *tmp6 11
-    * op add *tmp7 35 11
   495 printchar 46
-    * op add *tmp8 35 0
   496 printchar 35
-    * op add *tmp9 35 100
   497 printchar 135
-    * op add *tmp10 35 50
   498 printchar 85
-    * op add *tmp11 35 25
   499 printchar 60
-    * op add *tmp12 35 100
   500 printchar 135
-    * op add *tmp13 35 0
   501 printchar 35
-    * op add *tmp14 35 0
   502 printchar 35
-    * op add *tmp15 35 0
   503 printchar 35
   504 printchar 34
   505 print ";"
 
   517 set :packCfg:mg 30
   518 label *label85
   519 print "const "
-    * print :packCfg:name
+  520 print "WATER_EXT2"
   521 print " "
   522 print "= "
   523 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  524 sensor *tmp0 @water-extractor @id
   525 op add *tmp1 35 *tmp0
   526 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  527 op add *tmp2 7 -4.5
+  528 op floor *tmp3 2.5
+  529 op add *tmp4 35 2
+  530 printchar 37
+  531 op add *tmp5 7 5.5
+  532 op floor *tmp6 12.5
+  533 op add *tmp7 35 12
+  534 printchar 47
+  535 op add *tmp8 35 30
+  536 printchar 65
+  537 op add *tmp9 35 30
+  538 printchar 65
+  539 op add *tmp10 35 30
+  540 printchar 65
+  541 op add *tmp11 35 0
+  542 printchar 35
+  543 op add *tmp12 35 0
+  544 printchar 35
+  545 op add *tmp13 35 30
+  546 printchar 65
+  547 op add *tmp14 35 0
+  548 printchar 35
+  549 op add *tmp15 35 0
+  550 printchar 35
   551 printchar 34
   552 print ";"
   553 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   505 print ";"
   506 print "\n"
   507 label *label84
-    * set :packCfg:name "WATER_EXT2"
-    * set :packCfg:type @water-extractor
-    * set :packCfg:x -4.5
-    * set :packCfg:y 5.5
-    * set :packCfg:cu 30
-    * set :packCfg:pb 30
-    * set :packCfg:gr 30
   508 set :packCfg:si 0
   509 set :packCfg:ti 0
-    * set :packCfg:mg 30
   510 label *label85
   511 print "const "
   512 print "WATER_EXT2"

Modifications by Inline function call at line 30:1 (+33 instructions):
 
   552 set :packCfg:pb 0
   553 set :packCfg:gr 15
   554 set :packCfg:mg 0
-    * setaddr :packCfg*retaddr *label24 (h:*label24)
-    * call *label0 *invalid :packCfg*retval (m:*label24) (h:*label24)
-    * label *label24
+  555 label *label87
+  556 print "const "
+  557 print :packCfg:name
+  558 print " "
+  559 print "= "
+  560 printchar 34
+  561 sensor *tmp0 :packCfg:type @id
+  562 op add *tmp1 35 *tmp0
+  563 printchar *tmp1
+  564 op add *tmp2 7 :packCfg:x
+  565 op floor *tmp3 *tmp2
+  566 op add *tmp4 35 *tmp3
+  567 printchar *tmp4
+  568 op add *tmp5 7 :packCfg:y
+  569 op floor *tmp6 *tmp5
+  570 op add *tmp7 35 *tmp6
+  571 printchar *tmp7
+  572 op add *tmp8 35 :packCfg:cu
+  573 printchar *tmp8
+  574 op add *tmp9 35 :packCfg:pb
+  575 printchar *tmp9
+  576 op add *tmp10 35 :packCfg:gr
+  577 printchar *tmp10
+  578 op add *tmp11 35 :packCfg:si
+  579 printchar *tmp11
+  580 op add *tmp12 35 :packCfg:ti
+  581 printchar *tmp12
+  582 op add *tmp13 35 :packCfg:mg
+  583 printchar *tmp13
+  584 op add *tmp14 35 :packCfg:th
+  585 printchar *tmp14
+  586 op add *tmp15 35 :packCfg:rotation
+  587 printchar *tmp15
+  588 printchar 34
+  589 print ";"
+  590 print "\n"
+  591 label *label88
   592 set :packCfg:name "UNLOADER4"
   593 set :packCfg:type @unloader
   594 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   516 sensor *tmp0 @water-extractor @id
   517 op add *tmp1 35 *tmp0
   518 printchar *tmp1
-    * op add *tmp2 7 -4.5
-    * op floor *tmp3 2.5
-    * op add *tmp4 35 2
   519 printchar 37
-    * op add *tmp5 7 5.5
-    * op floor *tmp6 12.5
-    * op add *tmp7 35 12
   520 printchar 47
-    * op add *tmp8 35 30
   521 printchar 65
-    * op add *tmp9 35 30
   522 printchar 65
-    * op add *tmp10 35 30
   523 printchar 65
-    * op add *tmp11 35 0
   524 printchar 35
-    * op add *tmp12 35 0
   525 printchar 35
-    * op add *tmp13 35 30
   526 printchar 65
-    * op add *tmp14 35 0
   527 printchar 35
-    * op add *tmp15 35 0
   528 printchar 35
   529 printchar 34
   530 print ";"
 
   540 set :packCfg:mg 0
   541 label *label87
   542 print "const "
-    * print :packCfg:name
+  543 print "PAYLOAD_ROUTER"
   544 print " "
   545 print "= "
   546 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  547 sensor *tmp0 @payload-router @id
   548 op add *tmp1 35 *tmp0
   549 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  550 op add *tmp2 7 -3
+  551 op floor *tmp3 4
+  552 op add *tmp4 35 4
+  553 printchar 39
+  554 op add *tmp5 7 -5
+  555 op floor *tmp6 2
+  556 op add *tmp7 35 2
+  557 printchar 37
+  558 op add *tmp8 35 10
+  559 printchar 45
+  560 op add *tmp9 35 0
+  561 printchar 35
+  562 op add *tmp10 35 15
+  563 printchar 50
+  564 op add *tmp11 35 0
+  565 printchar 35
+  566 op add *tmp12 35 0
+  567 printchar 35
+  568 op add *tmp13 35 0
+  569 printchar 35
+  570 op add *tmp14 35 0
+  571 printchar 35
+  572 op add *tmp15 35 0
+  573 printchar 35
   574 printchar 34
   575 print ";"
   576 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   505 print ";"
   506 print "\n"
   507 label *label84
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   508 label *label85
   509 print "const "
   510 print "WATER_EXT2"
 
   528 print ";"
   529 print "\n"
   530 label *label86
-    * set :packCfg:name "PAYLOAD_ROUTER"
-    * set :packCfg:type @payload-router
-    * set :packCfg:x -3
-    * set :packCfg:y -5
-    * set :packCfg:cu 10
   531 set :packCfg:pb 0
-    * set :packCfg:gr 15
   532 set :packCfg:mg 0
   533 label *label87
   534 print "const "

Modifications by Inline function call at line 31:1 (+33 instructions):
 
   575 set :packCfg:gr 0
   576 set :packCfg:si 30
   577 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label25 (h:*label25)
-    * call *label0 *invalid :packCfg*retval (m:*label25) (h:*label25)
-    * label *label25
+  578 label *label89
+  579 print "const "
+  580 print :packCfg:name
+  581 print " "
+  582 print "= "
+  583 printchar 34
+  584 sensor *tmp0 :packCfg:type @id
+  585 op add *tmp1 35 *tmp0
+  586 printchar *tmp1
+  587 op add *tmp2 7 :packCfg:x
+  588 op floor *tmp3 *tmp2
+  589 op add *tmp4 35 *tmp3
+  590 printchar *tmp4
+  591 op add *tmp5 7 :packCfg:y
+  592 op floor *tmp6 *tmp5
+  593 op add *tmp7 35 *tmp6
+  594 printchar *tmp7
+  595 op add *tmp8 35 :packCfg:cu
+  596 printchar *tmp8
+  597 op add *tmp9 35 :packCfg:pb
+  598 printchar *tmp9
+  599 op add *tmp10 35 :packCfg:gr
+  600 printchar *tmp10
+  601 op add *tmp11 35 :packCfg:si
+  602 printchar *tmp11
+  603 op add *tmp12 35 :packCfg:ti
+  604 printchar *tmp12
+  605 op add *tmp13 35 :packCfg:mg
+  606 printchar *tmp13
+  607 op add *tmp14 35 :packCfg:th
+  608 printchar *tmp14
+  609 op add *tmp15 35 :packCfg:rotation
+  610 printchar *tmp15
+  611 printchar 34
+  612 print ";"
+  613 print "\n"
+  614 label *label90
   615 set :packCfg:name "UNDERFLOW_GATE"
   616 set :packCfg:type @underflow-gate
   617 set :packCfg:y -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   539 sensor *tmp0 @payload-router @id
   540 op add *tmp1 35 *tmp0
   541 printchar *tmp1
-    * op add *tmp2 7 -3
-    * op floor *tmp3 4
-    * op add *tmp4 35 4
   542 printchar 39
-    * op add *tmp5 7 -5
-    * op floor *tmp6 2
-    * op add *tmp7 35 2
   543 printchar 37
-    * op add *tmp8 35 10
   544 printchar 45
-    * op add *tmp9 35 0
   545 printchar 35
-    * op add *tmp10 35 15
   546 printchar 50
-    * op add *tmp11 35 0
   547 printchar 35
-    * op add *tmp12 35 0
   548 printchar 35
-    * op add *tmp13 35 0
   549 printchar 35
-    * op add *tmp14 35 0
   550 printchar 35
-    * op add *tmp15 35 0
   551 printchar 35
   552 printchar 34
   553 print ";"
 
   563 set :packCfg:ti 25
   564 label *label89
   565 print "const "
-    * print :packCfg:name
+  566 print "UNLOADER4"
   567 print " "
   568 print "= "
   569 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  570 sensor *tmp0 @unloader @id
   571 op add *tmp1 35 *tmp0
   572 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  573 op add *tmp2 7 0
+  574 op floor *tmp3 7
+  575 op add *tmp4 35 7
+  576 printchar 42
+  577 op add *tmp5 7 -2
+  578 op floor *tmp6 5
+  579 op add *tmp7 35 5
+  580 printchar 40
+  581 op add *tmp8 35 0
+  582 printchar 35
+  583 op add *tmp9 35 0
+  584 printchar 35
+  585 op add *tmp10 35 0
+  586 printchar 35
+  587 op add *tmp11 35 30
+  588 printchar 65
+  589 op add *tmp12 35 25
+  590 printchar 60
+  591 op add *tmp13 35 0
+  592 printchar 35
+  593 op add *tmp14 35 0
+  594 printchar 35
+  595 op add *tmp15 35 0
+  596 printchar 35
   597 printchar 34
   598 print ";"
   599 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   528 print ";"
   529 print "\n"
   530 label *label86
-    * set :packCfg:pb 0
   531 set :packCfg:mg 0
   532 label *label87
   533 print "const "
 
   552 print ";"
   553 print "\n"
   554 label *label88
-    * set :packCfg:name "UNLOADER4"
-    * set :packCfg:type @unloader
   555 set :packCfg:x 0
-    * set :packCfg:y -2
-    * set :packCfg:cu 0
   556 set :packCfg:gr 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   557 label *label89
   558 print "const "
   559 print "UNLOADER4"

Modifications by Inline function call at line 32:1 (+33 instructions):
 
   598 set :packCfg:pb 2
   599 set :packCfg:si 0
   600 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label26 (h:*label26)
-    * call *label0 *invalid :packCfg*retval (m:*label26) (h:*label26)
-    * label *label26
+  601 label *label91
+  602 print "const "
+  603 print :packCfg:name
+  604 print " "
+  605 print "= "
+  606 printchar 34
+  607 sensor *tmp0 :packCfg:type @id
+  608 op add *tmp1 35 *tmp0
+  609 printchar *tmp1
+  610 op add *tmp2 7 :packCfg:x
+  611 op floor *tmp3 *tmp2
+  612 op add *tmp4 35 *tmp3
+  613 printchar *tmp4
+  614 op add *tmp5 7 :packCfg:y
+  615 op floor *tmp6 *tmp5
+  616 op add *tmp7 35 *tmp6
+  617 printchar *tmp7
+  618 op add *tmp8 35 :packCfg:cu
+  619 printchar *tmp8
+  620 op add *tmp9 35 :packCfg:pb
+  621 printchar *tmp9
+  622 op add *tmp10 35 :packCfg:gr
+  623 printchar *tmp10
+  624 op add *tmp11 35 :packCfg:si
+  625 printchar *tmp11
+  626 op add *tmp12 35 :packCfg:ti
+  627 printchar *tmp12
+  628 op add *tmp13 35 :packCfg:mg
+  629 printchar *tmp13
+  630 op add *tmp14 35 :packCfg:th
+  631 printchar *tmp14
+  632 op add *tmp15 35 :packCfg:rotation
+  633 printchar *tmp15
+  634 printchar 34
+  635 print ";"
+  636 print "\n"
+  637 label *label92
   638 set :packCfg:name "ADDITIVE_REC"
   639 set :packCfg:type @additive-reconstructor
   640 set :packCfg:y -5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   563 sensor *tmp0 @unloader @id
   564 op add *tmp1 35 *tmp0
   565 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   566 printchar 42
-    * op add *tmp5 7 -2
-    * op floor *tmp6 5
-    * op add *tmp7 35 5
   567 printchar 40
-    * op add *tmp8 35 0
   568 printchar 35
-    * op add *tmp9 35 0
   569 printchar 35
-    * op add *tmp10 35 0
   570 printchar 35
-    * op add *tmp11 35 30
   571 printchar 65
-    * op add *tmp12 35 25
   572 printchar 60
-    * op add *tmp13 35 0
   573 printchar 35
-    * op add *tmp14 35 0
   574 printchar 35
-    * op add *tmp15 35 0
   575 printchar 35
   576 printchar 34
   577 print ";"
 
   586 set :packCfg:ti 0
   587 label *label91
   588 print "const "
-    * print :packCfg:name
+  589 print "UNDERFLOW_GATE"
   590 print " "
   591 print "= "
   592 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  593 sensor *tmp0 @underflow-gate @id
   594 op add *tmp1 35 *tmp0
   595 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  596 op add *tmp2 7 0
+  597 op floor *tmp3 7
+  598 op add *tmp4 35 7
+  599 printchar 42
+  600 op add *tmp5 7 -3
+  601 op floor *tmp6 4
+  602 op add *tmp7 35 4
+  603 printchar 39
+  604 op add *tmp8 35 4
+  605 printchar 39
+  606 op add *tmp9 35 2
+  607 printchar 37
+  608 op add *tmp10 35 0
+  609 printchar 35
+  610 op add *tmp11 35 0
+  611 printchar 35
+  612 op add *tmp12 35 0
+  613 printchar 35
+  614 op add *tmp13 35 0
+  615 printchar 35
+  616 op add *tmp14 35 0
+  617 printchar 35
+  618 op add *tmp15 35 0
+  619 printchar 35
   620 printchar 34
   621 print ";"
   622 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   577 print ";"
   578 print "\n"
   579 label *label90
-    * set :packCfg:name "UNDERFLOW_GATE"
-    * set :packCfg:type @underflow-gate
-    * set :packCfg:y -3
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
   580 set :packCfg:ti 0
   581 label *label91
   582 print "const "

Modifications by Inline function call at line 33:1 (+33 instructions):
 
   621 set :packCfg:cu 200
   622 set :packCfg:pb 120
   623 set :packCfg:si 90
-    * setaddr :packCfg*retaddr *label27 (h:*label27)
-    * call *label0 *invalid :packCfg*retval (m:*label27) (h:*label27)
-    * label *label27
+  624 label *label93
+  625 print "const "
+  626 print :packCfg:name
+  627 print " "
+  628 print "= "
+  629 printchar 34
+  630 sensor *tmp0 :packCfg:type @id
+  631 op add *tmp1 35 *tmp0
+  632 printchar *tmp1
+  633 op add *tmp2 7 :packCfg:x
+  634 op floor *tmp3 *tmp2
+  635 op add *tmp4 35 *tmp3
+  636 printchar *tmp4
+  637 op add *tmp5 7 :packCfg:y
+  638 op floor *tmp6 *tmp5
+  639 op add *tmp7 35 *tmp6
+  640 printchar *tmp7
+  641 op add *tmp8 35 :packCfg:cu
+  642 printchar *tmp8
+  643 op add *tmp9 35 :packCfg:pb
+  644 printchar *tmp9
+  645 op add *tmp10 35 :packCfg:gr
+  646 printchar *tmp10
+  647 op add *tmp11 35 :packCfg:si
+  648 printchar *tmp11
+  649 op add *tmp12 35 :packCfg:ti
+  650 printchar *tmp12
+  651 op add *tmp13 35 :packCfg:mg
+  652 printchar *tmp13
+  653 op add *tmp14 35 :packCfg:th
+  654 printchar *tmp14
+  655 op add *tmp15 35 :packCfg:rotation
+  656 printchar *tmp15
+  657 printchar 34
+  658 print ";"
+  659 print "\n"
+  660 label *label94
   661 set :packCfg:name "BATTERY_LARGE"
   662 set :packCfg:type @battery-large
   663 set :packCfg:x 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   587 sensor *tmp0 @underflow-gate @id
   588 op add *tmp1 35 *tmp0
   589 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   590 printchar 42
-    * op add *tmp5 7 -3
-    * op floor *tmp6 4
-    * op add *tmp7 35 4
   591 printchar 39
-    * op add *tmp8 35 4
   592 printchar 39
-    * op add *tmp9 35 2
   593 printchar 37
-    * op add *tmp10 35 0
   594 printchar 35
-    * op add *tmp11 35 0
   595 printchar 35
-    * op add *tmp12 35 0
   596 printchar 35
-    * op add *tmp13 35 0
   597 printchar 35
-    * op add *tmp14 35 0
   598 printchar 35
-    * op add *tmp15 35 0
   599 printchar 35
   600 printchar 34
   601 print ";"
 
   609 set :packCfg:si 90
   610 label *label93
   611 print "const "
-    * print :packCfg:name
+  612 print "ADDITIVE_REC"
   613 print " "
   614 print "= "
   615 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  616 sensor *tmp0 @additive-reconstructor @id
   617 op add *tmp1 35 *tmp0
   618 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  619 op add *tmp2 7 0
+  620 op floor *tmp3 7
+  621 op add *tmp4 35 7
+  622 printchar 42
+  623 op add *tmp5 7 -5
+  624 op floor *tmp6 2
+  625 op add *tmp7 35 2
+  626 printchar 37
+  627 op add *tmp8 35 200
+  628 printchar 235
+  629 op add *tmp9 35 120
+  630 printchar 155
+  631 op add *tmp10 35 0
+  632 printchar 35
+  633 op add *tmp11 35 90
+  634 printchar 125
+  635 op add *tmp12 35 0
+  636 printchar 35
+  637 op add *tmp13 35 0
+  638 printchar 35
+  639 op add *tmp14 35 0
+  640 printchar 35
+  641 op add *tmp15 35 0
+  642 printchar 35
   643 printchar 34
   644 print ";"
   645 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   552 print ";"
   553 print "\n"
   554 label *label88
-    * set :packCfg:x 0
   555 set :packCfg:gr 0
   556 label *label89
   557 print "const "
 
   576 print ";"
   577 print "\n"
   578 label *label90
-    * set :packCfg:ti 0
   579 label *label91
   580 print "const "
   581 print "UNDERFLOW_GATE"
 
   599 print ";"
   600 print "\n"
   601 label *label92
-    * set :packCfg:name "ADDITIVE_REC"
-    * set :packCfg:type @additive-reconstructor
-    * set :packCfg:y -5
-    * set :packCfg:cu 200
-    * set :packCfg:pb 120
-    * set :packCfg:si 90
   602 label *label93
   603 print "const "
   604 print "ADDITIVE_REC"

Modifications by Inline function call at line 34:1 (+33 instructions):
 
   644 set :packCfg:pb 50
   645 set :packCfg:si 30
   646 set :packCfg:ti 20
-    * setaddr :packCfg*retaddr *label28 (h:*label28)
-    * call *label0 *invalid :packCfg*retval (m:*label28) (h:*label28)
-    * label *label28
+  647 label *label95
+  648 print "const "
+  649 print :packCfg:name
+  650 print " "
+  651 print "= "
+  652 printchar 34
+  653 sensor *tmp0 :packCfg:type @id
+  654 op add *tmp1 35 *tmp0
+  655 printchar *tmp1
+  656 op add *tmp2 7 :packCfg:x
+  657 op floor *tmp3 *tmp2
+  658 op add *tmp4 35 *tmp3
+  659 printchar *tmp4
+  660 op add *tmp5 7 :packCfg:y
+  661 op floor *tmp6 *tmp5
+  662 op add *tmp7 35 *tmp6
+  663 printchar *tmp7
+  664 op add *tmp8 35 :packCfg:cu
+  665 printchar *tmp8
+  666 op add *tmp9 35 :packCfg:pb
+  667 printchar *tmp9
+  668 op add *tmp10 35 :packCfg:gr
+  669 printchar *tmp10
+  670 op add *tmp11 35 :packCfg:si
+  671 printchar *tmp11
+  672 op add *tmp12 35 :packCfg:ti
+  673 printchar *tmp12
+  674 op add *tmp13 35 :packCfg:mg
+  675 printchar *tmp13
+  676 op add *tmp14 35 :packCfg:th
+  677 printchar *tmp14
+  678 op add *tmp15 35 :packCfg:rotation
+  679 printchar *tmp15
+  680 printchar 34
+  681 print ";"
+  682 print "\n"
+  683 label *label96
   684 set :packCfg:name "OVERFLOW_GATE4"
   685 set :packCfg:type @overflow-gate
   686 set :packCfg:x -4

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   608 sensor *tmp0 @additive-reconstructor @id
   609 op add *tmp1 35 *tmp0
   610 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   611 printchar 42
-    * op add *tmp5 7 -5
-    * op floor *tmp6 2
-    * op add *tmp7 35 2
   612 printchar 37
-    * op add *tmp8 35 200
   613 printchar 235
-    * op add *tmp9 35 120
   614 printchar 155
-    * op add *tmp10 35 0
   615 printchar 35
-    * op add *tmp11 35 90
   616 printchar 125
-    * op add *tmp12 35 0
   617 printchar 35
-    * op add *tmp13 35 0
   618 printchar 35
-    * op add *tmp14 35 0
   619 printchar 35
-    * op add *tmp15 35 0
   620 printchar 35
   621 printchar 34
   622 print ";"
 
   632 set :packCfg:ti 20
   633 label *label95
   634 print "const "
-    * print :packCfg:name
+  635 print "BATTERY_LARGE"
   636 print " "
   637 print "= "
   638 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  639 sensor *tmp0 @battery-large @id
   640 op add *tmp1 35 *tmp0
   641 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  642 op add *tmp2 7 5
+  643 op floor *tmp3 12
+  644 op add *tmp4 35 12
+  645 printchar 47
+  646 op add *tmp5 7 2
+  647 op floor *tmp6 9
+  648 op add *tmp7 35 9
+  649 printchar 44
+  650 op add *tmp8 35 0
+  651 printchar 35
+  652 op add *tmp9 35 50
+  653 printchar 85
+  654 op add *tmp10 35 0
+  655 printchar 35
+  656 op add *tmp11 35 30
+  657 printchar 65
+  658 op add *tmp12 35 20
+  659 printchar 55
+  660 op add *tmp13 35 0
+  661 printchar 35
+  662 op add *tmp14 35 0
+  663 printchar 35
+  664 op add *tmp15 35 0
+  665 printchar 35
   666 printchar 34
   667 print ";"
   668 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   622 print ";"
   623 print "\n"
   624 label *label94
-    * set :packCfg:name "BATTERY_LARGE"
-    * set :packCfg:type @battery-large
-    * set :packCfg:x 5
-    * set :packCfg:y 2
-    * set :packCfg:cu 0
-    * set :packCfg:pb 50
-    * set :packCfg:si 30
-    * set :packCfg:ti 20
   625 label *label95
   626 print "const "
   627 print "BATTERY_LARGE"

Modifications by Inline function call at line 35:1 (+33 instructions):
 
   667 set :packCfg:pb 2
   668 set :packCfg:si 0
   669 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label29 (h:*label29)
-    * call *label0 *invalid :packCfg*retval (m:*label29) (h:*label29)
-    * label *label29
+  670 label *label97
+  671 print "const "
+  672 print :packCfg:name
+  673 print " "
+  674 print "= "
+  675 printchar 34
+  676 sensor *tmp0 :packCfg:type @id
+  677 op add *tmp1 35 *tmp0
+  678 printchar *tmp1
+  679 op add *tmp2 7 :packCfg:x
+  680 op floor *tmp3 *tmp2
+  681 op add *tmp4 35 *tmp3
+  682 printchar *tmp4
+  683 op add *tmp5 7 :packCfg:y
+  684 op floor *tmp6 *tmp5
+  685 op add *tmp7 35 *tmp6
+  686 printchar *tmp7
+  687 op add *tmp8 35 :packCfg:cu
+  688 printchar *tmp8
+  689 op add *tmp9 35 :packCfg:pb
+  690 printchar *tmp9
+  691 op add *tmp10 35 :packCfg:gr
+  692 printchar *tmp10
+  693 op add *tmp11 35 :packCfg:si
+  694 printchar *tmp11
+  695 op add *tmp12 35 :packCfg:ti
+  696 printchar *tmp12
+  697 op add *tmp13 35 :packCfg:mg
+  698 printchar *tmp13
+  699 op add *tmp14 35 :packCfg:th
+  700 printchar *tmp14
+  701 op add *tmp15 35 :packCfg:rotation
+  702 printchar *tmp15
+  703 printchar 34
+  704 print ";"
+  705 print "\n"
+  706 label *label98
   707 set :packCfg:name "LASER_DRILL"
   708 set :packCfg:type @laser-drill
   709 set :packCfg:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   631 sensor *tmp0 @battery-large @id
   632 op add *tmp1 35 *tmp0
   633 printchar *tmp1
-    * op add *tmp2 7 5
-    * op floor *tmp3 12
-    * op add *tmp4 35 12
   634 printchar 47
-    * op add *tmp5 7 2
-    * op floor *tmp6 9
-    * op add *tmp7 35 9
   635 printchar 44
-    * op add *tmp8 35 0
   636 printchar 35
-    * op add *tmp9 35 50
   637 printchar 85
-    * op add *tmp10 35 0
   638 printchar 35
-    * op add *tmp11 35 30
   639 printchar 65
-    * op add *tmp12 35 20
   640 printchar 55
-    * op add *tmp13 35 0
   641 printchar 35
-    * op add *tmp14 35 0
   642 printchar 35
-    * op add *tmp15 35 0
   643 printchar 35
   644 printchar 34
   645 print ";"
 
   655 set :packCfg:ti 0
   656 label *label97
   657 print "const "
-    * print :packCfg:name
+  658 print "OVERFLOW_GATE4"
   659 print " "
   660 print "= "
   661 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  662 sensor *tmp0 @overflow-gate @id
   663 op add *tmp1 35 *tmp0
   664 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  665 op add *tmp2 7 -4
+  666 op floor *tmp3 3
+  667 op add *tmp4 35 3
+  668 printchar 38
+  669 op add *tmp5 7 0
+  670 op floor *tmp6 7
+  671 op add *tmp7 35 7
+  672 printchar 42
+  673 op add *tmp8 35 4
+  674 printchar 39
+  675 op add *tmp9 35 2
+  676 printchar 37
+  677 op add *tmp10 35 0
+  678 printchar 35
+  679 op add *tmp11 35 0
+  680 printchar 35
+  681 op add *tmp12 35 0
+  682 printchar 35
+  683 op add *tmp13 35 0
+  684 printchar 35
+  685 op add *tmp14 35 0
+  686 printchar 35
+  687 op add *tmp15 35 0
+  688 printchar 35
   689 printchar 34
   690 print ";"
   691 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   552 print ";"
   553 print "\n"
   554 label *label88
-    * set :packCfg:gr 0
   555 label *label89
   556 print "const "
   557 print "UNLOADER4"
 
   644 print ";"
   645 print "\n"
   646 label *label96
-    * set :packCfg:name "OVERFLOW_GATE4"
-    * set :packCfg:type @overflow-gate
-    * set :packCfg:x -4
   647 set :packCfg:y 0
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   648 label *label97
   649 print "const "
   650 print "OVERFLOW_GATE4"

Modifications by Inline function call at line 36:1 (+33 instructions):
 
   690 set :packCfg:gr 30
   691 set :packCfg:si 30
   692 set :packCfg:ti 20
-    * setaddr :packCfg*retaddr *label30 (h:*label30)
-    * call *label0 *invalid :packCfg*retval (m:*label30) (h:*label30)
-    * label *label30
+  693 label *label99
+  694 print "const "
+  695 print :packCfg:name
+  696 print " "
+  697 print "= "
+  698 printchar 34
+  699 sensor *tmp0 :packCfg:type @id
+  700 op add *tmp1 35 *tmp0
+  701 printchar *tmp1
+  702 op add *tmp2 7 :packCfg:x
+  703 op floor *tmp3 *tmp2
+  704 op add *tmp4 35 *tmp3
+  705 printchar *tmp4
+  706 op add *tmp5 7 :packCfg:y
+  707 op floor *tmp6 *tmp5
+  708 op add *tmp7 35 *tmp6
+  709 printchar *tmp7
+  710 op add *tmp8 35 :packCfg:cu
+  711 printchar *tmp8
+  712 op add *tmp9 35 :packCfg:pb
+  713 printchar *tmp9
+  714 op add *tmp10 35 :packCfg:gr
+  715 printchar *tmp10
+  716 op add *tmp11 35 :packCfg:si
+  717 printchar *tmp11
+  718 op add *tmp12 35 :packCfg:ti
+  719 printchar *tmp12
+  720 op add *tmp13 35 :packCfg:mg
+  721 printchar *tmp13
+  722 op add *tmp14 35 :packCfg:th
+  723 printchar *tmp14
+  724 op add *tmp15 35 :packCfg:rotation
+  725 printchar *tmp15
+  726 printchar 34
+  727 print ";"
+  728 print "\n"
+  729 label *label100
   730 set :packCfg:name "SOLAR_PANEL"
   731 set :packCfg:type @solar-panel
   732 set :packCfg:cu 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   654 sensor *tmp0 @overflow-gate @id
   655 op add *tmp1 35 *tmp0
   656 printchar *tmp1
-    * op add *tmp2 7 -4
-    * op floor *tmp3 3
-    * op add *tmp4 35 3
   657 printchar 38
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   658 printchar 42
-    * op add *tmp8 35 4
   659 printchar 39
-    * op add *tmp9 35 2
   660 printchar 37
-    * op add *tmp10 35 0
   661 printchar 35
-    * op add *tmp11 35 0
   662 printchar 35
-    * op add *tmp12 35 0
   663 printchar 35
-    * op add *tmp13 35 0
   664 printchar 35
-    * op add *tmp14 35 0
   665 printchar 35
-    * op add *tmp15 35 0
   666 printchar 35
   667 printchar 34
   668 print ";"
 
   678 set :packCfg:ti 20
   679 label *label99
   680 print "const "
-    * print :packCfg:name
+  681 print "LASER_DRILL"
   682 print " "
   683 print "= "
   684 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  685 sensor *tmp0 @laser-drill @id
   686 op add *tmp1 35 *tmp0
   687 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  688 op add *tmp2 7 0
+  689 op floor *tmp3 7
+  690 op add *tmp4 35 7
+  691 printchar 42
+  692 op add *tmp5 7 0
+  693 op floor *tmp6 7
+  694 op add *tmp7 35 7
+  695 printchar 42
+  696 op add *tmp8 35 35
+  697 printchar 70
+  698 op add *tmp9 35 0
+  699 printchar 35
+  700 op add *tmp10 35 30
+  701 printchar 65
+  702 op add *tmp11 35 30
+  703 printchar 65
+  704 op add *tmp12 35 20
+  705 printchar 55
+  706 op add *tmp13 35 0
+  707 printchar 35
+  708 op add *tmp14 35 0
+  709 printchar 35
+  710 op add *tmp15 35 0
+  711 printchar 35
   712 printchar 34
   713 print ";"
   714 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   668 print ";"
   669 print "\n"
   670 label *label98
-    * set :packCfg:name "LASER_DRILL"
-    * set :packCfg:type @laser-drill
   671 set :packCfg:x 0
-    * set :packCfg:cu 35
-    * set :packCfg:pb 0
-    * set :packCfg:gr 30
-    * set :packCfg:si 30
-    * set :packCfg:ti 20
   672 label *label99
   673 print "const "
   674 print "LASER_DRILL"

Modifications by Inline function call at line 37:1 (+33 instructions):
 
   713 set :packCfg:gr 0
   714 set :packCfg:si 8
   715 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label31 (h:*label31)
-    * call *label0 *invalid :packCfg*retval (m:*label31) (h:*label31)
-    * label *label31
+  716 label *label101
+  717 print "const "
+  718 print :packCfg:name
+  719 print " "
+  720 print "= "
+  721 printchar 34
+  722 sensor *tmp0 :packCfg:type @id
+  723 op add *tmp1 35 *tmp0
+  724 printchar *tmp1
+  725 op add *tmp2 7 :packCfg:x
+  726 op floor *tmp3 *tmp2
+  727 op add *tmp4 35 *tmp3
+  728 printchar *tmp4
+  729 op add *tmp5 7 :packCfg:y
+  730 op floor *tmp6 *tmp5
+  731 op add *tmp7 35 *tmp6
+  732 printchar *tmp7
+  733 op add *tmp8 35 :packCfg:cu
+  734 printchar *tmp8
+  735 op add *tmp9 35 :packCfg:pb
+  736 printchar *tmp9
+  737 op add *tmp10 35 :packCfg:gr
+  738 printchar *tmp10
+  739 op add *tmp11 35 :packCfg:si
+  740 printchar *tmp11
+  741 op add *tmp12 35 :packCfg:ti
+  742 printchar *tmp12
+  743 op add *tmp13 35 :packCfg:mg
+  744 printchar *tmp13
+  745 op add *tmp14 35 :packCfg:th
+  746 printchar *tmp14
+  747 op add *tmp15 35 :packCfg:rotation
+  748 printchar *tmp15
+  749 printchar 34
+  750 print ";"
+  751 print "\n"
+  752 label *label102
   753 set :packCfg:name "CONTAINER"
   754 set :packCfg:type @container
   755 set :packCfg:pb 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   678 sensor *tmp0 @laser-drill @id
   679 op add *tmp1 35 *tmp0
   680 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   681 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   682 printchar 42
-    * op add *tmp8 35 35
   683 printchar 70
-    * op add *tmp9 35 0
   684 printchar 35
-    * op add *tmp10 35 30
   685 printchar 65
-    * op add *tmp11 35 30
   686 printchar 65
-    * op add *tmp12 35 20
   687 printchar 55
-    * op add *tmp13 35 0
   688 printchar 35
-    * op add *tmp14 35 0
   689 printchar 35
-    * op add *tmp15 35 0
   690 printchar 35
   691 printchar 34
   692 print ";"
 
   701 set :packCfg:ti 0
   702 label *label101
   703 print "const "
-    * print :packCfg:name
+  704 print "SOLAR_PANEL"
   705 print " "
   706 print "= "
   707 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  708 sensor *tmp0 @solar-panel @id
   709 op add *tmp1 35 *tmp0
   710 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  711 op add *tmp2 7 0
+  712 op floor *tmp3 7
+  713 op add *tmp4 35 7
+  714 printchar 42
+  715 op add *tmp5 7 0
+  716 op floor *tmp6 7
+  717 op add *tmp7 35 7
+  718 printchar 42
+  719 op add *tmp8 35 0
+  720 printchar 35
+  721 op add *tmp9 35 10
+  722 printchar 45
+  723 op add *tmp10 35 0
+  724 printchar 35
+  725 op add *tmp11 35 8
+  726 printchar 43
+  727 op add *tmp12 35 0
+  728 printchar 35
+  729 op add *tmp13 35 0
+  730 printchar 35
+  731 op add *tmp14 35 0
+  732 printchar 35
+  733 op add *tmp15 35 0
+  734 printchar 35
   735 printchar 34
   736 print ";"
   737 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   692 print ";"
   693 print "\n"
   694 label *label100
-    * set :packCfg:name "SOLAR_PANEL"
-    * set :packCfg:type @solar-panel
   695 set :packCfg:cu 0
-    * set :packCfg:pb 10
   696 set :packCfg:gr 0
-    * set :packCfg:si 8
-    * set :packCfg:ti 0
   697 label *label101
   698 print "const "
   699 print "SOLAR_PANEL"

Modifications by Inline function call at line 38:1 (+33 instructions):
 
   736 set :packCfg:pb 0
   737 set :packCfg:si 0
   738 set :packCfg:ti 100
-    * setaddr :packCfg*retaddr *label32 (h:*label32)
-    * call *label0 *invalid :packCfg*retval (m:*label32) (h:*label32)
-    * label *label32
+  739 label *label103
+  740 print "const "
+  741 print :packCfg:name
+  742 print " "
+  743 print "= "
+  744 printchar 34
+  745 sensor *tmp0 :packCfg:type @id
+  746 op add *tmp1 35 *tmp0
+  747 printchar *tmp1
+  748 op add *tmp2 7 :packCfg:x
+  749 op floor *tmp3 *tmp2
+  750 op add *tmp4 35 *tmp3
+  751 printchar *tmp4
+  752 op add *tmp5 7 :packCfg:y
+  753 op floor *tmp6 *tmp5
+  754 op add *tmp7 35 *tmp6
+  755 printchar *tmp7
+  756 op add *tmp8 35 :packCfg:cu
+  757 printchar *tmp8
+  758 op add *tmp9 35 :packCfg:pb
+  759 printchar *tmp9
+  760 op add *tmp10 35 :packCfg:gr
+  761 printchar *tmp10
+  762 op add *tmp11 35 :packCfg:si
+  763 printchar *tmp11
+  764 op add *tmp12 35 :packCfg:ti
+  765 printchar *tmp12
+  766 op add *tmp13 35 :packCfg:mg
+  767 printchar *tmp13
+  768 op add *tmp14 35 :packCfg:th
+  769 printchar *tmp14
+  770 op add *tmp15 35 :packCfg:rotation
+  771 printchar *tmp15
+  772 printchar 34
+  773 print ";"
+  774 print "\n"
+  775 label *label104
   776 set :packCfg:name "SMELTER2"
   777 set :packCfg:type @silicon-smelter
   778 set :packCfg:x 4.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   703 sensor *tmp0 @solar-panel @id
   704 op add *tmp1 35 *tmp0
   705 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   706 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   707 printchar 42
-    * op add *tmp8 35 0
   708 printchar 35
-    * op add *tmp9 35 10
   709 printchar 45
-    * op add *tmp10 35 0
   710 printchar 35
-    * op add *tmp11 35 8
   711 printchar 43
-    * op add *tmp12 35 0
   712 printchar 35
-    * op add *tmp13 35 0
   713 printchar 35
-    * op add *tmp14 35 0
   714 printchar 35
-    * op add *tmp15 35 0
   715 printchar 35
   716 printchar 34
   717 print ";"
 
   724 set :packCfg:ti 100
   725 label *label103
   726 print "const "
-    * print :packCfg:name
+  727 print "CONTAINER"
   728 print " "
   729 print "= "
   730 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  731 sensor *tmp0 @container @id
   732 op add *tmp1 35 *tmp0
   733 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  734 op add *tmp2 7 0
+  735 op floor *tmp3 7
+  736 op add *tmp4 35 7
+  737 printchar 42
+  738 op add *tmp5 7 0
+  739 op floor *tmp6 7
+  740 op add *tmp7 35 7
+  741 printchar 42
+  742 op add *tmp8 35 0
+  743 printchar 35
+  744 op add *tmp9 35 0
+  745 printchar 35
+  746 op add *tmp10 35 0
+  747 printchar 35
+  748 op add *tmp11 35 0
+  749 printchar 35
+  750 op add *tmp12 35 100
+  751 printchar 135
+  752 op add *tmp13 35 0
+  753 printchar 35
+  754 op add *tmp14 35 0
+  755 printchar 35
+  756 op add *tmp15 35 0
+  757 printchar 35
   758 printchar 34
   759 print ";"
   760 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   644 print ";"
   645 print "\n"
   646 label *label96
-    * set :packCfg:y 0
   647 label *label97
   648 print "const "
   649 print "OVERFLOW_GATE4"
 
   667 print ";"
   668 print "\n"
   669 label *label98
-    * set :packCfg:x 0
   670 label *label99
   671 print "const "
   672 print "LASER_DRILL"
 
   690 print ";"
   691 print "\n"
   692 label *label100
-    * set :packCfg:cu 0
   693 set :packCfg:gr 0
   694 label *label101
   695 print "const "
 
   714 print ";"
   715 print "\n"
   716 label *label102
-    * set :packCfg:name "CONTAINER"
-    * set :packCfg:type @container
-    * set :packCfg:pb 0
   717 set :packCfg:si 0
-    * set :packCfg:ti 100
   718 label *label103
   719 print "const "
   720 print "CONTAINER"

Modifications by Inline function 'packCfg' defined at line 47:1 (+194 instructions):
 
   759 set :packCfg:cu 30
   760 set :packCfg:pb 25
   761 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label33 (h:*label33)
-    * call *label0 *invalid :packCfg*retval (m:*label33) (h:*label33)
-    * label *label33
+  762 label *label105
+  763 print "const "
+  764 print :packCfg:name
+  765 print " "
+  766 print "= "
+  767 printchar 34
+  768 sensor *tmp0 :packCfg:type @id
+  769 op add *tmp1 35 *tmp0
+  770 printchar *tmp1
+  771 op add *tmp2 7 :packCfg:x
+  772 op floor *tmp3 *tmp2
+  773 op add *tmp4 35 *tmp3
+  774 printchar *tmp4
+  775 op add *tmp5 7 :packCfg:y
+  776 op floor *tmp6 *tmp5
+  777 op add *tmp7 35 *tmp6
+  778 printchar *tmp7
+  779 op add *tmp8 35 :packCfg:cu
+  780 printchar *tmp8
+  781 op add *tmp9 35 :packCfg:pb
+  782 printchar *tmp9
+  783 op add *tmp10 35 :packCfg:gr
+  784 printchar *tmp10
+  785 op add *tmp11 35 :packCfg:si
+  786 printchar *tmp11
+  787 op add *tmp12 35 :packCfg:ti
+  788 printchar *tmp12
+  789 op add *tmp13 35 :packCfg:mg
+  790 printchar *tmp13
+  791 op add *tmp14 35 :packCfg:th
+  792 printchar *tmp14
+  793 op add *tmp15 35 :packCfg:rotation
+  794 printchar *tmp15
+  795 printchar 34
+  796 print ";"
+  797 print "\n"
+  798 label *label106
   799 set :packCfg:name "INVERTED_SORT4"
   800 set :packCfg:type @inverted-sorter
   801 set :packCfg:x 3
   802 set :packCfg:y 0
   803 set :packCfg:cu 2
   804 set :packCfg:pb 2
-    * setaddr :packCfg*retaddr *label34 (h:*label34)
-    * call *label0 *invalid :packCfg*retval (m:*label34) (h:*label34)
-    * label *label34
+  805 label *label107
+  806 print "const "
+  807 print :packCfg:name
+  808 print " "
+  809 print "= "
+  810 printchar 34
+  811 sensor *tmp0 :packCfg:type @id
+  812 op add *tmp1 35 *tmp0
+  813 printchar *tmp1
+  814 op add *tmp2 7 :packCfg:x
+  815 op floor *tmp3 *tmp2
+  816 op add *tmp4 35 *tmp3
+  817 printchar *tmp4
+  818 op add *tmp5 7 :packCfg:y
+  819 op floor *tmp6 *tmp5
+  820 op add *tmp7 35 *tmp6
+  821 printchar *tmp7
+  822 op add *tmp8 35 :packCfg:cu
+  823 printchar *tmp8
+  824 op add *tmp9 35 :packCfg:pb
+  825 printchar *tmp9
+  826 op add *tmp10 35 :packCfg:gr
+  827 printchar *tmp10
+  828 op add *tmp11 35 :packCfg:si
+  829 printchar *tmp11
+  830 op add *tmp12 35 :packCfg:ti
+  831 printchar *tmp12
+  832 op add *tmp13 35 :packCfg:mg
+  833 printchar *tmp13
+  834 op add *tmp14 35 :packCfg:th
+  835 printchar *tmp14
+  836 op add *tmp15 35 :packCfg:rotation
+  837 printchar *tmp15
+  838 printchar 34
+  839 print ";"
+  840 print "\n"
+  841 label *label108
   842 set :packCfg:name "INVERTED_SORT5"
   843 set :packCfg:y -1
-    * setaddr :packCfg*retaddr *label35 (h:*label35)
-    * call *label0 *invalid :packCfg*retval (m:*label35) (h:*label35)
-    * label *label35
+  844 label *label109
+  845 print "const "
+  846 print :packCfg:name
+  847 print " "
+  848 print "= "
+  849 printchar 34
+  850 sensor *tmp0 :packCfg:type @id
+  851 op add *tmp1 35 *tmp0
+  852 printchar *tmp1
+  853 op add *tmp2 7 :packCfg:x
+  854 op floor *tmp3 *tmp2
+  855 op add *tmp4 35 *tmp3
+  856 printchar *tmp4
+  857 op add *tmp5 7 :packCfg:y
+  858 op floor *tmp6 *tmp5
+  859 op add *tmp7 35 *tmp6
+  860 printchar *tmp7
+  861 op add *tmp8 35 :packCfg:cu
+  862 printchar *tmp8
+  863 op add *tmp9 35 :packCfg:pb
+  864 printchar *tmp9
+  865 op add *tmp10 35 :packCfg:gr
+  866 printchar *tmp10
+  867 op add *tmp11 35 :packCfg:si
+  868 printchar *tmp11
+  869 op add *tmp12 35 :packCfg:ti
+  870 printchar *tmp12
+  871 op add *tmp13 35 :packCfg:mg
+  872 printchar *tmp13
+  873 op add *tmp14 35 :packCfg:th
+  874 printchar *tmp14
+  875 op add *tmp15 35 :packCfg:rotation
+  876 printchar *tmp15
+  877 printchar 34
+  878 print ";"
+  879 print "\n"
+  880 label *label110
   881 set :packCfg:name "UNLOADER5"
   882 set :packCfg:type @unloader
   883 set :packCfg:y 3
 
   885 set :packCfg:pb 0
   886 set :packCfg:si 30
   887 set :packCfg:ti 25
-    * setaddr :packCfg*retaddr *label36 (h:*label36)
-    * call *label0 *invalid :packCfg*retval (m:*label36) (h:*label36)
-    * label *label36
+  888 label *label111
+  889 print "const "
+  890 print :packCfg:name
+  891 print " "
+  892 print "= "
+  893 printchar 34
+  894 sensor *tmp0 :packCfg:type @id
+  895 op add *tmp1 35 *tmp0
+  896 printchar *tmp1
+  897 op add *tmp2 7 :packCfg:x
+  898 op floor *tmp3 *tmp2
+  899 op add *tmp4 35 *tmp3
+  900 printchar *tmp4
+  901 op add *tmp5 7 :packCfg:y
+  902 op floor *tmp6 *tmp5
+  903 op add *tmp7 35 *tmp6
+  904 printchar *tmp7
+  905 op add *tmp8 35 :packCfg:cu
+  906 printchar *tmp8
+  907 op add *tmp9 35 :packCfg:pb
+  908 printchar *tmp9
+  909 op add *tmp10 35 :packCfg:gr
+  910 printchar *tmp10
+  911 op add *tmp11 35 :packCfg:si
+  912 printchar *tmp11
+  913 op add *tmp12 35 :packCfg:ti
+  914 printchar *tmp12
+  915 op add *tmp13 35 :packCfg:mg
+  916 printchar *tmp13
+  917 op add *tmp14 35 :packCfg:th
+  918 printchar *tmp14
+  919 op add *tmp15 35 :packCfg:rotation
+  920 printchar *tmp15
+  921 printchar 34
+  922 print ";"
+  923 print "\n"
+  924 label *label112
   925 set :packCfg:name "UNLOADER6"
   926 set :packCfg:x 1
   927 set :packCfg:y -2
-    * setaddr :packCfg*retaddr *label37 (h:*label37)
-    * call *label0 *invalid :packCfg*retval (m:*label37) (h:*label37)
-    * label *label37
+  928 label *label113
+  929 print "const "
+  930 print :packCfg:name
+  931 print " "
+  932 print "= "
+  933 printchar 34
+  934 sensor *tmp0 :packCfg:type @id
+  935 op add *tmp1 35 *tmp0
+  936 printchar *tmp1
+  937 op add *tmp2 7 :packCfg:x
+  938 op floor *tmp3 *tmp2
+  939 op add *tmp4 35 *tmp3
+  940 printchar *tmp4
+  941 op add *tmp5 7 :packCfg:y
+  942 op floor *tmp6 *tmp5
+  943 op add *tmp7 35 *tmp6
+  944 printchar *tmp7
+  945 op add *tmp8 35 :packCfg:cu
+  946 printchar *tmp8
+  947 op add *tmp9 35 :packCfg:pb
+  948 printchar *tmp9
+  949 op add *tmp10 35 :packCfg:gr
+  950 printchar *tmp10
+  951 op add *tmp11 35 :packCfg:si
+  952 printchar *tmp11
+  953 op add *tmp12 35 :packCfg:ti
+  954 printchar *tmp12
+  955 op add *tmp13 35 :packCfg:mg
+  956 printchar *tmp13
+  957 op add *tmp14 35 :packCfg:th
+  958 printchar *tmp14
+  959 op add *tmp15 35 :packCfg:rotation
+  960 printchar *tmp15
+  961 printchar 34
+  962 print ";"
+  963 print "\n"
+  964 label *label114
   965 set :packCfg:name "UNDERFLOW_GATE2"
   966 set :packCfg:type @underflow-gate
   967 set :packCfg:y -3
 
   969 set :packCfg:pb 2
   970 set :packCfg:si 0
   971 set :packCfg:ti 0
-    * setaddr :packCfg*retaddr *label38 (h:*label38)
-    * call *label0 *invalid :packCfg*retval (m:*label38) (h:*label38)
-    * label *label38
+  972 label *label115
+  973 print "const "
+  974 print :packCfg:name
+  975 print " "
+  976 print "= "
+  977 printchar 34
+  978 sensor *tmp0 :packCfg:type @id
+  979 op add *tmp1 35 *tmp0
+  980 printchar *tmp1
+  981 op add *tmp2 7 :packCfg:x
+  982 op floor *tmp3 *tmp2
+  983 op add *tmp4 35 *tmp3
+  984 printchar *tmp4
+  985 op add *tmp5 7 :packCfg:y
+  986 op floor *tmp6 *tmp5
+  987 op add *tmp7 35 *tmp6
+  988 printchar *tmp7
+  989 op add *tmp8 35 :packCfg:cu
+  990 printchar *tmp8
+  991 op add *tmp9 35 :packCfg:pb
+  992 printchar *tmp9
+  993 op add *tmp10 35 :packCfg:gr
+  994 printchar *tmp10
+  995 op add *tmp11 35 :packCfg:si
+  996 printchar *tmp11
+  997 op add *tmp12 35 :packCfg:ti
+  998 printchar *tmp12
+  999 op add *tmp13 35 :packCfg:mg
+ 1000 printchar *tmp13
+ 1001 op add *tmp14 35 :packCfg:th
+ 1002 printchar *tmp14
+ 1003 op add *tmp15 35 :packCfg:rotation
+ 1004 printchar *tmp15
+ 1005 printchar 34
+ 1006 print ";"
+ 1007 print "\n"
+ 1008 label *label116
  1009 set :packCfg:name "MULTIPLICATIVE_REC"
  1010 set :packCfg:type @multiplicative-reconstructor
  1011 set :packCfg:x 4
 
  1015 set :packCfg:si 450
  1016 set :packCfg:ti 350
  1017 set :packCfg:th 650
-    * setaddr :packCfg*retaddr *label39 (h:*label39)
-    * call *label0 *invalid :packCfg*retval (m:*label39) (h:*label39)
-    * label *label39
+ 1018 label *label117
+ 1019 print "const "
+ 1020 print :packCfg:name
+ 1021 print " "
+ 1022 print "= "
+ 1023 printchar 34
+ 1024 sensor *tmp0 :packCfg:type @id
+ 1025 op add *tmp1 35 *tmp0
+ 1026 printchar *tmp1
+ 1027 op add *tmp2 7 :packCfg:x
+ 1028 op floor *tmp3 *tmp2
+ 1029 op add *tmp4 35 *tmp3
+ 1030 printchar *tmp4
+ 1031 op add *tmp5 7 :packCfg:y
+ 1032 op floor *tmp6 *tmp5
+ 1033 op add *tmp7 35 *tmp6
+ 1034 printchar *tmp7
+ 1035 op add *tmp8 35 :packCfg:cu
+ 1036 printchar *tmp8
+ 1037 op add *tmp9 35 :packCfg:pb
+ 1038 printchar *tmp9
+ 1039 op add *tmp10 35 :packCfg:gr
+ 1040 printchar *tmp10
+ 1041 op add *tmp11 35 :packCfg:si
+ 1042 printchar *tmp11
+ 1043 op add *tmp12 35 :packCfg:ti
+ 1044 printchar *tmp12
+ 1045 op add *tmp13 35 :packCfg:mg
+ 1046 printchar *tmp13
+ 1047 op add *tmp14 35 :packCfg:th
+ 1048 printchar *tmp14
+ 1049 op add *tmp15 35 :packCfg:rotation
+ 1050 printchar *tmp15
+ 1051 printchar 34
+ 1052 print ";"
+ 1053 print "\n"
+ 1054 label *label118
  1055 printflush message1
  1056 end
-    * label *label0
-    * print "const "
-    * print :packCfg:name
-    * print " "
-    * print "= "
-    * printchar 34
-    * sensor *tmp0 :packCfg:type @id
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
-    * printchar 34
-    * print ";"
-    * print "\n"
-    * label *label40
-    * return :packCfg*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-14 instructions):
 
   724 sensor *tmp0 @container @id
   725 op add *tmp1 35 *tmp0
   726 printchar *tmp1
-    * op add *tmp2 7 0
-    * op floor *tmp3 7
-    * op add *tmp4 35 7
   727 printchar 42
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   728 printchar 42
-    * op add *tmp8 35 0
   729 printchar 35
-    * op add *tmp9 35 0
   730 printchar 35
-    * op add *tmp10 35 0
   731 printchar 35
-    * op add *tmp11 35 0
   732 printchar 35
-    * op add *tmp12 35 100
   733 printchar 135
-    * op add *tmp13 35 0
   734 printchar 35
-    * op add *tmp14 35 0
   735 printchar 35
-    * op add *tmp15 35 0
   736 printchar 35
   737 printchar 34
   738 print ";"
 
   747 set :packCfg:ti 0
   748 label *label105
   749 print "const "
-    * print :packCfg:name
+  750 print "SMELTER2"
   751 print " "
   752 print "= "
   753 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  754 sensor *tmp0 @silicon-smelter @id
   755 op add *tmp1 35 *tmp0
   756 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  757 op add *tmp2 7 4.5
+  758 op floor *tmp3 11.5
+  759 op add *tmp4 35 11
+  760 printchar 46
+  761 op add *tmp5 7 -0.5
+  762 op floor *tmp6 6.5
+  763 op add *tmp7 35 6
+  764 printchar 41
+  765 op add *tmp8 35 30
+  766 printchar 65
+  767 op add *tmp9 35 25
+  768 printchar 60
+  769 op add *tmp10 35 0
+  770 printchar 35
+  771 op add *tmp11 35 0
+  772 printchar 35
+  773 op add *tmp12 35 0
+  774 printchar 35
+  775 op add *tmp13 35 0
+  776 printchar 35
+  777 op add *tmp14 35 0
+  778 printchar 35
+  779 op add *tmp15 35 0
+  780 printchar 35
   781 printchar 34
   782 print ";"
   783 print "\n"
 
   790 set :packCfg:pb 2
   791 label *label107
   792 print "const "
-    * print :packCfg:name
+  793 print "INVERTED_SORT4"
   794 print " "
   795 print "= "
   796 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  797 sensor *tmp0 @inverted-sorter @id
   798 op add *tmp1 35 *tmp0
   799 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  800 op add *tmp2 7 3
+  801 op floor *tmp3 10
+  802 op add *tmp4 35 10
+  803 printchar 45
+  804 op add *tmp5 7 0
+  805 op floor *tmp6 7
+  806 op add *tmp7 35 7
+  807 printchar 42
+  808 op add *tmp8 35 2
+  809 printchar 37
+  810 op add *tmp9 35 2
+  811 printchar 37
+  812 op add *tmp10 35 0
+  813 printchar 35
+  814 op add *tmp11 35 0
+  815 printchar 35
+  816 op add *tmp12 35 0
+  817 printchar 35
+  818 op add *tmp13 35 0
+  819 printchar 35
+  820 op add *tmp14 35 0
+  821 printchar 35
+  822 op add *tmp15 35 0
+  823 printchar 35
   824 printchar 34
   825 print ";"
   826 print "\n"
 
   829 set :packCfg:y -1
   830 label *label109
   831 print "const "
-    * print :packCfg:name
+  832 print "INVERTED_SORT5"
   833 print " "
   834 print "= "
   835 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  836 sensor *tmp0 @inverted-sorter @id
   837 op add *tmp1 35 *tmp0
   838 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  839 op add *tmp2 7 3
+  840 op floor *tmp3 10
+  841 op add *tmp4 35 10
+  842 printchar 45
+  843 op add *tmp5 7 -1
+  844 op floor *tmp6 6
+  845 op add *tmp7 35 6
+  846 printchar 41
+  847 op add *tmp8 35 2
+  848 printchar 37
+  849 op add *tmp9 35 2
+  850 printchar 37
+  851 op add *tmp10 35 0
+  852 printchar 35
+  853 op add *tmp11 35 0
+  854 printchar 35
+  855 op add *tmp12 35 0
+  856 printchar 35
+  857 op add *tmp13 35 0
+  858 printchar 35
+  859 op add *tmp14 35 0
+  860 printchar 35
+  861 op add *tmp15 35 0
+  862 printchar 35
   863 printchar 34
   864 print ";"
   865 print "\n"
 
   873 set :packCfg:ti 25
   874 label *label111
   875 print "const "
-    * print :packCfg:name
+  876 print "UNLOADER5"
   877 print " "
   878 print "= "
   879 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  880 sensor *tmp0 @unloader @id
   881 op add *tmp1 35 *tmp0
   882 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  883 op add *tmp2 7 3
+  884 op floor *tmp3 10
+  885 op add *tmp4 35 10
+  886 printchar 45
+  887 op add *tmp5 7 3
+  888 op floor *tmp6 10
+  889 op add *tmp7 35 10
+  890 printchar 45
+  891 op add *tmp8 35 0
+  892 printchar 35
+  893 op add *tmp9 35 0
+  894 printchar 35
+  895 op add *tmp10 35 0
+  896 printchar 35
+  897 op add *tmp11 35 30
+  898 printchar 65
+  899 op add *tmp12 35 25
+  900 printchar 60
+  901 op add *tmp13 35 0
+  902 printchar 35
+  903 op add *tmp14 35 0
+  904 printchar 35
+  905 op add *tmp15 35 0
+  906 printchar 35
   907 printchar 34
   908 print ";"
   909 print "\n"
 
   913 set :packCfg:y -2
   914 label *label113
   915 print "const "
-    * print :packCfg:name
+  916 print "UNLOADER6"
   917 print " "
   918 print "= "
   919 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  920 sensor *tmp0 @unloader @id
   921 op add *tmp1 35 *tmp0
   922 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  923 op add *tmp2 7 1
+  924 op floor *tmp3 8
+  925 op add *tmp4 35 8
+  926 printchar 43
+  927 op add *tmp5 7 -2
+  928 op floor *tmp6 5
+  929 op add *tmp7 35 5
+  930 printchar 40
+  931 op add *tmp8 35 0
+  932 printchar 35
+  933 op add *tmp9 35 0
+  934 printchar 35
+  935 op add *tmp10 35 0
+  936 printchar 35
+  937 op add *tmp11 35 30
+  938 printchar 65
+  939 op add *tmp12 35 25
+  940 printchar 60
+  941 op add *tmp13 35 0
+  942 printchar 35
+  943 op add *tmp14 35 0
+  944 printchar 35
+  945 op add *tmp15 35 0
+  946 printchar 35
   947 printchar 34
   948 print ";"
   949 print "\n"
 
   957 set :packCfg:ti 0
   958 label *label115
   959 print "const "
-    * print :packCfg:name
+  960 print "UNDERFLOW_GATE2"
   961 print " "
   962 print "= "
   963 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+  964 sensor *tmp0 @underflow-gate @id
   965 op add *tmp1 35 *tmp0
   966 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+  967 op add *tmp2 7 1
+  968 op floor *tmp3 8
+  969 op add *tmp4 35 8
+  970 printchar 43
+  971 op add *tmp5 7 -3
+  972 op floor *tmp6 4
+  973 op add *tmp7 35 4
+  974 printchar 39
+  975 op add *tmp8 35 4
+  976 printchar 39
+  977 op add *tmp9 35 2
+  978 printchar 37
+  979 op add *tmp10 35 0
+  980 printchar 35
+  981 op add *tmp11 35 0
+  982 printchar 35
+  983 op add *tmp12 35 0
+  984 printchar 35
+  985 op add *tmp13 35 0
+  986 printchar 35
+  987 op add *tmp14 35 0
+  988 printchar 35
+  989 op add *tmp15 35 0
+  990 printchar 35
   991 printchar 34
   992 print ";"
   993 print "\n"
 
  1003 set :packCfg:th 650
  1004 label *label117
  1005 print "const "
-    * print :packCfg:name
+ 1006 print "MULTIPLICATIVE_REC"
  1007 print " "
  1008 print "= "
  1009 printchar 34
-    * sensor *tmp0 :packCfg:type @id
+ 1010 sensor *tmp0 @multiplicative-reconstructor @id
  1011 op add *tmp1 35 *tmp0
  1012 printchar *tmp1
-    * op add *tmp2 7 :packCfg:x
-    * op floor *tmp3 *tmp2
-    * op add *tmp4 35 *tmp3
-    * printchar *tmp4
-    * op add *tmp5 7 :packCfg:y
-    * op floor *tmp6 *tmp5
-    * op add *tmp7 35 *tmp6
-    * printchar *tmp7
-    * op add *tmp8 35 :packCfg:cu
-    * printchar *tmp8
-    * op add *tmp9 35 :packCfg:pb
-    * printchar *tmp9
-    * op add *tmp10 35 :packCfg:gr
-    * printchar *tmp10
-    * op add *tmp11 35 :packCfg:si
-    * printchar *tmp11
-    * op add *tmp12 35 :packCfg:ti
-    * printchar *tmp12
-    * op add *tmp13 35 :packCfg:mg
-    * printchar *tmp13
-    * op add *tmp14 35 :packCfg:th
-    * printchar *tmp14
-    * op add *tmp15 35 :packCfg:rotation
-    * printchar *tmp15
+ 1013 op add *tmp2 7 4
+ 1014 op floor *tmp3 11
+ 1015 op add *tmp4 35 11
+ 1016 printchar 46
+ 1017 op add *tmp5 7 -4
+ 1018 op floor *tmp6 3
+ 1019 op add *tmp7 35 3
+ 1020 printchar 38
+ 1021 op add *tmp8 35 0
+ 1022 printchar 35
+ 1023 op add *tmp9 35 650
+ 1024 printchar 685
+ 1025 op add *tmp10 35 0
+ 1026 printchar 35
+ 1027 op add *tmp11 35 450
+ 1028 printchar 485
+ 1029 op add *tmp12 35 350
+ 1030 printchar 385
+ 1031 op add *tmp13 35 0
+ 1032 printchar 35
+ 1033 op add *tmp14 35 650
+ 1034 printchar 685
+ 1035 op add *tmp15 35 0
+ 1036 printchar 35
  1037 printchar 34
  1038 print ";"
  1039 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-144 instructions):
-    * set :packCfg:th 0
     0 label *label41
     1 print "const "
     2 print "PRESS"
 
   319 print ";"
   320 print "\n"
   321 label *label68
-    * set :packCfg:rotation 0
   322 label *label69
   323 print "const "
   324 print "UNLOADER3"
 
   526 print ";"
   527 print "\n"
   528 label *label86
-    * set :packCfg:mg 0
   529 label *label87
   530 print "const "
   531 print "PAYLOAD_ROUTER"
 
   687 print ";"
   688 print "\n"
   689 label *label100
-    * set :packCfg:gr 0
   690 label *label101
   691 print "const "
   692 print "SOLAR_PANEL"
 
   710 print ";"
   711 print "\n"
   712 label *label102
-    * set :packCfg:si 0
   713 label *label103
   714 print "const "
   715 print "CONTAINER"
 
   733 print ";"
   734 print "\n"
   735 label *label104
-    * set :packCfg:name "SMELTER2"
-    * set :packCfg:type @silicon-smelter
-    * set :packCfg:x 4.5
-    * set :packCfg:y -0.5
-    * set :packCfg:cu 30
-    * set :packCfg:pb 25
-    * set :packCfg:ti 0
   736 label *label105
   737 print "const "
   738 print "SMELTER2"
 
   742 sensor *tmp0 @silicon-smelter @id
   743 op add *tmp1 35 *tmp0
   744 printchar *tmp1
-    * op add *tmp2 7 4.5
-    * op floor *tmp3 11.5
-    * op add *tmp4 35 11
   745 printchar 46
-    * op add *tmp5 7 -0.5
-    * op floor *tmp6 6.5
-    * op add *tmp7 35 6
   746 printchar 41
-    * op add *tmp8 35 30
   747 printchar 65
-    * op add *tmp9 35 25
   748 printchar 60
-    * op add *tmp10 35 0
   749 printchar 35
-    * op add *tmp11 35 0
   750 printchar 35
-    * op add *tmp12 35 0
   751 printchar 35
-    * op add *tmp13 35 0
   752 printchar 35
-    * op add *tmp14 35 0
   753 printchar 35
-    * op add *tmp15 35 0
   754 printchar 35
   755 printchar 34
   756 print ";"
   757 print "\n"
   758 label *label106
-    * set :packCfg:name "INVERTED_SORT4"
-    * set :packCfg:type @inverted-sorter
-    * set :packCfg:x 3
-    * set :packCfg:y 0
-    * set :packCfg:cu 2
-    * set :packCfg:pb 2
   759 label *label107
   760 print "const "
   761 print "INVERTED_SORT4"
 
   765 sensor *tmp0 @inverted-sorter @id
   766 op add *tmp1 35 *tmp0
   767 printchar *tmp1
-    * op add *tmp2 7 3
-    * op floor *tmp3 10
-    * op add *tmp4 35 10
   768 printchar 45
-    * op add *tmp5 7 0
-    * op floor *tmp6 7
-    * op add *tmp7 35 7
   769 printchar 42
-    * op add *tmp8 35 2
   770 printchar 37
-    * op add *tmp9 35 2
   771 printchar 37
-    * op add *tmp10 35 0
   772 printchar 35
-    * op add *tmp11 35 0
   773 printchar 35
-    * op add *tmp12 35 0
   774 printchar 35
-    * op add *tmp13 35 0
   775 printchar 35
-    * op add *tmp14 35 0
   776 printchar 35
-    * op add *tmp15 35 0
   777 printchar 35
   778 printchar 34
   779 print ";"
   780 print "\n"
   781 label *label108
-    * set :packCfg:name "INVERTED_SORT5"
-    * set :packCfg:y -1
   782 label *label109
   783 print "const "
   784 print "INVERTED_SORT5"
 
   788 sensor *tmp0 @inverted-sorter @id
   789 op add *tmp1 35 *tmp0
   790 printchar *tmp1
-    * op add *tmp2 7 3
-    * op floor *tmp3 10
-    * op add *tmp4 35 10
   791 printchar 45
-    * op add *tmp5 7 -1
-    * op floor *tmp6 6
-    * op add *tmp7 35 6
   792 printchar 41
-    * op add *tmp8 35 2
   793 printchar 37
-    * op add *tmp9 35 2
   794 printchar 37
-    * op add *tmp10 35 0
   795 printchar 35
-    * op add *tmp11 35 0
   796 printchar 35
-    * op add *tmp12 35 0
   797 printchar 35
-    * op add *tmp13 35 0
   798 printchar 35
-    * op add *tmp14 35 0
   799 printchar 35
-    * op add *tmp15 35 0
   800 printchar 35
   801 printchar 34
   802 print ";"
   803 print "\n"
   804 label *label110
-    * set :packCfg:name "UNLOADER5"
-    * set :packCfg:type @unloader
-    * set :packCfg:y 3
-    * set :packCfg:cu 0
-    * set :packCfg:pb 0
-    * set :packCfg:si 30
-    * set :packCfg:ti 25
   805 label *label111
   806 print "const "
   807 print "UNLOADER5"
 
   811 sensor *tmp0 @unloader @id
   812 op add *tmp1 35 *tmp0
   813 printchar *tmp1
-    * op add *tmp2 7 3
-    * op floor *tmp3 10
-    * op add *tmp4 35 10
   814 printchar 45
-    * op add *tmp5 7 3
-    * op floor *tmp6 10
-    * op add *tmp7 35 10
   815 printchar 45
-    * op add *tmp8 35 0
   816 printchar 35
-    * op add *tmp9 35 0
   817 printchar 35
-    * op add *tmp10 35 0
   818 printchar 35
-    * op add *tmp11 35 30
   819 printchar 65
-    * op add *tmp12 35 25
   820 printchar 60
-    * op add *tmp13 35 0
   821 printchar 35
-    * op add *tmp14 35 0
   822 printchar 35
-    * op add *tmp15 35 0
   823 printchar 35
   824 printchar 34
   825 print ";"
   826 print "\n"
   827 label *label112
-    * set :packCfg:name "UNLOADER6"
-    * set :packCfg:x 1
-    * set :packCfg:y -2
   828 label *label113
   829 print "const "
   830 print "UNLOADER6"
 
   834 sensor *tmp0 @unloader @id
   835 op add *tmp1 35 *tmp0
   836 printchar *tmp1
-    * op add *tmp2 7 1
-    * op floor *tmp3 8
-    * op add *tmp4 35 8
   837 printchar 43
-    * op add *tmp5 7 -2
-    * op floor *tmp6 5
-    * op add *tmp7 35 5
   838 printchar 40
-    * op add *tmp8 35 0
   839 printchar 35
-    * op add *tmp9 35 0
   840 printchar 35
-    * op add *tmp10 35 0
   841 printchar 35
-    * op add *tmp11 35 30
   842 printchar 65
-    * op add *tmp12 35 25
   843 printchar 60
-    * op add *tmp13 35 0
   844 printchar 35
-    * op add *tmp14 35 0
   845 printchar 35
-    * op add *tmp15 35 0
   846 printchar 35
   847 printchar 34
   848 print ";"
   849 print "\n"
   850 label *label114
-    * set :packCfg:name "UNDERFLOW_GATE2"
-    * set :packCfg:type @underflow-gate
-    * set :packCfg:y -3
-    * set :packCfg:cu 4
-    * set :packCfg:pb 2
-    * set :packCfg:si 0
-    * set :packCfg:ti 0
   851 label *label115
   852 print "const "
   853 print "UNDERFLOW_GATE2"
 
   857 sensor *tmp0 @underflow-gate @id
   858 op add *tmp1 35 *tmp0
   859 printchar *tmp1
-    * op add *tmp2 7 1
-    * op floor *tmp3 8
-    * op add *tmp4 35 8
   860 printchar 43
-    * op add *tmp5 7 -3
-    * op floor *tmp6 4
-    * op add *tmp7 35 4
   861 printchar 39
-    * op add *tmp8 35 4
   862 printchar 39
-    * op add *tmp9 35 2
   863 printchar 37
-    * op add *tmp10 35 0
   864 printchar 35
-    * op add *tmp11 35 0
   865 printchar 35
-    * op add *tmp12 35 0
   866 printchar 35
-    * op add *tmp13 35 0
   867 printchar 35
-    * op add *tmp14 35 0
   868 printchar 35
-    * op add *tmp15 35 0
   869 printchar 35
   870 printchar 34
   871 print ";"
   872 print "\n"
   873 label *label116
-    * set :packCfg:name "MULTIPLICATIVE_REC"
-    * set :packCfg:type @multiplicative-reconstructor
-    * set :packCfg:x 4
-    * set :packCfg:y -4
-    * set :packCfg:cu 0
-    * set :packCfg:pb 650
-    * set :packCfg:si 450
-    * set :packCfg:ti 350
-    * set :packCfg:th 650
   874 label *label117
   875 print "const "
   876 print "MULTIPLICATIVE_REC"
 
   880 sensor *tmp0 @multiplicative-reconstructor @id
   881 op add *tmp1 35 *tmp0
   882 printchar *tmp1
-    * op add *tmp2 7 4
-    * op floor *tmp3 11
-    * op add *tmp4 35 11
   883 printchar 46
-    * op add *tmp5 7 -4
-    * op floor *tmp6 3
-    * op add *tmp7 35 3
   884 printchar 38
-    * op add *tmp8 35 0
   885 printchar 35
-    * op add *tmp9 35 650
   886 printchar 685
-    * op add *tmp10 35 0
   887 printchar 35
-    * op add *tmp11 35 450
   888 printchar 485
-    * op add *tmp12 35 350
   889 printchar 385
-    * op add *tmp13 35 0
   890 printchar 35
-    * op add *tmp14 35 650
   891 printchar 685
-    * op add *tmp15 35 0
   892 printchar 35
   893 printchar 34
   894 print ";"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
     3 print " "
     4 print "= "
     5 printchar 34
-    * sensor *tmp0 @graphite-press @id
+    6 set *tmp0 0
     7 op add *tmp1 35 *tmp0
     8 printchar *tmp1
     9 printchar 39
 
    26 print " "
    27 print "= "
    28 printchar 34
-    * sensor *tmp0 @battery @id
+   29 set *tmp0 72
    30 op add *tmp1 35 *tmp0
    31 printchar *tmp1
    32 printchar 42
 
    49 print " "
    50 print "= "
    51 printchar 34
-    * sensor *tmp0 @battery @id
+   52 set *tmp0 72
    53 op add *tmp1 35 *tmp0
    54 printchar *tmp1
    55 printchar 43
 
    72 print " "
    73 print "= "
    74 printchar 34
-    * sensor *tmp0 @combustion-generator @id
+   75 set *tmp0 74
    76 op add *tmp1 35 *tmp0
    77 printchar *tmp1
    78 printchar 42
 
    95 print " "
    96 print "= "
    97 printchar 34
-    * sensor *tmp0 @silicon-smelter @id
+   98 set *tmp0 2
    99 op add *tmp1 35 *tmp0
   100 printchar *tmp1
   101 printchar 43
 
   118 print " "
   119 print "= "
   120 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  121 set *tmp0 49
   122 op add *tmp1 35 *tmp0
   123 printchar *tmp1
   124 printchar 43
 
   141 print " "
   142 print "= "
   143 printchar 34
-    * sensor *tmp0 @pneumatic-drill @id
+  144 set *tmp0 84
   145 op add *tmp1 35 *tmp0
   146 printchar *tmp1
   147 printchar 42
 
   164 print " "
   165 print "= "
   166 printchar 34
-    * sensor *tmp0 @unloader @id
+  167 set *tmp0 95
   168 op add *tmp1 35 *tmp0
   169 printchar *tmp1
   170 printchar 42
 
   187 print " "
   188 print "= "
   189 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  190 set *tmp0 49
   191 op add *tmp1 35 *tmp0
   192 printchar *tmp1
   193 printchar 41
 
   210 print " "
   211 print "= "
   212 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  213 set *tmp0 52
   214 op add *tmp1 35 *tmp0
   215 printchar *tmp1
   216 printchar 42
 
   233 print " "
   234 print "= "
   235 printchar 34
-    * sensor *tmp0 @micro-processor @id
+  236 set *tmp0 139
   237 op add *tmp1 35 *tmp0
   238 printchar *tmp1
   239 printchar 45
 
   256 print " "
   257 print "= "
   258 printchar 34
-    * sensor *tmp0 @power-node @id
+  259 set *tmp0 68
   260 op add *tmp1 35 *tmp0
   261 printchar *tmp1
   262 printchar 41
 
   279 print " "
   280 print "= "
   281 printchar 34
-    * sensor *tmp0 @unloader @id
+  282 set *tmp0 95
   283 op add *tmp1 35 *tmp0
   284 printchar *tmp1
   285 printchar 40
 
   302 print " "
   303 print "= "
   304 printchar 34
-    * sensor *tmp0 @air-factory @id
+  305 set *tmp0 116
   306 op add *tmp1 35 *tmp0
   307 printchar *tmp1
   308 printchar 39
 
   325 print " "
   326 print "= "
   327 printchar 34
-    * sensor *tmp0 @unloader @id
+  328 set *tmp0 95
   329 op add *tmp1 35 *tmp0
   330 printchar *tmp1
   331 printchar 44
 
   348 print " "
   349 print "= "
   350 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  351 set *tmp0 49
   352 op add *tmp1 35 *tmp0
   353 printchar *tmp1
   354 printchar 44
 
   371 print " "
   372 print "= "
   373 printchar 34
-    * sensor *tmp0 @kiln @id
+  374 set *tmp0 4
   375 op add *tmp1 35 *tmp0
   376 printchar *tmp1
   377 printchar 44
 
   394 print " "
   395 print "= "
   396 printchar 34
-    * sensor *tmp0 @water-extractor @id
+  397 set *tmp0 87
   398 op add *tmp1 35 *tmp0
   399 printchar *tmp1
   400 printchar 37
 
   417 print " "
   418 print "= "
   419 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  420 set *tmp0 52
   421 op add *tmp1 35 *tmp0
   422 printchar *tmp1
   423 printchar 39
 
   440 print " "
   441 print "= "
   442 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  443 set *tmp0 52
   444 op add *tmp1 35 *tmp0
   445 printchar *tmp1
   446 printchar 38
 
   463 print " "
   464 print "= "
   465 printchar 34
-    * sensor *tmp0 @steam-generator @id
+  466 set *tmp0 76
   467 op add *tmp1 35 *tmp0
   468 printchar *tmp1
   469 printchar 37
 
   486 print " "
   487 print "= "
   488 printchar 34
-    * sensor *tmp0 @multi-press @id
+  489 set *tmp0 1
   490 op add *tmp1 35 *tmp0
   491 printchar *tmp1
   492 printchar 40
 
   509 print " "
   510 print "= "
   511 printchar 34
-    * sensor *tmp0 @water-extractor @id
+  512 set *tmp0 87
   513 op add *tmp1 35 *tmp0
   514 printchar *tmp1
   515 printchar 37
 
   532 print " "
   533 print "= "
   534 printchar 34
-    * sensor *tmp0 @payload-router @id
+  535 set *tmp0 125
   536 op add *tmp1 35 *tmp0
   537 printchar *tmp1
   538 printchar 39
 
   555 print " "
   556 print "= "
   557 printchar 34
-    * sensor *tmp0 @unloader @id
+  558 set *tmp0 95
   559 op add *tmp1 35 *tmp0
   560 printchar *tmp1
   561 printchar 42
 
   578 print " "
   579 print "= "
   580 printchar 34
-    * sensor *tmp0 @underflow-gate @id
+  581 set *tmp0 53
   582 op add *tmp1 35 *tmp0
   583 printchar *tmp1
   584 printchar 42
 
   601 print " "
   602 print "= "
   603 printchar 34
-    * sensor *tmp0 @additive-reconstructor @id
+  604 set *tmp0 118
   605 op add *tmp1 35 *tmp0
   606 printchar *tmp1
   607 printchar 42
 
   624 print " "
   625 print "= "
   626 printchar 34
-    * sensor *tmp0 @battery-large @id
+  627 set *tmp0 73
   628 op add *tmp1 35 *tmp0
   629 printchar *tmp1
   630 printchar 47
 
   647 print " "
   648 print "= "
   649 printchar 34
-    * sensor *tmp0 @overflow-gate @id
+  650 set *tmp0 52
   651 op add *tmp1 35 *tmp0
   652 printchar *tmp1
   653 printchar 38
 
   670 print " "
   671 print "= "
   672 printchar 34
-    * sensor *tmp0 @laser-drill @id
+  673 set *tmp0 85
   674 op add *tmp1 35 *tmp0
   675 printchar *tmp1
   676 printchar 42
 
   693 print " "
   694 print "= "
   695 printchar 34
-    * sensor *tmp0 @solar-panel @id
+  696 set *tmp0 79
   697 op add *tmp1 35 *tmp0
   698 printchar *tmp1
   699 printchar 42
 
   716 print " "
   717 print "= "
   718 printchar 34
-    * sensor *tmp0 @container @id
+  719 set *tmp0 94
   720 op add *tmp1 35 *tmp0
   721 printchar *tmp1
   722 printchar 42
 
   739 print " "
   740 print "= "
   741 printchar 34
-    * sensor *tmp0 @silicon-smelter @id
+  742 set *tmp0 2
   743 op add *tmp1 35 *tmp0
   744 printchar *tmp1
   745 printchar 46
 
   762 print " "
   763 print "= "
   764 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  765 set *tmp0 49
   766 op add *tmp1 35 *tmp0
   767 printchar *tmp1
   768 printchar 45
 
   785 print " "
   786 print "= "
   787 printchar 34
-    * sensor *tmp0 @inverted-sorter @id
+  788 set *tmp0 49
   789 op add *tmp1 35 *tmp0
   790 printchar *tmp1
   791 printchar 45
 
   808 print " "
   809 print "= "
   810 printchar 34
-    * sensor *tmp0 @unloader @id
+  811 set *tmp0 95
   812 op add *tmp1 35 *tmp0
   813 printchar *tmp1
   814 printchar 45
 
   831 print " "
   832 print "= "
   833 printchar 34
-    * sensor *tmp0 @unloader @id
+  834 set *tmp0 95
   835 op add *tmp1 35 *tmp0
   836 printchar *tmp1
   837 printchar 43
 
   854 print " "
   855 print "= "
   856 printchar 34
-    * sensor *tmp0 @underflow-gate @id
+  857 set *tmp0 53
   858 op add *tmp1 35 *tmp0
   859 printchar *tmp1
   860 printchar 43
 
   877 print " "
   878 print "= "
   879 printchar 34
-    * sensor *tmp0 @multiplicative-reconstructor @id
+  880 set *tmp0 119
   881 op add *tmp1 35 *tmp0
   882 printchar *tmp1
   883 printchar 46

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     4 print "= "
     5 printchar 34
     6 set *tmp0 0
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+    7 op add *tmp1 35 0
+    8 printchar 35
     9 printchar 39
    10 printchar 43
    11 printchar 110
 
    27 print "= "
    28 printchar 34
    29 set *tmp0 72
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   30 op add *tmp1 35 72
+   31 printchar 107
    32 printchar 42
    33 printchar 47
    34 printchar 40
 
    50 print "= "
    51 printchar 34
    52 set *tmp0 72
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   53 op add *tmp1 35 72
+   54 printchar 107
    55 printchar 43
    56 printchar 47
    57 printchar 40
 
    73 print "= "
    74 printchar 34
    75 set *tmp0 74
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   76 op add *tmp1 35 74
+   77 printchar 109
    78 printchar 42
    79 printchar 46
    80 printchar 60
 
    96 print "= "
    97 printchar 34
    98 set *tmp0 2
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+   99 op add *tmp1 35 2
+  100 printchar 37
   101 printchar 43
   102 printchar 45
   103 printchar 65
 
   119 print "= "
   120 printchar 34
   121 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  122 op add *tmp1 35 49
+  123 printchar 84
   124 printchar 43
   125 printchar 44
   126 printchar 37
 
   142 print "= "
   143 printchar 34
   144 set *tmp0 84
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  145 op add *tmp1 35 84
+  146 printchar 119
   147 printchar 42
   148 printchar 42
   149 printchar 53
 
   165 print "= "
   166 printchar 34
   167 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  168 op add *tmp1 35 95
+  169 printchar 130
   170 printchar 42
   171 printchar 44
   172 printchar 35
 
   188 print "= "
   189 printchar 34
   190 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  191 op add *tmp1 35 49
+  192 printchar 84
   193 printchar 41
   194 printchar 44
   195 printchar 37
 
   211 print "= "
   212 printchar 34
   213 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  214 op add *tmp1 35 52
+  215 printchar 87
   216 printchar 42
   217 printchar 45
   218 printchar 39
 
   234 print "= "
   235 printchar 34
   236 set *tmp0 139
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  237 op add *tmp1 35 139
+  238 printchar 174
   239 printchar 45
   240 printchar 46
   241 printchar 125
 
   257 print "= "
   258 printchar 34
   259 set *tmp0 68
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  260 op add *tmp1 35 68
+  261 printchar 103
   262 printchar 41
   263 printchar 39
   264 printchar 37
 
   280 print "= "
   281 printchar 34
   282 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  283 op add *tmp1 35 95
+  284 printchar 130
   285 printchar 40
   286 printchar 42
   287 printchar 35
 
   303 print "= "
   304 printchar 34
   305 set *tmp0 116
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  306 op add *tmp1 35 116
+  307 printchar 151
   308 printchar 39
   309 printchar 40
   310 printchar 95
 
   326 print "= "
   327 printchar 34
   328 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  329 op add *tmp1 35 95
+  330 printchar 130
   331 printchar 44
   332 printchar 41
   333 printchar 35
 
   349 print "= "
   350 printchar 34
   351 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  352 op add *tmp1 35 49
+  353 printchar 84
   354 printchar 44
   355 printchar 42
   356 printchar 37
 
   372 print "= "
   373 printchar 34
   374 set *tmp0 4
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  375 op add *tmp1 35 4
+  376 printchar 39
   377 printchar 44
   378 printchar 43
   379 printchar 95
 
   395 print "= "
   396 printchar 34
   397 set *tmp0 87
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  398 op add *tmp1 35 87
+  399 printchar 122
   400 printchar 37
   401 printchar 45
   402 printchar 65
 
   418 print "= "
   419 printchar 34
   420 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  421 op add *tmp1 35 52
+  422 printchar 87
   423 printchar 39
   424 printchar 42
   425 printchar 39
 
   441 print "= "
   442 printchar 34
   443 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  444 op add *tmp1 35 52
+  445 printchar 87
   446 printchar 38
   447 printchar 42
   448 printchar 39
 
   464 print "= "
   465 printchar 34
   466 set *tmp0 76
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  467 op add *tmp1 35 76
+  468 printchar 111
   469 printchar 37
   470 printchar 43
   471 printchar 70
 
   487 print "= "
   488 printchar 34
   489 set *tmp0 1
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  490 op add *tmp1 35 1
+  491 printchar 36
   492 printchar 40
   493 printchar 46
   494 printchar 35
 
   510 print "= "
   511 printchar 34
   512 set *tmp0 87
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  513 op add *tmp1 35 87
+  514 printchar 122
   515 printchar 37
   516 printchar 47
   517 printchar 65
 
   533 print "= "
   534 printchar 34
   535 set *tmp0 125
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  536 op add *tmp1 35 125
+  537 printchar 160
   538 printchar 39
   539 printchar 37
   540 printchar 45
 
   556 print "= "
   557 printchar 34
   558 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  559 op add *tmp1 35 95
+  560 printchar 130
   561 printchar 42
   562 printchar 40
   563 printchar 35
 
   579 print "= "
   580 printchar 34
   581 set *tmp0 53
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  582 op add *tmp1 35 53
+  583 printchar 88
   584 printchar 42
   585 printchar 39
   586 printchar 39
 
   602 print "= "
   603 printchar 34
   604 set *tmp0 118
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  605 op add *tmp1 35 118
+  606 printchar 153
   607 printchar 42
   608 printchar 37
   609 printchar 235
 
   625 print "= "
   626 printchar 34
   627 set *tmp0 73
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  628 op add *tmp1 35 73
+  629 printchar 108
   630 printchar 47
   631 printchar 44
   632 printchar 35
 
   648 print "= "
   649 printchar 34
   650 set *tmp0 52
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  651 op add *tmp1 35 52
+  652 printchar 87
   653 printchar 38
   654 printchar 42
   655 printchar 39
 
   671 print "= "
   672 printchar 34
   673 set *tmp0 85
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  674 op add *tmp1 35 85
+  675 printchar 120
   676 printchar 42
   677 printchar 42
   678 printchar 70
 
   694 print "= "
   695 printchar 34
   696 set *tmp0 79
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  697 op add *tmp1 35 79
+  698 printchar 114
   699 printchar 42
   700 printchar 42
   701 printchar 35
 
   717 print "= "
   718 printchar 34
   719 set *tmp0 94
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  720 op add *tmp1 35 94
+  721 printchar 129
   722 printchar 42
   723 printchar 42
   724 printchar 35
 
   740 print "= "
   741 printchar 34
   742 set *tmp0 2
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  743 op add *tmp1 35 2
+  744 printchar 37
   745 printchar 46
   746 printchar 41
   747 printchar 65
 
   763 print "= "
   764 printchar 34
   765 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  766 op add *tmp1 35 49
+  767 printchar 84
   768 printchar 45
   769 printchar 42
   770 printchar 37
 
   786 print "= "
   787 printchar 34
   788 set *tmp0 49
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  789 op add *tmp1 35 49
+  790 printchar 84
   791 printchar 45
   792 printchar 41
   793 printchar 37
 
   809 print "= "
   810 printchar 34
   811 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  812 op add *tmp1 35 95
+  813 printchar 130
   814 printchar 45
   815 printchar 45
   816 printchar 35
 
   832 print "= "
   833 printchar 34
   834 set *tmp0 95
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  835 op add *tmp1 35 95
+  836 printchar 130
   837 printchar 43
   838 printchar 40
   839 printchar 35
 
   855 print "= "
   856 printchar 34
   857 set *tmp0 53
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  858 op add *tmp1 35 53
+  859 printchar 88
   860 printchar 43
   861 printchar 39
   862 printchar 39
 
   878 print "= "
   879 printchar 34
   880 set *tmp0 119
-    * op add *tmp1 35 *tmp0
-    * printchar *tmp1
+  881 op add *tmp1 35 119
+  882 printchar 154
   883 printchar 46
   884 printchar 38
   885 printchar 35

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-78 instructions):
 
     3 print " "
     4 print "= "
     5 printchar 34
-    * set *tmp0 0
-    * op add *tmp1 35 0
     6 printchar 35
     7 printchar 39
     8 printchar 43
 
    24 print " "
    25 print "= "
    26 printchar 34
-    * set *tmp0 72
-    * op add *tmp1 35 72
    27 printchar 107
    28 printchar 42
    29 printchar 47
 
    45 print " "
    46 print "= "
    47 printchar 34
-    * set *tmp0 72
-    * op add *tmp1 35 72
    48 printchar 107
    49 printchar 43
    50 printchar 47
 
    66 print " "
    67 print "= "
    68 printchar 34
-    * set *tmp0 74
-    * op add *tmp1 35 74
    69 printchar 109
    70 printchar 42
    71 printchar 46
 
    87 print " "
    88 print "= "
    89 printchar 34
-    * set *tmp0 2
-    * op add *tmp1 35 2
    90 printchar 37
    91 printchar 43
    92 printchar 45
 
   108 print " "
   109 print "= "
   110 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   111 printchar 84
   112 printchar 43
   113 printchar 44
 
   129 print " "
   130 print "= "
   131 printchar 34
-    * set *tmp0 84
-    * op add *tmp1 35 84
   132 printchar 119
   133 printchar 42
   134 printchar 42
 
   150 print " "
   151 print "= "
   152 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   153 printchar 130
   154 printchar 42
   155 printchar 44
 
   171 print " "
   172 print "= "
   173 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   174 printchar 84
   175 printchar 41
   176 printchar 44
 
   192 print " "
   193 print "= "
   194 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   195 printchar 87
   196 printchar 42
   197 printchar 45
 
   213 print " "
   214 print "= "
   215 printchar 34
-    * set *tmp0 139
-    * op add *tmp1 35 139
   216 printchar 174
   217 printchar 45
   218 printchar 46
 
   234 print " "
   235 print "= "
   236 printchar 34
-    * set *tmp0 68
-    * op add *tmp1 35 68
   237 printchar 103
   238 printchar 41
   239 printchar 39
 
   255 print " "
   256 print "= "
   257 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   258 printchar 130
   259 printchar 40
   260 printchar 42
 
   276 print " "
   277 print "= "
   278 printchar 34
-    * set *tmp0 116
-    * op add *tmp1 35 116
   279 printchar 151
   280 printchar 39
   281 printchar 40
 
   297 print " "
   298 print "= "
   299 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   300 printchar 130
   301 printchar 44
   302 printchar 41
 
   318 print " "
   319 print "= "
   320 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   321 printchar 84
   322 printchar 44
   323 printchar 42
 
   339 print " "
   340 print "= "
   341 printchar 34
-    * set *tmp0 4
-    * op add *tmp1 35 4
   342 printchar 39
   343 printchar 44
   344 printchar 43
 
   360 print " "
   361 print "= "
   362 printchar 34
-    * set *tmp0 87
-    * op add *tmp1 35 87
   363 printchar 122
   364 printchar 37
   365 printchar 45
 
   381 print " "
   382 print "= "
   383 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   384 printchar 87
   385 printchar 39
   386 printchar 42
 
   402 print " "
   403 print "= "
   404 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   405 printchar 87
   406 printchar 38
   407 printchar 42
 
   423 print " "
   424 print "= "
   425 printchar 34
-    * set *tmp0 76
-    * op add *tmp1 35 76
   426 printchar 111
   427 printchar 37
   428 printchar 43
 
   444 print " "
   445 print "= "
   446 printchar 34
-    * set *tmp0 1
-    * op add *tmp1 35 1
   447 printchar 36
   448 printchar 40
   449 printchar 46
 
   465 print " "
   466 print "= "
   467 printchar 34
-    * set *tmp0 87
-    * op add *tmp1 35 87
   468 printchar 122
   469 printchar 37
   470 printchar 47
 
   486 print " "
   487 print "= "
   488 printchar 34
-    * set *tmp0 125
-    * op add *tmp1 35 125
   489 printchar 160
   490 printchar 39
   491 printchar 37
 
   507 print " "
   508 print "= "
   509 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   510 printchar 130
   511 printchar 42
   512 printchar 40
 
   528 print " "
   529 print "= "
   530 printchar 34
-    * set *tmp0 53
-    * op add *tmp1 35 53
   531 printchar 88
   532 printchar 42
   533 printchar 39
 
   549 print " "
   550 print "= "
   551 printchar 34
-    * set *tmp0 118
-    * op add *tmp1 35 118
   552 printchar 153
   553 printchar 42
   554 printchar 37
 
   570 print " "
   571 print "= "
   572 printchar 34
-    * set *tmp0 73
-    * op add *tmp1 35 73
   573 printchar 108
   574 printchar 47
   575 printchar 44
 
   591 print " "
   592 print "= "
   593 printchar 34
-    * set *tmp0 52
-    * op add *tmp1 35 52
   594 printchar 87
   595 printchar 38
   596 printchar 42
 
   612 print " "
   613 print "= "
   614 printchar 34
-    * set *tmp0 85
-    * op add *tmp1 35 85
   615 printchar 120
   616 printchar 42
   617 printchar 42
 
   633 print " "
   634 print "= "
   635 printchar 34
-    * set *tmp0 79
-    * op add *tmp1 35 79
   636 printchar 114
   637 printchar 42
   638 printchar 42
 
   654 print " "
   655 print "= "
   656 printchar 34
-    * set *tmp0 94
-    * op add *tmp1 35 94
   657 printchar 129
   658 printchar 42
   659 printchar 42
 
   675 print " "
   676 print "= "
   677 printchar 34
-    * set *tmp0 2
-    * op add *tmp1 35 2
   678 printchar 37
   679 printchar 46
   680 printchar 41
 
   696 print " "
   697 print "= "
   698 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   699 printchar 84
   700 printchar 45
   701 printchar 42
 
   717 print " "
   718 print "= "
   719 printchar 34
-    * set *tmp0 49
-    * op add *tmp1 35 49
   720 printchar 84
   721 printchar 45
   722 printchar 41
 
   738 print " "
   739 print "= "
   740 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   741 printchar 130
   742 printchar 45
   743 printchar 45
 
   759 print " "
   760 print "= "
   761 printchar 34
-    * set *tmp0 95
-    * op add *tmp1 35 95
   762 printchar 130
   763 printchar 43
   764 printchar 40
 
   780 print " "
   781 print "= "
   782 printchar 34
-    * set *tmp0 53
-    * op add *tmp1 35 53
   783 printchar 88
   784 printchar 43
   785 printchar 39
 
   801 print " "
   802 print "= "
   803 printchar 34
-    * set *tmp0 119
-    * op add *tmp1 35 119
   804 printchar 154
   805 printchar 46
   806 printchar 38

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
-    * label *label41
     0 print "const "
     1 print "PRESS"
     2 print " "
 
    16 printchar 34
    17 print ";"
    18 print "\n"
-    * label *label42
-    * label *label43
    19 print "const "
    20 print "BATTERY1"
    21 print " "
 
    35 printchar 34
    36 print ";"
    37 print "\n"
-    * label *label44
-    * label *label45
    38 print "const "
    39 print "BATTERY2"
    40 print " "
 
    54 printchar 34
    55 print ";"
    56 print "\n"
-    * label *label46
-    * label *label47
    57 print "const "
    58 print "GENERATOR"
    59 print " "
 
    73 printchar 34
    74 print ";"
    75 print "\n"
-    * label *label48
-    * label *label49
    76 print "const "
    77 print "SMELTER"
    78 print " "
 
    92 printchar 34
    93 print ";"
    94 print "\n"
-    * label *label50
-    * label *label51
    95 print "const "
    96 print "INVERTED_SORT1"
    97 print " "
 
   111 printchar 34
   112 print ";"
   113 print "\n"
-    * label *label52
-    * label *label53
   114 print "const "
   115 print "PNEUMATIC_DRILL"
   116 print " "
 
   130 printchar 34
   131 print ";"
   132 print "\n"
-    * label *label54
-    * label *label55
   133 print "const "
   134 print "UNLOADER1"
   135 print " "
 
   149 printchar 34
   150 print ";"
   151 print "\n"
-    * label *label56
-    * label *label57
   152 print "const "
   153 print "INVERTED_SORT2"
   154 print " "
 
   168 printchar 34
   169 print ";"
   170 print "\n"
-    * label *label58
-    * label *label59
   171 print "const "
   172 print "OVERFLOW_GATE1"
   173 print " "
 
   187 printchar 34
   188 print ";"
   189 print "\n"
-    * label *label60
-    * label *label61
   190 print "const "
   191 print "PROCESSOR"
   192 print " "
 
   206 printchar 34
   207 print ";"
   208 print "\n"
-    * label *label62
-    * label *label63
   209 print "const "
   210 print "POWER_NODE"
   211 print " "
 
   225 printchar 34
   226 print ";"
   227 print "\n"
-    * label *label64
-    * label *label65
   228 print "const "
   229 print "UNLOADER2"
   230 print " "
 
   244 printchar 34
   245 print ";"
   246 print "\n"
-    * label *label66
-    * label *label67
   247 print "const "
   248 print "AIR_FACTORY"
   249 print " "
 
   263 printchar 34
   264 print ";"
   265 print "\n"
-    * label *label68
-    * label *label69
   266 print "const "
   267 print "UNLOADER3"
   268 print " "
 
   282 printchar 34
   283 print ";"
   284 print "\n"
-    * label *label70
-    * label *label71
   285 print "const "
   286 print "INVERTED_SORT3"
   287 print " "
 
   301 printchar 34
   302 print ";"
   303 print "\n"
-    * label *label72
-    * label *label73
   304 print "const "
   305 print "KILN"
   306 print " "
 
   320 printchar 34
   321 print ";"
   322 print "\n"
-    * label *label74
-    * label *label75
   323 print "const "
   324 print "WATER_EXT"
   325 print " "
 
   339 printchar 34
   340 print ";"
   341 print "\n"
-    * label *label76
-    * label *label77
   342 print "const "
   343 print "OVERFLOW_GATE2"
   344 print " "
 
   358 printchar 34
   359 print ";"
   360 print "\n"
-    * label *label78
-    * label *label79
   361 print "const "
   362 print "OVERFLOW_GATE3"
   363 print " "
 
   377 printchar 34
   378 print ";"
   379 print "\n"
-    * label *label80
-    * label *label81
   380 print "const "
   381 print "STEAM_GEN"
   382 print " "
 
   396 printchar 34
   397 print ";"
   398 print "\n"
-    * label *label82
-    * label *label83
   399 print "const "
   400 print "MULTIPRESS"
   401 print " "
 
   415 printchar 34
   416 print ";"
   417 print "\n"
-    * label *label84
-    * label *label85
   418 print "const "
   419 print "WATER_EXT2"
   420 print " "
 
   434 printchar 34
   435 print ";"
   436 print "\n"
-    * label *label86
-    * label *label87
   437 print "const "
   438 print "PAYLOAD_ROUTER"
   439 print " "
 
   453 printchar 34
   454 print ";"
   455 print "\n"
-    * label *label88
-    * label *label89
   456 print "const "
   457 print "UNLOADER4"
   458 print " "
 
   472 printchar 34
   473 print ";"
   474 print "\n"
-    * label *label90
-    * label *label91
   475 print "const "
   476 print "UNDERFLOW_GATE"
   477 print " "
 
   491 printchar 34
   492 print ";"
   493 print "\n"
-    * label *label92
-    * label *label93
   494 print "const "
   495 print "ADDITIVE_REC"
   496 print " "
 
   510 printchar 34
   511 print ";"
   512 print "\n"
-    * label *label94
-    * label *label95
   513 print "const "
   514 print "BATTERY_LARGE"
   515 print " "
 
   529 printchar 34
   530 print ";"
   531 print "\n"
-    * label *label96
-    * label *label97
   532 print "const "
   533 print "OVERFLOW_GATE4"
   534 print " "
 
   548 printchar 34
   549 print ";"
   550 print "\n"
-    * label *label98
-    * label *label99
   551 print "const "
   552 print "LASER_DRILL"
   553 print " "
 
   567 printchar 34
   568 print ";"
   569 print "\n"
-    * label *label100
-    * label *label101
   570 print "const "
   571 print "SOLAR_PANEL"
   572 print " "
 
   586 printchar 34
   587 print ";"
   588 print "\n"
-    * label *label102
-    * label *label103
   589 print "const "
   590 print "CONTAINER"
   591 print " "
 
   605 printchar 34
   606 print ";"
   607 print "\n"
-    * label *label104
-    * label *label105
   608 print "const "
   609 print "SMELTER2"
   610 print " "
 
   624 printchar 34
   625 print ";"
   626 print "\n"
-    * label *label106
-    * label *label107
   627 print "const "
   628 print "INVERTED_SORT4"
   629 print " "
 
   643 printchar 34
   644 print ";"
   645 print "\n"
-    * label *label108
-    * label *label109
   646 print "const "
   647 print "INVERTED_SORT5"
   648 print " "
 
   662 printchar 34
   663 print ";"
   664 print "\n"
-    * label *label110
-    * label *label111
   665 print "const "
   666 print "UNLOADER5"
   667 print " "
 
   681 printchar 34
   682 print ";"
   683 print "\n"
-    * label *label112
-    * label *label113
   684 print "const "
   685 print "UNLOADER6"
   686 print " "
 
   700 printchar 34
   701 print ";"
   702 print "\n"
-    * label *label114
-    * label *label115
   703 print "const "
   704 print "UNDERFLOW_GATE2"
   705 print " "
 
   719 printchar 34
   720 print ";"
   721 print "\n"
-    * label *label116
-    * label *label117
   722 print "const "
   723 print "MULTIPLICATIVE_REC"
   724 print " "
 
   738 printchar 34
   739 print ";"
   740 print "\n"
-    * label *label118
   741 printflush message1
   742 end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   739 print ";"
   740 print "\n"
   741 printflush message1
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-566 instructions):
-    * print "const "
-    * print "PRESS"
-    * print " "
-    * print "= "
+    0 print "const PRESS = "
     1 printchar 34
-    * printchar 35
-    * printchar 39
-    * printchar 43
-    * printchar 110
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+    2 print "#'+nA######"
     3 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "BATTERY1"
-    * print " "
-    * print "= "
+    4 print ";\nconst BATTERY1 = "
     5 printchar 34
-    * printchar 107
-    * printchar 42
-    * printchar 47
-    * printchar 40
-    * printchar 55
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+    6 print "k*/(7######"
     7 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "BATTERY2"
-    * print " "
-    * print "= "
+    8 print ";\nconst BATTERY2 = "
     9 printchar 34
-    * printchar 107
-    * printchar 43
-    * printchar 47
-    * printchar 40
-    * printchar 55
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   10 print "k+/(7######"
    11 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "GENERATOR"
-    * print " "
-    * print "= "
+   12 print ";\nconst GENERATOR = "
    13 printchar 34
-    * printchar 109
-    * printchar 42
-    * printchar 46
-    * printchar 60
-    * printchar 50
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   14 print "m*.<2######"
    15 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "SMELTER"
-    * print " "
-    * print "= "
+   16 print ";\nconst SMELTER = "
    17 printchar 34
-    * printchar 37
-    * printchar 43
-    * printchar 45
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   18 print "%+-A<######"
    19 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "INVERTED_SORT1"
-    * print " "
-    * print "= "
+   20 print ";\nconst INVERTED_SORT1 = "
    21 printchar 34
-    * printchar 84
-    * printchar 43
-    * printchar 44
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   22 print "T+,%%######"
    23 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "PNEUMATIC_DRILL"
-    * print " "
-    * print "= "
+   24 print ";\nconst PNEUMATIC_DRILL = "
    25 printchar 34
-    * printchar 119
-    * printchar 42
-    * printchar 42
-    * printchar 53
-    * printchar 35
-    * printchar 45
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   26 print "w**5#-#####"
    27 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNLOADER1"
-    * print " "
-    * print "= "
+   28 print ";\nconst UNLOADER1 = "
    29 printchar 34
    30 printchar 130
-    * printchar 42
-    * printchar 44
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   31 print "*,###A<###"
    32 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "INVERTED_SORT2"
-    * print " "
-    * print "= "
+   33 print ";\nconst INVERTED_SORT2 = "
    34 printchar 34
-    * printchar 84
-    * printchar 41
-    * printchar 44
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   35 print "T),%%######"
    36 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "OVERFLOW_GATE1"
-    * print " "
-    * print "= "
+   37 print ";\nconst OVERFLOW_GATE1 = "
    38 printchar 34
-    * printchar 87
-    * printchar 42
-    * printchar 45
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   39 print "W*-'%######"
    40 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "PROCESSOR"
-    * print " "
-    * print "= "
+   41 print ";\nconst PROCESSOR = "
    42 printchar 34
-    * printchar 174
-    * printchar 45
-    * printchar 46
-    * printchar 125
-    * printchar 85
-    * printchar 35
-    * printchar 85
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   43 print "®-.}U#U####"
    44 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "POWER_NODE"
-    * print " "
-    * print "= "
+   45 print ";\nconst POWER_NODE = "
    46 printchar 34
-    * printchar 103
-    * printchar 41
-    * printchar 39
-    * printchar 37
-    * printchar 41
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   47 print "g)'%)######"
    48 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNLOADER2"
-    * print " "
-    * print "= "
+   49 print ";\nconst UNLOADER2 = "
    50 printchar 34
    51 printchar 130
-    * printchar 40
-    * printchar 42
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   52 print "(*###A<###"
    53 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "AIR_FACTORY"
-    * print " "
-    * print "= "
+   54 print ";\nconst AIR_FACTORY = "
    55 printchar 34
    56 printchar 151
-    * printchar 39
-    * printchar 40
-    * printchar 95
-    * printchar 105
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 38
+   57 print "'(_i#####&"
    58 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNLOADER3"
-    * print " "
-    * print "= "
+   59 print ";\nconst UNLOADER3 = "
    60 printchar 34
    61 printchar 130
-    * printchar 44
-    * printchar 41
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   62 print ",)###A<###"
    63 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "INVERTED_SORT3"
-    * print " "
-    * print "= "
+   64 print ";\nconst INVERTED_SORT3 = "
    65 printchar 34
-    * printchar 84
-    * printchar 44
-    * printchar 42
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   66 print "T,*%%######"
    67 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "KILN"
-    * print " "
-    * print "= "
+   68 print ";\nconst KILN = "
    69 printchar 34
-    * printchar 39
-    * printchar 44
-    * printchar 43
-    * printchar 95
-    * printchar 65
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   70 print "',+_AA#####"
    71 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "WATER_EXT"
-    * print " "
-    * print "= "
+   72 print ";\nconst WATER_EXT = "
    73 printchar 34
-    * printchar 122
-    * printchar 37
-    * printchar 45
-    * printchar 65
-    * printchar 65
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 35
-    * printchar 35
+   74 print "z%-AAA##A##"
    75 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "OVERFLOW_GATE2"
-    * print " "
-    * print "= "
+   76 print ";\nconst OVERFLOW_GATE2 = "
    77 printchar 34
-    * printchar 87
-    * printchar 39
-    * printchar 42
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   78 print "W'*'%######"
    79 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "OVERFLOW_GATE3"
-    * print " "
-    * print "= "
+   80 print ";\nconst OVERFLOW_GATE3 = "
    81 printchar 34
-    * printchar 87
-    * printchar 38
-    * printchar 42
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   82 print "W&*'%######"
    83 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "STEAM_GEN"
-    * print " "
-    * print "= "
+   84 print ";\nconst STEAM_GEN = "
    85 printchar 34
-    * printchar 111
-    * printchar 37
-    * printchar 43
-    * printchar 70
-    * printchar 75
-    * printchar 60
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   86 print "o%+FK<A####"
    87 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "MULTIPRESS"
-    * print " "
-    * print "= "
+   88 print ";\nconst MULTIPRESS = "
    89 printchar 34
-    * printchar 36
-    * printchar 40
-    * printchar 46
-    * printchar 35
+   90 print "$(.#"
    91 printchar 135
-    * printchar 85
-    * printchar 60
+   92 print "U<"
    93 printchar 135
-    * printchar 35
-    * printchar 35
-    * printchar 35
+   94 print "###"
    95 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "WATER_EXT2"
-    * print " "
-    * print "= "
+   96 print ";\nconst WATER_EXT2 = "
    97 printchar 34
-    * printchar 122
-    * printchar 37
-    * printchar 47
-    * printchar 65
-    * printchar 65
-    * printchar 65
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 35
-    * printchar 35
+   98 print "z%/AAA##A##"
    99 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "PAYLOAD_ROUTER"
-    * print " "
-    * print "= "
+  100 print ";\nconst PAYLOAD_ROUTER = "
   101 printchar 34
-    * printchar 160
-    * printchar 39
-    * printchar 37
-    * printchar 45
-    * printchar 35
-    * printchar 50
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  102 print " '%-#2#####"
   103 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNLOADER4"
-    * print " "
-    * print "= "
+  104 print ";\nconst UNLOADER4 = "
   105 printchar 34
   106 printchar 130
-    * printchar 42
-    * printchar 40
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  107 print "*(###A<###"
   108 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNDERFLOW_GATE"
-    * print " "
-    * print "= "
+  109 print ";\nconst UNDERFLOW_GATE = "
   110 printchar 34
-    * printchar 88
-    * printchar 42
-    * printchar 39
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  111 print "X*''%######"
   112 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "ADDITIVE_REC"
-    * print " "
-    * print "= "
+  113 print ";\nconst ADDITIVE_REC = "
   114 printchar 34
   115 printchar 153
-    * printchar 42
-    * printchar 37
-    * printchar 235
+  116 print "*%ë"
   117 printchar 155
-    * printchar 35
-    * printchar 125
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  118 print "#}####"
   119 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "BATTERY_LARGE"
-    * print " "
-    * print "= "
+  120 print ";\nconst BATTERY_LARGE = "
   121 printchar 34
-    * printchar 108
-    * printchar 47
-    * printchar 44
-    * printchar 35
-    * printchar 85
-    * printchar 35
-    * printchar 65
-    * printchar 55
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  122 print "l/,#U#A7###"
   123 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "OVERFLOW_GATE4"
-    * print " "
-    * print "= "
+  124 print ";\nconst OVERFLOW_GATE4 = "
   125 printchar 34
-    * printchar 87
-    * printchar 38
-    * printchar 42
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  126 print "W&*'%######"
   127 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "LASER_DRILL"
-    * print " "
-    * print "= "
+  128 print ";\nconst LASER_DRILL = "
   129 printchar 34
-    * printchar 120
-    * printchar 42
-    * printchar 42
-    * printchar 70
-    * printchar 35
-    * printchar 65
-    * printchar 65
-    * printchar 55
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  130 print "x**F#AA7###"
   131 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "SOLAR_PANEL"
-    * print " "
-    * print "= "
+  132 print ";\nconst SOLAR_PANEL = "
   133 printchar 34
-    * printchar 114
-    * printchar 42
-    * printchar 42
-    * printchar 35
-    * printchar 45
-    * printchar 35
-    * printchar 43
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  134 print "r**#-#+####"
   135 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "CONTAINER"
-    * print " "
-    * print "= "
+  136 print ";\nconst CONTAINER = "
   137 printchar 34
   138 printchar 129
-    * printchar 42
-    * printchar 42
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  139 print "**####"
   140 printchar 135
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  141 print "###"
   142 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "SMELTER2"
-    * print " "
-    * print "= "
+  143 print ";\nconst SMELTER2 = "
   144 printchar 34
-    * printchar 37
-    * printchar 46
-    * printchar 41
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  145 print "%.)A<######"
   146 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "INVERTED_SORT4"
-    * print " "
-    * print "= "
+  147 print ";\nconst INVERTED_SORT4 = "
   148 printchar 34
-    * printchar 84
-    * printchar 45
-    * printchar 42
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  149 print "T-*%%######"
   150 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "INVERTED_SORT5"
-    * print " "
-    * print "= "
+  151 print ";\nconst INVERTED_SORT5 = "
   152 printchar 34
-    * printchar 84
-    * printchar 45
-    * printchar 41
-    * printchar 37
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  153 print "T-)%%######"
   154 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNLOADER5"
-    * print " "
-    * print "= "
+  155 print ";\nconst UNLOADER5 = "
   156 printchar 34
   157 printchar 130
-    * printchar 45
-    * printchar 45
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  158 print "--###A<###"
   159 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNLOADER6"
-    * print " "
-    * print "= "
+  160 print ";\nconst UNLOADER6 = "
   161 printchar 34
   162 printchar 130
-    * printchar 43
-    * printchar 40
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 65
-    * printchar 60
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  163 print "+(###A<###"
   164 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "UNDERFLOW_GATE2"
-    * print " "
-    * print "= "
+  165 print ";\nconst UNDERFLOW_GATE2 = "
   166 printchar 34
-    * printchar 88
-    * printchar 43
-    * printchar 39
-    * printchar 39
-    * printchar 37
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
-    * printchar 35
+  167 print "X+''%######"
   168 printchar 34
-    * print ";"
-    * print "\n"
-    * print "const "
-    * print "MULTIPLICATIVE_REC"
-    * print " "
-    * print "= "
+  169 print ";\nconst MULTIPLICATIVE_REC = "
   170 printchar 34
   171 printchar 154
-    * printchar 46
-    * printchar 38
-    * printchar 35
-    * printchar 685
-    * printchar 35
-    * printchar 485
-    * printchar 385
-    * printchar 35
-    * printchar 685
-    * printchar 35
+  172 print ".&#ʭ#ǥƁ#ʭ#"
   173 printchar 34
-    * print ";"
-    * print "\n"
+  174 print ";\n"
   175 printflush message1

Final code before resolving virtual instructions:

    0:  print "const PRESS = "                                       print($"const $name = ");
    1:  printchar 34                                                 printchar('"');
    2:  print "#'+nA######"                                          printchar(35 + type.@id);
    3:  printchar 34                                                 printchar('"');
    4:  print ";\nconst BATTERY1 = "                                 println(";");
    5:  printchar 34                                                 printchar('"');
    6:  print "k*/(7######"                                          printchar(35 + type.@id);
    7:  printchar 34                                                 printchar('"');
    8:  print ";\nconst BATTERY2 = "                                 println(";");
    9:  printchar 34                                                 printchar('"');
   10:  print "k+/(7######"                                          printchar(35 + type.@id);
   11:  printchar 34                                                 printchar('"');
   12:  print ";\nconst GENERATOR = "                                println(";");
   13:  printchar 34                                                 printchar('"');
   14:  print "m*.<2######"                                          printchar(35 + type.@id);
   15:  printchar 34                                                 printchar('"');
   16:  print ";\nconst SMELTER = "                                  println(";");
   17:  printchar 34                                                 printchar('"');
   18:  print "%+-A<######"                                          printchar(35 + type.@id);
   19:  printchar 34                                                 printchar('"');
   20:  print ";\nconst INVERTED_SORT1 = "                           println(";");
   21:  printchar 34                                                 printchar('"');
   22:  print "T+,%%######"                                          printchar(35 + type.@id);
   23:  printchar 34                                                 printchar('"');
   24:  print ";\nconst PNEUMATIC_DRILL = "                          println(";");
   25:  printchar 34                                                 printchar('"');
   26:  print "w**5#-#####"                                          printchar(35 + type.@id);
   27:  printchar 34                                                 printchar('"');
   28:  print ";\nconst UNLOADER1 = "                                println(";");
   29:  printchar 34                                                 printchar('"');
   30:  printchar 130                                                printchar(35 + type.@id);
   31:  print "*,###A<###"                                           printchar(35 + floor(7 + x));
   32:  printchar 34                                                 printchar('"');
   33:  print ";\nconst INVERTED_SORT2 = "                           println(";");
   34:  printchar 34                                                 printchar('"');
   35:  print "T),%%######"                                          printchar(35 + type.@id);
   36:  printchar 34                                                 printchar('"');
   37:  print ";\nconst OVERFLOW_GATE1 = "                           println(";");
   38:  printchar 34                                                 printchar('"');
   39:  print "W*-'%######"                                          printchar(35 + type.@id);
   40:  printchar 34                                                 printchar('"');
   41:  print ";\nconst PROCESSOR = "                                println(";");
   42:  printchar 34                                                 printchar('"');
   43:  print "®-.}U#U####"                                          printchar(35 + type.@id);
   44:  printchar 34                                                 printchar('"');
   45:  print ";\nconst POWER_NODE = "                               println(";");
   46:  printchar 34                                                 printchar('"');
   47:  print "g)'%)######"                                          printchar(35 + type.@id);
   48:  printchar 34                                                 printchar('"');
   49:  print ";\nconst UNLOADER2 = "                                println(";");
   50:  printchar 34                                                 printchar('"');
   51:  printchar 130                                                printchar(35 + type.@id);
   52:  print "(*###A<###"                                           printchar(35 + floor(7 + x));
   53:  printchar 34                                                 printchar('"');
   54:  print ";\nconst AIR_FACTORY = "                              println(";");
   55:  printchar 34                                                 printchar('"');
   56:  printchar 151                                                printchar(35 + type.@id);
   57:  print "'(_i#####&"                                           printchar(35 + floor(7 + x));
   58:  printchar 34                                                 printchar('"');
   59:  print ";\nconst UNLOADER3 = "                                println(";");
   60:  printchar 34                                                 printchar('"');
   61:  printchar 130                                                printchar(35 + type.@id);
   62:  print ",)###A<###"                                           printchar(35 + floor(7 + x));
   63:  printchar 34                                                 printchar('"');
   64:  print ";\nconst INVERTED_SORT3 = "                           println(";");
   65:  printchar 34                                                 printchar('"');
   66:  print "T,*%%######"                                          printchar(35 + type.@id);
   67:  printchar 34                                                 printchar('"');
   68:  print ";\nconst KILN = "                                     println(";");
   69:  printchar 34                                                 printchar('"');
   70:  print "',+_AA#####"                                          printchar(35 + type.@id);
   71:  printchar 34                                                 printchar('"');
   72:  print ";\nconst WATER_EXT = "                                println(";");
   73:  printchar 34                                                 printchar('"');
   74:  print "z%-AAA##A##"                                          printchar(35 + type.@id);
   75:  printchar 34                                                 printchar('"');
   76:  print ";\nconst OVERFLOW_GATE2 = "                           println(";");
   77:  printchar 34                                                 printchar('"');
   78:  print "W'*'%######"                                          printchar(35 + type.@id);
   79:  printchar 34                                                 printchar('"');
   80:  print ";\nconst OVERFLOW_GATE3 = "                           println(";");
   81:  printchar 34                                                 printchar('"');
   82:  print "W&*'%######"                                          printchar(35 + type.@id);
   83:  printchar 34                                                 printchar('"');
   84:  print ";\nconst STEAM_GEN = "                                println(";");
   85:  printchar 34                                                 printchar('"');
   86:  print "o%+FK<A####"                                          printchar(35 + type.@id);
   87:  printchar 34                                                 printchar('"');
   88:  print ";\nconst MULTIPRESS = "                               println(";");
   89:  printchar 34                                                 printchar('"');
   90:  print "$(.#"                                                 printchar(35 + type.@id);
   91:  printchar 135                                                printchar(35 + pb);
   92:  print "U<"                                                   printchar(35 + gr);
   93:  printchar 135                                                printchar(35 + ti);
   94:  print "###"                                                  printchar(35 + mg);
   95:  printchar 34                                                 printchar('"');
   96:  print ";\nconst WATER_EXT2 = "                               println(";");
   97:  printchar 34                                                 printchar('"');
   98:  print "z%/AAA##A##"                                          printchar(35 + type.@id);
   99:  printchar 34                                                 printchar('"');
  100:  print ";\nconst PAYLOAD_ROUTER = "                           println(";");
  101:  printchar 34                                                 printchar('"');
  102:  print " '%-#2#####"                                          printchar(35 + type.@id);
  103:  printchar 34                                                 printchar('"');
  104:  print ";\nconst UNLOADER4 = "                                println(";");
  105:  printchar 34                                                 printchar('"');
  106:  printchar 130                                                printchar(35 + type.@id);
  107:  print "*(###A<###"                                           printchar(35 + floor(7 + x));
  108:  printchar 34                                                 printchar('"');
  109:  print ";\nconst UNDERFLOW_GATE = "                           println(";");
  110:  printchar 34                                                 printchar('"');
  111:  print "X*''%######"                                          printchar(35 + type.@id);
  112:  printchar 34                                                 printchar('"');
  113:  print ";\nconst ADDITIVE_REC = "                             println(";");
  114:  printchar 34                                                 printchar('"');
  115:  printchar 153                                                printchar(35 + type.@id);
  116:  print "*%ë"                                                  printchar(35 + floor(7 + x));
  117:  printchar 155                                                printchar(35 + pb);
  118:  print "#}####"                                               printchar(35 + gr);
  119:  printchar 34                                                 printchar('"');
  120:  print ";\nconst BATTERY_LARGE = "                            println(";");
  121:  printchar 34                                                 printchar('"');
  122:  print "l/,#U#A7###"                                          printchar(35 + type.@id);
  123:  printchar 34                                                 printchar('"');
  124:  print ";\nconst OVERFLOW_GATE4 = "                           println(";");
  125:  printchar 34                                                 printchar('"');
  126:  print "W&*'%######"                                          printchar(35 + type.@id);
  127:  printchar 34                                                 printchar('"');
  128:  print ";\nconst LASER_DRILL = "                              println(";");
  129:  printchar 34                                                 printchar('"');
  130:  print "x**F#AA7###"                                          printchar(35 + type.@id);
  131:  printchar 34                                                 printchar('"');
  132:  print ";\nconst SOLAR_PANEL = "                              println(";");
  133:  printchar 34                                                 printchar('"');
  134:  print "r**#-#+####"                                          printchar(35 + type.@id);
  135:  printchar 34                                                 printchar('"');
  136:  print ";\nconst CONTAINER = "                                println(";");
  137:  printchar 34                                                 printchar('"');
  138:  printchar 129                                                printchar(35 + type.@id);
  139:  print "**####"                                               printchar(35 + floor(7 + x));
  140:  printchar 135                                                printchar(35 + ti);
  141:  print "###"                                                  printchar(35 + mg);
  142:  printchar 34                                                 printchar('"');
  143:  print ";\nconst SMELTER2 = "                                 println(";");
  144:  printchar 34                                                 printchar('"');
  145:  print "%.)A<######"                                          printchar(35 + type.@id);
  146:  printchar 34                                                 printchar('"');
  147:  print ";\nconst INVERTED_SORT4 = "                           println(";");
  148:  printchar 34                                                 printchar('"');
  149:  print "T-*%%######"                                          printchar(35 + type.@id);
  150:  printchar 34                                                 printchar('"');
  151:  print ";\nconst INVERTED_SORT5 = "                           println(";");
  152:  printchar 34                                                 printchar('"');
  153:  print "T-)%%######"                                          printchar(35 + type.@id);
  154:  printchar 34                                                 printchar('"');
  155:  print ";\nconst UNLOADER5 = "                                println(";");
  156:  printchar 34                                                 printchar('"');
  157:  printchar 130                                                printchar(35 + type.@id);
  158:  print "--###A<###"                                           printchar(35 + floor(7 + x));
  159:  printchar 34                                                 printchar('"');
  160:  print ";\nconst UNLOADER6 = "                                println(";");
  161:  printchar 34                                                 printchar('"');
  162:  printchar 130                                                printchar(35 + type.@id);
  163:  print "+(###A<###"                                           printchar(35 + floor(7 + x));
  164:  printchar 34                                                 printchar('"');
  165:  print ";\nconst UNDERFLOW_GATE2 = "                          println(";");
  166:  printchar 34                                                 printchar('"');
  167:  print "X+''%######"                                          printchar(35 + type.@id);
  168:  printchar 34                                                 printchar('"');
  169:  print ";\nconst MULTIPLICATIVE_REC = "                       println(";");
  170:  printchar 34                                                 printchar('"');
  171:  printchar 154                                                printchar(35 + type.@id);
  172:  print ".&#ʭ#ǥƁ#ʭ#"                                           printchar(35 + floor(7 + x));
  173:  printchar 34                                                 printchar('"');
  174:  print ";\n"                                                  println(";");
  175:  printflush message1                                          #set target = 8;


Performance: parsed in 189 ms, compiled in 241 ms, optimized in 879 ms, run in 15 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (176 steps):
const PRESS = "#'+nA######";
const BATTERY1 = "k*/(7######";
const BATTERY2 = "k+/(7######";
const GENERATOR = "m*.<2######";
const SMELTER = "%+-A<######";
const INVERTED_SORT1 = "T+,%%######";
const PNEUMATIC_DRILL = "w**5#-#####";
const UNLOADER1 = "*,###A<###";
const INVERTED_SORT2 = "T),%%######";
const OVERFLOW_GATE1 = "W*-'%######";
const PROCESSOR = "®-.}U#U####";
const POWER_NODE = "g)'%)######";
const UNLOADER2 = "(*###A<###";
const AIR_FACTORY = "'(_i#####&";
const UNLOADER3 = ",)###A<###";
const INVERTED_SORT3 = "T,*%%######";
const KILN = "',+_AA#####";
const WATER_EXT = "z%-AAA##A##";
const OVERFLOW_GATE2 = "W'*'%######";
const OVERFLOW_GATE3 = "W&*'%######";
const STEAM_GEN = "o%+FK<A####";
const MULTIPRESS = "$(.#U<###";
const WATER_EXT2 = "z%/AAA##A##";
const PAYLOAD_ROUTER = " '%-#2#####";
const UNLOADER4 = "*(###A<###";
const UNDERFLOW_GATE = "X*''%######";
const ADDITIVE_REC = "*%ë#}####";
const BATTERY_LARGE = "l/,#U#A7###";
const OVERFLOW_GATE4 = "W&*'%######";
const LASER_DRILL = "x**F#AA7###";
const SOLAR_PANEL = "r**#-#+####";
const CONTAINER = "**#######";
const SMELTER2 = "%.)A<######";
const INVERTED_SORT4 = "T-*%%######";
const INVERTED_SORT5 = "T-)%%######";
const UNLOADER5 = "--###A<###";
const UNLOADER6 = "+(###A<###";
const UNDERFLOW_GATE2 = "X+''%######";
const MULTIPLICATIVE_REC = ".&#ʭ#ǥƁ#ʭ#";

