   123 instructions before optimizations.
    12 instructions eliminated by Temp Variables Elimination (2 iterations).
    16 instructions eliminated by Dead Code Elimination (6 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    11 instructions eliminated by Jump Optimization (5 iterations).
     5 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
     2 instructions eliminated by Data Flow Optimization (5 iterations).
     1 instructions eliminated by Jump Straightening (5 iterations).
     3 instructions updated by JumpThreading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    69 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-10 instructions):
 
    26 op equal *tmp22 .factory null
    27 jump *label6 equal *tmp22 false
    28 jump *label4 always
-    * set *tmp23 null
    29 jump *label7 always
    30 label *label6
-    * set *tmp23 null
    31 label *label7
    32 sensor *tmp24 .factory @progress
    33 set .factoryProgress *tmp24
 
    38 set *tmp29 .factory
    39 control config *tmp29 @mono
    40 set .lastProgress 0
-    * set *tmp26 .lastProgress
    41 jump *label9 always
    42 label *label8
    43 op add *tmp31 .factoryProgress 0.1
 
    48 op add *tmp36 .flares 1
    49 set .flares *tmp36
    50 write *tmp36 .display ".flares"
-    * set *tmp35 *tmp36
    51 jump *label14 always
    52 label *label13
    53 op add *tmp37 .monos 1
    54 set .monos *tmp37
    55 write *tmp37 .display ".monos"
-    * set *tmp35 *tmp37
    56 label *label14
    57 op lessThan *tmp38 .monos 8
    58 jump *label15 equal *tmp38 false
 
    94 label *label20
    95 set *tmp33 *tmp45
    96 label *label11
-    * set *tmp26 *tmp33
    97 label *label9
    98 op notEqual *tmp53 .generator2 null
    99 jump *label21 equal *tmp53 false
 
   108 label *label23
   109 set *tmp57 null
   110 label *label24
-    * set *tmp54 *tmp57
   111 jump *label22 always
   112 label *label21
-    * set *tmp54 null
   113 label *label22
   114 set *tmp60 .factory
   115 sensor *tmp61 *tmp60 @config
 
   126 jump *label27 equal *tmp65 false
   127 set *tmp67 .unloader2
   128 control config *tmp67 @silicon
-    * set *tmp66 @silicon
   129 jump *label28 always
   130 label *label27
   131 set *tmp69 .unloader2
   132 control config *tmp69 @lead
-    * set *tmp66 @lead
   133 label *label28
   134 label *label4
   135 jump *label3 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-4 instructions):
 
    71 set .unitToProduce *tmp39
    72 label *label12
    73 set .lastProgress 0
-    * set *tmp33 .lastProgress
    74 jump *label11 always
    75 label *label10
    76 set *tmp42 .factory
 
    91 set .lastProgress .factoryProgress
    92 set *tmp45 .lastProgress
    93 label *label20
-    * set *tmp33 *tmp45
    94 label *label11
    95 label *label9
    96 op notEqual *tmp53 .generator2 null
 
   101 set *tmp58 .unloader2
   102 control config *tmp58 @coal
   103 jump *label4 always
-    * set *tmp57 null
   104 jump *label24 always
   105 label *label23
-    * set *tmp57 null
   106 label *label24
   107 jump *label22 always
   108 label *label21

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
    83 set *tmp50 .unitToProduce
    84 control config *tmp48 *tmp50
    85 set .lastProgress 0
-    * set *tmp45 .lastProgress
    86 jump *label20 always
    87 label *label19
    88 set *tmp51 .factory
    89 control enabled *tmp51 true
    90 set .lastProgress .factoryProgress
-    * set *tmp45 .lastProgress
    91 label *label20
    92 label *label11
    93 label *label9

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-12 instructions):
 
    29 jump *label7 always
    30 label *label6
    31 label *label7
-    * sensor *tmp24 .factory @progress
-    * set .factoryProgress *tmp24
+   32 sensor .factoryProgress .factory @progress
    33 op equal *tmp25 .unitToProduce null
    34 jump *label8 equal *tmp25 false
-    * set *tmp27 .factory
-    * control enabled *tmp27 false
-    * set *tmp29 .factory
-    * control config *tmp29 @mono
+   35 control enabled .factory false
+   36 control config .factory @mono
    37 set .lastProgress 0
    38 jump *label9 always
    39 label *label8
 
    70 set .lastProgress 0
    71 jump *label11 always
    72 label *label10
-    * set *tmp42 .factory
-    * sensor *tmp43 *tmp42 @config
+   73 sensor *tmp43 .factory @config
    74 op notEqual *tmp44 *tmp43 .unitToProduce
    75 jump *label19 equal *tmp44 false
-    * set *tmp46 .factory
-    * control enabled *tmp46 true
-    * set *tmp48 .factory
-    * set *tmp50 .unitToProduce
-    * control config *tmp48 *tmp50
+   76 control enabled .factory true
+   77 control config .factory .unitToProduce
    78 set .lastProgress 0
    79 jump *label20 always
    80 label *label19
-    * set *tmp51 .factory
-    * control enabled *tmp51 true
+   81 control enabled .factory true
    82 set .lastProgress .factoryProgress
    83 label *label20
    84 label *label11
 
    88 sensor *tmp55 .generator2 @coal
    89 op lessThan *tmp56 *tmp55 3
    90 jump *label23 equal *tmp56 false
-    * set *tmp58 .unloader2
-    * control config *tmp58 @coal
+   91 control config .unloader2 @coal
    92 jump *label4 always
    93 jump *label24 always
    94 label *label23
 
    96 jump *label22 always
    97 label *label21
    98 label *label22
-    * set *tmp60 .factory
-    * sensor *tmp61 *tmp60 @config
+   99 sensor *tmp61 .factory @config
   100 op equal *tmp62 *tmp61 @mono
   101 jump *label25 equal *tmp62 false
   102 set *tmp63 60
 
   108 sensor *tmp64 .factory @silicon
   109 op lessThan *tmp65 *tmp64 :main:siliconLimit
   110 jump *label27 equal *tmp65 false
-    * set *tmp67 .unloader2
-    * control config *tmp67 @silicon
+  111 control config .unloader2 @silicon
   112 jump *label28 always
   113 label *label27
-    * set *tmp69 .unloader2
-    * control config *tmp69 @lead
+  114 control config .unloader2 @lead
   115 label *label28
   116 label *label4
   117 jump *label3 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
     2 set *signature "0:v1"
     3 label *label0
     4 label *label3
-    * jump *label5 equal true false
     5 set *tmp2 .press
     6 sensor *tmp4 .core @graphite
     7 op lessThan *tmp5 *tmp4 .pressTarget

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-11 instructions):
 
    22 sensor *tmp20 .battery @totalPower
    23 op lessThan *tmp21 *tmp20 3500
    24 control enabled *tmp18 *tmp21
-    * op equal *tmp22 .factory null
-    * jump *label6 equal *tmp22 false
+   25 jump *label6 notEqual .factory null
    26 jump *label4 always
    27 jump *label7 always
    28 label *label6
    29 label *label7
    30 sensor .factoryProgress .factory @progress
-    * op equal *tmp25 .unitToProduce null
-    * jump *label8 equal *tmp25 false
+   31 jump *label8 notEqual .unitToProduce null
    32 control enabled .factory false
    33 control config .factory @mono
    34 set .lastProgress 0
    35 jump *label9 always
    36 label *label8
    37 op add *tmp31 .factoryProgress 0.1
-    * op greaterThan *tmp32 .lastProgress *tmp31
-    * jump *label10 equal *tmp32 false
-    * op equal *tmp34 .unitToProduce @flare
-    * jump *label13 equal *tmp34 false
+   38 jump *label10 lessThanEq .lastProgress *tmp31
+   39 jump *label13 notEqual .unitToProduce @flare
    40 op add *tmp36 .flares 1
    41 set .flares *tmp36
    42 write *tmp36 .display ".flares"
 
    46 set .monos *tmp37
    47 write *tmp37 .display ".monos"
    48 label *label14
-    * op lessThan *tmp38 .monos 8
-    * jump *label15 equal *tmp38 false
+   49 jump *label15 greaterThanEq .monos 8
    50 set *tmp39 @mono
    51 jump *label16 always
    52 label *label15
-    * op lessThan *tmp40 .flares 8
-    * jump *label17 equal *tmp40 false
+   53 jump *label17 greaterThanEq .flares 8
    54 set *tmp41 @flare
    55 jump *label18 always
    56 label *label17
 
    64 jump *label11 always
    65 label *label10
    66 sensor *tmp43 .factory @config
-    * op notEqual *tmp44 *tmp43 .unitToProduce
-    * jump *label19 equal *tmp44 false
+   67 jump *label19 equal *tmp43 .unitToProduce
    68 control enabled .factory true
    69 control config .factory .unitToProduce
    70 set .lastProgress 0
 
    75 label *label20
    76 label *label11
    77 label *label9
-    * op notEqual *tmp53 .generator2 null
-    * jump *label21 equal *tmp53 false
+   78 jump *label21 equal .generator2 null
    79 sensor *tmp55 .generator2 @coal
-    * op lessThan *tmp56 *tmp55 3
-    * jump *label23 equal *tmp56 false
+   80 jump *label23 greaterThanEq *tmp55 3
    81 control config .unloader2 @coal
    82 jump *label4 always
    83 jump *label24 always
 
    87 label *label21
    88 label *label22
    89 sensor *tmp61 .factory @config
-    * op equal *tmp62 *tmp61 @mono
-    * jump *label25 equal *tmp62 false
+   90 jump *label25 notEqual *tmp61 @mono
    91 set *tmp63 60
    92 jump *label26 always
    93 label *label25
 
    95 label *label26
    96 set :main:siliconLimit *tmp63
    97 sensor *tmp64 .factory @silicon
-    * op lessThan *tmp65 *tmp64 :main:siliconLimit
-    * jump *label27 equal *tmp65 false
+   98 jump *label27 greaterThanEq *tmp64 :main:siliconLimit
    99 control config .unloader2 @silicon
   100 jump *label28 always
   101 label *label27

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-3 instructions):
 
    24 control enabled *tmp18 *tmp21
    25 jump *label6 notEqual .factory null
    26 jump *label4 always
-    * jump *label7 always
    27 label *label6
    28 label *label7
    29 sensor .factoryProgress .factory @progress
 
    79 jump *label23 greaterThanEq *tmp55 3
    80 control config .unloader2 @coal
    81 jump *label4 always
-    * jump *label24 always
    82 label *label23
    83 label *label24
-    * jump *label22 always
    84 label *label21
    85 label *label22
    86 sensor *tmp61 .factory @config

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
     0 set .lastProgress 0
-    * set .factoryProgress 0
     1 set *signature "0:v1"
     2 label *label0
     3 label *label3
 
    91 label *label26
    92 set :main:siliconLimit *tmp63
    93 sensor *tmp64 .factory @silicon
-    * jump *label27 greaterThanEq *tmp64 :main:siliconLimit
+   94 jump *label27 greaterThanEq *tmp64 *tmp63
    95 control config .unloader2 @silicon
    96 jump *label28 always
    97 label *label27

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    89 label *label25
    90 set *tmp63 30
    91 label *label26
-    * set :main:siliconLimit *tmp63
    92 sensor *tmp64 .factory @silicon
    93 jump *label27 greaterThanEq *tmp64 *tmp63
    94 control config .unloader2 @silicon

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-3 instructions):
 
    44 set .monos *tmp37
    45 write *tmp37 .display ".monos"
    46 label *label14
-    * jump *label15 greaterThanEq .monos 8
-    * set *tmp39 @mono
-    * jump *label16 always
+   47 set .unitToProduce @mono
+   48 jump *label16 lessThan .monos 8
    49 label *label15
-    * jump *label17 greaterThanEq .flares 8
-    * set *tmp41 @flare
+   50 set .unitToProduce null
+   51 jump *label18 greaterThanEq .flares 8
+   52 set .unitToProduce @flare
    53 jump *label18 always
-    * label *label17
-    * set *tmp41 null
    54 label *label18
-    * set *tmp39 *tmp41
    55 label *label16
-    * set .unitToProduce *tmp39
    56 label *label12
    57 set .lastProgress 0
    58 jump *label11 always
 
    78 label *label24
    79 label *label21
    80 label *label22
+   81 set *tmp63 30
    82 sensor *tmp61 .factory @config
-    * jump *label25 notEqual *tmp61 @mono
+   83 jump *label26 notEqual *tmp61 @mono
    84 set *tmp63 60
    85 jump *label26 always
-    * label *label25
-    * set *tmp63 30
    86 label *label26
    87 sensor *tmp64 .factory @silicon
    88 jump *label27 greaterThanEq *tmp64 *tmp63

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
    50 set .unitToProduce null
    51 jump *label18 greaterThanEq .flares 8
    52 set .unitToProduce @flare
-    * jump *label18 always
    53 label *label18
    54 label *label16
    55 label *label12
 
    81 sensor *tmp61 .factory @config
    82 jump *label26 notEqual *tmp61 @mono
    83 set *tmp63 60
-    * jump *label26 always
    84 label *label26
    85 sensor *tmp64 .factory @silicon
    86 jump *label27 greaterThanEq *tmp64 *tmp63

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    24 jump *label6 notEqual .factory null
    25 jump *label4 always
    26 label *label6
-    * label *label7
    27 sensor .factoryProgress .factory @progress
    28 jump *label8 notEqual .unitToProduce null
    29 control enabled .factory false
 
    45 label *label14
    46 set .unitToProduce @mono
    47 jump *label16 lessThan .monos 8
-    * label *label15
    48 set .unitToProduce null
    49 jump *label18 greaterThanEq .flares 8
    50 set .unitToProduce @flare
    51 label *label18
    52 label *label16
-    * label *label12
    53 set .lastProgress 0
    54 jump *label11 always
    55 label *label10
 
    71 control config .unloader2 @coal
    72 jump *label4 always
    73 label *label23
-    * label *label24
    74 label *label21
-    * label *label22
    75 set *tmp63 30
    76 sensor *tmp61 .factory @config
    77 jump *label26 notEqual *tmp61 @mono
 
    86 label *label28
    87 label *label4
    88 jump *label3 always
-    * label *label5
-    * label *label2
-    * label *label1
    89 wait 1e12
    90 jump *label0 always
    91 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-1 instructions):
 
    21 sensor *tmp20 .battery @totalPower
    22 op lessThan *tmp21 *tmp20 3500
    23 control enabled *tmp18 *tmp21
-    * jump *label6 notEqual .factory null
-    * jump *label4 always
+   24 jump *label4 equal .factory null
    25 label *label6
    26 sensor .factoryProgress .factory @progress
    27 jump *label8 notEqual .unitToProduce null

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    22 op lessThan *tmp21 *tmp20 3500
    23 control enabled *tmp18 *tmp21
    24 jump *label4 equal .factory null
-    * label *label6
    25 sensor .factoryProgress .factory @progress
    26 jump *label8 notEqual .unitToProduce null
    27 control enabled .factory false

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    21 sensor *tmp20 .battery @totalPower
    22 op lessThan *tmp21 *tmp20 3500
    23 control enabled *tmp18 *tmp21
-    * jump *label4 equal .factory null
+   24 jump *label3 equal .factory null
    25 sensor .factoryProgress .factory @progress
    26 jump *label8 notEqual .unitToProduce null
    27 control enabled .factory false
 
    67 sensor *tmp55 .generator2 @coal
    68 jump *label23 greaterThanEq *tmp55 3
    69 control config .unloader2 @coal
-    * jump *label4 always
+   70 jump *label3 always
    71 label *label23
    72 label *label21
    73 set *tmp63 30
 
    78 sensor *tmp64 .factory @silicon
    79 jump *label27 greaterThanEq *tmp64 *tmp63
    80 control config .unloader2 @silicon
-    * jump *label28 always
+   81 jump *label3 always
    82 label *label27
    83 control config .unloader2 @lead
    84 label *label28

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-3 instructions):
 
    81 jump *label3 always
    82 label *label27
    83 control config .unloader2 @lead
-    * label *label28
-    * label *label4
    84 jump *label3 always
-    * wait 1e12
-    * jump *label0 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
     0 set .lastProgress 0
     1 set *signature "0:v1"
-    * label *label0
     2 label *label3
     3 set *tmp2 .press
     4 sensor *tmp4 .core @graphite

Final code before resolving virtual instructions:

    0:  jump *label29 always 0 0                                     var lastProgress = 0, factoryProgress = 0;
    1:  draw triangle .battery .core .display .factory .factoryProgr ...
    2:  draw triangle .generator .generator2 .kiln .kilnTarget .last ...
    3:  draw triangle .press .pressTarget .smelter .smelterTarget .u ...
        label *label29                                               ...
    4:  set .lastProgress 0                                          ...
    5:  set *signature "0:v1"                                        #set target = 8;
        label *label3                                                while true do
    6:  set *tmp2 .press                                             press.enabled = core.@graphite < pressTarget;
    7:  sensor *tmp4 .core @graphite                                 ...
    8:  op lessThan *tmp5 *tmp4 .pressTarget                         ...
    9:  control enabled *tmp2 *tmp5 0 0 0                            ...
   10:  set *tmp6 .smelter                                           smelter.enabled = core.@silicon < smelterTarget;
   11:  sensor *tmp8 .core @silicon                                  ...
   12:  op lessThan *tmp9 *tmp8 .smelterTarget                       ...
   13:  control enabled *tmp6 *tmp9 0 0 0                            ...
   14:  set *tmp10 .kiln                                             kiln.enabled = core.@metaglass < kilnTarget;
   15:  sensor *tmp12 .core @metaglass                               ...
   16:  op lessThan *tmp13 *tmp12 .kilnTarget                        ...
   17:  control enabled *tmp10 *tmp13 0 0 0                          ...
   18:  set *tmp14 .generator                                        generator.enabled = battery.@totalPower < 1000;
   19:  sensor *tmp16 .battery @totalPower                           ...
   20:  op lessThan *tmp17 *tmp16 1000                               ...
   21:  control enabled *tmp14 *tmp17 0 0 0                          ...
   22:  set *tmp18 .generator2                                       generator2.enabled = battery.@totalPower < 3500;
   23:  sensor *tmp20 .battery @totalPower                           ...
   24:  op lessThan *tmp21 *tmp20 3500                               ...
   25:  control enabled *tmp18 *tmp21 0 0 0                          ...
   26:  jump *label3 equal .factory null                             if factory == null then continue; end;
   27:  sensor .factoryProgress .factory @progress                   factoryProgress = factory.@progress;
   28:  jump *label8 notEqual .unitToProduce null                    if unitToProduce == null then
   29:  control enabled .factory false 0 0 0                         factory.enabled = false;
   30:  control config .factory @mono 0 0 0                          factory.config = @mono;
   31:  set .lastProgress 0                                          lastProgress = 0;
   32:  jump *label9 always 0 0                                      if unitToProduce == null then
        label *label8                                                ...
   33:  op add *tmp31 .factoryProgress 0.1                           elsif lastProgress > factoryProgress + 0.1 then
   34:  jump *label10 lessThanEq .lastProgress *tmp31                ...
   35:  jump *label13 notEqual .unitToProduce @flare                 if unitToProduce == @flare then
   36:  op add *tmp36 .flares 1                                      displayFlares = ++flares;
   37:  set .flares *tmp36                                           ...
   38:  write *tmp36 .display ".flares"                              ...
   39:  jump *label14 always 0 0                                     if unitToProduce == @flare then
        label *label13                                               ...
   40:  op add *tmp37 .monos 1                                       displayMonos = ++monos;
   41:  set .monos *tmp37                                            ...
   42:  write *tmp37 .display ".monos"                               ...
        label *label14                                               if unitToProduce == @flare then
   43:  set .unitToProduce @mono                                     unitToProduce = monos < 8 ? @mono : flares < 8 ? @flare : null;
   44:  jump *label16 lessThan .monos 8                              ...
   45:  set .unitToProduce null                                      ...
   46:  jump *label18 greaterThanEq .flares 8                        ...
   47:  set .unitToProduce @flare                                    ...
        label *label18                                               ...
        label *label16                                               ...
   48:  set .lastProgress 0                                          lastProgress = 0;
   49:  jump *label11 always 0 0                                     elsif lastProgress > factoryProgress + 0.1 then
        label *label10                                               ...
   50:  sensor *tmp43 .factory @config                               elsif factory.config != unitToProduce then
   51:  jump *label19 equal *tmp43 .unitToProduce                    ...
   52:  control enabled .factory true 0 0 0                          factory.enabled = true;
   53:  control config .factory .unitToProduce 0 0 0                 factory.config = unitToProduce;
   54:  set .lastProgress 0                                          lastProgress = 0;
   55:  jump *label20 always 0 0                                     elsif factory.config != unitToProduce then
        label *label19                                               ...
   56:  control enabled .factory true 0 0 0                          factory.enabled = true;
   57:  set .lastProgress .factoryProgress                           lastProgress = factoryProgress;
        label *label20                                               elsif factory.config != unitToProduce then
        label *label11                                               elsif lastProgress > factoryProgress + 0.1 then
        label *label9                                                if unitToProduce == null then
   58:  jump *label21 equal .generator2 null                         if generator2 != null then
   59:  sensor *tmp55 .generator2 @coal                              if generator2.@coal < 3 then
   60:  jump *label23 greaterThanEq *tmp55 3                         ...
   61:  control config .unloader2 @coal 0 0 0                        unloader2.config = @coal;
   62:  jump *label3 always 0 0                                      continue;
        label *label23                                               if generator2.@coal < 3 then
        label *label21                                               if generator2 != null then
   63:  set *tmp63 30                                                var siliconLimit = factory.config == @mono ? 60 : 30;
   64:  sensor *tmp61 .factory @config                               ...
   65:  jump *label26 notEqual *tmp61 @mono                          ...
   66:  set *tmp63 60                                                ...
        label *label26                                               ...
   67:  sensor *tmp64 .factory @silicon                              if factory.@silicon < siliconLimit then
   68:  jump *label27 greaterThanEq *tmp64 *tmp63                    ...
   69:  control config .unloader2 @silicon 0 0 0                     unloader2.config = @silicon;
   70:  jump *label3 always 0 0                                      if factory.@silicon < siliconLimit then
        label *label27                                               ...
   71:  control config .unloader2 @lead 0 0 0                        unloader2.config = @lead;
   72:  jump *label3 always 0 0                                      while true do


Performance: parsed in 158 ms, compiled in 224 ms, optimized in 215 ms, run in 14 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (5 steps):
The program didn't generate any output.
Execution exception at instruction 7: sensor *tmp4 .core @graphite:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
