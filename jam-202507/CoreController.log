    93 instructions before optimizations.
    13 instructions eliminated by Temp Variables Elimination (3 iterations).
    14 instructions eliminated by Dead Code Elimination (6 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
     7 instructions eliminated by Jump Optimization (4 iterations).
     3 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions eliminated by Jump Straightening (4 iterations).
     3 instructions updated by JumpThreading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    51 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-8 instructions):
 
    21 op equal *tmp16 .factory null
    22 jump *label5 equal *tmp16 false
    23 jump *label3 always
-    * set *tmp17 null
    24 jump *label6 always
    25 label *label5
-    * set *tmp17 null
    26 label *label6
    27 op equal *tmp18 .unitToProduce null
    28 jump *label7 equal *tmp18 false
 
    31 set *tmp22 .factory
    32 control config *tmp22 @mono
    33 set .lastProgress -1
-    * set *tmp19 .lastProgress
    34 jump *label8 always
    35 label *label7
    36 sensor *tmp24 .factory @progress
 
    67 label *label12
    68 set *tmp27 *tmp35
    69 label *label10
-    * set *tmp19 *tmp27
    70 label *label8
    71 op notEqual *tmp44 .generator2 null
    72 jump *label13 equal *tmp44 false
 
    81 label *label15
    82 set *tmp48 null
    83 label *label16
-    * set *tmp45 *tmp48
    84 jump *label14 always
    85 label *label13
-    * set *tmp45 null
    86 label *label14
    87 sensor *tmp51 .factory @silicon
    88 op lessThan *tmp52 *tmp51 30
    89 jump *label17 equal *tmp52 false
    90 set *tmp54 .unloader2
    91 control config *tmp54 @silicon
-    * set *tmp53 @silicon
    92 jump *label18 always
    93 label *label17
    94 set *tmp56 .unloader2
    95 control config *tmp56 @lead
-    * set *tmp53 @lead
    96 label *label18
    97 label *label3
    98 jump *label2 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-4 instructions):
 
    43 set *tmp30 .factory
    44 control config *tmp30 @mono
    45 set .lastProgress 0
-    * set *tmp27 .lastProgress
    46 jump *label10 always
    47 label *label9
    48 set *tmp32 .factory
 
    64 set .lastProgress *tmp43
    65 set *tmp35 .lastProgress
    66 label *label12
-    * set *tmp27 *tmp35
    67 label *label10
    68 label *label8
    69 op notEqual *tmp44 .generator2 null
 
    74 set *tmp49 .unloader2
    75 control config *tmp49 @coal
    76 jump *label3 always
-    * set *tmp48 null
    77 jump *label16 always
    78 label *label15
-    * set *tmp48 null
    79 label *label16
    80 jump *label14 always
    81 label *label13

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
    55 set *tmp40 .unitToProduce
    56 control config *tmp38 *tmp40
    57 set .lastProgress 0
-    * set *tmp35 .lastProgress
    58 jump *label12 always
    59 label *label11
    60 set *tmp41 .factory
    61 control enabled *tmp41 true
    62 sensor *tmp43 .factory @progress
    63 set .lastProgress *tmp43
-    * set *tmp35 .lastProgress
    64 label *label12
    65 label *label10
    66 label *label8

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-12 instructions):
 
    26 label *label6
    27 op equal *tmp18 .unitToProduce null
    28 jump *label7 equal *tmp18 false
-    * set *tmp20 .factory
-    * control enabled *tmp20 false
-    * set *tmp22 .factory
-    * control config *tmp22 @mono
+   29 control enabled .factory false
+   30 control config .factory @mono
    31 set .lastProgress -1
    32 jump *label8 always
    33 label *label7
 
    36 op greaterThan *tmp26 .lastProgress *tmp25
    37 jump *label9 equal *tmp26 false
    38 set .unitToProduce null
-    * set *tmp28 .factory
-    * control enabled *tmp28 false
-    * set *tmp30 .factory
-    * control config *tmp30 @mono
+   39 control enabled .factory false
+   40 control config .factory @mono
    41 set .lastProgress 0
    42 jump *label10 always
    43 label *label9
-    * set *tmp32 .factory
-    * sensor *tmp33 *tmp32 @config
+   44 sensor *tmp33 .factory @config
    45 op notEqual *tmp34 *tmp33 .unitToProduce
    46 jump *label11 equal *tmp34 false
-    * set *tmp36 .factory
-    * control enabled *tmp36 true
+   47 control enabled .factory true
    48 set *tmp38 .factory
-    * set *tmp40 .unitToProduce
-    * control config *tmp38 *tmp40
+   49 control config *tmp38 .unitToProduce
    50 set .lastProgress 0
    51 jump *label12 always
    52 label *label11
-    * set *tmp41 .factory
-    * control enabled *tmp41 true
-    * sensor *tmp43 .factory @progress
-    * set .lastProgress *tmp43
+   53 control enabled .factory true
+   54 sensor .lastProgress .factory @progress
    55 label *label12
    56 label *label10
    57 label *label8
 
    60 sensor *tmp46 .generator2 @coal
    61 op lessThan *tmp47 *tmp46 3
    62 jump *label15 equal *tmp47 false
-    * set *tmp49 .unloader2
-    * control config *tmp49 @coal
+   63 control config .unloader2 @coal
    64 jump *label3 always
    65 jump *label16 always
    66 label *label15
 
    71 sensor *tmp51 .factory @silicon
    72 op lessThan *tmp52 *tmp51 30
    73 jump *label17 equal *tmp52 false
-    * set *tmp54 .unloader2
-    * control config *tmp54 @silicon
+   74 control config .unloader2 @silicon
    75 jump *label18 always
    76 label *label17
-    * set *tmp56 .unloader2
-    * control config *tmp56 @lead
+   77 control config .unloader2 @lead
    78 label *label18
    79 label *label3
    80 jump *label2 always

Modifications by Initial phase, Temp Variables Elimination, iteration 2 (-1 instructions):
 
    45 op notEqual *tmp34 *tmp33 .unitToProduce
    46 jump *label11 equal *tmp34 false
    47 control enabled .factory true
-    * set *tmp38 .factory
-    * control config *tmp38 .unitToProduce
+   48 control config .factory .unitToProduce
    49 set .lastProgress 0
    50 jump *label12 always
    51 label *label11

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
     1 set *signature "0:v1"
     2 label *label0
     3 label *label2
-    * jump *label4 equal true false
     4 set *tmp0 .press
     5 sensor *tmp2 .core @graphite
     6 op lessThan *tmp3 *tmp2 .pressTarget

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-7 instructions):
 
    17 sensor *tmp14 .battery @totalPower
    18 op lessThan *tmp15 *tmp14 3800
    19 control enabled *tmp12 *tmp15
-    * op equal *tmp16 .factory null
-    * jump *label5 equal *tmp16 false
+   20 jump *label5 notEqual .factory null
    21 jump *label3 always
    22 jump *label6 always
    23 label *label5
    24 label *label6
-    * op equal *tmp18 .unitToProduce null
-    * jump *label7 equal *tmp18 false
+   25 jump *label7 notEqual .unitToProduce null
    26 control enabled .factory false
    27 control config .factory @mono
    28 set .lastProgress -1
 
    30 label *label7
    31 sensor *tmp24 .factory @progress
    32 op add *tmp25 *tmp24 0.1
-    * op greaterThan *tmp26 .lastProgress *tmp25
-    * jump *label9 equal *tmp26 false
+   33 jump *label9 lessThanEq .lastProgress *tmp25
    34 set .unitToProduce null
    35 control enabled .factory false
    36 control config .factory @mono
 
    38 jump *label10 always
    39 label *label9
    40 sensor *tmp33 .factory @config
-    * op notEqual *tmp34 *tmp33 .unitToProduce
-    * jump *label11 equal *tmp34 false
+   41 jump *label11 equal *tmp33 .unitToProduce
    42 control enabled .factory true
    43 control config .factory .unitToProduce
    44 set .lastProgress 0
 
    49 label *label12
    50 label *label10
    51 label *label8
-    * op notEqual *tmp44 .generator2 null
-    * jump *label13 equal *tmp44 false
+   52 jump *label13 equal .generator2 null
    53 sensor *tmp46 .generator2 @coal
-    * op lessThan *tmp47 *tmp46 3
-    * jump *label15 equal *tmp47 false
+   54 jump *label15 greaterThanEq *tmp46 3
    55 control config .unloader2 @coal
    56 jump *label3 always
    57 jump *label16 always
 
    61 label *label13
    62 label *label14
    63 sensor *tmp51 .factory @silicon
-    * op lessThan *tmp52 *tmp51 30
-    * jump *label17 equal *tmp52 false
+   64 jump *label17 greaterThanEq *tmp51 30
    65 control config .unloader2 @silicon
    66 jump *label18 always
    67 label *label17

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-3 instructions):
 
    19 control enabled *tmp12 *tmp15
    20 jump *label5 notEqual .factory null
    21 jump *label3 always
-    * jump *label6 always
    22 label *label5
    23 label *label6
    24 jump *label7 notEqual .unitToProduce null
 
    53 jump *label15 greaterThanEq *tmp46 3
    54 control config .unloader2 @coal
    55 jump *label3 always
-    * jump *label16 always
    56 label *label15
    57 label *label16
-    * jump *label14 always
    58 label *label13
    59 label *label14
    60 sensor *tmp51 .factory @silicon

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
    20 jump *label5 notEqual .factory null
    21 jump *label3 always
    22 label *label5
-    * label *label6
    23 jump *label7 notEqual .unitToProduce null
    24 control enabled .factory false
    25 control config .factory @mono
 
    53 control config .unloader2 @coal
    54 jump *label3 always
    55 label *label15
-    * label *label16
    56 label *label13
-    * label *label14
    57 sensor *tmp51 .factory @silicon
    58 jump *label17 greaterThanEq *tmp51 30
    59 control config .unloader2 @silicon
 
    63 label *label18
    64 label *label3
    65 jump *label2 always
-    * label *label4
-    * label *label1
    66 wait 1e12
    67 jump *label0 always
    68 end

Modifications by Jumps phase, Jump Straightening, pass 3, iteration 1 (-1 instructions):
 
    17 sensor *tmp14 .battery @totalPower
    18 op lessThan *tmp15 *tmp14 3800
    19 control enabled *tmp12 *tmp15
-    * jump *label5 notEqual .factory null
-    * jump *label3 always
+   20 jump *label3 equal .factory null
    21 label *label5
    22 jump *label7 notEqual .unitToProduce null
    23 control enabled .factory false

Modifications by Jumps phase, Jump Optimization, pass 3, iteration 1:
 
    18 op lessThan *tmp15 *tmp14 3800
    19 control enabled *tmp12 *tmp15
    20 jump *label3 equal .factory null
-    * label *label5
    21 jump *label7 notEqual .unitToProduce null
    22 control enabled .factory false
    23 control config .factory @mono

Modifications by Jumps phase, Jump Threading, pass 3, iteration 1:
 
    17 sensor *tmp14 .battery @totalPower
    18 op lessThan *tmp15 *tmp14 3800
    19 control enabled *tmp12 *tmp15
-    * jump *label3 equal .factory null
+   20 jump *label2 equal .factory null
    21 jump *label7 notEqual .unitToProduce null
    22 control enabled .factory false
    23 control config .factory @mono
 
    49 sensor *tmp46 .generator2 @coal
    50 jump *label15 greaterThanEq *tmp46 3
    51 control config .unloader2 @coal
-    * jump *label3 always
+   52 jump *label2 always
    53 label *label15
    54 label *label13
    55 sensor *tmp51 .factory @silicon
    56 jump *label17 greaterThanEq *tmp51 30
    57 control config .unloader2 @silicon
-    * jump *label18 always
+   58 jump *label2 always
    59 label *label17
    60 control config .unloader2 @lead
    61 label *label18

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1 (-3 instructions):
 
    58 jump *label2 always
    59 label *label17
    60 control config .unloader2 @lead
-    * label *label18
-    * label *label3
    61 jump *label2 always
-    * wait 1e12
-    * jump *label0 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 3, iteration 1:
     0 set .lastProgress -1
     1 set *signature "0:v1"
-    * label *label0
     2 label *label2
     3 set *tmp0 .press
     4 sensor *tmp2 .core @graphite

Final code before resolving virtual instructions:

    0:  set .lastProgress -1                                         var lastProgress = -1;
    1:  set *signature "0:v1"                                        #set target = 8;
        label *label2                                                while true do
    2:  set *tmp0 .press                                             press.enabled = core.@graphite < pressTarget;
    3:  sensor *tmp2 .core @graphite                                 ...
    4:  op lessThan *tmp3 *tmp2 .pressTarget                         ...
    5:  control enabled *tmp0 *tmp3 0 0 0                            ...
    6:  set *tmp4 .smelter                                           smelter.enabled = core.@silicon < smelterTarget;
    7:  sensor *tmp6 .core @silicon                                  ...
    8:  op lessThan *tmp7 *tmp6 .smelterTarget                       ...
    9:  control enabled *tmp4 *tmp7 0 0 0                            ...
   10:  set *tmp8 .kiln                                              kiln.enabled = core.@metaglass < kilnTarget;
   11:  sensor *tmp10 .core @metaglass                               ...
   12:  op lessThan *tmp11 *tmp10 .kilnTarget                        ...
   13:  control enabled *tmp8 *tmp11 0 0 0                           ...
   14:  set *tmp12 .generator                                        generator.enabled = battery.@totalPower < 3800;
   15:  sensor *tmp14 .battery @totalPower                           ...
   16:  op lessThan *tmp15 *tmp14 3800                               ...
   17:  control enabled *tmp12 *tmp15 0 0 0                          ...
   18:  jump *label2 equal .factory null                             if factory == null then continue; end;
   19:  jump *label7 notEqual .unitToProduce null                    if unitToProduce == null then
   20:  control enabled .factory false 0 0 0                         factory.enabled = false;
   21:  control config .factory @mono 0 0 0                          factory.config = @mono;
   22:  set .lastProgress -1                                         lastProgress = -1;
   23:  jump *label8 always 0 0                                      if unitToProduce == null then
        label *label7                                                ...
   24:  sensor *tmp24 .factory @progress                             elsif lastProgress > factory.@progress + 0.1 then
   25:  op add *tmp25 *tmp24 0.1                                     ...
   26:  jump *label9 lessThanEq .lastProgress *tmp25                 ...
   27:  set .unitToProduce null                                      unitToProduce = null;
   28:  control enabled .factory false 0 0 0                         factory.enabled = false;
   29:  control config .factory @mono 0 0 0                          factory.config = @mono;
   30:  set .lastProgress 0                                          lastProgress = 0;
   31:  jump *label10 always 0 0                                     elsif lastProgress > factory.@progress + 0.1 then
        label *label9                                                ...
   32:  sensor *tmp33 .factory @config                               elsif factory.config != unitToProduce then
   33:  jump *label11 equal *tmp33 .unitToProduce                    ...
   34:  control enabled .factory true 0 0 0                          factory.enabled = true;
   35:  control config .factory .unitToProduce 0 0 0                 factory.config = unitToProduce;
   36:  set .lastProgress 0                                          lastProgress = 0;
   37:  jump *label12 always 0 0                                     elsif factory.config != unitToProduce then
        label *label11                                               ...
   38:  control enabled .factory true 0 0 0                          factory.enabled = true;
   39:  sensor .lastProgress .factory @progress                      lastProgress = factory.@progress;
        label *label12                                               elsif factory.config != unitToProduce then
        label *label10                                               elsif lastProgress > factory.@progress + 0.1 then
        label *label8                                                if unitToProduce == null then
   40:  jump *label13 equal .generator2 null                         if generator2 != null then
   41:  sensor *tmp46 .generator2 @coal                              if generator2.@coal < 3 then
   42:  jump *label15 greaterThanEq *tmp46 3                         ...
   43:  control config .unloader2 @coal 0 0 0                        unloader2.config = @coal;
   44:  jump *label2 always 0 0                                      continue;
        label *label15                                               if generator2.@coal < 3 then
        label *label13                                               if generator2 != null then
   45:  sensor *tmp51 .factory @silicon                              if factory.@silicon < 30 then
   46:  jump *label17 greaterThanEq *tmp51 30                        ...
   47:  control config .unloader2 @silicon 0 0 0                     unloader2.config = @silicon;
   48:  jump *label2 always 0 0                                      if factory.@silicon < 30 then
        label *label17                                               ...
   49:  control config .unloader2 @lead 0 0 0                        unloader2.config = @lead;
   50:  jump *label2 always 0 0                                      while true do


Performance: parsed in 130 ms, compiled in 176 ms, optimized in 133 ms, run in 3 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 3: sensor *tmp2 .core @graphite:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
