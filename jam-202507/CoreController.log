   150 instructions before optimizations.
    17 instructions eliminated by Temp Variables Elimination (3 iterations).
    17 instructions eliminated by Dead Code Elimination (6 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
     8 instructions eliminated by Jump Optimization (5 iterations).
     2 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
    11 instructions eliminated by Data Flow Optimization (6 iterations).
     3 instructions updated by JumpThreading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    88 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-10 instructions):
 
    35 set :updateIfSmaller:b :fuzzyUpdate:limitLow
    36 set :updateIfSmaller:newValue false
    37 select :backgroundProcess:enableFactory lessThan :updateIfSmaller:a :updateIfSmaller:b :updateIfSmaller:newValue :backgroundProcess:enableFactory
-    * set *tmp23 null
    38 label *label7
    39 set :updateIfSmaller.1:a :fuzzyUpdate:limitHigh
    40 set :updateIfSmaller.1:b :fuzzyUpdate:value
 
    42 select :backgroundProcess:enableFactory lessThan :updateIfSmaller.1:a :updateIfSmaller.1:b :updateIfSmaller.1:newValue :backgroundProcess:enableFactory
    43 set *tmp24 null
    44 label *label8
-    * set *tmp22 *tmp24
    45 label *label6
    46 sensor *tmp25 .factory @progress
    47 set :backgroundProcess:factoryProgress *tmp25
 
    52 set *tmp30 .factory
    53 control config *tmp30 @mono
    54 set :backgroundProcess:lastProgress 0
-    * set *tmp27 :backgroundProcess:lastProgress
    55 jump *label10 always
    56 label *label9
    57 op add *tmp32 :backgroundProcess:factoryProgress 0.1
 
    78 op add *tmp47 .flares 1
    79 set .flares *tmp47
    80 write *tmp47 .display ".flares"
-    * set *tmp46 *tmp47
    81 jump *label17 always
    82 label *label16
    83 op add *tmp48 .monos 1
    84 set .monos *tmp48
    85 write *tmp48 .display ".monos"
-    * set *tmp46 *tmp48
    86 label *label17
    87 op lessThan *tmp49 .monos 8
    88 jump *label18 equal *tmp49 false
 
   124 label *label23
   125 set *tmp34 *tmp56
   126 label *label12
-    * set *tmp27 *tmp34
   127 label *label10
   128 sensor *tmp64 .generator2 @coal
   129 op lessThan *tmp65 *tmp64 .generator2
 
   131 set *tmp67 .unloader2
   132 control config *tmp67 @coal
   133 jump *label4 always
-    * set *tmp66 null
   134 jump *label25 always
   135 label *label24
-    * set *tmp66 null
   136 label *label25
   137 op equal *tmp69 .unitToProduce @mono
   138 op mul *tmp70 *tmp69 30
 
   145 jump *label26 equal *tmp75 false
   146 set *tmp77 .unloader2
   147 control config *tmp77 @lead
-    * set *tmp76 @lead
   148 jump *label27 always
   149 label *label26
   150 op greaterThan *tmp79 :backgroundProcess:coreSilicon .siliconReserve
 
   158 control config *tmp83 @coal
   159 set *tmp80 @coal
   160 label *label29
-    * set *tmp76 *tmp80
   161 label *label27
   162 label *label4
   163 jump *label3 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-5 instructions):
 
    40 set :updateIfSmaller.1:b :fuzzyUpdate:value
    41 set :updateIfSmaller.1:newValue true
    42 select :backgroundProcess:enableFactory lessThan :updateIfSmaller.1:a :updateIfSmaller.1:b :updateIfSmaller.1:newValue :backgroundProcess:enableFactory
-    * set *tmp24 null
    43 label *label8
    44 label *label6
    45 sensor *tmp25 .factory @progress
 
   100 set .unitToProduce *tmp50
   101 label *label13
   102 set :backgroundProcess:lastProgress 0
-    * set *tmp34 :backgroundProcess:lastProgress
   103 jump *label12 always
   104 label *label11
   105 set *tmp53 .factory
 
   120 set :backgroundProcess:lastProgress :backgroundProcess:factoryProgress
   121 set *tmp56 :backgroundProcess:lastProgress
   122 label *label23
-    * set *tmp34 *tmp56
   123 label *label12
   124 label *label10
   125 sensor *tmp64 .generator2 @coal
 
   148 jump *label28 equal *tmp79 false
   149 set *tmp81 .unloader2
   150 control config *tmp81 @silicon
-    * set *tmp80 @silicon
   151 jump *label29 always
   152 label *label28
   153 set *tmp83 .unloader2
   154 control config *tmp83 @coal
-    * set *tmp80 @coal
   155 label *label29
   156 label *label27
   157 label *label4

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   112 set *tmp61 .unitToProduce
   113 control config *tmp59 *tmp61
   114 set :backgroundProcess:lastProgress 0
-    * set *tmp56 :backgroundProcess:lastProgress
   115 jump *label23 always
   116 label *label22
   117 set *tmp62 .factory
   118 control enabled *tmp62 :backgroundProcess:enableFactory
   119 set :backgroundProcess:lastProgress :backgroundProcess:factoryProgress
-    * set *tmp56 :backgroundProcess:lastProgress
   120 label *label23
   121 label *label12
   122 label *label10

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-16 instructions):
 
     7 set :backgroundProcess:enableFactory true
     8 label *label3
     9 jump *label5 equal true false
-    * sensor *tmp3 .core @silicon
-    * set :backgroundProcess:coreSilicon *tmp3
+   10 sensor :backgroundProcess:coreSilicon .core @silicon
    11 set *tmp4 .smelter
    12 op lessThan *tmp6 :backgroundProcess:coreSilicon .smelterTarget
    13 control enabled *tmp4 *tmp6
 
    19 sensor *tmp13 .core @metaglass
    20 op lessThan *tmp14 *tmp13 .kilnTarget
    21 control enabled *tmp11 *tmp14
-    * sensor *tmp15 .battery @totalPower
-    * set :backgroundProcess:power *tmp15
+   22 sensor :backgroundProcess:power .battery @totalPower
    23 set *tmp16 .generator
    24 op lessThan *tmp18 :backgroundProcess:power 3500
    25 control enabled *tmp16 *tmp18
 
    40 select :backgroundProcess:enableFactory lessThan :updateIfSmaller.1:a :updateIfSmaller.1:b :updateIfSmaller.1:newValue :backgroundProcess:enableFactory
    41 label *label8
    42 label *label6
-    * sensor *tmp25 .factory @progress
-    * set :backgroundProcess:factoryProgress *tmp25
+   43 sensor :backgroundProcess:factoryProgress .factory @progress
    44 op equal *tmp26 .unitToProduce null
    45 jump *label9 equal *tmp26 false
-    * set *tmp28 .factory
-    * control enabled *tmp28 false
-    * set *tmp30 .factory
-    * control config *tmp30 @mono
+   46 control enabled .factory false
+   47 control config .factory @mono
    48 set :backgroundProcess:lastProgress 0
    49 jump *label10 always
    50 label *label9
    51 op add *tmp32 :backgroundProcess:factoryProgress 0.1
    52 op greaterThan *tmp33 :backgroundProcess:lastProgress *tmp32
    53 jump *label11 equal *tmp33 false
-    * set *tmp35 .factory
-    * control enabled *tmp35 :backgroundProcess:enableFactory
+   54 control enabled .factory :backgroundProcess:enableFactory
    55 set :logUnit:unit .unitToProduce
    56 sensor *tmp37 :logUnit:unit @id
-    * op add *tmp38 @blockCount *tmp37
-    * set :log:encodedId *tmp38
+   57 op add :log:encodedId @blockCount *tmp37
    58 read *tmp2 .bank 511
    59 op sub *tmp39 *tmp2 1
    60 write *tmp39 .bank 511
 
    95 set :backgroundProcess:lastProgress 0
    96 jump *label12 always
    97 label *label11
-    * set *tmp53 .factory
-    * sensor *tmp54 *tmp53 @config
+   98 sensor *tmp54 .factory @config
    99 op notEqual *tmp55 *tmp54 .unitToProduce
   100 jump *label22 equal *tmp55 false
-    * set *tmp57 .factory
-    * control enabled *tmp57 :backgroundProcess:enableFactory
+  101 control enabled .factory :backgroundProcess:enableFactory
   102 set *tmp59 .factory
-    * set *tmp61 .unitToProduce
-    * control config *tmp59 *tmp61
+  103 control config *tmp59 .unitToProduce
   104 set :backgroundProcess:lastProgress 0
   105 jump *label23 always
   106 label *label22
-    * set *tmp62 .factory
-    * control enabled *tmp62 :backgroundProcess:enableFactory
+  107 control enabled .factory :backgroundProcess:enableFactory
   108 set :backgroundProcess:lastProgress :backgroundProcess:factoryProgress
   109 label *label23
   110 label *label12
 
   112 sensor *tmp64 .generator2 @coal
   113 op lessThan *tmp65 *tmp64 .generator2
   114 jump *label24 equal *tmp65 false
-    * set *tmp67 .unloader2
-    * control config *tmp67 @coal
+  115 control config .unloader2 @coal
   116 jump *label4 always
   117 jump *label25 always
   118 label *label24
   119 label *label25
   120 op equal *tmp69 .unitToProduce @mono
-    * op mul *tmp70 *tmp69 30
-    * set :backgroundProcess:leadLimit *tmp70
+  121 op mul :backgroundProcess:leadLimit *tmp69 30
   122 sensor *tmp71 .factory @lead
   123 op lessThan *tmp72 *tmp71 :backgroundProcess:leadLimit
   124 sensor *tmp73 .core @lead
   125 op greaterThan *tmp74 *tmp73 .leadReserve
   126 op land *tmp75 *tmp72 *tmp74
   127 jump *label26 equal *tmp75 false
-    * set *tmp77 .unloader2
-    * control config *tmp77 @lead
+  128 control config .unloader2 @lead
   129 jump *label27 always
   130 label *label26
   131 op greaterThan *tmp79 :backgroundProcess:coreSilicon .siliconReserve
   132 jump *label28 equal *tmp79 false
-    * set *tmp81 .unloader2
-    * control config *tmp81 @silicon
+  133 control config .unloader2 @silicon
   134 jump *label29 always
   135 label *label28
-    * set *tmp83 .unloader2
-    * control config *tmp83 @coal
+  136 control config .unloader2 @coal
   137 label *label29
   138 label *label27
   139 label *label4

Modifications by Initial phase, Temp Variables Elimination, iteration 2 (-1 instructions):
 
    99 op notEqual *tmp55 *tmp54 .unitToProduce
   100 jump *label22 equal *tmp55 false
   101 control enabled .factory :backgroundProcess:enableFactory
-    * set *tmp59 .factory
-    * control config *tmp59 .unitToProduce
+  102 control config .factory .unitToProduce
   103 set :backgroundProcess:lastProgress 0
   104 jump *label23 always
   105 label *label22

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
     6 set :backgroundProcess:factoryProgress 0
     7 set :backgroundProcess:enableFactory true
     8 label *label3
-    * jump *label5 equal true false
     9 sensor :backgroundProcess:coreSilicon .core @silicon
    10 set *tmp4 .smelter
    11 op lessThan *tmp6 :backgroundProcess:coreSilicon .smelterTarget

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-8 instructions):
 
    40 label *label8
    41 label *label6
    42 sensor :backgroundProcess:factoryProgress .factory @progress
-    * op equal *tmp26 .unitToProduce null
-    * jump *label9 equal *tmp26 false
+   43 jump *label9 notEqual .unitToProduce null
    44 control enabled .factory false
    45 control config .factory @mono
    46 set :backgroundProcess:lastProgress 0
    47 jump *label10 always
    48 label *label9
    49 op add *tmp32 :backgroundProcess:factoryProgress 0.1
-    * op greaterThan *tmp33 :backgroundProcess:lastProgress *tmp32
-    * jump *label11 equal *tmp33 false
+   50 jump *label11 lessThanEq :backgroundProcess:lastProgress *tmp32
    51 control enabled .factory :backgroundProcess:enableFactory
    52 set :logUnit:unit .unitToProduce
    53 sensor *tmp37 :logUnit:unit @id
 
    62 write *tmp44 .bank *tmp40
    63 label *label15
    64 label *label14
-    * op equal *tmp45 .unitToProduce @flare
-    * jump *label16 equal *tmp45 false
+   65 jump *label16 notEqual .unitToProduce @flare
    66 op add *tmp47 .flares 1
    67 set .flares *tmp47
    68 write *tmp47 .display ".flares"
 
    72 set .monos *tmp48
    73 write *tmp48 .display ".monos"
    74 label *label17
-    * op lessThan *tmp49 .monos 8
-    * jump *label18 equal *tmp49 false
+   75 jump *label18 greaterThanEq .monos 8
    76 set *tmp50 @mono
    77 jump *label19 always
    78 label *label18
-    * op lessThan *tmp51 .flares 8
-    * jump *label20 equal *tmp51 false
+   79 jump *label20 greaterThanEq .flares 8
    80 set *tmp52 @flare
    81 jump *label21 always
    82 label *label20
 
    90 jump *label12 always
    91 label *label11
    92 sensor *tmp54 .factory @config
-    * op notEqual *tmp55 *tmp54 .unitToProduce
-    * jump *label22 equal *tmp55 false
+   93 jump *label22 equal *tmp54 .unitToProduce
    94 control enabled .factory :backgroundProcess:enableFactory
    95 control config .factory .unitToProduce
    96 set :backgroundProcess:lastProgress 0
 
   102 label *label12
   103 label *label10
   104 sensor *tmp64 .generator2 @coal
-    * op lessThan *tmp65 *tmp64 .generator2
-    * jump *label24 equal *tmp65 false
+  105 jump *label24 greaterThanEq *tmp64 .generator2
   106 control config .unloader2 @coal
   107 jump *label4 always
   108 jump *label25 always
 
   119 control config .unloader2 @lead
   120 jump *label27 always
   121 label *label26
-    * op greaterThan *tmp79 :backgroundProcess:coreSilicon .siliconReserve
-    * jump *label28 equal *tmp79 false
+  122 jump *label28 lessThanEq :backgroundProcess:coreSilicon .siliconReserve
   123 control config .unloader2 @silicon
   124 jump *label29 always
   125 label *label28

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-1 instructions):
 
   105 jump *label24 greaterThanEq *tmp64 .generator2
   106 control config .unloader2 @coal
   107 jump *label4 always
-    * jump *label25 always
   108 label *label24
   109 label *label25
   110 op equal *tmp69 .unitToProduce @mono

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
     3 set *signature "0:v1"
     4 label *label1
     5 set :backgroundProcess:lastProgress 0
-    * set :backgroundProcess:factoryProgress 0
     6 set :backgroundProcess:enableFactory true
     7 label *label3
     8 sensor :backgroundProcess:coreSilicon .core @silicon
 
    27 set :fuzzyUpdate:value :backgroundProcess:power
    28 set :fuzzyUpdate:limitLow 200
    29 set :fuzzyUpdate:limitHigh 500
-    * set :updateIfSmaller:a :fuzzyUpdate:value
-    * set :updateIfSmaller:b :fuzzyUpdate:limitLow
+   30 set :updateIfSmaller:a :backgroundProcess:power
+   31 set :updateIfSmaller:b 200
    32 set :updateIfSmaller:newValue false
-    * select :backgroundProcess:enableFactory lessThan :updateIfSmaller:a :updateIfSmaller:b :updateIfSmaller:newValue :backgroundProcess:enableFactory
+   33 select :backgroundProcess:enableFactory lessThan :fuzzyUpdate:value :fuzzyUpdate:limitLow false :backgroundProcess:enableFactory
    34 label *label7
-    * set :updateIfSmaller.1:a :fuzzyUpdate:limitHigh
-    * set :updateIfSmaller.1:b :fuzzyUpdate:value
+   35 set :updateIfSmaller.1:a 500
+   36 set :updateIfSmaller.1:b :backgroundProcess:power
    37 set :updateIfSmaller.1:newValue true
-    * select :backgroundProcess:enableFactory lessThan :updateIfSmaller.1:a :updateIfSmaller.1:b :updateIfSmaller.1:newValue :backgroundProcess:enableFactory
+   38 select :backgroundProcess:enableFactory lessThan :fuzzyUpdate:limitHigh :fuzzyUpdate:value true :backgroundProcess:enableFactory
    39 label *label8
    40 label *label6
    41 sensor :backgroundProcess:factoryProgress .factory @progress
 
    58 op floor *tmp42 @second
    59 op mul *tmp43 *tmp42 1000
    60 op add *tmp44 :log:encodedId *tmp43
-    * write *tmp44 .bank *tmp40
+   61 write *tmp44 .bank *tmp39
    62 label *label15
    63 label *label14
    64 jump *label16 notEqual .unitToProduce @flare

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
    27 set :fuzzyUpdate:value :backgroundProcess:power
    28 set :fuzzyUpdate:limitLow 200
    29 set :fuzzyUpdate:limitHigh 500
-    * set :updateIfSmaller:a :backgroundProcess:power
-    * set :updateIfSmaller:b 200
-    * set :updateIfSmaller:newValue false
-    * select :backgroundProcess:enableFactory lessThan :fuzzyUpdate:value :fuzzyUpdate:limitLow false :backgroundProcess:enableFactory
+   30 select :backgroundProcess:enableFactory lessThan :backgroundProcess:power 200 false :backgroundProcess:enableFactory
    31 label *label7
-    * set :updateIfSmaller.1:a 500
-    * set :updateIfSmaller.1:b :backgroundProcess:power
-    * set :updateIfSmaller.1:newValue true
-    * select :backgroundProcess:enableFactory lessThan :fuzzyUpdate:limitHigh :fuzzyUpdate:value true :backgroundProcess:enableFactory
+   32 select :backgroundProcess:enableFactory lessThan 500 :backgroundProcess:power true :backgroundProcess:enableFactory
    33 label *label8
    34 label *label6
    35 sensor :backgroundProcess:factoryProgress .factory @progress
 
    48 read *tmp2 .bank 511
    49 op sub *tmp39 *tmp2 1
    50 write *tmp39 .bank 511
-    * set *tmp40 *tmp39
    51 op floor *tmp42 @second
    52 op mul *tmp43 *tmp42 1000
    53 op add *tmp44 :log:encodedId *tmp43

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
 
    24 set *tmp19 .generator2
    25 op lessThan *tmp21 :backgroundProcess:power 3800
    26 control enabled *tmp19 *tmp21
-    * set :fuzzyUpdate:value :backgroundProcess:power
-    * set :fuzzyUpdate:limitLow 200
-    * set :fuzzyUpdate:limitHigh 500
    27 select :backgroundProcess:enableFactory lessThan :backgroundProcess:power 200 false :backgroundProcess:enableFactory
    28 label *label7
    29 select :backgroundProcess:enableFactory lessThan 500 :backgroundProcess:power true :backgroundProcess:enableFactory

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-3 instructions):
 
    61 set .monos *tmp48
    62 write *tmp48 .display ".monos"
    63 label *label17
-    * jump *label18 greaterThanEq .monos 8
-    * set *tmp50 @mono
-    * jump *label19 always
+   64 set .unitToProduce @mono
+   65 jump *label19 lessThan .monos 8
    66 label *label18
-    * jump *label20 greaterThanEq .flares 8
-    * set *tmp52 @flare
+   67 set .unitToProduce null
+   68 jump *label21 greaterThanEq .flares 8
+   69 set .unitToProduce @flare
    70 jump *label21 always
-    * label *label20
-    * set *tmp52 null
    71 label *label21
-    * set *tmp50 *tmp52
    72 label *label19
-    * set .unitToProduce *tmp50
    73 label *label13
    74 set :backgroundProcess:lastProgress 0
    75 jump *label12 always

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
    67 set .unitToProduce null
    68 jump *label21 greaterThanEq .flares 8
    69 set .unitToProduce @flare
-    * jump *label21 always
    70 label *label21
    71 label *label19
    72 label *label13

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    25 op lessThan *tmp21 :backgroundProcess:power 3800
    26 control enabled *tmp19 *tmp21
    27 select :backgroundProcess:enableFactory lessThan :backgroundProcess:power 200 false :backgroundProcess:enableFactory
-    * label *label7
    28 select :backgroundProcess:enableFactory lessThan 500 :backgroundProcess:power true :backgroundProcess:enableFactory
-    * label *label8
-    * label *label6
    29 sensor :backgroundProcess:factoryProgress .factory @progress
    30 jump *label9 notEqual .unitToProduce null
    31 control enabled .factory false
 
    46 op mul *tmp43 *tmp42 1000
    47 op add *tmp44 :log:encodedId *tmp43
    48 write *tmp44 .bank *tmp39
-    * label *label15
-    * label *label14
    49 jump *label16 notEqual .unitToProduce @flare
    50 op add *tmp47 .flares 1
    51 set .flares *tmp47
 
    58 label *label17
    59 set .unitToProduce @mono
    60 jump *label19 lessThan .monos 8
-    * label *label18
    61 set .unitToProduce null
    62 jump *label21 greaterThanEq .flares 8
    63 set .unitToProduce @flare
    64 label *label21
    65 label *label19
-    * label *label13
    66 set :backgroundProcess:lastProgress 0
    67 jump *label12 always
    68 label *label11
 
    83 control config .unloader2 @coal
    84 jump *label4 always
    85 label *label24
-    * label *label25
    86 op equal *tmp69 .unitToProduce @mono
    87 op mul :backgroundProcess:leadLimit *tmp69 30
    88 sensor *tmp71 .factory @lead
 
   103 label *label27
   104 label *label4
   105 jump *label3 always
-    * label *label5
-    * label *label2
   106 wait 1e12
   107 jump *label1 always
   108 end

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    81 sensor *tmp64 .generator2 @coal
    82 jump *label24 greaterThanEq *tmp64 .generator2
    83 control config .unloader2 @coal
-    * jump *label4 always
+   84 jump *label3 always
    85 label *label24
    86 op equal *tmp69 .unitToProduce @mono
    87 op mul :backgroundProcess:leadLimit *tmp69 30
 
    92 op land *tmp75 *tmp72 *tmp74
    93 jump *label26 equal *tmp75 false
    94 control config .unloader2 @lead
-    * jump *label27 always
+   95 jump *label3 always
    96 label *label26
    97 jump *label28 lessThanEq :backgroundProcess:coreSilicon .siliconReserve
    98 control config .unloader2 @silicon
-    * jump *label29 always
+   99 jump *label3 always
   100 label *label28
   101 control config .unloader2 @coal
   102 label *label29

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-3 instructions):
 
    99 jump *label3 always
   100 label *label28
   101 control config .unloader2 @coal
-    * label *label29
-    * label *label27
-    * label *label4
   102 jump *label3 always
-    * wait 1e12
-    * jump *label1 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
     1 set .smelterTarget 20
     2 set .kilnTarget 20
     3 set *signature "0:v1"
-    * label *label1
     4 set :backgroundProcess:lastProgress 0
     5 set :backgroundProcess:enableFactory true
     6 label *label3

Final code before resolving virtual instructions:

    0:  jump *label30 always 0 0
    1:  draw triangle .bank .battery .core .display .factory .flares
    2:  draw triangle .generator .generator2 .kiln .kilnTarget .leadReserve .monos
    3:  draw triangle .press .pressTarget .siliconReserve .smelter .smelterTarget .unitToProduce
    4:  draw triangle .unloader2 :backgroundProcess:coreSilicon :backgroundProcess:enableFactory :backgroundProcess:factoryProgress :backgroundProcess:lastProgress :backgroundProcess:leadLimit
    5:  draw triangle :backgroundProcess:power :log:encodedId :logUnit:unit 0 0 0
        label *label30
    6:  set .pressTarget 20                                          remote var
    7:  set .smelterTarget 20                                        ...
    8:  set .kilnTarget 20                                           ...
    9:  set *signature "0:v1"                                        #set target = 8;
   10:  set :backgroundProcess:lastProgress 0                        var lastProgress = 0, factoryProgress = 0;
   11:  set :backgroundProcess:enableFactory true                    var enableFactory = true;
        label *label3                                                while true do
   12:  sensor :backgroundProcess:coreSilicon .core @silicon         var coreSilicon = core.@silicon;
   13:  set *tmp4 .smelter                                           smelter.enabled = coreSilicon < smelterTarget;
   14:  op lessThan *tmp6 :backgroundProcess:coreSilicon .smelterTar ...
   15:  control enabled *tmp4 *tmp6 0 0 0                            ...
   16:  set *tmp7 .press                                             press.enabled = core.@graphite < pressTarget;
   17:  sensor *tmp9 .core @graphite                                 ...
   18:  op lessThan *tmp10 *tmp9 .pressTarget                        ...
   19:  control enabled *tmp7 *tmp10 0 0 0                           ...
   20:  set *tmp11 .kiln                                             kiln.enabled = core.@metaglass < kilnTarget;
   21:  sensor *tmp13 .core @metaglass                               ...
   22:  op lessThan *tmp14 *tmp13 .kilnTarget                        ...
   23:  control enabled *tmp11 *tmp14 0 0 0                          ...
   24:  sensor :backgroundProcess:power .battery @totalPower         var power = battery.@totalPower;
   25:  set *tmp16 .generator                                        generator.enabled = power < 3500;
   26:  op lessThan *tmp18 :backgroundProcess:power 3500             ...
   27:  control enabled *tmp16 *tmp18 0 0 0                          ...
   28:  set *tmp19 .generator2                                       generator2.enabled = power < 3800;
   29:  op lessThan *tmp21 :backgroundProcess:power 3800             ...
   30:  control enabled *tmp19 *tmp21 0 0 0                          ...
   31:  select :backgroundProcess:enableFactory lessThan :background mlogSafe("select", out value, "lessThan", in a, in b, in newValue, in value);
   32:  select :backgroundProcess:enableFactory lessThan 500 :backgr ...
   33:  sensor :backgroundProcess:factoryProgress .factory @progress factoryProgress = factory.@progress;
   34:  jump *label9 notEqual .unitToProduce null                    if unitToProduce == null then
   35:  control enabled .factory false 0 0 0                         factory.enabled = false;
   36:  control config .factory @mono 0 0 0                          factory.config = @mono;
   37:  set :backgroundProcess:lastProgress 0                        lastProgress = 0;
   38:  jump *label10 always 0 0                                     if unitToProduce == null then
        label *label9                                                ...
   39:  op add *tmp32 :backgroundProcess:factoryProgress 0.1         elsif lastProgress > factoryProgress + 0.1 then
   40:  jump *label11 lessThanEq :backgroundProcess:lastProgress *tm ...
   41:  control enabled .factory :backgroundProcess:enableFactory 0  factory.enabled = enableFactory;
   42:  set :logUnit:unit .unitToProduce                             logUnit(unitToProduce);
   43:  sensor *tmp37 :logUnit:unit @id                              log(@blockCount + unit.@id);
   44:  op add :log:encodedId @blockCount *tmp37                     ...
   45:  read *tmp2 .bank 511                                         bank[--logPosition] = encodedId + floor(@second) * 1000;
   46:  op sub *tmp39 *tmp2 1                                        ...
   47:  write *tmp39 .bank 511                                       ...
   48:  op floor *tmp42 @second 0                                    ...
   49:  op mul *tmp43 *tmp42 1000                                    ...
   50:  op add *tmp44 :log:encodedId *tmp43                          ...
   51:  write *tmp44 .bank *tmp39                                    ...
   52:  jump *label16 notEqual .unitToProduce @flare                 if unitToProduce == @flare then
   53:  op add *tmp47 .flares 1                                      displayFlares = ++flares;
   54:  set .flares *tmp47                                           ...
   55:  write *tmp47 .display ".flares"                              ...
   56:  jump *label17 always 0 0                                     if unitToProduce == @flare then
        label *label16                                               ...
   57:  op add *tmp48 .monos 1                                       displayMonos = ++monos;
   58:  set .monos *tmp48                                            ...
   59:  write *tmp48 .display ".monos"                               ...
        label *label17                                               if unitToProduce == @flare then
   60:  set .unitToProduce @mono                                     unitToProduce = monos < 8 ? @mono : flares < 8 ? @flare : null;
   61:  jump *label19 lessThan .monos 8                              ...
   62:  set .unitToProduce null                                      ...
   63:  jump *label21 greaterThanEq .flares 8                        ...
   64:  set .unitToProduce @flare                                    ...
        label *label21                                               ...
        label *label19                                               ...
   65:  set :backgroundProcess:lastProgress 0                        lastProgress = 0;
   66:  jump *label12 always 0 0                                     elsif lastProgress > factoryProgress + 0.1 then
        label *label11                                               ...
   67:  sensor *tmp54 .factory @config                               elsif factory.config != unitToProduce then
   68:  jump *label22 equal *tmp54 .unitToProduce                    ...
   69:  control enabled .factory :backgroundProcess:enableFactory 0  factory.enabled = enableFactory;
   70:  control config .factory .unitToProduce 0 0 0                 factory.config = unitToProduce;
   71:  set :backgroundProcess:lastProgress 0                        lastProgress = 0;
   72:  jump *label23 always 0 0                                     elsif factory.config != unitToProduce then
        label *label22                                               ...
   73:  control enabled .factory :backgroundProcess:enableFactory 0  factory.enabled = enableFactory;
   74:  set :backgroundProcess:lastProgress :backgroundProcess:facto lastProgress = factoryProgress;
        label *label23                                               elsif factory.config != unitToProduce then
        label *label12                                               elsif lastProgress > factoryProgress + 0.1 then
        label *label10                                               if unitToProduce == null then
   75:  sensor *tmp64 .generator2 @coal                              if generator2.@coal < generator2 then
   76:  jump *label24 greaterThanEq *tmp64 .generator2               ...
   77:  control config .unloader2 @coal 0 0 0                        unloader2.config = @coal;
   78:  jump *label3 always 0 0                                      continue;
        label *label24                                               if generator2.@coal < generator2 then
   79:  op equal *tmp69 .unitToProduce @mono                         var leadLimit = (unitToProduce == @mono) * 30;
   80:  op mul :backgroundProcess:leadLimit *tmp69 30                ...
   81:  sensor *tmp71 .factory @lead                                 if factory.@lead < leadLimit and core.@lead > leadReserve then
   82:  op lessThan *tmp72 *tmp71 :backgroundProcess:leadLimit       ...
   83:  sensor *tmp73 .core @lead                                    ...
   84:  op greaterThan *tmp74 *tmp73 .leadReserve                    ...
   85:  op land *tmp75 *tmp72 *tmp74                                 ...
   86:  jump *label26 equal *tmp75 false                             ...
   87:  control config .unloader2 @lead 0 0 0                        unloader2.config = @lead;
   88:  jump *label3 always 0 0                                      if factory.@lead < leadLimit and core.@lead > leadReserve then
        label *label26                                               ...
   89:  jump *label28 lessThanEq :backgroundProcess:coreSilicon .sil elsif coreSilicon > siliconReserve then
   90:  control config .unloader2 @silicon 0 0 0                     unloader2.config = @silicon;
   91:  jump *label3 always 0 0                                      elsif coreSilicon > siliconReserve then
        label *label28                                               ...
   92:  control config .unloader2 @coal 0 0 0                        unloader2.config = @coal;
   93:  jump *label3 always 0 0                                      while true do


Performance: parsed in 224 ms, compiled in 261 ms, optimized in 241 ms, run in 2 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (8 steps):
The program didn't generate any output.
Execution exception at instruction 12: sensor :backgroundProcess:coreSilicon .core @silicon:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
