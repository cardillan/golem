   446 instructions before optimizations.
    43 instructions eliminated by Temp Variables Elimination (6 iterations).
     1 instructions eliminated by Case Expression Optimization.
    61 instructions eliminated by Dead Code Elimination (7 iterations).
     5 instructions eliminated by Jump Normalization (5 iterations).
    31 instructions eliminated by Jump Optimization (5 iterations).
    23 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     4 instructions modified by Expression Optimization (3 iterations).
    20 instructions eliminated by If Expression Optimization (2 passes, 4 iterations).
    41 instructions eliminated by Data Flow Optimization (4 passes, 15 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
    69 instructions added by Function Inlining (6 iterations).
     6 function calls inlined by Function Inlining.
     4 instructions eliminated by Jump Straightening (5 iterations).
    17 instructions updated by Jump Threading.
    50 instructions eliminated by Unreachable Code Elimination (2 iterations).
   236 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 743):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +65, benefit       76.6, efficiency      1.178
  * Inline function 'logUnit' defined at CoreController.mnd:47:1 size    -1, benefit       76.6, efficiency   Infinity (-6 instructions)
    Inline function 'log' defined at CoreController.mnd:43:1     size    -1, benefit       76.6, efficiency   Infinity
    Inline function call at CoreController.mnd:83:9              size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:83:9              size   +22, benefit       10.9, efficiency      0.497
    Inline function call at CoreController.mnd:151:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:201:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:52:5              size    +3, benefit       76.6, efficiency     25.521
    Inline function call at CoreController.mnd:48:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 749):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +68, benefit       76.6, efficiency      1.126
  * Inline function 'log' defined at CoreController.mnd:43:1     size    -1, benefit       76.6, efficiency   Infinity (-4 instructions)
    Inline function call at CoreController.mnd:83:9              size   +23, benefit       21.9, efficiency      0.951
    Inline function call at CoreController.mnd:83:9              size   +23, benefit       10.9, efficiency      0.476
    Inline function call at CoreController.mnd:151:17            size   +23, benefit       21.9, efficiency      0.951
    Inline function call at CoreController.mnd:201:17            size   +23, benefit       21.9, efficiency      0.951
    Inline function call at CoreController.mnd:48:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 753):
  * Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +83, benefit       76.6, efficiency      0.922 (+73 instructions)
    Inline function call at CoreController.mnd:83:9              size   +28, benefit       21.9, efficiency      0.781
    Inline function call at CoreController.mnd:83:9              size   +28, benefit       10.9, efficiency      0.391
    Inline function call at CoreController.mnd:151:17            size   +28, benefit       21.9, efficiency      0.781
    Inline function call at CoreController.mnd:201:17            size   +28, benefit       21.9, efficiency      0.781

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   466 setaddr :logUnit*retaddr *label92 (h:*label92)
   467 call *label5 *invalid :logUnit*retval (m:*label92) (h:*label92)
   468 label *label92
-    * set *tmp219 :factoryUnitFinished:unit
-    * jump *label95 equal *tmp219 @flare
+  469 jump *label95 equal :factoryUnitFinished:unit @flare
   470 jump *label94 always
   471 label *label95
   472 op add *tmp220 .flares 1
 
   475 set *tmp218 *tmp220
   476 jump *label93 always
   477 label *label94
-    * jump *label97 equal *tmp219 @mono
+  478 jump *label97 equal :factoryUnitFinished:unit @mono
   479 jump *label96 always
   480 label *label97
   481 op add *tmp221 .monos 1
 
   484 set *tmp218 *tmp221
   485 jump *label93 always
   486 label *label96
-    * jump *label99 equal *tmp219 @poly
+  487 jump *label99 equal :factoryUnitFinished:unit @poly
   488 jump *label98 always
   489 label *label99
   490 op add *tmp222 .polys 1
 
   493 set *tmp218 *tmp222
   494 jump *label93 always
   495 label *label98
-    * jump *label101 equal *tmp219 @mega
+  496 jump *label101 equal :factoryUnitFinished:unit @mega
   497 jump *label100 always
   498 label *label101
   499 op add *tmp223 .megas 1

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-39 instructions):
 
    54 set *tmp58 AAKJ\-steam-generator18
    55 op lessThan *tmp60 :backgroundProcess:power 3800
    56 control enabled *tmp58 *tmp60
-    * set *tmp54 *tmp60
    57 jump *label15 always
    58 label *label14
    59 set *tmp61 AJRJM-combustion-generator3
    60 op lessThan *tmp63 :backgroundProcess:power 800
    61 control enabled *tmp61 *tmp63
-    * set *tmp54 *tmp63
    62 label *label15
    63 op lessThan *tmp64 .flares .flareTarget
    64 jump *label16 equal *tmp64 false
 
    72 set *tmp68 A©FJJU-unloader11
    73 control config *tmp68 @coal
    74 jump *label18 always
-    * set *tmp67 null
    75 jump *label20 always
    76 label *label19
-    * set *tmp67 null
    77 label *label20
    78 sensor *tmp70 AAKJ\-steam-generator18 @coal
    79 op mul *tmp71 5 AAKJ\-steam-generator18
 
    82 set *tmp74 A©FJJU-unloader11
    83 control config *tmp74 @coal
    84 jump *label18 always
-    * set *tmp73 null
    85 jump *label22 always
    86 label *label21
-    * set *tmp73 null
    87 label *label22
    88 op lessThan *tmp76 :handleAirFactory:power 200
    89 jump *label23 equal *tmp76 false
    90 set *tmp78 A¾BFLW-air-factory13
    91 control enabled *tmp78 false
-    * set *tmp77 false
    92 jump *label24 always
    93 label *label23
    94 op greaterThan *tmp80 :handleAirFactory:power 500
 
   100 label *label25
   101 set *tmp81 null
   102 label *label26
-    * set *tmp77 *tmp81
   103 label *label24
   104 set *tmp84 A¾BFLW-air-factory13
   105 control config *tmp84 :handleAirFactory:unit
 
   115 set *tmp89 A©FJJU-unloader11
   116 control config *tmp89 @coal
   117 jump *label18 always
-    * set *tmp88 null
   118 jump *label28 always
   119 label *label27
-    * set *tmp88 null
   120 label *label28
   121 set .lastProgress :handleAirFactory:factoryProgress
   122 jump *label30 equal :handleAirFactory:lead false
 
   140 label *label34
   141 set *tmp97 null
   142 label *label35
-    * set *tmp91 *tmp97
   143 jump *label31 always
   144 label *label30
-    * set *tmp91 null
   145 label *label31
   146 sensor *tmp100 .core @silicon
   147 op greaterThan *tmp101 *tmp100 0
 
   163 label *label39
   164 control config *tmp103 *tmp107
   165 label *label18
-    * set *tmp65 null
   166 jump *label17 always
   167 label *label16
   168 op lessThan *tmp108 .monos .monoTarget
 
   177 set *tmp112 A©FJJU-unloader11
   178 control config *tmp112 @coal
   179 jump *label42 always
-    * set *tmp111 null
   180 jump *label44 always
   181 label *label43
-    * set *tmp111 null
   182 label *label44
   183 sensor *tmp114 AAKJ\-steam-generator18 @coal
   184 op mul *tmp115 5 AAKJ\-steam-generator18
 
   187 set *tmp118 A©FJJU-unloader11
   188 control config *tmp118 @coal
   189 jump *label42 always
-    * set *tmp117 null
   190 jump *label46 always
   191 label *label45
-    * set *tmp117 null
   192 label *label46
   193 op lessThan *tmp120 :handleAirFactory.1:power 200
   194 jump *label47 equal *tmp120 false
   195 set *tmp122 A¾BFLW-air-factory13
   196 control enabled *tmp122 false
-    * set *tmp121 false
   197 jump *label48 always
   198 label *label47
   199 op greaterThan *tmp124 :handleAirFactory.1:power 500
 
   205 label *label49
   206 set *tmp125 null
   207 label *label50
-    * set *tmp121 *tmp125
   208 label *label48
   209 set *tmp128 A¾BFLW-air-factory13
   210 control config *tmp128 :handleAirFactory.1:unit
 
   220 set *tmp133 A©FJJU-unloader11
   221 control config *tmp133 @coal
   222 jump *label42 always
-    * set *tmp132 null
   223 jump *label52 always
   224 label *label51
-    * set *tmp132 null
   225 label *label52
   226 set .lastProgress :handleAirFactory.1:factoryProgress
   227 jump *label54 equal :handleAirFactory.1:lead false
 
   245 label *label58
   246 set *tmp141 null
   247 label *label59
-    * set *tmp135 *tmp141
   248 jump *label55 always
   249 label *label54
-    * set *tmp135 null
   250 label *label55
   251 sensor *tmp144 .core @silicon
   252 op greaterThan *tmp145 *tmp144 0
 
   277 control config *tmp154 @coal
   278 set *tmp109 @coal
   279 label *label41
-    * set *tmp65 *tmp109
   280 label *label17
   281 op lessThan *tmp156 .polys .polyTarget
   282 jump *label64 equal *tmp156 false
 
   291 label *label68
   292 set .recoEntered false
   293 set .lastRecoProgress 0
-    * set *tmp160 0
   294 jump *label67 always
   295 label *label66
   296 set .lastRecoProgress :backgroundProcess:recoProgress
-    * set *tmp160 :backgroundProcess:recoProgress
   297 label *label67
   298 sensor *tmp161 AÀF@L`-additive-reconstructor22 @silicon
   299 set :backgroundProcess:s *tmp161
 
   322 set .monos *tmp173
   323 write *tmp173 .display ".monos"
   324 set .recoEntered true
-    * set *tmp168 true
   325 jump *label72 always
   326 label *label71
-    * set *tmp168 null
   327 label *label72
   328 set *tmp174 A{HDJ_-inverted-sorter21
   329 control enabled *tmp174 false
 
   362 label *label77
   363 set *tmp166 *tmp179
   364 label *label70
-    * set *tmp157 *tmp166
   365 jump *label65 always
   366 label *label64
   367 set *tmp196 A{HDJ_-inverted-sorter21
   368 control enabled *tmp196 false
-    * set *tmp157 false
   369 label *label65
   370 jump *label80 equal AÁPBJf-multiplicative-reconstructor28 false
   371 set :backgroundProcess:c null
 
   373 op lessThan *tmp200 *tmp199 40
   374 jump *label82 equal *tmp200 false
   375 set :backgroundProcess:c @metaglass
-    * set *tmp201 :backgroundProcess:c
   376 jump *label83 always
   377 label *label82
   378 sensor *tmp202 AÁPBJf-multiplicative-reconstructor28 @titanium
 
   393 label *label87
   394 set *tmp204 *tmp207
   395 label *label85
-    * set *tmp201 *tmp204
   396 label *label83
   397 set *tmp208 A©NHJX-unloader14
   398 control config *tmp208 :backgroundProcess:c
 
   415 set .lastMultiProgress :backgroundProcess:multiProgress
   416 set *tmp216 :backgroundProcess:multiProgress
   417 label *label89
-    * set *tmp198 *tmp216
   418 jump *label81 always
   419 label *label80
-    * set *tmp198 null
   420 label *label81
   421 op sub *tmp217 @tick :backgroundProcess:ticks
   422 set .loopTicks *tmp217
 
   438 op add *tmp220 .flares 1
   439 set .flares *tmp220
   440 write *tmp220 .display ".flares"
-    * set *tmp218 *tmp220
   441 jump *label93 always
   442 label *label94
   443 jump *label97 equal :factoryUnitFinished:unit @mono
 
   446 op add *tmp221 .monos 1
   447 set .monos *tmp221
   448 write *tmp221 .display ".monos"
-    * set *tmp218 *tmp221
   449 jump *label93 always
   450 label *label96
   451 jump *label99 equal :factoryUnitFinished:unit @poly
 
   454 op add *tmp222 .polys 1
   455 set .polys *tmp222
   456 write *tmp222 .display ".polys"
-    * set *tmp218 *tmp222
   457 jump *label93 always
   458 label *label98
   459 jump *label101 equal :factoryUnitFinished:unit @mega
 
   462 op add *tmp223 .megas 1
   463 set .megas *tmp223
   464 write *tmp223 .display ".megas"
-    * set *tmp218 *tmp223
   465 jump *label93 always
   466 label *label100
-    * set *tmp218 null
   467 label *label93
   468 write true .display ".unitReset"
   469 label *label91

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-16 instructions):
 
    95 jump *label25 equal *tmp80 false
    96 set *tmp82 A¾BFLW-air-factory13
    97 control enabled *tmp82 true
-    * set *tmp81 true
    98 jump *label26 always
    99 label *label25
-    * set *tmp81 null
   100 label *label26
   101 label *label24
   102 set *tmp84 A¾BFLW-air-factory13
 
   133 set *tmp98 A©FJJU-unloader11
   134 control config *tmp98 @lead
   135 jump *label18 always
-    * set *tmp97 null
   136 jump *label35 always
   137 label *label34
-    * set *tmp97 null
   138 label *label35
   139 jump *label31 always
   140 label *label30
 
   196 jump *label49 equal *tmp124 false
   197 set *tmp126 A¾BFLW-air-factory13
   198 control enabled *tmp126 true
-    * set *tmp125 true
   199 jump *label50 always
   200 label *label49
-    * set *tmp125 null
   201 label *label50
   202 label *label48
   203 set *tmp128 A¾BFLW-air-factory13
 
   234 set *tmp142 A©FJJU-unloader11
   235 control config *tmp142 @lead
   236 jump *label42 always
-    * set *tmp141 null
   237 jump *label59 always
   238 label *label58
-    * set *tmp141 null
   239 label *label59
   240 jump *label55 always
   241 label *label54
 
   260 label *label63
   261 control config *tmp147 *tmp151
   262 label *label42
-    * set *tmp109 null
   263 jump *label41 always
   264 label *label40
   265 set *tmp152 A¾BFLW-air-factory13
   266 control config *tmp152 @flare
   267 set *tmp154 A©FJJU-unloader11
   268 control config *tmp154 @coal
-    * set *tmp109 @coal
   269 label *label41
   270 label *label17
   271 op lessThan *tmp156 .polys .polyTarget
 
   317 label *label72
   318 set *tmp174 A{HDJ_-inverted-sorter21
   319 control enabled *tmp174 false
-    * set *tmp166 false
   320 jump *label70 always
   321 label *label69
   322 op greaterThan *tmp176 :backgroundProcess:coreSilicon .siliconReserve
 
   349 label *label79
   350 set *tmp179 *tmp188
   351 label *label77
-    * set *tmp166 *tmp179
   352 label *label70
   353 jump *label65 always
   354 label *label64
 
   367 op lessThan *tmp203 *tmp202 80
   368 jump *label84 equal *tmp203 false
   369 set :backgroundProcess:c @titanium
-    * set *tmp204 :backgroundProcess:c
   370 jump *label85 always
   371 label *label84
   372 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
 
   378 label *label86
   379 set *tmp207 null
   380 label *label87
-    * set *tmp204 *tmp207
   381 label *label85
   382 label *label83
   383 set *tmp208 A©NHJX-unloader14
 
   395 call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)
   396 label *label90
   397 set .lastMultiProgress 0
-    * set *tmp216 0
   398 jump *label89 always
   399 label *label88
   400 set .lastMultiProgress :backgroundProcess:multiProgress
-    * set *tmp216 :backgroundProcess:multiProgress
   401 label *label89
   402 jump *label81 always
   403 label *label80

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-4 instructions):
 
   328 set *tmp182 A{HDJ_-inverted-sorter21
   329 set *tmp184 .canConsume
   330 control enabled *tmp182 *tmp184
-    * set *tmp179 *tmp184
   331 jump *label77 always
   332 label *label76
   333 op greaterThan *tmp185 :backgroundProcess:coreGraphite .graphiteReserve
 
   346 control enabled *tmp194 false
   347 set *tmp188 false
   348 label *label79
-    * set *tmp179 *tmp188
   349 label *label77
   350 label *label70
   351 jump *label65 always
 
   371 op lessThan *tmp206 *tmp205 130
   372 jump *label86 equal *tmp206 false
   373 set :backgroundProcess:c @silicon
-    * set *tmp207 :backgroundProcess:c
   374 jump *label87 always
   375 label *label86
-    * set *tmp207 null
   376 label *label87
   377 label *label85
   378 label *label83

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   339 set *tmp191 A{HDJ_-inverted-sorter21
   340 set *tmp193 .canConsume
   341 control enabled *tmp191 *tmp193
-    * set *tmp188 *tmp193
   342 jump *label79 always
   343 label *label78
   344 set *tmp194 A{HDJ_-inverted-sorter21
   345 control enabled *tmp194 false
-    * set *tmp188 false
   346 label *label79
   347 label *label77
   348 label *label70

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-43 instructions):
 
    24 op equal *tmp33 .finished false
    25 jump *label13 equal *tmp33 false
    26 set :backgroundProcess:ticks @tick
-    * sensor *tmp34 .core @silicon
-    * set :backgroundProcess:coreSilicon *tmp34
-    * sensor *tmp35 .core @graphite
-    * set :backgroundProcess:coreGraphite *tmp35
+   27 sensor :backgroundProcess:coreSilicon .core @silicon
+   28 sensor :backgroundProcess:coreGraphite .core @graphite
    29 set *tmp36 ALSIJa-silicon-smelter23
    30 set *tmp38 ALMQJN-silicon-smelter4
    31 op lessThan *tmp40 :backgroundProcess:coreSilicon .smelterTarget
 
    43 sensor *tmp51 .core @metaglass
    44 op lessThan *tmp52 *tmp51 .kilnTarget
    45 control enabled *tmp49 *tmp52
-    * sensor *tmp53 AJTJK-battery1 @totalPower
-    * set :backgroundProcess:power *tmp53
+   46 sensor :backgroundProcess:power AJTJK-battery1 @totalPower
    47 jump *label14 equal AAKJ\-steam-generator18 false
    48 set *tmp55 AJRJM-combustion-generator3
    49 op lessThan *tmp57 :backgroundProcess:power 10
 
    66 set :handleAirFactory:lead 0
    67 op equal *tmp66 .canConsume false
    68 jump *label19 equal *tmp66 false
-    * set *tmp68 A©FJJU-unloader11
-    * control config *tmp68 @coal
+   69 control config A©FJJU-unloader11 @coal
    70 jump *label18 always
    71 jump *label20 always
    72 label *label19
 
    75 op mul *tmp71 5 AAKJ\-steam-generator18
    76 op lessThan *tmp72 *tmp70 *tmp71
    77 jump *label21 equal *tmp72 false
-    * set *tmp74 A©FJJU-unloader11
-    * control config *tmp74 @coal
+   78 control config A©FJJU-unloader11 @coal
    79 jump *label18 always
    80 jump *label22 always
    81 label *label21
    82 label *label22
    83 op lessThan *tmp76 :handleAirFactory:power 200
    84 jump *label23 equal *tmp76 false
-    * set *tmp78 A¾BFLW-air-factory13
-    * control enabled *tmp78 false
+   85 control enabled A¾BFLW-air-factory13 false
    86 jump *label24 always
    87 label *label23
    88 op greaterThan *tmp80 :handleAirFactory:power 500
    89 jump *label25 equal *tmp80 false
-    * set *tmp82 A¾BFLW-air-factory13
-    * control enabled *tmp82 true
+   90 control enabled A¾BFLW-air-factory13 true
    91 jump *label26 always
    92 label *label25
    93 label *label26
    94 label *label24
-    * set *tmp84 A¾BFLW-air-factory13
-    * control config *tmp84 :handleAirFactory:unit
-    * sensor *tmp86 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory:factoryProgress *tmp86
+   95 control config A¾BFLW-air-factory13 :handleAirFactory:unit
+   96 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    97 op greaterThan *tmp87 .lastProgress :handleAirFactory:factoryProgress
    98 jump *label27 equal *tmp87 false
    99 set :factoryUnitFinished:unit :handleAirFactory:unit
 
   101 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
   102 label *label29
   103 set .lastProgress 0
-    * set *tmp89 A©FJJU-unloader11
-    * control config *tmp89 @coal
+  104 control config A©FJJU-unloader11 @coal
   105 jump *label18 always
   106 jump *label28 always
   107 label *label27
 
   120 sensor *tmp95 A¾BFLW-air-factory13 @lead
   121 op lessThan *tmp96 *tmp95 :handleAirFactory:leadLimit
   122 jump *label34 equal *tmp96 false
-    * set *tmp98 A©FJJU-unloader11
-    * control config *tmp98 @lead
+  123 control config A©FJJU-unloader11 @lead
   124 jump *label18 always
   125 jump *label35 always
   126 label *label34
 
   159 set :handleAirFactory.1:lead 15
   160 op equal *tmp110 .canConsume false
   161 jump *label43 equal *tmp110 false
-    * set *tmp112 A©FJJU-unloader11
-    * control config *tmp112 @coal
+  162 control config A©FJJU-unloader11 @coal
   163 jump *label42 always
   164 jump *label44 always
   165 label *label43
 
   168 op mul *tmp115 5 AAKJ\-steam-generator18
   169 op lessThan *tmp116 *tmp114 *tmp115
   170 jump *label45 equal *tmp116 false
-    * set *tmp118 A©FJJU-unloader11
-    * control config *tmp118 @coal
+  171 control config A©FJJU-unloader11 @coal
   172 jump *label42 always
   173 jump *label46 always
   174 label *label45
   175 label *label46
   176 op lessThan *tmp120 :handleAirFactory.1:power 200
   177 jump *label47 equal *tmp120 false
-    * set *tmp122 A¾BFLW-air-factory13
-    * control enabled *tmp122 false
+  178 control enabled A¾BFLW-air-factory13 false
   179 jump *label48 always
   180 label *label47
   181 op greaterThan *tmp124 :handleAirFactory.1:power 500
   182 jump *label49 equal *tmp124 false
-    * set *tmp126 A¾BFLW-air-factory13
-    * control enabled *tmp126 true
+  183 control enabled A¾BFLW-air-factory13 true
   184 jump *label50 always
   185 label *label49
   186 label *label50
   187 label *label48
-    * set *tmp128 A¾BFLW-air-factory13
-    * control config *tmp128 :handleAirFactory.1:unit
-    * sensor *tmp130 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory.1:factoryProgress *tmp130
+  188 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  189 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   190 op greaterThan *tmp131 .lastProgress :handleAirFactory.1:factoryProgress
   191 jump *label51 equal *tmp131 false
   192 set :factoryUnitFinished:unit :handleAirFactory.1:unit
 
   194 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
   195 label *label53
   196 set .lastProgress 0
-    * set *tmp133 A©FJJU-unloader11
-    * control config *tmp133 @coal
+  197 control config A©FJJU-unloader11 @coal
   198 jump *label42 always
   199 jump *label52 always
   200 label *label51
 
   213 sensor *tmp139 A¾BFLW-air-factory13 @lead
   214 op lessThan *tmp140 *tmp139 :handleAirFactory.1:leadLimit
   215 jump *label58 equal *tmp140 false
-    * set *tmp142 A©FJJU-unloader11
-    * control config *tmp142 @lead
+  216 control config A©FJJU-unloader11 @lead
   217 jump *label42 always
   218 jump *label59 always
   219 label *label58
 
   243 label *label42
   244 jump *label41 always
   245 label *label40
-    * set *tmp152 A¾BFLW-air-factory13
-    * control config *tmp152 @flare
-    * set *tmp154 A©FJJU-unloader11
-    * control config *tmp154 @coal
+  246 control config A¾BFLW-air-factory13 @flare
+  247 control config A©FJJU-unloader11 @coal
   248 label *label41
   249 label *label17
   250 op lessThan *tmp156 .polys .polyTarget
   251 jump *label64 equal *tmp156 false
   252 write @poly .display ".nextUnit"
-    * sensor *tmp158 AÀF@L`-additive-reconstructor22 @progress
-    * set :backgroundProcess:recoProgress *tmp158
+  253 sensor :backgroundProcess:recoProgress AÀF@L`-additive-reconstructor22 @progress
   254 op greaterThan *tmp159 .lastRecoProgress :backgroundProcess:recoProgress
   255 jump *label66 equal *tmp159 false
   256 set :factoryUnitFinished:unit @poly
 
   263 label *label66
   264 set .lastRecoProgress :backgroundProcess:recoProgress
   265 label *label67
-    * sensor *tmp161 AÀF@L`-additive-reconstructor22 @silicon
-    * set :backgroundProcess:s *tmp161
-    * sensor *tmp162 AÀF@L`-additive-reconstructor22 @graphite
-    * set :backgroundProcess:g *tmp162
+  266 sensor :backgroundProcess:s AÀF@L`-additive-reconstructor22 @silicon
+  267 sensor :backgroundProcess:g AÀF@L`-additive-reconstructor22 @graphite
   268 op greaterThanEq *tmp163 :backgroundProcess:s 40
   269 op greaterThanEq *tmp164 :backgroundProcess:g 40
   270 op land *tmp165 *tmp163 *tmp164
   271 jump *label69 equal *tmp165 false
   272 op equal *tmp167 .recoEntered false
   273 jump *label71 equal *tmp167 false
-    * sensor *tmp169 AÀF@L`-additive-reconstructor22 @x
-    * set :backgroundProcess:x *tmp169
-    * sensor *tmp170 AÀF@L`-additive-reconstructor22 @y
-    * set :backgroundProcess:y *tmp170
+  274 sensor :backgroundProcess:x AÀF@L`-additive-reconstructor22 @x
+  275 sensor :backgroundProcess:y AÀF@L`-additive-reconstructor22 @y
   276 ubind @mono
   277 label *label73
   278 ucontrol move :backgroundProcess:x :backgroundProcess:y
 
   289 jump *label72 always
   290 label *label71
   291 label *label72
-    * set *tmp174 A{HDJ_-inverted-sorter21
-    * control enabled *tmp174 false
+  292 control enabled A{HDJ_-inverted-sorter21 false
   293 jump *label70 always
   294 label *label69
   295 op greaterThan *tmp176 :backgroundProcess:coreSilicon .siliconReserve
   296 op mul *tmp177 40 *tmp176
   297 op lessThan *tmp178 :backgroundProcess:s *tmp177
   298 jump *label76 equal *tmp178 false
-    * set *tmp180 A©HFJ^-unloader20
-    * control config *tmp180 @silicon
-    * set *tmp182 A{HDJ_-inverted-sorter21
-    * set *tmp184 .canConsume
-    * control enabled *tmp182 *tmp184
+  299 control config A©HFJ^-unloader20 @silicon
+  300 control enabled A{HDJ_-inverted-sorter21 .canConsume
   301 jump *label77 always
   302 label *label76
   303 op greaterThan *tmp185 :backgroundProcess:coreGraphite .graphiteReserve
   304 op mul *tmp186 40 *tmp185
   305 op lessThan *tmp187 :backgroundProcess:g *tmp186
   306 jump *label78 equal *tmp187 false
-    * set *tmp189 A©HFJ^-unloader20
-    * control config *tmp189 @graphite
-    * set *tmp191 A{HDJ_-inverted-sorter21
-    * set *tmp193 .canConsume
-    * control enabled *tmp191 *tmp193
+  307 control config A©HFJ^-unloader20 @graphite
+  308 control enabled A{HDJ_-inverted-sorter21 .canConsume
   309 jump *label79 always
   310 label *label78
-    * set *tmp194 A{HDJ_-inverted-sorter21
-    * control enabled *tmp194 false
+  311 control enabled A{HDJ_-inverted-sorter21 false
   312 label *label79
   313 label *label77
   314 label *label70
   315 jump *label65 always
   316 label *label64
-    * set *tmp196 A{HDJ_-inverted-sorter21
-    * control enabled *tmp196 false
+  317 control enabled A{HDJ_-inverted-sorter21 false
   318 label *label65
   319 jump *label80 equal AÁPBJf-multiplicative-reconstructor28 false
   320 set :backgroundProcess:c null
 
   339 label *label87
   340 label *label85
   341 label *label83
-    * set *tmp208 A©NHJX-unloader14
-    * control config *tmp208 :backgroundProcess:c
-    * set *tmp210 A©HFJ^-unloader20
-    * control config *tmp210 :backgroundProcess:c
-    * set *tmp212 A©JFJd-unloader26
-    * control config *tmp212 :backgroundProcess:c
-    * sensor *tmp214 AÁPBJf-multiplicative-reconstructor28 @progress
-    * set :backgroundProcess:multiProgress *tmp214
+  342 control config A©NHJX-unloader14 :backgroundProcess:c
+  343 control config A©HFJ^-unloader20 :backgroundProcess:c
+  344 control config A©JFJd-unloader26 :backgroundProcess:c
+  345 sensor :backgroundProcess:multiProgress AÁPBJf-multiplicative-reconstructor28 @progress
   346 op greaterThan *tmp215 .lastMultiProgress :backgroundProcess:multiProgress
   347 jump *label88 equal *tmp215 false
   348 set :factoryUnitFinished:unit @mega
 
   357 jump *label81 always
   358 label *label80
   359 label *label81
-    * op sub *tmp217 @tick :backgroundProcess:ticks
-    * set .loopTicks *tmp217
+  360 op sub .loopTicks @tick :backgroundProcess:ticks
   361 label *label12
   362 jump *label11 always
   363 label *label13
 
   409 end
   410 label *label5
   411 sensor *tmp224 :logUnit:unit @id
-    * op add *tmp225 @blockCount *tmp224
-    * set :log:encodedId *tmp225
+  412 op add :log:encodedId @blockCount *tmp224
   413 setaddr :log*retaddr *label103 (h:*label103)
   414 call *label4 *invalid :log*retval (m:*label103) (h:*label103)
   415 label *label103
 
   429 return :log*retaddr
   430 end
   431 label *label0
-    * set *tmp258 A©FJJU-unloader11
-    * control config *tmp258 @coal
-    * set *tmp260 A{HDJ_-inverted-sorter21
-    * control enabled *tmp260 false
+  432 control config A©FJJU-unloader11 @coal
+  433 control enabled A{HDJ_-inverted-sorter21 false
   434 set .canConsume false
   435 label *label106
   436 set :buildStart*finished true

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-4 instructions):
 
   370 setaddr :logUnit*retaddr *label92 (h:*label92)
   371 call *label5 *invalid :logUnit*retval (m:*label92) (h:*label92)
   372 label *label92
-    * jump *label95 equal :factoryUnitFinished:unit @flare
-    * jump *label94 always
+  373 jump *label94 notEqual :factoryUnitFinished:unit @flare
   374 label *label95
   375 op add *tmp220 .flares 1
   376 set .flares *tmp220
   377 write *tmp220 .display ".flares"
   378 jump *label93 always
   379 label *label94
-    * jump *label97 equal :factoryUnitFinished:unit @mono
-    * jump *label96 always
+  380 jump *label96 notEqual :factoryUnitFinished:unit @mono
   381 label *label97
   382 op add *tmp221 .monos 1
   383 set .monos *tmp221
   384 write *tmp221 .display ".monos"
   385 jump *label93 always
   386 label *label96
-    * jump *label99 equal :factoryUnitFinished:unit @poly
-    * jump *label98 always
+  387 jump *label98 notEqual :factoryUnitFinished:unit @poly
   388 label *label99
   389 op add *tmp222 .polys 1
   390 set .polys *tmp222
   391 write *tmp222 .display ".polys"
   392 jump *label93 always
   393 label *label98
-    * jump *label101 equal :factoryUnitFinished:unit @mega
-    * jump *label100 always
+  394 jump *label100 notEqual :factoryUnitFinished:unit @mega
   395 label *label101
   396 op add *tmp223 .megas 1
   397 set .megas *tmp223

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-31 instructions):
 
    21 set *signature "eb9ab5a008f372ac:v1"
    22 label *label9
    23 label *label11
-    * op equal *tmp33 .finished false
-    * jump *label13 equal *tmp33 false
+   24 jump *label13 notEqual .finished false
    25 set :backgroundProcess:ticks @tick
    26 sensor :backgroundProcess:coreSilicon .core @silicon
    27 sensor :backgroundProcess:coreGraphite .core @graphite
 
    56 op lessThan *tmp63 :backgroundProcess:power 800
    57 control enabled *tmp61 *tmp63
    58 label *label15
-    * op lessThan *tmp64 .flares .flareTarget
-    * jump *label16 equal *tmp64 false
+   59 jump *label16 greaterThanEq .flares .flareTarget
    60 write @flare .display ".nextUnit"
    61 set :handleAirFactory:unit @flare
    62 set :handleAirFactory:power :backgroundProcess:power
    63 set :handleAirFactory:silicon 15
    64 set :handleAirFactory:lead 0
-    * op equal *tmp66 .canConsume false
-    * jump *label19 equal *tmp66 false
+   65 jump *label19 notEqual .canConsume false
    66 control config A©FJJU-unloader11 @coal
    67 jump *label18 always
    68 jump *label20 always
 
    70 label *label20
    71 sensor *tmp70 AAKJ\-steam-generator18 @coal
    72 op mul *tmp71 5 AAKJ\-steam-generator18
-    * op lessThan *tmp72 *tmp70 *tmp71
-    * jump *label21 equal *tmp72 false
+   73 jump *label21 greaterThanEq *tmp70 *tmp71
    74 control config A©FJJU-unloader11 @coal
    75 jump *label18 always
    76 jump *label22 always
    77 label *label21
    78 label *label22
-    * op lessThan *tmp76 :handleAirFactory:power 200
-    * jump *label23 equal *tmp76 false
+   79 jump *label23 greaterThanEq :handleAirFactory:power 200
    80 control enabled A¾BFLW-air-factory13 false
    81 jump *label24 always
    82 label *label23
-    * op greaterThan *tmp80 :handleAirFactory:power 500
-    * jump *label25 equal *tmp80 false
+   83 jump *label25 lessThanEq :handleAirFactory:power 500
    84 control enabled A¾BFLW-air-factory13 true
    85 jump *label26 always
    86 label *label25
 
    88 label *label24
    89 control config A¾BFLW-air-factory13 :handleAirFactory:unit
    90 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp87 .lastProgress :handleAirFactory:factoryProgress
-    * jump *label27 equal *tmp87 false
+   91 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    92 set :factoryUnitFinished:unit :handleAirFactory:unit
    93 setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
    94 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
 
   102 set .lastProgress :handleAirFactory:factoryProgress
   103 jump *label30 equal :handleAirFactory:lead false
   104 sensor *tmp92 .core @lead
-    * op greaterThan *tmp93 *tmp92 0
-    * jump *label32 equal *tmp93 false
+  105 jump *label32 lessThanEq *tmp92 0
   106 set *tmp94 :handleAirFactory:lead
   107 jump *label33 always
   108 label *label32
 
   110 label *label33
   111 set :handleAirFactory:leadLimit *tmp94
   112 sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp96 *tmp95 :handleAirFactory:leadLimit
-    * jump *label34 equal *tmp96 false
+  113 jump *label34 greaterThanEq *tmp95 :handleAirFactory:leadLimit
   114 control config A©FJJU-unloader11 @lead
   115 jump *label18 always
   116 jump *label35 always
 
   120 label *label30
   121 label *label31
   122 sensor *tmp100 .core @silicon
-    * op greaterThan *tmp101 *tmp100 0
-    * jump *label36 equal *tmp101 false
+  123 jump *label36 lessThanEq *tmp100 0
   124 set *tmp102 :handleAirFactory:silicon
   125 jump *label37 always
   126 label *label36
 
   129 set :handleAirFactory:siliconLimit *tmp102
   130 set *tmp103 A©FJJU-unloader11
   131 sensor *tmp105 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp106 *tmp105 :handleAirFactory:siliconLimit
-    * jump *label38 equal *tmp106 false
+  132 jump *label38 greaterThanEq *tmp105 :handleAirFactory:siliconLimit
   133 set *tmp107 @silicon
   134 jump *label39 always
   135 label *label38
 
   139 label *label18
   140 jump *label17 always
   141 label *label16
-    * op lessThan *tmp108 .monos .monoTarget
-    * jump *label40 equal *tmp108 false
+  142 jump *label40 greaterThanEq .monos .monoTarget
   143 write @mono .display ".nextUnit"
   144 set :handleAirFactory.1:unit @mono
   145 set :handleAirFactory.1:power :backgroundProcess:power
   146 set :handleAirFactory.1:silicon 30
   147 set :handleAirFactory.1:lead 15
-    * op equal *tmp110 .canConsume false
-    * jump *label43 equal *tmp110 false
+  148 jump *label43 notEqual .canConsume false
   149 control config A©FJJU-unloader11 @coal
   150 jump *label42 always
   151 jump *label44 always
 
   153 label *label44
   154 sensor *tmp114 AAKJ\-steam-generator18 @coal
   155 op mul *tmp115 5 AAKJ\-steam-generator18
-    * op lessThan *tmp116 *tmp114 *tmp115
-    * jump *label45 equal *tmp116 false
+  156 jump *label45 greaterThanEq *tmp114 *tmp115
   157 control config A©FJJU-unloader11 @coal
   158 jump *label42 always
   159 jump *label46 always
   160 label *label45
   161 label *label46
-    * op lessThan *tmp120 :handleAirFactory.1:power 200
-    * jump *label47 equal *tmp120 false
+  162 jump *label47 greaterThanEq :handleAirFactory.1:power 200
   163 control enabled A¾BFLW-air-factory13 false
   164 jump *label48 always
   165 label *label47
-    * op greaterThan *tmp124 :handleAirFactory.1:power 500
-    * jump *label49 equal *tmp124 false
+  166 jump *label49 lessThanEq :handleAirFactory.1:power 500
   167 control enabled A¾BFLW-air-factory13 true
   168 jump *label50 always
   169 label *label49
 
   171 label *label48
   172 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
   173 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp131 .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label51 equal *tmp131 false
+  174 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   175 set :factoryUnitFinished:unit :handleAirFactory.1:unit
   176 setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
   177 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
 
   185 set .lastProgress :handleAirFactory.1:factoryProgress
   186 jump *label54 equal :handleAirFactory.1:lead false
   187 sensor *tmp136 .core @lead
-    * op greaterThan *tmp137 *tmp136 0
-    * jump *label56 equal *tmp137 false
+  188 jump *label56 lessThanEq *tmp136 0
   189 set *tmp138 :handleAirFactory.1:lead
   190 jump *label57 always
   191 label *label56
 
   193 label *label57
   194 set :handleAirFactory.1:leadLimit *tmp138
   195 sensor *tmp139 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp140 *tmp139 :handleAirFactory.1:leadLimit
-    * jump *label58 equal *tmp140 false
+  196 jump *label58 greaterThanEq *tmp139 :handleAirFactory.1:leadLimit
   197 control config A©FJJU-unloader11 @lead
   198 jump *label42 always
   199 jump *label59 always
 
   203 label *label54
   204 label *label55
   205 sensor *tmp144 .core @silicon
-    * op greaterThan *tmp145 *tmp144 0
-    * jump *label60 equal *tmp145 false
+  206 jump *label60 lessThanEq *tmp144 0
   207 set *tmp146 :handleAirFactory.1:silicon
   208 jump *label61 always
   209 label *label60
 
   212 set :handleAirFactory.1:siliconLimit *tmp146
   213 set *tmp147 A©FJJU-unloader11
   214 sensor *tmp149 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp150 *tmp149 :handleAirFactory.1:siliconLimit
-    * jump *label62 equal *tmp150 false
+  215 jump *label62 greaterThanEq *tmp149 :handleAirFactory.1:siliconLimit
   216 set *tmp151 @silicon
   217 jump *label63 always
   218 label *label62
 
   226 control config A©FJJU-unloader11 @coal
   227 label *label41
   228 label *label17
-    * op lessThan *tmp156 .polys .polyTarget
-    * jump *label64 equal *tmp156 false
+  229 jump *label64 greaterThanEq .polys .polyTarget
   230 write @poly .display ".nextUnit"
   231 sensor :backgroundProcess:recoProgress AÀF@L`-additive-reconstructor22 @progress
-    * op greaterThan *tmp159 .lastRecoProgress :backgroundProcess:recoProgress
-    * jump *label66 equal *tmp159 false
+  232 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   233 set :factoryUnitFinished:unit @poly
   234 setaddr :factoryUnitFinished*retaddr *label68 (h:*label68)
   235 call *label6 *invalid :factoryUnitFinished*retval (m:*label68) (h:*label68)
 
   246 op greaterThanEq *tmp164 :backgroundProcess:g 40
   247 op land *tmp165 *tmp163 *tmp164
   248 jump *label69 equal *tmp165 false
-    * op equal *tmp167 .recoEntered false
-    * jump *label71 equal *tmp167 false
+  249 jump *label71 notEqual .recoEntered false
   250 sensor :backgroundProcess:x AÀF@L`-additive-reconstructor22 @x
   251 sensor :backgroundProcess:y AÀF@L`-additive-reconstructor22 @y
   252 ubind @mono
 
   255 ucontrol payEnter
   256 label *label74
   257 sensor *tmp171 @unit @dead
-    * op equal *tmp172 *tmp171 false
-    * jump *label73 notEqual *tmp172 false
+  258 jump *label73 equal *tmp171 false
   259 label *label75
   260 op sub *tmp173 .monos 1
   261 set .monos *tmp173
 
   269 label *label69
   270 op greaterThan *tmp176 :backgroundProcess:coreSilicon .siliconReserve
   271 op mul *tmp177 40 *tmp176
-    * op lessThan *tmp178 :backgroundProcess:s *tmp177
-    * jump *label76 equal *tmp178 false
+  272 jump *label76 greaterThanEq :backgroundProcess:s *tmp177
   273 control config A©HFJ^-unloader20 @silicon
   274 control enabled A{HDJ_-inverted-sorter21 .canConsume
   275 jump *label77 always
   276 label *label76
   277 op greaterThan *tmp185 :backgroundProcess:coreGraphite .graphiteReserve
   278 op mul *tmp186 40 *tmp185
-    * op lessThan *tmp187 :backgroundProcess:g *tmp186
-    * jump *label78 equal *tmp187 false
+  279 jump *label78 greaterThanEq :backgroundProcess:g *tmp186
   280 control config A©HFJ^-unloader20 @graphite
   281 control enabled A{HDJ_-inverted-sorter21 .canConsume
   282 jump *label79 always
 
   292 jump *label80 equal AÁPBJf-multiplicative-reconstructor28 false
   293 set :backgroundProcess:c null
   294 sensor *tmp199 AÁPBJf-multiplicative-reconstructor28 @metaglass
-    * op lessThan *tmp200 *tmp199 40
-    * jump *label82 equal *tmp200 false
+  295 jump *label82 greaterThanEq *tmp199 40
   296 set :backgroundProcess:c @metaglass
   297 jump *label83 always
   298 label *label82
   299 sensor *tmp202 AÁPBJf-multiplicative-reconstructor28 @titanium
-    * op lessThan *tmp203 *tmp202 80
-    * jump *label84 equal *tmp203 false
+  300 jump *label84 greaterThanEq *tmp202 80
   301 set :backgroundProcess:c @titanium
   302 jump *label85 always
   303 label *label84
   304 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
-    * op lessThan *tmp206 *tmp205 130
-    * jump *label86 equal *tmp206 false
+  305 jump *label86 greaterThanEq *tmp205 130
   306 set :backgroundProcess:c @silicon
   307 jump *label87 always
   308 label *label86
 
   313 control config A©HFJ^-unloader20 :backgroundProcess:c
   314 control config A©JFJd-unloader26 :backgroundProcess:c
   315 sensor :backgroundProcess:multiProgress AÁPBJf-multiplicative-reconstructor28 @progress
-    * op greaterThan *tmp215 .lastMultiProgress :backgroundProcess:multiProgress
-    * jump *label88 equal *tmp215 false
+  316 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   317 set :factoryUnitFinished:unit @mega
   318 setaddr :factoryUnitFinished*retaddr *label90 (h:*label90)
   319 call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-16 instructions):
 
    65 jump *label19 notEqual .canConsume false
    66 control config A©FJJU-unloader11 @coal
    67 jump *label18 always
-    * jump *label20 always
    68 label *label19
    69 label *label20
    70 sensor *tmp70 AAKJ\-steam-generator18 @coal
 
    72 jump *label21 greaterThanEq *tmp70 *tmp71
    73 control config A©FJJU-unloader11 @coal
    74 jump *label18 always
-    * jump *label22 always
    75 label *label21
    76 label *label22
    77 jump *label23 greaterThanEq :handleAirFactory:power 200
 
    80 label *label23
    81 jump *label25 lessThanEq :handleAirFactory:power 500
    82 control enabled A¾BFLW-air-factory13 true
-    * jump *label26 always
    83 label *label25
    84 label *label26
    85 label *label24
 
    93 set .lastProgress 0
    94 control config A©FJJU-unloader11 @coal
    95 jump *label18 always
-    * jump *label28 always
    96 label *label27
    97 label *label28
    98 set .lastProgress :handleAirFactory:factoryProgress
 
   109 jump *label34 greaterThanEq *tmp95 :handleAirFactory:leadLimit
   110 control config A©FJJU-unloader11 @lead
   111 jump *label18 always
-    * jump *label35 always
   112 label *label34
   113 label *label35
-    * jump *label31 always
   114 label *label30
   115 label *label31
   116 sensor *tmp100 .core @silicon
 
   142 jump *label43 notEqual .canConsume false
   143 control config A©FJJU-unloader11 @coal
   144 jump *label42 always
-    * jump *label44 always
   145 label *label43
   146 label *label44
   147 sensor *tmp114 AAKJ\-steam-generator18 @coal
 
   149 jump *label45 greaterThanEq *tmp114 *tmp115
   150 control config A©FJJU-unloader11 @coal
   151 jump *label42 always
-    * jump *label46 always
   152 label *label45
   153 label *label46
   154 jump *label47 greaterThanEq :handleAirFactory.1:power 200
 
   157 label *label47
   158 jump *label49 lessThanEq :handleAirFactory.1:power 500
   159 control enabled A¾BFLW-air-factory13 true
-    * jump *label50 always
   160 label *label49
   161 label *label50
   162 label *label48
 
   170 set .lastProgress 0
   171 control config A©FJJU-unloader11 @coal
   172 jump *label42 always
-    * jump *label52 always
   173 label *label51
   174 label *label52
   175 set .lastProgress :handleAirFactory.1:factoryProgress
 
   186 jump *label58 greaterThanEq *tmp139 :handleAirFactory.1:leadLimit
   187 control config A©FJJU-unloader11 @lead
   188 jump *label42 always
-    * jump *label59 always
   189 label *label58
   190 label *label59
-    * jump *label55 always
   191 label *label54
   192 label *label55
   193 sensor *tmp144 .core @silicon
 
   249 set .monos *tmp173
   250 write *tmp173 .display ".monos"
   251 set .recoEntered true
-    * jump *label72 always
   252 label *label71
   253 label *label72
   254 control enabled A{HDJ_-inverted-sorter21 false
 
   291 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
   292 jump *label86 greaterThanEq *tmp205 130
   293 set :backgroundProcess:c @silicon
-    * jump *label87 always
   294 label *label86
   295 label *label87
   296 label *label85
 
   309 label *label88
   310 set .lastMultiProgress :backgroundProcess:multiProgress
   311 label *label89
-    * jump *label81 always
   312 label *label80
   313 label *label81
   314 op sub .loopTicks @tick :backgroundProcess:ticks
 
   350 op add *tmp223 .megas 1
   351 set .megas *tmp223
   352 write *tmp223 .display ".megas"
-    * jump *label93 always
   353 label *label100
   354 label *label93
   355 write true .display ".unitReset"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    74 jump *label18 always
    75 label *label21
    76 label *label22
-    * jump *label23 greaterThanEq :handleAirFactory:power 200
+   77 jump *label23 greaterThanEq :backgroundProcess:power 200
    78 control enabled A¾BFLW-air-factory13 false
    79 jump *label24 always
    80 label *label23
-    * jump *label25 lessThanEq :handleAirFactory:power 500
+   81 jump *label25 lessThanEq :backgroundProcess:power 500
    82 control enabled A¾BFLW-air-factory13 true
    83 label *label25
    84 label *label26
    85 label *label24
-    * control config A¾BFLW-air-factory13 :handleAirFactory:unit
+   86 control config A¾BFLW-air-factory13 @flare
    87 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    88 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory:unit
+   89 set :factoryUnitFinished:unit @flare
    90 setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
    91 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
    92 label *label29
 
    96 label *label27
    97 label *label28
    98 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 equal :handleAirFactory:lead false
+   99 jump *label30 equal 0 false
   100 sensor *tmp92 .core @lead
   101 jump *label32 lessThanEq *tmp92 0
-    * set *tmp94 :handleAirFactory:lead
+  102 set *tmp94 0
   103 jump *label33 always
   104 label *label32
   105 set *tmp94 0
   106 label *label33
-    * set :handleAirFactory:leadLimit *tmp94
+  107 set :handleAirFactory:leadLimit :handleAirFactory:lead
   108 sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp95 :handleAirFactory:leadLimit
+  109 jump *label34 greaterThanEq *tmp95 *tmp94
   110 control config A©FJJU-unloader11 @lead
   111 jump *label18 always
   112 label *label34
 
   115 label *label31
   116 sensor *tmp100 .core @silicon
   117 jump *label36 lessThanEq *tmp100 0
-    * set *tmp102 :handleAirFactory:silicon
+  118 set *tmp102 15
   119 jump *label37 always
   120 label *label36
   121 set *tmp102 0
 
   123 set :handleAirFactory:siliconLimit *tmp102
   124 set *tmp103 A©FJJU-unloader11
   125 sensor *tmp105 A¾BFLW-air-factory13 @silicon
-    * jump *label38 greaterThanEq *tmp105 :handleAirFactory:siliconLimit
+  126 jump *label38 greaterThanEq *tmp105 *tmp102
   127 set *tmp107 @silicon
   128 jump *label39 always
   129 label *label38
 
   151 jump *label42 always
   152 label *label45
   153 label *label46
-    * jump *label47 greaterThanEq :handleAirFactory.1:power 200
+  154 jump *label47 greaterThanEq :backgroundProcess:power 200
   155 control enabled A¾BFLW-air-factory13 false
   156 jump *label48 always
   157 label *label47
-    * jump *label49 lessThanEq :handleAirFactory.1:power 500
+  158 jump *label49 lessThanEq :backgroundProcess:power 500
   159 control enabled A¾BFLW-air-factory13 true
   160 label *label49
   161 label *label50
   162 label *label48
-    * control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  163 control config A¾BFLW-air-factory13 @mono
   164 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   165 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory.1:unit
+  166 set :factoryUnitFinished:unit @mono
   167 setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
   168 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
   169 label *label53
 
   173 label *label51
   174 label *label52
   175 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label54 equal :handleAirFactory.1:lead false
+  176 jump *label54 equal 15 false
   177 sensor *tmp136 .core @lead
   178 jump *label56 lessThanEq *tmp136 0
-    * set *tmp138 :handleAirFactory.1:lead
+  179 set *tmp138 15
   180 jump *label57 always
   181 label *label56
   182 set *tmp138 0
   183 label *label57
   184 set :handleAirFactory.1:leadLimit *tmp138
   185 sensor *tmp139 A¾BFLW-air-factory13 @lead
-    * jump *label58 greaterThanEq *tmp139 :handleAirFactory.1:leadLimit
+  186 jump *label58 greaterThanEq *tmp139 *tmp138
   187 control config A©FJJU-unloader11 @lead
   188 jump *label42 always
   189 label *label58
 
   192 label *label55
   193 sensor *tmp144 .core @silicon
   194 jump *label60 lessThanEq *tmp144 0
-    * set *tmp146 :handleAirFactory.1:silicon
+  195 set *tmp146 30
   196 jump *label61 always
   197 label *label60
   198 set *tmp146 0
 
   200 set :handleAirFactory.1:siliconLimit *tmp146
   201 set *tmp147 A©FJJU-unloader11
   202 sensor *tmp149 A¾BFLW-air-factory13 @silicon
-    * jump *label62 greaterThanEq *tmp149 :handleAirFactory.1:siliconLimit
+  203 jump *label62 greaterThanEq *tmp149 *tmp146
   204 set *tmp151 @silicon
   205 jump *label63 always
   206 label *label62
 
   373 read *tmp229 .timer "time"
   374 op mul *tmp230 *tmp229 1000
   375 op add *tmp231 :log:encodedId *tmp230
-    * write *tmp231 .bank *tmp227
+  376 write *tmp231 .bank *tmp226
   377 label *label104
   378 return :log*retaddr
   379 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-12 instructions):
 
    58 label *label15
    59 jump *label16 greaterThanEq .flares .flareTarget
    60 write @flare .display ".nextUnit"
-    * set :handleAirFactory:unit @flare
-    * set :handleAirFactory:power :backgroundProcess:power
-    * set :handleAirFactory:silicon 15
    61 set :handleAirFactory:lead 0
    62 jump *label19 notEqual .canConsume false
    63 control config A©FJJU-unloader11 @coal
 
    99 set *tmp94 0
   100 jump *label33 always
   101 label *label32
-    * set *tmp94 0
   102 label *label33
-    * set :handleAirFactory:leadLimit :handleAirFactory:lead
+  103 set :handleAirFactory:leadLimit 0
   104 sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp95 *tmp94
+  105 jump *label34 greaterThanEq *tmp95 0
   106 control config A©FJJU-unloader11 @lead
   107 jump *label18 always
   108 label *label34
 
   116 label *label36
   117 set *tmp102 0
   118 label *label37
-    * set :handleAirFactory:siliconLimit *tmp102
   119 set *tmp103 A©FJJU-unloader11
   120 sensor *tmp105 A¾BFLW-air-factory13 @silicon
   121 jump *label38 greaterThanEq *tmp105 *tmp102
 
   130 label *label16
   131 jump *label40 greaterThanEq .monos .monoTarget
   132 write @mono .display ".nextUnit"
-    * set :handleAirFactory.1:unit @mono
-    * set :handleAirFactory.1:power :backgroundProcess:power
-    * set :handleAirFactory.1:silicon 30
-    * set :handleAirFactory.1:lead 15
   133 jump *label43 notEqual .canConsume false
   134 control config A©FJJU-unloader11 @coal
   135 jump *label42 always
 
   172 label *label56
   173 set *tmp138 0
   174 label *label57
-    * set :handleAirFactory.1:leadLimit *tmp138
   175 sensor *tmp139 A¾BFLW-air-factory13 @lead
   176 jump *label58 greaterThanEq *tmp139 *tmp138
   177 control config A©FJJU-unloader11 @lead
 
   187 label *label60
   188 set *tmp146 0
   189 label *label61
-    * set :handleAirFactory.1:siliconLimit *tmp146
   190 set *tmp147 A©FJJU-unloader11
   191 sensor *tmp149 A¾BFLW-air-factory13 @silicon
   192 jump *label62 greaterThanEq *tmp149 *tmp146
 
   358 read *tmp32 .bank 511
   359 op sub *tmp226 *tmp32 1
   360 write *tmp226 .bank 511
-    * set *tmp227 *tmp226
   361 read *tmp229 .timer "time"
   362 op mul *tmp230 *tmp229 1000
   363 op add *tmp231 :log:encodedId *tmp230

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
 
    58 label *label15
    59 jump *label16 greaterThanEq .flares .flareTarget
    60 write @flare .display ".nextUnit"
-    * set :handleAirFactory:lead 0
    61 jump *label19 notEqual .canConsume false
    62 control config A©FJJU-unloader11 @coal
    63 jump *label18 always
 
    95 jump *label30 equal 0 false
    96 sensor *tmp92 .core @lead
    97 jump *label32 lessThanEq *tmp92 0
-    * set *tmp94 0
    98 jump *label33 always
    99 label *label32
   100 label *label33
-    * set :handleAirFactory:leadLimit 0
   101 sensor *tmp95 A¾BFLW-air-factory13 @lead
   102 jump *label34 greaterThanEq *tmp95 0
   103 control config A©FJJU-unloader11 @lead

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    22 label *label9
    23 label *label11
    24 jump *label13 notEqual .finished false
+   25 label *label108
    26 set :backgroundProcess:ticks @tick
    27 sensor :backgroundProcess:coreSilicon .core @silicon
    28 sensor :backgroundProcess:coreGraphite .core @graphite
 
   300 label *label81
   301 op sub .loopTicks @tick :backgroundProcess:ticks
   302 label *label12
-    * jump *label11 always
+  303 jump *label108 equal .finished false
   304 label *label13
   305 label *label10
   306 wait 1e12

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-18 instructions):
 
    94 label *label28
    95 set .lastProgress :handleAirFactory:factoryProgress
    96 jump *label30 equal 0 false
-    * sensor *tmp92 .core @lead
-    * jump *label32 lessThanEq *tmp92 0
-    * jump *label33 always
-    * label *label32
-    * label *label33
+   97 sensor *tmp92 .core @lead
    98 sensor *tmp95 A¾BFLW-air-factory13 @lead
    99 jump *label34 greaterThanEq *tmp95 0
   100 control config A©FJJU-unloader11 @lead
 
   103 label *label35
   104 label *label30
   105 label *label31
-    * sensor *tmp100 .core @silicon
-    * jump *label36 lessThanEq *tmp100 0
-    * set *tmp102 15
-    * jump *label37 always
-    * label *label36
-    * set *tmp102 0
-    * label *label37
+  106 sensor *tmp100 .core @silicon
+  107 select *tmp102 greaterThan *tmp100 0 15 0
   108 set *tmp103 A©FJJU-unloader11
-    * sensor *tmp105 A¾BFLW-air-factory13 @silicon
-    * jump *label38 greaterThanEq *tmp105 *tmp102
-    * set *tmp107 @silicon
-    * jump *label39 always
-    * label *label38
-    * set *tmp107 @coal
-    * label *label39
+  109 sensor *tmp105 A¾BFLW-air-factory13 @silicon
+  110 select *tmp107 lessThan *tmp105 *tmp102 @silicon @coal
   111 control config *tmp103 *tmp107
   112 label *label18
   113 jump *label17 always
 
   149 label *label52
   150 set .lastProgress :handleAirFactory.1:factoryProgress
   151 jump *label54 equal 15 false
-    * sensor *tmp136 .core @lead
-    * jump *label56 lessThanEq *tmp136 0
-    * set *tmp138 15
-    * jump *label57 always
-    * label *label56
-    * set *tmp138 0
-    * label *label57
+  152 sensor *tmp136 .core @lead
+  153 select *tmp138 greaterThan *tmp136 0 15 0
   154 sensor *tmp139 A¾BFLW-air-factory13 @lead
   155 jump *label58 greaterThanEq *tmp139 *tmp138
   156 control config A©FJJU-unloader11 @lead
 
   159 label *label59
   160 label *label54
   161 label *label55
-    * sensor *tmp144 .core @silicon
-    * jump *label60 lessThanEq *tmp144 0
-    * set *tmp146 30
-    * jump *label61 always
-    * label *label60
-    * set *tmp146 0
-    * label *label61
+  162 sensor *tmp144 .core @silicon
+  163 select *tmp146 greaterThan *tmp144 0 30 0
   164 set *tmp147 A©FJJU-unloader11
-    * sensor *tmp149 A¾BFLW-air-factory13 @silicon
-    * jump *label62 greaterThanEq *tmp149 *tmp146
-    * set *tmp151 @silicon
-    * jump *label63 always
-    * label *label62
-    * set *tmp151 @coal
-    * label *label63
+  165 sensor *tmp149 A¾BFLW-air-factory13 @silicon
+  166 select *tmp151 lessThan *tmp149 *tmp146 @silicon @coal
   167 control config *tmp147 *tmp151
   168 label *label42
   169 jump *label41 always
 
   246 set :backgroundProcess:c @titanium
   247 jump *label85 always
   248 label *label84
-    * sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
-    * jump *label86 greaterThanEq *tmp205 130
-    * set :backgroundProcess:c @silicon
-    * label *label86
-    * label *label87
+  249 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
+  250 select :backgroundProcess:c lessThan *tmp205 130 @silicon :backgroundProcess:c
   251 label *label85
   252 label *label83
   253 control config A©NHJX-unloader14 :backgroundProcess:c

Modifications by Inline function 'logUnit' defined at CoreController.mnd:47:1 (-4 instructions):
 
   276 end
   277 label *label6
   278 set :logUnit:unit :factoryUnitFinished:unit
-    * setaddr :logUnit*retaddr *label92 (h:*label92)
-    * call *label5 *invalid :logUnit*retval (m:*label92) (h:*label92)
-    * label *label92
+  279 label *label109
+  280 sensor *tmp224 :logUnit:unit @id
+  281 op add :log:encodedId @blockCount *tmp224
+  282 setaddr :log*retaddr *label110 (h:*label110)
+  283 call *label4 *invalid :log*retval (m:*label110) (h:*label110)
+  284 label *label110
+  285 label *label111
   286 jump *label94 notEqual :factoryUnitFinished:unit @flare
   287 label *label95
   288 op add *tmp220 .flares 1
 
   315 label *label91
   316 return :factoryUnitFinished*retaddr
   317 end
-    * label *label5
-    * sensor *tmp224 :logUnit:unit @id
-    * op add :log:encodedId @blockCount *tmp224
-    * setaddr :log*retaddr *label103 (h:*label103)
-    * call *label4 *invalid :log*retval (m:*label103) (h:*label103)
-    * label *label103
-    * label *label102
-    * return :logUnit*retaddr
-    * end
   318 label *label4
   319 read *tmp32 .bank 511
   320 op sub *tmp226 *tmp32 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   247 jump *label85 always
   248 label *label84
   249 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
-    * select :backgroundProcess:c lessThan *tmp205 130 @silicon :backgroundProcess:c
+  250 select :backgroundProcess:c lessThan *tmp205 130 @silicon null
   251 label *label85
   252 label *label83
   253 control config A©NHJX-unloader14 :backgroundProcess:c
 
   277 label *label6
   278 set :logUnit:unit :factoryUnitFinished:unit
   279 label *label109
-    * sensor *tmp224 :logUnit:unit @id
+  280 sensor *tmp224 :factoryUnitFinished:unit @id
   281 op add :log:encodedId @blockCount *tmp224
   282 setaddr :log*retaddr *label110 (h:*label110)
   283 call *label4 *invalid :log*retval (m:*label110) (h:*label110)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   235 control enabled A{HDJ_-inverted-sorter21 false
   236 label *label65
   237 jump *label80 equal AÁPBJf-multiplicative-reconstructor28 false
-    * set :backgroundProcess:c null
   238 sensor *tmp199 AÁPBJf-multiplicative-reconstructor28 @metaglass
   239 jump *label82 greaterThanEq *tmp199 40
   240 set :backgroundProcess:c @metaglass
 
   274 jump *label9 always
   275 end
   276 label *label6
-    * set :logUnit:unit :factoryUnitFinished:unit
   277 label *label109
   278 sensor *tmp224 :factoryUnitFinished:unit @id
   279 op add :log:encodedId @blockCount *tmp224

Modifications by Inline function 'log' defined at CoreController.mnd:43:1 (-4 instructions):
 
   277 label *label109
   278 sensor *tmp224 :factoryUnitFinished:unit @id
   279 op add :log:encodedId @blockCount *tmp224
-    * setaddr :log*retaddr *label110 (h:*label110)
-    * call *label4 *invalid :log*retval (m:*label110) (h:*label110)
-    * label *label110
+  280 label *label112
+  281 read *tmp32 .bank 511
+  282 op sub *tmp226 *tmp32 1
+  283 write *tmp226 .bank 511
+  284 read *tmp229 .timer "time"
+  285 op mul *tmp230 *tmp229 1000
+  286 op add *tmp231 :log:encodedId *tmp230
+  287 write *tmp231 .bank *tmp226
+  288 label *label113
   289 label *label111
   290 jump *label94 notEqual :factoryUnitFinished:unit @flare
   291 label *label95
 
   319 label *label91
   320 return :factoryUnitFinished*retaddr
   321 end
-    * label *label4
-    * read *tmp32 .bank 511
-    * op sub *tmp226 *tmp32 1
-    * write *tmp226 .bank 511
-    * read *tmp229 .timer "time"
-    * op mul *tmp230 *tmp229 1000
-    * op add *tmp231 :log:encodedId *tmp230
-    * write *tmp231 .bank *tmp226
-    * label *label104
-    * return :log*retaddr
-    * end
   322 label *label0
   323 control config A©FJJU-unloader11 @coal
   324 control enabled A{HDJ_-inverted-sorter21 false

Modifications by Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 (+77 instructions):
 
    84 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    85 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    86 set :factoryUnitFinished:unit @flare
-    * setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
-    * label *label29
+   87 label *label114
+   88 label *label115
+   89 sensor *tmp224 :factoryUnitFinished:unit @id
+   90 op add :log:encodedId @blockCount *tmp224
+   91 label *label116
+   92 read *tmp32 .bank 511
+   93 op sub *tmp226 *tmp32 1
+   94 write *tmp226 .bank 511
+   95 read *tmp229 .timer "time"
+   96 op mul *tmp230 *tmp229 1000
+   97 op add *tmp231 :log:encodedId *tmp230
+   98 write *tmp231 .bank *tmp226
+   99 label *label117
+  100 label *label118
+  101 jump *label120 notEqual :factoryUnitFinished:unit @flare
+  102 label *label119
+  103 op add *tmp220 .flares 1
+  104 set .flares *tmp220
+  105 write *tmp220 .display ".flares"
+  106 jump *label127 always
+  107 label *label120
+  108 jump *label122 notEqual :factoryUnitFinished:unit @mono
+  109 label *label121
+  110 op add *tmp221 .monos 1
+  111 set .monos *tmp221
+  112 write *tmp221 .display ".monos"
+  113 jump *label127 always
+  114 label *label122
+  115 jump *label124 notEqual :factoryUnitFinished:unit @poly
+  116 label *label123
+  117 op add *tmp222 .polys 1
+  118 set .polys *tmp222
+  119 write *tmp222 .display ".polys"
+  120 jump *label127 always
+  121 label *label124
+  122 jump *label126 notEqual :factoryUnitFinished:unit @mega
+  123 label *label125
+  124 op add *tmp223 .megas 1
+  125 set .megas *tmp223
+  126 write *tmp223 .display ".megas"
+  127 label *label126
+  128 label *label127
+  129 write true .display ".unitReset"
+  130 label *label128
   131 set .lastProgress 0
   132 control config A©FJJU-unloader11 @coal
   133 jump *label18 always
 
   180 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   181 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   182 set :factoryUnitFinished:unit @mono
-    * setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
-    * label *label53
+  183 label *label129
+  184 label *label130
+  185 sensor *tmp224 :factoryUnitFinished:unit @id
+  186 op add :log:encodedId @blockCount *tmp224
+  187 label *label131
+  188 read *tmp32 .bank 511
+  189 op sub *tmp226 *tmp32 1
+  190 write *tmp226 .bank 511
+  191 read *tmp229 .timer "time"
+  192 op mul *tmp230 *tmp229 1000
+  193 op add *tmp231 :log:encodedId *tmp230
+  194 write *tmp231 .bank *tmp226
+  195 label *label132
+  196 label *label133
+  197 jump *label135 notEqual :factoryUnitFinished:unit @flare
+  198 label *label134
+  199 op add *tmp220 .flares 1
+  200 set .flares *tmp220
+  201 write *tmp220 .display ".flares"
+  202 jump *label142 always
+  203 label *label135
+  204 jump *label137 notEqual :factoryUnitFinished:unit @mono
+  205 label *label136
+  206 op add *tmp221 .monos 1
+  207 set .monos *tmp221
+  208 write *tmp221 .display ".monos"
+  209 jump *label142 always
+  210 label *label137
+  211 jump *label139 notEqual :factoryUnitFinished:unit @poly
+  212 label *label138
+  213 op add *tmp222 .polys 1
+  214 set .polys *tmp222
+  215 write *tmp222 .display ".polys"
+  216 jump *label142 always
+  217 label *label139
+  218 jump *label141 notEqual :factoryUnitFinished:unit @mega
+  219 label *label140
+  220 op add *tmp223 .megas 1
+  221 set .megas *tmp223
+  222 write *tmp223 .display ".megas"
+  223 label *label141
+  224 label *label142
+  225 write true .display ".unitReset"
+  226 label *label143
   227 set .lastProgress 0
   228 control config A©FJJU-unloader11 @coal
   229 jump *label42 always
 
   259 sensor :backgroundProcess:recoProgress AÀF@L`-additive-reconstructor22 @progress
   260 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   261 set :factoryUnitFinished:unit @poly
-    * setaddr :factoryUnitFinished*retaddr *label68 (h:*label68)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label68) (h:*label68)
-    * label *label68
+  262 label *label144
+  263 label *label145
+  264 sensor *tmp224 :factoryUnitFinished:unit @id
+  265 op add :log:encodedId @blockCount *tmp224
+  266 label *label146
+  267 read *tmp32 .bank 511
+  268 op sub *tmp226 *tmp32 1
+  269 write *tmp226 .bank 511
+  270 read *tmp229 .timer "time"
+  271 op mul *tmp230 *tmp229 1000
+  272 op add *tmp231 :log:encodedId *tmp230
+  273 write *tmp231 .bank *tmp226
+  274 label *label147
+  275 label *label148
+  276 jump *label150 notEqual :factoryUnitFinished:unit @flare
+  277 label *label149
+  278 op add *tmp220 .flares 1
+  279 set .flares *tmp220
+  280 write *tmp220 .display ".flares"
+  281 jump *label157 always
+  282 label *label150
+  283 jump *label152 notEqual :factoryUnitFinished:unit @mono
+  284 label *label151
+  285 op add *tmp221 .monos 1
+  286 set .monos *tmp221
+  287 write *tmp221 .display ".monos"
+  288 jump *label157 always
+  289 label *label152
+  290 jump *label154 notEqual :factoryUnitFinished:unit @poly
+  291 label *label153
+  292 op add *tmp222 .polys 1
+  293 set .polys *tmp222
+  294 write *tmp222 .display ".polys"
+  295 jump *label157 always
+  296 label *label154
+  297 jump *label156 notEqual :factoryUnitFinished:unit @mega
+  298 label *label155
+  299 op add *tmp223 .megas 1
+  300 set .megas *tmp223
+  301 write *tmp223 .display ".megas"
+  302 label *label156
+  303 label *label157
+  304 write true .display ".unitReset"
+  305 label *label158
   306 set .recoEntered false
   307 set .lastRecoProgress 0
   308 jump *label67 always
 
   378 sensor :backgroundProcess:multiProgress AÁPBJf-multiplicative-reconstructor28 @progress
   379 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   380 set :factoryUnitFinished:unit @mega
-    * setaddr :factoryUnitFinished*retaddr *label90 (h:*label90)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)
-    * label *label90
+  381 label *label159
+  382 label *label160
+  383 sensor *tmp224 :factoryUnitFinished:unit @id
+  384 op add :log:encodedId @blockCount *tmp224
+  385 label *label161
+  386 read *tmp32 .bank 511
+  387 op sub *tmp226 *tmp32 1
+  388 write *tmp226 .bank 511
+  389 read *tmp229 .timer "time"
+  390 op mul *tmp230 *tmp229 1000
+  391 op add *tmp231 :log:encodedId *tmp230
+  392 write *tmp231 .bank *tmp226
+  393 label *label162
+  394 label *label163
+  395 jump *label165 notEqual :factoryUnitFinished:unit @flare
+  396 label *label164
+  397 op add *tmp220 .flares 1
+  398 set .flares *tmp220
+  399 write *tmp220 .display ".flares"
+  400 jump *label172 always
+  401 label *label165
+  402 jump *label167 notEqual :factoryUnitFinished:unit @mono
+  403 label *label166
+  404 op add *tmp221 .monos 1
+  405 set .monos *tmp221
+  406 write *tmp221 .display ".monos"
+  407 jump *label172 always
+  408 label *label167
+  409 jump *label169 notEqual :factoryUnitFinished:unit @poly
+  410 label *label168
+  411 op add *tmp222 .polys 1
+  412 set .polys *tmp222
+  413 write *tmp222 .display ".polys"
+  414 jump *label172 always
+  415 label *label169
+  416 jump *label171 notEqual :factoryUnitFinished:unit @mega
+  417 label *label170
+  418 op add *tmp223 .megas 1
+  419 set .megas *tmp223
+  420 write *tmp223 .display ".megas"
+  421 label *label171
+  422 label *label172
+  423 write true .display ".unitReset"
+  424 label *label173
   425 set .lastMultiProgress 0
   426 jump *label89 always
   427 label *label88
 
   437 wait 1e12
   438 jump *label9 always
   439 end
-    * label *label6
-    * label *label109
-    * sensor *tmp224 :factoryUnitFinished:unit @id
-    * op add :log:encodedId @blockCount *tmp224
-    * label *label112
-    * read *tmp32 .bank 511
-    * op sub *tmp226 *tmp32 1
-    * write *tmp226 .bank 511
-    * read *tmp229 .timer "time"
-    * op mul *tmp230 *tmp229 1000
-    * op add *tmp231 :log:encodedId *tmp230
-    * write *tmp231 .bank *tmp226
-    * label *label113
-    * label *label111
-    * jump *label94 notEqual :factoryUnitFinished:unit @flare
-    * label *label95
-    * op add *tmp220 .flares 1
-    * set .flares *tmp220
-    * write *tmp220 .display ".flares"
-    * jump *label93 always
-    * label *label94
-    * jump *label96 notEqual :factoryUnitFinished:unit @mono
-    * label *label97
-    * op add *tmp221 .monos 1
-    * set .monos *tmp221
-    * write *tmp221 .display ".monos"
-    * jump *label93 always
-    * label *label96
-    * jump *label98 notEqual :factoryUnitFinished:unit @poly
-    * label *label99
-    * op add *tmp222 .polys 1
-    * set .polys *tmp222
-    * write *tmp222 .display ".polys"
-    * jump *label93 always
-    * label *label98
-    * jump *label100 notEqual :factoryUnitFinished:unit @mega
-    * label *label101
-    * op add *tmp223 .megas 1
-    * set .megas *tmp223
-    * write *tmp223 .display ".megas"
-    * label *label100
-    * label *label93
-    * write true .display ".unitReset"
-    * label *label91
-    * return :factoryUnitFinished*retaddr
-    * end
   440 label *label0
   441 control config A©FJJU-unloader11 @coal
   442 control enabled A{HDJ_-inverted-sorter21 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    86 set :factoryUnitFinished:unit @flare
    87 label *label114
    88 label *label115
-    * sensor *tmp224 :factoryUnitFinished:unit @id
+   89 sensor *tmp224 @flare @id
    90 op add :log:encodedId @blockCount *tmp224
    91 label *label116
    92 read *tmp32 .bank 511
 
    98 write *tmp231 .bank *tmp226
    99 label *label117
   100 label *label118
-    * jump *label120 notEqual :factoryUnitFinished:unit @flare
+  101 jump *label120 notEqual @flare @flare
   102 label *label119
   103 op add *tmp220 .flares 1
   104 set .flares *tmp220
   105 write *tmp220 .display ".flares"
   106 jump *label127 always
   107 label *label120
-    * jump *label122 notEqual :factoryUnitFinished:unit @mono
+  108 jump *label122 notEqual @flare @mono
   109 label *label121
   110 op add *tmp221 .monos 1
   111 set .monos *tmp221
   112 write *tmp221 .display ".monos"
   113 jump *label127 always
   114 label *label122
-    * jump *label124 notEqual :factoryUnitFinished:unit @poly
+  115 jump *label124 notEqual @flare @poly
   116 label *label123
   117 op add *tmp222 .polys 1
   118 set .polys *tmp222
   119 write *tmp222 .display ".polys"
   120 jump *label127 always
   121 label *label124
-    * jump *label126 notEqual :factoryUnitFinished:unit @mega
+  122 jump *label126 notEqual @flare @mega
   123 label *label125
   124 op add *tmp223 .megas 1
   125 set .megas *tmp223
 
   182 set :factoryUnitFinished:unit @mono
   183 label *label129
   184 label *label130
-    * sensor *tmp224 :factoryUnitFinished:unit @id
+  185 sensor *tmp224 @mono @id
   186 op add :log:encodedId @blockCount *tmp224
   187 label *label131
   188 read *tmp32 .bank 511
 
   194 write *tmp231 .bank *tmp226
   195 label *label132
   196 label *label133
-    * jump *label135 notEqual :factoryUnitFinished:unit @flare
+  197 jump *label135 notEqual @mono @flare
   198 label *label134
   199 op add *tmp220 .flares 1
   200 set .flares *tmp220
   201 write *tmp220 .display ".flares"
   202 jump *label142 always
   203 label *label135
-    * jump *label137 notEqual :factoryUnitFinished:unit @mono
+  204 jump *label137 notEqual @mono @mono
   205 label *label136
   206 op add *tmp221 .monos 1
   207 set .monos *tmp221
   208 write *tmp221 .display ".monos"
   209 jump *label142 always
   210 label *label137
-    * jump *label139 notEqual :factoryUnitFinished:unit @poly
+  211 jump *label139 notEqual @mono @poly
   212 label *label138
   213 op add *tmp222 .polys 1
   214 set .polys *tmp222
   215 write *tmp222 .display ".polys"
   216 jump *label142 always
   217 label *label139
-    * jump *label141 notEqual :factoryUnitFinished:unit @mega
+  218 jump *label141 notEqual @mono @mega
   219 label *label140
   220 op add *tmp223 .megas 1
   221 set .megas *tmp223
 
   261 set :factoryUnitFinished:unit @poly
   262 label *label144
   263 label *label145
-    * sensor *tmp224 :factoryUnitFinished:unit @id
+  264 sensor *tmp224 @poly @id
   265 op add :log:encodedId @blockCount *tmp224
   266 label *label146
   267 read *tmp32 .bank 511
 
   273 write *tmp231 .bank *tmp226
   274 label *label147
   275 label *label148
-    * jump *label150 notEqual :factoryUnitFinished:unit @flare
+  276 jump *label150 notEqual @poly @flare
   277 label *label149
   278 op add *tmp220 .flares 1
   279 set .flares *tmp220
   280 write *tmp220 .display ".flares"
   281 jump *label157 always
   282 label *label150
-    * jump *label152 notEqual :factoryUnitFinished:unit @mono
+  283 jump *label152 notEqual @poly @mono
   284 label *label151
   285 op add *tmp221 .monos 1
   286 set .monos *tmp221
   287 write *tmp221 .display ".monos"
   288 jump *label157 always
   289 label *label152
-    * jump *label154 notEqual :factoryUnitFinished:unit @poly
+  290 jump *label154 notEqual @poly @poly
   291 label *label153
   292 op add *tmp222 .polys 1
   293 set .polys *tmp222
   294 write *tmp222 .display ".polys"
   295 jump *label157 always
   296 label *label154
-    * jump *label156 notEqual :factoryUnitFinished:unit @mega
+  297 jump *label156 notEqual @poly @mega
   298 label *label155
   299 op add *tmp223 .megas 1
   300 set .megas *tmp223
 
   380 set :factoryUnitFinished:unit @mega
   381 label *label159
   382 label *label160
-    * sensor *tmp224 :factoryUnitFinished:unit @id
+  383 sensor *tmp224 @mega @id
   384 op add :log:encodedId @blockCount *tmp224
   385 label *label161
   386 read *tmp32 .bank 511
 
   392 write *tmp231 .bank *tmp226
   393 label *label162
   394 label *label163
-    * jump *label165 notEqual :factoryUnitFinished:unit @flare
+  395 jump *label165 notEqual @mega @flare
   396 label *label164
   397 op add *tmp220 .flares 1
   398 set .flares *tmp220
   399 write *tmp220 .display ".flares"
   400 jump *label172 always
   401 label *label165
-    * jump *label167 notEqual :factoryUnitFinished:unit @mono
+  402 jump *label167 notEqual @mega @mono
   403 label *label166
   404 op add *tmp221 .monos 1
   405 set .monos *tmp221
   406 write *tmp221 .display ".monos"
   407 jump *label172 always
   408 label *label167
-    * jump *label169 notEqual :factoryUnitFinished:unit @poly
+  409 jump *label169 notEqual @mega @poly
   410 label *label168
   411 op add *tmp222 .polys 1
   412 set .polys *tmp222
   413 write *tmp222 .display ".polys"
   414 jump *label172 always
   415 label *label169
-    * jump *label171 notEqual :factoryUnitFinished:unit @mega
+  416 jump *label171 notEqual @mega @mega
   417 label *label170
   418 op add *tmp223 .megas 1
   419 set .megas *tmp223

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    83 control config A¾BFLW-air-factory13 @flare
    84 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    85 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit @flare
    86 label *label114
    87 label *label115
    88 sensor *tmp224 @flare @id
 
   178 control config A¾BFLW-air-factory13 @mono
   179 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   180 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit @mono
   181 label *label129
   182 label *label130
   183 sensor *tmp224 @mono @id
 
   256 write @poly .display ".nextUnit"
   257 sensor :backgroundProcess:recoProgress AÀF@L`-additive-reconstructor22 @progress
   258 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * set :factoryUnitFinished:unit @poly
   259 label *label144
   260 label *label145
   261 sensor *tmp224 @poly @id
 
   374 control config A©JFJd-unloader26 :backgroundProcess:c
   375 sensor :backgroundProcess:multiProgress AÁPBJf-multiplicative-reconstructor28 @progress
   376 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
-    * set :factoryUnitFinished:unit @mega
   377 label *label159
   378 label *label160
   379 sensor *tmp224 @mega @id

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-5 instructions):
 
    97 write *tmp231 .bank *tmp226
    98 label *label117
    99 label *label118
-    * jump *label120 notEqual @flare @flare
   100 label *label119
   101 op add *tmp220 .flares 1
   102 set .flares *tmp220
   103 write *tmp220 .display ".flares"
   104 jump *label127 always
   105 label *label120
-    * jump *label122 notEqual @flare @mono
+  106 jump *label122 always
   107 label *label121
   108 op add *tmp221 .monos 1
   109 set .monos *tmp221
   110 write *tmp221 .display ".monos"
   111 jump *label127 always
   112 label *label122
-    * jump *label124 notEqual @flare @poly
+  113 jump *label124 always
   114 label *label123
   115 op add *tmp222 .polys 1
   116 set .polys *tmp222
   117 write *tmp222 .display ".polys"
   118 jump *label127 always
   119 label *label124
-    * jump *label126 notEqual @flare @mega
+  120 jump *label126 always
   121 label *label125
   122 op add *tmp223 .megas 1
   123 set .megas *tmp223
 
   132 label *label27
   133 label *label28
   134 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 equal 0 false
+  135 jump *label30 always
   136 sensor *tmp92 .core @lead
   137 sensor *tmp95 A¾BFLW-air-factory13 @lead
   138 jump *label34 greaterThanEq *tmp95 0
 
   191 write *tmp231 .bank *tmp226
   192 label *label132
   193 label *label133
-    * jump *label135 notEqual @mono @flare
+  194 jump *label135 always
   195 label *label134
   196 op add *tmp220 .flares 1
   197 set .flares *tmp220
   198 write *tmp220 .display ".flares"
   199 jump *label142 always
   200 label *label135
-    * jump *label137 notEqual @mono @mono
   201 label *label136
   202 op add *tmp221 .monos 1
   203 set .monos *tmp221
   204 write *tmp221 .display ".monos"
   205 jump *label142 always
   206 label *label137
-    * jump *label139 notEqual @mono @poly
+  207 jump *label139 always
   208 label *label138
   209 op add *tmp222 .polys 1
   210 set .polys *tmp222
   211 write *tmp222 .display ".polys"
   212 jump *label142 always
   213 label *label139
-    * jump *label141 notEqual @mono @mega
+  214 jump *label141 always
   215 label *label140
   216 op add *tmp223 .megas 1
   217 set .megas *tmp223
 
   226 label *label51
   227 label *label52
   228 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label54 equal 15 false
   229 sensor *tmp136 .core @lead
   230 select *tmp138 greaterThan *tmp136 0 15 0
   231 sensor *tmp139 A¾BFLW-air-factory13 @lead
 
   267 write *tmp231 .bank *tmp226
   268 label *label147
   269 label *label148
-    * jump *label150 notEqual @poly @flare
+  270 jump *label150 always
   271 label *label149
   272 op add *tmp220 .flares 1
   273 set .flares *tmp220
   274 write *tmp220 .display ".flares"
   275 jump *label157 always
   276 label *label150
-    * jump *label152 notEqual @poly @mono
+  277 jump *label152 always
   278 label *label151
   279 op add *tmp221 .monos 1
   280 set .monos *tmp221
   281 write *tmp221 .display ".monos"
   282 jump *label157 always
   283 label *label152
-    * jump *label154 notEqual @poly @poly
   284 label *label153
   285 op add *tmp222 .polys 1
   286 set .polys *tmp222
   287 write *tmp222 .display ".polys"
   288 jump *label157 always
   289 label *label154
-    * jump *label156 notEqual @poly @mega
+  290 jump *label156 always
   291 label *label155
   292 op add *tmp223 .megas 1
   293 set .megas *tmp223
 
   384 write *tmp231 .bank *tmp226
   385 label *label162
   386 label *label163
-    * jump *label165 notEqual @mega @flare
+  387 jump *label165 always
   388 label *label164
   389 op add *tmp220 .flares 1
   390 set .flares *tmp220
   391 write *tmp220 .display ".flares"
   392 jump *label172 always
   393 label *label165
-    * jump *label167 notEqual @mega @mono
+  394 jump *label167 always
   395 label *label166
   396 op add *tmp221 .monos 1
   397 set .monos *tmp221
   398 write *tmp221 .display ".monos"
   399 jump *label172 always
   400 label *label167
-    * jump *label169 notEqual @mega @poly
+  401 jump *label169 always
   402 label *label168
   403 op add *tmp222 .polys 1
   404 set .polys *tmp222
   405 write *tmp222 .display ".polys"
   406 jump *label172 always
   407 label *label169
-    * jump *label171 notEqual @mega @mega
   408 label *label170
   409 op add *tmp223 .megas 1
   410 set .megas *tmp223

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    85 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    86 label *label114
    87 label *label115
-    * sensor *tmp224 @flare @id
+   88 set *tmp224 15
    89 op add :log:encodedId @blockCount *tmp224
    90 label *label116
    91 read *tmp32 .bank 511
 
   179 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   180 label *label129
   181 label *label130
-    * sensor *tmp224 @mono @id
+  182 set *tmp224 20
   183 op add :log:encodedId @blockCount *tmp224
   184 label *label131
   185 read *tmp32 .bank 511
 
   255 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   256 label *label144
   257 label *label145
-    * sensor *tmp224 @poly @id
+  258 set *tmp224 21
   259 op add :log:encodedId @blockCount *tmp224
   260 label *label146
   261 read *tmp32 .bank 511
 
   372 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   373 label *label159
   374 label *label160
-    * sensor *tmp224 @mega @id
+  375 set *tmp224 22
   376 op add :log:encodedId @blockCount *tmp224
   377 label *label161
   378 read *tmp32 .bank 511

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-12 instructions):
 
    86 label *label114
    87 label *label115
    88 set *tmp224 15
-    * op add :log:encodedId @blockCount *tmp224
+   89 op add :log:encodedId @blockCount 15
    90 label *label116
    91 read *tmp32 .bank 511
    92 op sub *tmp226 *tmp32 1
    93 write *tmp226 .bank 511
    94 read *tmp229 .timer "time"
    95 op mul *tmp230 *tmp229 1000
-    * op add *tmp231 :log:encodedId *tmp230
+   96 op add *tmp231 275 *tmp230
    97 write *tmp231 .bank *tmp226
    98 label *label117
    99 label *label118
 
   105 label *label120
   106 jump *label122 always
   107 label *label121
-    * op add *tmp221 .monos 1
   108 set .monos *tmp221
   109 write *tmp221 .display ".monos"
   110 jump *label127 always
   111 label *label122
   112 jump *label124 always
   113 label *label123
-    * op add *tmp222 .polys 1
   114 set .polys *tmp222
   115 write *tmp222 .display ".polys"
   116 jump *label127 always
   117 label *label124
   118 jump *label126 always
   119 label *label125
-    * op add *tmp223 .megas 1
   120 set .megas *tmp223
   121 write *tmp223 .display ".megas"
   122 label *label126
 
   177 label *label129
   178 label *label130
   179 set *tmp224 20
-    * op add :log:encodedId @blockCount *tmp224
+  180 op add :log:encodedId @blockCount 20
   181 label *label131
   182 read *tmp32 .bank 511
   183 op sub *tmp226 *tmp32 1
   184 write *tmp226 .bank 511
   185 read *tmp229 .timer "time"
   186 op mul *tmp230 *tmp229 1000
-    * op add *tmp231 :log:encodedId *tmp230
+  187 op add *tmp231 280 *tmp230
   188 write *tmp231 .bank *tmp226
   189 label *label132
   190 label *label133
   191 jump *label135 always
   192 label *label134
-    * op add *tmp220 .flares 1
   193 set .flares *tmp220
   194 write *tmp220 .display ".flares"
   195 jump *label142 always
 
   202 label *label137
   203 jump *label139 always
   204 label *label138
-    * op add *tmp222 .polys 1
   205 set .polys *tmp222
   206 write *tmp222 .display ".polys"
   207 jump *label142 always
   208 label *label139
   209 jump *label141 always
   210 label *label140
-    * op add *tmp223 .megas 1
   211 set .megas *tmp223
   212 write *tmp223 .display ".megas"
   213 label *label141
 
   250 label *label144
   251 label *label145
   252 set *tmp224 21
-    * op add :log:encodedId @blockCount *tmp224
+  253 op add :log:encodedId @blockCount 21
   254 label *label146
   255 read *tmp32 .bank 511
   256 op sub *tmp226 *tmp32 1
   257 write *tmp226 .bank 511
   258 read *tmp229 .timer "time"
   259 op mul *tmp230 *tmp229 1000
-    * op add *tmp231 :log:encodedId *tmp230
+  260 op add *tmp231 281 *tmp230
   261 write *tmp231 .bank *tmp226
   262 label *label147
   263 label *label148
   264 jump *label150 always
   265 label *label149
-    * op add *tmp220 .flares 1
   266 set .flares *tmp220
   267 write *tmp220 .display ".flares"
   268 jump *label157 always
   269 label *label150
   270 jump *label152 always
   271 label *label151
-    * op add *tmp221 .monos 1
   272 set .monos *tmp221
   273 write *tmp221 .display ".monos"
   274 jump *label157 always
 
   281 label *label154
   282 jump *label156 always
   283 label *label155
-    * op add *tmp223 .megas 1
   284 set .megas *tmp223
   285 write *tmp223 .display ".megas"
   286 label *label156
 
   364 label *label159
   365 label *label160
   366 set *tmp224 22
-    * op add :log:encodedId @blockCount *tmp224
+  367 op add :log:encodedId @blockCount 22
   368 label *label161
   369 read *tmp32 .bank 511
   370 op sub *tmp226 *tmp32 1
   371 write *tmp226 .bank 511
   372 read *tmp229 .timer "time"
   373 op mul *tmp230 *tmp229 1000
-    * op add *tmp231 :log:encodedId *tmp230
+  374 op add *tmp231 282 *tmp230
   375 write *tmp231 .bank *tmp226
   376 label *label162
   377 label *label163
   378 jump *label165 always
   379 label *label164
-    * op add *tmp220 .flares 1
   380 set .flares *tmp220
   381 write *tmp220 .display ".flares"
   382 jump *label172 always
   383 label *label165
   384 jump *label167 always
   385 label *label166
-    * op add *tmp221 .monos 1
   386 set .monos *tmp221
   387 write *tmp221 .display ".monos"
   388 jump *label172 always
   389 label *label167
   390 jump *label169 always
   391 label *label168
-    * op add *tmp222 .polys 1
   392 set .polys *tmp222
   393 write *tmp222 .display ".polys"
   394 jump *label172 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
    85 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    86 label *label114
    87 label *label115
-    * set *tmp224 15
-    * op add :log:encodedId @blockCount 15
    88 label *label116
    89 read *tmp32 .bank 511
    90 op sub *tmp226 *tmp32 1
 
   174 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   175 label *label129
   176 label *label130
-    * set *tmp224 20
-    * op add :log:encodedId @blockCount 20
   177 label *label131
   178 read *tmp32 .bank 511
   179 op sub *tmp226 *tmp32 1
 
   245 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   246 label *label144
   247 label *label145
-    * set *tmp224 21
-    * op add :log:encodedId @blockCount 21
   248 label *label146
   249 read *tmp32 .bank 511
   250 op sub *tmp226 *tmp32 1
 
   357 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   358 label *label159
   359 label *label160
-    * set *tmp224 22
-    * op add :log:encodedId @blockCount 22
   360 label *label161
   361 read *tmp32 .bank 511
   362 op sub *tmp226 *tmp32 1

Modifications by Iterated phase, If Expression Optimization, pass 2, iteration 1 (-2 instructions):
 
   336 control enabled A{HDJ_-inverted-sorter21 false
   337 label *label65
   338 jump *label80 equal AÁPBJf-multiplicative-reconstructor28 false
+  339 set :backgroundProcess:c @metaglass
   340 sensor *tmp199 AÁPBJf-multiplicative-reconstructor28 @metaglass
-    * jump *label82 greaterThanEq *tmp199 40
-    * set :backgroundProcess:c @metaglass
-    * jump *label83 always
+  341 jump *label83 lessThan *tmp199 40
   342 label *label82
+  343 set :backgroundProcess:c @titanium
   344 sensor *tmp202 AÁPBJf-multiplicative-reconstructor28 @titanium
-    * jump *label84 greaterThanEq *tmp202 80
-    * set :backgroundProcess:c @titanium
-    * jump *label85 always
+  345 jump *label85 lessThan *tmp202 80
   346 label *label84
   347 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
   348 select :backgroundProcess:c lessThan *tmp205 130 @silicon null

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    20 set .canConsume true
    21 set *signature "eb9ab5a008f372ac:v1"
    22 label *label9
-    * label *label11
    23 jump *label13 notEqual .finished false
    24 label *label108
    25 set :backgroundProcess:ticks @tick
 
    62 control config A©FJJU-unloader11 @coal
    63 jump *label18 always
    64 label *label19
-    * label *label20
    65 sensor *tmp70 AAKJ\-steam-generator18 @coal
    66 op mul *tmp71 5 AAKJ\-steam-generator18
    67 jump *label21 greaterThanEq *tmp70 *tmp71
    68 control config A©FJJU-unloader11 @coal
    69 jump *label18 always
    70 label *label21
-    * label *label22
    71 jump *label23 greaterThanEq :backgroundProcess:power 200
    72 control enabled A¾BFLW-air-factory13 false
    73 jump *label24 always
 
    75 jump *label25 lessThanEq :backgroundProcess:power 500
    76 control enabled A¾BFLW-air-factory13 true
    77 label *label25
-    * label *label26
    78 label *label24
    79 control config A¾BFLW-air-factory13 @flare
    80 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    81 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * label *label114
-    * label *label115
-    * label *label116
    82 read *tmp32 .bank 511
    83 op sub *tmp226 *tmp32 1
    84 write *tmp226 .bank 511
 
    86 op mul *tmp230 *tmp229 1000
    87 op add *tmp231 275 *tmp230
    88 write *tmp231 .bank *tmp226
-    * label *label117
-    * label *label118
-    * label *label119
    89 op add *tmp220 .flares 1
    90 set .flares *tmp220
    91 write *tmp220 .display ".flares"
    92 jump *label127 always
-    * label *label120
    93 jump *label122 always
-    * label *label121
    94 set .monos *tmp221
    95 write *tmp221 .display ".monos"
    96 jump *label127 always
    97 label *label122
    98 jump *label124 always
-    * label *label123
    99 set .polys *tmp222
   100 write *tmp222 .display ".polys"
   101 jump *label127 always
   102 label *label124
   103 jump *label126 always
-    * label *label125
   104 set .megas *tmp223
   105 write *tmp223 .display ".megas"
   106 label *label126
   107 label *label127
   108 write true .display ".unitReset"
-    * label *label128
   109 set .lastProgress 0
   110 control config A©FJJU-unloader11 @coal
   111 jump *label18 always
   112 label *label27
-    * label *label28
   113 set .lastProgress :handleAirFactory:factoryProgress
   114 jump *label30 always
   115 sensor *tmp92 .core @lead
 
   118 control config A©FJJU-unloader11 @lead
   119 jump *label18 always
   120 label *label34
-    * label *label35
   121 label *label30
-    * label *label31
   122 sensor *tmp100 .core @silicon
   123 select *tmp102 greaterThan *tmp100 0 15 0
   124 set *tmp103 A©FJJU-unloader11
 
   134 control config A©FJJU-unloader11 @coal
   135 jump *label42 always
   136 label *label43
-    * label *label44
   137 sensor *tmp114 AAKJ\-steam-generator18 @coal
   138 op mul *tmp115 5 AAKJ\-steam-generator18
   139 jump *label45 greaterThanEq *tmp114 *tmp115
   140 control config A©FJJU-unloader11 @coal
   141 jump *label42 always
   142 label *label45
-    * label *label46
   143 jump *label47 greaterThanEq :backgroundProcess:power 200
   144 control enabled A¾BFLW-air-factory13 false
   145 jump *label48 always
 
   147 jump *label49 lessThanEq :backgroundProcess:power 500
   148 control enabled A¾BFLW-air-factory13 true
   149 label *label49
-    * label *label50
   150 label *label48
   151 control config A¾BFLW-air-factory13 @mono
   152 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   153 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * label *label129
-    * label *label130
-    * label *label131
   154 read *tmp32 .bank 511
   155 op sub *tmp226 *tmp32 1
   156 write *tmp226 .bank 511
 
   158 op mul *tmp230 *tmp229 1000
   159 op add *tmp231 280 *tmp230
   160 write *tmp231 .bank *tmp226
-    * label *label132
-    * label *label133
   161 jump *label135 always
-    * label *label134
   162 set .flares *tmp220
   163 write *tmp220 .display ".flares"
   164 jump *label142 always
   165 label *label135
-    * label *label136
   166 op add *tmp221 .monos 1
   167 set .monos *tmp221
   168 write *tmp221 .display ".monos"
   169 jump *label142 always
-    * label *label137
   170 jump *label139 always
-    * label *label138
   171 set .polys *tmp222
   172 write *tmp222 .display ".polys"
   173 jump *label142 always
   174 label *label139
   175 jump *label141 always
-    * label *label140
   176 set .megas *tmp223
   177 write *tmp223 .display ".megas"
   178 label *label141
   179 label *label142
   180 write true .display ".unitReset"
-    * label *label143
   181 set .lastProgress 0
   182 control config A©FJJU-unloader11 @coal
   183 jump *label42 always
   184 label *label51
-    * label *label52
   185 set .lastProgress :handleAirFactory.1:factoryProgress
   186 sensor *tmp136 .core @lead
   187 select *tmp138 greaterThan *tmp136 0 15 0
 
   190 control config A©FJJU-unloader11 @lead
   191 jump *label42 always
   192 label *label58
-    * label *label59
-    * label *label54
-    * label *label55
   193 sensor *tmp144 .core @silicon
   194 select *tmp146 greaterThan *tmp144 0 30 0
   195 set *tmp147 A©FJJU-unloader11
 
   207 write @poly .display ".nextUnit"
   208 sensor :backgroundProcess:recoProgress AÀF@L`-additive-reconstructor22 @progress
   209 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * label *label144
-    * label *label145
-    * label *label146
   210 read *tmp32 .bank 511
   211 op sub *tmp226 *tmp32 1
   212 write *tmp226 .bank 511
 
   214 op mul *tmp230 *tmp229 1000
   215 op add *tmp231 281 *tmp230
   216 write *tmp231 .bank *tmp226
-    * label *label147
-    * label *label148
   217 jump *label150 always
-    * label *label149
   218 set .flares *tmp220
   219 write *tmp220 .display ".flares"
   220 jump *label157 always
   221 label *label150
   222 jump *label152 always
-    * label *label151
   223 set .monos *tmp221
   224 write *tmp221 .display ".monos"
   225 jump *label157 always
   226 label *label152
-    * label *label153
   227 op add *tmp222 .polys 1
   228 set .polys *tmp222
   229 write *tmp222 .display ".polys"
   230 jump *label157 always
-    * label *label154
   231 jump *label156 always
-    * label *label155
   232 set .megas *tmp223
   233 write *tmp223 .display ".megas"
   234 label *label156
   235 label *label157
   236 write true .display ".unitReset"
-    * label *label158
   237 set .recoEntered false
   238 set .lastRecoProgress 0
   239 jump *label67 always
 
   253 label *label73
   254 ucontrol move :backgroundProcess:x :backgroundProcess:y
   255 ucontrol payEnter
-    * label *label74
   256 sensor *tmp171 @unit @dead
   257 jump *label73 equal *tmp171 false
-    * label *label75
   258 op sub *tmp173 .monos 1
   259 set .monos *tmp173
   260 write *tmp173 .display ".monos"
   261 set .recoEntered true
   262 label *label71
-    * label *label72
   263 control enabled A{HDJ_-inverted-sorter21 false
   264 jump *label70 always
   265 label *label69
 
   289 set :backgroundProcess:c @metaglass
   290 sensor *tmp199 AÁPBJf-multiplicative-reconstructor28 @metaglass
   291 jump *label83 lessThan *tmp199 40
-    * label *label82
   292 set :backgroundProcess:c @titanium
   293 sensor *tmp202 AÁPBJf-multiplicative-reconstructor28 @titanium
   294 jump *label85 lessThan *tmp202 80
-    * label *label84
   295 sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silicon
   296 select :backgroundProcess:c lessThan *tmp205 130 @silicon null
   297 label *label85
 
   301 control config A©JFJd-unloader26 :backgroundProcess:c
   302 sensor :backgroundProcess:multiProgress AÁPBJf-multiplicative-reconstructor28 @progress
   303 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
-    * label *label159
-    * label *label160
-    * label *label161
   304 read *tmp32 .bank 511
   305 op sub *tmp226 *tmp32 1
   306 write *tmp226 .bank 511
 
   308 op mul *tmp230 *tmp229 1000
   309 op add *tmp231 282 *tmp230
   310 write *tmp231 .bank *tmp226
-    * label *label162
-    * label *label163
   311 jump *label165 always
-    * label *label164
   312 set .flares *tmp220
   313 write *tmp220 .display ".flares"
   314 jump *label172 always
   315 label *label165
   316 jump *label167 always
-    * label *label166
   317 set .monos *tmp221
   318 write *tmp221 .display ".monos"
   319 jump *label172 always
   320 label *label167
   321 jump *label169 always
-    * label *label168
   322 set .polys *tmp222
   323 write *tmp222 .display ".polys"
   324 jump *label172 always
   325 label *label169
-    * label *label170
   326 op add *tmp223 .megas 1
   327 set .megas *tmp223
   328 write *tmp223 .display ".megas"
-    * label *label171
   329 label *label172
   330 write true .display ".unitReset"
-    * label *label173
   331 set .lastMultiProgress 0
   332 jump *label89 always
   333 label *label88
   334 set .lastMultiProgress :backgroundProcess:multiProgress
   335 label *label89
   336 label *label80
-    * label *label81
   337 op sub .loopTicks @tick :backgroundProcess:ticks
-    * label *label12
   338 jump *label108 equal .finished false
   339 label *label13
-    * label *label10
   340 wait 1e12
   341 jump *label9 always
   342 end
 
   344 control config A©FJJU-unloader11 @coal
   345 control enabled A{HDJ_-inverted-sorter21 false
   346 set .canConsume false
-    * label *label106
   347 set :buildStart*finished true
   348 jump *label9 always
   349 end
   350 label *label1
   351 set .canConsume true
-    * label *label107
   352 set :buildStop*finished true
   353 jump *label9 always
   354 end

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    60 write @flare .display ".nextUnit"
    61 jump *label19 notEqual .canConsume false
    62 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+   63 jump *label17 always
    64 label *label19
    65 sensor *tmp70 AAKJ\-steam-generator18 @coal
    66 op mul *tmp71 5 AAKJ\-steam-generator18
    67 jump *label21 greaterThanEq *tmp70 *tmp71
    68 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+   69 jump *label17 always
    70 label *label21
    71 jump *label23 greaterThanEq :backgroundProcess:power 200
    72 control enabled A¾BFLW-air-factory13 false
 
    90 set .flares *tmp220
    91 write *tmp220 .display ".flares"
    92 jump *label127 always
-    * jump *label122 always
+   93 jump *label126 always
    94 set .monos *tmp221
    95 write *tmp221 .display ".monos"
    96 jump *label127 always
    97 label *label122
-    * jump *label124 always
+   98 jump *label126 always
    99 set .polys *tmp222
   100 write *tmp222 .display ".polys"
   101 jump *label127 always
 
   108 write true .display ".unitReset"
   109 set .lastProgress 0
   110 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+  111 jump *label17 always
   112 label *label27
   113 set .lastProgress :handleAirFactory:factoryProgress
   114 jump *label30 always
 
   116 sensor *tmp95 A¾BFLW-air-factory13 @lead
   117 jump *label34 greaterThanEq *tmp95 0
   118 control config A©FJJU-unloader11 @lead
-    * jump *label18 always
+  119 jump *label17 always
   120 label *label34
   121 label *label30
   122 sensor *tmp100 .core @silicon
 
   132 write @mono .display ".nextUnit"
   133 jump *label43 notEqual .canConsume false
   134 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  135 jump *label41 always
   136 label *label43
   137 sensor *tmp114 AAKJ\-steam-generator18 @coal
   138 op mul *tmp115 5 AAKJ\-steam-generator18
   139 jump *label45 greaterThanEq *tmp114 *tmp115
   140 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  141 jump *label41 always
   142 label *label45
   143 jump *label47 greaterThanEq :backgroundProcess:power 200
   144 control enabled A¾BFLW-air-factory13 false
 
   167 set .monos *tmp221
   168 write *tmp221 .display ".monos"
   169 jump *label142 always
-    * jump *label139 always
+  170 jump *label141 always
   171 set .polys *tmp222
   172 write *tmp222 .display ".polys"
   173 jump *label142 always
 
   180 write true .display ".unitReset"
   181 set .lastProgress 0
   182 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  183 jump *label41 always
   184 label *label51
   185 set .lastProgress :handleAirFactory.1:factoryProgress
   186 sensor *tmp136 .core @lead
 
   188 sensor *tmp139 A¾BFLW-air-factory13 @lead
   189 jump *label58 greaterThanEq *tmp139 *tmp138
   190 control config A©FJJU-unloader11 @lead
-    * jump *label42 always
+  191 jump *label41 always
   192 label *label58
   193 sensor *tmp144 .core @silicon
   194 select *tmp146 greaterThan *tmp144 0 30 0
 
   214 op mul *tmp230 *tmp229 1000
   215 op add *tmp231 281 *tmp230
   216 write *tmp231 .bank *tmp226
-    * jump *label150 always
+  217 jump *label152 always
   218 set .flares *tmp220
   219 write *tmp220 .display ".flares"
   220 jump *label157 always
 
   261 set .recoEntered true
   262 label *label71
   263 control enabled A{HDJ_-inverted-sorter21 false
-    * jump *label70 always
+  264 jump *label65 always
   265 label *label69
   266 op greaterThan *tmp176 :backgroundProcess:coreSilicon .siliconReserve
   267 op mul *tmp177 40 *tmp176
   268 jump *label76 greaterThanEq :backgroundProcess:s *tmp177
   269 control config A©HFJ^-unloader20 @silicon
   270 control enabled A{HDJ_-inverted-sorter21 .canConsume
-    * jump *label77 always
+  271 jump *label65 always
   272 label *label76
   273 op greaterThan *tmp185 :backgroundProcess:coreGraphite .graphiteReserve
   274 op mul *tmp186 40 *tmp185
   275 jump *label78 greaterThanEq :backgroundProcess:g *tmp186
   276 control config A©HFJ^-unloader20 @graphite
   277 control enabled A{HDJ_-inverted-sorter21 .canConsume
-    * jump *label79 always
+  278 jump *label65 always
   279 label *label78
   280 control enabled A{HDJ_-inverted-sorter21 false
   281 label *label79
 
   308 op mul *tmp230 *tmp229 1000
   309 op add *tmp231 282 *tmp230
   310 write *tmp231 .bank *tmp226
-    * jump *label165 always
+  311 jump *label169 always
   312 set .flares *tmp220
   313 write *tmp220 .display ".flares"
   314 jump *label172 always
   315 label *label165
-    * jump *label167 always
+  316 jump *label169 always
   317 set .monos *tmp221
   318 write *tmp221 .display ".monos"
   319 jump *label172 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-50 instructions):
 
    90 set .flares *tmp220
    91 write *tmp220 .display ".flares"
    92 jump *label127 always
-    * jump *label126 always
-    * set .monos *tmp221
-    * write *tmp221 .display ".monos"
-    * jump *label127 always
-    * label *label122
-    * jump *label126 always
-    * set .polys *tmp222
-    * write *tmp222 .display ".polys"
-    * jump *label127 always
-    * label *label124
-    * jump *label126 always
-    * set .megas *tmp223
-    * write *tmp223 .display ".megas"
-    * label *label126
    93 label *label127
    94 write true .display ".unitReset"
    95 set .lastProgress 0
 
    98 label *label27
    99 set .lastProgress :handleAirFactory:factoryProgress
   100 jump *label30 always
-    * sensor *tmp92 .core @lead
-    * sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp95 0
-    * control config A©FJJU-unloader11 @lead
-    * jump *label17 always
-    * label *label34
   101 label *label30
   102 sensor *tmp100 .core @silicon
   103 select *tmp102 greaterThan *tmp100 0 15 0
 
   105 sensor *tmp105 A¾BFLW-air-factory13 @silicon
   106 select *tmp107 lessThan *tmp105 *tmp102 @silicon @coal
   107 control config *tmp103 *tmp107
-    * label *label18
   108 jump *label17 always
   109 label *label16
   110 jump *label40 greaterThanEq .monos .monoTarget
 
   138 op add *tmp231 280 *tmp230
   139 write *tmp231 .bank *tmp226
   140 jump *label135 always
-    * set .flares *tmp220
-    * write *tmp220 .display ".flares"
-    * jump *label142 always
   141 label *label135
   142 op add *tmp221 .monos 1
   143 set .monos *tmp221
   144 write *tmp221 .display ".monos"
   145 jump *label142 always
-    * jump *label141 always
-    * set .polys *tmp222
-    * write *tmp222 .display ".polys"
-    * jump *label142 always
-    * label *label139
-    * jump *label141 always
-    * set .megas *tmp223
-    * write *tmp223 .display ".megas"
-    * label *label141
   146 label *label142
   147 write true .display ".unitReset"
   148 set .lastProgress 0
 
   163 sensor *tmp149 A¾BFLW-air-factory13 @silicon
   164 select *tmp151 lessThan *tmp149 *tmp146 @silicon @coal
   165 control config *tmp147 *tmp151
-    * label *label42
   166 jump *label41 always
   167 label *label40
   168 control config A¾BFLW-air-factory13 @flare
 
   181 op add *tmp231 281 *tmp230
   182 write *tmp231 .bank *tmp226
   183 jump *label152 always
-    * set .flares *tmp220
-    * write *tmp220 .display ".flares"
-    * jump *label157 always
-    * label *label150
-    * jump *label152 always
-    * set .monos *tmp221
-    * write *tmp221 .display ".monos"
-    * jump *label157 always
   184 label *label152
   185 op add *tmp222 .polys 1
   186 set .polys *tmp222
   187 write *tmp222 .display ".polys"
   188 jump *label157 always
-    * jump *label156 always
-    * set .megas *tmp223
-    * write *tmp223 .display ".megas"
-    * label *label156
   189 label *label157
   190 write true .display ".unitReset"
   191 set .recoEntered false
 
   232 jump *label65 always
   233 label *label78
   234 control enabled A{HDJ_-inverted-sorter21 false
-    * label *label79
-    * label *label77
-    * label *label70
   235 jump *label65 always
   236 label *label64
   237 control enabled A{HDJ_-inverted-sorter21 false
 
   260 op add *tmp231 282 *tmp230
   261 write *tmp231 .bank *tmp226
   262 jump *label169 always
-    * set .flares *tmp220
-    * write *tmp220 .display ".flares"
-    * jump *label172 always
-    * label *label165
-    * jump *label169 always
-    * set .monos *tmp221
-    * write *tmp221 .display ".monos"
-    * jump *label172 always
-    * label *label167
-    * jump *label169 always
-    * set .polys *tmp222
-    * write *tmp222 .display ".polys"
-    * jump *label172 always
   263 label *label169
   264 op add *tmp223 .megas 1
   265 set .megas *tmp223
 
   277 label *label13
   278 wait 1e12
   279 jump *label9 always
-    * end
   280 label *label0
   281 control config A©FJJU-unloader11 @coal
   282 control enabled A{HDJ_-inverted-sorter21 false
   283 set .canConsume false
   284 set :buildStart*finished true
   285 jump *label9 always
-    * end
   286 label *label1
   287 set .canConsume true
   288 set :buildStop*finished true
   289 jump *label9 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   264 op add *tmp223 .megas 1
   265 set .megas *tmp223
   266 write *tmp223 .display ".megas"
-    * label *label172
   267 write true .display ".unitReset"
   268 set .lastMultiProgress 0
   269 jump *label89 always

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-7 instructions):
 
    89 op add *tmp220 .flares 1
    90 set .flares *tmp220
    91 write *tmp220 .display ".flares"
-    * jump *label127 always
    92 label *label127
    93 write true .display ".unitReset"
    94 set .lastProgress 0
 
    96 jump *label17 always
    97 label *label27
    98 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 always
    99 label *label30
   100 sensor *tmp100 .core @silicon
   101 select *tmp102 greaterThan *tmp100 0 15 0
 
   135 op mul *tmp230 *tmp229 1000
   136 op add *tmp231 280 *tmp230
   137 write *tmp231 .bank *tmp226
-    * jump *label135 always
   138 label *label135
   139 op add *tmp221 .monos 1
   140 set .monos *tmp221
   141 write *tmp221 .display ".monos"
-    * jump *label142 always
   142 label *label142
   143 write true .display ".unitReset"
   144 set .lastProgress 0
 
   176 op mul *tmp230 *tmp229 1000
   177 op add *tmp231 281 *tmp230
   178 write *tmp231 .bank *tmp226
-    * jump *label152 always
   179 label *label152
   180 op add *tmp222 .polys 1
   181 set .polys *tmp222
   182 write *tmp222 .display ".polys"
-    * jump *label157 always
   183 label *label157
   184 write true .display ".unitReset"
   185 set .recoEntered false
 
   253 op mul *tmp230 *tmp229 1000
   254 op add *tmp231 282 *tmp230
   255 write *tmp231 .bank *tmp226
-    * jump *label169 always
   256 label *label169
   257 op add *tmp223 .megas 1
   258 set .megas *tmp223

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    89 op add *tmp220 .flares 1
    90 set .flares *tmp220
    91 write *tmp220 .display ".flares"
-    * label *label127
    92 write true .display ".unitReset"
    93 set .lastProgress 0
    94 control config A©FJJU-unloader11 @coal
    95 jump *label17 always
    96 label *label27
    97 set .lastProgress :handleAirFactory:factoryProgress
-    * label *label30
    98 sensor *tmp100 .core @silicon
    99 select *tmp102 greaterThan *tmp100 0 15 0
   100 set *tmp103 A©FJJU-unloader11
 
   133 op mul *tmp230 *tmp229 1000
   134 op add *tmp231 280 *tmp230
   135 write *tmp231 .bank *tmp226
-    * label *label135
   136 op add *tmp221 .monos 1
   137 set .monos *tmp221
   138 write *tmp221 .display ".monos"
-    * label *label142
   139 write true .display ".unitReset"
   140 set .lastProgress 0
   141 control config A©FJJU-unloader11 @coal
 
   172 op mul *tmp230 *tmp229 1000
   173 op add *tmp231 281 *tmp230
   174 write *tmp231 .bank *tmp226
-    * label *label152
   175 op add *tmp222 .polys 1
   176 set .polys *tmp222
   177 write *tmp222 .display ".polys"
-    * label *label157
   178 write true .display ".unitReset"
   179 set .recoEntered false
   180 set .lastRecoProgress 0
 
   247 op mul *tmp230 *tmp229 1000
   248 op add *tmp231 282 *tmp230
   249 write *tmp231 .bank *tmp226
-    * label *label169
   250 op add *tmp223 .megas 1
   251 set .megas *tmp223
   252 write *tmp223 .display ".megas"

Final code before resolving virtual instructions:

    0:  jump *label8 always 0 0                                      CoreController.mnd: #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
        label *label8                                                ...
    3:  set .finished false                                          CoreController.mnd: remote var
    4:  set .flares 0                                                ...
    5:  set .monos 0                                                 ...
    6:  set .polys 1                                                 ...
    7:  set .megas 0                                                 ...
    8:  set .pressTarget 20                                          ...
    9:  set .smelterTarget 20                                        ...
   10:  set .kilnTarget 20                                           ...
   11:  set .flareTarget 0                                           ...
   12:  set .monoTarget 0                                            ...
   13:  set .polyTarget 0                                            ...
   14:  set .megaTarget 0                                            ...
   15:  set .lastProgress 0                                          CoreController.mnd: volatile var lastProgress = 0, lastRecoProgress = 0, lastMultiProgress = 0;
   16:  set .lastRecoProgress 0                                      ...
   17:  set .lastMultiProgress 0                                     ...
   18:  set .recoEntered false                                       CoreController.mnd: volatile var recoEntered = false;
   19:  set .canConsume true                                         CoreController.mnd: volatile var canConsume = true;
   20:  set *signature "eb9ab5a008f372ac:v1"                         CoreController.mnd: #set target = 8;
        label *label9                                                ...
   21:  jump *label13 notEqual .finished false                       CoreController.mnd: while !finished do
        label *label108                                              ...
   22:  set :backgroundProcess:ticks @tick                           CoreController.mnd: var ticks = @tick;
   23:  sensor :backgroundProcess:coreSilicon .core @silicon         CoreController.mnd: var coreSilicon = core.@silicon;
   24:  sensor :backgroundProcess:coreGraphite .core @graphite       CoreController.mnd: var coreGraphite = core.@graphite;
   25:  set *tmp36 ALSIJa-silicon-smelter23                          CoreController.mnd: smelter2.enabled = smelter.enabled = coreSilicon < smelterTarget;
   26:  set *tmp38 ALMQJN-silicon-smelter4                           ...
   27:  op lessThan *tmp40 :backgroundProcess:coreSilicon .smelterTa ...
   28:  control enabled *tmp38 *tmp40 0 0 0                          ...
   29:  control enabled *tmp36 *tmp40 0 0 0                          ...
   30:  set *tmp41 AJEMJJ-graphite-press0                            CoreController.mnd: press.enabled = !multipress and coreGraphite < pressTarget;
   31:  op equal *tmp43 AKFRJ]-multi-press19 false                   ...
   32:  op lessThan *tmp44 :backgroundProcess:coreGraphite .pressTar ...
   33:  op land *tmp45 *tmp43 *tmp44                                 ...
   34:  control enabled *tmp41 *tmp45 0 0 0                          ...
   35:  set *tmp46 AKFRJ]-multi-press19                              CoreController.mnd: multipress.enabled = coreGraphite < pressTarget;
   36:  op lessThan *tmp48 :backgroundProcess:coreGraphite .pressTar ...
   37:  control enabled *tmp46 *tmp48 0 0 0                          ...
   38:  set *tmp49 ANOMJZ-kiln16                                     CoreController.mnd: kiln.enabled = core.@metaglass < kilnTarget;
   39:  sensor *tmp51 .core @metaglass                               ...
   40:  op lessThan *tmp52 *tmp51 .kilnTarget                        ...
   41:  control enabled *tmp49 *tmp52 0 0 0                          ...
   42:  sensor :backgroundProcess:power AJTJK-battery1 @totalPower  CoreController.mnd: var power = battery1.@totalPower;
   43:  jump *label14 equal AAKJ\-steam-generator18 false           CoreController.mnd: if steam_gen then
   44:  set *tmp55 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 10;
   45:  op lessThan *tmp57 :backgroundProcess:power 10               ...
   46:  control enabled *tmp55 *tmp57 0 0 0                          ...
   47:  set *tmp58 AAKJ\-steam-generator18                          CoreController.mnd: steam_gen.enabled = power < 3800;
   48:  op lessThan *tmp60 :backgroundProcess:power 3800             ...
   49:  control enabled *tmp58 *tmp60 0 0 0                          ...
   50:  jump *label15 always 0 0                                     CoreController.mnd: if steam_gen then
        label *label14                                               ...
   51:  set *tmp61 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 800;
   52:  op lessThan *tmp63 :backgroundProcess:power 800              ...
   53:  control enabled *tmp61 *tmp63 0 0 0                          ...
        label *label15                                               CoreController.mnd: if steam_gen then
   54:  jump *label16 greaterThanEq .flares .flareTarget             CoreController.mnd: if flares < flareTarget then
   55:  write @flare .display ".nextUnit"                            CoreController.mnd: display.nextUnit = @flare;
   56:  jump *label19 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
   57:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   58:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label19                                               CoreController.mnd: if !canConsume then
   59:  sensor *tmp70 AAKJ\-steam-generator18 @coal                 CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   60:  op mul *tmp71 5 AAKJ\-steam-generator18                     ...
   61:  jump *label21 greaterThanEq *tmp70 *tmp71                    ...
   62:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   63:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label21                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   64:  jump *label23 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
   65:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
   66:  jump *label24 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label23                                               ...
   67:  jump *label25 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
   68:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label25                                               CoreController.mnd: elsif power > 500 then
        label *label24                                               CoreController.mnd: if power < 200 then
   69:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = unit;
   70:  sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory1 CoreController.mnd: var factoryProgress = air_factory.@progress;
   71:  jump *label27 lessThanEq .lastProgress :handleAirFactory:fac CoreController.mnd: if lastProgress > factoryProgress then
   72:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
   73:  op sub *tmp226 *tmp32 1                                      ...
   74:  write *tmp226 .bank 511                                      ...
   75:  read *tmp229 .timer "time"                                   ...
   76:  op mul *tmp230 *tmp229 1000                                  ...
   77:  op add *tmp231 275 *tmp230                                   ...
   78:  write *tmp231 .bank *tmp226                                  ...
   79:  op add *tmp220 .flares 1                                     CoreController.mnd: when @flare then display.flares = ++flares;
   80:  set .flares *tmp220                                          ...
   81:  write *tmp220 .display ".flares"                             ...
   82:  write true .display ".unitReset"                             CoreController.mnd: display.unitReset = true;
   83:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
   84:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   85:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label27                                               CoreController.mnd: if lastProgress > factoryProgress then
   86:  set .lastProgress :handleAirFactory:factoryProgress          CoreController.mnd: lastProgress = factoryProgress;
   87:  sensor *tmp100 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
   88:  select *tmp102 greaterThan *tmp100 0 15 0                    ...
   89:  set *tmp103 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
   90:  sensor *tmp105 A¾BFLW-air-factory13 @silicon                 ...
   91:  select *tmp107 lessThan *tmp105 *tmp102 @silicon @coal       ...
   92:  control config *tmp103 *tmp107 0 0 0                         ...
   93:  jump *label17 always 0 0                                     CoreController.mnd: if flares < flareTarget then
        label *label16                                               ...
   94:  jump *label40 greaterThanEq .monos .monoTarget               CoreController.mnd: elsif monos < monoTarget then
   95:  write @mono .display ".nextUnit"                             CoreController.mnd: display.nextUnit = @mono;
   96:  jump *label43 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
   97:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   98:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label43                                               CoreController.mnd: if !canConsume then
   99:  sensor *tmp114 AAKJ\-steam-generator18 @coal                CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  100:  op mul *tmp115 5 AAKJ\-steam-generator18                    ...
  101:  jump *label45 greaterThanEq *tmp114 *tmp115                  ...
  102:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  103:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label45                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  104:  jump *label47 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
  105:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  106:  jump *label48 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label47                                               ...
  107:  jump *label49 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
  108:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label49                                               CoreController.mnd: elsif power > 500 then
        label *label48                                               CoreController.mnd: if power < 200 then
  109:  control config A¾BFLW-air-factory13 @mono 0 0 0              CoreController.mnd: air_factory.config = unit;
  110:  sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factor CoreController.mnd: var factoryProgress = air_factory.@progress;
  111:  jump *label51 lessThanEq .lastProgress :handleAirFactory.1:f CoreController.mnd: if lastProgress > factoryProgress then
  112:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  113:  op sub *tmp226 *tmp32 1                                      ...
  114:  write *tmp226 .bank 511                                      ...
  115:  read *tmp229 .timer "time"                                   ...
  116:  op mul *tmp230 *tmp229 1000                                  ...
  117:  op add *tmp231 280 *tmp230                                   ...
  118:  write *tmp231 .bank *tmp226                                  ...
  119:  op add *tmp221 .monos 1                                      CoreController.mnd: when @mono  then display.monos = ++monos;
  120:  set .monos *tmp221                                           ...
  121:  write *tmp221 .display ".monos"                              ...
  122:  write true .display ".unitReset"                             CoreController.mnd: display.unitReset = true;
  123:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
  124:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  125:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label51                                               CoreController.mnd: if lastProgress > factoryProgress then
  126:  set .lastProgress :handleAirFactory.1:factoryProgress        CoreController.mnd: lastProgress = factoryProgress;
  127:  sensor *tmp136 .core @lead                                   CoreController.mnd: var leadLimit = core.@lead > 0 ? lead : 0;
  128:  select *tmp138 greaterThan *tmp136 0 15 0                    ...
  129:  sensor *tmp139 A¾BFLW-air-factory13 @lead                    CoreController.mnd: if air_factory.@lead < leadLimit then
  130:  jump *label58 greaterThanEq *tmp139 *tmp138                  ...
  131:  control config A©FJJU-unloader11 @lead 0 0 0                 CoreController.mnd: unloader2.config = @lead;
  132:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label58                                               CoreController.mnd: if air_factory.@lead < leadLimit then
  133:  sensor *tmp144 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
  134:  select *tmp146 greaterThan *tmp144 0 30 0                    ...
  135:  set *tmp147 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
  136:  sensor *tmp149 A¾BFLW-air-factory13 @silicon                 ...
  137:  select *tmp151 lessThan *tmp149 *tmp146 @silicon @coal       ...
  138:  control config *tmp147 *tmp151 0 0 0                         ...
  139:  jump *label41 always 0 0                                     CoreController.mnd: elsif monos < monoTarget then
        label *label40                                               ...
  140:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = @flare;
  141:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
        label *label41                                               CoreController.mnd: elsif monos < monoTarget then
        label *label17                                               CoreController.mnd: if flares < flareTarget then
  142:  jump *label64 greaterThanEq .polys .polyTarget               CoreController.mnd: if polys < polyTarget then
  143:  write @poly .display ".nextUnit"                             CoreController.mnd: display.nextUnit = @poly;
  144:  sensor :backgroundProcess:recoProgress AÀF@L`-additive-recon CoreController.mnd: var recoProgress = additive_rec.@progress;
  145:  jump *label66 lessThanEq .lastRecoProgress :backgroundProces CoreController.mnd: if lastRecoProgress > recoProgress then
  146:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  147:  op sub *tmp226 *tmp32 1                                      ...
  148:  write *tmp226 .bank 511                                      ...
  149:  read *tmp229 .timer "time"                                   ...
  150:  op mul *tmp230 *tmp229 1000                                  ...
  151:  op add *tmp231 281 *tmp230                                   ...
  152:  write *tmp231 .bank *tmp226                                  ...
  153:  op add *tmp222 .polys 1                                      CoreController.mnd: when @poly  then display.polys = ++polys;
  154:  set .polys *tmp222                                           ...
  155:  write *tmp222 .display ".polys"                              ...
  156:  write true .display ".unitReset"                             CoreController.mnd: display.unitReset = true;
  157:  set .recoEntered false                                       CoreController.mnd: recoEntered = false;
  158:  set .lastRecoProgress 0                                      CoreController.mnd: lastRecoProgress = 0;
  159:  jump *label67 always 0 0                                     CoreController.mnd: if lastRecoProgress > recoProgress then
        label *label66                                               ...
  160:  set .lastRecoProgress :backgroundProcess:recoProgress        CoreController.mnd: lastRecoProgress = recoProgress;
        label *label67                                               CoreController.mnd: if lastRecoProgress > recoProgress then
  161:  sensor :backgroundProcess:s AÀF@L`-additive-reconstructor22  CoreController.mnd: var s = additive_rec.@silicon;
  162:  sensor :backgroundProcess:g AÀF@L`-additive-reconstructor22  CoreController.mnd: var g = additive_rec.@graphite;
  163:  op greaterThanEq *tmp163 :backgroundProcess:s 40             CoreController.mnd: if s >= 40 and g >= 40 then
  164:  op greaterThanEq *tmp164 :backgroundProcess:g 40             ...
  165:  op land *tmp165 *tmp163 *tmp164                              ...
  166:  jump *label69 equal *tmp165 false                            ...
  167:  jump *label71 notEqual .recoEntered false                    CoreController.mnd: if not recoEntered then
  168:  sensor :backgroundProcess:x AÀF@L`-additive-reconstructor22  CoreController.mnd: var x = additive_rec.@x;
  169:  sensor :backgroundProcess:y AÀF@L`-additive-reconstructor22  CoreController.mnd: var y = additive_rec.@y;
  170:  ubind @mono                                                  CoreController.mnd: ubind(@mono);
        label *label73                                               CoreController.mnd: do
  171:  ucontrol move :backgroundProcess:x :backgroundProcess:y 0 0  CoreController.mnd: move(x, y);
  172:  ucontrol payEnter 0 0 0 0 0                                  CoreController.mnd: payEnter();
  173:  sensor *tmp171 @unit @dead                                   CoreController.mnd: while !@unit.@dead;
  174:  jump *label73 equal *tmp171 false                            CoreController.mnd: do
  175:  op sub *tmp173 .monos 1                                      CoreController.mnd: display.monos = --monos;
  176:  set .monos *tmp173                                           ...
  177:  write *tmp173 .display ".monos"                              ...
  178:  set .recoEntered true                                        CoreController.mnd: recoEntered = true;
        label *label71                                               CoreController.mnd: if not recoEntered then
  179:  control enabled A{HDJ_-inverted-sorter21 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  180:  jump *label65 always 0 0                                     CoreController.mnd: if s >= 40 and g >= 40 then
        label *label69                                               ...
  181:  op greaterThan *tmp176 :backgroundProcess:coreSilicon .silic CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
  182:  op mul *tmp177 40 *tmp176                                    ...
  183:  jump *label76 greaterThanEq :backgroundProcess:s *tmp177     ...
  184:  control config A©HFJ^-unloader20 @silicon 0 0 0              CoreController.mnd: unloader4.config = @silicon;
  185:  control enabled A{HDJ_-inverted-sorter21 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  186:  jump *label65 always 0 0                                     CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
        label *label76                                               ...
  187:  op greaterThan *tmp185 :backgroundProcess:coreGraphite .grap CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
  188:  op mul *tmp186 40 *tmp185                                    ...
  189:  jump *label78 greaterThanEq :backgroundProcess:g *tmp186     ...
  190:  control config A©HFJ^-unloader20 @graphite 0 0 0             CoreController.mnd: unloader4.config = @graphite;
  191:  control enabled A{HDJ_-inverted-sorter21 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  192:  jump *label65 always 0 0                                     CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
        label *label78                                               ...
  193:  control enabled A{HDJ_-inverted-sorter21 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  194:  jump *label65 always 0 0                                     CoreController.mnd: if polys < polyTarget then
        label *label64                                               ...
  195:  control enabled A{HDJ_-inverted-sorter21 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
        label *label65                                               CoreController.mnd: if polys < polyTarget then
  196:  jump *label80 equal AÁPBJf-multiplicative-reconstructor28 fa CoreController.mnd: if multiplicative_rec then
  197:  set :backgroundProcess:c @metaglass                          CoreController.mnd: c = @metaglass;
  198:  sensor *tmp199 AÁPBJf-multiplicative-reconstructor28 @metagl CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  199:  jump *label83 lessThan *tmp199 40                            ...
  200:  set :backgroundProcess:c @titanium                           CoreController.mnd: c = @titanium;
  201:  sensor *tmp202 AÁPBJf-multiplicative-reconstructor28 @titani CoreController.mnd: elsif multiplicative_rec.@titanium < 80 then
  202:  jump *label85 lessThan *tmp202 80                            ...
  203:  sensor *tmp205 AÁPBJf-multiplicative-reconstructor28 @silico CoreController.mnd: elsif multiplicative_rec.@silicon < 130 then
  204:  select :backgroundProcess:c lessThan *tmp205 130 @silicon nu ...
        label *label85                                               CoreController.mnd: elsif multiplicative_rec.@titanium < 80 then
        label *label83                                               CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  205:  control config A©NHJX-unloader14 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader3.config = c;
  206:  control config A©HFJ^-unloader20 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader4.config = c;
  207:  control config A©JFJd-unloader26 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader5.config = c;
  208:  sensor :backgroundProcess:multiProgress AÁPBJf-multiplicativ CoreController.mnd: var multiProgress = multiplicative_rec.@progress;
  209:  jump *label88 lessThanEq .lastMultiProgress :backgroundProce CoreController.mnd: if lastMultiProgress > multiProgress then
  210:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  211:  op sub *tmp226 *tmp32 1                                      ...
  212:  write *tmp226 .bank 511                                      ...
  213:  read *tmp229 .timer "time"                                   ...
  214:  op mul *tmp230 *tmp229 1000                                  ...
  215:  op add *tmp231 282 *tmp230                                   ...
  216:  write *tmp231 .bank *tmp226                                  ...
  217:  op add *tmp223 .megas 1                                      CoreController.mnd: when @mega  then display.megas = ++megas;
  218:  set .megas *tmp223                                           ...
  219:  write *tmp223 .display ".megas"                              ...
  220:  write true .display ".unitReset"                             CoreController.mnd: display.unitReset = true;
  221:  set .lastMultiProgress 0                                     CoreController.mnd: lastMultiProgress = 0;
  222:  jump *label89 always 0 0                                     CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label88                                               ...
  223:  set .lastMultiProgress :backgroundProcess:multiProgress      CoreController.mnd: lastMultiProgress = multiProgress;
        label *label89                                               CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label80                                               CoreController.mnd: if multiplicative_rec then
  224:  op sub .loopTicks @tick :backgroundProcess:ticks             CoreController.mnd: loopTicks = @tick - ticks;
  225:  jump *label108 equal .finished false                         CoreController.mnd: while !finished do
        label *label13                                               ...
  226:  wait 1e12                                                    CoreController.mnd: #set target = 8;
  227:  jump *label9 always 0 0                                      ...
        label *label0                                                CoreController.mnd: remote void buildStart()
  228:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  229:  control enabled A{HDJ_-inverted-sorter21 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  230:  set .canConsume false                                        CoreController.mnd: canConsume = false;
  231:  set :buildStart*finished true                                CoreController.mnd: remote void buildStart()
  232:  jump *label9 always 0 0                                      ...
        label *label1                                                CoreController.mnd: remote void buildStop()
  233:  set .canConsume true                                         CoreController.mnd: canConsume = true;
  234:  set :buildStop*finished true                                 CoreController.mnd: remote void buildStop()
  235:  jump *label9 always 0 0                                      ...


Performance: parsed in 622 ms, compiled in 377 ms, optimized in 866 ms, run in 33 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (22 steps):
The program didn't generate any output.
Execution exception at instruction 23: sensor :backgroundProcess:coreSilicon .core @silicon:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
