  1414 instructions before optimizations.
    51 instructions eliminated by Temp Variables Elimination (3 passes, 8 iterations).
     1 instructions eliminated by Case Expression Optimization.
   137 instructions eliminated by Dead Code Elimination (11 iterations).
    64 instructions eliminated by Jump Optimization (6 iterations).
    56 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     8 instructions eliminated by Expression Optimization (2 passes, 4 iterations).
    12 instructions eliminated by If Expression Optimization (5 iterations).
   175 instructions eliminated by Data Flow Optimization (26 passes, 85 iterations).
     1 loops improved by Loop Hoisting.
     8 instructions added by Loop Optimization (4 iterations).
     6 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (37 iterations).
     1 loops unrolled by Loop Unrolling.
    85 instructions added by Function Inlining (37 iterations).
    52 function calls inlined by Function Inlining.
     7 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    28 instructions updated by Jump Threading.
     1 calls threaded by Jump Threading.
    25 instructions eliminated by Unreachable Code Elimination (2 iterations).
   969 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
  ! Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
  ! Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
  ! Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
  * Unroll iteration loop at BuilderController.mnd:203:5         size   -13, benefit       94.5, efficiency   Infinity (-10 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit      482.8, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +147, benefit       28.0, efficiency      0.190
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.5, efficiency      0.083
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.5, efficiency      4.345
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:156:5          size    +0, benefit      231.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:151:5          size    +0, benefit      115.7, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:61:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:69:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:77:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:83:25          size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:88:21          size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:100:17         size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:104:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
  ! Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:115:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:122:17         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:125:17         size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:128:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:135:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:145:9          size    +0, benefit       57.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +74, benefit        8.0, efficiency      0.108
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +74, benefit        8.0, efficiency      0.108
  ! Inline function call at BuilderController.mnd:258:5          size   +74, benefit       12.0, efficiency      0.162
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
  ! Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
  ! Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
  ! Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit      482.8, efficiency   Infinity (-33 instructions)
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.5, efficiency      0.083
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.5, efficiency      4.345
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:156:5          size    +0, benefit      231.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:151:5          size    +0, benefit      115.7, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:61:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:69:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:77:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:83:25          size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:88:21          size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:100:17         size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:104:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
  ! Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:115:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:122:17         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:125:17         size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:128:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:135:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:145:9          size    +0, benefit       57.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 28):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
    Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
    Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.5, efficiency      0.083
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.5, efficiency      4.345
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
  ! Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +180, benefit      262.5, efficiency      1.458
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
  * Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit      573.4, efficiency     13.986
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +21, benefit      209.7, efficiency      9.988
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +21, benefit      330.6, efficiency     15.744
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +21, benefit       33.1, efficiency      1.574
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 44):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity (-6 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit      573.4, efficiency     13.986
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +3, benefit      236.0, efficiency     78.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +21, benefit      209.7, efficiency      9.988
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +21, benefit      330.6, efficiency     15.744
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +21, benefit       33.1, efficiency      1.574
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 50):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity (-5 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +3, benefit      236.0, efficiency     78.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 55):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity (-4 instructions)
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 59):
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055 (+1 instructions)
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
    Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 58):
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 57):
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962 (+1 instructions)
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
  * Replicate loop condition at BuilderController.mnd:427:9      size    +1, benefit      625.0, efficiency    625.000 (+1 instructions)
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit      573.4, efficiency     11.703
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +25, benefit      209.7, efficiency      8.390
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +25, benefit      330.6, efficiency     13.225
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +25, benefit       33.1, efficiency      1.323
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 55):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit      573.4, efficiency     11.703
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +25, benefit      209.7, efficiency      8.390
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +25, benefit      330.6, efficiency     13.225
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +25, benefit       33.1, efficiency      1.323
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 57):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit      573.4, efficiency    573.428 (-7 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 64):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  * Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519 (+8 instructions)
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:167:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:390:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:435:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:440:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +379, benefit     8437.5, efficiency     22.263
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:167:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  * Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672 (+1 instructions)
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:435:23         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:436:23         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:437:23         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:440:29         size   +95, benefit      937.5, efficiency      9.868
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 55):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     1129.3, efficiency    225.864 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:167:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 62):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
  * Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977 (-2 instructions)
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 64):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit      323.1, efficiency     64.627
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
  * Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245 (-2 instructions)
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:146:9          size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 66):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
  * Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:146:9          size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
  * Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 60):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  * Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620 (+35 instructions)
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
    Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 25):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit      236.0, efficiency      1.584
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit      393.8, efficiency     11.250
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit        3.5, efficiency      0.046
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit      182.5, efficiency      2.433
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  * Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981 (-2 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit       50.0, efficiency      0.666
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 27):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.7, efficiency     40.682
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561 (-3 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit      236.0, efficiency      1.584
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit      393.8, efficiency     11.250
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit        3.5, efficiency      0.046
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit      182.5, efficiency      2.433
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit       50.0, efficiency      0.666
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +210, benefit      262.5, efficiency      1.250
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 30):
  * Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit       87.5, efficiency     43.750 (+2 instructions)
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.7, efficiency     40.682
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit      236.0, efficiency      1.522
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit      393.8, efficiency     11.250
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit        3.5, efficiency      0.045
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit      182.5, efficiency      2.340
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit       50.0, efficiency      0.641
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +213, benefit      262.5, efficiency      1.232
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BuilderController.mnd:245:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:258:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 28):
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.7, efficiency     40.682 (-9 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit      236.0, efficiency      1.522
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit      656.3, efficiency      9.243
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit        3.5, efficiency      0.045
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit      182.5, efficiency      2.340
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit       50.0, efficiency      0.641
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +213, benefit      262.5, efficiency      1.232
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BuilderController.mnd:245:5          size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:258:5          size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 37):
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483 (-4 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit      236.0, efficiency      1.522
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit      656.3, efficiency      9.243
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit        3.5, efficiency      0.045
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit      182.5, efficiency      2.340
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit       50.0, efficiency      0.641
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BuilderController.mnd:245:5          size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:258:5          size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 41):
  * Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit       43.8, efficiency     21.875 (+2 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +157, benefit      236.0, efficiency      1.503
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit      656.3, efficiency      9.243
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BuilderController.mnd:245:5          size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:258:5          size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 39):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +157, benefit      236.0, efficiency      1.503
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
  * Inline function call at BuilderController.mnd:152:5          size    +7, benefit      115.7, efficiency     16.531 (+6 instructions)
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +213, benefit      131.3, efficiency      0.616
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:258:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 33):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +236, benefit      384.7, efficiency      1.630
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  * Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776 (+21 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:258:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 12):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +236, benefit      384.7, efficiency      1.630
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +135, benefit       28.0, efficiency      0.207
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  * Inline function call at BuilderController.mnd:161:17         size   +11, benefit       33.1, efficiency      3.006 (+10 instructions)
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:258:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 2):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +315, benefit      403.3, efficiency      1.280
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +457, benefit      396.8, efficiency      0.868
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +135, benefit       28.0, efficiency      0.207
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +229, benefit      262.5, efficiency      1.146
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +229, benefit      131.3, efficiency      0.573
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:258:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:259:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:357:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:361:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:396:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:434:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:435:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:440:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:452:5          size  +229, benefit        3.0, efficiency      0.013

Pass 2: speed optimization selection (cost limit 19):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +315, benefit      403.3, efficiency      1.280
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +451, benefit      396.8, efficiency      0.880
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  * Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066 (+6 instructions)
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +226, benefit      262.5, efficiency      1.162
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +226, benefit      131.3, efficiency      0.581
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +67, benefit        8.0, efficiency      0.119
    Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:258:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +23, benefit        4.8, efficiency      0.207
    Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:435:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:440:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:452:5          size  +226, benefit        3.0, efficiency      0.013

Pass 2: speed optimization selection (cost limit 13):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +394, benefit      421.9, efficiency      1.071
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit       11.8, efficiency      0.346
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +463, benefit      396.8, efficiency      0.857
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  * Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503 (+10 instructions)
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +232, benefit      262.5, efficiency      1.131
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +232, benefit      131.3, efficiency      0.566
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:258:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:435:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:440:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:452:5          size  +232, benefit        3.0, efficiency      0.013

Pass 2: speed optimization selection (cost limit 3):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +473, benefit      431.2, efficiency      0.912
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit       11.8, efficiency      0.346
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +483, benefit      396.8, efficiency      0.821
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +242, benefit      262.5, efficiency      1.085
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +242, benefit      131.3, efficiency      0.542
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:258:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:435:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:440:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:452:5          size  +242, benefit        3.0, efficiency      0.012

Pass 3: speed optimization selection (cost limit 7):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +473, benefit      431.2, efficiency      0.912
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit       11.8, efficiency      0.346
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +483, benefit      396.8, efficiency      0.821
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  * Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517 (+6 instructions)
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +242, benefit      262.5, efficiency      1.085
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +242, benefit      131.3, efficiency      0.542
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:258:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:435:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:440:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:452:5          size  +242, benefit        3.0, efficiency      0.012

Pass 3: speed optimization selection (cost limit 1):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        8.1, efficiency      0.301
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +495, benefit      396.8, efficiency      0.802
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +248, benefit      262.5, efficiency      1.058
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +248, benefit      131.3, efficiency      0.529
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:258:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:435:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:440:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:452:5          size  +248, benefit        3.0, efficiency      0.012

Pass 4: speed optimization selection (cost limit 1):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        8.1, efficiency      0.301
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:175:1 size  +495, benefit      396.8, efficiency      0.802
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:200:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.5, efficiency      0.044
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.5, efficiency      2.310
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:233:9          size  +248, benefit      262.5, efficiency      1.058
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:239:13         size  +248, benefit      131.3, efficiency      0.529
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:245:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:250:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:251:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:258:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:259:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:267:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:268:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:276:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:277:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:357:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:361:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:396:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:434:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:435:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:440:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:452:5          size  +248, benefit        3.0, efficiency      0.012

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1487 jump *label341 always
  1488 set *tmp377 null
  1489 label *label341
-    * set *tmp380 *tmp377
-    * jump *label343 equal *tmp380 @ore-titanium
+ 1490 jump *label343 equal *tmp377 @ore-titanium
  1491 jump *label342 always
  1492 label *label343
  1493 set *tmp381 :titaniumDrillScore:positive
 
  1495 set *tmp376 *tmp381
  1496 jump *label340 always
  1497 label *label342
-    * jump *label345 equal *tmp380 @ore-copper
-    * jump *label345 equal *tmp380 @ore-lead
-    * jump *label345 equal *tmp380 @ore-scrap
-    * jump *label345 equal *tmp380 @ore-coal
+ 1498 jump *label345 equal *tmp377 @ore-copper
+ 1499 jump *label345 equal *tmp377 @ore-lead
+ 1500 jump *label345 equal *tmp377 @ore-scrap
+ 1501 jump *label345 equal *tmp377 @ore-coal
  1502 jump *label344 always
  1503 label *label345
  1504 set *tmp382 :titaniumDrillScore:negative

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-78 instructions):
 
   101 op notEqual *tmp109 *tmp108 null
   102 jump *label70 equal *tmp109 false
   103 ucontrol itemDrop @air 1000
-    * set *tmp110 null
   104 jump *label71 always
   105 label *label70
-    * set *tmp110 null
   106 label *label71
   107 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   108 label *label68
 
   161 op greaterThan *tmp124 *tmp122 *tmp123
   162 jump *label83 notEqual *tmp124 false
   163 label *label85
-    * set *tmp119 null
   164 jump *label81 always
   165 label *label80
   166 label *label86
 
   171 label *label87
   172 jump *label86 always
   173 label *label88
-    * set *tmp119 null
   174 label *label81
   175 set :transportStatus:target 0
   176 set :transportStatus:item null
 
   188 setaddr :error*retaddr *label93 (h:*label93)
   189 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
   190 label *label93
-    * set *tmp130 null
   191 jump *label92 always
   192 label *label91
-    * set *tmp130 null
   193 label *label92
   194 label *label90
   195 return :locateOre*retaddr
 
   219 setaddr :dropAll*retaddr *label100 (h:*label100)
   220 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   221 label *label100
-    * set *tmp134 null
   222 jump *label99 always
   223 label *label98
-    * set *tmp134 null
   224 label *label99
   225 set :status3:text "Mining..."
   226 setaddr :status3*retaddr *label101 (h:*label101)
 
   236 op land *tmp139 *tmp137 *tmp138
   237 jump *label105 equal *tmp139 false
   238 jump *label104 always
-    * set *tmp140 null
   239 jump *label106 always
   240 label *label105
-    * set *tmp140 null
   241 label *label106
   242 ucontrol mine :mineOre:x :mineOre:y
   243 op greaterThan *tmp141 @second :mineOre:stop
   244 jump *label107 equal *tmp141 false
   245 jump *label104 always
-    * set *tmp142 null
   246 jump *label108 always
   247 label *label107
-    * set *tmp142 null
   248 label *label108
   249 op equal *tmp143 .noTarget false
   250 jump *label109 equal *tmp143 false
 
   258 label *label112
   259 set *tmp145 null
   260 label *label113
-    * set *tmp144 *tmp145
   261 jump *label110 always
   262 label *label109
-    * set *tmp144 null
   263 label *label110
   264 label *label103
   265 sensor *tmp146 @unit @totalItems
 
   343 op land *tmp158 *tmp156 *tmp157
   344 jump *label129 equal *tmp158 false
   345 ucontrol itemDrop @air 1000
-    * set *tmp159 null
   346 jump *label130 always
   347 label *label129
-    * set *tmp159 null
   348 label *label130
   349 label *label127
   350 sensor *tmp160 @unit :fetchBlock:item
 
   381 setaddr :mineOre*retaddr *label136 (h:*label136)
   382 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   383 label *label136
-    * set *tmp168 null
   384 jump *label135 always
   385 label *label134
-    * set *tmp168 null
   386 label *label135
   387 label *label132
   388 return :supplyBlock*retaddr
 
   419 op land *tmp174 *tmp172 *tmp173
   420 jump *label145 equal *tmp174 false
   421 ucontrol itemDrop @air 1000
-    * set *tmp175 null
   422 jump *label146 always
   423 label *label145
-    * set *tmp175 null
   424 label *label146
   425 label *label143
   426 sensor *tmp176 @unit :supplyBlockFromCore:item
 
   482 sensor *tmp204 :unpackCfg:type @thorium
   483 set :unpackCfg:th *tmp204
   484 sensor *tmp205 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp205
   485 label *label148
   486 return :unpackCfg*retaddr
   487 end
 
   525 label *label156
   526 set *tmp216 null
   527 label *label157
-    * set *tmp213 *tmp216
   528 jump *label155 always
   529 label *label154
-    * set *tmp213 null
   530 label *label155
   531 set :fetchBlock:block .thoriumContainer
   532 set :fetchBlock:item @thorium
 
   542 set :setPolyTarget:target 4
   543 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   544 label *label166
-    * set *tmp222 null
   545 jump *label164 always
   546 label *label163
-    * set *tmp222 null
   547 label *label164
   548 label *label152
-    * set *tmp210 null
   549 jump *label151 always
   550 label *label150
   551 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   587 label *label177
   588 set *tmp232 null
   589 label *label178
-    * set *tmp229 *tmp232
   590 jump *label176 always
   591 label *label175
-    * set *tmp229 null
   592 label *label176
   593 sensor *tmp233 AJTJK-battery1 @totalPower
   594 op lessThan *tmp234 *tmp233 .powerTarget
 
   611 label *label183
   612 set *tmp238 null
   613 label *label184
-    * set *tmp235 *tmp238
   614 jump *label182 always
   615 label *label181
-    * set *tmp235 null
   616 label *label182
   617 sensor *tmp239 .core @silicon
   618 op lessThan *tmp240 *tmp239 silicon
 
   682 label *label187
   683 set *tmp241 null
   684 label *label188
-    * set *tmp226 *tmp241
   685 jump *label174 always
   686 label *label173
-    * set *tmp226 null
   687 label *label174
   688 sensor *tmp252 .core @titanium
   689 op lessThan *tmp253 *tmp252 titanium
 
   886 label *label207
   887 set *tmp262 null
   888 label *label208
-    * set *tmp260 *tmp262
   889 jump *label206 always
   890 label *label205
   891 set :status1:text "Goal 11: Fetching titanium"
 
   897 setaddr :fetchBlock*retaddr *label253 (h:*label253)
   898 call *label28 *invalid :fetchBlock*retval (m:*label253) (h:*label253)
   899 label *label253
-    * set *tmp260 null
   900 label *label206
   901 label *label172
   902 set *tmp224 null
   903 label *label168
-    * set *tmp210 *tmp224
   904 label *label151
   905 label *label149
   906 return :supplyBaseLocal*retaddr
 
   912 write @copper processor2 ".missing"
   913 set :targetMet*retval false
   914 jump *label254 always
-    * set *tmp300 null
   915 jump *label256 always
   916 label *label255
-    * set *tmp300 null
   917 label *label256
   918 sensor *tmp301 .core @lead
   919 op lessThan *tmp302 *tmp301 lead
 
   921 write @lead processor2 ".missing"
   922 set :targetMet*retval false
   923 jump *label254 always
-    * set *tmp303 null
   924 jump *label258 always
   925 label *label257
-    * set *tmp303 null
   926 label *label258
   927 sensor *tmp304 .core @graphite
   928 op lessThan *tmp305 *tmp304 graphite
 
   930 write @graphite processor2 ".missing"
   931 set :targetMet*retval false
   932 jump *label254 always
-    * set *tmp306 null
   933 jump *label260 always
   934 label *label259
-    * set *tmp306 null
   935 label *label260
   936 sensor *tmp307 .core @silicon
   937 op lessThan *tmp308 *tmp307 silicon
 
   939 write @silicon processor2 ".missing"
   940 set :targetMet*retval false
   941 jump *label254 always
-    * set *tmp309 null
   942 jump *label262 always
   943 label *label261
-    * set *tmp309 null
   944 label *label262
   945 sensor *tmp310 .core @titanium
   946 op lessThan *tmp311 *tmp310 titanium
 
   948 write @titanium processor2 ".missing"
   949 set :targetMet*retval false
   950 jump *label254 always
-    * set *tmp312 null
   951 jump *label264 always
   952 label *label263
-    * set *tmp312 null
   953 label *label264
   954 sensor *tmp313 .core @metaglass
   955 op lessThan *tmp314 *tmp313 metaglass
 
   957 write @metaglass processor2 ".missing"
   958 set :targetMet*retval false
   959 jump *label254 always
-    * set *tmp315 null
   960 jump *label266 always
   961 label *label265
-    * set *tmp315 null
   962 label *label266
   963 sensor *tmp316 .core @thorium
   964 op lessThan *tmp317 *tmp316 thorium
 
   966 write @thorium processor2 ".missing"
   967 set :targetMet*retval false
   968 jump *label254 always
-    * set *tmp318 null
   969 jump *label268 always
   970 label *label267
-    * set *tmp318 null
   971 label *label268
   972 set :targetMet*retval true
   973 jump *label254 always
 
  1077 label *label289
  1078 jump *label288 always
  1079 label *label290
-    * set *tmp333 null
  1080 jump *label286 always
  1081 label *label285
-    * set *tmp333 null
  1082 label *label286
  1083 label *label269
  1084 return :meetTargetLocal*retaddr
 
  1200 label *label305
  1201 set :buildRemoteBlock*retval :buildBlock*retval
  1202 jump *label301 always
-    * set *tmp340 null
  1203 jump *label303 always
  1204 label *label302
-    * set *tmp340 null
  1205 label *label303
  1206 set :buildRemoteBlock*retval false
  1207 jump *label301 always
 
  1277 jump *label317 equal *tmp349 false
  1278 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1279 jump *label312 always
-    * set *tmp350 null
  1280 jump *label318 always
  1281 label *label317
-    * set *tmp350 null
  1282 label *label318
  1283 set :buildError:text "Cannot build at position"
  1284 set :buildError:block :buildBlockAtLocal:block
 
  1292 set .ERROR_Y :buildError:y
  1293 stop
  1294 label *label319
-    * set *tmp348 null
  1295 jump *label316 always
  1296 label *label315
-    * set *tmp348 null
  1297 label *label316
  1298 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
  1299 wait 0.25
 
  1318 set .ERROR_Y :buildError.1:y
  1319 stop
  1320 label *label325
-    * set *tmp356 null
  1321 jump *label324 always
  1322 label *label323
  1323 set :buildBlockAtLocal:success true
-    * set *tmp356 :buildBlockAtLocal:success
  1324 label *label324
  1325 op equal *tmp357 :buildBlockAtLocal:block @multiplicative-reconstructor
  1326 jump *label326 equal *tmp357 false
 
  1335 label *label328
  1336 set *tmp361 null
  1337 label *label329
-    * set *tmp358 *tmp361
  1338 jump *label327 always
  1339 label *label326
-    * set *tmp358 null
  1340 label *label327
  1341 label *label321
  1342 op notEqual *tmp362 :buildBlockAtLocal:type :buildBlockAtLocal:block
 
  1364 op or *tmp373 *tmp7 *tmp372
  1365 write *tmp373 processor2 ".blocksBuilt"
  1366 write :logBlock:index processor2 ".recentBuildIndex"
-    * set *tmp371 :logBlock:index
  1367 jump *label333 always
  1368 label *label332
-    * set *tmp371 null
  1369 label *label333
  1370 label *label330
  1371 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
 
  1478 label *label353
  1479 set .positive :titaniumDrillScore:positive
  1480 set .negative :titaniumDrillScore:negative
-    * set *tmp391 :titaniumDrillScore*retval
  1481 op sub *tmp392 :buildTitaniumDrill:x 0.5
  1482 op add *tmp393 :buildTitaniumDrill:y 0.5
  1483 set :titaniumDrillScore:x *tmp392
 
  1489 label *label354
  1490 set .positive :titaniumDrillScore:positive
  1491 set .negative :titaniumDrillScore:negative
-    * set *tmp394 :titaniumDrillScore*retval
  1492 op add *tmp395 :buildTitaniumDrill:x 0.5
  1493 op sub *tmp396 :buildTitaniumDrill:y 0.5
  1494 set :titaniumDrillScore:x *tmp395
 
  1500 label *label355
  1501 set .positive :titaniumDrillScore:positive
  1502 set .negative :titaniumDrillScore:negative
-    * set *tmp397 :titaniumDrillScore*retval
  1503 op add *tmp398 :buildTitaniumDrill:x 0.5
  1504 op add *tmp399 :buildTitaniumDrill:y 0.5
  1505 set :titaniumDrillScore:x *tmp398
 
  1511 label *label356
  1512 set .positive :titaniumDrillScore:positive
  1513 set .negative :titaniumDrillScore:negative
-    * set *tmp400 :titaniumDrillScore*retval
  1514 op greaterThan *tmp401 .positive .negative
  1515 op greaterThanEq *tmp402 .positive 2
  1516 op land *tmp403 *tmp401 *tmp402
 
  1558 label *label349
  1559 set *tmp386 null
  1560 label *label350
-    * set *tmp384 *tmp386
  1561 jump *label348 always
  1562 label *label347
-    * set *tmp384 null
  1563 label *label348
  1564 set :buildTitaniumDrill*retval 0
  1565 jump *label346 always
 
  1572 set :buildTitaniumDrills:tiles 0
  1573 jump *label365 equal .scrap false
  1574 op add .MAX_TILES .MAX_TILES 4
-    * set *tmp411 .MAX_TILES
  1575 jump *label366 always
  1576 label *label365
-    * set *tmp411 null
  1577 label *label366
  1578 wait 0.0001
  1579 wait 0.0001
 
  1668 label *label379
  1669 set *tmp441 null
  1670 label *label380
-    * set *tmp418 *tmp441
  1671 jump *label374 always
  1672 label *label373
-    * set *tmp418 null
  1673 label *label374
-    * set *tmp443 :buildTitaniumDrills:current
  1674 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1675 label *label371
  1676 jump *label370 always
 
  1678 op greaterThanEq *tmp444 :buildTitaniumDrills:tiles .MAX_TILES
  1679 jump *label382 equal *tmp444 false
  1680 jump *label369 always
-    * set *tmp445 null
  1681 jump *label383 always
  1682 label *label382
-    * set *tmp445 null
  1683 label *label383
  1684 op greaterThanEq *tmp446 :buildTitaniumDrills:count .MAX_COUNT
  1685 jump *label384 equal *tmp446 false
  1686 jump *label369 always
-    * set *tmp447 null
  1687 jump *label385 always
  1688 label *label384
-    * set *tmp447 null
  1689 label *label385
  1690 label *label368
  1691 read *tmp52 processor3 ".searchFinished"

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   253 label *label111
   254 jump *label112 equal :targetMet*retval false
   255 jump *label104 always
-    * set *tmp145 null
   256 jump *label113 always
   257 label *label112
-    * set *tmp145 null
   258 label *label113
   259 jump *label110 always
   260 label *label109
 
   479 set :unpackCfg:mg *tmp203
   480 sensor *tmp204 :unpackCfg:type @thorium
   481 set :unpackCfg:th *tmp204
-    * sensor *tmp205 :unpackCfg:type @size
   482 label *label148
   483 return :unpackCfg*retaddr
   484 end
 
   517 label *label161
   518 set *tmp219 null
   519 label *label159
-    * set *tmp216 *tmp219
   520 jump *label157 always
   521 label *label156
-    * set *tmp216 null
   522 label *label157
   523 jump *label155 always
   524 label *label154
 
   555 call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
   556 label *label171
   557 label *label169
-    * set *tmp224 null
   558 jump *label168 always
   559 label *label167
   560 set :supplyBase0:supplied false
 
   576 call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
   577 label *label180
   578 set :supplyBase0:supplied true
-    * set *tmp232 :supplyBase0:supplied
   579 jump *label178 always
   580 label *label177
-    * set *tmp232 null
   581 label *label178
   582 jump *label176 always
   583 label *label175
 
   598 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   599 label *label186
   600 jump *label172 always
-    * set *tmp238 null
   601 jump *label184 always
   602 label *label183
-    * set *tmp238 null
   603 label *label184
   604 jump *label182 always
   605 label *label181
 
   667 label *label194
   668 set *tmp244 *tmp247
   669 label *label190
-    * set *tmp241 *tmp244
   670 jump *label188 always
   671 label *label187
-    * set *tmp241 null
   672 label *label188
   673 jump *label174 always
   674 label *label173
 
   869 label *label214
   870 set *tmp266 *tmp269
   871 label *label210
-    * set *tmp262 *tmp266
   872 jump *label208 always
   873 label *label207
-    * set *tmp262 null
   874 label *label208
   875 jump *label206 always
   876 label *label205
 
   885 label *label253
   886 label *label206
   887 label *label172
-    * set *tmp224 null
   888 label *label168
   889 label *label151
   890 label *label149
 
  1315 jump *label328 equal *tmp360 false
  1316 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1317 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * set *tmp361 null
  1318 jump *label329 always
  1319 label *label328
-    * set *tmp361 null
  1320 label *label329
  1321 jump *label327 always
  1322 label *label326
 
  1428 label *label344
  1429 set *tmp376 null
  1430 label *label340
-    * set :titaniumDrillScore*retval *tmp376
  1431 label *label339
  1432 return :titaniumDrillScore*retaddr
  1433 end
 
  1535 label *label357
  1536 set *tmp404 null
  1537 label *label358
-    * set *tmp386 *tmp404
  1538 jump *label350 always
  1539 label *label349
-    * set *tmp386 null
  1540 label *label350
  1541 jump *label348 always
  1542 label *label347
 
  1643 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1644 set *tmp442 :buildTitaniumDrill*retval
  1645 set :buildTitaniumDrills:built *tmp442
-    * set *tmp441 :buildTitaniumDrills:built
  1646 jump *label380 always
  1647 label *label379
-    * set *tmp441 null
  1648 label *label380
  1649 jump *label374 always
  1650 label *label373

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
   507 setaddr :supplyBlock*retaddr *label160 (h:*label160)
   508 call *label29 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
   509 label *label160
-    * set *tmp219 null
   510 jump *label159 always
   511 label *label158
   512 set :supplyBlockFromCore:target .thoriumGenerator
 
   514 setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
   515 call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   516 label *label161
-    * set *tmp219 null
   517 label *label159
   518 jump *label157 always
   519 label *label156
 
   618 call *label29 *invalid :supplyBlock*retval (m:*label192) (h:*label192)
   619 label *label192
   620 set :supplyBase0:supplied true
-    * set *tmp244 :supplyBase0:supplied
   621 jump *label190 always
   622 label *label189
   623 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
 
   662 label *label193
   663 set *tmp247 null
   664 label *label194
-    * set *tmp244 *tmp247
   665 label *label190
   666 jump *label188 always
   667 label *label187
 
   698 setaddr :mineOre.2*retaddr *label212 (h:*label212)
   699 call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
   700 label *label212
-    * set *tmp266 null
   701 jump *label210 always
   702 label *label209
   703 sensor *tmp267 .core @silicon
 
   862 label *label231
   863 set *tmp269 *tmp284
   864 label *label214
-    * set *tmp266 *tmp269
   865 label *label210
   866 jump *label208 always
   867 label *label207
 
  1406 label *label343
  1407 set *tmp381 :titaniumDrillScore:positive
  1408 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * set *tmp376 *tmp381
  1409 jump *label340 always
  1410 label *label342
  1411 jump *label345 equal *tmp377 @ore-copper
 
  1416 label *label345
  1417 set *tmp382 :titaniumDrillScore:negative
  1418 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * set *tmp376 *tmp382
  1419 jump *label340 always
  1420 label *label344
-    * set *tmp376 null
  1421 label *label340
  1422 label *label339
  1423 return :titaniumDrillScore*retaddr
 
  1521 label *label360
  1522 set *tmp406 null
  1523 label *label361
-    * set *tmp404 *tmp406
  1524 jump *label358 always
  1525 label *label357
-    * set *tmp404 null
  1526 label *label358
  1527 jump *label350 always
  1528 label *label349

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-8 instructions):
 
   657 set :supplyBase0:supplied true
   658 set *tmp248 :supplyBase0:supplied
   659 label *label196
-    * set *tmp247 *tmp248
   660 jump *label194 always
   661 label *label193
-    * set *tmp247 null
   662 label *label194
   663 label *label190
   664 jump *label188 always
 
   766 label *label229
   767 set *tmp270 null
   768 label *label216
-    * set *tmp269 *tmp270
   769 jump *label214 always
   770 label *label213
   771 sensor *tmp282 .core @copper
 
   857 label *label235
   858 set *tmp284 *tmp287
   859 label *label231
-    * set *tmp269 *tmp284
   860 label *label214
   861 label *label210
   862 jump *label208 always
 
  1400 jump *label343 equal *tmp377 @ore-titanium
  1401 jump *label342 always
  1402 label *label343
-    * set *tmp381 :titaniumDrillScore:positive
  1403 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1404 jump *label340 always
  1405 label *label342
 
  1409 jump *label345 equal *tmp377 @ore-coal
  1410 jump *label344 always
  1411 label *label345
-    * set *tmp382 :titaniumDrillScore:negative
  1412 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1413 jump *label340 always
  1414 label *label344
 
  1510 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp410
  1511 set :buildTitaniumDrill*retval .positive
  1512 jump *label346 always
-    * set *tmp406 null
  1513 jump *label361 always
  1514 label *label360
-    * set *tmp406 null
  1515 label *label361
  1516 jump *label358 always
  1517 label *label357

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-6 instructions):
 
   642 label *label197
   643 set *tmp251 null
   644 label *label198
-    * set *tmp248 *tmp251
   645 jump *label196 always
   646 label *label195
   647 set :status1:text "Goal 3: sand for silicon requirement"
 
   654 call *label29 *invalid :supplyBlock*retval (m:*label202) (h:*label202)
   655 label *label202
   656 set :supplyBase0:supplied true
-    * set *tmp248 :supplyBase0:supplied
   657 label *label196
   658 jump *label194 always
   659 label *label193
 
   739 label *label225
   740 set *tmp271 null
   741 label *label219
-    * set *tmp270 *tmp271
   742 jump *label216 always
   743 label *label215
   744 set :status1:text "Goal 6: silicon requirement"
 
   761 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   762 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   763 label *label229
-    * set *tmp270 null
   764 label *label216
   765 jump *label214 always
   766 label *label213
 
   775 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   776 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
   777 label *label233
-    * set *tmp284 null
   778 jump *label231 always
   779 label *label230
   780 sensor *tmp285 .core @lead
 
   850 label *label239
   851 set *tmp287 *tmp290
   852 label *label235
-    * set *tmp284 *tmp287
   853 label *label231
   854 label *label214
   855 label *label210

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-6 instructions):
 
   637 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   638 label *label200
   639 set :supplyBase0:supplied true
-    * set *tmp251 :supplyBase0:supplied
   640 jump *label198 always
   641 label *label197
-    * set *tmp251 null
   642 label *label198
   643 jump *label196 always
   644 label *label195
 
   728 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   729 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   730 label *label224
-    * set *tmp271 null
   731 jump *label219 always
   732 label *label218
   733 set :mineOre.2:ore @coal
   734 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   735 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   736 label *label225
-    * set *tmp271 null
   737 label *label219
   738 jump *label216 always
   739 label *label215
 
   784 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   785 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
   786 label *label237
-    * set *tmp287 null
   787 jump *label235 always
   788 label *label234
   789 sensor *tmp288 .core @metaglass
 
   843 label *label247
   844 set *tmp290 *tmp292
   845 label *label239
-    * set *tmp287 *tmp290
   846 label *label235
   847 label *label231
   848 label *label214

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   808 label *label244
   809 set *tmp291 null
   810 label *label242
-    * set *tmp290 *tmp291
   811 jump *label239 always
   812 label *label238
   813 set :status1:text "Goal 10: supplying base"
 
   840 label *label251
   841 set *tmp292 null
   842 label *label247
-    * set *tmp290 *tmp292
   843 label *label239
   844 label *label235
   845 label *label231

Modifications by Initial phase, Dead Code Elimination, iteration 8 (-4 instructions):
 
   799 setaddr :mineOre.1*retaddr *label243 (h:*label243)
   800 call *label26 *invalid :mineOre.1*retval (m:*label243) (h:*label243)
   801 label *label243
-    * set *tmp291 null
   802 jump *label242 always
   803 label *label241
   804 set :mineOre.2:ore @sand
   805 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   806 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   807 label *label244
-    * set *tmp291 null
   808 label *label242
   809 jump *label239 always
   810 label *label238
 
   818 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   819 call *label26 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   820 label *label248
-    * set *tmp292 null
   821 jump *label247 always
   822 label *label246
   823 sensor *tmp293 .core @coal
 
   835 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   836 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   837 label *label251
-    * set *tmp292 null
   838 label *label247
   839 label *label239
   840 label *label235

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-49 instructions):
 
    32 set .MAX_COUNT 6
    33 label *label51
    34 ubind @poly
-    * set *tmp101 @unit
-    * set .builder *tmp101
-    * ulocate building core false @copper .coreX .coreY *tmp103 *tmp102
-    * set .core *tmp102
+   35 set .builder @unit
+   36 ulocate building core false @copper .coreX .coreY *tmp103 .core
    37 label *label52
    38 op equal *tmp104 .core null
    39 jump *label51 notEqual *tmp104 false
 
   148 setaddr :moveToBlock*retaddr *label82 (h:*label82)
   149 call *label22 *invalid :moveToBlock*retval (m:*label82) (h:*label82)
   150 label *label82
-    * sensor *tmp120 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp120
+  151 sensor :depositItems:cap :depositItems:block @itemCapacity
   152 label *label83
   153 ucontrol itemDrop :depositItems:block 28
   154 label *label84
 
   192 return :locateOre*retaddr
   193 end
   194 label *label25
-    * op min *tmp131 :mineOre:amount 28
-    * set :mineOre:amount *tmp131
+  195 op min :mineOre:amount :mineOre:amount 28
   196 set :transportStatus:target :mineOre:amount
   197 set :transportStatus:item :mineOre:ore
   198 setaddr :transportStatus*retaddr *label95 (h:*label95)
 
   222 setaddr :status3*retaddr *label101 (h:*label101)
   223 call *label16 *invalid :status3*retval (m:*label101) (h:*label101)
   224 label *label101
-    * op add *tmp135 @second 10
-    * set :mineOre:stop *tmp135
+  225 op add :mineOre:stop @second 10
   226 label *label102
-    * sensor *tmp136 @unit @firstItem
-    * set :mineOre:item *tmp136
+  227 sensor :mineOre:item @unit @firstItem
   228 op notEqual *tmp137 :mineOre:item null
   229 op notEqual *tmp138 :mineOre:item :mineOre:ore
   230 op land *tmp139 *tmp137 *tmp138
 
   292 setaddr :status2*retaddr *label119 (h:*label119)
   293 call *label15 *invalid :status2*retval (m:*label119) (h:*label119)
   294 label *label119
-    * set *tmp150 :mineOre.2:ore
-    * set :mineOre:ore *tmp150
+  295 set :mineOre:ore :mineOre.2:ore
   296 set :mineOre:amount 28
   297 set :mineOre:block .core
   298 setaddr :mineOre*retaddr *label120 (h:*label120)
 
   303 end
   304 label *label28
   305 sensor *tmp151 :fetchBlock:block @itemCapacity
-    * op min *tmp152 *tmp151 28
-    * set :transportStatus:target *tmp152
+  306 op min :transportStatus:target *tmp151 28
   307 set :transportStatus:item :fetchBlock:item
   308 setaddr :transportStatus*retaddr *label122 (h:*label122)
   309 call *label17 *invalid :transportStatus*retval (m:*label122) (h:*label122)
 
   326 label *label125
   327 label *label126
   328 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
-    * sensor *tmp155 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp155
+  329 sensor :fetchBlock:unitItem @unit @firstItem
   330 op notEqual *tmp156 :fetchBlock:unitItem null
   331 op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item
   332 op land *tmp158 *tmp156 *tmp157
 
   357 setaddr :status2*retaddr *label133 (h:*label133)
   358 call *label15 *invalid :status2*retval (m:*label133) (h:*label133)
   359 label *label133
-    * sensor *tmp164 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp164
+  360 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   361 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp166 :supplyBlock:blockCapacity *tmp165
-    * set :supplyBlock:missing *tmp166
+  362 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   363 op greaterThan *tmp167 :supplyBlock:missing 0
   364 jump *label134 equal *tmp167 false
   365 set :mineOre:ore :supplyBlock:ore
 
   376 end
   377 label *label30
   378 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp170 *tmp169 28
-    * set :supplyBlockFromCore:cap *tmp170
+  379 op min :supplyBlockFromCore:cap *tmp169 28
   380 set :transportStatus:target :supplyBlockFromCore:cap
   381 set :transportStatus:item :supplyBlockFromCore:item
   382 setaddr :transportStatus*retaddr *label138 (h:*label138)
 
   398 label *label141
   399 label *label142
   400 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor *tmp171 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp171
+  401 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   402 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
   403 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   404 op land *tmp174 *tmp172 *tmp173
 
   428 op add :unpackCfg:index :unpackCfg:index 1
   429 read *tmp181 :unpackCfg:cfg *tmp180
   430 op sub *tmp182 *tmp181 74
-    * lookup block *tmp183 *tmp182
-    * set :unpackCfg:type *tmp183
+  431 lookup block :unpackCfg:type *tmp182
   432 set *tmp184 :unpackCfg:index
   433 op add :unpackCfg:index :unpackCfg:index 1
   434 read *tmp185 :unpackCfg:cfg *tmp184
   435 op sub *tmp186 *tmp185 74
-    * op div *tmp187 *tmp186 2
-    * set :unpackCfg:x *tmp187
+  436 op div :unpackCfg:x *tmp186 2
   437 set *tmp188 :unpackCfg:index
   438 op add :unpackCfg:index :unpackCfg:index 1
   439 read *tmp189 :unpackCfg:cfg *tmp188
   440 op sub *tmp190 *tmp189 74
-    * op div *tmp191 *tmp190 2
-    * set :unpackCfg:y *tmp191
+  441 op div :unpackCfg:y *tmp190 2
   442 set *tmp192 :unpackCfg:index
   443 op add :unpackCfg:index :unpackCfg:index 1
   444 read *tmp193 :unpackCfg:cfg *tmp192
-    * op sub *tmp194 *tmp193 74
-    * set :unpackCfg:rotation *tmp194
+  445 op sub :unpackCfg:rotation *tmp193 74
   446 set *tmp195 :unpackCfg:index
   447 op add :unpackCfg:index :unpackCfg:index 1
   448 read *tmp196 :unpackCfg:cfg *tmp195
-    * op sub *tmp197 *tmp196 74
-    * set :unpackCfg:ind *tmp197
-    * sensor *tmp198 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp198
-    * sensor *tmp199 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp199
-    * sensor *tmp200 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp200
-    * sensor *tmp201 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp201
-    * sensor *tmp202 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp202
-    * sensor *tmp203 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp203
-    * sensor *tmp204 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp204
+  449 op sub :unpackCfg:ind *tmp196 74
+  450 sensor :unpackCfg:cu :unpackCfg:type @copper
+  451 sensor :unpackCfg:pb :unpackCfg:type @lead
+  452 sensor :unpackCfg:gr :unpackCfg:type @graphite
+  453 sensor :unpackCfg:si :unpackCfg:type @silicon
+  454 sensor :unpackCfg:ti :unpackCfg:type @titanium
+  455 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+  456 sensor :unpackCfg:th :unpackCfg:type @thorium
   457 label *label148
   458 return :unpackCfg*retaddr
   459 end
 
   643 jump *label203 equal *tmp253 false
   644 sensor *tmp255 .core @titanium
   645 op sub *tmp256 titanium *tmp255
-    * op min *tmp257 5 *tmp256
-    * set *tmp254 *tmp257
+  646 op min *tmp254 5 *tmp256
   647 jump *label204 always
   648 label *label203
   649 set *tmp254 100
 
   677 call *label14 *invalid :status1*retval (m:*label217) (h:*label217)
   678 label *label217
   679 jump *label218 equal A¨SSJh-container30 false
-    * sensor *tmp272 .core @coal
-    * set :supplyBase0:coal *tmp272
-    * sensor *tmp273 A¨SSJh-container30 @sand
-    * set :supplyBase0:sand *tmp273
+  680 sensor :supplyBase0:coal .core @coal
+  681 sensor :supplyBase0:sand A¨SSJh-container30 @sand
   682 op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
   683 jump *label220 equal *tmp274 false
   684 set *tmp275 @coal
 
   713 setaddr :status1*retaddr *label226 (h:*label226)
   714 call *label14 *invalid :status1*retval (m:*label226) (h:*label226)
   715 label *label226
-    * sensor *tmp278 .core @coal
-    * set :supplyBase0:coal.1 *tmp278
-    * sensor *tmp279 .core @sand
-    * set :supplyBase0:sand.1 *tmp279
+  716 sensor :supplyBase0:coal.1 .core @coal
+  717 sensor :supplyBase0:sand.1 .core @sand
   718 op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
   719 jump *label227 equal *tmp280 false
   720 set *tmp281 @coal
 
   947 write :meetTargetLocal:metaglass processor2 ".targetMetaglass"
   948 write :meetTargetLocal:thorium processor2 ".targetThorium"
   949 set copper :meetTargetLocal:copper
-    * op add *tmp321 :meetTargetLocal:lead .leadSurplus
-    * set lead *tmp321
+  950 op add lead :meetTargetLocal:lead .leadSurplus
   951 set graphite :meetTargetLocal:graphite
   952 set silicon :meetTargetLocal:silicon
   953 set titanium :meetTargetLocal:titanium
 
   974 setaddr :targetMet*retaddr *label283 (h:*label283)
   975 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   976 label *label283
-    * set *tmp331 :targetMet*retval
-    * op equal *tmp332 *tmp331 false
+  977 op equal *tmp332 :targetMet*retval false
   978 jump *label282 equal *tmp332 false
   979 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   980 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
 
   993 setaddr :targetMet*retaddr *label291 (h:*label291)
   994 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   995 label *label291
-    * set *tmp335 :targetMet*retval
-    * op equal *tmp336 *tmp335 false
+  996 op equal *tmp336 :targetMet*retval false
   997 jump *label290 equal *tmp336 false
   998 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   999 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
 
  1193 call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
  1194 label *label314
  1195 label *label313
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type *tmp345 *tmp346
-    * set :buildBlockAtLocal:building *tmp345
+ 1196 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp346
  1197 op notEqual *tmp347 :buildBlockAtLocal:building null
  1198 jump *label315 equal *tmp347 false
  1199 op equal *tmp349 :buildBlockAtLocal:type :buildBlockAtLocal:block
 
  1223 set :buildBlockAtLocal:success false
  1224 label *label320
  1225 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type *tmp351 *tmp352
-    * set :buildBlockAtLocal:building *tmp351
+ 1226 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp352
  1227 op equal *tmp353 :buildBlockAtLocal:building null
  1228 op equal *tmp354 :buildBlockAtLocal:success false
  1229 op land *tmp355 *tmp353 *tmp354
 
  1266 ubind .builder
  1267 set :logBlock:block :buildBlockAtLocal:block
  1268 set :logBlock:index :buildBlockAtLocal:index
-    * sensor *tmp364 :logBlock:block @id
-    * set :log:encodedId *tmp364
+ 1269 sensor :log:encodedId :logBlock:block @id
  1270 read *tmp100 bank1 511
  1271 op sub *tmp365 *tmp100 1
  1272 write *tmp365 bank1 511
 
  1452 op min *tmp409 :setFlareTarget:target 8
  1453 write *tmp409 AÕFFJS-micro-processor9 ".flareTarget"
  1454 label *label363
-    * set *tmp410 .positive
-    * op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp410
+ 1455 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1456 set :buildTitaniumDrill*retval .positive
  1457 jump *label346 always
  1458 jump *label361 always
 
  1488 read *tmp51 processor3 ".locations"
  1489 op lessThan *tmp412 :buildTitaniumDrills:current *tmp51
  1490 jump *label372 equal *tmp412 false
-    * op mul *tmp413 :buildTitaniumDrills:current 4
-    * set :buildTitaniumDrills:index *tmp413
+ 1491 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1492 op add *tmp414 :buildTitaniumDrills:index 1
-    * set *tmp415 *tmp414
-    * read *tmp416 bank1 *tmp415
-    * set :buildTitaniumDrills:size *tmp416
+ 1493 read :buildTitaniumDrills:size bank1 *tmp414
  1494 op greaterThanEq *tmp417 :buildTitaniumDrills:size 3
  1495 jump *label373 equal *tmp417 false
  1496 op add *tmp419 :buildTitaniumDrills:index 2
-    * set *tmp420 *tmp419
-    * read *tmp421 bank1 *tmp420
-    * set :buildTitaniumDrills:x *tmp421
+ 1497 read :buildTitaniumDrills:x bank1 *tmp419
  1498 op add *tmp422 :buildTitaniumDrills:index 3
-    * set *tmp423 *tmp422
-    * read *tmp424 bank1 *tmp423
-    * set :buildTitaniumDrills:y *tmp424
+ 1499 read :buildTitaniumDrills:y bank1 *tmp422
  1500 op sub *tmp425 :buildTitaniumDrills:x 1
  1501 op sub *tmp426 :buildTitaniumDrills:y 1
  1502 set :buildTitaniumDrill:x *tmp425
 
  1520 label *label376
  1521 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1522 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp430 :buildTitaniumDrill*retval
-    * op add *tmp431 *tmp427 *tmp430
+ 1523 op add *tmp431 *tmp427 :buildTitaniumDrill*retval
  1524 op sub *tmp432 :buildTitaniumDrills:x 1
  1525 op add *tmp433 :buildTitaniumDrills:y 1
  1526 set :buildTitaniumDrill:x *tmp432
 
  1532 label *label377
  1533 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1534 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp434 :buildTitaniumDrill*retval
-    * op add *tmp435 *tmp431 *tmp434
+ 1535 op add *tmp435 *tmp431 :buildTitaniumDrill*retval
  1536 op add *tmp436 :buildTitaniumDrills:x 1
  1537 op add *tmp437 :buildTitaniumDrills:y 1
  1538 set :buildTitaniumDrill:x *tmp436
 
  1544 label *label378
  1545 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1546 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp438 :buildTitaniumDrill*retval
-    * op add *tmp439 *tmp435 *tmp438
-    * set :buildTitaniumDrills:built *tmp439
+ 1547 op add :buildTitaniumDrills:built *tmp435 :buildTitaniumDrill*retval
  1548 op equal *tmp440 :buildTitaniumDrills:built 0
  1549 jump *label379 equal *tmp440 false
  1550 set :buildTitaniumDrill:x :buildTitaniumDrills:x
 
  1556 label *label381
  1557 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1558 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp442 :buildTitaniumDrill*retval
-    * set :buildTitaniumDrills:built *tmp442
+ 1559 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1560 jump *label380 always
  1561 label *label379
  1562 label *label380

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1343 jump *label341 always
  1344 set *tmp377 null
  1345 label *label341
-    * jump *label343 equal *tmp377 @ore-titanium
-    * jump *label342 always
+ 1346 jump *label342 notEqual *tmp377 @ore-titanium
  1347 label *label343
  1348 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1349 jump *label340 always
 
  1351 jump *label345 equal *tmp377 @ore-copper
  1352 jump *label345 equal *tmp377 @ore-lead
  1353 jump *label345 equal *tmp377 @ore-scrap
-    * jump *label345 equal *tmp377 @ore-coal
-    * jump *label344 always
+ 1354 jump *label344 notEqual *tmp377 @ore-coal
  1355 label *label345
  1356 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1357 jump *label340 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-64 instructions):
 
    35 set .builder @unit
    36 ulocate building core false @copper .coreX .coreY *tmp103 .core
    37 label *label52
-    * op equal *tmp104 .core null
-    * jump *label51 notEqual *tmp104 false
+   38 jump *label51 equal .core null
    39 label *label53
    40 set *signature "77658b7b93afc77c:v1"
    41 label *label54
 
    78 label *label61
    79 label *label62
    80 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * op equal *tmp106 *tmp105 false
-    * jump *label64 equal *tmp106 false
+   81 jump *label64 notEqual *tmp105 false
    82 op sub *tmp107 :moveTo:radius 0.5
    83 ucontrol approach :moveTo:x :moveTo:y *tmp107
    84 label *label63
 
    94 label *label66
    95 label *label67
    96 sensor *tmp108 @unit @firstItem
-    * op notEqual *tmp109 *tmp108 null
-    * jump *label70 equal *tmp109 false
+   97 jump *label70 equal *tmp108 null
    98 ucontrol itemDrop @air 1000
    99 jump *label71 always
   100 label *label70
 
   102 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   103 label *label68
   104 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * op equal *tmp112 *tmp111 false
-    * jump *label67 notEqual *tmp112 false
+  105 jump *label67 equal *tmp111 false
   106 label *label69
   107 label *label65
   108 return :moveToEmpty*retaddr
 
   110 label *label21
   111 label *label73
   112 sensor *tmp113 @unit @firstItem
-    * op notEqual *tmp114 *tmp113 null
-    * jump *label75 equal *tmp114 false
+  113 jump *label75 equal *tmp113 null
   114 ucontrol itemDrop @air 1000
   115 label *label74
   116 jump *label73 always
 
   136 call *label16 *invalid :status3*retval (m:*label79) (h:*label79)
   137 label *label79
   138 sensor *tmp117 @unit @firstItem
-    * op equal *tmp118 *tmp117 :depositItems:item
-    * jump *label80 equal *tmp118 false
+  139 jump *label80 notEqual *tmp117 :depositItems:item
   140 set :moveToBlock:block :depositItems:block
   141 set :moveToBlock:radius 6
   142 setaddr :moveToBlock*retaddr *label82 (h:*label82)
 
   149 sensor *tmp121 @unit @firstItem
   150 op mul *tmp122 *tmp121 :depositItems:cap
   151 sensor *tmp123 :depositItems:block :depositItems:item
-    * op greaterThan *tmp124 *tmp122 *tmp123
-    * jump *label83 notEqual *tmp124 false
+  152 jump *label83 greaterThan *tmp122 *tmp123
   153 label *label85
   154 jump *label81 always
   155 label *label80
   156 label *label86
   157 sensor *tmp125 @unit @firstItem
-    * op notEqual *tmp126 *tmp125 null
-    * jump *label88 equal *tmp126 false
+  158 jump *label88 equal *tmp125 null
   159 ucontrol itemDrop @air 1000
   160 label *label87
   161 jump *label86 always
 
   171 end
   172 label *label24
   173 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * op equal *tmp129 *tmp127 false
-    * jump *label91 equal *tmp129 false
+  174 jump *label91 notEqual *tmp127 false
   175 set :error:error "Cannot locate ore"
   176 setaddr :error*retaddr *label93 (h:*label93)
   177 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
 
   201 call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
   202 label *label97
   203 sensor *tmp132 @unit @firstItem
-    * op notEqual *tmp133 *tmp132 :mineOre:ore
-    * jump *label98 equal *tmp133 false
+  204 jump *label98 equal *tmp132 :mineOre:ore
   205 setaddr :dropAll*retaddr *label100 (h:*label100)
   206 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   207 label *label100
 
   224 label *label105
   225 label *label106
   226 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp141 @second :mineOre:stop
-    * jump *label107 equal *tmp141 false
+  227 jump *label107 lessThanEq @second :mineOre:stop
   228 jump *label104 always
   229 jump *label108 always
   230 label *label107
   231 label *label108
-    * op equal *tmp143 .noTarget false
-    * jump *label109 equal *tmp143 false
+  232 jump *label109 notEqual .noTarget false
   233 setaddr :targetMet*retaddr *label111 (h:*label111)
   234 call *label39 *invalid :targetMet*retval (m:*label111) (h:*label111)
   235 label *label111
 
   243 label *label110
   244 label *label103
   245 sensor *tmp146 @unit @totalItems
-    * op lessThan *tmp147 *tmp146 :mineOre:amount
-    * jump *label102 notEqual *tmp147 false
+  246 jump *label102 lessThan *tmp146 :mineOre:amount
   247 label *label104
   248 ucontrol unbind
   249 set :depositItems:block :mineOre:block
 
   347 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   348 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   349 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * op greaterThan *tmp167 :supplyBlock:missing 0
-    * jump *label134 equal *tmp167 false
+  350 jump *label134 lessThanEq :supplyBlock:missing 0
   351 set :mineOre:ore :supplyBlock:ore
   352 set :mineOre:amount :supplyBlock:blockCapacity
   353 set :mineOre:block :supplyBlock:block
 
   455 call *label14 *invalid :status1*retval (m:*label153) (h:*label153)
   456 label *label153
   457 sensor *tmp211 .thoriumBattery @totalPower
-    * op lessThan *tmp212 *tmp211 2000
-    * jump *label154 equal *tmp212 false
+  458 jump *label154 greaterThanEq *tmp211 2000
   459 sensor *tmp214 .thoriumGenerator @coal
-    * op equal *tmp215 *tmp214 0
-    * jump *label156 equal *tmp215 false
+  460 jump *label156 notEqual *tmp214 0
   461 sensor *tmp217 .core @coal
-    * op lessThan *tmp218 *tmp217 50
-    * jump *label158 equal *tmp218 false
+  462 jump *label158 greaterThanEq *tmp217 50
   463 set :supplyBlock:block .thoriumGenerator
   464 set :supplyBlock:ore @coal
   465 setaddr :supplyBlock*retaddr *label160 (h:*label160)
 
   485 call *label28 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   486 label *label162
   487 sensor *tmp220 .core @thorium
-    * op greaterThan *tmp221 *tmp220 400
-    * jump *label163 equal *tmp221 false
+  488 jump *label163 lessThanEq *tmp220 400
   489 set :setMonoTarget:target 0
   490 write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
   491 label *label165
 
   499 jump *label151 always
   500 label *label150
   501 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op greaterThan *tmp223 *tmp81 1
-    * jump *label167 equal *tmp223 false
+  502 jump *label167 lessThanEq *tmp81 1
   503 set :status1:text "Phase 1: supplying base"
   504 setaddr :status1*retaddr *label170 (h:*label170)
   505 call *label14 *invalid :status1*retval (m:*label170) (h:*label170)
 
   512 jump *label168 always
   513 label *label167
   514 set :supplyBase0:supplied false
-    * op equal *tmp225 A©JNJP-unloader6 null
-    * jump *label173 equal *tmp225 false
+  515 jump *label173 notEqual A©JNJP-unloader6 null
   516 sensor *tmp227 .core @graphite
-    * op lessThan *tmp228 *tmp227 graphite
-    * jump *label175 equal *tmp228 false
+  517 jump *label175 greaterThanEq *tmp227 graphite
   518 sensor *tmp230 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp231 *tmp230 5
-    * jump *label177 equal *tmp231 false
+  519 jump *label177 greaterThanEq *tmp230 5
   520 set :status1:text "Goal 1: graphite requirement"
   521 setaddr :status1*retaddr *label179 (h:*label179)
   522 call *label14 *invalid :status1*retval (m:*label179) (h:*label179)
 
   534 label *label175
   535 label *label176
   536 sensor *tmp233 AJTJK-battery1 @totalPower
-    * op lessThan *tmp234 *tmp233 .powerTarget
-    * jump *label181 equal *tmp234 false
+  537 jump *label181 greaterThanEq *tmp233 .powerTarget
   538 sensor *tmp236 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp237 *tmp236 2
-    * jump *label183 equal *tmp237 false
+  539 jump *label183 greaterThanEq *tmp236 2
   540 set :status1:text "Goal 4: supplying generator"
   541 setaddr :status1*retaddr *label185 (h:*label185)
   542 call *label14 *invalid :status1*retval (m:*label185) (h:*label185)
 
   554 label *label181
   555 label *label182
   556 sensor *tmp239 .core @silicon
-    * op lessThan *tmp240 *tmp239 silicon
-    * jump *label187 equal *tmp240 false
+  557 jump *label187 greaterThanEq *tmp239 silicon
   558 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp243 *tmp242 5
-    * jump *label189 equal *tmp243 false
+  559 jump *label189 greaterThanEq *tmp242 5
   560 set :status1:text "Goal 2: coal for silicon requirement"
   561 setaddr :status1*retaddr *label191 (h:*label191)
   562 call *label14 *invalid :status1*retval (m:*label191) (h:*label191)
 
   570 jump *label190 always
   571 label *label189
   572 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp246 *tmp245 5
-    * jump *label193 equal *tmp246 false
+  573 jump *label193 greaterThanEq *tmp245 5
   574 jump *label195 equal .scrap false
   575 sensor *tmp249 AXPRJd-pulverizer26 @scrap
-    * op lessThan *tmp250 *tmp249 10
-    * jump *label197 equal *tmp250 false
+  576 jump *label197 greaterThanEq *tmp249 10
   577 set :status1:text "Goal 3a: scrap for silicon requirement"
   578 setaddr :status1*retaddr *label199 (h:*label199)
   579 call *label14 *invalid :status1*retval (m:*label199) (h:*label199)
 
   611 label *label173
   612 label *label174
   613 sensor *tmp252 .core @titanium
-    * op lessThan *tmp253 *tmp252 titanium
-    * jump *label203 equal *tmp253 false
+  614 jump *label203 greaterThanEq *tmp252 titanium
   615 sensor *tmp255 .core @titanium
   616 op sub *tmp256 titanium *tmp255
   617 op min *tmp254 5 *tmp256
 
   621 label *label204
   622 set :supplyBase0:titaniumTrigger *tmp254
   623 sensor *tmp258 .titaniumDrill @titanium
-    * op lessThan *tmp259 *tmp258 :supplyBase0:titaniumTrigger
-    * jump *label205 equal *tmp259 false
-    * op equal *tmp261 :supplyBase0:supplied false
-    * jump *label207 equal *tmp261 false
+  624 jump *label205 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  625 jump *label207 notEqual :supplyBase0:supplied false
   626 sensor *tmp263 AJTJK-battery1 @totalPower
   627 op mul *tmp264 A©JNJP-unloader6 .powerTarget
-    * op lessThan *tmp265 *tmp263 *tmp264
-    * jump *label209 equal *tmp265 false
+  628 jump *label209 greaterThanEq *tmp263 *tmp264
   629 set :status1:text "Goal 5: supplying generator"
   630 setaddr :status1*retaddr *label211 (h:*label211)
   631 call *label14 *invalid :status1*retval (m:*label211) (h:*label211)
 
   637 jump *label210 always
   638 label *label209
   639 sensor *tmp267 .core @silicon
-    * op lessThan *tmp268 *tmp267 silicon
-    * jump *label213 equal *tmp268 false
+  640 jump *label213 greaterThanEq *tmp267 silicon
   641 jump *label215 equal .scrap false
   642 set :status1:text "Goal 6: silicon requirement"
   643 setaddr :status1*retaddr *label217 (h:*label217)
 
   646 jump *label218 equal A¨SSJh-container30 false
   647 sensor :supplyBase0:coal .core @coal
   648 sensor :supplyBase0:sand A¨SSJh-container30 @sand
-    * op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
-    * jump *label220 equal *tmp274 false
+  649 jump *label220 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   650 set *tmp275 @coal
   651 jump *label221 always
   652 label *label220
   653 set *tmp275 @scrap
   654 label *label221
   655 set :supplyBase0:ore *tmp275
-    * op lessThan *tmp276 :supplyBase0:coal :supplyBase0:sand
-    * jump *label222 equal *tmp276 false
+  656 jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   657 set *tmp277 .core
   658 jump *label223 always
   659 label *label222
 
   680 label *label226
   681 sensor :supplyBase0:coal.1 .core @coal
   682 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label227 equal *tmp280 false
+  683 jump *label227 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
   684 set *tmp281 @coal
   685 jump *label228 always
   686 label *label227
 
   695 jump *label214 always
   696 label *label213
   697 sensor *tmp282 .core @copper
-    * op lessThan *tmp283 *tmp282 copper
-    * jump *label230 equal *tmp283 false
+  698 jump *label230 greaterThanEq *tmp282 copper
   699 set :status1:text "Goal 7: copper requirement"
   700 setaddr :status1*retaddr *label232 (h:*label232)
   701 call *label14 *invalid :status1*retval (m:*label232) (h:*label232)
 
   707 jump *label231 always
   708 label *label230
   709 sensor *tmp285 .core @lead
-    * op lessThan *tmp286 *tmp285 lead
-    * jump *label234 equal *tmp286 false
+  710 jump *label234 greaterThanEq *tmp285 lead
   711 set :status1:text "Goal 8: lead requirement"
   712 setaddr :status1*retaddr *label236 (h:*label236)
   713 call *label14 *invalid :status1*retval (m:*label236) (h:*label236)
 
   719 jump *label235 always
   720 label *label234
   721 sensor *tmp288 .core @metaglass
-    * op lessThan *tmp289 *tmp288 metaglass
-    * jump *label238 equal *tmp289 false
+  722 jump *label238 greaterThanEq *tmp288 metaglass
   723 set :status1:text "Goal 9: metaglass requirement"
   724 setaddr :status1*retaddr *label240 (h:*label240)
   725 call *label14 *invalid :status1*retval (m:*label240) (h:*label240)
 
   795 end
   796 label *label39
   797 sensor *tmp298 .core @copper
-    * op lessThan *tmp299 *tmp298 copper
-    * jump *label255 equal *tmp299 false
+  798 jump *label255 greaterThanEq *tmp298 copper
   799 write @copper processor2 ".missing"
   800 set :targetMet*retval false
   801 jump *label254 always
 
   803 label *label255
   804 label *label256
   805 sensor *tmp301 .core @lead
-    * op lessThan *tmp302 *tmp301 lead
-    * jump *label257 equal *tmp302 false
+  806 jump *label257 greaterThanEq *tmp301 lead
   807 write @lead processor2 ".missing"
   808 set :targetMet*retval false
   809 jump *label254 always
 
   811 label *label257
   812 label *label258
   813 sensor *tmp304 .core @graphite
-    * op lessThan *tmp305 *tmp304 graphite
-    * jump *label259 equal *tmp305 false
+  814 jump *label259 greaterThanEq *tmp304 graphite
   815 write @graphite processor2 ".missing"
   816 set :targetMet*retval false
   817 jump *label254 always
 
   819 label *label259
   820 label *label260
   821 sensor *tmp307 .core @silicon
-    * op lessThan *tmp308 *tmp307 silicon
-    * jump *label261 equal *tmp308 false
+  822 jump *label261 greaterThanEq *tmp307 silicon
   823 write @silicon processor2 ".missing"
   824 set :targetMet*retval false
   825 jump *label254 always
 
   827 label *label261
   828 label *label262
   829 sensor *tmp310 .core @titanium
-    * op lessThan *tmp311 *tmp310 titanium
-    * jump *label263 equal *tmp311 false
+  830 jump *label263 greaterThanEq *tmp310 titanium
   831 write @titanium processor2 ".missing"
   832 set :targetMet*retval false
   833 jump *label254 always
 
   835 label *label263
   836 label *label264
   837 sensor *tmp313 .core @metaglass
-    * op lessThan *tmp314 *tmp313 metaglass
-    * jump *label265 equal *tmp314 false
+  838 jump *label265 greaterThanEq *tmp313 metaglass
   839 write @metaglass processor2 ".missing"
   840 set :targetMet*retval false
   841 jump *label254 always
 
   843 label *label265
   844 label *label266
   845 sensor *tmp316 .core @thorium
-    * op lessThan *tmp317 *tmp316 thorium
-    * jump *label267 equal *tmp317 false
+  846 jump *label267 greaterThanEq *tmp316 thorium
   847 write @thorium processor2 ".missing"
   848 set :targetMet*retval false
   849 jump *label254 always
 
   928 setaddr :targetMet*retaddr *label283 (h:*label283)
   929 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   930 label *label283
-    * op equal *tmp332 :targetMet*retval false
-    * jump *label282 equal *tmp332 false
+  931 jump *label282 notEqual :targetMet*retval false
   932 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   933 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
   934 label *label284
 
   946 setaddr :targetMet*retaddr *label291 (h:*label291)
   947 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   948 label *label291
-    * op equal *tmp336 :targetMet*retval false
-    * jump *label290 equal *tmp336 false
+  949 jump *label290 notEqual :targetMet*retval false
   950 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   951 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
   952 label *label292
 
  1042 end
  1043 label *label8
  1044 op add *tmp338 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp339 *tmp338 0
-    * jump *label302 equal *tmp339 false
+ 1045 jump *label302 lessThanEq *tmp338 0
  1046 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1047 setaddr :unpackCfg*retaddr *label304 (h:*label304)
  1048 call *label32 *invalid :unpackCfg*retval (m:*label304) (h:*label304)
 
  1145 label *label314
  1146 label *label313
  1147 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp346
-    * op notEqual *tmp347 :buildBlockAtLocal:building null
-    * jump *label315 equal *tmp347 false
-    * op equal *tmp349 :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * jump *label317 equal *tmp349 false
+ 1148 jump *label315 equal :buildBlockAtLocal:building null
+ 1149 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1150 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1151 jump *label312 always
  1152 jump *label318 always
 
  1193 label *label323
  1194 set :buildBlockAtLocal:success true
  1195 label *label324
-    * op equal *tmp357 :buildBlockAtLocal:block @multiplicative-reconstructor
-    * jump *label326 equal *tmp357 false
+ 1196 jump *label326 notEqual :buildBlockAtLocal:block @multiplicative-reconstructor
  1197 control enabled processor6 false
  1198 ubind @poly
-    * op notEqual *tmp360 @unit .builder
-    * jump *label328 equal *tmp360 false
+ 1199 jump *label328 equal @unit .builder
  1200 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1201 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
  1202 jump *label329 always
 
  1206 label *label326
  1207 label *label327
  1208 label *label321
-    * op notEqual *tmp362 :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * jump *label320 notEqual *tmp362 false
+ 1209 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1210 label *label322
  1211 control enabled processor6 true
  1212 ubind .builder
 
  1222 op add *tmp369 :log:encodedId *tmp368
  1223 write *tmp369 bank1 *tmp366
  1224 label *label331
-    * op greaterThanEq *tmp370 :logBlock:index 0
-    * jump *label332 equal *tmp370 false
+ 1225 jump *label332 lessThan :logBlock:index 0
  1226 op shl *tmp372 1 :logBlock:index
  1227 read *tmp7 processor2 ".blocksBuilt"
  1228 op or *tmp373 *tmp7 *tmp372
 
  1306 return :titaniumDrillScore*retaddr
  1307 end
  1308 label *label45
-    * op lessThan *tmp383 :buildTitaniumDrill:count .MAX_COUNT
-    * jump *label347 equal *tmp383 false
-    * op lessThan *tmp385 :buildTitaniumDrill:tiles .MAX_TILES
-    * jump *label349 equal *tmp385 false
+ 1309 jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
+ 1310 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1311 set :moveTo.2:x :buildTitaniumDrill:x
  1312 set :moveTo.2:y :buildTitaniumDrill:y
  1313 set *tmp387 :moveTo.2:x
 
  1379 call *label43 *invalid :buildBlockAtLocal*retval (m:*label359) (h:*label359)
  1380 label *label359
  1381 set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
-    * op notEqual *tmp405 :buildTitaniumDrill:drill null
-    * jump *label360 equal *tmp405 false
+ 1382 jump *label360 equal :buildTitaniumDrill:drill null
  1383 write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
  1384 write false processor8 ":addTitaniumDrill*finished"
  1385 write 1 processor8 "@counter"
 
  1426 label *label367
  1427 label *label370
  1428 read *tmp51 processor3 ".locations"
-    * op lessThan *tmp412 :buildTitaniumDrills:current *tmp51
-    * jump *label372 equal *tmp412 false
+ 1429 jump *label372 greaterThanEq :buildTitaniumDrills:current *tmp51
  1430 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1431 op add *tmp414 :buildTitaniumDrills:index 1
  1432 read :buildTitaniumDrills:size bank1 *tmp414
-    * op greaterThanEq *tmp417 :buildTitaniumDrills:size 3
-    * jump *label373 equal *tmp417 false
+ 1433 jump *label373 lessThan :buildTitaniumDrills:size 3
  1434 op add *tmp419 :buildTitaniumDrills:index 2
  1435 read :buildTitaniumDrills:x bank1 *tmp419
  1436 op add *tmp422 :buildTitaniumDrills:index 3
 
  1483 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1484 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1485 op add :buildTitaniumDrills:built *tmp435 :buildTitaniumDrill*retval
-    * op equal *tmp440 :buildTitaniumDrills:built 0
-    * jump *label379 equal *tmp440 false
+ 1486 jump *label379 notEqual :buildTitaniumDrills:built 0
  1487 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1488 set :buildTitaniumDrill:y :buildTitaniumDrills:y
  1489 set :buildTitaniumDrill:count :buildTitaniumDrills:count
 
  1504 label *label371
  1505 jump *label370 always
  1506 label *label372
-    * op greaterThanEq *tmp444 :buildTitaniumDrills:tiles .MAX_TILES
-    * jump *label382 equal *tmp444 false
+ 1507 jump *label382 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1508 jump *label369 always
  1509 jump *label383 always
  1510 label *label382
  1511 label *label383
-    * op greaterThanEq *tmp446 :buildTitaniumDrills:count .MAX_COUNT
-    * jump *label384 equal *tmp446 false
+ 1512 jump *label384 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1513 jump *label369 always
  1514 jump *label385 always
  1515 label *label384
  1516 label *label385
  1517 label *label368
  1518 read *tmp52 processor3 ".searchFinished"
-    * op equal *tmp448 *tmp52 false
-    * jump *label367 notEqual *tmp448 false
+ 1519 jump *label367 equal *tmp52 false
  1520 label *label369
  1521 label *label364
  1522 set :buildTitaniumDrills*finished true

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-46 instructions):
 
    96 sensor *tmp108 @unit @firstItem
    97 jump *label70 equal *tmp108 null
    98 ucontrol itemDrop @air 1000
-    * jump *label71 always
    99 label *label70
   100 label *label71
   101 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   175 setaddr :error*retaddr *label93 (h:*label93)
   176 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
   177 label *label93
-    * jump *label92 always
   178 label *label91
   179 label *label92
   180 label *label90
 
   203 setaddr :dropAll*retaddr *label100 (h:*label100)
   204 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   205 label *label100
-    * jump *label99 always
   206 label *label98
   207 label *label99
   208 set :status3:text "Mining..."
 
   217 op land *tmp139 *tmp137 *tmp138
   218 jump *label105 equal *tmp139 false
   219 jump *label104 always
-    * jump *label106 always
   220 label *label105
   221 label *label106
   222 ucontrol mine :mineOre:x :mineOre:y
   223 jump *label107 lessThanEq @second :mineOre:stop
   224 jump *label104 always
-    * jump *label108 always
   225 label *label107
   226 label *label108
   227 jump *label109 notEqual .noTarget false
 
   230 label *label111
   231 jump *label112 equal :targetMet*retval false
   232 jump *label104 always
-    * jump *label113 always
   233 label *label112
   234 label *label113
-    * jump *label110 always
   235 label *label109
   236 label *label110
   237 label *label103
 
   312 op land *tmp158 *tmp156 *tmp157
   313 jump *label129 equal *tmp158 false
   314 ucontrol itemDrop @air 1000
-    * jump *label130 always
   315 label *label129
   316 label *label130
   317 label *label127
 
   346 setaddr :mineOre*retaddr *label136 (h:*label136)
   347 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   348 label *label136
-    * jump *label135 always
   349 label *label134
   350 label *label135
   351 label *label132
 
   381 op land *tmp174 *tmp172 *tmp173
   382 jump *label145 equal *tmp174 false
   383 ucontrol itemDrop @air 1000
-    * jump *label146 always
   384 label *label145
   385 label *label146
   386 label *label143
 
   463 call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   464 label *label161
   465 label *label159
-    * jump *label157 always
   466 label *label156
   467 label *label157
-    * jump *label155 always
   468 label *label154
   469 label *label155
   470 set :fetchBlock:block .thoriumContainer
 
   480 set :setPolyTarget:target 4
   481 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   482 label *label166
-    * jump *label164 always
   483 label *label163
   484 label *label164
   485 label *label152
 
   514 call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
   515 label *label180
   516 set :supplyBase0:supplied true
-    * jump *label178 always
   517 label *label177
   518 label *label178
-    * jump *label176 always
   519 label *label175
   520 label *label176
   521 sensor *tmp233 AJTJK-battery1 @totalPower
 
   532 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   533 label *label186
   534 jump *label172 always
-    * jump *label184 always
   535 label *label183
   536 label *label184
-    * jump *label182 always
   537 label *label181
   538 label *label182
   539 sensor *tmp239 .core @silicon
 
   567 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   568 label *label200
   569 set :supplyBase0:supplied true
-    * jump *label198 always
   570 label *label197
   571 label *label198
   572 jump *label196 always
 
   582 label *label202
   583 set :supplyBase0:supplied true
   584 label *label196
-    * jump *label194 always
   585 label *label193
   586 label *label194
   587 label *label190
-    * jump *label188 always
   588 label *label187
   589 label *label188
-    * jump *label174 always
   590 label *label173
   591 label *label174
   592 sensor *tmp252 .core @titanium
 
   751 label *label231
   752 label *label214
   753 label *label210
-    * jump *label208 always
   754 label *label207
   755 label *label208
   756 jump *label206 always
 
   777 write @copper processor2 ".missing"
   778 set :targetMet*retval false
   779 jump *label254 always
-    * jump *label256 always
   780 label *label255
   781 label *label256
   782 sensor *tmp301 .core @lead
 
   784 write @lead processor2 ".missing"
   785 set :targetMet*retval false
   786 jump *label254 always
-    * jump *label258 always
   787 label *label257
   788 label *label258
   789 sensor *tmp304 .core @graphite
 
   791 write @graphite processor2 ".missing"
   792 set :targetMet*retval false
   793 jump *label254 always
-    * jump *label260 always
   794 label *label259
   795 label *label260
   796 sensor *tmp307 .core @silicon
 
   798 write @silicon processor2 ".missing"
   799 set :targetMet*retval false
   800 jump *label254 always
-    * jump *label262 always
   801 label *label261
   802 label *label262
   803 sensor *tmp310 .core @titanium
 
   805 write @titanium processor2 ".missing"
   806 set :targetMet*retval false
   807 jump *label254 always
-    * jump *label264 always
   808 label *label263
   809 label *label264
   810 sensor *tmp313 .core @metaglass
 
   812 write @metaglass processor2 ".missing"
   813 set :targetMet*retval false
   814 jump *label254 always
-    * jump *label266 always
   815 label *label265
   816 label *label266
   817 sensor *tmp316 .core @thorium
 
   819 write @thorium processor2 ".missing"
   820 set :targetMet*retval false
   821 jump *label254 always
-    * jump *label268 always
   822 label *label267
   823 label *label268
   824 set :targetMet*retval true
 
   924 label *label289
   925 jump *label288 always
   926 label *label290
-    * jump *label286 always
   927 label *label285
   928 label *label286
   929 label *label269
 
  1045 label *label305
  1046 set :buildRemoteBlock*retval :buildBlock*retval
  1047 jump *label301 always
-    * jump *label303 always
  1048 label *label302
  1049 label *label303
  1050 set :buildRemoteBlock*retval false
 
  1118 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1119 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1120 jump *label312 always
-    * jump *label318 always
  1121 label *label317
  1122 label *label318
  1123 set :buildError:text "Cannot build at position"
 
  1132 set .ERROR_Y :buildError:y
  1133 stop
  1134 label *label319
-    * jump *label316 always
  1135 label *label315
  1136 label *label316
  1137 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
 
  1166 jump *label328 equal @unit .builder
  1167 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1168 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * jump *label329 always
  1169 label *label328
  1170 label *label329
-    * jump *label327 always
  1171 label *label326
  1172 label *label327
  1173 label *label321
 
  1193 op or *tmp373 *tmp7 *tmp372
  1194 write *tmp373 processor2 ".blocksBuilt"
  1195 write :logBlock:index processor2 ".recentBuildIndex"
-    * jump *label333 always
  1196 label *label332
  1197 label *label333
  1198 label *label330
 
  1263 jump *label344 notEqual *tmp377 @ore-coal
  1264 label *label345
  1265 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * jump *label340 always
  1266 label *label344
  1267 label *label340
  1268 label *label339
 
  1358 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1359 set :buildTitaniumDrill*retval .positive
  1360 jump *label346 always
-    * jump *label361 always
  1361 label *label360
  1362 label *label361
-    * jump *label358 always
  1363 label *label357
  1364 label *label358
-    * jump *label350 always
  1365 label *label349
  1366 label *label350
-    * jump *label348 always
  1367 label *label347
  1368 label *label348
  1369 set :buildTitaniumDrill*retval 0
 
  1377 set :buildTitaniumDrills:tiles 0
  1378 jump *label365 equal .scrap false
  1379 op add .MAX_TILES .MAX_TILES 4
-    * jump *label366 always
  1380 label *label365
  1381 label *label366
  1382 wait 0.0001
 
  1452 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1453 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1454 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
-    * jump *label380 always
  1455 label *label379
  1456 label *label380
-    * jump *label374 always
  1457 label *label373
  1458 label *label374
  1459 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
 
  1462 label *label372
  1463 jump *label382 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1464 jump *label369 always
-    * jump *label383 always
  1465 label *label382
  1466 label *label383
  1467 jump *label384 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1468 jump *label369 always
-    * jump *label385 always
  1469 label *label384
  1470 label *label385
  1471 label *label368

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
   193 label *label96
   194 set :mineOre:x :locateOre:x
   195 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  196 set :moveToEmpty:x :locateOre:x
+  197 set :moveToEmpty:y :locateOre:y
   198 setaddr :moveToEmpty*retaddr *label97 (h:*label97)
   199 call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
   200 label *label97
 
   256 label *label116
   257 set *tmp148 :mineOre.1:ore
   258 set *tmp149 :mineOre.1:block
-    * set :mineOre:ore *tmp148
+  259 set :mineOre:ore :mineOre.1:ore
   260 set :mineOre:amount 28
-    * set :mineOre:block *tmp149
+  261 set :mineOre:block :mineOre.1:block
   262 setaddr :mineOre*retaddr *label117 (h:*label117)
   263 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   264 label *label117
 
   400 end
   401 label *label32
   402 set :unpackCfg:index 1
-    * set *tmp180 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  403 set *tmp180 1
+  404 op add :unpackCfg:index 1 1
   405 read *tmp181 :unpackCfg:cfg *tmp180
   406 op sub *tmp182 *tmp181 74
   407 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  408 set *tmp184 2
+  409 op add :unpackCfg:index 2 1
   410 read *tmp185 :unpackCfg:cfg *tmp184
   411 op sub *tmp186 *tmp185 74
   412 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  413 set *tmp188 3
+  414 op add :unpackCfg:index 3 1
   415 read *tmp189 :unpackCfg:cfg *tmp188
   416 op sub *tmp190 *tmp189 74
   417 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  418 set *tmp192 4
+  419 op add :unpackCfg:index 4 1
   420 read *tmp193 :unpackCfg:cfg *tmp192
   421 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  422 set *tmp195 5
+  423 op add :unpackCfg:index 5 1
   424 read *tmp196 :unpackCfg:cfg *tmp195
   425 op sub :unpackCfg:ind *tmp196 74
   426 sensor :unpackCfg:cu :unpackCfg:type @copper
 
   475 sensor *tmp220 .core @thorium
   476 jump *label163 lessThanEq *tmp220 400
   477 set :setMonoTarget:target 0
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  478 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   479 label *label165
   480 set :setPolyTarget:target 4
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  481 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   482 label *label166
   483 label *label163
   484 label *label164
 
   600 label *label204
   601 set :supplyBase0:titaniumTrigger *tmp254
   602 sensor *tmp258 .titaniumDrill @titanium
-    * jump *label205 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  603 jump *label205 greaterThanEq *tmp258 *tmp254
   604 jump *label207 notEqual :supplyBase0:supplied false
   605 sensor *tmp263 AJTJK-battery1 @totalPower
   606 op mul *tmp264 A©JNJP-unloader6 .powerTarget
 
   639 set *tmp277 A¨SSJh-container30
   640 label *label223
   641 set :supplyBase0:block *tmp277
-    * set :mineOre.1:ore :supplyBase0:ore
-    * set :mineOre.1:block :supplyBase0:block
+  642 set :mineOre.1:ore *tmp275
+  643 set :mineOre.1:block *tmp277
   644 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   645 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   646 label *label224
 
   666 set *tmp281 @sand
   667 label *label228
   668 set :supplyBase0:ore.1 *tmp281
-    * set :mineOre.2:ore :supplyBase0:ore.1
+  669 set :mineOre.2:ore *tmp281
   670 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   671 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   672 label *label229
 
   741 set *tmp297 @sand
   742 label *label250
   743 set :supplyBase0:ore.2 *tmp297
-    * set :mineOre.2:ore :supplyBase0:ore.2
+  744 set :mineOre.2:ore *tmp297
   745 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   746 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   747 label *label251
 
   823 label *label268
   824 set :targetMet*retval true
   825 jump *label254 always
-    * set :targetMet*retval null
   826 label *label254
   827 return :targetMet*retaddr
   828 end
 
   893 op add *tmp330 :meetTargetLocal:graphite *tmp329
   894 write *tmp330 AÕFFJS-micro-processor9 ".graphiteReserve"
   895 write lead processor7 ".leadTarget"
-    * write copper processor7 ".copperTarget"
+  896 write :meetTargetLocal:copper processor7 ".copperTarget"
   897 label *label280
   898 setaddr :targetMet*retaddr *label283 (h:*label283)
   899 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
 
   959 set :meetTargetCfg:ti :unpackCfg:ti
   960 set :meetTargetCfg:mg :unpackCfg:mg
   961 set :meetTargetCfg:th :unpackCfg:th
-    * set :meetTargetLocal:block :meetTargetCfg:type
-    * set :meetTargetLocal:copper :meetTargetCfg:cu
-    * set :meetTargetLocal:lead :meetTargetCfg:pb
-    * set :meetTargetLocal:graphite :meetTargetCfg:gr
-    * set :meetTargetLocal:silicon :meetTargetCfg:si
-    * set :meetTargetLocal:titanium :meetTargetCfg:ti
-    * set :meetTargetLocal:metaglass :meetTargetCfg:mg
-    * set :meetTargetLocal:thorium :meetTargetCfg:th
+  962 set :meetTargetLocal:block :unpackCfg:type
+  963 set :meetTargetLocal:copper :unpackCfg:cu
+  964 set :meetTargetLocal:lead :unpackCfg:pb
+  965 set :meetTargetLocal:graphite :unpackCfg:gr
+  966 set :meetTargetLocal:silicon :unpackCfg:si
+  967 set :meetTargetLocal:titanium :unpackCfg:ti
+  968 set :meetTargetLocal:metaglass :unpackCfg:mg
+  969 set :meetTargetLocal:thorium :unpackCfg:th
   970 set :meetTargetLocal:forBuild false
   971 set :meetTargetLocal:isNoTarget false
   972 setaddr :meetTargetLocal*retaddr *label297 (h:*label297)
 
  1003 set :buildBlock:built :buildBlockAtLocal*retval
  1004 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1005 write 2 AÕFFJS-micro-processor9 "@counter"
-    * set :buildBlock*retval :buildBlock:built
+ 1006 set :buildBlock*retval :buildBlockAtLocal*retval
  1007 jump *label298 always
-    * set :buildBlock*retval null
  1008 label *label298
  1009 return :buildBlock*retaddr
  1010 end
 
  1025 set :buildRemoteBlock:th :unpackCfg:th
  1026 set :buildRemoteBlock:rotation :unpackCfg:rotation
  1027 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1028 set :buildBlock:block :unpackCfg:type
  1029 set :buildBlock:x :buildRemoteBlock:x
  1030 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1031 set :buildBlock:copper :unpackCfg:cu
+ 1032 set :buildBlock:lead :unpackCfg:pb
+ 1033 set :buildBlock:graphite :unpackCfg:gr
+ 1034 set :buildBlock:silicon :unpackCfg:si
+ 1035 set :buildBlock:titanium :unpackCfg:ti
+ 1036 set :buildBlock:metaglass :unpackCfg:mg
+ 1037 set :buildBlock:thorium :unpackCfg:th
+ 1038 set :buildBlock:rotation :unpackCfg:rotation
  1039 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+ 1040 set :buildBlock:index :unpackCfg:ind
  1041 setaddr :buildBlock*retaddr *label305 (h:*label305)
  1042 call *label41 *invalid :buildBlock*retval (m:*label305) (h:*label305)
  1043 label *label305
 
  1047 label *label303
  1048 set :buildRemoteBlock*retval false
  1049 jump *label301 always
-    * set :buildRemoteBlock*retval null
  1050 label *label301
  1051 set :buildRemoteBlock*finished true
  1052 jump *label54 always
 
  1068 set :buildBlockFromCfg:th :unpackCfg:th
  1069 set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1070 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp341 .coreX :buildBlockFromCfg:x
-    * op add *tmp342 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1071 op add *tmp341 .coreX :unpackCfg:x
+ 1072 op add *tmp342 .coreY :unpackCfg:y
+ 1073 set :buildBlock:block :unpackCfg:type
  1074 set :buildBlock:x *tmp341
  1075 set :buildBlock:y *tmp342
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1076 set :buildBlock:copper :unpackCfg:cu
+ 1077 set :buildBlock:lead :unpackCfg:pb
+ 1078 set :buildBlock:graphite :unpackCfg:gr
+ 1079 set :buildBlock:silicon :unpackCfg:si
+ 1080 set :buildBlock:titanium :unpackCfg:ti
+ 1081 set :buildBlock:metaglass :unpackCfg:mg
+ 1082 set :buildBlock:thorium :unpackCfg:th
+ 1083 set :buildBlock:rotation :unpackCfg:rotation
  1084 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+ 1085 set :buildBlock:index :unpackCfg:ind
  1086 setaddr :buildBlock*retaddr *label308 (h:*label308)
  1087 call *label41 *invalid :buildBlock*retval (m:*label308) (h:*label308)
  1088 label *label308
  1089 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor2 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor9 :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+ 1090 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+ 1091 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
+ 1092 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
+ 1093 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
+ 1094 set :buildBlockFromCfg*retval :buildBlock*retval
  1095 jump *label306 always
-    * set :buildBlockFromCfg*retval null
  1096 label *label306
  1097 set :buildBlockFromCfg*finished true
  1098 jump *label54 always
 
  1100 label *label43
  1101 set :moveTo.1:x :buildBlockAtLocal:x
  1102 set :moveTo.1:y :buildBlockAtLocal:y
-    * set *tmp343 :moveTo.1:x
-    * set *tmp344 :moveTo.1:y
-    * set :moveTo:x *tmp343
-    * set :moveTo:y *tmp344
+ 1103 set *tmp343 :buildBlockAtLocal:x
+ 1104 set *tmp344 :buildBlockAtLocal:y
+ 1105 set :moveTo:x :moveTo.1:x
+ 1106 set :moveTo:y :moveTo.1:y
  1107 set :moveTo:radius 6
  1108 setaddr :moveTo*retaddr *label314 (h:*label314)
  1109 call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
 
  1121 set :buildError:type :buildBlockAtLocal:type
  1122 set :buildError:x :buildBlockAtLocal:x
  1123 set :buildError:y :buildBlockAtLocal:y
-    * set .ERROR :buildError:text
-    * set .ERROR_FOUND_BLOCK :buildError:block
-    * set .ERROR_FOUND_TYPE :buildError:type
-    * set .ERROR_X :buildError:x
-    * set .ERROR_Y :buildError:y
+ 1124 set .ERROR "Cannot build at position"
+ 1125 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
+ 1126 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
+ 1127 set .ERROR_X :buildBlockAtLocal:x
+ 1128 set .ERROR_Y :buildBlockAtLocal:y
  1129 stop
  1130 label *label319
  1131 label *label315
 
  1145 set :buildError.1:type :buildBlockAtLocal:type
  1146 set :buildError.1:x :buildBlockAtLocal:x
  1147 set :buildError.1:y :buildBlockAtLocal:y
-    * set .ERROR :buildError.1:text
-    * set .ERROR_FOUND_BLOCK :buildError.1:block
-    * set .ERROR_FOUND_TYPE :buildError.1:type
-    * set .ERROR_X :buildError.1:x
-    * set .ERROR_Y :buildError.1:y
+ 1148 set .ERROR "Error while building"
+ 1149 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
+ 1150 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
+ 1151 set .ERROR_X :buildBlockAtLocal:x
+ 1152 set .ERROR_Y :buildBlockAtLocal:y
  1153 stop
  1154 label *label325
  1155 jump *label324 always
 
  1173 ubind .builder
  1174 set :logBlock:block :buildBlockAtLocal:block
  1175 set :logBlock:index :buildBlockAtLocal:index
-    * sensor :log:encodedId :logBlock:block @id
+ 1176 sensor :log:encodedId :buildBlockAtLocal:block @id
  1177 read *tmp100 bank1 511
  1178 op sub *tmp365 *tmp100 1
  1179 write *tmp365 bank1 511
 
  1181 read *tmp0 processor1 "time"
  1182 op mul *tmp368 *tmp0 1000
  1183 op add *tmp369 :log:encodedId *tmp368
-    * write *tmp369 bank1 *tmp366
+ 1184 write *tmp369 bank1 *tmp365
  1185 label *label331
-    * jump *label332 lessThan :logBlock:index 0
-    * op shl *tmp372 1 :logBlock:index
+ 1186 jump *label332 lessThan :buildBlockAtLocal:index 0
+ 1187 op shl *tmp372 1 :buildBlockAtLocal:index
  1188 read *tmp7 processor2 ".blocksBuilt"
  1189 op or *tmp373 *tmp7 *tmp372
  1190 write *tmp373 processor2 ".blocksBuilt"
-    * write :logBlock:index processor2 ".recentBuildIndex"
+ 1191 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
  1192 label *label332
  1193 label *label333
  1194 label *label330
  1195 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1196 jump *label312 always
-    * set :buildBlockAtLocal*retval null
  1197 label *label312
  1198 return :buildBlockAtLocal*retaddr
  1199 end
 
  1209 label *label335
  1210 set :buildBlockAt*retval :buildBlockAtLocal*retval
  1211 jump *label334 always
-    * set :buildBlockAt*retval null
  1212 label *label334
  1213 set :buildBlockAt*finished true
  1214 jump *label54 always
 
  1224 call *label43 *invalid :buildBlockAtLocal*retval (m:*label337) (h:*label337)
  1225 label *label337
  1226 set :buildFirstTitaniumDrillAt:drill :buildBlockAtLocal*retval
-    * write :buildFirstTitaniumDrillAt:drill processor8 ":addTitaniumDrill:drill"
+ 1227 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1228 write false processor8 ":addTitaniumDrill*finished"
  1229 write 1 processor8 "@counter"
  1230 label *label338
  1231 wait 1e-15
  1232 read *tmp375 processor8 ":addTitaniumDrill*finished"
  1233 jump *label338 equal *tmp375 false
-    * set :buildFirstTitaniumDrillAt*retval :buildFirstTitaniumDrillAt:drill
+ 1234 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
  1235 jump *label336 always
-    * set :buildFirstTitaniumDrillAt*retval null
  1236 label *label336
  1237 set :buildFirstTitaniumDrillAt*finished true
  1238 jump *label54 always
 
  1240 label *label44
  1241 set :getFloor:x :titaniumDrillScore:x
  1242 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y *tmp379 *tmp378 :getFloor:floor
+ 1243 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
  1244 set *tmp377 :getFloor:floor
  1245 jump *label341 always
-    * set *tmp377 null
  1246 label *label341
-    * jump *label342 notEqual *tmp377 @ore-titanium
+ 1247 jump *label342 notEqual :getFloor:floor @ore-titanium
  1248 label *label343
  1249 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1250 jump *label340 always
  1251 label *label342
-    * jump *label345 equal *tmp377 @ore-copper
-    * jump *label345 equal *tmp377 @ore-lead
-    * jump *label345 equal *tmp377 @ore-scrap
-    * jump *label344 notEqual *tmp377 @ore-coal
+ 1252 jump *label345 equal :getFloor:floor @ore-copper
+ 1253 jump *label345 equal :getFloor:floor @ore-lead
+ 1254 jump *label345 equal :getFloor:floor @ore-scrap
+ 1255 jump *label344 notEqual :getFloor:floor @ore-coal
  1256 label *label345
  1257 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1258 label *label344
 
  1265 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1266 set :moveTo.2:x :buildTitaniumDrill:x
  1267 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp387 :moveTo.2:x
-    * set *tmp388 :moveTo.2:y
-    * set :moveTo:x *tmp387
-    * set :moveTo:y *tmp388
+ 1268 set *tmp387 :buildTitaniumDrill:x
+ 1269 set *tmp388 :buildTitaniumDrill:y
+ 1270 set :moveTo:x :moveTo.2:x
+ 1271 set :moveTo:y :moveTo.2:y
  1272 set :moveTo:radius 6
  1273 setaddr :moveTo*retaddr *label352 (h:*label352)
  1274 call *label19 *invalid :moveTo*retval (m:*label352) (h:*label352)
 
  1334 call *label43 *invalid :buildBlockAtLocal*retval (m:*label359) (h:*label359)
  1335 label *label359
  1336 set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
-    * jump *label360 equal :buildTitaniumDrill:drill null
-    * write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
+ 1337 jump *label360 equal :buildBlockAtLocal*retval null
+ 1338 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1339 write false processor8 ":addTitaniumDrill*finished"
  1340 write 1 processor8 "@counter"
  1341 label *label362
 
  1344 jump *label362 equal *tmp408 false
  1345 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1346 set :setFlareTarget:target :buildTitaniumDrill:count
-    * op min *tmp409 :setFlareTarget:target 8
+ 1347 op min *tmp409 :buildTitaniumDrill:count 8
  1348 write *tmp409 AÕFFJS-micro-processor9 ".flareTarget"
  1349 label *label363
  1350 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
 
  1360 label *label348
  1361 set :buildTitaniumDrill*retval 0
  1362 jump *label346 always
-    * set :buildTitaniumDrill*retval null
  1363 label *label346
  1364 return :buildTitaniumDrill*retaddr
  1365 end
 
  1400 op sub *tmp429 :buildTitaniumDrills:y 1
  1401 set :buildTitaniumDrill:x *tmp428
  1402 set :buildTitaniumDrill:y *tmp429
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1403 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1404 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1405 setaddr :buildTitaniumDrill*retaddr *label376 (h:*label376)
  1406 call *label45 *invalid :buildTitaniumDrill*retval (m:*label376) (h:*label376)
  1407 label *label376
 
  1412 op add *tmp433 :buildTitaniumDrills:y 1
  1413 set :buildTitaniumDrill:x *tmp432
  1414 set :buildTitaniumDrill:y *tmp433
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1415 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1416 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1417 setaddr :buildTitaniumDrill*retaddr *label377 (h:*label377)
  1418 call *label45 *invalid :buildTitaniumDrill*retval (m:*label377) (h:*label377)
  1419 label *label377
 
  1424 op add *tmp437 :buildTitaniumDrills:y 1
  1425 set :buildTitaniumDrill:x *tmp436
  1426 set :buildTitaniumDrill:y *tmp437
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1427 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1428 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1429 setaddr :buildTitaniumDrill*retaddr *label378 (h:*label378)
  1430 call *label45 *invalid :buildTitaniumDrill*retval (m:*label378) (h:*label378)
  1431 label *label378
 
  1435 jump *label379 notEqual :buildTitaniumDrills:built 0
  1436 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1437 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1438 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1439 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1440 setaddr :buildTitaniumDrill*retaddr *label381 (h:*label381)
  1441 call *label45 *invalid :buildTitaniumDrill*retval (m:*label381) (h:*label381)
  1442 label *label381

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-70 instructions):
 
   254 setaddr :status2*retaddr *label116 (h:*label116)
   255 call *label15 *invalid :status2*retval (m:*label116) (h:*label116)
   256 label *label116
-    * set *tmp148 :mineOre.1:ore
-    * set *tmp149 :mineOre.1:block
   257 set :mineOre:ore :mineOre.1:ore
   258 set :mineOre:amount 28
   259 set :mineOre:block :mineOre.1:block
 
   397 return :supplyBlockFromCore*retaddr
   398 end
   399 label *label32
-    * set :unpackCfg:index 1
   400 set *tmp180 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp181 :unpackCfg:cfg *tmp180
+  401 read *tmp181 :unpackCfg:cfg 1
   402 op sub *tmp182 *tmp181 74
   403 lookup block :unpackCfg:type *tmp182
   404 set *tmp184 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp185 :unpackCfg:cfg *tmp184
+  405 read *tmp185 :unpackCfg:cfg 2
   406 op sub *tmp186 *tmp185 74
   407 op div :unpackCfg:x *tmp186 2
   408 set *tmp188 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp189 :unpackCfg:cfg *tmp188
+  409 read *tmp189 :unpackCfg:cfg 3
   410 op sub *tmp190 *tmp189 74
   411 op div :unpackCfg:y *tmp190 2
   412 set *tmp192 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp193 :unpackCfg:cfg *tmp192
+  413 read *tmp193 :unpackCfg:cfg 4
   414 op sub :unpackCfg:rotation *tmp193 74
   415 set *tmp195 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp196 :unpackCfg:cfg *tmp195
+  416 read *tmp196 :unpackCfg:cfg 5
   417 op sub :unpackCfg:ind *tmp196 74
   418 sensor :unpackCfg:cu :unpackCfg:type @copper
   419 sensor :unpackCfg:pb :unpackCfg:type @lead
 
   466 label *label162
   467 sensor *tmp220 .core @thorium
   468 jump *label163 lessThanEq *tmp220 400
-    * set :setMonoTarget:target 0
   469 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   470 label *label165
-    * set :setPolyTarget:target 4
   471 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   472 label *label166
   473 label *label163
 
   588 label *label203
   589 set *tmp254 100
   590 label *label204
-    * set :supplyBase0:titaniumTrigger *tmp254
   591 sensor *tmp258 .titaniumDrill @titanium
   592 jump *label205 greaterThanEq *tmp258 *tmp254
   593 jump *label207 notEqual :supplyBase0:supplied false
 
   620 label *label220
   621 set *tmp275 @scrap
   622 label *label221
-    * set :supplyBase0:ore *tmp275
   623 jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   624 set *tmp277 .core
   625 jump *label223 always
   626 label *label222
   627 set *tmp277 A¨SSJh-container30
   628 label *label223
-    * set :supplyBase0:block *tmp277
   629 set :mineOre.1:ore *tmp275
   630 set :mineOre.1:block *tmp277
   631 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   652 label *label227
   653 set *tmp281 @sand
   654 label *label228
-    * set :supplyBase0:ore.1 *tmp281
   655 set :mineOre.2:ore *tmp281
   656 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   657 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
 
   726 label *label249
   727 set *tmp297 @sand
   728 label *label250
-    * set :supplyBase0:ore.2 *tmp297
   729 set :mineOre.2:ore *tmp297
   730 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   731 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
 
   936 setaddr :unpackCfg*retaddr *label296 (h:*label296)
   937 call *label32 *invalid :unpackCfg*retval (m:*label296) (h:*label296)
   938 label *label296
-    * set :meetTargetCfg:type :unpackCfg:type
-    * set :meetTargetCfg:cu :unpackCfg:cu
-    * set :meetTargetCfg:pb :unpackCfg:pb
-    * set :meetTargetCfg:gr :unpackCfg:gr
-    * set :meetTargetCfg:si :unpackCfg:si
-    * set :meetTargetCfg:ti :unpackCfg:ti
-    * set :meetTargetCfg:mg :unpackCfg:mg
-    * set :meetTargetCfg:th :unpackCfg:th
   939 set :meetTargetLocal:block :unpackCfg:type
   940 set :meetTargetLocal:copper :unpackCfg:cu
   941 set :meetTargetLocal:lead :unpackCfg:pb
 
   977 setaddr :buildBlockAtLocal*retaddr *label300 (h:*label300)
   978 call *label43 *invalid :buildBlockAtLocal*retval (m:*label300) (h:*label300)
   979 label *label300
-    * set :buildBlock:built :buildBlockAtLocal*retval
   980 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   981 write 2 AÕFFJS-micro-processor9 "@counter"
   982 set :buildBlock*retval :buildBlockAtLocal*retval
 
   991 setaddr :unpackCfg*retaddr *label304 (h:*label304)
   992 call *label32 *invalid :unpackCfg*retval (m:*label304) (h:*label304)
   993 label *label304
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   994 set :buildBlock:block :unpackCfg:type
   995 set :buildBlock:x :buildRemoteBlock:x
   996 set :buildBlock:y :buildRemoteBlock:y
 
  1022 setaddr :unpackCfg*retaddr *label307 (h:*label307)
  1023 call *label32 *invalid :unpackCfg*retval (m:*label307) (h:*label307)
  1024 label *label307
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
  1025 op add *tmp341 .coreX :unpackCfg:x
  1026 op add *tmp342 .coreY :unpackCfg:y
  1027 set :buildBlock:block :unpackCfg:type
 
  1040 setaddr :buildBlock*retaddr *label308 (h:*label308)
  1041 call *label41 *invalid :buildBlock*retval (m:*label308) (h:*label308)
  1042 label *label308
-    * set :buildBlockFromCfg:building :buildBlock*retval
  1043 write :buildBlock*retval @this :buildBlockFromCfg:cfg
  1044 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
  1045 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
 
  1053 label *label43
  1054 set :moveTo.1:x :buildBlockAtLocal:x
  1055 set :moveTo.1:y :buildBlockAtLocal:y
-    * set *tmp343 :buildBlockAtLocal:x
-    * set *tmp344 :buildBlockAtLocal:y
-    * set :moveTo:x :moveTo.1:x
-    * set :moveTo:y :moveTo.1:y
+ 1056 set :moveTo:x :buildBlockAtLocal:x
+ 1057 set :moveTo:y :buildBlockAtLocal:y
  1058 set :moveTo:radius 6
  1059 setaddr :moveTo*retaddr *label314 (h:*label314)
  1060 call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
 
  1067 jump *label312 always
  1068 label *label317
  1069 label *label318
-    * set :buildError:text "Cannot build at position"
-    * set :buildError:block :buildBlockAtLocal:block
-    * set :buildError:type :buildBlockAtLocal:type
-    * set :buildError:x :buildBlockAtLocal:x
-    * set :buildError:y :buildBlockAtLocal:y
  1070 set .ERROR "Cannot build at position"
  1071 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
  1072 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
 
  1086 op equal *tmp354 :buildBlockAtLocal:success false
  1087 op land *tmp355 *tmp353 *tmp354
  1088 jump *label323 equal *tmp355 false
-    * set :buildError.1:text "Error while building"
-    * set :buildError.1:block :buildBlockAtLocal:block
-    * set :buildError.1:type :buildBlockAtLocal:type
-    * set :buildError.1:x :buildBlockAtLocal:x
-    * set :buildError.1:y :buildBlockAtLocal:y
  1089 set .ERROR "Error while building"
  1090 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
  1091 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
 
  1112 label *label322
  1113 control enabled processor6 true
  1114 ubind .builder
-    * set :logBlock:block :buildBlockAtLocal:block
-    * set :logBlock:index :buildBlockAtLocal:index
  1115 sensor :log:encodedId :buildBlockAtLocal:block @id
  1116 read *tmp100 bank1 511
  1117 op sub *tmp365 *tmp100 1
  1118 write *tmp365 bank1 511
-    * set *tmp366 *tmp365
  1119 read *tmp0 processor1 "time"
  1120 op mul *tmp368 *tmp0 1000
  1121 op add *tmp369 :log:encodedId *tmp368
 
  1161 setaddr :buildBlockAtLocal*retaddr *label337 (h:*label337)
  1162 call *label43 *invalid :buildBlockAtLocal*retval (m:*label337) (h:*label337)
  1163 label *label337
-    * set :buildFirstTitaniumDrillAt:drill :buildBlockAtLocal*retval
  1164 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1165 write false processor8 ":addTitaniumDrill*finished"
  1166 write 1 processor8 "@counter"
 
  1175 jump *label54 always
  1176 end
  1177 label *label44
-    * set :getFloor:x :titaniumDrillScore:x
-    * set :getFloor:y :titaniumDrillScore:y
  1178 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
-    * set *tmp377 :getFloor:floor
  1179 jump *label341 always
  1180 label *label341
  1181 jump *label342 notEqual :getFloor:floor @ore-titanium
 
  1199 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1200 set :moveTo.2:x :buildTitaniumDrill:x
  1201 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp387 :buildTitaniumDrill:x
-    * set *tmp388 :buildTitaniumDrill:y
-    * set :moveTo:x :moveTo.2:x
-    * set :moveTo:y :moveTo.2:y
+ 1202 set :moveTo:x :buildTitaniumDrill:x
+ 1203 set :moveTo:y :buildTitaniumDrill:y
  1204 set :moveTo:radius 6
  1205 setaddr :moveTo*retaddr *label352 (h:*label352)
  1206 call *label19 *invalid :moveTo*retval (m:*label352) (h:*label352)
 
  1265 setaddr :buildBlockAtLocal*retaddr *label359 (h:*label359)
  1266 call *label43 *invalid :buildBlockAtLocal*retval (m:*label359) (h:*label359)
  1267 label *label359
-    * set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
  1268 jump *label360 equal :buildBlockAtLocal*retval null
  1269 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1270 write false processor8 ":addTitaniumDrill*finished"
 
  1274 read *tmp408 processor8 ":addTitaniumDrill*finished"
  1275 jump *label362 equal *tmp408 false
  1276 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
-    * set :setFlareTarget:target :buildTitaniumDrill:count
  1277 op min *tmp409 :buildTitaniumDrill:count 8
  1278 write *tmp409 AÕFFJS-micro-processor9 ".flareTarget"
  1279 label *label363

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-9 instructions):
 
   397 return :supplyBlockFromCore*retaddr
   398 end
   399 label *label32
-    * set *tmp180 1
   400 read *tmp181 :unpackCfg:cfg 1
   401 op sub *tmp182 *tmp181 74
   402 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 2
   403 read *tmp185 :unpackCfg:cfg 2
   404 op sub *tmp186 *tmp185 74
   405 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 3
   406 read *tmp189 :unpackCfg:cfg 3
   407 op sub *tmp190 *tmp189 74
   408 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 4
   409 read *tmp193 :unpackCfg:cfg 4
   410 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 5
   411 read *tmp196 :unpackCfg:cfg 5
   412 op sub :unpackCfg:ind *tmp196 74
   413 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1046 jump *label54 always
  1047 end
  1048 label *label43
-    * set :moveTo.1:x :buildBlockAtLocal:x
-    * set :moveTo.1:y :buildBlockAtLocal:y
  1049 set :moveTo:x :buildBlockAtLocal:x
  1050 set :moveTo:y :buildBlockAtLocal:y
  1051 set :moveTo:radius 6
 
  1190 label *label45
  1191 jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1192 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * set :moveTo.2:x :buildTitaniumDrill:x
-    * set :moveTo.2:y :buildTitaniumDrill:y
  1193 set :moveTo:x :buildTitaniumDrill:x
  1194 set :moveTo:y :buildTitaniumDrill:y
  1195 set :moveTo:radius 6

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    76 setaddr :status3*retaddr *label61 (h:*label61)
    77 call *label16 *invalid :status3*retval (m:*label61) (h:*label61)
    78 label *label61
+   79 op sub *tmp107 :moveTo:radius 0.5
    80 label *label62
    81 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    82 jump *label64 notEqual *tmp105 false
-    * op sub *tmp107 :moveTo:radius 0.5
    83 ucontrol approach :moveTo:x :moveTo:y *tmp107
    84 label *label63
    85 jump *label62 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-12 instructions):
 
   609 jump *label218 equal A¨SSJh-container30 false
   610 sensor :supplyBase0:coal .core @coal
   611 sensor :supplyBase0:sand A¨SSJh-container30 @sand
-    * jump *label220 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp275 @coal
-    * jump *label221 always
-    * label *label220
-    * set *tmp275 @scrap
-    * label *label221
-    * jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp277 .core
-    * jump *label223 always
-    * label *label222
-    * set *tmp277 A¨SSJh-container30
-    * label *label223
+  612 select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  613 select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand .core A¨SSJh-container30
   614 set :mineOre.1:ore *tmp275
   615 set :mineOre.1:block *tmp277
   616 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   631 label *label226
   632 sensor :supplyBase0:coal.1 .core @coal
   633 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label227 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp281 @coal
-    * jump *label228 always
-    * label *label227
-    * set *tmp281 @sand
-    * label *label228
+  634 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   635 set :mineOre.2:ore *tmp281
   636 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   637 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
 
   696 label *label248
   697 jump *label247 always
   698 label *label246
-    * sensor *tmp293 .core @coal
-    * sensor *tmp294 .core @sand
-    * op lessThanEq *tmp295 *tmp293 *tmp294
-    * op or *tmp296 .scrap *tmp295
-    * jump *label249 equal *tmp296 false
-    * set *tmp297 @coal
-    * jump *label250 always
-    * label *label249
-    * set *tmp297 @sand
-    * label *label250
+  699 sensor *tmp293 .core @coal
+  700 sensor *tmp294 .core @sand
+  701 op lessThanEq *tmp295 *tmp293 *tmp294
+  702 op or *tmp296 .scrap *tmp295
+  703 select *tmp297 notEqual *tmp296 false @coal @sand
   704 set :mineOre.2:ore *tmp297
   705 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   706 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   574 label *label188
   575 label *label173
   576 label *label174
+  577 set *tmp254 100
   578 sensor *tmp252 .core @titanium
-    * jump *label203 greaterThanEq *tmp252 titanium
+  579 jump *label204 greaterThanEq *tmp252 titanium
   580 sensor *tmp255 .core @titanium
   581 op sub *tmp256 titanium *tmp255
   582 op min *tmp254 5 *tmp256
   583 jump *label204 always
-    * label *label203
-    * set *tmp254 100
   584 label *label204
   585 sensor *tmp258 .titaniumDrill @titanium
   586 jump *label205 greaterThanEq *tmp258 *tmp254

Modifications by Unroll iteration loop at BuilderController.mnd:203:5 (-2 instructions):
 
   787 end
   788 label *label40
   789 set :meetTargetLocal:count 0
-    * set :meetTargetLocal:t :meetTargetLocal:copper
-    * setaddr *tmp319 *label273
-    * jump *label270 always
-    * multilabel *label273 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:lead
-    * setaddr *tmp319 *label274
-    * jump *label270 always
-    * multilabel *label274 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:graphite
-    * setaddr *tmp319 *label275
-    * jump *label270 always
-    * multilabel *label275 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:silicon
-    * setaddr *tmp319 *label276
-    * jump *label270 always
-    * multilabel *label276 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:titanium
-    * setaddr *tmp319 *label277
-    * jump *label270 always
-    * multilabel *label277 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:metaglass
-    * setaddr *tmp319 *label278
-    * jump *label270 always
-    * multilabel *label278 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:thorium
-    * setaddr *tmp319 *label279
-    * label *label270
-    * op sign *tmp320 :meetTargetLocal:t
-    * op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label271
-    * multijump *tmp319 0 0 (m:marker0)
-    * multilabel *label279 (m:marker0)
-    * label *label272
+  790 set :meetTargetLocal:t :meetTargetLocal:copper
+  791 label *label388
+  792 op sign *tmp320 :meetTargetLocal:t
+  793 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  794 label *label389
+  795 set :meetTargetLocal:t :meetTargetLocal:lead
+  796 label *label392
+  797 op sign *tmp320 :meetTargetLocal:t
+  798 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  799 label *label393
+  800 set :meetTargetLocal:t :meetTargetLocal:graphite
+  801 label *label396
+  802 op sign *tmp320 :meetTargetLocal:t
+  803 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  804 label *label397
+  805 set :meetTargetLocal:t :meetTargetLocal:silicon
+  806 label *label400
+  807 op sign *tmp320 :meetTargetLocal:t
+  808 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  809 label *label401
+  810 set :meetTargetLocal:t :meetTargetLocal:titanium
+  811 label *label404
+  812 op sign *tmp320 :meetTargetLocal:t
+  813 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  814 label *label405
+  815 set :meetTargetLocal:t :meetTargetLocal:metaglass
+  816 label *label408
+  817 op sign *tmp320 :meetTargetLocal:t
+  818 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  819 label *label409
+  820 set :meetTargetLocal:t :meetTargetLocal:thorium
+  821 label *label412
+  822 op sign *tmp320 :meetTargetLocal:t
+  823 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  824 label *label413
+  825 label *label272
   826 write :meetTargetLocal:count processor2 ".totalTargets"
   827 write :meetTargetLocal:block processor2 ".nextBlock"
   828 write :meetTargetLocal:copper processor2 ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   789 set :meetTargetLocal:count 0
   790 set :meetTargetLocal:t :meetTargetLocal:copper
   791 label *label388
-    * op sign *tmp320 :meetTargetLocal:t
-    * op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  792 op sign *tmp320 :meetTargetLocal:copper
+  793 op add :meetTargetLocal:count 0 *tmp320
   794 label *label389
   795 set :meetTargetLocal:t :meetTargetLocal:lead
   796 label *label392
-    * op sign *tmp320 :meetTargetLocal:t
+  797 op sign *tmp320 :meetTargetLocal:lead
   798 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   799 label *label393
   800 set :meetTargetLocal:t :meetTargetLocal:graphite
   801 label *label396
-    * op sign *tmp320 :meetTargetLocal:t
+  802 op sign *tmp320 :meetTargetLocal:graphite
   803 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   804 label *label397
   805 set :meetTargetLocal:t :meetTargetLocal:silicon
   806 label *label400
-    * op sign *tmp320 :meetTargetLocal:t
+  807 op sign *tmp320 :meetTargetLocal:silicon
   808 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   809 label *label401
   810 set :meetTargetLocal:t :meetTargetLocal:titanium
   811 label *label404
-    * op sign *tmp320 :meetTargetLocal:t
+  812 op sign *tmp320 :meetTargetLocal:titanium
   813 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   814 label *label405
   815 set :meetTargetLocal:t :meetTargetLocal:metaglass
   816 label *label408
-    * op sign *tmp320 :meetTargetLocal:t
+  817 op sign *tmp320 :meetTargetLocal:metaglass
   818 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   819 label *label409
   820 set :meetTargetLocal:t :meetTargetLocal:thorium
   821 label *label412
-    * op sign *tmp320 :meetTargetLocal:t
+  822 op sign *tmp320 :meetTargetLocal:thorium
   823 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   824 label *label413
   825 label *label272

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   786 return :targetMet*retaddr
   787 end
   788 label *label40
-    * set :meetTargetLocal:count 0
-    * set :meetTargetLocal:t :meetTargetLocal:copper
   789 label *label388
   790 op sign *tmp320 :meetTargetLocal:copper
   791 op add :meetTargetLocal:count 0 *tmp320
   792 label *label389
-    * set :meetTargetLocal:t :meetTargetLocal:lead
   793 label *label392
   794 op sign *tmp320 :meetTargetLocal:lead
   795 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   796 label *label393
-    * set :meetTargetLocal:t :meetTargetLocal:graphite
   797 label *label396
   798 op sign *tmp320 :meetTargetLocal:graphite
   799 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   800 label *label397
-    * set :meetTargetLocal:t :meetTargetLocal:silicon
   801 label *label400
   802 op sign *tmp320 :meetTargetLocal:silicon
   803 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   804 label *label401
-    * set :meetTargetLocal:t :meetTargetLocal:titanium
   805 label *label404
   806 op sign *tmp320 :meetTargetLocal:titanium
   807 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   808 label *label405
-    * set :meetTargetLocal:t :meetTargetLocal:metaglass
   809 label *label408
   810 op sign *tmp320 :meetTargetLocal:metaglass
   811 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   812 label *label409
-    * set :meetTargetLocal:t :meetTargetLocal:thorium
   813 label *label412
   814 op sign *tmp320 :meetTargetLocal:thorium
   815 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-18 instructions):
 
    42 wait 1e12
    43 jump *label54 always
    44 end
-    * label *label14
-    * write :status1:text processor2 ".status1"
-    * label *label55
-    * return :status1*retaddr
-    * end
    45 label *label15
    46 write :status2:text processor2 ".status2"
    47 write :status2:item processor2 ".item2"
 
   423 write *tmp209 processor7 ".sandTarget"
   424 jump *label150 equal .thoriumContainer false
   425 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label153 (h:*label153)
-    * call *label14 *invalid :status1*retval (m:*label153) (h:*label153)
-    * label *label153
+  426 label *label417
+  427 write :status1:text processor2 ".status1"
+  428 label *label418
   429 sensor *tmp211 .thoriumBattery @totalPower
   430 jump *label154 greaterThanEq *tmp211 2000
   431 sensor *tmp214 .thoriumGenerator @coal
 
   468 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   469 jump *label167 lessThanEq *tmp81 1
   470 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label170 (h:*label170)
-    * call *label14 *invalid :status1*retval (m:*label170) (h:*label170)
-    * label *label170
+  471 label *label419
+  472 write :status1:text processor2 ".status1"
+  473 label *label420
   474 set :mineOre.2:ore @coal
   475 setaddr :mineOre.2*retaddr *label171 (h:*label171)
   476 call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
 
   485 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   486 jump *label177 greaterThanEq *tmp230 5
   487 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label179 (h:*label179)
-    * call *label14 *invalid :status1*retval (m:*label179) (h:*label179)
-    * label *label179
+  488 label *label421
+  489 write :status1:text processor2 ".status1"
+  490 label *label422
   491 set :supplyBlock:block AJEMJJ-graphite-press0
   492 set :supplyBlock:ore @coal
   493 setaddr :supplyBlock*retaddr *label180 (h:*label180)
 
   503 sensor *tmp236 AJRJM-combustion-generator3 @coal
   504 jump *label183 greaterThanEq *tmp236 2
   505 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label185 (h:*label185)
-    * call *label14 *invalid :status1*retval (m:*label185) (h:*label185)
-    * label *label185
+  506 label *label423
+  507 write :status1:text processor2 ".status1"
+  508 label *label424
   509 set :supplyBlock:block AJRJM-combustion-generator3
   510 set :supplyBlock:ore @coal
   511 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   521 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   522 jump *label189 greaterThanEq *tmp242 5
   523 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label191 (h:*label191)
-    * call *label14 *invalid :status1*retval (m:*label191) (h:*label191)
-    * label *label191
+  524 label *label425
+  525 write :status1:text processor2 ".status1"
+  526 label *label426
   527 set :supplyBlock:block ALMQJN-silicon-smelter4
   528 set :supplyBlock:ore @coal
   529 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   538 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   539 jump *label197 greaterThanEq *tmp249 10
   540 set :status1:text "Goal 3a: scrap for silicon requirement"
-    * setaddr :status1*retaddr *label199 (h:*label199)
-    * call *label14 *invalid :status1*retval (m:*label199) (h:*label199)
-    * label *label199
+  541 label *label427
+  542 write :status1:text processor2 ".status1"
+  543 label *label428
   544 set :supplyBlock:block AXPRJd-pulverizer26
   545 set :supplyBlock:ore @scrap
   546 setaddr :supplyBlock*retaddr *label200 (h:*label200)
 
   552 jump *label196 always
   553 label *label195
   554 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label201 (h:*label201)
-    * call *label14 *invalid :status1*retval (m:*label201) (h:*label201)
-    * label *label201
+  555 label *label429
+  556 write :status1:text processor2 ".status1"
+  557 label *label430
   558 set :supplyBlock:block ALMQJN-silicon-smelter4
   559 set :supplyBlock:ore @sand
   560 setaddr :supplyBlock*retaddr *label202 (h:*label202)
 
   584 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   585 jump *label209 greaterThanEq *tmp263 *tmp264
   586 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label211 (h:*label211)
-    * call *label14 *invalid :status1*retval (m:*label211) (h:*label211)
-    * label *label211
+  587 label *label431
+  588 write :status1:text processor2 ".status1"
+  589 label *label432
   590 set :mineOre.2:ore @coal
   591 setaddr :mineOre.2*retaddr *label212 (h:*label212)
   592 call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
 
   597 jump *label213 greaterThanEq *tmp267 silicon
   598 jump *label215 equal .scrap false
   599 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label217 (h:*label217)
-    * call *label14 *invalid :status1*retval (m:*label217) (h:*label217)
-    * label *label217
+  600 label *label433
+  601 write :status1:text processor2 ".status1"
+  602 label *label434
   603 jump *label218 equal A¨SSJh-container30 false
   604 sensor :supplyBase0:coal .core @coal
   605 sensor :supplyBase0:sand A¨SSJh-container30 @sand
 
   620 jump *label216 always
   621 label *label215
   622 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label226 (h:*label226)
-    * call *label14 *invalid :status1*retval (m:*label226) (h:*label226)
-    * label *label226
+  623 label *label435
+  624 write :status1:text processor2 ".status1"
+  625 label *label436
   626 sensor :supplyBase0:coal.1 .core @coal
   627 sensor :supplyBase0:sand.1 .core @sand
   628 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   636 sensor *tmp282 .core @copper
   637 jump *label230 greaterThanEq *tmp282 copper
   638 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label232 (h:*label232)
-    * call *label14 *invalid :status1*retval (m:*label232) (h:*label232)
-    * label *label232
+  639 label *label437
+  640 write :status1:text processor2 ".status1"
+  641 label *label438
   642 set :mineOre.2:ore @copper
   643 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   644 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
 
   648 sensor *tmp285 .core @lead
   649 jump *label234 greaterThanEq *tmp285 lead
   650 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label236 (h:*label236)
-    * call *label14 *invalid :status1*retval (m:*label236) (h:*label236)
-    * label *label236
+  651 label *label439
+  652 write :status1:text processor2 ".status1"
+  653 label *label440
   654 set :mineOre.2:ore @lead
   655 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   656 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
 
   660 sensor *tmp288 .core @metaglass
   661 jump *label238 greaterThanEq *tmp288 metaglass
   662 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label240 (h:*label240)
-    * call *label14 *invalid :status1*retval (m:*label240) (h:*label240)
-    * label *label240
+  663 label *label441
+  664 write :status1:text processor2 ".status1"
+  665 label *label442
   666 jump *label241 equal .scrap false
   667 set :mineOre.1:ore @scrap
   668 set :mineOre.1:block .sandContainer
 
   679 jump *label239 always
   680 label *label238
   681 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label245 (h:*label245)
-    * call *label14 *invalid :status1*retval (m:*label245) (h:*label245)
-    * label *label245
+  682 label *label443
+  683 write :status1:text processor2 ".status1"
+  684 label *label444
   685 jump *label246 equal A¨SSJh-container30 false
   686 set :mineOre.1:ore @scrap
   687 set :mineOre.1:block A¨SSJh-container30
 
   710 jump *label206 always
   711 label *label205
   712 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label252 (h:*label252)
-    * call *label14 *invalid :status1*retval (m:*label252) (h:*label252)
-    * label *label252
+  713 label *label445
+  714 write :status1:text processor2 ".status1"
+  715 label *label446
   716 set :fetchBlock:block .titaniumDrill
   717 set :fetchBlock:item @titanium
   718 setaddr :fetchBlock*retaddr *label253 (h:*label253)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   424 jump *label150 equal .thoriumContainer false
   425 set :status1:text "Phase 2: servicing thorium drill"
   426 label *label417
-    * write :status1:text processor2 ".status1"
+  427 write "Phase 2: servicing thorium drill" processor2 ".status1"
   428 label *label418
   429 sensor *tmp211 .thoriumBattery @totalPower
   430 jump *label154 greaterThanEq *tmp211 2000
 
   469 jump *label167 lessThanEq *tmp81 1
   470 set :status1:text "Phase 1: supplying base"
   471 label *label419
-    * write :status1:text processor2 ".status1"
+  472 write "Phase 1: supplying base" processor2 ".status1"
   473 label *label420
   474 set :mineOre.2:ore @coal
   475 setaddr :mineOre.2*retaddr *label171 (h:*label171)
 
   486 jump *label177 greaterThanEq *tmp230 5
   487 set :status1:text "Goal 1: graphite requirement"
   488 label *label421
-    * write :status1:text processor2 ".status1"
+  489 write "Goal 1: graphite requirement" processor2 ".status1"
   490 label *label422
   491 set :supplyBlock:block AJEMJJ-graphite-press0
   492 set :supplyBlock:ore @coal
 
   504 jump *label183 greaterThanEq *tmp236 2
   505 set :status1:text "Goal 4: supplying generator"
   506 label *label423
-    * write :status1:text processor2 ".status1"
+  507 write "Goal 4: supplying generator" processor2 ".status1"
   508 label *label424
   509 set :supplyBlock:block AJRJM-combustion-generator3
   510 set :supplyBlock:ore @coal
 
   522 jump *label189 greaterThanEq *tmp242 5
   523 set :status1:text "Goal 2: coal for silicon requirement"
   524 label *label425
-    * write :status1:text processor2 ".status1"
+  525 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   526 label *label426
   527 set :supplyBlock:block ALMQJN-silicon-smelter4
   528 set :supplyBlock:ore @coal
 
   539 jump *label197 greaterThanEq *tmp249 10
   540 set :status1:text "Goal 3a: scrap for silicon requirement"
   541 label *label427
-    * write :status1:text processor2 ".status1"
+  542 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   543 label *label428
   544 set :supplyBlock:block AXPRJd-pulverizer26
   545 set :supplyBlock:ore @scrap
 
   553 label *label195
   554 set :status1:text "Goal 3: sand for silicon requirement"
   555 label *label429
-    * write :status1:text processor2 ".status1"
+  556 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   557 label *label430
   558 set :supplyBlock:block ALMQJN-silicon-smelter4
   559 set :supplyBlock:ore @sand
 
   585 jump *label209 greaterThanEq *tmp263 *tmp264
   586 set :status1:text "Goal 5: supplying generator"
   587 label *label431
-    * write :status1:text processor2 ".status1"
+  588 write "Goal 5: supplying generator" processor2 ".status1"
   589 label *label432
   590 set :mineOre.2:ore @coal
   591 setaddr :mineOre.2*retaddr *label212 (h:*label212)
 
   598 jump *label215 equal .scrap false
   599 set :status1:text "Goal 6: silicon requirement"
   600 label *label433
-    * write :status1:text processor2 ".status1"
+  601 write "Goal 6: silicon requirement" processor2 ".status1"
   602 label *label434
   603 jump *label218 equal A¨SSJh-container30 false
   604 sensor :supplyBase0:coal .core @coal
 
   621 label *label215
   622 set :status1:text "Goal 6: silicon requirement"
   623 label *label435
-    * write :status1:text processor2 ".status1"
+  624 write "Goal 6: silicon requirement" processor2 ".status1"
   625 label *label436
   626 sensor :supplyBase0:coal.1 .core @coal
   627 sensor :supplyBase0:sand.1 .core @sand
 
   637 jump *label230 greaterThanEq *tmp282 copper
   638 set :status1:text "Goal 7: copper requirement"
   639 label *label437
-    * write :status1:text processor2 ".status1"
+  640 write "Goal 7: copper requirement" processor2 ".status1"
   641 label *label438
   642 set :mineOre.2:ore @copper
   643 setaddr :mineOre.2*retaddr *label233 (h:*label233)
 
   649 jump *label234 greaterThanEq *tmp285 lead
   650 set :status1:text "Goal 8: lead requirement"
   651 label *label439
-    * write :status1:text processor2 ".status1"
+  652 write "Goal 8: lead requirement" processor2 ".status1"
   653 label *label440
   654 set :mineOre.2:ore @lead
   655 setaddr :mineOre.2*retaddr *label237 (h:*label237)
 
   661 jump *label238 greaterThanEq *tmp288 metaglass
   662 set :status1:text "Goal 9: metaglass requirement"
   663 label *label441
-    * write :status1:text processor2 ".status1"
+  664 write "Goal 9: metaglass requirement" processor2 ".status1"
   665 label *label442
   666 jump *label241 equal .scrap false
   667 set :mineOre.1:ore @scrap
 
   680 label *label238
   681 set :status1:text "Goal 10: supplying base"
   682 label *label443
-    * write :status1:text processor2 ".status1"
+  683 write "Goal 10: supplying base" processor2 ".status1"
   684 label *label444
   685 jump *label246 equal A¨SSJh-container30 false
   686 set :mineOre.1:ore @scrap
 
   711 label *label205
   712 set :status1:text "Goal 11: Fetching titanium"
   713 label *label445
-    * write :status1:text processor2 ".status1"
+  714 write "Goal 11: Fetching titanium" processor2 ".status1"
   715 label *label446
   716 set :fetchBlock:block .titaniumDrill
   717 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
   422 op max *tmp209 0 *tmp208
   423 write *tmp209 processor7 ".sandTarget"
   424 jump *label150 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   425 label *label417
   426 write "Phase 2: servicing thorium drill" processor2 ".status1"
   427 label *label418
 
   466 label *label150
   467 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   468 jump *label167 lessThanEq *tmp81 1
-    * set :status1:text "Phase 1: supplying base"
   469 label *label419
   470 write "Phase 1: supplying base" processor2 ".status1"
   471 label *label420
 
   482 jump *label175 greaterThanEq *tmp227 graphite
   483 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   484 jump *label177 greaterThanEq *tmp230 5
-    * set :status1:text "Goal 1: graphite requirement"
   485 label *label421
   486 write "Goal 1: graphite requirement" processor2 ".status1"
   487 label *label422
 
   499 jump *label181 greaterThanEq *tmp233 .powerTarget
   500 sensor *tmp236 AJRJM-combustion-generator3 @coal
   501 jump *label183 greaterThanEq *tmp236 2
-    * set :status1:text "Goal 4: supplying generator"
   502 label *label423
   503 write "Goal 4: supplying generator" processor2 ".status1"
   504 label *label424
 
   516 jump *label187 greaterThanEq *tmp239 silicon
   517 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   518 jump *label189 greaterThanEq *tmp242 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   519 label *label425
   520 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   521 label *label426
 
   532 jump *label195 equal .scrap false
   533 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   534 jump *label197 greaterThanEq *tmp249 10
-    * set :status1:text "Goal 3a: scrap for silicon requirement"
   535 label *label427
   536 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   537 label *label428
 
   545 label *label198
   546 jump *label196 always
   547 label *label195
-    * set :status1:text "Goal 3: sand for silicon requirement"
   548 label *label429
   549 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   550 label *label430
 
   576 sensor *tmp263 AJTJK-battery1 @totalPower
   577 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   578 jump *label209 greaterThanEq *tmp263 *tmp264
-    * set :status1:text "Goal 5: supplying generator"
   579 label *label431
   580 write "Goal 5: supplying generator" processor2 ".status1"
   581 label *label432
 
   588 sensor *tmp267 .core @silicon
   589 jump *label213 greaterThanEq *tmp267 silicon
   590 jump *label215 equal .scrap false
-    * set :status1:text "Goal 6: silicon requirement"
   591 label *label433
   592 write "Goal 6: silicon requirement" processor2 ".status1"
   593 label *label434
 
   610 label *label219
   611 jump *label216 always
   612 label *label215
-    * set :status1:text "Goal 6: silicon requirement"
   613 label *label435
   614 write "Goal 6: silicon requirement" processor2 ".status1"
   615 label *label436
 
   625 label *label213
   626 sensor *tmp282 .core @copper
   627 jump *label230 greaterThanEq *tmp282 copper
-    * set :status1:text "Goal 7: copper requirement"
   628 label *label437
   629 write "Goal 7: copper requirement" processor2 ".status1"
   630 label *label438
 
   636 label *label230
   637 sensor *tmp285 .core @lead
   638 jump *label234 greaterThanEq *tmp285 lead
-    * set :status1:text "Goal 8: lead requirement"
   639 label *label439
   640 write "Goal 8: lead requirement" processor2 ".status1"
   641 label *label440
 
   647 label *label234
   648 sensor *tmp288 .core @metaglass
   649 jump *label238 greaterThanEq *tmp288 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   650 label *label441
   651 write "Goal 9: metaglass requirement" processor2 ".status1"
   652 label *label442
 
   665 label *label242
   666 jump *label239 always
   667 label *label238
-    * set :status1:text "Goal 10: supplying base"
   668 label *label443
   669 write "Goal 10: supplying base" processor2 ".status1"
   670 label *label444
 
   695 label *label208
   696 jump *label206 always
   697 label *label205
-    * set :status1:text "Goal 11: Fetching titanium"
   698 label *label445
   699 write "Goal 11: Fetching titanium" processor2 ".status1"
   700 label *label446

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
    49 label *label56
    50 return :status2*retaddr
    51 end
-    * label *label16
-    * write :status3:text processor2 ".status3"
-    * label *label57
-    * return :status3*retaddr
-    * end
    52 label *label17
    53 write :transportStatus:target processor2 ".transportTarget"
    54 write :transportStatus:item processor2 ".transportItem"
 
    63 end
    64 label *label19
    65 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label61 (h:*label61)
-    * call *label16 *invalid :status3*retval (m:*label61) (h:*label61)
-    * label *label61
+   66 label *label447
+   67 write :status3:text processor2 ".status3"
+   68 label *label448
    69 op sub *tmp107 :moveTo:radius 0.5
    70 label *label62
    71 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
 
    79 end
    80 label *label20
    81 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label66 (h:*label66)
-    * call *label16 *invalid :status3*retval (m:*label66) (h:*label66)
-    * label *label66
+   82 label *label449
+   83 write :status3:text processor2 ".status3"
+   84 label *label450
    85 label *label67
    86 sensor *tmp108 @unit @firstItem
    87 jump *label70 equal *tmp108 null
 
   121 end
   122 label *label23
   123 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label79 (h:*label79)
-    * call *label16 *invalid :status3*retval (m:*label79) (h:*label79)
-    * label *label79
+  124 label *label451
+  125 write :status3:text processor2 ".status3"
+  126 label *label452
   127 sensor *tmp117 @unit @firstItem
   128 jump *label80 notEqual *tmp117 :depositItems:item
   129 set :moveToBlock:block :depositItems:block
 
   196 label *label98
   197 label *label99
   198 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label101 (h:*label101)
-    * call *label16 *invalid :status3*retval (m:*label101) (h:*label101)
-    * label *label101
+  199 label *label453
+  200 write :status3:text processor2 ".status3"
+  201 label *label454
   202 op add :mineOre:stop @second 10
   203 label *label102
   204 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    64 label *label19
    65 set :status3:text "Moving..."
    66 label *label447
-    * write :status3:text processor2 ".status3"
+   67 write "Moving..." processor2 ".status3"
    68 label *label448
    69 op sub *tmp107 :moveTo:radius 0.5
    70 label *label62
 
    80 label *label20
    81 set :status3:text "Moving..."
    82 label *label449
-    * write :status3:text processor2 ".status3"
+   83 write "Moving..." processor2 ".status3"
    84 label *label450
    85 label *label67
    86 sensor *tmp108 @unit @firstItem
 
   122 label *label23
   123 set :status3:text "Depositing..."
   124 label *label451
-    * write :status3:text processor2 ".status3"
+  125 write "Depositing..." processor2 ".status3"
   126 label *label452
   127 sensor *tmp117 @unit @firstItem
   128 jump *label80 notEqual *tmp117 :depositItems:item
 
   197 label *label99
   198 set :status3:text "Mining..."
   199 label *label453
-    * write :status3:text processor2 ".status3"
+  200 write "Mining..." processor2 ".status3"
   201 label *label454
   202 op add :mineOre:stop @second 10
   203 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    62 return :error*retaddr
    63 end
    64 label *label19
-    * set :status3:text "Moving..."
    65 label *label447
    66 write "Moving..." processor2 ".status3"
    67 label *label448
 
    77 return :moveTo*retaddr
    78 end
    79 label *label20
-    * set :status3:text "Moving..."
    80 label *label449
    81 write "Moving..." processor2 ".status3"
    82 label *label450
 
   118 return :moveToBlock*retaddr
   119 end
   120 label *label23
-    * set :status3:text "Depositing..."
   121 label *label451
   122 write "Depositing..." processor2 ".status3"
   123 label *label452
 
   192 label *label100
   193 label *label98
   194 label *label99
-    * set :status3:text "Mining..."
   195 label *label453
   196 write "Mining..." processor2 ".status3"
   197 label *label454

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    55 label *label58
    56 return :transportStatus*retaddr
    57 end
-    * label *label18
-    * set .ERROR :error:error
-    * stop
-    * label *label59
-    * return :error*retaddr
-    * end
    58 label *label19
    59 label *label447
    60 write "Moving..." processor2 ".status3"
 
   153 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   154 jump *label91 notEqual *tmp127 false
   155 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label93 (h:*label93)
-    * call *label18 *invalid :error*retval (m:*label93) (h:*label93)
-    * label *label93
+  156 label *label455
+  157 set .ERROR :error:error
+  158 stop
+  159 label *label456
   160 label *label91
   161 label *label92
   162 label *label90

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   154 jump *label91 notEqual *tmp127 false
   155 set :error:error "Cannot locate ore"
   156 label *label455
-    * set .ERROR :error:error
+  157 set .ERROR "Cannot locate ore"
   158 stop
   159 label *label456
   160 label *label91

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   152 label *label24
   153 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   154 jump *label91 notEqual *tmp127 false
-    * set :error:error "Cannot locate ore"
   155 label *label455
   156 set .ERROR "Cannot locate ore"
   157 stop

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
    99 label *label72
   100 return :dropAll*retaddr
   101 end
-    * label *label22
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label77 (h:*label77)
-    * call *label19 *invalid :moveTo*retval (m:*label77) (h:*label77)
-    * label *label77
-    * label *label76
-    * return :moveToBlock*retaddr
-    * end
   102 label *label23
   103 label *label451
   104 write "Depositing..." processor2 ".status3"
 
   107 jump *label80 notEqual *tmp117 :depositItems:item
   108 set :moveToBlock:block :depositItems:block
   109 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label82 (h:*label82)
-    * call *label22 *invalid :moveToBlock*retval (m:*label82) (h:*label82)
-    * label *label82
+  110 label *label457
+  111 sensor *tmp115 :moveToBlock:block @x
+  112 sensor *tmp116 :moveToBlock:block @y
+  113 set :moveTo:x *tmp115
+  114 set :moveTo:y *tmp116
+  115 set :moveTo:radius :moveToBlock:radius
+  116 setaddr :moveTo*retaddr *label458 (h:*label458)
+  117 call *label19 *invalid :moveTo*retval (m:*label458) (h:*label458)
+  118 label *label458
+  119 label *label459
   120 sensor :depositItems:cap :depositItems:block @itemCapacity
   121 label *label83
   122 ucontrol itemDrop :depositItems:block 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   108 set :moveToBlock:block :depositItems:block
   109 set :moveToBlock:radius 6
   110 label *label457
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
+  111 sensor *tmp115 :depositItems:block @x
+  112 sensor *tmp116 :depositItems:block @y
   113 set :moveTo:x *tmp115
   114 set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
+  115 set :moveTo:radius 6
   116 setaddr :moveTo*retaddr *label458 (h:*label458)
   117 call *label19 *invalid :moveTo*retval (m:*label458) (h:*label458)
   118 label *label458

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   105 label *label452
   106 sensor *tmp117 @unit @firstItem
   107 jump *label80 notEqual *tmp117 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   108 label *label457
   109 sensor *tmp115 :depositItems:block @x
   110 sensor *tmp116 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   142 label *label78
   143 return :depositItems*retaddr
   144 end
-    * label *label24
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * jump *label91 notEqual *tmp127 false
-    * label *label455
-    * set .ERROR "Cannot locate ore"
-    * stop
-    * label *label456
-    * label *label91
-    * label *label92
-    * label *label90
-    * return :locateOre*retaddr
-    * end
   145 label *label25
   146 op min :mineOre:amount :mineOre:amount 28
   147 set :transportStatus:target :mineOre:amount
 
   150 call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
   151 label *label95
   152 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label96 (h:*label96)
-    * call *label24 *invalid :locateOre*retval (m:*label96) (h:*label96)
-    * label *label96
+  153 label *label460
+  154 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  155 jump *label463 notEqual *tmp127 false
+  156 label *label461
+  157 set .ERROR "Cannot locate ore"
+  158 stop
+  159 label *label462
+  160 label *label463
+  161 label *label464
+  162 label *label465
   163 set :mineOre:x :locateOre:x
   164 set :mineOre:y :locateOre:y
   165 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   151 label *label95
   152 set :locateOre:ore :mineOre:ore
   153 label *label460
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label463 notEqual *tmp127 false
   156 label *label461
   157 set .ERROR "Cannot locate ore"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   149 setaddr :transportStatus*retaddr *label95 (h:*label95)
   150 call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
   151 label *label95
-    * set :locateOre:ore :mineOre:ore
   152 label *label460
   153 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   154 jump *label463 notEqual *tmp127 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 (-4 instructions):
 
   316 label *label132
   317 return :supplyBlock*retaddr
   318 end
-    * label *label30
-    * sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min :supplyBlockFromCore:cap *tmp169 28
-    * set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label138 (h:*label138)
-    * call *label17 *invalid :transportStatus*retval (m:*label138) (h:*label138)
-    * label *label138
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label139 (h:*label139)
-    * call *label15 *invalid :status2*retval (m:*label139) (h:*label139)
-    * label *label139
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label140 (h:*label140)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label140) (h:*label140)
-    * label *label140
-    * setaddr :dropAll*retaddr *label141 (h:*label141)
-    * call *label21 *invalid :dropAll*retval (m:*label141) (h:*label141)
-    * label *label141
-    * label *label142
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp174 *tmp172 *tmp173
-    * jump *label145 equal *tmp174 false
-    * ucontrol itemDrop @air 1000
-    * label *label145
-    * label *label146
-    * label *label143
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
-    * op land *tmp179 *tmp177 *tmp178
-    * jump *label142 notEqual *tmp179 false
-    * label *label144
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label147 (h:*label147)
-    * call *label23 *invalid :depositItems*retval (m:*label147) (h:*label147)
-    * label *label147
-    * label *label137
-    * return :supplyBlockFromCore*retaddr
-    * end
   319 label *label32
   320 read *tmp181 :unpackCfg:cfg 1
   321 op sub *tmp182 *tmp181 74
 
   365 label *label158
   366 set :supplyBlockFromCore:target .thoriumGenerator
   367 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
-    * call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
-    * label *label161
+  368 label *label466
+  369 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
+  370 op min :supplyBlockFromCore:cap *tmp169 28
+  371 set :transportStatus:target :supplyBlockFromCore:cap
+  372 set :transportStatus:item :supplyBlockFromCore:item
+  373 setaddr :transportStatus*retaddr *label467 (h:*label467)
+  374 call *label17 *invalid :transportStatus*retval (m:*label467) (h:*label467)
+  375 label *label467
+  376 set :status2:text "Transferring "
+  377 set :status2:item :supplyBlockFromCore:item
+  378 set :status2:block :supplyBlockFromCore:target
+  379 setaddr :status2*retaddr *label468 (h:*label468)
+  380 call *label15 *invalid :status2*retval (m:*label468) (h:*label468)
+  381 label *label468
+  382 set :moveToEmpty:x .coreX
+  383 set :moveToEmpty:y .coreY
+  384 setaddr :moveToEmpty*retaddr *label469 (h:*label469)
+  385 call *label20 *invalid :moveToEmpty*retval (m:*label469) (h:*label469)
+  386 label *label469
+  387 setaddr :dropAll*retaddr *label470 (h:*label470)
+  388 call *label21 *invalid :dropAll*retval (m:*label470) (h:*label470)
+  389 label *label470
+  390 label *label471
+  391 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  392 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  393 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
+  394 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  395 op land *tmp174 *tmp172 *tmp173
+  396 jump *label472 equal *tmp174 false
+  397 ucontrol itemDrop @air 1000
+  398 label *label472
+  399 label *label473
+  400 label *label474
+  401 sensor *tmp176 @unit :supplyBlockFromCore:item
+  402 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
+  403 sensor *tmp178 .core :supplyBlockFromCore:item
+  404 op land *tmp179 *tmp177 *tmp178
+  405 jump *label471 notEqual *tmp179 false
+  406 label *label475
+  407 set :depositItems:block :supplyBlockFromCore:target
+  408 set :depositItems:item :supplyBlockFromCore:item
+  409 setaddr :depositItems*retaddr *label476 (h:*label476)
+  410 call *label23 *invalid :depositItems*retval (m:*label476) (h:*label476)
+  411 label *label476
+  412 label *label477
   413 label *label159
   414 label *label156
   415 label *label157

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   369 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   370 op min :supplyBlockFromCore:cap *tmp169 28
   371 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
+  372 set :transportStatus:item @coal
   373 setaddr :transportStatus*retaddr *label467 (h:*label467)
   374 call *label17 *invalid :transportStatus*retval (m:*label467) (h:*label467)
   375 label *label467

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
    63 label *label62
    64 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    65 jump *label64 notEqual *tmp105 false
+   66 label *label478
    67 ucontrol approach :moveTo:x :moveTo:y *tmp107
    68 label *label63
-    * jump *label62 always
+   69 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+   70 jump *label478 equal *tmp105 false
    71 label *label64
    72 label *label60
    73 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
    94 label *label73
    95 sensor *tmp113 @unit @firstItem
    96 jump *label75 equal *tmp113 null
+   97 label *label479
    98 ucontrol itemDrop @air 1000
    99 label *label74
-    * jump *label73 always
+  100 sensor *tmp113 @unit @firstItem
+  101 jump *label479 notEqual *tmp113 null
   102 label *label75
   103 label *label72
   104 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   133 label *label86
   134 sensor *tmp125 @unit @firstItem
   135 jump *label88 equal *tmp125 null
+  136 label *label480
   137 ucontrol itemDrop @air 1000
   138 label *label87
-    * jump *label86 always
+  139 sensor *tmp125 @unit @firstItem
+  140 jump *label480 notEqual *tmp125 null
   141 label *label88
   142 label *label81
   143 set :transportStatus:target 0

Modifications by Replicate loop condition at BuilderController.mnd:427:9 (+1 instructions):
 
  1224 label *label370
  1225 read *tmp51 processor3 ".locations"
  1226 jump *label372 greaterThanEq :buildTitaniumDrills:current *tmp51
+ 1227 label *label481
  1228 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1229 op add *tmp414 :buildTitaniumDrills:index 1
  1230 read :buildTitaniumDrills:size bank1 *tmp414
 
  1298 label *label374
  1299 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1300 label *label371
-    * jump *label370 always
+ 1301 read *tmp51 processor3 ".locations"
+ 1302 jump *label481 lessThan :buildTitaniumDrills:current *tmp51
  1303 label *label372
  1304 jump *label382 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1305 jump *label369 always

Modifications by Inline function call at Actions.mnd:88:5:
 
   142 label *label81
   143 set :transportStatus:target 0
   144 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label89 (h:*label89)
-    * call *label17 *invalid :transportStatus*retval (m:*label89) (h:*label89)
-    * label *label89
+  145 label *label482
+  146 write :transportStatus:target processor2 ".transportTarget"
+  147 write :transportStatus:item processor2 ".transportItem"
+  148 label *label483
   149 label *label78
   150 return :depositItems*retaddr
   151 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   143 set :transportStatus:target 0
   144 set :transportStatus:item null
   145 label *label482
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  146 write 0 processor2 ".transportTarget"
+  147 write null processor2 ".transportItem"
   148 label *label483
   149 label *label78
   150 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   140 jump *label480 notEqual *tmp125 null
   141 label *label88
   142 label *label81
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   143 label *label482
   144 write 0 processor2 ".transportTarget"
   145 write null processor2 ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
    49 label *label56
    50 return :status2*retaddr
    51 end
-    * label *label17
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
-    * label *label58
-    * return :transportStatus*retaddr
-    * end
    52 label *label19
    53 label *label447
    54 write "Moving..." processor2 ".status3"
 
   145 op min :mineOre:amount :mineOre:amount 28
   146 set :transportStatus:target :mineOre:amount
   147 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label95 (h:*label95)
-    * call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
-    * label *label95
+  148 label *label484
+  149 write :transportStatus:target processor2 ".transportTarget"
+  150 write :transportStatus:item processor2 ".transportItem"
+  151 label *label485
   152 label *label460
   153 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   154 jump *label463 notEqual *tmp127 false
 
   250 sensor *tmp151 :fetchBlock:block @itemCapacity
   251 op min :transportStatus:target *tmp151 28
   252 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label122 (h:*label122)
-    * call *label17 *invalid :transportStatus*retval (m:*label122) (h:*label122)
-    * label *label122
+  253 label *label486
+  254 write :transportStatus:target processor2 ".transportTarget"
+  255 write :transportStatus:item processor2 ".transportItem"
+  256 label *label487
   257 set :status2:text "Fetching "
   258 set :status2:item :fetchBlock:item
   259 set :status2:block :fetchBlock:block
 
   371 op min :supplyBlockFromCore:cap *tmp169 28
   372 set :transportStatus:target :supplyBlockFromCore:cap
   373 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label467 (h:*label467)
-    * call *label17 *invalid :transportStatus*retval (m:*label467) (h:*label467)
-    * label *label467
+  374 label *label488
+  375 write :transportStatus:target processor2 ".transportTarget"
+  376 write :transportStatus:item processor2 ".transportItem"
+  377 label *label489
   378 set :status2:text "Transferring "
   379 set :status2:item :supplyBlockFromCore:item
   380 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   146 set :transportStatus:target :mineOre:amount
   147 set :transportStatus:item :mineOre:ore
   148 label *label484
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  149 write :mineOre:amount processor2 ".transportTarget"
+  150 write :mineOre:ore processor2 ".transportItem"
   151 label *label485
   152 label *label460
   153 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
 
   252 set :transportStatus:item :fetchBlock:item
   253 label *label486
   254 write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  255 write :fetchBlock:item processor2 ".transportItem"
   256 label *label487
   257 set :status2:text "Fetching "
   258 set :status2:item :fetchBlock:item
 
   372 set :transportStatus:target :supplyBlockFromCore:cap
   373 set :transportStatus:item @coal
   374 label *label488
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  375 write :supplyBlockFromCore:cap processor2 ".transportTarget"
+  376 write @coal processor2 ".transportItem"
   377 label *label489
   378 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
+  379 set :status2:item @coal
   380 set :status2:block :supplyBlockFromCore:target
   381 setaddr :status2*retaddr *label468 (h:*label468)
   382 call *label15 *invalid :status2*retval (m:*label468) (h:*label468)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   144 label *label25
   145 op min :mineOre:amount :mineOre:amount 28
   146 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   147 label *label484
   148 write :mineOre:amount processor2 ".transportTarget"
   149 write :mineOre:ore processor2 ".transportItem"
 
   248 label *label28
   249 sensor *tmp151 :fetchBlock:block @itemCapacity
   250 op min :transportStatus:target *tmp151 28
-    * set :transportStatus:item :fetchBlock:item
   251 label *label486
   252 write :transportStatus:target processor2 ".transportTarget"
   253 write :fetchBlock:item processor2 ".transportItem"
 
   368 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   369 op min :supplyBlockFromCore:cap *tmp169 28
   370 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item @coal
   371 label *label488
   372 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   373 write @coal processor2 ".transportItem"

Modifications by Inline function 'titaniumDrillScore' defined at BuilderController.mnd:373:1 (+20 instructions):
 
  1087 set :buildFirstTitaniumDrillAt*finished true
  1088 jump *label54 always
  1089 end
-    * label *label44
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
-    * jump *label341 always
-    * label *label341
-    * jump *label342 notEqual :getFloor:floor @ore-titanium
-    * label *label343
-    * op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * jump *label340 always
-    * label *label342
-    * jump *label345 equal :getFloor:floor @ore-copper
-    * jump *label345 equal :getFloor:floor @ore-lead
-    * jump *label345 equal :getFloor:floor @ore-scrap
-    * jump *label344 notEqual :getFloor:floor @ore-coal
-    * label *label345
-    * op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * label *label344
-    * label *label340
-    * label *label339
-    * return :titaniumDrillScore*retaddr
-    * end
  1090 label *label45
  1091 jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1092 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
 
  1105 set :titaniumDrillScore:y *tmp390
  1106 set :titaniumDrillScore:positive .positive
  1107 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label353 (h:*label353)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label353) (h:*label353)
-    * label *label353
+ 1108 label *label490
+ 1109 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1110 jump *label491 always
+ 1111 label *label491
+ 1112 jump *label493 notEqual :getFloor:floor @ore-titanium
+ 1113 label *label492
+ 1114 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1115 jump *label496 always
+ 1116 label *label493
+ 1117 jump *label494 equal :getFloor:floor @ore-copper
+ 1118 jump *label494 equal :getFloor:floor @ore-lead
+ 1119 jump *label494 equal :getFloor:floor @ore-scrap
+ 1120 jump *label495 notEqual :getFloor:floor @ore-coal
+ 1121 label *label494
+ 1122 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1123 label *label495
+ 1124 label *label496
+ 1125 label *label497
  1126 set .positive :titaniumDrillScore:positive
  1127 set .negative :titaniumDrillScore:negative
  1128 op sub *tmp392 :buildTitaniumDrill:x 0.5
 
  1131 set :titaniumDrillScore:y *tmp393
  1132 set :titaniumDrillScore:positive .positive
  1133 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label354 (h:*label354)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label354) (h:*label354)
-    * label *label354
+ 1134 label *label498
+ 1135 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1136 jump *label499 always
+ 1137 label *label499
+ 1138 jump *label501 notEqual :getFloor:floor @ore-titanium
+ 1139 label *label500
+ 1140 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1141 jump *label504 always
+ 1142 label *label501
+ 1143 jump *label502 equal :getFloor:floor @ore-copper
+ 1144 jump *label502 equal :getFloor:floor @ore-lead
+ 1145 jump *label502 equal :getFloor:floor @ore-scrap
+ 1146 jump *label503 notEqual :getFloor:floor @ore-coal
+ 1147 label *label502
+ 1148 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1149 label *label503
+ 1150 label *label504
+ 1151 label *label505
  1152 set .positive :titaniumDrillScore:positive
  1153 set .negative :titaniumDrillScore:negative
  1154 op add *tmp395 :buildTitaniumDrill:x 0.5
 
  1157 set :titaniumDrillScore:y *tmp396
  1158 set :titaniumDrillScore:positive .positive
  1159 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label355 (h:*label355)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label355) (h:*label355)
-    * label *label355
+ 1160 label *label506
+ 1161 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1162 jump *label507 always
+ 1163 label *label507
+ 1164 jump *label509 notEqual :getFloor:floor @ore-titanium
+ 1165 label *label508
+ 1166 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1167 jump *label512 always
+ 1168 label *label509
+ 1169 jump *label510 equal :getFloor:floor @ore-copper
+ 1170 jump *label510 equal :getFloor:floor @ore-lead
+ 1171 jump *label510 equal :getFloor:floor @ore-scrap
+ 1172 jump *label511 notEqual :getFloor:floor @ore-coal
+ 1173 label *label510
+ 1174 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1175 label *label511
+ 1176 label *label512
+ 1177 label *label513
  1178 set .positive :titaniumDrillScore:positive
  1179 set .negative :titaniumDrillScore:negative
  1180 op add *tmp398 :buildTitaniumDrill:x 0.5
 
  1183 set :titaniumDrillScore:y *tmp399
  1184 set :titaniumDrillScore:positive .positive
  1185 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label356 (h:*label356)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label356) (h:*label356)
-    * label *label356
+ 1186 label *label514
+ 1187 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1188 jump *label515 always
+ 1189 label *label515
+ 1190 jump *label517 notEqual :getFloor:floor @ore-titanium
+ 1191 label *label516
+ 1192 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1193 jump *label520 always
+ 1194 label *label517
+ 1195 jump *label518 equal :getFloor:floor @ore-copper
+ 1196 jump *label518 equal :getFloor:floor @ore-lead
+ 1197 jump *label518 equal :getFloor:floor @ore-scrap
+ 1198 jump *label519 notEqual :getFloor:floor @ore-coal
+ 1199 label *label518
+ 1200 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1201 label *label519
+ 1202 label *label520
+ 1203 label *label521
  1204 set .positive :titaniumDrillScore:positive
  1205 set .negative :titaniumDrillScore:negative
  1206 op greaterThan *tmp401 .positive .negative

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1106 set :titaniumDrillScore:positive .positive
  1107 set :titaniumDrillScore:negative .negative
  1108 label *label490
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1109 ucontrol getBlock *tmp389 *tmp390 *tmp379 *tmp378 :getFloor:floor
  1110 jump *label491 always
  1111 label *label491
  1112 jump *label493 notEqual :getFloor:floor @ore-titanium
 
  1127 set .negative :titaniumDrillScore:negative
  1128 op sub *tmp392 :buildTitaniumDrill:x 0.5
  1129 op add *tmp393 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp392
+ 1130 set :titaniumDrillScore:x *tmp389
  1131 set :titaniumDrillScore:y *tmp393
  1132 set :titaniumDrillScore:positive .positive
  1133 set :titaniumDrillScore:negative .negative
  1134 label *label498
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1135 ucontrol getBlock *tmp392 *tmp393 *tmp379 *tmp378 :getFloor:floor
  1136 jump *label499 always
  1137 label *label499
  1138 jump *label501 notEqual :getFloor:floor @ore-titanium
 
  1154 op add *tmp395 :buildTitaniumDrill:x 0.5
  1155 op sub *tmp396 :buildTitaniumDrill:y 0.5
  1156 set :titaniumDrillScore:x *tmp395
-    * set :titaniumDrillScore:y *tmp396
+ 1157 set :titaniumDrillScore:y *tmp390
  1158 set :titaniumDrillScore:positive .positive
  1159 set :titaniumDrillScore:negative .negative
  1160 label *label506
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1161 ucontrol getBlock *tmp395 *tmp396 *tmp379 *tmp378 :getFloor:floor
  1162 jump *label507 always
  1163 label *label507
  1164 jump *label509 notEqual :getFloor:floor @ore-titanium
 
  1179 set .negative :titaniumDrillScore:negative
  1180 op add *tmp398 :buildTitaniumDrill:x 0.5
  1181 op add *tmp399 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp398
-    * set :titaniumDrillScore:y *tmp399
+ 1182 set :titaniumDrillScore:x *tmp395
+ 1183 set :titaniumDrillScore:y *tmp393
  1184 set :titaniumDrillScore:positive .positive
  1185 set :titaniumDrillScore:negative .negative
  1186 label *label514
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp379 *tmp378 :getFloor:floor
+ 1187 ucontrol getBlock *tmp398 *tmp399 *tmp379 *tmp378 :getFloor:floor
  1188 jump *label515 always
  1189 label *label515
  1190 jump *label517 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1101 set .negative 0
  1102 op sub *tmp389 :buildTitaniumDrill:x 0.5
  1103 op sub *tmp390 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp389
-    * set :titaniumDrillScore:y *tmp390
  1104 set :titaniumDrillScore:positive .positive
  1105 set :titaniumDrillScore:negative .negative
  1106 label *label490
 
  1125 set .negative :titaniumDrillScore:negative
  1126 op sub *tmp392 :buildTitaniumDrill:x 0.5
  1127 op add *tmp393 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp389
-    * set :titaniumDrillScore:y *tmp393
  1128 set :titaniumDrillScore:positive .positive
  1129 set :titaniumDrillScore:negative .negative
  1130 label *label498
-    * ucontrol getBlock *tmp392 *tmp393 *tmp379 *tmp378 :getFloor:floor
+ 1131 ucontrol getBlock *tmp389 *tmp393 *tmp379 *tmp378 :getFloor:floor
  1132 jump *label499 always
  1133 label *label499
  1134 jump *label501 notEqual :getFloor:floor @ore-titanium
 
  1149 set .negative :titaniumDrillScore:negative
  1150 op add *tmp395 :buildTitaniumDrill:x 0.5
  1151 op sub *tmp396 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp395
-    * set :titaniumDrillScore:y *tmp390
  1152 set :titaniumDrillScore:positive .positive
  1153 set :titaniumDrillScore:negative .negative
  1154 label *label506
-    * ucontrol getBlock *tmp395 *tmp396 *tmp379 *tmp378 :getFloor:floor
+ 1155 ucontrol getBlock *tmp395 *tmp390 *tmp379 *tmp378 :getFloor:floor
  1156 jump *label507 always
  1157 label *label507
  1158 jump *label509 notEqual :getFloor:floor @ore-titanium
 
  1173 set .negative :titaniumDrillScore:negative
  1174 op add *tmp398 :buildTitaniumDrill:x 0.5
  1175 op add *tmp399 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp395
-    * set :titaniumDrillScore:y *tmp393
  1176 set :titaniumDrillScore:positive .positive
  1177 set :titaniumDrillScore:negative .negative
  1178 label *label514
-    * ucontrol getBlock *tmp398 *tmp399 *tmp379 *tmp378 :getFloor:floor
+ 1179 ucontrol getBlock *tmp395 *tmp393 *tmp379 *tmp378 :getFloor:floor
  1180 jump *label515 always
  1181 label *label515
  1182 jump *label517 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-4 instructions):
 
  1123 label *label497
  1124 set .positive :titaniumDrillScore:positive
  1125 set .negative :titaniumDrillScore:negative
-    * op sub *tmp392 :buildTitaniumDrill:x 0.5
  1126 op add *tmp393 :buildTitaniumDrill:y 0.5
  1127 set :titaniumDrillScore:positive .positive
  1128 set :titaniumDrillScore:negative .negative
 
  1147 set .positive :titaniumDrillScore:positive
  1148 set .negative :titaniumDrillScore:negative
  1149 op add *tmp395 :buildTitaniumDrill:x 0.5
-    * op sub *tmp396 :buildTitaniumDrill:y 0.5
  1150 set :titaniumDrillScore:positive .positive
  1151 set :titaniumDrillScore:negative .negative
  1152 label *label506
 
  1169 label *label513
  1170 set .positive :titaniumDrillScore:positive
  1171 set .negative :titaniumDrillScore:negative
-    * op add *tmp398 :buildTitaniumDrill:x 0.5
-    * op add *tmp399 :buildTitaniumDrill:y 0.5
  1172 set :titaniumDrillScore:positive .positive
  1173 set :titaniumDrillScore:negative .negative
  1174 label *label514

Modifications by Inline function call at Actions.mnd:46:5 (+5 instructions):
 
  1093 set :moveTo:x :buildTitaniumDrill:x
  1094 set :moveTo:y :buildTitaniumDrill:y
  1095 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label352 (h:*label352)
-    * call *label19 *invalid :moveTo*retval (m:*label352) (h:*label352)
-    * label *label352
+ 1096 label *label522
+ 1097 label *label523
+ 1098 write "Moving..." processor2 ".status3"
+ 1099 label *label524
+ 1100 op sub *tmp107 :moveTo:radius 0.5
+ 1101 label *label525
+ 1102 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1103 jump *label528 notEqual *tmp105 false
+ 1104 label *label526
+ 1105 ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1106 label *label527
+ 1107 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1108 jump *label526 equal *tmp105 false
+ 1109 label *label528
+ 1110 label *label529
  1111 label *label351
  1112 set .positive 0
  1113 set .negative 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1097 label *label523
  1098 write "Moving..." processor2 ".status3"
  1099 label *label524
-    * op sub *tmp107 :moveTo:radius 0.5
+ 1100 op sub *tmp107 6 0.5
  1101 label *label525
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1102 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1103 jump *label528 notEqual *tmp105 false
  1104 label *label526
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1105 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
  1106 label *label527
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1107 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1108 jump *label526 equal *tmp105 false
  1109 label *label528
  1110 label *label529

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1090 label *label45
  1091 jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1092 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * set :moveTo:x :buildTitaniumDrill:x
-    * set :moveTo:y :buildTitaniumDrill:y
-    * set :moveTo:radius 6
  1093 label *label522
  1094 label *label523
  1095 write "Moving..." processor2 ".status3"
  1096 label *label524
-    * op sub *tmp107 6 0.5
  1097 label *label525
  1098 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1099 jump *label528 notEqual *tmp105 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (+1 instructions):
 
    49 label *label56
    50 return :status2*retaddr
    51 end
-    * label *label19
-    * label *label447
-    * write "Moving..." processor2 ".status3"
-    * label *label448
-    * op sub *tmp107 :moveTo:radius 0.5
-    * label *label62
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label64 notEqual *tmp105 false
-    * label *label478
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
-    * label *label63
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label478 equal *tmp105 false
-    * label *label64
-    * label *label60
-    * return :moveTo*retaddr
-    * end
    52 label *label20
    53 label *label449
    54 write "Moving..." processor2 ".status3"
 
    92 set :moveTo:x *tmp115
    93 set :moveTo:y *tmp116
    94 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label458 (h:*label458)
-    * call *label19 *invalid :moveTo*retval (m:*label458) (h:*label458)
-    * label *label458
+   95 label *label530
+   96 label *label531
+   97 write "Moving..." processor2 ".status3"
+   98 label *label532
+   99 op sub *tmp107 :moveTo:radius 0.5
+  100 label *label533
+  101 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  102 jump *label536 notEqual *tmp105 false
+  103 label *label534
+  104 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  105 label *label535
+  106 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  107 jump *label534 equal *tmp105 false
+  108 label *label536
+  109 label *label537
   110 label *label459
   111 sensor :depositItems:cap :depositItems:block @itemCapacity
   112 label *label83
 
   964 set :moveTo:x :buildBlockAtLocal:x
   965 set :moveTo:y :buildBlockAtLocal:y
   966 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label314 (h:*label314)
-    * call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
-    * label *label314
+  967 label *label538
+  968 label *label539
+  969 write "Moving..." processor2 ".status3"
+  970 label *label540
+  971 op sub *tmp107 :moveTo:radius 0.5
+  972 label *label541
+  973 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  974 jump *label544 notEqual *tmp105 false
+  975 label *label542
+  976 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  977 label *label543
+  978 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  979 jump *label542 equal *tmp105 false
+  980 label *label544
+  981 label *label545
   982 label *label313
   983 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp346
   984 jump *label315 equal :buildBlockAtLocal:building null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    96 label *label531
    97 write "Moving..." processor2 ".status3"
    98 label *label532
-    * op sub *tmp107 :moveTo:radius 0.5
+   99 op sub *tmp107 6 0.5
   100 label *label533
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  101 ucontrol within *tmp115 *tmp116 6 *tmp105
   102 jump *label536 notEqual *tmp105 false
   103 label *label534
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  104 ucontrol approach *tmp115 *tmp116 5.5
   105 label *label535
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  106 ucontrol within *tmp115 *tmp116 6 *tmp105
   107 jump *label534 equal *tmp105 false
   108 label *label536
   109 label *label537
 
   968 label *label539
   969 write "Moving..." processor2 ".status3"
   970 label *label540
-    * op sub *tmp107 :moveTo:radius 0.5
+  971 op sub *tmp107 6 0.5
   972 label *label541
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  973 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   974 jump *label544 notEqual *tmp105 false
   975 label *label542
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  976 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 5.5
   977 label *label543
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  978 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   979 jump *label542 equal *tmp105 false
   980 label *label544
   981 label *label545

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
    89 label *label457
    90 sensor *tmp115 :depositItems:block @x
    91 sensor *tmp116 :depositItems:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius 6
    92 label *label530
    93 label *label531
    94 write "Moving..." processor2 ".status3"
    95 label *label532
-    * op sub *tmp107 6 0.5
    96 label *label533
    97 ucontrol within *tmp115 *tmp116 6 *tmp105
    98 jump *label536 notEqual *tmp105 false
 
   957 jump *label54 always
   958 end
   959 label *label43
-    * set :moveTo:x :buildBlockAtLocal:x
-    * set :moveTo:y :buildBlockAtLocal:y
-    * set :moveTo:radius 6
   960 label *label538
   961 label *label539
   962 write "Moving..." processor2 ".status3"
   963 label *label540
-    * op sub *tmp107 6 0.5
   964 label *label541
   965 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   966 jump *label544 notEqual *tmp105 false

Modifications by Inline function call at Actions.mnd:145:5 (+1 instructions):
 
   246 set :status2:text "Fetching "
   247 set :status2:item :fetchBlock:item
   248 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label123 (h:*label123)
-    * call *label15 *invalid :status2*retval (m:*label123) (h:*label123)
-    * label *label123
+  249 label *label546
+  250 write :status2:text processor2 ".status2"
+  251 write :status2:item processor2 ".item2"
+  252 write :status2:block processor2 ".block2"
+  253 label *label547
   254 sensor *tmp153 :fetchBlock:block @x
   255 sensor *tmp154 :fetchBlock:block @y
   256 set :moveToEmpty:x *tmp153

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   247 set :status2:item :fetchBlock:item
   248 set :status2:block :fetchBlock:block
   249 label *label546
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  250 write "Fetching " processor2 ".status2"
+  251 write :fetchBlock:item processor2 ".item2"
+  252 write :fetchBlock:block processor2 ".block2"
   253 label *label547
   254 sensor *tmp153 :fetchBlock:block @x
   255 sensor *tmp154 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   243 write :transportStatus:target processor2 ".transportTarget"
   244 write :fetchBlock:item processor2 ".transportItem"
   245 label *label487
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   246 label *label546
   247 write "Fetching " processor2 ".status2"
   248 write :fetchBlock:item processor2 ".item2"

Modifications by Inline function call at Actions.mnd:139:5 (+1 instructions):
 
   224 set :status2:text "Mining "
   225 set :status2:item :mineOre.2:ore
   226 set :status2:block "core"
-    * setaddr :status2*retaddr *label119 (h:*label119)
-    * call *label15 *invalid :status2*retval (m:*label119) (h:*label119)
-    * label *label119
+  227 label *label548
+  228 write :status2:text processor2 ".status2"
+  229 write :status2:item processor2 ".item2"
+  230 write :status2:block processor2 ".block2"
+  231 label *label549
   232 set :mineOre:ore :mineOre.2:ore
   233 set :mineOre:amount 28
   234 set :mineOre:block .core

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   225 set :status2:item :mineOre.2:ore
   226 set :status2:block "core"
   227 label *label548
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  228 write "Mining " processor2 ".status2"
+  229 write :mineOre.2:ore processor2 ".item2"
+  230 write "core" processor2 ".block2"
   231 label *label549
   232 set :mineOre:ore :mineOre.2:ore
   233 set :mineOre:amount 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   221 return :mineOre.1*retaddr
   222 end
   223 label *label27
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.2:ore
-    * set :status2:block "core"
   224 label *label548
   225 write "Mining " processor2 ".status2"
   226 write :mineOre.2:ore processor2 ".item2"

Modifications by Inline function call at Actions.mnd:147:5 (+3 instructions):
 
   254 setaddr :moveToEmpty*retaddr *label124 (h:*label124)
   255 call *label20 *invalid :moveToEmpty*retval (m:*label124) (h:*label124)
   256 label *label124
-    * setaddr :dropAll*retaddr *label125 (h:*label125)
-    * call *label21 *invalid :dropAll*retval (m:*label125) (h:*label125)
-    * label *label125
+  257 label *label550
+  258 label *label551
+  259 sensor *tmp113 @unit @firstItem
+  260 jump *label554 equal *tmp113 null
+  261 label *label552
+  262 ucontrol itemDrop @air 1000
+  263 label *label553
+  264 sensor *tmp113 @unit @firstItem
+  265 jump *label552 notEqual *tmp113 null
+  266 label *label554
+  267 label *label555
   268 label *label126
   269 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   270 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function call at Actions.mnd:146:5 (+5 instructions):
 
   251 sensor *tmp154 :fetchBlock:block @y
   252 set :moveToEmpty:x *tmp153
   253 set :moveToEmpty:y *tmp154
-    * setaddr :moveToEmpty*retaddr *label124 (h:*label124)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label124) (h:*label124)
-    * label *label124
+  254 label *label556
+  255 label *label557
+  256 write "Moving..." processor2 ".status3"
+  257 label *label558
+  258 label *label559
+  259 sensor *tmp108 @unit @firstItem
+  260 jump *label560 equal *tmp108 null
+  261 ucontrol itemDrop @air 1000
+  262 label *label560
+  263 label *label561
+  264 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  265 label *label562
+  266 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  267 jump *label559 equal *tmp111 false
+  268 label *label563
+  269 label *label564
   270 label *label550
   271 label *label551
   272 sensor *tmp113 @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   261 ucontrol itemDrop @air 1000
   262 label *label560
   263 label *label561
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  264 ucontrol approach *tmp153 *tmp154 5.5
   265 label *label562
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  266 ucontrol within *tmp153 *tmp154 6 *tmp111
   267 jump *label559 equal *tmp111 false
   268 label *label563
   269 label *label564

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   249 label *label547
   250 sensor *tmp153 :fetchBlock:block @x
   251 sensor *tmp154 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp153
-    * set :moveToEmpty:y *tmp154
   252 label *label556
   253 label *label557
   254 write "Moving..." processor2 ".status3"

Modifications by Inline function call at Actions.mnd:119:16 (+35 instructions):
 
   182 label *label107
   183 label *label108
   184 jump *label109 notEqual .noTarget false
-    * setaddr :targetMet*retaddr *label111 (h:*label111)
-    * call *label39 *invalid :targetMet*retval (m:*label111) (h:*label111)
-    * label *label111
+  185 label *label565
+  186 sensor *tmp298 .core @copper
+  187 jump *label566 greaterThanEq *tmp298 copper
+  188 write @copper processor2 ".missing"
+  189 set :targetMet*retval false
+  190 jump *label580 always
+  191 label *label566
+  192 label *label567
+  193 sensor *tmp301 .core @lead
+  194 jump *label568 greaterThanEq *tmp301 lead
+  195 write @lead processor2 ".missing"
+  196 set :targetMet*retval false
+  197 jump *label580 always
+  198 label *label568
+  199 label *label569
+  200 sensor *tmp304 .core @graphite
+  201 jump *label570 greaterThanEq *tmp304 graphite
+  202 write @graphite processor2 ".missing"
+  203 set :targetMet*retval false
+  204 jump *label580 always
+  205 label *label570
+  206 label *label571
+  207 sensor *tmp307 .core @silicon
+  208 jump *label572 greaterThanEq *tmp307 silicon
+  209 write @silicon processor2 ".missing"
+  210 set :targetMet*retval false
+  211 jump *label580 always
+  212 label *label572
+  213 label *label573
+  214 sensor *tmp310 .core @titanium
+  215 jump *label574 greaterThanEq *tmp310 titanium
+  216 write @titanium processor2 ".missing"
+  217 set :targetMet*retval false
+  218 jump *label580 always
+  219 label *label574
+  220 label *label575
+  221 sensor *tmp313 .core @metaglass
+  222 jump *label576 greaterThanEq *tmp313 metaglass
+  223 write @metaglass processor2 ".missing"
+  224 set :targetMet*retval false
+  225 jump *label580 always
+  226 label *label576
+  227 label *label577
+  228 sensor *tmp316 .core @thorium
+  229 jump *label578 greaterThanEq *tmp316 thorium
+  230 write @thorium processor2 ".missing"
+  231 set :targetMet*retval false
+  232 jump *label580 always
+  233 label *label578
+  234 label *label579
+  235 set :targetMet*retval true
+  236 jump *label580 always
+  237 label *label580
   238 jump *label112 equal :targetMet*retval false
   239 jump *label104 always
   240 label *label112

Modifications by Inline function call at Actions.mnd:162:5 (+1 instructions):
 
   355 set :status2:text "Supplying "
   356 set :status2:item :supplyBlock:ore
   357 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label133 (h:*label133)
-    * call *label15 *invalid :status2*retval (m:*label133) (h:*label133)
-    * label *label133
+  358 label *label581
+  359 write :status2:text processor2 ".status2"
+  360 write :status2:item processor2 ".item2"
+  361 write :status2:block processor2 ".block2"
+  362 label *label582
   363 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   364 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   365 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   356 set :status2:item :supplyBlock:ore
   357 set :status2:block :supplyBlock:block
   358 label *label581
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  359 write "Supplying " processor2 ".status2"
+  360 write :supplyBlock:ore processor2 ".item2"
+  361 write :supplyBlock:block processor2 ".block2"
   362 label *label582
   363 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   364 sensor *tmp165 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   352 return :fetchBlock*retaddr
   353 end
   354 label *label29
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   355 label *label581
   356 write "Supplying " processor2 ".status2"
   357 write :supplyBlock:ore processor2 ".item2"

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+1 instructions):
 
    49 label *label56
    50 return :status2*retaddr
    51 end
-    * label *label20
-    * label *label449
-    * write "Moving..." processor2 ".status3"
-    * label *label450
-    * label *label67
-    * sensor *tmp108 @unit @firstItem
-    * jump *label70 equal *tmp108 null
-    * ucontrol itemDrop @air 1000
-    * label *label70
-    * label *label71
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label68
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * jump *label67 equal *tmp111 false
-    * label *label69
-    * label *label65
-    * return :moveToEmpty*retaddr
-    * end
    52 label *label21
    53 label *label73
    54 sensor *tmp113 @unit @firstItem
 
   135 set :mineOre:y :locateOre:y
   136 set :moveToEmpty:x :locateOre:x
   137 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label97 (h:*label97)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
-    * label *label97
+  138 label *label583
+  139 label *label584
+  140 write "Moving..." processor2 ".status3"
+  141 label *label585
+  142 label *label586
+  143 sensor *tmp108 @unit @firstItem
+  144 jump *label587 equal *tmp108 null
+  145 ucontrol itemDrop @air 1000
+  146 label *label587
+  147 label *label588
+  148 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  149 label *label589
+  150 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  151 jump *label586 equal *tmp111 false
+  152 label *label590
+  153 label *label591
   154 sensor *tmp132 @unit @firstItem
   155 jump *label98 equal *tmp132 :mineOre:ore
   156 setaddr :dropAll*retaddr *label100 (h:*label100)
 
   432 label *label468
   433 set :moveToEmpty:x .coreX
   434 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label469 (h:*label469)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label469) (h:*label469)
-    * label *label469
+  435 label *label592
+  436 label *label593
+  437 write "Moving..." processor2 ".status3"
+  438 label *label594
+  439 label *label595
+  440 sensor *tmp108 @unit @firstItem
+  441 jump *label596 equal *tmp108 null
+  442 ucontrol itemDrop @air 1000
+  443 label *label596
+  444 label *label597
+  445 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  446 label *label598
+  447 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  448 jump *label595 equal *tmp111 false
+  449 label *label599
+  450 label *label600
   451 setaddr :dropAll*retaddr *label470 (h:*label470)
   452 call *label21 *invalid :dropAll*retval (m:*label470) (h:*label470)
   453 label *label470

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   145 ucontrol itemDrop @air 1000
   146 label *label587
   147 label *label588
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  148 ucontrol approach :locateOre:x :locateOre:y 5.5
   149 label *label589
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  150 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
   151 jump *label586 equal *tmp111 false
   152 label *label590
   153 label *label591
 
   442 ucontrol itemDrop @air 1000
   443 label *label596
   444 label *label597
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  445 ucontrol approach .coreX .coreY 5.5
   446 label *label598
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  447 ucontrol within .coreX .coreY 6 *tmp111
   448 jump *label595 equal *tmp111 false
   449 label *label599
   450 label *label600

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   133 label *label465
   134 set :mineOre:x :locateOre:x
   135 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   136 label *label583
   137 label *label584
   138 write "Moving..." processor2 ".status3"
 
   428 setaddr :status2*retaddr *label468 (h:*label468)
   429 call *label15 *invalid :status2*retval (m:*label468) (h:*label468)
   430 label *label468
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   431 label *label592
   432 label *label593
   433 write "Moving..." processor2 ".status3"

Modifications by Replicate loop condition at BuilderController.mnd:232:5 (+2 instructions):
 
   860 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   861 label *label283
   862 jump *label282 notEqual :targetMet*retval false
+  863 label *label601
   864 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   865 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
   866 label *label284
   867 label *label281
-    * jump *label280 always
+  868 setaddr :targetMet*retaddr *label602 (h:*label602)
+  869 call *label39 *invalid :targetMet*retval (m:*label602) (h:*label602)
+  870 label *label602
+  871 jump *label601 equal :targetMet*retval false
   872 label *label282
   873 jump *label285 equal :meetTargetLocal:forBuild false
   874 write false AÕFFJS-micro-processor9 ":buildStart*finished"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-3 instructions):
 
    42 wait 1e12
    43 jump *label54 always
    44 end
-    * label *label15
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
-    * label *label56
-    * return :status2*retaddr
-    * end
    45 label *label21
    46 label *label73
    47 sensor *tmp113 @unit @firstItem
 
   244 set :status2:text "Mining "
   245 set :status2:item :mineOre.1:ore
   246 set :status2:block :mineOre.1:block
-    * setaddr :status2*retaddr *label116 (h:*label116)
-    * call *label15 *invalid :status2*retval (m:*label116) (h:*label116)
-    * label *label116
+  247 label *label603
+  248 write :status2:text processor2 ".status2"
+  249 write :status2:item processor2 ".item2"
+  250 write :status2:block processor2 ".block2"
+  251 label *label604
   252 set :mineOre:ore :mineOre.1:ore
   253 set :mineOre:amount 28
   254 set :mineOre:block :mineOre.1:block
 
   420 set :status2:text "Transferring "
   421 set :status2:item @coal
   422 set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label468 (h:*label468)
-    * call *label15 *invalid :status2*retval (m:*label468) (h:*label468)
-    * label *label468
+  423 label *label605
+  424 write :status2:text processor2 ".status2"
+  425 write :status2:item processor2 ".item2"
+  426 write :status2:block processor2 ".block2"
+  427 label *label606
   428 label *label592
   429 label *label593
   430 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   245 set :status2:item :mineOre.1:ore
   246 set :status2:block :mineOre.1:block
   247 label *label603
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  248 write "Mining " processor2 ".status2"
+  249 write :mineOre.1:ore processor2 ".item2"
+  250 write :mineOre.1:block processor2 ".block2"
   251 label *label604
   252 set :mineOre:ore :mineOre.1:ore
   253 set :mineOre:amount 28
 
   421 set :status2:item @coal
   422 set :status2:block :supplyBlockFromCore:target
   423 label *label605
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  424 write "Transferring " processor2 ".status2"
+  425 write @coal processor2 ".item2"
+  426 write :supplyBlockFromCore:target processor2 ".block2"
   427 label *label606
   428 label *label592
   429 label *label593

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   241 return :mineOre*retaddr
   242 end
   243 label *label26
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block :mineOre.1:block
   244 label *label603
   245 write "Mining " processor2 ".status2"
   246 write :mineOre.1:ore processor2 ".item2"
 
   414 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   415 write @coal processor2 ".transportItem"
   416 label *label489
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block :supplyBlockFromCore:target
   417 label *label605
   418 write "Transferring " processor2 ".status2"
   419 write @coal processor2 ".item2"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
    42 wait 1e12
    43 jump *label54 always
    44 end
-    * label *label21
-    * label *label73
-    * sensor *tmp113 @unit @firstItem
-    * jump *label75 equal *tmp113 null
-    * label *label479
-    * ucontrol itemDrop @air 1000
-    * label *label74
-    * sensor *tmp113 @unit @firstItem
-    * jump *label479 notEqual *tmp113 null
-    * label *label75
-    * label *label72
-    * return :dropAll*retaddr
-    * end
    45 label *label23
    46 label *label451
    47 write "Depositing..." processor2 ".status3"
 
   131 label *label591
   132 sensor *tmp132 @unit @firstItem
   133 jump *label98 equal *tmp132 :mineOre:ore
-    * setaddr :dropAll*retaddr *label100 (h:*label100)
-    * call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
-    * label *label100
+  134 label *label607
+  135 label *label608
+  136 sensor *tmp113 @unit @firstItem
+  137 jump *label611 equal *tmp113 null
+  138 label *label609
+  139 ucontrol itemDrop @air 1000
+  140 label *label610
+  141 sensor *tmp113 @unit @firstItem
+  142 jump *label609 notEqual *tmp113 null
+  143 label *label611
+  144 label *label612
   145 label *label98
   146 label *label99
   147 label *label453
 
   430 jump *label595 equal *tmp111 false
   431 label *label599
   432 label *label600
-    * setaddr :dropAll*retaddr *label470 (h:*label470)
-    * call *label21 *invalid :dropAll*retval (m:*label470) (h:*label470)
-    * label *label470
+  433 label *label613
+  434 label *label614
+  435 sensor *tmp113 @unit @firstItem
+  436 jump *label617 equal *tmp113 null
+  437 label *label615
+  438 ucontrol itemDrop @air 1000
+  439 label *label616
+  440 sensor *tmp113 @unit @firstItem
+  441 jump *label615 notEqual *tmp113 null
+  442 label *label617
+  443 label *label618
   444 label *label471
   445 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
   446 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   157 jump *label104 always
   158 label *label105
   159 label *label106
-    * ucontrol mine :mineOre:x :mineOre:y
+  160 ucontrol mine :locateOre:x :locateOre:y
   161 jump *label107 lessThanEq @second :mineOre:stop
   162 jump *label104 always
   163 label *label107
 
   442 label *label617
   443 label *label618
   444 label *label471
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  445 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   446 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   447 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  448 op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal
   449 op land *tmp174 *tmp172 *tmp173
   450 jump *label472 equal *tmp174 false
   451 ucontrol itemDrop @air 1000
   452 label *label472
   453 label *label473
   454 label *label474
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
+  455 sensor *tmp176 @unit @coal
   456 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
+  457 sensor *tmp178 .core @coal
   458 op land *tmp179 *tmp177 *tmp178
   459 jump *label471 notEqual *tmp179 false
   460 label *label475
   461 set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  462 set :depositItems:item @coal
   463 setaddr :depositItems*retaddr *label476 (h:*label476)
   464 call *label23 *invalid :depositItems*retval (m:*label476) (h:*label476)
   465 label *label476

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   111 label *label463
   112 label *label464
   113 label *label465
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   114 label *label583
   115 label *label584
   116 write "Moving..." processor2 ".status3"
 
   398 jump *label159 always
   399 label *label158
   400 set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   401 label *label466
   402 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   403 op min :supplyBlockFromCore:cap *tmp169 28

Modifications by Replicate loop condition at BuilderController.mnd:238:9 (+2 instructions):
 
   873 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   874 label *label291
   875 jump *label290 notEqual :targetMet*retval false
+  876 label *label619
   877 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   878 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
   879 label *label292
   880 label *label289
-    * jump *label288 always
+  881 setaddr :targetMet*retaddr *label620 (h:*label620)
+  882 call *label39 *invalid :targetMet*retval (m:*label620) (h:*label620)
+  883 label *label620
+  884 jump *label619 equal :targetMet*retval false
   885 label *label290
   886 label *label285
   887 label *label286

Modifications by Inline function call at BuilderController.mnd:152:5 (+6 instructions):
 
   488 write "Phase 1: supplying base" processor2 ".status1"
   489 label *label420
   490 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label171 (h:*label171)
-    * call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
-    * label *label171
+  491 label *label621
+  492 label *label622
+  493 write "Mining " processor2 ".status2"
+  494 write :mineOre.2:ore processor2 ".item2"
+  495 write "core" processor2 ".block2"
+  496 label *label623
+  497 set :mineOre:ore :mineOre.2:ore
+  498 set :mineOre:amount 28
+  499 set :mineOre:block .core
+  500 setaddr :mineOre*retaddr *label624 (h:*label624)
+  501 call *label25 *invalid :mineOre*retval (m:*label624) (h:*label624)
+  502 label *label624
+  503 label *label625
   504 label *label169
   505 jump *label168 always
   506 label *label167

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   491 label *label621
   492 label *label622
   493 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  494 write @coal processor2 ".item2"
   495 write "core" processor2 ".block2"
   496 label *label623
-    * set :mineOre:ore :mineOre.2:ore
+  497 set :mineOre:ore @coal
   498 set :mineOre:amount 28
   499 set :mineOre:block .core
   500 setaddr :mineOre*retaddr *label624 (h:*label624)

Modifications by Inline function call at Actions.mnd:157:5 (+23 instructions):
 
   323 label *label128
   324 set :depositItems:block .core
   325 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label131 (h:*label131)
-    * call *label23 *invalid :depositItems*retval (m:*label131) (h:*label131)
-    * label *label131
+  326 label *label626
+  327 label *label627
+  328 write "Depositing..." processor2 ".status3"
+  329 label *label628
+  330 sensor *tmp117 @unit @firstItem
+  331 jump *label642 notEqual *tmp117 :depositItems:item
+  332 label *label629
+  333 sensor *tmp115 :depositItems:block @x
+  334 sensor *tmp116 :depositItems:block @y
+  335 label *label630
+  336 label *label631
+  337 write "Moving..." processor2 ".status3"
+  338 label *label632
+  339 label *label633
+  340 ucontrol within *tmp115 *tmp116 6 *tmp105
+  341 jump *label636 notEqual *tmp105 false
+  342 label *label634
+  343 ucontrol approach *tmp115 *tmp116 5.5
+  344 label *label635
+  345 ucontrol within *tmp115 *tmp116 6 *tmp105
+  346 jump *label634 equal *tmp105 false
+  347 label *label636
+  348 label *label637
+  349 label *label638
+  350 sensor :depositItems:cap :depositItems:block @itemCapacity
+  351 label *label639
+  352 ucontrol itemDrop :depositItems:block 28
+  353 label *label640
+  354 sensor *tmp121 @unit @firstItem
+  355 op mul *tmp122 *tmp121 :depositItems:cap
+  356 sensor *tmp123 :depositItems:block :depositItems:item
+  357 jump *label639 greaterThan *tmp122 *tmp123
+  358 label *label641
+  359 jump *label647 always
+  360 label *label642
+  361 label *label643
+  362 sensor *tmp125 @unit @firstItem
+  363 jump *label646 equal *tmp125 null
+  364 label *label644
+  365 ucontrol itemDrop @air 1000
+  366 label *label645
+  367 sensor *tmp125 @unit @firstItem
+  368 jump *label644 notEqual *tmp125 null
+  369 label *label646
+  370 label *label647
+  371 label *label648
+  372 write 0 processor2 ".transportTarget"
+  373 write null processor2 ".transportItem"
+  374 label *label649
+  375 label *label650
   376 label *label121
   377 return :fetchBlock*retaddr
   378 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   328 write "Depositing..." processor2 ".status3"
   329 label *label628
   330 sensor *tmp117 @unit @firstItem
-    * jump *label642 notEqual *tmp117 :depositItems:item
+  331 jump *label642 notEqual *tmp117 :fetchBlock:item
   332 label *label629
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  333 sensor *tmp115 .core @x
+  334 sensor *tmp116 .core @y
   335 label *label630
   336 label *label631
   337 write "Moving..." processor2 ".status3"
 
   347 label *label636
   348 label *label637
   349 label *label638
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  350 sensor :depositItems:cap .core @itemCapacity
   351 label *label639
-    * ucontrol itemDrop :depositItems:block 28
+  352 ucontrol itemDrop .core 28
   353 label *label640
   354 sensor *tmp121 @unit @firstItem
   355 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  356 sensor *tmp123 .core :fetchBlock:item
   357 jump *label639 greaterThan *tmp122 *tmp123
   358 label *label641
   359 jump *label647 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   321 op land *tmp163 *tmp161 *tmp162
   322 jump *label126 notEqual *tmp163 false
   323 label *label128
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   324 label *label626
   325 label *label627
   326 write "Depositing..." processor2 ".status3"

Modifications by Inline function call at BuilderController.mnd:161:17 (+10 instructions):
 
   437 jump *label158 greaterThanEq *tmp217 50
   438 set :supplyBlock:block .thoriumGenerator
   439 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label160 (h:*label160)
-    * call *label29 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
-    * label *label160
+  440 label *label651
+  441 label *label652
+  442 write "Supplying " processor2 ".status2"
+  443 write :supplyBlock:ore processor2 ".item2"
+  444 write :supplyBlock:block processor2 ".block2"
+  445 label *label653
+  446 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  447 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  448 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  449 jump *label655 lessThanEq :supplyBlock:missing 0
+  450 set :mineOre:ore :supplyBlock:ore
+  451 set :mineOre:amount :supplyBlock:blockCapacity
+  452 set :mineOre:block :supplyBlock:block
+  453 setaddr :mineOre*retaddr *label654 (h:*label654)
+  454 call *label25 *invalid :mineOre*retval (m:*label654) (h:*label654)
+  455 label *label654
+  456 label *label655
+  457 label *label656
+  458 label *label657
   459 jump *label159 always
   460 label *label158
   461 set :supplyBlockFromCore:target .thoriumGenerator

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   440 label *label651
   441 label *label652
   442 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  443 write @coal processor2 ".item2"
   444 write :supplyBlock:block processor2 ".block2"
   445 label *label653
   446 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  447 sensor *tmp165 :supplyBlock:block @coal
   448 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   449 jump *label655 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  450 set :mineOre:ore @coal
   451 set :mineOre:amount :supplyBlock:blockCapacity
   452 set :mineOre:block :supplyBlock:block
   453 setaddr :mineOre*retaddr *label654 (h:*label654)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-10 instructions):
 
   657 sensor *tmp255 .core @titanium
   658 op sub *tmp256 titanium *tmp255
   659 op min *tmp254 5 *tmp256
-    * jump *label204 always
   660 label *label204
   661 sensor *tmp258 .titaniumDrill @titanium
   662 jump *label205 greaterThanEq *tmp258 *tmp254
 
  1025 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1026 write 2 AÕFFJS-micro-processor9 "@counter"
  1027 set :buildBlock*retval :buildBlockAtLocal*retval
-    * jump *label298 always
  1028 label *label298
  1029 return :buildBlock*retaddr
  1030 end
 
  1089 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
  1090 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
  1091 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label306 always
  1092 label *label306
  1093 set :buildBlockFromCfg*finished true
  1094 jump *label54 always
 
  1180 label *label333
  1181 label *label330
  1182 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * jump *label312 always
  1183 label *label312
  1184 return :buildBlockAtLocal*retaddr
  1185 end
 
  1194 call *label43 *invalid :buildBlockAtLocal*retval (m:*label335) (h:*label335)
  1195 label *label335
  1196 set :buildBlockAt*retval :buildBlockAtLocal*retval
-    * jump *label334 always
  1197 label *label334
  1198 set :buildBlockAt*finished true
  1199 jump *label54 always
 
  1216 read *tmp375 processor8 ":addTitaniumDrill*finished"
  1217 jump *label338 equal *tmp375 false
  1218 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
-    * jump *label336 always
  1219 label *label336
  1220 set :buildFirstTitaniumDrillAt*finished true
  1221 jump *label54 always
 
  1246 set :titaniumDrillScore:negative .negative
  1247 label *label490
  1248 ucontrol getBlock *tmp389 *tmp390 *tmp379 *tmp378 :getFloor:floor
-    * jump *label491 always
  1249 label *label491
  1250 jump *label493 notEqual :getFloor:floor @ore-titanium
  1251 label *label492
 
  1268 set :titaniumDrillScore:negative .negative
  1269 label *label498
  1270 ucontrol getBlock *tmp389 *tmp393 *tmp379 *tmp378 :getFloor:floor
-    * jump *label499 always
  1271 label *label499
  1272 jump *label501 notEqual :getFloor:floor @ore-titanium
  1273 label *label500
 
  1290 set :titaniumDrillScore:negative .negative
  1291 label *label506
  1292 ucontrol getBlock *tmp395 *tmp390 *tmp379 *tmp378 :getFloor:floor
-    * jump *label507 always
  1293 label *label507
  1294 jump *label509 notEqual :getFloor:floor @ore-titanium
  1295 label *label508
 
  1311 set :titaniumDrillScore:negative .negative
  1312 label *label514
  1313 ucontrol getBlock *tmp395 *tmp393 *tmp379 *tmp378 :getFloor:floor
-    * jump *label515 always
  1314 label *label515
  1315 jump *label517 notEqual :getFloor:floor @ore-titanium
  1316 label *label516

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-4 instructions):
 
   856 label *label40
   857 label *label388
   858 op sign *tmp320 :meetTargetLocal:copper
-    * op add :meetTargetLocal:count 0 *tmp320
+  859 set :meetTargetLocal:count *tmp320
   860 label *label389
   861 label *label392
   862 op sign *tmp320 :meetTargetLocal:lead
 
  1407 op sub *tmp429 :buildTitaniumDrills:y 1
  1408 set :buildTitaniumDrill:x *tmp428
  1409 set :buildTitaniumDrill:y *tmp429
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1410 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1411 setaddr :buildTitaniumDrill*retaddr *label376 (h:*label376)
  1412 call *label45 *invalid :buildTitaniumDrill*retval (m:*label376) (h:*label376)
 
  1418 op add *tmp433 :buildTitaniumDrills:y 1
  1419 set :buildTitaniumDrill:x *tmp432
  1420 set :buildTitaniumDrill:y *tmp433
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1421 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1422 setaddr :buildTitaniumDrill*retaddr *label377 (h:*label377)
  1423 call *label45 *invalid :buildTitaniumDrill*retval (m:*label377) (h:*label377)
 
  1429 op add *tmp437 :buildTitaniumDrills:y 1
  1430 set :buildTitaniumDrill:x *tmp436
  1431 set :buildTitaniumDrill:y *tmp437
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1432 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1433 setaddr :buildTitaniumDrill*retaddr *label378 (h:*label378)
  1434 call *label45 *invalid :buildTitaniumDrill*retval (m:*label378) (h:*label378)
 
  1439 jump *label379 notEqual :buildTitaniumDrills:built 0
  1440 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1441 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1442 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1443 setaddr :buildTitaniumDrill*retaddr *label381 (h:*label381)
  1444 call *label45 *invalid :buildTitaniumDrill*retval (m:*label381) (h:*label381)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   855 end
   856 label *label40
   857 label *label388
-    * op sign *tmp320 :meetTargetLocal:copper
-    * set :meetTargetLocal:count *tmp320
+  858 op sign :meetTargetLocal:count :meetTargetLocal:copper
   859 label *label389
   860 label *label392
   861 op sign *tmp320 :meetTargetLocal:lead

Modifications by Iterated phase, Temp Variables Elimination, pass 2, iteration 1 (-2 instructions):
 
   703 label *label436
   704 sensor :supplyBase0:coal.1 .core @coal
   705 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.2:ore *tmp281
+  706 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   707 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   708 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   709 label *label229
 
   767 sensor *tmp294 .core @sand
   768 op lessThanEq *tmp295 *tmp293 *tmp294
   769 op or *tmp296 .scrap *tmp295
-    * select *tmp297 notEqual *tmp296 false @coal @sand
-    * set :mineOre.2:ore *tmp297
+  770 select :mineOre.2:ore notEqual *tmp296 false @coal @sand
   771 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   772 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   773 label *label251

Modifications by Inline function call at BuilderController.mnd:101:17 (+6 instructions):
 
   668 write "Goal 5: supplying generator" processor2 ".status1"
   669 label *label432
   670 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label212 (h:*label212)
-    * call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
-    * label *label212
+  671 label *label658
+  672 label *label659
+  673 write "Mining " processor2 ".status2"
+  674 write :mineOre.2:ore processor2 ".item2"
+  675 write "core" processor2 ".block2"
+  676 label *label660
+  677 set :mineOre:ore :mineOre.2:ore
+  678 set :mineOre:amount 28
+  679 set :mineOre:block .core
+  680 setaddr :mineOre*retaddr *label661 (h:*label661)
+  681 call *label25 *invalid :mineOre*retval (m:*label661) (h:*label661)
+  682 label *label661
+  683 label *label662
   684 jump *label210 always
   685 label *label209
   686 sensor *tmp267 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   671 label *label658
   672 label *label659
   673 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  674 write @coal processor2 ".item2"
   675 write "core" processor2 ".block2"
   676 label *label660
-    * set :mineOre:ore :mineOre.2:ore
+  677 set :mineOre:ore @coal
   678 set :mineOre:amount 28
   679 set :mineOre:block .core
   680 setaddr :mineOre*retaddr *label661 (h:*label661)

Modifications by Inline function call at BuilderController.mnd:62:17 (+10 instructions):
 
   576 label *label422
   577 set :supplyBlock:block AJEMJJ-graphite-press0
   578 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label180 (h:*label180)
-    * call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
-    * label *label180
+  579 label *label663
+  580 label *label664
+  581 write "Supplying " processor2 ".status2"
+  582 write :supplyBlock:ore processor2 ".item2"
+  583 write :supplyBlock:block processor2 ".block2"
+  584 label *label665
+  585 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  586 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  587 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  588 jump *label667 lessThanEq :supplyBlock:missing 0
+  589 set :mineOre:ore :supplyBlock:ore
+  590 set :mineOre:amount :supplyBlock:blockCapacity
+  591 set :mineOre:block :supplyBlock:block
+  592 setaddr :mineOre*retaddr *label666 (h:*label666)
+  593 call *label25 *invalid :mineOre*retval (m:*label666) (h:*label666)
+  594 label *label666
+  595 label *label667
+  596 label *label668
+  597 label *label669
   598 set :supplyBase0:supplied true
   599 label *label177
   600 label *label178

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   579 label *label663
   580 label *label664
   581 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  582 write @coal processor2 ".item2"
   583 write :supplyBlock:block processor2 ".block2"
   584 label *label665
   585 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  586 sensor *tmp165 :supplyBlock:block @coal
   587 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   588 jump *label667 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  589 set :mineOre:ore @coal
   590 set :mineOre:amount :supplyBlock:blockCapacity
   591 set :mineOre:block :supplyBlock:block
   592 setaddr :mineOre*retaddr *label666 (h:*label666)

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1 (-4 instructions):
 
  1430 op sub *tmp429 :buildTitaniumDrills:y 1
  1431 set :buildTitaniumDrill:x *tmp428
  1432 set :buildTitaniumDrill:y *tmp429
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1433 setaddr :buildTitaniumDrill*retaddr *label376 (h:*label376)
  1434 call *label45 *invalid :buildTitaniumDrill*retval (m:*label376) (h:*label376)
  1435 label *label376
 
  1440 op add *tmp433 :buildTitaniumDrills:y 1
  1441 set :buildTitaniumDrill:x *tmp432
  1442 set :buildTitaniumDrill:y *tmp433
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1443 setaddr :buildTitaniumDrill*retaddr *label377 (h:*label377)
  1444 call *label45 *invalid :buildTitaniumDrill*retval (m:*label377) (h:*label377)
  1445 label *label377
 
  1450 op add *tmp437 :buildTitaniumDrills:y 1
  1451 set :buildTitaniumDrill:x *tmp436
  1452 set :buildTitaniumDrill:y *tmp437
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1453 setaddr :buildTitaniumDrill*retaddr *label378 (h:*label378)
  1454 call *label45 *invalid :buildTitaniumDrill*retval (m:*label378) (h:*label378)
  1455 label *label378
 
  1459 jump *label379 notEqual :buildTitaniumDrills:built 0
  1460 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1461 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1462 setaddr :buildTitaniumDrill*retaddr *label381 (h:*label381)
  1463 call *label45 *invalid :buildTitaniumDrill*retval (m:*label381) (h:*label381)
  1464 label *label381

Modifications by Inline function call at BuilderController.mnd:119:21 (+6 instructions):
 
   730 sensor :supplyBase0:coal.1 .core @coal
   731 sensor :supplyBase0:sand.1 .core @sand
   732 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * setaddr :mineOre.2*retaddr *label229 (h:*label229)
-    * call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
-    * label *label229
+  733 label *label670
+  734 label *label671
+  735 write "Mining " processor2 ".status2"
+  736 write :mineOre.2:ore processor2 ".item2"
+  737 write "core" processor2 ".block2"
+  738 label *label672
+  739 set :mineOre:ore :mineOre.2:ore
+  740 set :mineOre:amount 28
+  741 set :mineOre:block .core
+  742 setaddr :mineOre*retaddr *label673 (h:*label673)
+  743 call *label25 *invalid :mineOre*retval (m:*label673) (h:*label673)
+  744 label *label673
+  745 label *label674
   746 label *label216
   747 jump *label214 always
   748 label *label213

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    34 ubind @poly
    35 set .builder @unit
    36 ulocate building core false @copper .coreX .coreY *tmp103 .core
-    * label *label52
    37 jump *label51 equal .core null
-    * label *label53
    38 set *signature "77658b7b93afc77c:v1"
    39 label *label54
    40 wait 1e12
    41 jump *label54 always
    42 end
    43 label *label23
-    * label *label451
    44 write "Depositing..." processor2 ".status3"
-    * label *label452
    45 sensor *tmp117 @unit @firstItem
    46 jump *label80 notEqual *tmp117 :depositItems:item
-    * label *label457
    47 sensor *tmp115 :depositItems:block @x
    48 sensor *tmp116 :depositItems:block @y
-    * label *label530
-    * label *label531
    49 write "Moving..." processor2 ".status3"
-    * label *label532
-    * label *label533
    50 ucontrol within *tmp115 *tmp116 6 *tmp105
    51 jump *label536 notEqual *tmp105 false
    52 label *label534
    53 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label535
    54 ucontrol within *tmp115 *tmp116 6 *tmp105
    55 jump *label534 equal *tmp105 false
    56 label *label536
-    * label *label537
-    * label *label459
    57 sensor :depositItems:cap :depositItems:block @itemCapacity
    58 label *label83
    59 ucontrol itemDrop :depositItems:block 28
-    * label *label84
    60 sensor *tmp121 @unit @firstItem
    61 op mul *tmp122 *tmp121 :depositItems:cap
    62 sensor *tmp123 :depositItems:block :depositItems:item
    63 jump *label83 greaterThan *tmp122 *tmp123
-    * label *label85
    64 jump *label81 always
    65 label *label80
-    * label *label86
    66 sensor *tmp125 @unit @firstItem
    67 jump *label88 equal *tmp125 null
    68 label *label480
    69 ucontrol itemDrop @air 1000
-    * label *label87
    70 sensor *tmp125 @unit @firstItem
    71 jump *label480 notEqual *tmp125 null
    72 label *label88
    73 label *label81
-    * label *label482
    74 write 0 processor2 ".transportTarget"
    75 write null processor2 ".transportItem"
-    * label *label483
-    * label *label78
    76 return :depositItems*retaddr
    77 end
    78 label *label25
    79 op min :mineOre:amount :mineOre:amount 28
    80 set :transportStatus:target :mineOre:amount
-    * label *label484
    81 write :mineOre:amount processor2 ".transportTarget"
    82 write :mineOre:ore processor2 ".transportItem"
-    * label *label485
-    * label *label460
    83 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
    84 jump *label463 notEqual *tmp127 false
-    * label *label461
    85 set .ERROR "Cannot locate ore"
    86 stop
-    * label *label462
    87 label *label463
-    * label *label464
-    * label *label465
-    * label *label583
-    * label *label584
    88 write "Moving..." processor2 ".status3"
-    * label *label585
    89 label *label586
    90 sensor *tmp108 @unit @firstItem
    91 jump *label587 equal *tmp108 null
    92 ucontrol itemDrop @air 1000
    93 label *label587
-    * label *label588
    94 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label589
    95 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
    96 jump *label586 equal *tmp111 false
-    * label *label590
-    * label *label591
    97 sensor *tmp132 @unit @firstItem
    98 jump *label98 equal *tmp132 :mineOre:ore
-    * label *label607
-    * label *label608
    99 sensor *tmp113 @unit @firstItem
   100 jump *label611 equal *tmp113 null
   101 label *label609
   102 ucontrol itemDrop @air 1000
-    * label *label610
   103 sensor *tmp113 @unit @firstItem
   104 jump *label609 notEqual *tmp113 null
   105 label *label611
-    * label *label612
   106 label *label98
-    * label *label99
-    * label *label453
   107 write "Mining..." processor2 ".status3"
-    * label *label454
   108 op add :mineOre:stop @second 10
   109 label *label102
   110 sensor :mineOre:item @unit @firstItem
 
   114 jump *label105 equal *tmp139 false
   115 jump *label104 always
   116 label *label105
-    * label *label106
   117 ucontrol mine :locateOre:x :locateOre:y
   118 jump *label107 lessThanEq @second :mineOre:stop
   119 jump *label104 always
   120 label *label107
-    * label *label108
   121 jump *label109 notEqual .noTarget false
-    * label *label565
   122 sensor *tmp298 .core @copper
   123 jump *label566 greaterThanEq *tmp298 copper
   124 write @copper processor2 ".missing"
   125 set :targetMet*retval false
   126 jump *label580 always
   127 label *label566
-    * label *label567
   128 sensor *tmp301 .core @lead
   129 jump *label568 greaterThanEq *tmp301 lead
   130 write @lead processor2 ".missing"
   131 set :targetMet*retval false
   132 jump *label580 always
   133 label *label568
-    * label *label569
   134 sensor *tmp304 .core @graphite
   135 jump *label570 greaterThanEq *tmp304 graphite
   136 write @graphite processor2 ".missing"
   137 set :targetMet*retval false
   138 jump *label580 always
   139 label *label570
-    * label *label571
   140 sensor *tmp307 .core @silicon
   141 jump *label572 greaterThanEq *tmp307 silicon
   142 write @silicon processor2 ".missing"
   143 set :targetMet*retval false
   144 jump *label580 always
   145 label *label572
-    * label *label573
   146 sensor *tmp310 .core @titanium
   147 jump *label574 greaterThanEq *tmp310 titanium
   148 write @titanium processor2 ".missing"
   149 set :targetMet*retval false
   150 jump *label580 always
   151 label *label574
-    * label *label575
   152 sensor *tmp313 .core @metaglass
   153 jump *label576 greaterThanEq *tmp313 metaglass
   154 write @metaglass processor2 ".missing"
   155 set :targetMet*retval false
   156 jump *label580 always
   157 label *label576
-    * label *label577
   158 sensor *tmp316 .core @thorium
   159 jump *label578 greaterThanEq *tmp316 thorium
   160 write @thorium processor2 ".missing"
   161 set :targetMet*retval false
   162 jump *label580 always
   163 label *label578
-    * label *label579
   164 set :targetMet*retval true
   165 jump *label580 always
   166 label *label580
   167 jump *label112 equal :targetMet*retval false
   168 jump *label104 always
   169 label *label112
-    * label *label113
   170 label *label109
-    * label *label110
-    * label *label103
   171 sensor *tmp146 @unit @totalItems
   172 jump *label102 lessThan *tmp146 :mineOre:amount
   173 label *label104
 
   177 setaddr :depositItems*retaddr *label114 (h:*label114)
   178 call *label23 *invalid :depositItems*retval (m:*label114) (h:*label114)
   179 label *label114
-    * label *label94
   180 return :mineOre*retaddr
   181 end
   182 label *label26
-    * label *label603
   183 write "Mining " processor2 ".status2"
   184 write :mineOre.1:ore processor2 ".item2"
   185 write :mineOre.1:block processor2 ".block2"
-    * label *label604
   186 set :mineOre:ore :mineOre.1:ore
   187 set :mineOre:amount 28
   188 set :mineOre:block :mineOre.1:block
   189 setaddr :mineOre*retaddr *label117 (h:*label117)
   190 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   191 label *label117
-    * label *label115
   192 return :mineOre.1*retaddr
   193 end
   194 label *label27
-    * label *label548
   195 write "Mining " processor2 ".status2"
   196 write :mineOre.2:ore processor2 ".item2"
   197 write "core" processor2 ".block2"
-    * label *label549
   198 set :mineOre:ore :mineOre.2:ore
   199 set :mineOre:amount 28
   200 set :mineOre:block .core
   201 setaddr :mineOre*retaddr *label120 (h:*label120)
   202 call *label25 *invalid :mineOre*retval (m:*label120) (h:*label120)
   203 label *label120
-    * label *label118
   204 return :mineOre.2*retaddr
   205 end
   206 label *label28
   207 sensor *tmp151 :fetchBlock:block @itemCapacity
   208 op min :transportStatus:target *tmp151 28
-    * label *label486
   209 write :transportStatus:target processor2 ".transportTarget"
   210 write :fetchBlock:item processor2 ".transportItem"
-    * label *label487
-    * label *label546
   211 write "Fetching " processor2 ".status2"
   212 write :fetchBlock:item processor2 ".item2"
   213 write :fetchBlock:block processor2 ".block2"
-    * label *label547
   214 sensor *tmp153 :fetchBlock:block @x
   215 sensor *tmp154 :fetchBlock:block @y
-    * label *label556
-    * label *label557
   216 write "Moving..." processor2 ".status3"
-    * label *label558
   217 label *label559
   218 sensor *tmp108 @unit @firstItem
   219 jump *label560 equal *tmp108 null
   220 ucontrol itemDrop @air 1000
   221 label *label560
-    * label *label561
   222 ucontrol approach *tmp153 *tmp154 5.5
-    * label *label562
   223 ucontrol within *tmp153 *tmp154 6 *tmp111
   224 jump *label559 equal *tmp111 false
-    * label *label563
-    * label *label564
-    * label *label550
-    * label *label551
   225 sensor *tmp113 @unit @firstItem
   226 jump *label554 equal *tmp113 null
   227 label *label552
   228 ucontrol itemDrop @air 1000
-    * label *label553
   229 sensor *tmp113 @unit @firstItem
   230 jump *label552 notEqual *tmp113 null
   231 label *label554
-    * label *label555
   232 label *label126
   233 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   234 sensor :fetchBlock:unitItem @unit @firstItem
 
   238 jump *label129 equal *tmp158 false
   239 ucontrol itemDrop @air 1000
   240 label *label129
-    * label *label130
-    * label *label127
   241 sensor *tmp160 @unit :fetchBlock:item
   242 op lessThan *tmp161 *tmp160 28
   243 sensor *tmp162 :fetchBlock:block :fetchBlock:item
   244 op land *tmp163 *tmp161 *tmp162
   245 jump *label126 notEqual *tmp163 false
-    * label *label128
-    * label *label626
-    * label *label627
   246 write "Depositing..." processor2 ".status3"
-    * label *label628
   247 sensor *tmp117 @unit @firstItem
   248 jump *label642 notEqual *tmp117 :fetchBlock:item
-    * label *label629
   249 sensor *tmp115 .core @x
   250 sensor *tmp116 .core @y
-    * label *label630
-    * label *label631
   251 write "Moving..." processor2 ".status3"
-    * label *label632
-    * label *label633
   252 ucontrol within *tmp115 *tmp116 6 *tmp105
   253 jump *label636 notEqual *tmp105 false
   254 label *label634
   255 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label635
   256 ucontrol within *tmp115 *tmp116 6 *tmp105
   257 jump *label634 equal *tmp105 false
   258 label *label636
-    * label *label637
-    * label *label638
   259 sensor :depositItems:cap .core @itemCapacity
   260 label *label639
   261 ucontrol itemDrop .core 28
-    * label *label640
   262 sensor *tmp121 @unit @firstItem
   263 op mul *tmp122 *tmp121 :depositItems:cap
   264 sensor *tmp123 .core :fetchBlock:item
   265 jump *label639 greaterThan *tmp122 *tmp123
-    * label *label641
   266 jump *label647 always
   267 label *label642
-    * label *label643
   268 sensor *tmp125 @unit @firstItem
   269 jump *label646 equal *tmp125 null
   270 label *label644
   271 ucontrol itemDrop @air 1000
-    * label *label645
   272 sensor *tmp125 @unit @firstItem
   273 jump *label644 notEqual *tmp125 null
   274 label *label646
   275 label *label647
-    * label *label648
   276 write 0 processor2 ".transportTarget"
   277 write null processor2 ".transportItem"
-    * label *label649
-    * label *label650
-    * label *label121
   278 return :fetchBlock*retaddr
   279 end
   280 label *label29
-    * label *label581
   281 write "Supplying " processor2 ".status2"
   282 write :supplyBlock:ore processor2 ".item2"
   283 write :supplyBlock:block processor2 ".block2"
-    * label *label582
   284 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   285 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   286 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   292 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   293 label *label136
   294 label *label134
-    * label *label135
-    * label *label132
   295 return :supplyBlock*retaddr
   296 end
   297 label *label32
 
   315 sensor :unpackCfg:ti :unpackCfg:type @titanium
   316 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   317 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label148
   318 return :unpackCfg*retaddr
   319 end
   320 label *label38
 
   324 op max *tmp209 0 *tmp208
   325 write *tmp209 processor7 ".sandTarget"
   326 jump *label150 equal .thoriumContainer false
-    * label *label417
   327 write "Phase 2: servicing thorium drill" processor2 ".status1"
-    * label *label418
   328 sensor *tmp211 .thoriumBattery @totalPower
   329 jump *label154 greaterThanEq *tmp211 2000
   330 sensor *tmp214 .thoriumGenerator @coal
 
   333 jump *label158 greaterThanEq *tmp217 50
   334 set :supplyBlock:block .thoriumGenerator
   335 set :supplyBlock:ore @coal
-    * label *label651
-    * label *label652
   336 write "Supplying " processor2 ".status2"
   337 write @coal processor2 ".item2"
   338 write :supplyBlock:block processor2 ".block2"
-    * label *label653
   339 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   340 sensor *tmp165 :supplyBlock:block @coal
   341 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   347 call *label25 *invalid :mineOre*retval (m:*label654) (h:*label654)
   348 label *label654
   349 label *label655
-    * label *label656
-    * label *label657
   350 jump *label159 always
   351 label *label158
   352 set :supplyBlockFromCore:target .thoriumGenerator
-    * label *label466
   353 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   354 op min :supplyBlockFromCore:cap *tmp169 28
   355 set :transportStatus:target :supplyBlockFromCore:cap
-    * label *label488
   356 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   357 write @coal processor2 ".transportItem"
-    * label *label489
-    * label *label605
   358 write "Transferring " processor2 ".status2"
   359 write @coal processor2 ".item2"
   360 write :supplyBlockFromCore:target processor2 ".block2"
-    * label *label606
-    * label *label592
-    * label *label593
   361 write "Moving..." processor2 ".status3"
-    * label *label594
   362 label *label595
   363 sensor *tmp108 @unit @firstItem
   364 jump *label596 equal *tmp108 null
   365 ucontrol itemDrop @air 1000
   366 label *label596
-    * label *label597
   367 ucontrol approach .coreX .coreY 5.5
-    * label *label598
   368 ucontrol within .coreX .coreY 6 *tmp111
   369 jump *label595 equal *tmp111 false
-    * label *label599
-    * label *label600
-    * label *label613
-    * label *label614
   370 sensor *tmp113 @unit @firstItem
   371 jump *label617 equal *tmp113 null
   372 label *label615
   373 ucontrol itemDrop @air 1000
-    * label *label616
   374 sensor *tmp113 @unit @firstItem
   375 jump *label615 notEqual *tmp113 null
   376 label *label617
-    * label *label618
   377 label *label471
   378 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   379 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   383 jump *label472 equal *tmp174 false
   384 ucontrol itemDrop @air 1000
   385 label *label472
-    * label *label473
-    * label *label474
   386 sensor *tmp176 @unit @coal
   387 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
   388 sensor *tmp178 .core @coal
   389 op land *tmp179 *tmp177 *tmp178
   390 jump *label471 notEqual *tmp179 false
-    * label *label475
   391 set :depositItems:block :supplyBlockFromCore:target
   392 set :depositItems:item @coal
   393 setaddr :depositItems*retaddr *label476 (h:*label476)
   394 call *label23 *invalid :depositItems*retval (m:*label476) (h:*label476)
   395 label *label476
-    * label *label477
   396 label *label159
   397 label *label156
-    * label *label157
   398 label *label154
-    * label *label155
   399 set :fetchBlock:block .thoriumContainer
   400 set :fetchBlock:item @thorium
   401 setaddr :fetchBlock*retaddr *label162 (h:*label162)
 
   404 sensor *tmp220 .core @thorium
   405 jump *label163 lessThanEq *tmp220 400
   406 write 0 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label165
   407 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label166
   408 label *label163
-    * label *label164
-    * label *label152
   409 jump *label151 always
   410 label *label150
   411 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   412 jump *label167 lessThanEq *tmp81 1
-    * label *label419
   413 write "Phase 1: supplying base" processor2 ".status1"
-    * label *label420
   414 set :mineOre.2:ore @coal
-    * label *label621
-    * label *label622
   415 write "Mining " processor2 ".status2"
   416 write @coal processor2 ".item2"
   417 write "core" processor2 ".block2"
-    * label *label623
   418 set :mineOre:ore @coal
   419 set :mineOre:amount 28
   420 set :mineOre:block .core
   421 setaddr :mineOre*retaddr *label624 (h:*label624)
   422 call *label25 *invalid :mineOre*retval (m:*label624) (h:*label624)
   423 label *label624
-    * label *label625
-    * label *label169
   424 jump *label168 always
   425 label *label167
   426 set :supplyBase0:supplied false
 
   429 jump *label175 greaterThanEq *tmp227 graphite
   430 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   431 jump *label177 greaterThanEq *tmp230 5
-    * label *label421
   432 write "Goal 1: graphite requirement" processor2 ".status1"
-    * label *label422
   433 set :supplyBlock:block AJEMJJ-graphite-press0
   434 set :supplyBlock:ore @coal
-    * label *label663
-    * label *label664
   435 write "Supplying " processor2 ".status2"
   436 write @coal processor2 ".item2"
   437 write :supplyBlock:block processor2 ".block2"
-    * label *label665
   438 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   439 sensor *tmp165 :supplyBlock:block @coal
   440 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   446 call *label25 *invalid :mineOre*retval (m:*label666) (h:*label666)
   447 label *label666
   448 label *label667
-    * label *label668
-    * label *label669
   449 set :supplyBase0:supplied true
   450 label *label177
-    * label *label178
   451 label *label175
-    * label *label176
   452 sensor *tmp233 AJTJK-battery1 @totalPower
   453 jump *label181 greaterThanEq *tmp233 .powerTarget
   454 sensor *tmp236 AJRJM-combustion-generator3 @coal
   455 jump *label183 greaterThanEq *tmp236 2
-    * label *label423
   456 write "Goal 4: supplying generator" processor2 ".status1"
-    * label *label424
   457 set :supplyBlock:block AJRJM-combustion-generator3
   458 set :supplyBlock:ore @coal
   459 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   461 label *label186
   462 jump *label172 always
   463 label *label183
-    * label *label184
   464 label *label181
-    * label *label182
   465 sensor *tmp239 .core @silicon
   466 jump *label187 greaterThanEq *tmp239 silicon
   467 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   468 jump *label189 greaterThanEq *tmp242 5
-    * label *label425
   469 write "Goal 2: coal for silicon requirement" processor2 ".status1"
-    * label *label426
   470 set :supplyBlock:block ALMQJN-silicon-smelter4
   471 set :supplyBlock:ore @coal
   472 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   480 jump *label195 equal .scrap false
   481 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   482 jump *label197 greaterThanEq *tmp249 10
-    * label *label427
   483 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
-    * label *label428
   484 set :supplyBlock:block AXPRJd-pulverizer26
   485 set :supplyBlock:ore @scrap
   486 setaddr :supplyBlock*retaddr *label200 (h:*label200)
 
   488 label *label200
   489 set :supplyBase0:supplied true
   490 label *label197
-    * label *label198
   491 jump *label196 always
   492 label *label195
-    * label *label429
   493 write "Goal 3: sand for silicon requirement" processor2 ".status1"
-    * label *label430
   494 set :supplyBlock:block ALMQJN-silicon-smelter4
   495 set :supplyBlock:ore @sand
   496 setaddr :supplyBlock*retaddr *label202 (h:*label202)
 
   499 set :supplyBase0:supplied true
   500 label *label196
   501 label *label193
-    * label *label194
   502 label *label190
   503 label *label187
-    * label *label188
   504 label *label173
-    * label *label174
   505 set *tmp254 100
   506 sensor *tmp252 .core @titanium
   507 jump *label204 greaterThanEq *tmp252 titanium
 
   515 sensor *tmp263 AJTJK-battery1 @totalPower
   516 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   517 jump *label209 greaterThanEq *tmp263 *tmp264
-    * label *label431
   518 write "Goal 5: supplying generator" processor2 ".status1"
-    * label *label432
   519 set :mineOre.2:ore @coal
-    * label *label658
-    * label *label659
   520 write "Mining " processor2 ".status2"
   521 write @coal processor2 ".item2"
   522 write "core" processor2 ".block2"
-    * label *label660
   523 set :mineOre:ore @coal
   524 set :mineOre:amount 28
   525 set :mineOre:block .core
   526 setaddr :mineOre*retaddr *label661 (h:*label661)
   527 call *label25 *invalid :mineOre*retval (m:*label661) (h:*label661)
   528 label *label661
-    * label *label662
   529 jump *label210 always
   530 label *label209
   531 sensor *tmp267 .core @silicon
   532 jump *label213 greaterThanEq *tmp267 silicon
   533 jump *label215 equal .scrap false
-    * label *label433
   534 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label434
   535 jump *label218 equal A¨SSJh-container30 false
   536 sensor :supplyBase0:coal .core @coal
   537 sensor :supplyBase0:sand A¨SSJh-container30 @sand
 
   551 label *label219
   552 jump *label216 always
   553 label *label215
-    * label *label435
   554 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label436
   555 sensor :supplyBase0:coal.1 .core @coal
   556 sensor :supplyBase0:sand.1 .core @sand
   557 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * label *label670
-    * label *label671
   558 write "Mining " processor2 ".status2"
   559 write :mineOre.2:ore processor2 ".item2"
   560 write "core" processor2 ".block2"
-    * label *label672
   561 set :mineOre:ore :mineOre.2:ore
   562 set :mineOre:amount 28
   563 set :mineOre:block .core
   564 setaddr :mineOre*retaddr *label673 (h:*label673)
   565 call *label25 *invalid :mineOre*retval (m:*label673) (h:*label673)
   566 label *label673
-    * label *label674
   567 label *label216
   568 jump *label214 always
   569 label *label213
   570 sensor *tmp282 .core @copper
   571 jump *label230 greaterThanEq *tmp282 copper
-    * label *label437
   572 write "Goal 7: copper requirement" processor2 ".status1"
-    * label *label438
   573 set :mineOre.2:ore @copper
   574 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   575 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
 
   578 label *label230
   579 sensor *tmp285 .core @lead
   580 jump *label234 greaterThanEq *tmp285 lead
-    * label *label439
   581 write "Goal 8: lead requirement" processor2 ".status1"
-    * label *label440
   582 set :mineOre.2:ore @lead
   583 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   584 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
 
   587 label *label234
   588 sensor *tmp288 .core @metaglass
   589 jump *label238 greaterThanEq *tmp288 metaglass
-    * label *label441
   590 write "Goal 9: metaglass requirement" processor2 ".status1"
-    * label *label442
   591 jump *label241 equal .scrap false
   592 set :mineOre.1:ore @scrap
   593 set :mineOre.1:block .sandContainer
 
   603 label *label242
   604 jump *label239 always
   605 label *label238
-    * label *label443
   606 write "Goal 10: supplying base" processor2 ".status1"
-    * label *label444
   607 jump *label246 equal A¨SSJh-container30 false
   608 set :mineOre.1:ore @scrap
   609 set :mineOre.1:block A¨SSJh-container30
 
   627 label *label214
   628 label *label210
   629 label *label207
-    * label *label208
   630 jump *label206 always
   631 label *label205
-    * label *label445
   632 write "Goal 11: Fetching titanium" processor2 ".status1"
-    * label *label446
   633 set :fetchBlock:block .titaniumDrill
   634 set :fetchBlock:item @titanium
   635 setaddr :fetchBlock*retaddr *label253 (h:*label253)
 
   639 label *label172
   640 label *label168
   641 label *label151
-    * label *label149
   642 return :supplyBaseLocal*retaddr
   643 end
   644 label *label39
 
   648 set :targetMet*retval false
   649 jump *label254 always
   650 label *label255
-    * label *label256
   651 sensor *tmp301 .core @lead
   652 jump *label257 greaterThanEq *tmp301 lead
   653 write @lead processor2 ".missing"
   654 set :targetMet*retval false
   655 jump *label254 always
   656 label *label257
-    * label *label258
   657 sensor *tmp304 .core @graphite
   658 jump *label259 greaterThanEq *tmp304 graphite
   659 write @graphite processor2 ".missing"
   660 set :targetMet*retval false
   661 jump *label254 always
   662 label *label259
-    * label *label260
   663 sensor *tmp307 .core @silicon
   664 jump *label261 greaterThanEq *tmp307 silicon
   665 write @silicon processor2 ".missing"
   666 set :targetMet*retval false
   667 jump *label254 always
   668 label *label261
-    * label *label262
   669 sensor *tmp310 .core @titanium
   670 jump *label263 greaterThanEq *tmp310 titanium
   671 write @titanium processor2 ".missing"
   672 set :targetMet*retval false
   673 jump *label254 always
   674 label *label263
-    * label *label264
   675 sensor *tmp313 .core @metaglass
   676 jump *label265 greaterThanEq *tmp313 metaglass
   677 write @metaglass processor2 ".missing"
   678 set :targetMet*retval false
   679 jump *label254 always
   680 label *label265
-    * label *label266
   681 sensor *tmp316 .core @thorium
   682 jump *label267 greaterThanEq *tmp316 thorium
   683 write @thorium processor2 ".missing"
   684 set :targetMet*retval false
   685 jump *label254 always
   686 label *label267
-    * label *label268
   687 set :targetMet*retval true
   688 jump *label254 always
   689 label *label254
   690 return :targetMet*retaddr
   691 end
   692 label *label40
-    * label *label388
   693 op sign :meetTargetLocal:count :meetTargetLocal:copper
-    * label *label389
-    * label *label392
   694 op sign *tmp320 :meetTargetLocal:lead
   695 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label393
-    * label *label396
   696 op sign *tmp320 :meetTargetLocal:graphite
   697 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label397
-    * label *label400
   698 op sign *tmp320 :meetTargetLocal:silicon
   699 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label401
-    * label *label404
   700 op sign *tmp320 :meetTargetLocal:titanium
   701 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label405
-    * label *label408
   702 op sign *tmp320 :meetTargetLocal:metaglass
   703 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label409
-    * label *label412
   704 op sign *tmp320 :meetTargetLocal:thorium
   705 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label413
-    * label *label272
   706 write :meetTargetLocal:count processor2 ".totalTargets"
   707 write :meetTargetLocal:block processor2 ".nextBlock"
   708 write :meetTargetLocal:copper processor2 ".targetCopper"
 
   736 write *tmp330 AÕFFJS-micro-processor9 ".graphiteReserve"
   737 write lead processor7 ".leadTarget"
   738 write :meetTargetLocal:copper processor7 ".copperTarget"
-    * label *label280
   739 setaddr :targetMet*retaddr *label283 (h:*label283)
   740 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   741 label *label283
 
   744 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   745 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
   746 label *label284
-    * label *label281
   747 setaddr :targetMet*retaddr *label602 (h:*label602)
   748 call *label39 *invalid :targetMet*retval (m:*label602) (h:*label602)
   749 label *label602
 
   756 wait 1e-15
   757 read *tmp334 AÕFFJS-micro-processor9 ":buildStart*finished"
   758 jump *label287 equal *tmp334 false
-    * label *label288
   759 setaddr :targetMet*retaddr *label291 (h:*label291)
   760 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   761 label *label291
 
   764 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   765 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
   766 label *label292
-    * label *label289
   767 setaddr :targetMet*retaddr *label620 (h:*label620)
   768 call *label39 *invalid :targetMet*retval (m:*label620) (h:*label620)
   769 label *label620
   770 jump *label619 equal :targetMet*retval false
   771 label *label290
   772 label *label285
-    * label *label286
-    * label *label269
   773 return :meetTargetLocal*retaddr
   774 end
   775 label *label6
 
   786 setaddr :meetTargetLocal*retaddr *label294 (h:*label294)
   787 call *label40 *invalid :meetTargetLocal*retval (m:*label294) (h:*label294)
   788 label *label294
-    * label *label293
   789 set :meetTarget*finished true
   790 jump *label54 always
   791 end
 
   807 setaddr :meetTargetLocal*retaddr *label297 (h:*label297)
   808 call *label40 *invalid :meetTargetLocal*retval (m:*label297) (h:*label297)
   809 label *label297
-    * label *label295
   810 set :meetTargetCfg*finished true
   811 jump *label54 always
   812 end
 
   837 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   838 write 2 AÕFFJS-micro-processor9 "@counter"
   839 set :buildBlock*retval :buildBlockAtLocal*retval
-    * label *label298
   840 return :buildBlock*retaddr
   841 end
   842 label *label8
 
   865 set :buildRemoteBlock*retval :buildBlock*retval
   866 jump *label301 always
   867 label *label302
-    * label *label303
   868 set :buildRemoteBlock*retval false
   869 jump *label301 always
   870 label *label301
 
   899 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
   900 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
   901 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label306
   902 set :buildBlockFromCfg*finished true
   903 jump *label54 always
   904 end
   905 label *label43
-    * label *label538
-    * label *label539
   906 write "Moving..." processor2 ".status3"
-    * label *label540
-    * label *label541
   907 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   908 jump *label544 notEqual *tmp105 false
   909 label *label542
   910 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 5.5
-    * label *label543
   911 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   912 jump *label542 equal *tmp105 false
   913 label *label544
-    * label *label545
-    * label *label313
   914 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp346
   915 jump *label315 equal :buildBlockAtLocal:building null
   916 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   917 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
   918 jump *label312 always
   919 label *label317
-    * label *label318
   920 set .ERROR "Cannot build at position"
   921 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
   922 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
   923 set .ERROR_X :buildBlockAtLocal:x
   924 set .ERROR_Y :buildBlockAtLocal:y
   925 stop
-    * label *label319
   926 label *label315
-    * label *label316
   927 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
   928 wait 0.25
   929 set :buildBlockAtLocal:success false
 
   940 set .ERROR_X :buildBlockAtLocal:x
   941 set .ERROR_Y :buildBlockAtLocal:y
   942 stop
-    * label *label325
   943 jump *label324 always
   944 label *label323
   945 set :buildBlockAtLocal:success true
 
   951 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
   952 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
   953 label *label328
-    * label *label329
   954 label *label326
-    * label *label327
-    * label *label321
   955 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * label *label322
   956 control enabled processor6 true
   957 ubind .builder
   958 sensor :log:encodedId :buildBlockAtLocal:block @id
 
   963 op mul *tmp368 *tmp0 1000
   964 op add *tmp369 :log:encodedId *tmp368
   965 write *tmp369 bank1 *tmp365
-    * label *label331
   966 jump *label332 lessThan :buildBlockAtLocal:index 0
   967 op shl *tmp372 1 :buildBlockAtLocal:index
   968 read *tmp7 processor2 ".blocksBuilt"
 
   970 write *tmp373 processor2 ".blocksBuilt"
   971 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
   972 label *label332
-    * label *label333
-    * label *label330
   973 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
   974 label *label312
   975 return :buildBlockAtLocal*retaddr
 
   985 call *label43 *invalid :buildBlockAtLocal*retval (m:*label335) (h:*label335)
   986 label *label335
   987 set :buildBlockAt*retval :buildBlockAtLocal*retval
-    * label *label334
   988 set :buildBlockAt*finished true
   989 jump *label54 always
   990 end
 
  1006 read *tmp375 processor8 ":addTitaniumDrill*finished"
  1007 jump *label338 equal *tmp375 false
  1008 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
-    * label *label336
  1009 set :buildFirstTitaniumDrillAt*finished true
  1010 jump *label54 always
  1011 end
  1012 label *label45
  1013 jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1014 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * label *label522
-    * label *label523
  1015 write "Moving..." processor2 ".status3"
-    * label *label524
-    * label *label525
  1016 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1017 jump *label528 notEqual *tmp105 false
  1018 label *label526
  1019 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
-    * label *label527
  1020 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1021 jump *label526 equal *tmp105 false
  1022 label *label528
-    * label *label529
-    * label *label351
  1023 set .positive 0
  1024 set .negative 0
  1025 op sub *tmp389 :buildTitaniumDrill:x 0.5
  1026 op sub *tmp390 :buildTitaniumDrill:y 0.5
  1027 set :titaniumDrillScore:positive .positive
  1028 set :titaniumDrillScore:negative .negative
-    * label *label490
  1029 ucontrol getBlock *tmp389 *tmp390 *tmp379 *tmp378 :getFloor:floor
-    * label *label491
  1030 jump *label493 notEqual :getFloor:floor @ore-titanium
-    * label *label492
  1031 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1032 jump *label496 always
  1033 label *label493
 
  1039 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1040 label *label495
  1041 label *label496
-    * label *label497
  1042 set .positive :titaniumDrillScore:positive
  1043 set .negative :titaniumDrillScore:negative
  1044 op add *tmp393 :buildTitaniumDrill:y 0.5
  1045 set :titaniumDrillScore:positive .positive
  1046 set :titaniumDrillScore:negative .negative
-    * label *label498
  1047 ucontrol getBlock *tmp389 *tmp393 *tmp379 *tmp378 :getFloor:floor
-    * label *label499
  1048 jump *label501 notEqual :getFloor:floor @ore-titanium
-    * label *label500
  1049 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1050 jump *label504 always
  1051 label *label501
 
  1057 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1058 label *label503
  1059 label *label504
-    * label *label505
  1060 set .positive :titaniumDrillScore:positive
  1061 set .negative :titaniumDrillScore:negative
  1062 op add *tmp395 :buildTitaniumDrill:x 0.5
  1063 set :titaniumDrillScore:positive .positive
  1064 set :titaniumDrillScore:negative .negative
-    * label *label506
  1065 ucontrol getBlock *tmp395 *tmp390 *tmp379 *tmp378 :getFloor:floor
-    * label *label507
  1066 jump *label509 notEqual :getFloor:floor @ore-titanium
-    * label *label508
  1067 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1068 jump *label512 always
  1069 label *label509
 
  1075 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1076 label *label511
  1077 label *label512
-    * label *label513
  1078 set .positive :titaniumDrillScore:positive
  1079 set .negative :titaniumDrillScore:negative
  1080 set :titaniumDrillScore:positive .positive
  1081 set :titaniumDrillScore:negative .negative
-    * label *label514
  1082 ucontrol getBlock *tmp395 *tmp393 *tmp379 *tmp378 :getFloor:floor
-    * label *label515
  1083 jump *label517 notEqual :getFloor:floor @ore-titanium
-    * label *label516
  1084 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1085 jump *label520 always
  1086 label *label517
 
  1092 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1093 label *label519
  1094 label *label520
-    * label *label521
  1095 set .positive :titaniumDrillScore:positive
  1096 set .negative :titaniumDrillScore:negative
  1097 op greaterThan *tmp401 .positive .negative
 
  1118 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1119 op min *tmp409 :buildTitaniumDrill:count 8
  1120 write *tmp409 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label363
  1121 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1122 set :buildTitaniumDrill*retval .positive
  1123 jump *label346 always
  1124 label *label360
-    * label *label361
  1125 label *label357
-    * label *label358
  1126 label *label349
-    * label *label350
  1127 label *label347
-    * label *label348
  1128 set :buildTitaniumDrill*retval 0
  1129 jump *label346 always
  1130 label *label346
 
  1136 jump *label365 equal .scrap false
  1137 op add .MAX_TILES .MAX_TILES 4
  1138 label *label365
-    * label *label366
  1139 wait 0.0001
  1140 wait 0.0001
  1141 label *label367
-    * label *label370
  1142 read *tmp51 processor3 ".locations"
  1143 jump *label372 greaterThanEq :buildTitaniumDrills:current *tmp51
  1144 label *label481
 
  1202 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1203 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1204 label *label379
-    * label *label380
  1205 label *label373
-    * label *label374
  1206 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
-    * label *label371
  1207 read *tmp51 processor3 ".locations"
  1208 jump *label481 lessThan :buildTitaniumDrills:current *tmp51
  1209 label *label372
  1210 jump *label382 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1211 jump *label369 always
  1212 label *label382
-    * label *label383
  1213 jump *label384 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1214 jump *label369 always
  1215 label *label384
-    * label *label385
-    * label *label368
  1216 read *tmp52 processor3 ".searchFinished"
  1217 jump *label367 equal *tmp52 false
  1218 label *label369
-    * label *label364
  1219 set :buildTitaniumDrills*finished true
  1220 jump *label54 always
  1221 end
 
  1223 setaddr :supplyBaseLocal*retaddr *label387 (h:*label387)
  1224 call *label38 *invalid :supplyBaseLocal*retval (m:*label387) (h:*label387)
  1225 label *label387
-    * label *label386
  1226 set :supplyBase*finished true
  1227 jump *label54 always
  1228 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-5 instructions):
 
   111 op notEqual *tmp137 :mineOre:item null
   112 op notEqual *tmp138 :mineOre:item :mineOre:ore
   113 op land *tmp139 *tmp137 *tmp138
-    * jump *label105 equal *tmp139 false
-    * jump *label104 always
+  114 jump *label104 notEqual *tmp139 false
   115 label *label105
   116 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label107 lessThanEq @second :mineOre:stop
-    * jump *label104 always
+  117 jump *label104 greaterThan @second :mineOre:stop
   118 label *label107
   119 jump *label109 notEqual .noTarget false
   120 sensor *tmp298 .core @copper
 
   162 set :targetMet*retval true
   163 jump *label580 always
   164 label *label580
-    * jump *label112 equal :targetMet*retval false
-    * jump *label104 always
+  165 jump *label104 notEqual :targetMet*retval false
   166 label *label112
   167 label *label109
   168 sensor *tmp146 @unit @totalItems
 
  1204 read *tmp51 processor3 ".locations"
  1205 jump *label481 lessThan :buildTitaniumDrills:current *tmp51
  1206 label *label372
-    * jump *label382 lessThan :buildTitaniumDrills:tiles .MAX_TILES
-    * jump *label369 always
+ 1207 jump *label369 greaterThanEq :buildTitaniumDrills:tiles .MAX_TILES
  1208 label *label382
-    * jump *label384 lessThan :buildTitaniumDrills:count .MAX_COUNT
-    * jump *label369 always
+ 1209 jump *label369 greaterThanEq :buildTitaniumDrills:count .MAX_COUNT
  1210 label *label384
  1211 read *tmp52 processor3 ".searchFinished"
  1212 jump *label367 equal *tmp52 false

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
   112 op notEqual *tmp138 :mineOre:item :mineOre:ore
   113 op land *tmp139 *tmp137 *tmp138
   114 jump *label104 notEqual *tmp139 false
-    * label *label105
   115 ucontrol mine :locateOre:x :locateOre:y
   116 jump *label104 greaterThan @second :mineOre:stop
-    * label *label107
   117 jump *label109 notEqual .noTarget false
   118 sensor *tmp298 .core @copper
   119 jump *label566 greaterThanEq *tmp298 copper
 
   161 jump *label580 always
   162 label *label580
   163 jump *label104 notEqual :targetMet*retval false
-    * label *label112
   164 label *label109
   165 sensor *tmp146 @unit @totalItems
   166 jump *label102 lessThan *tmp146 :mineOre:amount
 
  1202 jump *label481 lessThan :buildTitaniumDrills:current *tmp51
  1203 label *label372
  1204 jump *label369 greaterThanEq :buildTitaniumDrills:tiles .MAX_TILES
-    * label *label382
  1205 jump *label369 greaterThanEq :buildTitaniumDrills:count .MAX_COUNT
-    * label *label384
  1206 read *tmp52 processor3 ".searchFinished"
  1207 jump *label367 equal *tmp52 false
  1208 label *label369

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
   333 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   334 sensor *tmp165 :supplyBlock:block @coal
   335 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * jump *label655 lessThanEq :supplyBlock:missing 0
+  336 jump *label159 lessThanEq :supplyBlock:missing 0
   337 set :mineOre:ore @coal
   338 set :mineOre:amount :supplyBlock:blockCapacity
   339 set :mineOre:block :supplyBlock:block
-    * setaddr :mineOre*retaddr *label654 (h:*label654)
+  340 setaddr :mineOre*retaddr *label159 (h:*label654)
   341 call *label25 *invalid :mineOre*retval (m:*label654) (h:*label654)
   342 label *label654
   343 label *label655
 
   396 call *label28 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   397 label *label162
   398 sensor *tmp220 .core @thorium
-    * jump *label163 lessThanEq *tmp220 400
+  399 jump *label151 lessThanEq *tmp220 400
   400 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   401 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   402 label *label163
-    * jump *label151 always
+  403 return :supplyBaseLocal*retaddr
   404 label *label150
   405 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   406 jump *label167 lessThanEq *tmp81 1
 
   415 setaddr :mineOre*retaddr *label624 (h:*label624)
   416 call *label25 *invalid :mineOre*retval (m:*label624) (h:*label624)
   417 label *label624
-    * jump *label168 always
+  418 return :supplyBaseLocal*retaddr
   419 label *label167
   420 set :supplyBase0:supplied false
   421 jump *label173 notEqual A©JNJP-unloader6 null
 
   453 setaddr :supplyBlock*retaddr *label186 (h:*label186)
   454 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   455 label *label186
-    * jump *label172 always
+  456 return :supplyBaseLocal*retaddr
   457 label *label183
   458 label *label181
   459 sensor *tmp239 .core @silicon
 
   473 jump *label193 greaterThanEq *tmp245 5
   474 jump *label195 equal .scrap false
   475 sensor *tmp249 AXPRJd-pulverizer26 @scrap
-    * jump *label197 greaterThanEq *tmp249 10
+  476 jump *label196 greaterThanEq *tmp249 10
   477 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   478 set :supplyBlock:block AXPRJd-pulverizer26
   479 set :supplyBlock:ore @scrap
 
   505 label *label204
   506 sensor *tmp258 .titaniumDrill @titanium
   507 jump *label205 greaterThanEq *tmp258 *tmp254
-    * jump *label207 notEqual :supplyBase0:supplied false
+  508 jump *label206 notEqual :supplyBase0:supplied false
   509 sensor *tmp263 AJTJK-battery1 @totalPower
   510 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   511 jump *label209 greaterThanEq *tmp263 *tmp264
 
   520 setaddr :mineOre*retaddr *label661 (h:*label661)
   521 call *label25 *invalid :mineOre*retval (m:*label661) (h:*label661)
   522 label *label661
-    * jump *label210 always
+  523 return :supplyBaseLocal*retaddr
   524 label *label209
   525 sensor *tmp267 .core @silicon
   526 jump *label213 greaterThanEq *tmp267 silicon
 
   536 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   537 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   538 label *label224
-    * jump *label219 always
+  539 return :supplyBaseLocal*retaddr
   540 label *label218
   541 set :mineOre.2:ore @coal
   542 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   543 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   544 label *label225
   545 label *label219
-    * jump *label216 always
+  546 return :supplyBaseLocal*retaddr
   547 label *label215
   548 write "Goal 6: silicon requirement" processor2 ".status1"
   549 sensor :supplyBase0:coal.1 .core @coal
 
   559 call *label25 *invalid :mineOre*retval (m:*label673) (h:*label673)
   560 label *label673
   561 label *label216
-    * jump *label214 always
+  562 return :supplyBaseLocal*retaddr
   563 label *label213
   564 sensor *tmp282 .core @copper
   565 jump *label230 greaterThanEq *tmp282 copper
 
   568 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   569 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
   570 label *label233
-    * jump *label231 always
+  571 return :supplyBaseLocal*retaddr
   572 label *label230
   573 sensor *tmp285 .core @lead
   574 jump *label234 greaterThanEq *tmp285 lead
 
   577 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   578 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
   579 label *label237
-    * jump *label235 always
+  580 return :supplyBaseLocal*retaddr
   581 label *label234
   582 sensor *tmp288 .core @metaglass
   583 jump *label238 greaterThanEq *tmp288 metaglass
 
   588 setaddr :mineOre.1*retaddr *label243 (h:*label243)
   589 call *label26 *invalid :mineOre.1*retval (m:*label243) (h:*label243)
   590 label *label243
-    * jump *label242 always
+  591 return :supplyBaseLocal*retaddr
   592 label *label241
   593 set :mineOre.2:ore @sand
   594 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   595 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   596 label *label244
   597 label *label242
-    * jump *label239 always
+  598 return :supplyBaseLocal*retaddr
   599 label *label238
   600 write "Goal 10: supplying base" processor2 ".status1"
   601 jump *label246 equal A¨SSJh-container30 false
 
   604 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   605 call *label26 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   606 label *label248
-    * jump *label247 always
+  607 return :supplyBaseLocal*retaddr
   608 label *label246
   609 sensor *tmp293 .core @coal
   610 sensor *tmp294 .core @sand
 
   621 label *label214
   622 label *label210
   623 label *label207
-    * jump *label206 always
+  624 return :supplyBaseLocal*retaddr
   625 label *label205
   626 write "Goal 11: Fetching titanium" processor2 ".status1"
   627 set :fetchBlock:block .titaniumDrill
 
   640 jump *label255 greaterThanEq *tmp298 copper
   641 write @copper processor2 ".missing"
   642 set :targetMet*retval false
-    * jump *label254 always
+  643 return :targetMet*retaddr
   644 label *label255
   645 sensor *tmp301 .core @lead
   646 jump *label257 greaterThanEq *tmp301 lead
   647 write @lead processor2 ".missing"
   648 set :targetMet*retval false
-    * jump *label254 always
+  649 return :targetMet*retaddr
   650 label *label257
   651 sensor *tmp304 .core @graphite
   652 jump *label259 greaterThanEq *tmp304 graphite
   653 write @graphite processor2 ".missing"
   654 set :targetMet*retval false
-    * jump *label254 always
+  655 return :targetMet*retaddr
   656 label *label259
   657 sensor *tmp307 .core @silicon
   658 jump *label261 greaterThanEq *tmp307 silicon
   659 write @silicon processor2 ".missing"
   660 set :targetMet*retval false
-    * jump *label254 always
+  661 return :targetMet*retaddr
   662 label *label261
   663 sensor *tmp310 .core @titanium
   664 jump *label263 greaterThanEq *tmp310 titanium
   665 write @titanium processor2 ".missing"
   666 set :targetMet*retval false
-    * jump *label254 always
+  667 return :targetMet*retaddr
   668 label *label263
   669 sensor *tmp313 .core @metaglass
   670 jump *label265 greaterThanEq *tmp313 metaglass
   671 write @metaglass processor2 ".missing"
   672 set :targetMet*retval false
-    * jump *label254 always
+  673 return :targetMet*retaddr
   674 label *label265
   675 sensor *tmp316 .core @thorium
   676 jump *label267 greaterThanEq *tmp316 thorium
   677 write @thorium processor2 ".missing"
   678 set :targetMet*retval false
-    * jump *label254 always
+  679 return :targetMet*retaddr
   680 label *label267
   681 set :targetMet*retval true
-    * jump *label254 always
+  682 return :targetMet*retaddr
   683 label *label254
   684 return :targetMet*retaddr
   685 end
 
   909 jump *label315 equal :buildBlockAtLocal:building null
   910 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   911 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * jump *label312 always
+  912 return :buildBlockAtLocal*retaddr
   913 label *label317
   914 set .ERROR "Cannot build at position"
   915 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
 
  1114 write *tmp409 AÕFFJS-micro-processor9 ".flareTarget"
  1115 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1116 set :buildTitaniumDrill*retval .positive
-    * jump *label346 always
+ 1117 return :buildTitaniumDrill*retaddr
  1118 label *label360
  1119 label *label357
  1120 label *label349
  1121 label *label347
  1122 set :buildTitaniumDrill*retval 0
-    * jump *label346 always
+ 1123 return :buildTitaniumDrill*retaddr
  1124 label *label346
  1125 return :buildTitaniumDrill*retaddr
  1126 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-25 instructions):
 
    39 label *label54
    40 wait 1e12
    41 jump *label54 always
-    * end
    42 label *label23
    43 write "Depositing..." processor2 ".status3"
    44 sensor *tmp117 @unit @firstItem
 
    73 write 0 processor2 ".transportTarget"
    74 write null processor2 ".transportItem"
    75 return :depositItems*retaddr
-    * end
    76 label *label25
    77 op min :mineOre:amount :mineOre:amount 28
    78 set :transportStatus:target :mineOre:amount
 
   170 call *label23 *invalid :depositItems*retval (m:*label114) (h:*label114)
   171 label *label114
   172 return :mineOre*retaddr
-    * end
   173 label *label26
   174 write "Mining " processor2 ".status2"
   175 write :mineOre.1:ore processor2 ".item2"
 
   181 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   182 label *label117
   183 return :mineOre.1*retaddr
-    * end
   184 label *label27
   185 write "Mining " processor2 ".status2"
   186 write :mineOre.2:ore processor2 ".item2"
 
   192 call *label25 *invalid :mineOre*retval (m:*label120) (h:*label120)
   193 label *label120
   194 return :mineOre.2*retaddr
-    * end
   195 label *label28
   196 sensor *tmp151 :fetchBlock:block @itemCapacity
   197 op min :transportStatus:target *tmp151 28
 
   265 write 0 processor2 ".transportTarget"
   266 write null processor2 ".transportItem"
   267 return :fetchBlock*retaddr
-    * end
   268 label *label29
   269 write "Supplying " processor2 ".status2"
   270 write :supplyBlock:ore processor2 ".item2"
 
   281 label *label136
   282 label *label134
   283 return :supplyBlock*retaddr
-    * end
   284 label *label32
   285 read *tmp181 :unpackCfg:cfg 1
   286 op sub *tmp182 *tmp181 74
 
   303 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   304 sensor :unpackCfg:th :unpackCfg:type @thorium
   305 return :unpackCfg*retaddr
-    * end
   306 label *label38
   307 op add *tmp206 .siliconMonoSurplus silicon
   308 sensor *tmp207 .core @silicon
 
   331 set :mineOre:block :supplyBlock:block
   332 setaddr :mineOre*retaddr *label159 (h:*label654)
   333 call *label25 *invalid :mineOre*retval (m:*label654) (h:*label654)
-    * label *label654
-    * label *label655
-    * jump *label159 always
   334 label *label158
   335 set :supplyBlockFromCore:target .thoriumGenerator
   336 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
 
   388 jump *label151 lessThanEq *tmp220 400
   389 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   390 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label163
   391 return :supplyBaseLocal*retaddr
   392 label *label150
   393 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   469 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   470 label *label200
   471 set :supplyBase0:supplied true
-    * label *label197
   472 jump *label196 always
   473 label *label195
   474 write "Goal 3: sand for silicon requirement" processor2 ".status1"
 
   529 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   530 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   531 label *label225
-    * label *label219
   532 return :supplyBaseLocal*retaddr
   533 label *label215
   534 write "Goal 6: silicon requirement" processor2 ".status1"
 
   544 setaddr :mineOre*retaddr *label673 (h:*label673)
   545 call *label25 *invalid :mineOre*retval (m:*label673) (h:*label673)
   546 label *label673
-    * label *label216
   547 return :supplyBaseLocal*retaddr
   548 label *label213
   549 sensor *tmp282 .core @copper
 
   579 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   580 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   581 label *label244
-    * label *label242
   582 return :supplyBaseLocal*retaddr
   583 label *label238
   584 write "Goal 10: supplying base" processor2 ".status1"
 
   598 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   599 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   600 label *label251
-    * label *label247
-    * label *label239
-    * label *label235
-    * label *label231
-    * label *label214
-    * label *label210
-    * label *label207
   601 return :supplyBaseLocal*retaddr
   602 label *label205
   603 write "Goal 11: Fetching titanium" processor2 ".status1"
 
   607 call *label28 *invalid :fetchBlock*retval (m:*label253) (h:*label253)
   608 label *label253
   609 label *label206
-    * label *label172
-    * label *label168
   610 label *label151
   611 return :supplyBaseLocal*retaddr
-    * end
   612 label *label39
   613 sensor *tmp298 .core @copper
   614 jump *label255 greaterThanEq *tmp298 copper
 
   654 label *label267
   655 set :targetMet*retval true
   656 return :targetMet*retaddr
-    * label *label254
-    * return :targetMet*retaddr
-    * end
   657 label *label40
   658 op sign :meetTargetLocal:count :meetTargetLocal:copper
   659 op sign *tmp320 :meetTargetLocal:lead
 
   736 label *label290
   737 label *label285
   738 return :meetTargetLocal*retaddr
-    * end
   739 label *label6
   740 set :meetTargetLocal:block :meetTarget:block
   741 set :meetTargetLocal:copper :meetTarget:copper
 
   752 label *label294
   753 set :meetTarget*finished true
   754 jump *label54 always
-    * end
   755 label *label7
   756 set :unpackCfg:cfg :meetTargetCfg:cfg
   757 setaddr :unpackCfg*retaddr *label296 (h:*label296)
 
   772 label *label297
   773 set :meetTargetCfg*finished true
   774 jump *label54 always
-    * end
   775 label *label41
   776 op notEqual *tmp337 AÕFFJS-micro-processor9 null
   777 set :meetTargetLocal:block :buildBlock:block
 
   800 write 2 AÕFFJS-micro-processor9 "@counter"
   801 set :buildBlock*retval :buildBlockAtLocal*retval
   802 return :buildBlock*retaddr
-    * end
   803 label *label8
   804 op add *tmp338 :buildRemoteBlock:x :buildRemoteBlock:y
   805 jump *label302 lessThanEq *tmp338 0
 
   831 label *label301
   832 set :buildRemoteBlock*finished true
   833 jump *label54 always
-    * end
   834 label *label9
   835 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   836 setaddr :unpackCfg*retaddr *label307 (h:*label307)
 
   861 set :buildBlockFromCfg*retval :buildBlock*retval
   862 set :buildBlockFromCfg*finished true
   863 jump *label54 always
-    * end
   864 label *label43
   865 write "Moving..." processor2 ".status3"
   866 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
 
   930 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
   931 label *label332
   932 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * label *label312
   933 return :buildBlockAtLocal*retaddr
-    * end
   934 label *label10
   935 set :buildBlockAtLocal:block :buildBlockAt:block
   936 set :buildBlockAtLocal:x :buildBlockAt:x
 
   944 set :buildBlockAt*retval :buildBlockAtLocal*retval
   945 set :buildBlockAt*finished true
   946 jump *label54 always
-    * end
   947 label *label11
   948 set :buildBlockAtLocal:block @pneumatic-drill
   949 set :buildBlockAtLocal:x :buildFirstTitaniumDrillAt:x
 
   964 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
   965 set :buildFirstTitaniumDrillAt*finished true
   966 jump *label54 always
-    * end
   967 label *label45
   968 jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
   969 jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
 
  1082 label *label347
  1083 set :buildTitaniumDrill*retval 0
  1084 return :buildTitaniumDrill*retaddr
-    * label *label346
-    * return :buildTitaniumDrill*retaddr
-    * end
  1085 label *label12
  1086 set :buildTitaniumDrills:count 1
  1087 set :buildTitaniumDrills:tiles 0
 
  1166 label *label369
  1167 set :buildTitaniumDrills*finished true
  1168 jump *label54 always
-    * end
  1169 label *label13
  1170 setaddr :supplyBaseLocal*retaddr *label387 (h:*label387)
  1171 call *label38 *invalid :supplyBaseLocal*retval (m:*label387) (h:*label387)
  1172 label *label387
  1173 set :supplyBase*finished true
  1174 jump *label54 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    33 label *label51
    34 ubind @poly
    35 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp103 .core
+   36 ulocate building core false @copper .coreX .coreY 0 .core
    37 jump *label51 equal .core null
    38 set *signature "77658b7b93afc77c:v1"
    39 label *label54
 
    78 set :transportStatus:target :mineOre:amount
    79 write :mineOre:amount processor2 ".transportTarget"
    80 write :mineOre:ore processor2 ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+   81 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 0
    82 jump *label463 notEqual *tmp127 false
    83 set .ERROR "Cannot locate ore"
    84 stop
 
   870 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   871 jump *label542 equal *tmp105 false
   872 label *label544
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp346
+  873 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building 0
   874 jump *label315 equal :buildBlockAtLocal:building null
   875 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   876 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
 
   888 set :buildBlockAtLocal:success false
   889 label *label320
   890 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp352
+  891 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building 0
   892 op equal *tmp353 :buildBlockAtLocal:building null
   893 op equal *tmp354 :buildBlockAtLocal:success false
   894 op land *tmp355 *tmp353 *tmp354
 
   981 op sub *tmp390 :buildTitaniumDrill:y 0.5
   982 set :titaniumDrillScore:positive .positive
   983 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp389 *tmp390 *tmp379 *tmp378 :getFloor:floor
+  984 ucontrol getBlock *tmp389 *tmp390 0 0 :getFloor:floor
   985 jump *label493 notEqual :getFloor:floor @ore-titanium
   986 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
   987 jump *label496 always
 
   999 op add *tmp393 :buildTitaniumDrill:y 0.5
  1000 set :titaniumDrillScore:positive .positive
  1001 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp389 *tmp393 *tmp379 *tmp378 :getFloor:floor
+ 1002 ucontrol getBlock *tmp389 *tmp393 0 0 :getFloor:floor
  1003 jump *label501 notEqual :getFloor:floor @ore-titanium
  1004 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1005 jump *label504 always
 
  1017 op add *tmp395 :buildTitaniumDrill:x 0.5
  1018 set :titaniumDrillScore:positive .positive
  1019 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp395 *tmp390 *tmp379 *tmp378 :getFloor:floor
+ 1020 ucontrol getBlock *tmp395 *tmp390 0 0 :getFloor:floor
  1021 jump *label509 notEqual :getFloor:floor @ore-titanium
  1022 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1023 jump *label512 always
 
  1034 set .negative :titaniumDrillScore:negative
  1035 set :titaniumDrillScore:positive .positive
  1036 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp395 *tmp393 *tmp379 *tmp378 :getFloor:floor
+ 1037 ucontrol getBlock *tmp395 *tmp393 0 0 :getFloor:floor
  1038 jump *label517 notEqual :getFloor:floor @ore-titanium
  1039 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1040 jump *label520 always

Final code before resolving virtual instructions:

    0:  jump *label46 always 0 0                                     BuilderController.mnd: #set target = 8;
    1:  jump *label10 always 0 0                                     ...
    2:  jump *label9 always 0 0                                      ...
    3:  jump *label11 always 0 0                                     ...
    4:  jump *label8 always 0 0                                      ...
    5:  jump *label12 always 0 0                                     ...
    6:  jump *label6 always 0 0                                      ...
    7:  jump *label7 always 0 0                                      ...
    8:  jump *label13 always 0 0                                     ...
        label *label46                                               ...
    9:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
        label *label47                                               BuilderController.mnd: require "Display.mnd" remote display;
   10:  read *tmp32 processor2 "*signature"                          ...
   11:  jump *label47 notEqual *tmp32 "0:v1"                         ...
        label *label48                                               BuilderController.mnd: require "OreLocator.mnd" remote oreLocator;
   12:  read *tmp71 processor3 "*signature"                          ...
   13:  jump *label48 notEqual *tmp71 "3290b8c661787058:v1"          ...
        label *label49                                               BuilderController.mnd: require "FlareController.mnd" remote flareController;
   14:  read *tmp93 processor8 "*signature"                          ...
   15:  jump *label49 notEqual *tmp93 "881dde114374c003:v1"          ...
        label *label50                                               BuilderController.mnd: require "MonoController.mnd" remote monoController;
   16:  read *tmp99 processor7 "*signature"                          ...
   17:  jump *label50 notEqual *tmp99 "0:v1"                         ...
   18:  set .leadSurplus 0                                           BuilderController.mnd: remote var
   19:  set .graphiteSurplus 20                                      ...
   20:  set .siliconSurplus 20                                       ...
   21:  set .siliconMonoSurplus 0                                    ...
   22:  set .metaglassSurplus 20                                     ...
   23:  write 511 bank1 511                                          BuilderController.mnd: external bank1[511] logPosition = 511;
   24:  set .positive 0                                              BuilderController.mnd: volatile var positive = 0, negative = 0;
   25:  set .negative 0                                              ...
   26:  set .MAX_TILES 10                                            BuilderController.mnd: var MAX_TILES = 10;
   27:  set .MAX_COUNT 6                                             BuilderController.mnd: var MAX_COUNT = 6;
        label *label51                                               BuilderController.mnd: do
   28:  ubind @poly                                                  BuilderController.mnd: builder = ubind(@poly);
   29:  set .builder @unit                                           ...
   30:  ulocate building core false @copper .coreX .coreY 0 .core    BuilderController.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   31:  jump *label51 equal .core null                               BuilderController.mnd: do
   32:  set *signature "77658b7b93afc77c:v1"                         BuilderController.mnd: #set target = 8;
        label *label54                                               ...
   33:  wait 1e12                                                    ...
   34:  jump *label54 always 0 0                                     ...
        label *label23                                               Actions.mnd: void depositItems(block, item)
   35:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
   36:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
   37:  jump *label80 notEqual *tmp117 :depositItems:item            ...
   38:  sensor *tmp115 :depositItems:block @x                        Actions.mnd: moveTo(block.@x, block.@y, radius);
   39:  sensor *tmp116 :depositItems:block @y                        ...
   40:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
   41:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
   42:  jump *label536 notEqual *tmp105 false                        ...
        label *label534                                              ...
   43:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
   44:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
   45:  jump *label534 equal *tmp105 false                           ...
        label *label536                                              ...
   46:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label83                                               Actions.mnd: do
   47:  ucontrol itemDrop :depositItems:block 28 0 0 0               Actions.mnd: itemDrop(block, capacity);
   48:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
   49:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
   50:  sensor *tmp123 :depositItems:block :depositItems:item        ...
   51:  jump *label83 greaterThan *tmp122 *tmp123                    Actions.mnd: do
   52:  jump *label81 always 0 0                                     Actions.mnd: if @unit.@firstItem == item then
        label *label80                                               ...
   53:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   54:  jump *label88 equal *tmp125 null                             ...
        label *label480                                              ...
   55:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
   56:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   57:  jump *label480 notEqual *tmp125 null                         ...
        label *label88                                               ...
        label *label81                                               Actions.mnd: if @unit.@firstItem == item then
   58:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
   59:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
   60:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label25                                               Actions.mnd: void mineOre(ore, amount, block)
   61:  op min :mineOre:amount :mineOre:amount 28                    Actions.mnd: amount = min(amount, capacity);
   62:  set :transportStatus:target :mineOre:amount                  Actions.mnd: transportStatus(amount, ore);
   63:  write :mineOre:amount processor2 ".transportTarget"          Actions.mnd: display.transportTarget = target;
   64:  write :mineOre:ore processor2 ".transportItem"               Actions.mnd: display.transportItem = item;
   65:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   66:  jump *label463 notEqual *tmp127 false                        ...
   67:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
   68:  stop                                                         Actions.mnd: stopProcessor();
        label *label463                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   69:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label586                                              Actions.mnd: do
   70:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
   71:  jump *label587 equal *tmp108 null                            ...
   72:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label587                                              ...
   73:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
   74:  ucontrol within :locateOre:x :locateOre:y 6 *tmp111 0        Actions.mnd: while !within(x, y, RADIUS);
   75:  jump *label586 equal *tmp111 false                           Actions.mnd: do
   76:  sensor *tmp132 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   77:  jump *label98 equal *tmp132 :mineOre:ore                     ...
   78:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   79:  jump *label611 equal *tmp113 null                            ...
        label *label609                                              ...
   80:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
   81:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   82:  jump *label609 notEqual *tmp113 null                         ...
        label *label611                                              ...
        label *label98                                               Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   83:  write "Mining..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
   84:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label102                                              Actions.mnd: do
   85:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
   86:  op notEqual *tmp137 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
   87:  op notEqual *tmp138 :mineOre:item :mineOre:ore               ...
   88:  op land *tmp139 *tmp137 *tmp138                              ...
   89:  jump *label104 notEqual *tmp139 false                        ...
   90:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
   91:  jump *label104 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
   92:  jump *label109 notEqual .noTarget false                      Actions.mnd: if not noTarget then
   93:  sensor *tmp298 .core @copper                                 BuilderController.mnd: if core.@copper < targetCopper then display.missing = @copper; return false; end;
   94:  jump *label566 greaterThanEq *tmp298 copper                  ...
   95:  write @copper processor2 ".missing"                          ...
   96:  set :targetMet*retval false                                  ...
   97:  jump *label580 always 0 0                                    ...
        label *label566                                              ...
   98:  sensor *tmp301 .core @lead                                   BuilderController.mnd: if core.@lead < targetLead then display.missing = @lead; return false; end;
   99:  jump *label568 greaterThanEq *tmp301 lead                    ...
  100:  write @lead processor2 ".missing"                            ...
  101:  set :targetMet*retval false                                  ...
  102:  jump *label580 always 0 0                                    ...
        label *label568                                              ...
  103:  sensor *tmp304 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then display.missing = @graphite; return false; end;
  104:  jump *label570 greaterThanEq *tmp304 graphite                ...
  105:  write @graphite processor2 ".missing"                        ...
  106:  set :targetMet*retval false                                  ...
  107:  jump *label580 always 0 0                                    ...
        label *label570                                              ...
  108:  sensor *tmp307 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then display.missing = @silicon; return false; end;
  109:  jump *label572 greaterThanEq *tmp307 silicon                 ...
  110:  write @silicon processor2 ".missing"                         ...
  111:  set :targetMet*retval false                                  ...
  112:  jump *label580 always 0 0                                    ...
        label *label572                                              ...
  113:  sensor *tmp310 .core @titanium                               BuilderController.mnd: if core.@titanium < targetTitanium then display.missing = @titanium; return false; end;
  114:  jump *label574 greaterThanEq *tmp310 titanium                ...
  115:  write @titanium processor2 ".missing"                        ...
  116:  set :targetMet*retval false                                  ...
  117:  jump *label580 always 0 0                                    ...
        label *label574                                              ...
  118:  sensor *tmp313 .core @metaglass                              BuilderController.mnd: if core.@metaglass < targetMetaglass then display.missing = @metaglass; return false; end;
  119:  jump *label576 greaterThanEq *tmp313 metaglass               ...
  120:  write @metaglass processor2 ".missing"                       ...
  121:  set :targetMet*retval false                                  ...
  122:  jump *label580 always 0 0                                    ...
        label *label576                                              ...
  123:  sensor *tmp316 .core @thorium                                BuilderController.mnd: if core.@thorium < targetThorium then display.missing = @thorium; return false; end;
  124:  jump *label578 greaterThanEq *tmp316 thorium                 ...
  125:  write @thorium processor2 ".missing"                         ...
  126:  set :targetMet*retval false                                  ...
  127:  jump *label580 always 0 0                                    ...
        label *label578                                              ...
  128:  set :targetMet*retval true                                   BuilderController.mnd: return true;
  129:  jump *label580 always 0 0                                    ...
        label *label580                                              Actions.mnd: if targetMet() then
  130:  jump *label104 notEqual :targetMet*retval false              ...
        label *label109                                              Actions.mnd: if not noTarget then
  131:  sensor *tmp146 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  132:  jump *label102 lessThan *tmp146 :mineOre:amount              Actions.mnd: do
        label *label104                                              ...
  133:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  134:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  135:  set :depositItems:item :mineOre:ore                          ...
  136:  setaddr :depositItems*retaddr *label114                      ...
  137:  call *label23 *invalid :depositItems*retval                  ...
        label *label114                                              ...
  138:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label26                                               Actions.mnd: void mineOre(ore, block)
  139:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  140:  write :mineOre.1:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  141:  write :mineOre.1:block processor2 ".block2"                  Actions.mnd: display.block2 = block;
  142:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, block);
  143:  set :mineOre:amount 28                                       ...
  144:  set :mineOre:block :mineOre.1:block                          ...
  145:  setaddr :mineOre*retaddr *label117                           ...
  146:  call *label25 *invalid :mineOre*retval                       ...
        label *label117                                              ...
  147:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore, block)
        label *label27                                               Actions.mnd: void mineOre(ore)
  148:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  149:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  150:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  151:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  152:  set :mineOre:amount 28                                       ...
  153:  set :mineOre:block .core                                     ...
  154:  setaddr :mineOre*retaddr *label120                           ...
  155:  call *label25 *invalid :mineOre*retval                       ...
        label *label120                                              ...
  156:  return :mineOre.2*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label28                                               Actions.mnd: void fetchBlock(block, item)
  157:  sensor *tmp151 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  158:  op min :transportStatus:target *tmp151 28                    ...
  159:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  160:  write :fetchBlock:item processor2 ".transportItem"           Actions.mnd: display.transportItem = item;
  161:  write "Fetching " processor2 ".status2"                      Actions.mnd: display.status2 = text;
  162:  write :fetchBlock:item processor2 ".item2"                   Actions.mnd: display.item2 = item;
  163:  write :fetchBlock:block processor2 ".block2"                 Actions.mnd: display.block2 = block;
  164:  sensor *tmp153 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  165:  sensor *tmp154 :fetchBlock:block @y                          ...
  166:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label559                                              Actions.mnd: do
  167:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  168:  jump *label560 equal *tmp108 null                            ...
  169:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label560                                              ...
  170:  ucontrol approach *tmp153 *tmp154 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  171:  ucontrol within *tmp153 *tmp154 6 *tmp111 0                  Actions.mnd: while !within(x, y, RADIUS);
  172:  jump *label559 equal *tmp111 false                           Actions.mnd: do
  173:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  174:  jump *label554 equal *tmp113 null                            ...
        label *label552                                              ...
  175:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  176:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  177:  jump *label552 notEqual *tmp113 null                         ...
        label *label554                                              ...
        label *label126                                              Actions.mnd: do
  178:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 28 0 0  Actions.mnd: itemTake(block, item, capacity);
  179:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  180:  op notEqual *tmp156 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  181:  op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item    ...
  182:  op land *tmp158 *tmp156 *tmp157                              ...
  183:  jump *label129 equal *tmp158 false                           ...
  184:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label129                                              Actions.mnd: if unitItem != null and unitItem != item then
  185:  sensor *tmp160 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  186:  op lessThan *tmp161 *tmp160 28                               ...
  187:  sensor *tmp162 :fetchBlock:block :fetchBlock:item            ...
  188:  op land *tmp163 *tmp161 *tmp162                              ...
  189:  jump *label126 notEqual *tmp163 false                        Actions.mnd: do
  190:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  191:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  192:  jump *label642 notEqual *tmp117 :fetchBlock:item             ...
  193:  sensor *tmp115 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  194:  sensor *tmp116 .core @y                                      ...
  195:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  196:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  197:  jump *label636 notEqual *tmp105 false                        ...
        label *label634                                              ...
  198:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  199:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  200:  jump *label634 equal *tmp105 false                           ...
        label *label636                                              ...
  201:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label639                                              Actions.mnd: do
  202:  ucontrol itemDrop .core 28 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  203:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  204:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  205:  sensor *tmp123 .core :fetchBlock:item                        ...
  206:  jump *label639 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  207:  jump *label647 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label642                                              ...
  208:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  209:  jump *label646 equal *tmp125 null                            ...
        label *label644                                              ...
  210:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  211:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  212:  jump *label644 notEqual *tmp125 null                         ...
        label *label646                                              ...
        label *label647                                              Actions.mnd: if @unit.@firstItem == item then
  213:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  214:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  215:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label29                                               Actions.mnd: void supplyBlock(block, ore)
  216:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  217:  write :supplyBlock:ore processor2 ".item2"                   Actions.mnd: display.item2 = item;
  218:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  219:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  220:  sensor *tmp165 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  221:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  222:  jump *label134 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  223:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  224:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  225:  set :mineOre:block :supplyBlock:block                        ...
  226:  setaddr :mineOre*retaddr *label136                           ...
  227:  call *label25 *invalid :mineOre*retval                       ...
        label *label136                                              ...
        label *label134                                              Actions.mnd: if missing > 0 then
  228:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label32                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  229:  read *tmp181 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  230:  op sub *tmp182 *tmp181 74                                    ...
  231:  lookup block :unpackCfg:type *tmp182                         ...
  232:  read *tmp185 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  233:  op sub *tmp186 *tmp185 74                                    ...
  234:  op div :unpackCfg:x *tmp186 2                                ...
  235:  read *tmp189 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  236:  op sub *tmp190 *tmp189 74                                    ...
  237:  op div :unpackCfg:y *tmp190 2                                ...
  238:  read *tmp193 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  239:  op sub :unpackCfg:rotation *tmp193 74                        ...
  240:  read *tmp196 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  241:  op sub :unpackCfg:ind *tmp196 74                             ...
  242:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  243:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  244:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  245:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  246:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  247:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  248:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  249:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label38                                               BuilderController.mnd: void supplyBaseLocal()
  250:  op add *tmp206 .siliconMonoSurplus silicon                   BuilderController.mnd: monoController.sandTarget = max(0, siliconMonoSurplus + targetSilicon - core.@silicon);
  251:  sensor *tmp207 .core @silicon                                ...
  252:  op sub *tmp208 *tmp206 *tmp207                               ...
  253:  op max *tmp209 0 *tmp208                                     ...
  254:  write *tmp209 processor7 ".sandTarget"                       ...
  255:  jump *label150 equal .thoriumContainer false                 BuilderController.mnd: if thoriumContainer then
  256:  write "Phase 2: servicing thorium drill" processor2 ".status Actions.mnd: display.status1 = text;
  257:  sensor *tmp211 .thoriumBattery @totalPower                   BuilderController.mnd: if thoriumBattery.@totalPower < 2000 then
  258:  jump *label154 greaterThanEq *tmp211 2000                    ...
  259:  sensor *tmp214 .thoriumGenerator @coal                       BuilderController.mnd: if thoriumGenerator.@coal == 0 then
  260:  jump *label156 notEqual *tmp214 0                            ...
  261:  sensor *tmp217 .core @coal                                   BuilderController.mnd: if core.@coal < 50 then
  262:  jump *label158 greaterThanEq *tmp217 50                      ...
  263:  set :supplyBlock:block .thoriumGenerator                     BuilderController.mnd: supplyBlock(thoriumGenerator, @coal);
  264:  set :supplyBlock:ore @coal                                   ...
  265:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  266:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  267:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  268:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  269:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  270:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  271:  jump *label159 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  272:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  273:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  274:  set :mineOre:block :supplyBlock:block                        ...
  275:  setaddr :mineOre*retaddr *label159                           ...
  276:  call *label25 *invalid :mineOre*retval                       ...
        label *label158                                              BuilderController.mnd: if core.@coal < 50 then
  277:  set :supplyBlockFromCore:target .thoriumGenerator            BuilderController.mnd: supplyBlockFromCore(thoriumGenerator, @coal);
  278:  sensor *tmp169 :supplyBlockFromCore:target @itemCapacity     Actions.mnd: var cap = min(target.@itemCapacity, capacity);
  279:  op min :supplyBlockFromCore:cap *tmp169 28                   ...
  280:  set :transportStatus:target :supplyBlockFromCore:cap         Actions.mnd: transportStatus(cap, item);
  281:  write :supplyBlockFromCore:cap processor2 ".transportTarget" Actions.mnd: display.transportTarget = target;
  282:  write @coal processor2 ".transportItem"                      Actions.mnd: display.transportItem = item;
  283:  write "Transferring " processor2 ".status2"                  Actions.mnd: display.status2 = text;
  284:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  285:  write :supplyBlockFromCore:target processor2 ".block2"       Actions.mnd: display.block2 = block;
  286:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label595                                              Actions.mnd: do
  287:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  288:  jump *label596 equal *tmp108 null                            ...
  289:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label596                                              ...
  290:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  291:  ucontrol within .coreX .coreY 6 *tmp111 0                    Actions.mnd: while !within(x, y, RADIUS);
  292:  jump *label595 equal *tmp111 false                           Actions.mnd: do
  293:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  294:  jump *label617 equal *tmp113 null                            ...
        label *label615                                              ...
  295:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  296:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  297:  jump *label615 notEqual *tmp113 null                         ...
        label *label617                                              ...
        label *label471                                              Actions.mnd: do
  298:  ucontrol itemTake .core @coal :supplyBlockFromCore:cap 0 0   Actions.mnd: itemTake(core, item, cap);
  299:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  300:  op notEqual *tmp172 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  301:  op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal      ...
  302:  op land *tmp174 *tmp172 *tmp173                              ...
  303:  jump *label472 equal *tmp174 false                           ...
  304:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label472                                              Actions.mnd: if unitItem != null and unitItem != item then
  305:  sensor *tmp176 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < cap and core.sensor(item);
  306:  op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap         ...
  307:  sensor *tmp178 .core @coal                                   ...
  308:  op land *tmp179 *tmp177 *tmp178                              ...
  309:  jump *label471 notEqual *tmp179 false                        Actions.mnd: do
  310:  set :depositItems:block :supplyBlockFromCore:target          Actions.mnd: depositItems(target, item);
  311:  set :depositItems:item @coal                                 ...
  312:  setaddr :depositItems*retaddr *label476                      ...
  313:  call *label23 *invalid :depositItems*retval                  ...
        label *label476                                              ...
        label *label159                                              BuilderController.mnd: if core.@coal < 50 then
        label *label156                                              BuilderController.mnd: if thoriumGenerator.@coal == 0 then
        label *label154                                              BuilderController.mnd: if thoriumBattery.@totalPower < 2000 then
  314:  set :fetchBlock:block .thoriumContainer                      BuilderController.mnd: fetchBlock(thoriumContainer, @thorium);
  315:  set :fetchBlock:item @thorium                                ...
  316:  setaddr :fetchBlock*retaddr *label162                        ...
  317:  call *label28 *invalid :fetchBlock*retval                    ...
        label *label162                                              ...
  318:  sensor *tmp220 .core @thorium                                BuilderController.mnd: if core.@thorium > 400 then
  319:  jump *label151 lessThanEq *tmp220 400                        ...
  320:  write 0 AÕFFJS-micro-processor9 ".monoTarget"                BuilderController.mnd: processor.monoTarget = target;
  321:  write 4 AÕFFJS-micro-processor9 ".polyTarget"                BuilderController.mnd: processor.polyTarget = target;
  322:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if thoriumContainer then
        label *label150                                              ...
  323:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 BuilderController.mnd: elsif processor.monos > 1 then
  324:  jump *label167 lessThanEq *tmp81 1                           ...
  325:  write "Phase 1: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  326:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  327:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  328:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  329:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  330:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  331:  set :mineOre:amount 28                                       ...
  332:  set :mineOre:block .core                                     ...
  333:  setaddr :mineOre*retaddr *label624                           ...
  334:  call *label25 *invalid :mineOre*retval                       ...
        label *label624                                              ...
  335:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif processor.monos > 1 then
        label *label167                                              ...
  336:  set :supplyBase0:supplied false                              BuilderController.mnd: var supplied = false;
  337:  jump *label173 notEqual A©JNJP-unloader6 null                BuilderController.mnd: if unloader1 == null then
  338:  sensor *tmp227 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then
  339:  jump *label175 greaterThanEq *tmp227 graphite                ...
  340:  sensor *tmp230 AJEMJJ-graphite-press0 @coal                  BuilderController.mnd: if press.@coal < 5 then
  341:  jump *label177 greaterThanEq *tmp230 5                       ...
  342:  write "Goal 1: graphite requirement" processor2 ".status1"   Actions.mnd: display.status1 = text;
  343:  set :supplyBlock:block AJEMJJ-graphite-press0                BuilderController.mnd: supplyBlock(press, @coal);
  344:  set :supplyBlock:ore @coal                                   ...
  345:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  346:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  347:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  348:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  349:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  350:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  351:  jump *label667 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  352:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  353:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  354:  set :mineOre:block :supplyBlock:block                        ...
  355:  setaddr :mineOre*retaddr *label666                           ...
  356:  call *label25 *invalid :mineOre*retval                       ...
        label *label666                                              ...
        label *label667                                              Actions.mnd: if missing > 0 then
  357:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
        label *label177                                              BuilderController.mnd: if press.@coal < 5 then
        label *label175                                              BuilderController.mnd: if core.@graphite < targetGraphite then
  358:  sensor *tmp233 AJTJK-battery1 @totalPower                   BuilderController.mnd: if battery1.@totalPower < powerTarget then
  359:  jump *label181 greaterThanEq *tmp233 .powerTarget            ...
  360:  sensor *tmp236 AJRJM-combustion-generator3 @coal            BuilderController.mnd: if generator.@coal < 2 then
  361:  jump *label183 greaterThanEq *tmp236 2                       ...
  362:  write "Goal 4: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  363:  set :supplyBlock:block AJRJM-combustion-generator3          BuilderController.mnd: supplyBlock(generator, @coal);
  364:  set :supplyBlock:ore @coal                                   ...
  365:  setaddr :supplyBlock*retaddr *label186                       ...
  366:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label186                                              ...
  367:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: return;
        label *label183                                              BuilderController.mnd: if generator.@coal < 2 then
        label *label181                                              BuilderController.mnd: if battery1.@totalPower < powerTarget then
  368:  sensor *tmp239 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then
  369:  jump *label187 greaterThanEq *tmp239 silicon                 ...
  370:  sensor *tmp242 ALMQJN-silicon-smelter4 @coal                 BuilderController.mnd: if smelter.@coal < 5 then
  371:  jump *label189 greaterThanEq *tmp242 5                       ...
  372:  write "Goal 2: coal for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  373:  set :supplyBlock:block ALMQJN-silicon-smelter4               BuilderController.mnd: supplyBlock(smelter, @coal);
  374:  set :supplyBlock:ore @coal                                   ...
  375:  setaddr :supplyBlock*retaddr *label192                       ...
  376:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label192                                              ...
  377:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
  378:  jump *label190 always 0 0                                    BuilderController.mnd: if smelter.@coal < 5 then
        label *label189                                              ...
  379:  sensor *tmp245 ALMQJN-silicon-smelter4 @sand                 BuilderController.mnd: elsif smelter.@sand < 5 then
  380:  jump *label193 greaterThanEq *tmp245 5                       ...
  381:  jump *label195 equal .scrap false                            BuilderController.mnd: if scrap then
  382:  sensor *tmp249 AXPRJd-pulverizer26 @scrap                    BuilderController.mnd: if pulverizer1.@scrap < 10 then
  383:  jump *label196 greaterThanEq *tmp249 10                      ...
  384:  write "Goal 3a: scrap for silicon requirement" processor2 ". Actions.mnd: display.status1 = text;
  385:  set :supplyBlock:block AXPRJd-pulverizer26                   BuilderController.mnd: supplyBlock(pulverizer1, @scrap);
  386:  set :supplyBlock:ore @scrap                                  ...
  387:  setaddr :supplyBlock*retaddr *label200                       ...
  388:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label200                                              ...
  389:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
  390:  jump *label196 always 0 0                                    BuilderController.mnd: if scrap then
        label *label195                                              ...
  391:  write "Goal 3: sand for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  392:  set :supplyBlock:block ALMQJN-silicon-smelter4               BuilderController.mnd: supplyBlock(smelter, @sand);
  393:  set :supplyBlock:ore @sand                                   ...
  394:  setaddr :supplyBlock*retaddr *label202                       ...
  395:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label202                                              ...
  396:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
        label *label196                                              BuilderController.mnd: if scrap then
        label *label193                                              BuilderController.mnd: elsif smelter.@sand < 5 then
        label *label190                                              BuilderController.mnd: if smelter.@coal < 5 then
        label *label187                                              BuilderController.mnd: if core.@silicon < targetSilicon then
        label *label173                                              BuilderController.mnd: if unloader1 == null then
  397:  set *tmp254 100                                              BuilderController.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(5, targetTitanium - core.@titanium) : 100;
  398:  sensor *tmp252 .core @titanium                               ...
  399:  jump *label204 greaterThanEq *tmp252 titanium                ...
  400:  sensor *tmp255 .core @titanium                               ...
  401:  op sub *tmp256 titanium *tmp255                              ...
  402:  op min *tmp254 5 *tmp256                                     ...
        label *label204                                              ...
  403:  sensor *tmp258 .titaniumDrill @titanium                      BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  404:  jump *label205 greaterThanEq *tmp258 *tmp254                 ...
  405:  jump *label206 notEqual :supplyBase0:supplied false          BuilderController.mnd: if !supplied then
  406:  sensor *tmp263 AJTJK-battery1 @totalPower                   BuilderController.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  407:  op mul *tmp264 A©JNJP-unloader6 .powerTarget                 ...
  408:  jump *label209 greaterThanEq *tmp263 *tmp264                 ...
  409:  write "Goal 5: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  410:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  411:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  412:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  413:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  414:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  415:  set :mineOre:amount 28                                       ...
  416:  set :mineOre:block .core                                     ...
  417:  setaddr :mineOre*retaddr *label661                           ...
  418:  call *label25 *invalid :mineOre*retval                       ...
        label *label661                                              ...
  419:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label209                                              ...
  420:  sensor *tmp267 .core @silicon                                BuilderController.mnd: elsif core.@silicon < targetSilicon then
  421:  jump *label213 greaterThanEq *tmp267 silicon                 ...
  422:  jump *label215 equal .scrap false                            BuilderController.mnd: if scrap then
  423:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  424:  jump *label218 equal A¨SSJh-container30 false                BuilderController.mnd: if container_a then
  425:  sensor :supplyBase0:coal .core @coal                         BuilderController.mnd: var coal = core.@coal;
  426:  sensor :supplyBase0:sand A¨SSJh-container30 @sand            BuilderController.mnd: var sand = container_a.@sand;
  427:  select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand  BuilderController.mnd: var ore = coal < sand ? @coal : @scrap;
  428:  select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand  BuilderController.mnd: var block = coal < sand ? core : container_a;
  429:  set :mineOre.1:ore *tmp275                                   BuilderController.mnd: mineOre(ore, block);
  430:  set :mineOre.1:block *tmp277                                 ...
  431:  setaddr :mineOre.1*retaddr *label224                         ...
  432:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label224                                              ...
  433:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if container_a then
        label *label218                                              ...
  434:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  435:  setaddr :mineOre.2*retaddr *label225                         ...
  436:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label225                                              ...
  437:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if scrap then
        label *label215                                              ...
  438:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  439:  sensor :supplyBase0:coal.1 .core @coal                       BuilderController.mnd: var coal = core.@coal;
  440:  sensor :supplyBase0:sand.1 .core @sand                       BuilderController.mnd: var sand = core.@sand;
  441:  select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBa BuilderController.mnd: var ore = coal < sand ? @coal : @sand;
  442:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  443:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  444:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  445:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  446:  set :mineOre:amount 28                                       ...
  447:  set :mineOre:block .core                                     ...
  448:  setaddr :mineOre*retaddr *label673                           ...
  449:  call *label25 *invalid :mineOre*retval                       ...
        label *label673                                              ...
  450:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@silicon < targetSilicon then
        label *label213                                              ...
  451:  sensor *tmp282 .core @copper                                 BuilderController.mnd: elsif core.@copper < targetCopper then
  452:  jump *label230 greaterThanEq *tmp282 copper                  ...
  453:  write "Goal 7: copper requirement" processor2 ".status1"     Actions.mnd: display.status1 = text;
  454:  set :mineOre.2:ore @copper                                   BuilderController.mnd: mineOre(@copper);
  455:  setaddr :mineOre.2*retaddr *label233                         ...
  456:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label233                                              ...
  457:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@copper < targetCopper then
        label *label230                                              ...
  458:  sensor *tmp285 .core @lead                                   BuilderController.mnd: elsif core.@lead < targetLead then
  459:  jump *label234 greaterThanEq *tmp285 lead                    ...
  460:  write "Goal 8: lead requirement" processor2 ".status1"       Actions.mnd: display.status1 = text;
  461:  set :mineOre.2:ore @lead                                     BuilderController.mnd: mineOre(@lead);
  462:  setaddr :mineOre.2*retaddr *label237                         ...
  463:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label237                                              ...
  464:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@lead < targetLead then
        label *label234                                              ...
  465:  sensor *tmp288 .core @metaglass                              BuilderController.mnd: elsif core.@metaglass < targetMetaglass then
  466:  jump *label238 greaterThanEq *tmp288 metaglass               ...
  467:  write "Goal 9: metaglass requirement" processor2 ".status1"  Actions.mnd: display.status1 = text;
  468:  jump *label241 equal .scrap false                            BuilderController.mnd: if scrap then
  469:  set :mineOre.1:ore @scrap                                    BuilderController.mnd: mineOre(@scrap, sandContainer);
  470:  set :mineOre.1:block .sandContainer                          ...
  471:  setaddr :mineOre.1*retaddr *label243                         ...
  472:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label243                                              ...
  473:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if scrap then
        label *label241                                              ...
  474:  set :mineOre.2:ore @sand                                     BuilderController.mnd: mineOre(@sand);
  475:  setaddr :mineOre.2*retaddr *label244                         ...
  476:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label244                                              ...
  477:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@metaglass < targetMetaglass then
        label *label238                                              ...
  478:  write "Goal 10: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  479:  jump *label246 equal A¨SSJh-container30 false                BuilderController.mnd: if container_a then
  480:  set :mineOre.1:ore @scrap                                    BuilderController.mnd: mineOre(@scrap, container_a);
  481:  set :mineOre.1:block A¨SSJh-container30                      ...
  482:  setaddr :mineOre.1*retaddr *label248                         ...
  483:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label248                                              ...
  484:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if container_a then
        label *label246                                              ...
  485:  sensor *tmp293 .core @coal                                   BuilderController.mnd: var ore = scrap or core.@coal <= core.@sand ? @coal : @sand;
  486:  sensor *tmp294 .core @sand                                   ...
  487:  op lessThanEq *tmp295 *tmp293 *tmp294                        ...
  488:  op or *tmp296 .scrap *tmp295                                 ...
  489:  select :mineOre.2:ore notEqual *tmp296 false @coal @sand     ...
  490:  setaddr :mineOre.2*retaddr *label251                         BuilderController.mnd: mineOre(ore);
  491:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label251                                              ...
  492:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label205                                              ...
  493:  write "Goal 11: Fetching titanium" processor2 ".status1"     Actions.mnd: display.status1 = text;
  494:  set :fetchBlock:block .titaniumDrill                         BuilderController.mnd: fetchBlock(titaniumDrill, @titanium);
  495:  set :fetchBlock:item @titanium                               ...
  496:  setaddr :fetchBlock*retaddr *label253                        ...
  497:  call *label28 *invalid :fetchBlock*retval                    ...
        label *label253                                              ...
        label *label206                                              BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label151                                              BuilderController.mnd: if thoriumContainer then
  498:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: void supplyBaseLocal()
        label *label39                                               BuilderController.mnd: def targetMet()
  499:  sensor *tmp298 .core @copper                                 BuilderController.mnd: if core.@copper < targetCopper then display.missing = @copper; return false; end;
  500:  jump *label255 greaterThanEq *tmp298 copper                  ...
  501:  write @copper processor2 ".missing"                          ...
  502:  set :targetMet*retval false                                  ...
  503:  return :targetMet*retaddr                                    ...
        label *label255                                              ...
  504:  sensor *tmp301 .core @lead                                   BuilderController.mnd: if core.@lead < targetLead then display.missing = @lead; return false; end;
  505:  jump *label257 greaterThanEq *tmp301 lead                    ...
  506:  write @lead processor2 ".missing"                            ...
  507:  set :targetMet*retval false                                  ...
  508:  return :targetMet*retaddr                                    ...
        label *label257                                              ...
  509:  sensor *tmp304 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then display.missing = @graphite; return false; end;
  510:  jump *label259 greaterThanEq *tmp304 graphite                ...
  511:  write @graphite processor2 ".missing"                        ...
  512:  set :targetMet*retval false                                  ...
  513:  return :targetMet*retaddr                                    ...
        label *label259                                              ...
  514:  sensor *tmp307 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then display.missing = @silicon; return false; end;
  515:  jump *label261 greaterThanEq *tmp307 silicon                 ...
  516:  write @silicon processor2 ".missing"                         ...
  517:  set :targetMet*retval false                                  ...
  518:  return :targetMet*retaddr                                    ...
        label *label261                                              ...
  519:  sensor *tmp310 .core @titanium                               BuilderController.mnd: if core.@titanium < targetTitanium then display.missing = @titanium; return false; end;
  520:  jump *label263 greaterThanEq *tmp310 titanium                ...
  521:  write @titanium processor2 ".missing"                        ...
  522:  set :targetMet*retval false                                  ...
  523:  return :targetMet*retaddr                                    ...
        label *label263                                              ...
  524:  sensor *tmp313 .core @metaglass                              BuilderController.mnd: if core.@metaglass < targetMetaglass then display.missing = @metaglass; return false; end;
  525:  jump *label265 greaterThanEq *tmp313 metaglass               ...
  526:  write @metaglass processor2 ".missing"                       ...
  527:  set :targetMet*retval false                                  ...
  528:  return :targetMet*retaddr                                    ...
        label *label265                                              ...
  529:  sensor *tmp316 .core @thorium                                BuilderController.mnd: if core.@thorium < targetThorium then display.missing = @thorium; return false; end;
  530:  jump *label267 greaterThanEq *tmp316 thorium                 ...
  531:  write @thorium processor2 ".missing"                         ...
  532:  set :targetMet*retval false                                  ...
  533:  return :targetMet*retaddr                                    ...
        label *label267                                              ...
  534:  set :targetMet*retval true                                   BuilderController.mnd: return true;
  535:  return :targetMet*retaddr                                    ...
        label *label40                                               BuilderController.mnd: void meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  536:  op sign :meetTargetLocal:count :meetTargetLocal:copper 0     BuilderController.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  537:  op sign *tmp320 :meetTargetLocal:lead 0                      ...
  538:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  539:  op sign *tmp320 :meetTargetLocal:graphite 0                  ...
  540:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  541:  op sign *tmp320 :meetTargetLocal:silicon 0                   ...
  542:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  543:  op sign *tmp320 :meetTargetLocal:titanium 0                  ...
  544:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  545:  op sign *tmp320 :meetTargetLocal:metaglass 0                 ...
  546:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  547:  op sign *tmp320 :meetTargetLocal:thorium 0                   ...
  548:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  549:  write :meetTargetLocal:count processor2 ".totalTargets"      BuilderController.mnd: display.totalTargets = count;
  550:  write :meetTargetLocal:block processor2 ".nextBlock"         BuilderController.mnd: display.nextBlock = block;
  551:  write :meetTargetLocal:copper processor2 ".targetCopper"     BuilderController.mnd: display.targetCopper = copper;
  552:  write :meetTargetLocal:lead processor2 ".targetLead"         BuilderController.mnd: display.targetLead = lead;
  553:  write :meetTargetLocal:graphite processor2 ".targetGraphite" BuilderController.mnd: display.targetGraphite = graphite;
  554:  write :meetTargetLocal:silicon processor2 ".targetSilicon"   BuilderController.mnd: display.targetSilicon = silicon;
  555:  write :meetTargetLocal:titanium processor2 ".targetTitanium" BuilderController.mnd: display.targetTitanium = titanium;
  556:  write :meetTargetLocal:metaglass processor2 ".targetMetaglas BuilderController.mnd: display.targetMetaglass = metaglass;
  557:  write :meetTargetLocal:thorium processor2 ".targetThorium"   BuilderController.mnd: display.targetThorium = thorium;
  558:  set copper :meetTargetLocal:copper                           BuilderController.mnd: targetCopper = copper;
  559:  op add lead :meetTargetLocal:lead .leadSurplus               BuilderController.mnd: targetLead = lead + leadSurplus;
  560:  set graphite :meetTargetLocal:graphite                       BuilderController.mnd: targetGraphite = graphite;
  561:  set silicon :meetTargetLocal:silicon                         BuilderController.mnd: targetSilicon = silicon;
  562:  set titanium :meetTargetLocal:titanium                       BuilderController.mnd: targetTitanium = titanium;
  563:  set metaglass :meetTargetLocal:metaglass                     BuilderController.mnd: targetMetaglass = metaglass;
  564:  set thorium :meetTargetLocal:thorium                         BuilderController.mnd: targetThorium = thorium;
  565:  set .noTarget :meetTargetLocal:isNoTarget                    BuilderController.mnd: noTarget = isNoTarget;
  566:  op add *tmp322 :meetTargetLocal:graphite .graphiteSurplus    BuilderController.mnd: processor.pressTarget = graphite + graphiteSurplus;
  567:  write *tmp322 AÕFFJS-micro-processor9 ".pressTarget"         ...
  568:  op add *tmp323 :meetTargetLocal:silicon .siliconSurplus      BuilderController.mnd: processor.smelterTarget = silicon + siliconSurplus;
  569:  write *tmp323 AÕFFJS-micro-processor9 ".smelterTarget"       ...
  570:  op add *tmp324 :meetTargetLocal:metaglass .metaglassSurplus  BuilderController.mnd: processor.kilnTarget = metaglass + metaglassSurplus;
  571:  write *tmp324 AÕFFJS-micro-processor9 ".kilnTarget"          ...
  572:  op sign *tmp325 :meetTargetLocal:silicon 0                   BuilderController.mnd: processor.siliconReserve = silicon + sign(silicon) * 20;
  573:  op mul *tmp326 *tmp325 20                                    ...
  574:  op add *tmp327 :meetTargetLocal:silicon *tmp326              ...
  575:  write *tmp327 AÕFFJS-micro-processor9 ".siliconReserve"      ...
  576:  op sign *tmp328 :meetTargetLocal:graphite 0                  BuilderController.mnd: processor.graphiteReserve = graphite + sign(graphite) * 20;
  577:  op mul *tmp329 *tmp328 20                                    ...
  578:  op add *tmp330 :meetTargetLocal:graphite *tmp329             ...
  579:  write *tmp330 AÕFFJS-micro-processor9 ".graphiteReserve"     ...
  580:  write lead processor7 ".leadTarget"                          BuilderController.mnd: monoController.leadTarget = targetLead;
  581:  write :meetTargetLocal:copper processor7 ".copperTarget"     BuilderController.mnd: monoController.copperTarget = targetCopper;
  582:  setaddr :targetMet*retaddr *label283                         BuilderController.mnd: while !targetMet() do
  583:  call *label39 *invalid :targetMet*retval                     ...
        label *label283                                              ...
  584:  jump *label282 notEqual :targetMet*retval false              ...
        label *label601                                              ...
  585:  setaddr :supplyBaseLocal*retaddr *label284                   BuilderController.mnd: supplyBaseLocal();
  586:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label284                                              ...
  587:  setaddr :targetMet*retaddr *label602                         BuilderController.mnd: while !targetMet() do
  588:  call *label39 *invalid :targetMet*retval                     ...
        label *label602                                              ...
  589:  jump *label601 equal :targetMet*retval false                 ...
        label *label282                                              ...
  590:  jump *label285 equal :meetTargetLocal:forBuild false         BuilderController.mnd: if forBuild then
  591:  write false AÕFFJS-micro-processor9 ":buildStart*finished"   BuilderController.mnd: processor.buildStart();
  592:  write 1 AÕFFJS-micro-processor9 "@counter"                   ...
        label *label287                                              ...
  593:  wait 1e-15                                                   ...
  594:  read *tmp334 AÕFFJS-micro-processor9 ":buildStart*finished"  ...
  595:  jump *label287 equal *tmp334 false                           ...
  596:  setaddr :targetMet*retaddr *label291                         BuilderController.mnd: while !targetMet() do
  597:  call *label39 *invalid :targetMet*retval                     ...
        label *label291                                              ...
  598:  jump *label290 notEqual :targetMet*retval false              ...
        label *label619                                              ...
  599:  setaddr :supplyBaseLocal*retaddr *label292                   BuilderController.mnd: supplyBaseLocal();
  600:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label292                                              ...
  601:  setaddr :targetMet*retaddr *label620                         BuilderController.mnd: while !targetMet() do
  602:  call *label39 *invalid :targetMet*retval                     ...
        label *label620                                              ...
  603:  jump *label619 equal :targetMet*retval false                 ...
        label *label290                                              ...
        label *label285                                              BuilderController.mnd: if forBuild then
  604:  return :meetTargetLocal*retaddr                              BuilderController.mnd: void meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
        label *label6                                                BuilderController.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  605:  set :meetTargetLocal:block :meetTarget:block                 BuilderController.mnd: meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget);
  606:  set :meetTargetLocal:copper :meetTarget:copper               ...
  607:  set :meetTargetLocal:lead :meetTarget:lead                   ...
  608:  set :meetTargetLocal:graphite :meetTarget:graphite           ...
  609:  set :meetTargetLocal:silicon :meetTarget:silicon             ...
  610:  set :meetTargetLocal:titanium :meetTarget:titanium           ...
  611:  set :meetTargetLocal:metaglass :meetTarget:metaglass         ...
  612:  set :meetTargetLocal:thorium :meetTarget:thorium             ...
  613:  set :meetTargetLocal:forBuild :meetTarget:forBuild           ...
  614:  set :meetTargetLocal:isNoTarget :meetTarget:isNoTarget       ...
  615:  setaddr :meetTargetLocal*retaddr *label294                   ...
  616:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label294                                              ...
  617:  set :meetTarget*finished true                                BuilderController.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  618:  jump *label54 always 0 0                                     ...
        label *label7                                                BuilderController.mnd: remote void meetTargetCfg(cfg)
  619:  set :unpackCfg:cfg :meetTargetCfg:cfg                        BuilderController.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  620:  setaddr :unpackCfg*retaddr *label296                         ...
  621:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label296                                              ...
  622:  set :meetTargetLocal:block :unpackCfg:type                   BuilderController.mnd: meetTargetLocal(type, cu, pb, gr, si, ti, mg, th, false, false);
  623:  set :meetTargetLocal:copper :unpackCfg:cu                    ...
  624:  set :meetTargetLocal:lead :unpackCfg:pb                      ...
  625:  set :meetTargetLocal:graphite :unpackCfg:gr                  ...
  626:  set :meetTargetLocal:silicon :unpackCfg:si                   ...
  627:  set :meetTargetLocal:titanium :unpackCfg:ti                  ...
  628:  set :meetTargetLocal:metaglass :unpackCfg:mg                 ...
  629:  set :meetTargetLocal:thorium :unpackCfg:th                   ...
  630:  set :meetTargetLocal:forBuild false                          ...
  631:  set :meetTargetLocal:isNoTarget false                        ...
  632:  setaddr :meetTargetLocal*retaddr *label297                   ...
  633:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label297                                              ...
  634:  set :meetTargetCfg*finished true                             BuilderController.mnd: remote void meetTargetCfg(cfg)
  635:  jump *label54 always 0 0                                     ...
        label *label41                                               BuilderController.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  636:  op notEqual *tmp337 AÕFFJS-micro-processor9 null             BuilderController.mnd: meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, processor != null, false);
  637:  set :meetTargetLocal:block :buildBlock:block                 ...
  638:  set :meetTargetLocal:copper :buildBlock:copper               ...
  639:  set :meetTargetLocal:lead :buildBlock:lead                   ...
  640:  set :meetTargetLocal:graphite :buildBlock:graphite           ...
  641:  set :meetTargetLocal:silicon :buildBlock:silicon             ...
  642:  set :meetTargetLocal:titanium :buildBlock:titanium           ...
  643:  set :meetTargetLocal:metaglass :buildBlock:metaglass         ...
  644:  set :meetTargetLocal:thorium :buildBlock:thorium             ...
  645:  set :meetTargetLocal:forBuild *tmp337                        ...
  646:  set :meetTargetLocal:isNoTarget false                        ...
  647:  setaddr :meetTargetLocal*retaddr *label299                   ...
  648:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label299                                              ...
  649:  set :buildBlockAtLocal:block :buildBlock:block               BuilderController.mnd: var built = buildBlockAtLocal(block, x, y, rotation, config, index);
  650:  set :buildBlockAtLocal:x :buildBlock:x                       ...
  651:  set :buildBlockAtLocal:y :buildBlock:y                       ...
  652:  set :buildBlockAtLocal:rotation :buildBlock:rotation         ...
  653:  set :buildBlockAtLocal:config :buildBlock:config             ...
  654:  set :buildBlockAtLocal:index :buildBlock:index               ...
  655:  setaddr :buildBlockAtLocal*retaddr *label300                 ...
  656:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label300                                              ...
  657:  write false AÕFFJS-micro-processor9 ":buildStop*finished"    BuilderController.mnd: async(processor.buildStop());
  658:  write 2 AÕFFJS-micro-processor9 "@counter"                   ...
  659:  set :buildBlock*retval :buildBlockAtLocal*retval             BuilderController.mnd: return built;
  660:  return :buildBlock*retaddr                                   BuilderController.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label8                                                BuilderController.mnd: remote def buildRemoteBlock(cfg, x, y)
  661:  op add *tmp338 :buildRemoteBlock:x :buildRemoteBlock:y       BuilderController.mnd: if x + y > 0 then
  662:  jump *label302 lessThanEq *tmp338 0                          ...
  663:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     BuilderController.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  664:  setaddr :unpackCfg*retaddr *label304                         ...
  665:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label304                                              ...
  666:  set :buildBlock:block :unpackCfg:type                        BuilderController.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  667:  set :buildBlock:x :buildRemoteBlock:x                        ...
  668:  set :buildBlock:y :buildRemoteBlock:y                        ...
  669:  set :buildBlock:copper :unpackCfg:cu                         ...
  670:  set :buildBlock:lead :unpackCfg:pb                           ...
  671:  set :buildBlock:graphite :unpackCfg:gr                       ...
  672:  set :buildBlock:silicon :unpackCfg:si                        ...
  673:  set :buildBlock:titanium :unpackCfg:ti                       ...
  674:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  675:  set :buildBlock:thorium :unpackCfg:th                        ...
  676:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  677:  set :buildBlock:config null                                  ...
  678:  set :buildBlock:index :unpackCfg:ind                         ...
  679:  setaddr :buildBlock*retaddr *label305                        ...
  680:  call *label41 *invalid :buildBlock*retval                    ...
        label *label305                                              ...
  681:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  682:  jump *label301 always 0 0                                    ...
        label *label302                                              BuilderController.mnd: if x + y > 0 then
  683:  set :buildRemoteBlock*retval false                           BuilderController.mnd: return false;
  684:  jump *label301 always 0 0                                    ...
        label *label301                                              BuilderController.mnd: remote def buildRemoteBlock(cfg, x, y)
  685:  set :buildRemoteBlock*finished true                          ...
  686:  jump *label54 always 0 0                                     ...
        label *label9                                                BuilderController.mnd: remote def buildBlockFromCfg(cfg, config)
  687:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    BuilderController.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  688:  setaddr :unpackCfg*retaddr *label307                         ...
  689:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label307                                              ...
  690:  op add *tmp341 .coreX :unpackCfg:x                           BuilderController.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  691:  op add *tmp342 .coreY :unpackCfg:y                           ...
  692:  set :buildBlock:block :unpackCfg:type                        ...
  693:  set :buildBlock:x *tmp341                                    ...
  694:  set :buildBlock:y *tmp342                                    ...
  695:  set :buildBlock:copper :unpackCfg:cu                         ...
  696:  set :buildBlock:lead :unpackCfg:pb                           ...
  697:  set :buildBlock:graphite :unpackCfg:gr                       ...
  698:  set :buildBlock:silicon :unpackCfg:si                        ...
  699:  set :buildBlock:titanium :unpackCfg:ti                       ...
  700:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  701:  set :buildBlock:thorium :unpackCfg:th                        ...
  702:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  703:  set :buildBlock:config :buildBlockFromCfg:config             ...
  704:  set :buildBlock:index :unpackCfg:ind                         ...
  705:  setaddr :buildBlock*retaddr *label308                        ...
  706:  call *label41 *invalid :buildBlock*retval                    ...
        label *label308                                              ...
  707:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        BuilderController.mnd: @this.write(building, cfg);
  708:  write :buildBlock*retval processor2 :buildBlockFromCfg:cfg   BuilderController.mnd: display.write(building, cfg);
  709:  write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlock BuilderController.mnd: processor.write(building, cfg);
  710:  write :buildBlock*retval processor9 :buildBlockFromCfg:cfg   BuilderController.mnd: baseBuilder.write(building, cfg);
  711:  set :buildBlockFromCfg*retval :buildBlock*retval             BuilderController.mnd: return building;
  712:  set :buildBlockFromCfg*finished true                         BuilderController.mnd: remote def buildBlockFromCfg(cfg, config)
  713:  jump *label54 always 0 0                                     ...
        label *label43                                               BuilderController.mnd: def buildBlockAtLocal(block, x, y, rotation, config, index)
  714:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  715:  ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6  Actions.mnd: while !within(x, y, radius) do
  716:  jump *label544 notEqual *tmp105 false                        ...
        label *label542                                              ...
  717:  ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y  Actions.mnd: approach(x, y, radius - 0.5);
  718:  ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6  Actions.mnd: while !within(x, y, radius) do
  719:  jump *label542 equal *tmp105 false                           ...
        label *label544                                              ...
  720:  ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y  BuilderController.mnd: var building = getBlock(x, y, out type);
  721:  jump *label315 equal :buildBlockAtLocal:building null        BuilderController.mnd: if building != null then
  722:  jump *label317 notEqual :buildBlockAtLocal:type :buildBlockA BuilderController.mnd: if type == block then return building; end;
  723:  set :buildBlockAtLocal*retval :buildBlockAtLocal:building    ...
  724:  return :buildBlockAtLocal*retaddr                            ...
        label *label317                                              ...
  725:  set .ERROR "Cannot build at position"                        BuilderController.mnd: ERROR = text;
  726:  set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block              BuilderController.mnd: ERROR_FOUND_BLOCK = block;
  727:  set .ERROR_FOUND_TYPE :buildBlockAtLocal:type                BuilderController.mnd: ERROR_FOUND_TYPE = type;
  728:  set .ERROR_X :buildBlockAtLocal:x                            BuilderController.mnd: ERROR_X = x;
  729:  set .ERROR_Y :buildBlockAtLocal:y                            BuilderController.mnd: ERROR_Y = y;
  730:  stop                                                         BuilderController.mnd: stopProcessor();
        label *label315                                              BuilderController.mnd: if building != null then
  731:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BuilderController.mnd: build(x, y, block, rotation, config);
  732:  wait 0.25                                                    BuilderController.mnd: wait(0.25);
  733:  set :buildBlockAtLocal:success false                         BuilderController.mnd: var success = false;
        label *label320                                              BuilderController.mnd: do
  734:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BuilderController.mnd: build(x, y, block, rotation, config);
  735:  ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y  BuilderController.mnd: building = getBlock(x, y, out type);
  736:  op equal *tmp353 :buildBlockAtLocal:building null            BuilderController.mnd: if building == null and !success then
  737:  op equal *tmp354 :buildBlockAtLocal:success false            ...
  738:  op land *tmp355 *tmp353 *tmp354                              ...
  739:  jump *label323 equal *tmp355 false                           ...
  740:  set .ERROR "Error while building"                            BuilderController.mnd: ERROR = text;
  741:  set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block              BuilderController.mnd: ERROR_FOUND_BLOCK = block;
  742:  set .ERROR_FOUND_TYPE :buildBlockAtLocal:type                BuilderController.mnd: ERROR_FOUND_TYPE = type;
  743:  set .ERROR_X :buildBlockAtLocal:x                            BuilderController.mnd: ERROR_X = x;
  744:  set .ERROR_Y :buildBlockAtLocal:y                            BuilderController.mnd: ERROR_Y = y;
  745:  stop                                                         BuilderController.mnd: stopProcessor();
  746:  jump *label324 always 0 0                                    BuilderController.mnd: if building == null and !success then
        label *label323                                              ...
  747:  set :buildBlockAtLocal:success true                          BuilderController.mnd: success = true;
        label *label324                                              BuilderController.mnd: if building == null and !success then
  748:  jump *label326 notEqual :buildBlockAtLocal:block @multiplica BuilderController.mnd: if block == @multiplicative-reconstructor then
  749:  control enabled processor6 false 0 0 0                       BuilderController.mnd: polyController.enabled = false;     // Brutal, but effective :)
  750:  ubind @poly                                                  BuilderController.mnd: ubind(@poly);
  751:  jump *label328 equal @unit .builder                          BuilderController.mnd: if @unit != builder then
  752:  ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y  BuilderController.mnd: approach(x, y, RADIUS);
  753:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BuilderController.mnd: build(x, y, block, rotation, config);
        label *label328                                              BuilderController.mnd: if @unit != builder then
        label *label326                                              BuilderController.mnd: if block == @multiplicative-reconstructor then
  754:  jump *label320 notEqual :buildBlockAtLocal:type :buildBlockA BuilderController.mnd: do
  755:  control enabled processor6 true 0 0 0                        BuilderController.mnd: polyController.enabled = true;
  756:  ubind .builder                                               BuilderController.mnd: ubind(builder);
  757:  sensor :log:encodedId :buildBlockAtLocal:block @id           BuilderController.mnd: log(block.@id);
  758:  read *tmp100 bank1 511                                       BuilderController.mnd: bank1[--logPosition] = encodedId + TIME * 1000;
  759:  op sub *tmp365 *tmp100 1                                     ...
  760:  write *tmp365 bank1 511                                      ...
  761:  read *tmp0 processor1 "time"                                 ...
  762:  op mul *tmp368 *tmp0 1000                                    ...
  763:  op add *tmp369 :log:encodedId *tmp368                        ...
  764:  write *tmp369 bank1 *tmp365                                  ...
  765:  jump *label332 lessThan :buildBlockAtLocal:index 0           BuilderController.mnd: if index >= 0 then
  766:  op shl *tmp372 1 :buildBlockAtLocal:index                    BuilderController.mnd: display.blocksBuilt |= (1 << index);
  767:  read *tmp7 processor2 ".blocksBuilt"                         ...
  768:  op or *tmp373 *tmp7 *tmp372                                  ...
  769:  write *tmp373 processor2 ".blocksBuilt"                      ...
  770:  write :buildBlockAtLocal:index processor2 ".recentBuildIndex BuilderController.mnd: display.recentBuildIndex = index;
        label *label332                                              BuilderController.mnd: if index >= 0 then
  771:  set :buildBlockAtLocal*retval :buildBlockAtLocal:building    BuilderController.mnd: return building;
  772:  return :buildBlockAtLocal*retaddr                            BuilderController.mnd: def buildBlockAtLocal(block, x, y, rotation, config, index)
        label *label10                                               BuilderController.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  773:  set :buildBlockAtLocal:block :buildBlockAt:block             BuilderController.mnd: return buildBlockAtLocal(block, x, y, rotation, config, index);
  774:  set :buildBlockAtLocal:x :buildBlockAt:x                     ...
  775:  set :buildBlockAtLocal:y :buildBlockAt:y                     ...
  776:  set :buildBlockAtLocal:rotation :buildBlockAt:rotation       ...
  777:  set :buildBlockAtLocal:config :buildBlockAt:config           ...
  778:  set :buildBlockAtLocal:index :buildBlockAt:index             ...
  779:  setaddr :buildBlockAtLocal*retaddr *label335                 ...
  780:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label335                                              ...
  781:  set :buildBlockAt*retval :buildBlockAtLocal*retval           ...
  782:  set :buildBlockAt*finished true                              BuilderController.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  783:  jump *label54 always 0 0                                     ...
        label *label11                                               BuilderController.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  784:  set :buildBlockAtLocal:block @pneumatic-drill                BuilderController.mnd: var drill = buildBlockAtLocal(@pneumatic-drill, x, y, 0, null, -1);
  785:  set :buildBlockAtLocal:x :buildFirstTitaniumDrillAt:x        ...
  786:  set :buildBlockAtLocal:y :buildFirstTitaniumDrillAt:y        ...
  787:  set :buildBlockAtLocal:rotation 0                            ...
  788:  set :buildBlockAtLocal:config null                           ...
  789:  set :buildBlockAtLocal:index -1                              ...
  790:  setaddr :buildBlockAtLocal*retaddr *label337                 ...
  791:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label337                                              ...
  792:  write :buildBlockAtLocal*retval processor8 ":addTitaniumDril BuilderController.mnd: flareController.addTitaniumDrill(drill);
  793:  write false processor8 ":addTitaniumDrill*finished"          ...
  794:  write 1 processor8 "@counter"                                ...
        label *label338                                              ...
  795:  wait 1e-15                                                   ...
  796:  read *tmp375 processor8 ":addTitaniumDrill*finished"         ...
  797:  jump *label338 equal *tmp375 false                           ...
  798:  set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*ret BuilderController.mnd: return drill;
  799:  set :buildFirstTitaniumDrillAt*finished true                 BuilderController.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  800:  jump *label54 always 0 0                                     ...
        label *label45                                               BuilderController.mnd: def buildTitaniumDrill(x, y, in out count, in out tiles)
  801:  jump *label347 greaterThanEq :buildTitaniumDrill:count .MAX_ BuilderController.mnd: if count < MAX_COUNT then
  802:  jump *label349 greaterThanEq :buildTitaniumDrill:tiles .MAX_ BuilderController.mnd: if tiles < MAX_TILES then
  803:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  804:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  805:  jump *label528 notEqual *tmp105 false                        ...
        label *label526                                              ...
  806:  ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill: Actions.mnd: approach(x, y, radius - 0.5);
  807:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  808:  jump *label526 equal *tmp105 false                           ...
        label *label528                                              ...
  809:  set .positive 0                                              BuilderController.mnd: positive = 0; negative = 0;
  810:  set .negative 0                                              ...
  811:  op sub *tmp389 :buildTitaniumDrill:x 0.5                     BuilderController.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  812:  op sub *tmp390 :buildTitaniumDrill:y 0.5                     ...
  813:  set :titaniumDrillScore:positive .positive                   ...
  814:  set :titaniumDrillScore:negative .negative                   ...
  815:  ucontrol getBlock *tmp389 *tmp390 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  816:  jump *label493 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  817:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  818:  jump *label496 always 0 0                                    ...
        label *label493                                              ...
  819:  jump *label494 equal :getFloor:floor @ore-copper             ...
  820:  jump *label494 equal :getFloor:floor @ore-lead               ...
  821:  jump *label494 equal :getFloor:floor @ore-scrap              ...
  822:  jump *label495 notEqual :getFloor:floor @ore-coal            ...
        label *label494                                              ...
  823:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label495                                              ...
        label *label496                                              ...
  824:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  825:  set .negative :titaniumDrillScore:negative                   ...
  826:  op add *tmp393 :buildTitaniumDrill:y 0.5                     BuilderController.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  827:  set :titaniumDrillScore:positive .positive                   ...
  828:  set :titaniumDrillScore:negative .negative                   ...
  829:  ucontrol getBlock *tmp389 *tmp393 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  830:  jump *label501 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  831:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  832:  jump *label504 always 0 0                                    ...
        label *label501                                              ...
  833:  jump *label502 equal :getFloor:floor @ore-copper             ...
  834:  jump *label502 equal :getFloor:floor @ore-lead               ...
  835:  jump *label502 equal :getFloor:floor @ore-scrap              ...
  836:  jump *label503 notEqual :getFloor:floor @ore-coal            ...
        label *label502                                              ...
  837:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label503                                              ...
        label *label504                                              ...
  838:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  839:  set .negative :titaniumDrillScore:negative                   ...
  840:  op add *tmp395 :buildTitaniumDrill:x 0.5                     BuilderController.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  841:  set :titaniumDrillScore:positive .positive                   ...
  842:  set :titaniumDrillScore:negative .negative                   ...
  843:  ucontrol getBlock *tmp395 *tmp390 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  844:  jump *label509 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  845:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  846:  jump *label512 always 0 0                                    ...
        label *label509                                              ...
  847:  jump *label510 equal :getFloor:floor @ore-copper             ...
  848:  jump *label510 equal :getFloor:floor @ore-lead               ...
  849:  jump *label510 equal :getFloor:floor @ore-scrap              ...
  850:  jump *label511 notEqual :getFloor:floor @ore-coal            ...
        label *label510                                              ...
  851:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label511                                              ...
        label *label512                                              ...
  852:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  853:  set .negative :titaniumDrillScore:negative                   ...
  854:  set :titaniumDrillScore:positive .positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  855:  set :titaniumDrillScore:negative .negative                   ...
  856:  ucontrol getBlock *tmp395 *tmp393 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  857:  jump *label517 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  858:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  859:  jump *label520 always 0 0                                    ...
        label *label517                                              ...
  860:  jump *label518 equal :getFloor:floor @ore-copper             ...
  861:  jump *label518 equal :getFloor:floor @ore-lead               ...
  862:  jump *label518 equal :getFloor:floor @ore-scrap              ...
  863:  jump *label519 notEqual :getFloor:floor @ore-coal            ...
        label *label518                                              ...
  864:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label519                                              ...
        label *label520                                              ...
  865:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  866:  set .negative :titaniumDrillScore:negative                   ...
  867:  op greaterThan *tmp401 .positive .negative                   BuilderController.mnd: if positive > negative && positive >= 2 then
  868:  op greaterThanEq *tmp402 .positive 2                         ...
  869:  op land *tmp403 *tmp401 *tmp402                              ...
  870:  jump *label357 equal *tmp403 false                           ...
  871:  set :buildBlockAtLocal:block @pneumatic-drill                BuilderController.mnd: var drill = buildBlockAtLocal(@pneumatic-drill, x, y, null, 0, -1);
  872:  set :buildBlockAtLocal:x :buildTitaniumDrill:x               ...
  873:  set :buildBlockAtLocal:y :buildTitaniumDrill:y               ...
  874:  set :buildBlockAtLocal:rotation null                         ...
  875:  set :buildBlockAtLocal:config 0                              ...
  876:  set :buildBlockAtLocal:index -1                              ...
  877:  setaddr :buildBlockAtLocal*retaddr *label359                 ...
  878:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label359                                              ...
  879:  jump *label360 equal :buildBlockAtLocal*retval null          BuilderController.mnd: if drill != null then
  880:  write :buildBlockAtLocal*retval processor8 ":addTitaniumDril BuilderController.mnd: flareController.addTitaniumDrill(drill);
  881:  write false processor8 ":addTitaniumDrill*finished"          ...
  882:  write 1 processor8 "@counter"                                ...
        label *label362                                              ...
  883:  wait 1e-15                                                   ...
  884:  read *tmp408 processor8 ":addTitaniumDrill*finished"         ...
  885:  jump *label362 equal *tmp408 false                           ...
  886:  op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1 BuilderController.mnd: setFlareTarget(++count);
  887:  op min *tmp409 :buildTitaniumDrill:count 8                   BuilderController.mnd: processor.flareTarget = min(target, 8);
  888:  write *tmp409 AÕFFJS-micro-processor9 ".flareTarget"         ...
  889:  op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles . BuilderController.mnd: tiles += positive;
  890:  set :buildTitaniumDrill*retval .positive                     BuilderController.mnd: return positive;
  891:  return :buildTitaniumDrill*retaddr                           ...
        label *label360                                              BuilderController.mnd: if drill != null then
        label *label357                                              BuilderController.mnd: if positive > negative && positive >= 2 then
        label *label349                                              BuilderController.mnd: if tiles < MAX_TILES then
        label *label347                                              BuilderController.mnd: if count < MAX_COUNT then
  892:  set :buildTitaniumDrill*retval 0                             BuilderController.mnd: return 0;
  893:  return :buildTitaniumDrill*retaddr                           ...
        label *label12                                               BuilderController.mnd: remote void buildTitaniumDrills(current)
  894:  set :buildTitaniumDrills:count 1                             BuilderController.mnd: var count = 1;
  895:  set :buildTitaniumDrills:tiles 0                             BuilderController.mnd: var tiles = 0;
  896:  jump *label365 equal .scrap false                            BuilderController.mnd: if scrap then MAX_TILES += 4; end;
  897:  op add .MAX_TILES .MAX_TILES 4                               ...
        label *label365                                              ...
  898:  wait 0.0001                                                  BuilderController.mnd: wait(1e-4);
  899:  wait 0.0001                                                  BuilderController.mnd: wait(1e-4);
        label *label367                                              BuilderController.mnd: do
  900:  read *tmp51 processor3 ".locations"                          BuilderController.mnd: while current < oreLocator.locations do
  901:  jump *label372 greaterThanEq :buildTitaniumDrills:current *t ...
        label *label481                                              ...
  902:  op mul :buildTitaniumDrills:index :buildTitaniumDrills:curre BuilderController.mnd: var index = current * 4;
  903:  op add *tmp414 :buildTitaniumDrills:index 1                  BuilderController.mnd: var size = bank1[index + 1];
  904:  read :buildTitaniumDrills:size bank1 *tmp414                 ...
  905:  jump *label373 lessThan :buildTitaniumDrills:size 3          BuilderController.mnd: if size >= 3 then
  906:  op add *tmp419 :buildTitaniumDrills:index 2                  BuilderController.mnd: var x = bank1[index + 2];
  907:  read :buildTitaniumDrills:x bank1 *tmp419                    ...
  908:  op add *tmp422 :buildTitaniumDrills:index 3                  BuilderController.mnd: var y = bank1[index + 3];
  909:  read :buildTitaniumDrills:y bank1 *tmp422                    ...
  910:  op sub *tmp425 :buildTitaniumDrills:x 1                      BuilderController.mnd: var built = buildTitaniumDrill(x - 1, y - 1, in out count, in out tiles)
  911:  op sub *tmp426 :buildTitaniumDrills:y 1                      ...
  912:  set :buildTitaniumDrill:x *tmp425                            ...
  913:  set :buildTitaniumDrill:y *tmp426                            ...
  914:  set :buildTitaniumDrill:count :buildTitaniumDrills:count     ...
  915:  set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles     ...
  916:  setaddr :buildTitaniumDrill*retaddr *label375                ...
  917:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label375                                              ...
  918:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  919:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  920:  set *tmp427 :buildTitaniumDrill*retval                       ...
  921:  op add *tmp428 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x + 1, y - 1, in out count, in out tiles)
  922:  op sub *tmp429 :buildTitaniumDrills:y 1                      ...
  923:  set :buildTitaniumDrill:x *tmp428                            ...
  924:  set :buildTitaniumDrill:y *tmp429                            ...
  925:  setaddr :buildTitaniumDrill*retaddr *label376                ...
  926:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label376                                              ...
  927:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  928:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  929:  op add *tmp431 *tmp427 :buildTitaniumDrill*retval            ...
  930:  op sub *tmp432 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x - 1, y + 1, in out count, in out tiles)
  931:  op add *tmp433 :buildTitaniumDrills:y 1                      ...
  932:  set :buildTitaniumDrill:x *tmp432                            ...
  933:  set :buildTitaniumDrill:y *tmp433                            ...
  934:  setaddr :buildTitaniumDrill*retaddr *label377                ...
  935:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label377                                              ...
  936:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  937:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  938:  op add *tmp435 *tmp431 :buildTitaniumDrill*retval            ...
  939:  op add *tmp436 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x + 1, y + 1, in out count, in out tiles);
  940:  op add *tmp437 :buildTitaniumDrills:y 1                      ...
  941:  set :buildTitaniumDrill:x *tmp436                            ...
  942:  set :buildTitaniumDrill:y *tmp437                            ...
  943:  setaddr :buildTitaniumDrill*retaddr *label378                ...
  944:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label378                                              ...
  945:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  946:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  947:  op add :buildTitaniumDrills:built *tmp435 :buildTitaniumDril ...
  948:  jump *label379 notEqual :buildTitaniumDrills:built 0         BuilderController.mnd: if built == 0 then
  949:  set :buildTitaniumDrill:x :buildTitaniumDrills:x             BuilderController.mnd: built = buildTitaniumDrill(x, y, in out count, in out tiles);
  950:  set :buildTitaniumDrill:y :buildTitaniumDrills:y             ...
  951:  setaddr :buildTitaniumDrill*retaddr *label381                ...
  952:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label381                                              ...
  953:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  954:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  955:  set :buildTitaniumDrills:built :buildTitaniumDrill*retval    ...
        label *label379                                              BuilderController.mnd: if built == 0 then
        label *label373                                              BuilderController.mnd: if size >= 3 then
  956:  op add :buildTitaniumDrills:current :buildTitaniumDrills:cur BuilderController.mnd: while current < oreLocator.locations do
  957:  read *tmp51 processor3 ".locations"                          ...
  958:  jump *label481 lessThan :buildTitaniumDrills:current *tmp51  ...
        label *label372                                              ...
  959:  jump *label369 greaterThanEq :buildTitaniumDrills:tiles .MAX BuilderController.mnd: if tiles >= MAX_TILES then break; end;
  960:  jump *label369 greaterThanEq :buildTitaniumDrills:count .MAX BuilderController.mnd: if count >= MAX_COUNT then break; end;
  961:  read *tmp52 processor3 ".searchFinished"                     BuilderController.mnd: while !oreLocator.searchFinished;
  962:  jump *label367 equal *tmp52 false                            BuilderController.mnd: do
        label *label369                                              ...
  963:  set :buildTitaniumDrills*finished true                       BuilderController.mnd: remote void buildTitaniumDrills(current)
  964:  jump *label54 always 0 0                                     ...
        label *label13                                               BuilderController.mnd: remote void supplyBase()
  965:  setaddr :supplyBaseLocal*retaddr *label387                   BuilderController.mnd: supplyBaseLocal();
  966:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label387                                              ...
  967:  set :supplyBase*finished true                                BuilderController.mnd: remote void supplyBase()
  968:  jump *label54 always 0 0                                     ...


Performance: parsed in 763 ms, compiled in 425 ms, optimized in 4,635 ms, run in 6 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (3 steps):
The program didn't generate any output.
Execution exception at instruction 10: read *tmp32 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
