  1404 instructions before optimizations.
    51 instructions eliminated by Temp Variables Elimination (3 passes, 8 iterations).
     1 instructions eliminated by Case Expression Optimization.
   139 instructions eliminated by Dead Code Elimination (12 iterations).
    66 instructions eliminated by Jump Optimization (6 iterations).
    55 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     8 instructions eliminated by Expression Optimization (2 passes, 4 iterations).
    12 instructions eliminated by If Expression Optimization (5 iterations).
   178 instructions eliminated by Data Flow Optimization (29 passes, 94 iterations).
     1 loops improved by Loop Hoisting.
     8 instructions added by Loop Optimization (4 iterations).
     6 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (40 iterations).
     1 loops unrolled by Loop Unrolling.
   100 instructions added by Function Inlining (40 iterations).
    54 function calls inlined by Function Inlining.
     7 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    24 instructions updated by Jump Threading.
    14 calls threaded by Jump Threading.
    34 instructions eliminated by Unreachable Code Elimination (2 iterations).
   959 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
  ! Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
  ! Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
  ! Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
  * Unroll iteration loop at BuilderController.mnd:203:5         size   -13, benefit     4786.6, efficiency   Infinity (-10 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit    24268.0, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    74135.7, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit     4612.7, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit    18598.6, efficiency   1430.665
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit    28825.5, efficiency   1921.701
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit    14412.8, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit    11861.3, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit    11861.3, efficiency    142.907
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:38:5                     size    +0, benefit    14465.6, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit    25222.3, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit    16214.4, efficiency   2316.336
    Inline function call at Actions.mnd:75:5                     size    +0, benefit    25222.3, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit    14412.8, efficiency   2402.126
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     4612.7, efficiency   4612.732
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit    11861.3, efficiency   2965.328
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit    10543.4, efficiency   1317.923
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     9225.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit      160.7, efficiency      3.826
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     9188.1, efficiency    218.765
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit    16620.1, efficiency   2077.515
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit     2512.5, efficiency     59.821
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit     1662.0, efficiency    207.751
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:156:5          size    +0, benefit    11634.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
  ! Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
  ! Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:151:5          size    +0, benefit     5817.0, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:60:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:68:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:76:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:82:25          size    +0, benefit       90.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:87:21          size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:99:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:103:21         size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
  ! Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:114:21         size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:121:17         size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:124:17         size    +0, benefit       90.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:127:17         size    +0, benefit       45.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
  ! Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:134:17         size    +0, benefit       45.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
  ! Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
  ! Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:145:9          size    +0, benefit     2908.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      802.3, efficiency    114.609
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 7):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit    24268.0, efficiency   Infinity (-33 instructions)
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    74135.7, efficiency   Infinity
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit     4612.7, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit    18598.6, efficiency   1430.665
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit    28825.5, efficiency   1921.701
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit    14412.8, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit    11861.3, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit    11861.3, efficiency    142.907
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:38:5                     size    +0, benefit    14465.6, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit    25222.3, efficiency   Infinity
    Inline function call at Actions.mnd:68:5                     size    +7, benefit    16214.4, efficiency   2316.336
    Inline function call at Actions.mnd:75:5                     size    +0, benefit    25222.3, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit    14412.8, efficiency   2402.126
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     4612.7, efficiency   4612.732
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:103:5                    size    +4, benefit    11861.3, efficiency   2965.328
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit    10543.4, efficiency   1317.923
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     9225.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit      160.7, efficiency      3.826
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     9188.1, efficiency    218.765
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit    16620.1, efficiency   2077.515
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit     2512.5, efficiency     59.821
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit     1662.0, efficiency    207.751
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:156:5          size    +0, benefit    11634.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
  ! Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
  ! Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:151:5          size    +0, benefit     5817.0, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:60:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:68:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:76:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:82:25          size    +0, benefit       90.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:87:21          size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:99:17          size    +0, benefit      727.1, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:103:21         size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
  ! Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:114:21         size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:121:17         size    +0, benefit      181.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:124:17         size    +0, benefit       90.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:127:17         size    +0, benefit       45.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
  ! Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:134:17         size    +0, benefit       45.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
  ! Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
  ! Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:145:9          size    +0, benefit     2908.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +7, benefit      802.3, efficiency    114.609
    Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    74135.7, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit     4612.7, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit    18598.6, efficiency   1430.665
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit    28825.5, efficiency   1921.701
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit    14412.8, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit    11861.3, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit    11861.3, efficiency    142.907
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:38:5                     size    +0, benefit    14465.6, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit    25222.3, efficiency   Infinity
    Inline function call at Actions.mnd:68:5                     size    +7, benefit    16214.4, efficiency   2316.336
    Inline function call at Actions.mnd:75:5                     size    +0, benefit    25222.3, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit    14412.8, efficiency   2402.126
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     4612.7, efficiency   4612.732
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:103:5                    size    +4, benefit    11861.3, efficiency   2965.328
    Inline function call at Actions.mnd:105:5                    size    +8, benefit    10543.4, efficiency   1317.923
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     9225.5, efficiency   Infinity
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit      160.7, efficiency      3.826
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     9188.1, efficiency    218.765
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +8, benefit    16620.1, efficiency   2077.515
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit     2512.5, efficiency     59.821
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +8, benefit     1662.0, efficiency    207.751
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +7, benefit      802.3, efficiency    114.609
    Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 51):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
  * Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit     4612.7, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit    18598.6, efficiency   2066.517
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit    14412.8, efficiency   Infinity
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit    28825.5, efficiency    703.061
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit    11861.3, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +5, benefit    16214.4, efficiency   3242.871
    Inline function call at Actions.mnd:77:9                     size    +6, benefit    14412.8, efficiency   2402.126
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     4612.7, efficiency   4612.732
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:103:5                    size    +4, benefit    11861.3, efficiency   2965.328
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +21, benefit    10543.4, efficiency    502.066
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
    Inline function call at Actions.mnd:157:5                    size   +21, benefit    16620.1, efficiency    791.434
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
    Inline function call at Actions.mnd:185:5                    size   +21, benefit     1662.0, efficiency     79.143
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      802.3, efficiency    160.453
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit    18598.6, efficiency   2066.517
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit    14412.8, efficiency   Infinity (-6 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit    28825.5, efficiency    703.061
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit    11861.3, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +5, benefit    16214.4, efficiency   3242.871
    Inline function call at Actions.mnd:77:9                     size    +6, benefit    14412.8, efficiency   2402.126
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:103:5                    size    +3, benefit    11861.3, efficiency   3953.770
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +21, benefit    10543.4, efficiency    502.066
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
    Inline function call at Actions.mnd:157:5                    size   +21, benefit    16620.1, efficiency    791.434
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
    Inline function call at Actions.mnd:185:5                    size   +21, benefit     1662.0, efficiency     79.143
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      802.3, efficiency    160.453
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 62):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit    18598.6, efficiency   2066.517
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit    11861.3, efficiency   Infinity (-5 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +5, benefit    16214.4, efficiency   3242.871
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:103:5                    size    +3, benefit    11861.3, efficiency   3953.770
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      802.3, efficiency    160.453
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 67):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit    18598.6, efficiency   2066.517
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit    11861.3, efficiency    146.436
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit     1662.0, efficiency   Infinity (-4 instructions)
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +5, benefit    16214.4, efficiency   3242.871
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +41, benefit      160.7, efficiency      3.919
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +41, benefit     9188.1, efficiency    224.101
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +41, benefit     2512.5, efficiency     61.280
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at BuilderController.mnd:163:17         size   +32, benefit     1662.0, efficiency     51.938
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      802.3, efficiency    160.453
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 71):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit   147211.4, efficiency 147211.390 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit    18598.6, efficiency   2066.517
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit    17665.4, efficiency   3533.073
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit    11861.3, efficiency    146.436
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +5, benefit    16214.4, efficiency   3242.871
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +3, benefit     3953.8, efficiency   1317.923
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +41, benefit      160.7, efficiency      3.919
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +41, benefit     9188.1, efficiency    224.101
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +3, benefit    12465.1, efficiency   4155.029
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +41, benefit     2512.5, efficiency     61.280
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +3, benefit     1246.5, efficiency    415.503
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      802.3, efficiency    160.453
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 70):
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit   103325.8, efficiency 103325.830 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit    18598.6, efficiency   2066.517
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit    11861.3, efficiency    146.436
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +5, benefit    16214.4, efficiency   3242.871
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +41, benefit      160.7, efficiency      3.919
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +41, benefit     9188.1, efficiency    224.101
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +41, benefit     2512.5, efficiency     61.280
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      802.3, efficiency    160.453
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 69):
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    90079.7, efficiency  90079.737 (+1 instructions)
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit    11861.3, efficiency    146.436
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +41, benefit      160.7, efficiency      3.919
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +41, benefit     9188.1, efficiency    224.101
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +41, benefit     2512.5, efficiency     61.280
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 68):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    57651.0, efficiency  28825.516
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit    28825.5, efficiency    588.276
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit    11861.3, efficiency    146.436
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit    28825.5, efficiency  28825.516 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +25, benefit    10543.4, efficiency    421.735
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +41, benefit      160.7, efficiency      3.919
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +41, benefit     9188.1, efficiency    224.101
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272
    Inline function call at Actions.mnd:157:5                    size   +25, benefit    16620.1, efficiency    664.805
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +41, benefit     2512.5, efficiency     61.280
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +25, benefit     1662.0, efficiency     66.480
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 70):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit    28825.5, efficiency  28825.516 (-7 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit    11861.3, efficiency    146.436
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:101:5                    size    +1, benefit    10543.4, efficiency  10543.387
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +41, benefit      160.7, efficiency      3.919
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +41, benefit     9188.1, efficiency    224.101
    Inline function call at Actions.mnd:144:5                    size    +1, benefit    16620.1, efficiency  16620.117
    Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +41, benefit     2512.5, efficiency     61.280
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:172:5                    size    +1, benefit     1662.0, efficiency   1662.012
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 77):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit    34941.2, efficiency   4991.600
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit    16620.1, efficiency    536.133
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
  * Inline function call at Actions.mnd:145:5                    size    +2, benefit    18697.6, efficiency   9348.816 (-2 instructions)
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +32, benefit    13296.1, efficiency    415.503
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +32, benefit     3324.0, efficiency    103.876
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 79):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit    16243.6, efficiency   3248.714
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit     7146.3, efficiency    100.652
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit    16620.1, efficiency    573.107
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
  * Inline function call at Actions.mnd:139:5                    size    +2, benefit     9188.1, efficiency   4594.067 (-2 instructions)
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
    Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +30, benefit    13296.1, efficiency    443.203
    Inline function call at BuilderController.mnd:152:5          size    +9, benefit     5817.0, efficiency    646.338
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +9, benefit      727.1, efficiency     80.792
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:118:21         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:122:17         size    +9, benefit      181.8, efficiency     20.198
    Inline function call at BuilderController.mnd:125:17         size    +9, benefit       90.9, efficiency     10.099
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:136:21         size    +9, benefit       22.7, efficiency      2.525
    Inline function call at BuilderController.mnd:138:21         size    +9, benefit       11.4, efficiency      1.262
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +30, benefit     3324.0, efficiency    110.801
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 81):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     7055.4, efficiency   2351.812
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit    17665.4, efficiency   2523.624
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit    16620.1, efficiency    573.107
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
    Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020
  * Inline function call at Actions.mnd:147:5                    size    +4, benefit    12465.1, efficiency   3116.272 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +30, benefit    13296.1, efficiency    443.203
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +30, benefit     3324.0, efficiency    110.801
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
    Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 78):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     7055.4, efficiency   2351.812
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit    28825.5, efficiency   2620.501
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit    16620.1, efficiency    519.379
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
  * Inline function call at Actions.mnd:146:5                    size    +6, benefit    16620.1, efficiency   2770.020 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +33, benefit    13296.1, efficiency    402.912
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +33, benefit     3324.0, efficiency    100.728
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 75):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     7055.4, efficiency   2351.812
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit    12205.4, efficiency   2441.080
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit    11861.3, efficiency    150.143
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit   118788.4, efficiency   1673.076
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
  * Inline function call at Actions.mnd:119:16                   size   +36, benefit    98844.3, efficiency   2745.674 (+35 instructions)
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
    Inline function call at Actions.mnd:135:5                    size   +40, benefit      160.7, efficiency      4.017
    Inline function call at Actions.mnd:140:5                    size   +40, benefit     9188.1, efficiency    229.703
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
    Inline function call at Actions.mnd:166:9                    size   +40, benefit     2512.5, efficiency     62.812
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     7055.4, efficiency   2351.812
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit    18598.6, efficiency   1690.786
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit    12205.4, efficiency   2441.080
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit    28825.5, efficiency    640.567
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit    11861.3, efficiency     79.606
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit    19944.1, efficiency    569.833
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
  * Inline function call at Actions.mnd:68:5                     size    +6, benefit    16214.4, efficiency   2702.392 (+1 instructions)
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:129:5                    size   +23, benefit    10543.4, efficiency    458.408
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit      160.7, efficiency      2.142
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit     9188.1, efficiency    122.508
    Inline function call at Actions.mnd:157:5                    size   +23, benefit    16620.1, efficiency    722.614
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit     2512.5, efficiency     33.500
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +23, benefit     1662.0, efficiency     72.261
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     7055.4, efficiency   2351.812
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit    12205.4, efficiency   2441.080
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit    11861.3, efficiency     79.606
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     4466.7, efficiency     69.792
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit    19944.1, efficiency    569.833
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit      160.7, efficiency      2.142
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit     9188.1, efficiency    122.508
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  * Inline function call at Actions.mnd:162:5                    size    +2, benefit     5025.0, efficiency   2512.494 (-2 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit     2512.5, efficiency     33.500
    Inline function call at BuilderController.mnd:161:17         size   +13, benefit     1662.0, efficiency    127.847
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:69:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:77:17          size   +13, benefit      831.0, efficiency     63.924
    Inline function call at BuilderController.mnd:83:25          size   +13, benefit      103.9, efficiency      7.990
    Inline function call at BuilderController.mnd:88:21          size   +13, benefit      207.8, efficiency     15.981
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 41):
    Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit     2030.4, efficiency   2030.446
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit    12205.4, efficiency   2441.080 (-3 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit    11861.3, efficiency     79.606
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit    19944.1, efficiency    569.833
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:105:5                    size    +6, benefit    10543.4, efficiency   1757.231
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit      160.7, efficiency      2.142
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit     9188.1, efficiency    122.508
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit     2512.5, efficiency     33.500
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:174:5                    size    +6, benefit     1662.0, efficiency    277.002
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 44):
  * Replicate loop condition at BuilderController.mnd:232:5      size    +2, benefit     4432.0, efficiency   2216.016 (+2 instructions)
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit     2030.4, efficiency   2030.446
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit    11861.3, efficiency     76.525
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
    Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +35, benefit    19944.1, efficiency    569.833
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit      160.7, efficiency      2.060
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit     9188.1, efficiency    117.797
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit     2512.5, efficiency     32.211
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 42):
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit     2030.4, efficiency   2030.446 (-9 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit    11861.3, efficiency     76.525
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit      142.8, efficiency      8.402
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit    33240.2, efficiency    468.172
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
    Inline function call at Actions.mnd:134:5                    size    +2, benefit      160.7, efficiency     80.341
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit      160.7, efficiency      2.060
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit     9188.1, efficiency    117.797
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit     2512.5, efficiency     32.211
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:173:5                    size    +2, benefit     1869.8, efficiency    934.882
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +9, benefit      103.9, efficiency     11.542
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +9, benefit       26.0, efficiency      2.885
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +9, benefit       13.0, efficiency      1.443
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 51):
    Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     5200.3, efficiency   1733.426 (-4 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit    11861.3, efficiency     76.525
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit    33240.2, efficiency    468.172
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:106:37                   size    +4, benefit     3953.8, efficiency    988.443
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit      160.7, efficiency      2.060
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit     9188.1, efficiency    117.797
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit     2512.5, efficiency     32.211
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:175:5                    size    +4, benefit     1246.5, efficiency    311.627
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 55):
  * Replicate loop condition at BuilderController.mnd:238:9      size    +2, benefit     2216.0, efficiency   1108.008 (+2 instructions)
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +157, benefit    11861.3, efficiency     75.550
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size   +71, benefit    33240.2, efficiency    468.172
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit      160.7, efficiency      2.034
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     9188.1, efficiency    116.305
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit     2512.5, efficiency     31.804
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 53):
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +157, benefit    11861.3, efficiency     75.550
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit     7146.3, efficiency    129.933
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit      160.7, efficiency      2.034
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     9188.1, efficiency    116.305
    Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit     2512.5, efficiency     31.804
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
  * Inline function call at BuilderController.mnd:152:5          size    +7, benefit     5817.0, efficiency    831.006 (+6 instructions)
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 47):
    Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit    28825.5, efficiency    613.309
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +236, benefit    19340.4, efficiency     81.951
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit    16620.1, efficiency    474.860
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit      160.7, efficiency      2.034
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     9188.1, efficiency    116.305
  * Inline function call at Actions.mnd:157:5                    size   +24, benefit    16620.1, efficiency    692.505 (+21 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit     2512.5, efficiency     31.804
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
    Inline function call at BuilderController.mnd:167:5          size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     7479.1, efficiency     94.672
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
    Inline function call at BuilderController.mnd:146:9          size   +36, benefit     3324.0, efficiency     92.334
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 26):
  * Replicate loop condition at BuilderController.mnd:413:9      size    +1, benefit      625.0, efficiency    625.000 (+1 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit    12205.4, efficiency    530.670
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +236, benefit    19340.4, efficiency     81.951
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit      160.7, efficiency      2.034
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     9188.1, efficiency    116.305
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit     2512.5, efficiency     31.804
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     7479.1, efficiency     94.672
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 25):
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit    12205.4, efficiency    530.670 (+14 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +236, benefit    19340.4, efficiency     81.951
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
    Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
    Inline function call at Actions.mnd:129:5                    size   +24, benefit    10543.4, efficiency    439.308
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit      160.7, efficiency      2.034
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     9188.1, efficiency    116.305
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit     2512.5, efficiency     31.804
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
    Inline function call at Actions.mnd:185:5                    size   +24, benefit     1662.0, efficiency     69.250
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit     7479.1, efficiency     94.672
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 11):
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     2384.3, efficiency    476.859 (-7 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +296, benefit    19340.4, efficiency     65.339
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +315, benefit     8437.5, efficiency     26.786
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      802.3, efficiency    133.711
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:421:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:422:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:423:23         size   +79, benefit     1875.0, efficiency     23.734
  ! Inline function call at BuilderController.mnd:426:29         size   +79, benefit      937.5, efficiency     11.867

Pass 1: speed optimization selection (cost limit 18):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +296, benefit    19340.4, efficiency     65.339
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +319, benefit     8437.5, efficiency     26.450
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
  * Inline function call at BuilderController.mnd:375:13         size    +9, benefit     2109.4, efficiency    234.375 (+5 instructions)
    Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +80, benefit     1875.0, efficiency     23.438
  ! Inline function call at BuilderController.mnd:421:23         size   +80, benefit     1875.0, efficiency     23.438
  ! Inline function call at BuilderController.mnd:422:23         size   +80, benefit     1875.0, efficiency     23.438
  ! Inline function call at BuilderController.mnd:423:23         size   +80, benefit     1875.0, efficiency     23.438
  ! Inline function call at BuilderController.mnd:426:29         size   +80, benefit      937.5, efficiency     11.719

Pass 1: speed optimization selection (cost limit 13):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +296, benefit    19340.4, efficiency     65.339
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size   +17, benefit     6328.1, efficiency    372.243
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +339, benefit     8437.5, efficiency     24.889
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
    Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
  * Inline function call at BuilderController.mnd:376:13         size    +9, benefit     2109.4, efficiency    234.375 (+5 instructions)
    Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +85, benefit     1875.0, efficiency     22.059
  ! Inline function call at BuilderController.mnd:421:23         size   +85, benefit     1875.0, efficiency     22.059
  ! Inline function call at BuilderController.mnd:422:23         size   +85, benefit     1875.0, efficiency     22.059
  ! Inline function call at BuilderController.mnd:423:23         size   +85, benefit     1875.0, efficiency     22.059
  ! Inline function call at BuilderController.mnd:426:29         size   +85, benefit      937.5, efficiency     11.029

Pass 1: speed optimization selection (cost limit 8):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +296, benefit    19340.4, efficiency     65.339
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  * Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 size    +8, benefit     4218.8, efficiency    527.344 (-2 instructions)
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +359, benefit     8437.5, efficiency     23.503
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
    Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:377:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:378:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:420:29         size   +90, benefit     1875.0, efficiency     20.833
  ! Inline function call at BuilderController.mnd:421:23         size   +90, benefit     1875.0, efficiency     20.833
  ! Inline function call at BuilderController.mnd:422:23         size   +90, benefit     1875.0, efficiency     20.833
  ! Inline function call at BuilderController.mnd:423:23         size   +90, benefit     1875.0, efficiency     20.833
  ! Inline function call at BuilderController.mnd:426:29         size   +90, benefit      937.5, efficiency     10.417

Pass 1: speed optimization selection (cost limit 10):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +296, benefit    19340.4, efficiency     65.339
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit     1329.3, efficiency     27.693
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +399, benefit     8437.5, efficiency     21.147
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  * Inline function call at BuilderController.mnd:100:17         size    +7, benefit      727.1, efficiency    103.876 (+6 instructions)
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:420:29         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:421:23         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:422:23         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:423:23         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:426:29         size  +100, benefit      937.5, efficiency      9.375

Pass 1: speed optimization selection (cost limit 4):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +395, benefit    20275.2, efficiency     51.330
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit      602.2, efficiency     14.687
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +399, benefit     8437.5, efficiency     21.147
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
  ! Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
  ! Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
  ! Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
  ! Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:420:29         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:421:23         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:422:23         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:423:23         size  +100, benefit     1875.0, efficiency     18.750
  ! Inline function call at BuilderController.mnd:426:29         size  +100, benefit      937.5, efficiency      9.375

Pass 2: speed optimization selection (cost limit 20):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +395, benefit    20275.2, efficiency     51.330
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit      602.2, efficiency     14.687
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit     4466.7, efficiency     82.716
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  * Inline function call at BuilderController.mnd:161:17         size   +11, benefit     1662.0, efficiency    151.092 (+10 instructions)
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
    Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
    Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
    Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
    Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
    Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +23, benefit        4.8, efficiency      0.207
    Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:420:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:421:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:422:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:423:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:426:29         size   +96, benefit      937.5, efficiency      9.766

Pass 2: speed optimization selection (cost limit 10):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +494, benefit    21210.1, efficiency     42.935
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit      602.2, efficiency     14.687
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit     2804.6, efficiency     65.224
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
  * Inline function call at BuilderController.mnd:118:21         size    +7, benefit      181.8, efficiency     25.969 (+6 instructions)
    Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:420:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:421:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:422:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:423:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:426:29         size   +96, benefit      937.5, efficiency      9.766

Pass 2: speed optimization selection (cost limit 4):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit      420.4, efficiency     12.364
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit     2804.6, efficiency     65.224
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
  ! Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      233.7, efficiency      2.361
  ! Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969
  ! Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
  ! Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:420:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:421:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:422:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:423:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:426:29         size   +96, benefit      937.5, efficiency      9.766

Pass 3: speed optimization selection (cost limit 8):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit      420.4, efficiency     12.364
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit     2804.6, efficiency     65.224
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
    Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
    Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      233.7, efficiency      2.361
  * Inline function call at BuilderController.mnd:122:17         size    +7, benefit      181.8, efficiency     25.969 (+6 instructions)
    Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
    Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
    Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
    Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
    Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:420:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:421:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:422:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:423:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:426:29         size   +96, benefit      937.5, efficiency      9.766

Pass 3: speed optimization selection (cost limit 2):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit      238.6, efficiency      8.837
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit     2804.6, efficiency     65.224
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
  ! Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      233.7, efficiency      2.361
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      233.7, efficiency      2.361
  ! Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
  ! Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:420:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:421:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:422:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:423:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:426:29         size   +96, benefit      937.5, efficiency      9.766

Pass 4: speed optimization selection (cost limit 2):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit      142.8, efficiency     10.987
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit      238.6, efficiency      8.837
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit    16620.1, efficiency    296.788
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit     2804.6, efficiency     65.224
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit     1332.1, efficiency     36.003
  ! Inline function 'targetMet' defined at BuilderController.mnd:187:1 size  +107, benefit    39888.3, efficiency    372.788
  ! Inline function 'buildBlock' defined at BuilderController.mnd:253:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:370:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +99, benefit      160.7, efficiency      1.623
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     9188.1, efficiency     92.809
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit     2512.5, efficiency     25.379
  ! Inline function call at Actions.mnd:166:9                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:167:5          size   +57, benefit    13296.1, efficiency    233.265
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit     7479.1, efficiency     75.546
  ! Inline function call at BuilderController.mnd:61:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:69:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:77:17          size   +11, benefit      831.0, efficiency     75.546
  ! Inline function call at BuilderController.mnd:83:25          size   +11, benefit      103.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:88:21          size   +11, benefit      207.8, efficiency     18.886
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      934.9, efficiency      9.443
  ! Inline function call at BuilderController.mnd:109:25         size    +7, benefit      103.9, efficiency     14.839
  ! Inline function call at BuilderController.mnd:111:25         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      233.7, efficiency      2.361
  ! Inline function call at Actions.mnd:140:5                    size   +99, benefit      233.7, efficiency      2.361
  ! Inline function call at BuilderController.mnd:125:17         size    +7, benefit       90.9, efficiency     12.984
  ! Inline function call at BuilderController.mnd:129:21         size    +7, benefit       26.0, efficiency      3.710
  ! Inline function call at BuilderController.mnd:131:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:136:21         size    +7, benefit       22.7, efficiency      3.246
  ! Inline function call at BuilderController.mnd:138:21         size    +7, benefit       11.4, efficiency      1.623
  ! Inline function call at BuilderController.mnd:140:21         size    +7, benefit       13.0, efficiency      1.855
  ! Inline function call at BuilderController.mnd:146:9          size   +57, benefit     3324.0, efficiency     58.316
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:232:12         size   +36, benefit    13296.1, efficiency    369.336
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:238:16         size   +36, benefit     6648.0, efficiency    184.668
  ! Inline function call at BuilderController.mnd:246:5          size   +19, benefit     1318.4, efficiency     69.387
  ! Inline function call at BuilderController.mnd:263:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:264:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:272:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:273:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:420:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:421:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:422:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:423:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:426:29         size   +96, benefit      937.5, efficiency      9.766

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1479 jump *label342 always
  1480 set *tmp384 null
  1481 label *label342
-    * set *tmp387 *tmp384
-    * jump *label344 equal *tmp387 @ore-titanium
+ 1482 jump *label344 equal *tmp384 @ore-titanium
  1483 jump *label343 always
  1484 label *label344
  1485 set *tmp388 :titaniumDrillScore:positive
 
  1487 set *tmp383 *tmp388
  1488 jump *label341 always
  1489 label *label343
-    * jump *label346 equal *tmp387 @ore-copper
-    * jump *label346 equal *tmp387 @ore-lead
-    * jump *label346 equal *tmp387 @ore-scrap
-    * jump *label346 equal *tmp387 @ore-coal
+ 1490 jump *label346 equal *tmp384 @ore-copper
+ 1491 jump *label346 equal *tmp384 @ore-lead
+ 1492 jump *label346 equal *tmp384 @ore-scrap
+ 1493 jump *label346 equal *tmp384 @ore-coal
  1494 jump *label345 always
  1495 label *label346
  1496 set *tmp389 :titaniumDrillScore:negative

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-78 instructions):
 
   102 op notEqual *tmp109 *tmp108 null
   103 jump *label75 equal *tmp109 false
   104 ucontrol itemDrop @air 1000
-    * set *tmp110 null
   105 jump *label76 always
   106 label *label75
-    * set *tmp110 null
   107 label *label76
   108 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   109 label *label73
 
   162 op greaterThan *tmp124 *tmp122 *tmp123
   163 jump *label88 notEqual *tmp124 false
   164 label *label90
-    * set *tmp119 null
   165 jump *label86 always
   166 label *label85
   167 label *label91
 
   172 label *label92
   173 jump *label91 always
   174 label *label93
-    * set *tmp119 null
   175 label *label86
   176 set :transportStatus:target 0
   177 set :transportStatus:item null
 
   189 setaddr :error*retaddr *label98 (h:*label98)
   190 call *label32 *invalid :error*retval (m:*label98) (h:*label98)
   191 label *label98
-    * set *tmp130 null
   192 jump *label97 always
   193 label *label96
-    * set *tmp130 null
   194 label *label97
   195 label *label95
   196 return :locateOre*retaddr
 
   220 setaddr :dropAll*retaddr *label105 (h:*label105)
   221 call *label35 *invalid :dropAll*retval (m:*label105) (h:*label105)
   222 label *label105
-    * set *tmp134 null
   223 jump *label104 always
   224 label *label103
-    * set *tmp134 null
   225 label *label104
   226 set :status3:text "Mining..."
   227 setaddr :status3*retaddr *label106 (h:*label106)
 
   237 op land *tmp139 *tmp137 *tmp138
   238 jump *label110 equal *tmp139 false
   239 jump *label109 always
-    * set *tmp140 null
   240 jump *label111 always
   241 label *label110
-    * set *tmp140 null
   242 label *label111
   243 ucontrol mine :mineOre:x :mineOre:y
   244 op greaterThan *tmp141 @second :mineOre:stop
   245 jump *label112 equal *tmp141 false
   246 jump *label109 always
-    * set *tmp142 null
   247 jump *label113 always
   248 label *label112
-    * set *tmp142 null
   249 label *label113
   250 op equal *tmp143 .noTarget false
   251 jump *label114 equal *tmp143 false
 
   259 label *label117
   260 set *tmp145 null
   261 label *label118
-    * set *tmp144 *tmp145
   262 jump *label115 always
   263 label *label114
-    * set *tmp144 null
   264 label *label115
   265 label *label108
   266 sensor *tmp146 @unit @totalItems
 
   344 op land *tmp158 *tmp156 *tmp157
   345 jump *label134 equal *tmp158 false
   346 ucontrol itemDrop @air 1000
-    * set *tmp159 null
   347 jump *label135 always
   348 label *label134
-    * set *tmp159 null
   349 label *label135
   350 label *label132
   351 sensor *tmp160 @unit :fetchBlock:item
 
   382 setaddr :mineOre*retaddr *label141 (h:*label141)
   383 call *label39 *invalid :mineOre*retval (m:*label141) (h:*label141)
   384 label *label141
-    * set *tmp168 null
   385 jump *label140 always
   386 label *label139
-    * set *tmp168 null
   387 label *label140
   388 label *label137
   389 return :supplyBlock*retaddr
 
   420 op land *tmp174 *tmp172 *tmp173
   421 jump *label150 equal *tmp174 false
   422 ucontrol itemDrop @air 1000
-    * set *tmp175 null
   423 jump *label151 always
   424 label *label150
-    * set *tmp175 null
   425 label *label151
   426 label *label148
   427 sensor *tmp176 @unit :supplyBlockFromCore:item
 
   483 sensor *tmp204 :unpackCfg:type @thorium
   484 set :unpackCfg:th *tmp204
   485 sensor *tmp205 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp205
   486 label *label153
   487 return :unpackCfg*retaddr
   488 end
 
   528 label *label161
   529 set *tmp216 null
   530 label *label162
-    * set *tmp213 *tmp216
   531 jump *label160 always
   532 label *label159
-    * set *tmp213 null
   533 label *label160
   534 set :fetchBlock:block .thoriumContainer
   535 set :fetchBlock:item @thorium
 
   545 set :setPolyTarget:target 4
   546 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   547 label *label171
-    * set *tmp222 null
   548 jump *label169 always
   549 label *label168
-    * set *tmp222 null
   550 label *label169
   551 label *label157
-    * set *tmp210 null
   552 jump *label156 always
   553 label *label155
   554 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   590 label *label182
   591 set *tmp232 null
   592 label *label183
-    * set *tmp229 *tmp232
   593 jump *label181 always
   594 label *label180
-    * set *tmp229 null
   595 label *label181
   596 sensor *tmp233 AJTJK-battery1 @totalPower
   597 op lessThan *tmp234 *tmp233 .powerTarget
 
   614 label *label188
   615 set *tmp238 null
   616 label *label189
-    * set *tmp235 *tmp238
   617 jump *label187 always
   618 label *label186
-    * set *tmp235 null
   619 label *label187
   620 sensor *tmp239 .core @silicon
   621 op lessThan *tmp240 *tmp239 silicon
 
   685 label *label192
   686 set *tmp241 null
   687 label *label193
-    * set *tmp226 *tmp241
   688 jump *label179 always
   689 label *label178
-    * set *tmp226 null
   690 label *label179
   691 sensor *tmp252 .core @titanium
   692 op lessThan *tmp253 *tmp252 titanium
 
   904 label *label212
   905 set *tmp262 null
   906 label *label213
-    * set *tmp260 *tmp262
   907 jump *label211 always
   908 label *label210
   909 set :status1:text "Goal 11: Fetching titanium"
 
   915 setaddr :fetchBlock*retaddr *label261 (h:*label261)
   916 call *label42 *invalid :fetchBlock*retval (m:*label261) (h:*label261)
   917 label *label261
-    * set *tmp260 null
   918 label *label211
   919 label *label177
   920 set *tmp224 null
   921 label *label173
-    * set *tmp210 *tmp224
   922 label *label156
   923 label *label154
   924 set :supplyBase*finished true
 
   931 write @silicon processor2 ".missing"
   932 set :targetMet*retval false
   933 jump *label262 always
-    * set *tmp307 null
   934 jump *label264 always
   935 label *label263
-    * set *tmp307 null
   936 label *label264
   937 sensor *tmp308 .core @copper
   938 op lessThan *tmp309 *tmp308 copper
 
   940 write @copper processor2 ".missing"
   941 set :targetMet*retval false
   942 jump *label262 always
-    * set *tmp310 null
   943 jump *label266 always
   944 label *label265
-    * set *tmp310 null
   945 label *label266
   946 sensor *tmp311 .core @lead
   947 op lessThan *tmp312 *tmp311 lead
 
   949 write @lead processor2 ".missing"
   950 set :targetMet*retval false
   951 jump *label262 always
-    * set *tmp313 null
   952 jump *label268 always
   953 label *label267
-    * set *tmp313 null
   954 label *label268
   955 sensor *tmp314 .core @metaglass
   956 op lessThan *tmp315 *tmp314 metaglass
 
   958 write @metaglass processor2 ".missing"
   959 set :targetMet*retval false
   960 jump *label262 always
-    * set *tmp316 null
   961 jump *label270 always
   962 label *label269
-    * set *tmp316 null
   963 label *label270
   964 sensor *tmp317 .core @graphite
   965 op lessThan *tmp318 *tmp317 graphite
 
   967 write @graphite processor2 ".missing"
   968 set :targetMet*retval false
   969 jump *label262 always
-    * set *tmp319 null
   970 jump *label272 always
   971 label *label271
-    * set *tmp319 null
   972 label *label272
   973 sensor *tmp320 .core @titanium
   974 op lessThan *tmp321 *tmp320 titanium
 
   976 write @titanium processor2 ".missing"
   977 set :targetMet*retval false
   978 jump *label262 always
-    * set *tmp322 null
   979 jump *label274 always
   980 label *label273
-    * set *tmp322 null
   981 label *label274
   982 sensor *tmp323 .core @thorium
   983 op lessThan *tmp324 *tmp323 thorium
 
   985 write @thorium processor2 ".missing"
   986 set :targetMet*retval false
   987 jump *label262 always
-    * set *tmp325 null
   988 jump *label276 always
   989 label *label275
-    * set *tmp325 null
   990 label *label276
   991 set :targetMet*retval true
   992 jump *label262 always
 
  1098 label *label297
  1099 jump *label296 always
  1100 label *label298
-    * set *tmp340 null
  1101 jump *label294 always
  1102 label *label293
-    * set *tmp340 null
  1103 label *label294
  1104 label *label277
  1105 set :meetTarget*finished true
 
  1206 label *label311
  1207 set :buildRemoteBlock*retval :buildBlock*retval
  1208 jump *label307 always
-    * set *tmp347 null
  1209 jump *label309 always
  1210 label *label308
-    * set *tmp347 null
  1211 label *label309
  1212 set :buildRemoteBlock*retval false
  1213 jump *label307 always
 
  1285 jump *label320 equal *tmp356 false
  1286 set :buildBlockAt*retval :buildBlockAt:building
  1287 jump *label315 always
-    * set *tmp357 null
  1288 jump *label321 always
  1289 label *label320
-    * set *tmp357 null
  1290 label *label321
  1291 set :buildError:text "Cannot build at position"
  1292 set :buildError:block :buildBlockAt:block
 
  1300 set .ERROR_Y :buildError:y
  1301 stop
  1302 label *label322
-    * set *tmp355 null
  1303 jump *label319 always
  1304 label *label318
-    * set *tmp355 null
  1305 label *label319
  1306 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1307 wait 0.25
 
  1326 set .ERROR_Y :buildError.1:y
  1327 stop
  1328 label *label328
-    * set *tmp363 null
  1329 jump *label327 always
  1330 label *label326
  1331 set :buildBlockAt:success true
-    * set *tmp363 :buildBlockAt:success
  1332 label *label327
  1333 op equal *tmp364 :buildBlockAt:block @multiplicative-reconstructor
  1334 jump *label329 equal *tmp364 false
 
  1343 label *label331
  1344 set *tmp368 null
  1345 label *label332
-    * set *tmp365 *tmp368
  1346 jump *label330 always
  1347 label *label329
-    * set *tmp365 null
  1348 label *label330
  1349 label *label324
  1350 op notEqual *tmp369 :buildBlockAt:type :buildBlockAt:block
 
  1372 op or *tmp380 *tmp7 *tmp379
  1373 write *tmp380 processor2 ".blocksBuilt"
  1374 write :logBlock:index processor2 ".recentBuildIndex"
-    * set *tmp378 :logBlock:index
  1375 jump *label336 always
  1376 label *label335
-    * set *tmp378 null
  1377 label *label336
  1378 label *label333
  1379 set :buildBlockAt*retval :buildBlockAt:building
 
  1470 label *label354
  1471 set .positive :titaniumDrillScore:positive
  1472 set .negative :titaniumDrillScore:negative
-    * set *tmp398 :titaniumDrillScore*retval
  1473 op sub *tmp399 :buildTitaniumDrill:x 0.5
  1474 op add *tmp400 :buildTitaniumDrill:y 0.5
  1475 set :titaniumDrillScore:x *tmp399
 
  1481 label *label355
  1482 set .positive :titaniumDrillScore:positive
  1483 set .negative :titaniumDrillScore:negative
-    * set *tmp401 :titaniumDrillScore*retval
  1484 op add *tmp402 :buildTitaniumDrill:x 0.5
  1485 op sub *tmp403 :buildTitaniumDrill:y 0.5
  1486 set :titaniumDrillScore:x *tmp402
 
  1492 label *label356
  1493 set .positive :titaniumDrillScore:positive
  1494 set .negative :titaniumDrillScore:negative
-    * set *tmp404 :titaniumDrillScore*retval
  1495 op add *tmp405 :buildTitaniumDrill:x 0.5
  1496 op add *tmp406 :buildTitaniumDrill:y 0.5
  1497 set :titaniumDrillScore:x *tmp405
 
  1503 label *label357
  1504 set .positive :titaniumDrillScore:positive
  1505 set .negative :titaniumDrillScore:negative
-    * set *tmp407 :titaniumDrillScore*retval
  1506 op greaterThan *tmp408 .positive .negative
  1507 op greaterThanEq *tmp409 .positive 2
  1508 op land *tmp410 *tmp408 *tmp409
 
  1555 label *label350
  1556 set *tmp393 null
  1557 label *label351
-    * set *tmp391 *tmp393
  1558 jump *label349 always
  1559 label *label348
-    * set *tmp391 null
  1560 label *label349
  1561 set :buildTitaniumDrill*retval 0
  1562 jump *label347 always
 
  1569 set :buildTitaniumDrills:tiles 0
  1570 jump *label367 equal .scrap false
  1571 op add .MAX_TILES .MAX_TILES 4
-    * set *tmp418 .MAX_TILES
  1572 jump *label368 always
  1573 label *label367
-    * set *tmp418 null
  1574 label *label368
  1575 wait 0.0001
  1576 wait 0.0001
 
  1665 label *label381
  1666 set *tmp448 null
  1667 label *label382
-    * set *tmp425 *tmp448
  1668 jump *label376 always
  1669 label *label375
-    * set *tmp425 null
  1670 label *label376
-    * set *tmp450 :buildTitaniumDrills:current
  1671 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1672 label *label373
  1673 jump *label372 always
 
  1675 op greaterThanEq *tmp451 :buildTitaniumDrills:tiles .MAX_TILES
  1676 jump *label384 equal *tmp451 false
  1677 jump *label371 always
-    * set *tmp452 null
  1678 jump *label385 always
  1679 label *label384
-    * set *tmp452 null
  1680 label *label385
  1681 op greaterThanEq *tmp453 :buildTitaniumDrills:count .MAX_COUNT
  1682 jump *label386 equal *tmp453 false
  1683 jump *label371 always
-    * set *tmp454 null
  1684 jump *label387 always
  1685 label *label386
-    * set *tmp454 null
  1686 label *label387
  1687 label *label370
  1688 read *tmp52 processor3 ".searchFinished"

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   254 label *label116
   255 jump *label117 equal :targetMet*retval false
   256 jump *label109 always
-    * set *tmp145 null
   257 jump *label118 always
   258 label *label117
-    * set *tmp145 null
   259 label *label118
   260 jump *label115 always
   261 label *label114
 
   480 set :unpackCfg:mg *tmp203
   481 sensor *tmp204 :unpackCfg:type @thorium
   482 set :unpackCfg:th *tmp204
-    * sensor *tmp205 :unpackCfg:type @size
   483 label *label153
   484 return :unpackCfg*retaddr
   485 end
 
   520 label *label166
   521 set *tmp219 null
   522 label *label164
-    * set *tmp216 *tmp219
   523 jump *label162 always
   524 label *label161
-    * set *tmp216 null
   525 label *label162
   526 jump *label160 always
   527 label *label159
 
   558 call *label41 *invalid :mineOre.2*retval (m:*label176) (h:*label176)
   559 label *label176
   560 label *label174
-    * set *tmp224 null
   561 jump *label173 always
   562 label *label172
   563 set :supplyBase0:supplied false
 
   579 call *label43 *invalid :supplyBlock*retval (m:*label185) (h:*label185)
   580 label *label185
   581 set :supplyBase0:supplied true
-    * set *tmp232 :supplyBase0:supplied
   582 jump *label183 always
   583 label *label182
-    * set *tmp232 null
   584 label *label183
   585 jump *label181 always
   586 label *label180
 
   601 call *label43 *invalid :supplyBlock*retval (m:*label191) (h:*label191)
   602 label *label191
   603 jump *label177 always
-    * set *tmp238 null
   604 jump *label189 always
   605 label *label188
-    * set *tmp238 null
   606 label *label189
   607 jump *label187 always
   608 label *label186
 
   670 label *label199
   671 set *tmp244 *tmp247
   672 label *label195
-    * set *tmp241 *tmp244
   673 jump *label193 always
   674 label *label192
-    * set *tmp241 null
   675 label *label193
   676 jump *label179 always
   677 label *label178
 
   887 label *label219
   888 set *tmp266 *tmp269
   889 label *label215
-    * set *tmp262 *tmp266
   890 jump *label213 always
   891 label *label212
-    * set *tmp262 null
   892 label *label213
   893 jump *label211 always
   894 label *label210
 
   903 label *label261
   904 label *label211
   905 label *label177
-    * set *tmp224 null
   906 label *label173
   907 label *label156
   908 label *label154
 
  1323 jump *label331 equal *tmp367 false
  1324 ucontrol approach :buildBlockAt:x :buildBlockAt:y 6
  1325 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
-    * set *tmp368 null
  1326 jump *label332 always
  1327 label *label331
-    * set *tmp368 null
  1328 label *label332
  1329 jump *label330 always
  1330 label *label329
 
  1420 label *label345
  1421 set *tmp383 null
  1422 label *label341
-    * set :titaniumDrillScore*retval *tmp383
  1423 label *label340
  1424 return :titaniumDrillScore*retaddr
  1425 end
 
  1532 label *label358
  1533 set *tmp411 null
  1534 label *label359
-    * set *tmp393 *tmp411
  1535 jump *label351 always
  1536 label *label350
-    * set *tmp393 null
  1537 label *label351
  1538 jump *label349 always
  1539 label *label348
 
  1640 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1641 set *tmp449 :buildTitaniumDrill*retval
  1642 set :buildTitaniumDrills:built *tmp449
-    * set *tmp448 :buildTitaniumDrills:built
  1643 jump *label382 always
  1644 label *label381
-    * set *tmp448 null
  1645 label *label382
  1646 jump *label376 always
  1647 label *label375

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
   510 setaddr :supplyBlock*retaddr *label165 (h:*label165)
   511 call *label43 *invalid :supplyBlock*retval (m:*label165) (h:*label165)
   512 label *label165
-    * set *tmp219 null
   513 jump *label164 always
   514 label *label163
   515 set :supplyBlockFromCore:target .thoriumGenerator
 
   517 setaddr :supplyBlockFromCore*retaddr *label166 (h:*label166)
   518 call *label44 *invalid :supplyBlockFromCore*retval (m:*label166) (h:*label166)
   519 label *label166
-    * set *tmp219 null
   520 label *label164
   521 jump *label162 always
   522 label *label161
 
   621 call *label43 *invalid :supplyBlock*retval (m:*label197) (h:*label197)
   622 label *label197
   623 set :supplyBase0:supplied true
-    * set *tmp244 :supplyBase0:supplied
   624 jump *label195 always
   625 label *label194
   626 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
 
   665 label *label198
   666 set *tmp247 null
   667 label *label199
-    * set *tmp244 *tmp247
   668 label *label195
   669 jump *label193 always
   670 label *label192
 
   701 setaddr :mineOre.2*retaddr *label217 (h:*label217)
   702 call *label41 *invalid :mineOre.2*retval (m:*label217) (h:*label217)
   703 label *label217
-    * set *tmp266 null
   704 jump *label215 always
   705 label *label214
   706 sensor *tmp267 .core @silicon
 
   880 label *label236
   881 set *tmp269 *tmp284
   882 label *label219
-    * set *tmp266 *tmp269
   883 label *label215
   884 jump *label213 always
   885 label *label212
 
  1398 label *label344
  1399 set *tmp388 :titaniumDrillScore:positive
  1400 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * set *tmp383 *tmp388
  1401 jump *label341 always
  1402 label *label343
  1403 jump *label346 equal *tmp384 @ore-copper
 
  1408 label *label346
  1409 set *tmp389 :titaniumDrillScore:negative
  1410 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * set *tmp383 *tmp389
  1411 jump *label341 always
  1412 label *label345
-    * set *tmp383 null
  1413 label *label341
  1414 label *label340
  1415 return :titaniumDrillScore*retaddr
 
  1518 label *label362
  1519 set *tmp413 null
  1520 label *label363
-    * set *tmp411 *tmp413
  1521 jump *label359 always
  1522 label *label358
-    * set *tmp411 null
  1523 label *label359
  1524 jump *label351 always
  1525 label *label350

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-8 instructions):
 
   660 set :supplyBase0:supplied true
   661 set *tmp248 :supplyBase0:supplied
   662 label *label201
-    * set *tmp247 *tmp248
   663 jump *label199 always
   664 label *label198
-    * set *tmp247 null
   665 label *label199
   666 label *label195
   667 jump *label193 always
 
   769 label *label234
   770 set *tmp270 null
   771 label *label221
-    * set *tmp269 *tmp270
   772 jump *label219 always
   773 label *label218
   774 sensor *tmp282 .core @copper
 
   875 label *label240
   876 set *tmp284 *tmp287
   877 label *label236
-    * set *tmp269 *tmp284
   878 label *label219
   879 label *label215
   880 jump *label213 always
 
  1392 jump *label344 equal *tmp384 @ore-titanium
  1393 jump *label343 always
  1394 label *label344
-    * set *tmp388 :titaniumDrillScore:positive
  1395 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1396 jump *label341 always
  1397 label *label343
 
  1401 jump *label346 equal *tmp384 @ore-coal
  1402 jump *label345 always
  1403 label *label346
-    * set *tmp389 :titaniumDrillScore:negative
  1404 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1405 jump *label341 always
  1406 label *label345
 
  1507 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp417
  1508 set :buildTitaniumDrill*retval .positive
  1509 jump *label347 always
-    * set *tmp413 null
  1510 jump *label363 always
  1511 label *label362
-    * set *tmp413 null
  1512 label *label363
  1513 jump *label359 always
  1514 label *label358

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-6 instructions):
 
   645 label *label202
   646 set *tmp251 null
   647 label *label203
-    * set *tmp248 *tmp251
   648 jump *label201 always
   649 label *label200
   650 set :status1:text "Goal 3: sand for silicon requirement"
 
   657 call *label43 *invalid :supplyBlock*retval (m:*label207) (h:*label207)
   658 label *label207
   659 set :supplyBase0:supplied true
-    * set *tmp248 :supplyBase0:supplied
   660 label *label201
   661 jump *label199 always
   662 label *label198
 
   742 label *label230
   743 set *tmp271 null
   744 label *label224
-    * set *tmp270 *tmp271
   745 jump *label221 always
   746 label *label220
   747 set :status1:text "Goal 6: silicon requirement"
 
   764 setaddr :mineOre.2*retaddr *label234 (h:*label234)
   765 call *label41 *invalid :mineOre.2*retval (m:*label234) (h:*label234)
   766 label *label234
-    * set *tmp270 null
   767 label *label221
   768 jump *label219 always
   769 label *label218
 
   778 setaddr :mineOre.2*retaddr *label238 (h:*label238)
   779 call *label41 *invalid :mineOre.2*retval (m:*label238) (h:*label238)
   780 label *label238
-    * set *tmp284 null
   781 jump *label236 always
   782 label *label235
   783 sensor *tmp285 .core @lead
 
   868 label *label244
   869 set *tmp287 *tmp290
   870 label *label240
-    * set *tmp284 *tmp287
   871 label *label236
   872 label *label219
   873 label *label215

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-6 instructions):
 
   640 call *label43 *invalid :supplyBlock*retval (m:*label205) (h:*label205)
   641 label *label205
   642 set :supplyBase0:supplied true
-    * set *tmp251 :supplyBase0:supplied
   643 jump *label203 always
   644 label *label202
-    * set *tmp251 null
   645 label *label203
   646 jump *label201 always
   647 label *label200
 
   731 setaddr :mineOre.1*retaddr *label229 (h:*label229)
   732 call *label40 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
   733 label *label229
-    * set *tmp271 null
   734 jump *label224 always
   735 label *label223
   736 set :mineOre.2:ore @coal
   737 setaddr :mineOre.2*retaddr *label230 (h:*label230)
   738 call *label41 *invalid :mineOre.2*retval (m:*label230) (h:*label230)
   739 label *label230
-    * set *tmp271 null
   740 label *label224
   741 jump *label221 always
   742 label *label220
 
   787 setaddr :mineOre.2*retaddr *label242 (h:*label242)
   788 call *label41 *invalid :mineOre.2*retval (m:*label242) (h:*label242)
   789 label *label242
-    * set *tmp287 null
   790 jump *label240 always
   791 label *label239
   792 sensor *tmp288 .core @metaglass
 
   861 label *label252
   862 set *tmp290 *tmp293
   863 label *label244
-    * set *tmp287 *tmp290
   864 label *label240
   865 label *label236
   866 label *label219

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   811 label *label249
   812 set *tmp291 null
   813 label *label247
-    * set *tmp290 *tmp291
   814 jump *label244 always
   815 label *label243
   816 set :status1:text "Goal 10: supplying base"
 
   858 label *label257
   859 set *tmp293 *tmp304
   860 label *label252
-    * set *tmp290 *tmp293
   861 label *label244
   862 label *label240
   863 label *label236

Modifications by Initial phase, Dead Code Elimination, iteration 8 (-4 instructions):
 
   802 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   803 call *label40 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   804 label *label248
-    * set *tmp291 null
   805 jump *label247 always
   806 label *label246
   807 set :mineOre.2:ore @sand
   808 setaddr :mineOre.2*retaddr *label249 (h:*label249)
   809 call *label41 *invalid :mineOre.2*retval (m:*label249) (h:*label249)
   810 label *label249
-    * set *tmp291 null
   811 label *label247
   812 jump *label244 always
   813 label *label243
 
   831 setaddr :mineOre.2*retaddr *label255 (h:*label255)
   832 call *label41 *invalid :mineOre.2*retval (m:*label255) (h:*label255)
   833 label *label255
-    * set *tmp293 null
   834 jump *label252 always
   835 label *label251
   836 sensor *tmp299 .core @coal
 
   853 label *label259
   854 set *tmp304 null
   855 label *label257
-    * set *tmp293 *tmp304
   856 label *label252
   857 label *label244
   858 label *label240

Modifications by Initial phase, Dead Code Elimination, iteration 9 (-2 instructions):
 
   843 setaddr :mineOre.2*retaddr *label258 (h:*label258)
   844 call *label41 *invalid :mineOre.2*retval (m:*label258) (h:*label258)
   845 label *label258
-    * set *tmp304 null
   846 jump *label257 always
   847 label *label256
   848 set :mineOre.1:ore @scrap
 
   850 setaddr :mineOre.1*retaddr *label259 (h:*label259)
   851 call *label40 *invalid :mineOre.1*retval (m:*label259) (h:*label259)
   852 label *label259
-    * set *tmp304 null
   853 label *label257
   854 label *label252
   855 label *label244

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-49 instructions):
 
    32 set .MAX_COUNT 6
    33 label *label56
    34 ubind @poly
-    * set *tmp101 @unit
-    * set .builder *tmp101
-    * ulocate building core false @copper .coreX .coreY *tmp103 *tmp102
-    * set .core *tmp102
+   35 set .builder @unit
+   36 ulocate building core false @copper .coreX .coreY *tmp103 .core
    37 label *label57
    38 op equal *tmp104 .core null
    39 jump *label56 notEqual *tmp104 false
 
   149 setaddr :moveToBlock*retaddr *label87 (h:*label87)
   150 call *label36 *invalid :moveToBlock*retval (m:*label87) (h:*label87)
   151 label *label87
-    * sensor *tmp120 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp120
+  152 sensor :depositItems:cap :depositItems:block @itemCapacity
   153 label *label88
   154 ucontrol itemDrop :depositItems:block 28
   155 label *label89
 
   193 return :locateOre*retaddr
   194 end
   195 label *label39
-    * op min *tmp131 :mineOre:amount 28
-    * set :mineOre:amount *tmp131
+  196 op min :mineOre:amount :mineOre:amount 28
   197 set :transportStatus:target :mineOre:amount
   198 set :transportStatus:item :mineOre:ore
   199 setaddr :transportStatus*retaddr *label100 (h:*label100)
 
   223 setaddr :status3*retaddr *label106 (h:*label106)
   224 call *label30 *invalid :status3*retval (m:*label106) (h:*label106)
   225 label *label106
-    * op add *tmp135 @second 10
-    * set :mineOre:stop *tmp135
+  226 op add :mineOre:stop @second 10
   227 label *label107
-    * sensor *tmp136 @unit @firstItem
-    * set :mineOre:item *tmp136
+  228 sensor :mineOre:item @unit @firstItem
   229 op notEqual *tmp137 :mineOre:item null
   230 op notEqual *tmp138 :mineOre:item :mineOre:ore
   231 op land *tmp139 *tmp137 *tmp138
 
   293 setaddr :status2*retaddr *label124 (h:*label124)
   294 call *label29 *invalid :status2*retval (m:*label124) (h:*label124)
   295 label *label124
-    * set *tmp150 :mineOre.2:ore
-    * set :mineOre:ore *tmp150
+  296 set :mineOre:ore :mineOre.2:ore
   297 set :mineOre:amount 28
   298 set :mineOre:block .core
   299 setaddr :mineOre*retaddr *label125 (h:*label125)
 
   304 end
   305 label *label42
   306 sensor *tmp151 :fetchBlock:block @itemCapacity
-    * op min *tmp152 *tmp151 28
-    * set :transportStatus:target *tmp152
+  307 op min :transportStatus:target *tmp151 28
   308 set :transportStatus:item :fetchBlock:item
   309 setaddr :transportStatus*retaddr *label127 (h:*label127)
   310 call *label31 *invalid :transportStatus*retval (m:*label127) (h:*label127)
 
   327 label *label130
   328 label *label131
   329 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
-    * sensor *tmp155 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp155
+  330 sensor :fetchBlock:unitItem @unit @firstItem
   331 op notEqual *tmp156 :fetchBlock:unitItem null
   332 op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item
   333 op land *tmp158 *tmp156 *tmp157
 
   358 setaddr :status2*retaddr *label138 (h:*label138)
   359 call *label29 *invalid :status2*retval (m:*label138) (h:*label138)
   360 label *label138
-    * sensor *tmp164 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp164
+  361 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   362 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp166 :supplyBlock:blockCapacity *tmp165
-    * set :supplyBlock:missing *tmp166
+  363 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   364 op greaterThan *tmp167 :supplyBlock:missing 0
   365 jump *label139 equal *tmp167 false
   366 set :mineOre:ore :supplyBlock:ore
 
   377 end
   378 label *label44
   379 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp170 *tmp169 28
-    * set :supplyBlockFromCore:cap *tmp170
+  380 op min :supplyBlockFromCore:cap *tmp169 28
   381 set :transportStatus:target :supplyBlockFromCore:cap
   382 set :transportStatus:item :supplyBlockFromCore:item
   383 setaddr :transportStatus*retaddr *label143 (h:*label143)
 
   399 label *label146
   400 label *label147
   401 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor *tmp171 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp171
+  402 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   403 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
   404 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   405 op land *tmp174 *tmp172 *tmp173
 
   429 op add :unpackCfg:index :unpackCfg:index 1
   430 read *tmp181 :unpackCfg:cfg *tmp180
   431 op sub *tmp182 *tmp181 74
-    * lookup block *tmp183 *tmp182
-    * set :unpackCfg:type *tmp183
+  432 lookup block :unpackCfg:type *tmp182
   433 set *tmp184 :unpackCfg:index
   434 op add :unpackCfg:index :unpackCfg:index 1
   435 read *tmp185 :unpackCfg:cfg *tmp184
   436 op sub *tmp186 *tmp185 74
-    * op div *tmp187 *tmp186 2
-    * set :unpackCfg:x *tmp187
+  437 op div :unpackCfg:x *tmp186 2
   438 set *tmp188 :unpackCfg:index
   439 op add :unpackCfg:index :unpackCfg:index 1
   440 read *tmp189 :unpackCfg:cfg *tmp188
   441 op sub *tmp190 *tmp189 74
-    * op div *tmp191 *tmp190 2
-    * set :unpackCfg:y *tmp191
+  442 op div :unpackCfg:y *tmp190 2
   443 set *tmp192 :unpackCfg:index
   444 op add :unpackCfg:index :unpackCfg:index 1
   445 read *tmp193 :unpackCfg:cfg *tmp192
-    * op sub *tmp194 *tmp193 74
-    * set :unpackCfg:rotation *tmp194
+  446 op sub :unpackCfg:rotation *tmp193 74
   447 set *tmp195 :unpackCfg:index
   448 op add :unpackCfg:index :unpackCfg:index 1
   449 read *tmp196 :unpackCfg:cfg *tmp195
-    * op sub *tmp197 *tmp196 74
-    * set :unpackCfg:ind *tmp197
-    * sensor *tmp198 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp198
-    * sensor *tmp199 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp199
-    * sensor *tmp200 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp200
-    * sensor *tmp201 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp201
-    * sensor *tmp202 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp202
-    * sensor *tmp203 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp203
-    * sensor *tmp204 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp204
+  450 op sub :unpackCfg:ind *tmp196 74
+  451 sensor :unpackCfg:cu :unpackCfg:type @copper
+  452 sensor :unpackCfg:pb :unpackCfg:type @lead
+  453 sensor :unpackCfg:gr :unpackCfg:type @graphite
+  454 sensor :unpackCfg:si :unpackCfg:type @silicon
+  455 sensor :unpackCfg:ti :unpackCfg:type @titanium
+  456 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+  457 sensor :unpackCfg:th :unpackCfg:type @thorium
   458 label *label153
   459 return :unpackCfg*retaddr
   460 end
 
   646 jump *label208 equal *tmp253 false
   647 sensor *tmp255 .core @titanium
   648 op sub *tmp256 titanium *tmp255
-    * op min *tmp257 5 *tmp256
-    * set *tmp254 *tmp257
+  649 op min *tmp254 5 *tmp256
   650 jump *label209 always
   651 label *label208
   652 set *tmp254 100
 
   680 call *label28 *invalid :status1*retval (m:*label222) (h:*label222)
   681 label *label222
   682 jump *label223 equal A¨SSJh-container30 false
-    * sensor *tmp272 .core @coal
-    * set :supplyBase0:coal *tmp272
-    * sensor *tmp273 A¨SSJh-container30 @sand
-    * set :supplyBase0:sand *tmp273
+  683 sensor :supplyBase0:coal .core @coal
+  684 sensor :supplyBase0:sand A¨SSJh-container30 @sand
   685 op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
   686 jump *label225 equal *tmp274 false
   687 set *tmp275 @coal
 
   716 setaddr :status1*retaddr *label231 (h:*label231)
   717 call *label28 *invalid :status1*retval (m:*label231) (h:*label231)
   718 label *label231
-    * sensor *tmp278 .core @coal
-    * set :supplyBase0:coal.1 *tmp278
-    * sensor *tmp279 .core @sand
-    * set :supplyBase0:sand.1 *tmp279
+  719 sensor :supplyBase0:coal.1 .core @coal
+  720 sensor :supplyBase0:sand.1 .core @sand
   721 op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
   722 jump *label232 equal *tmp280 false
   723 set *tmp281 @coal
 
   966 write :meetTarget:metaglass processor2 ".targetMetaglass"
   967 write :meetTarget:thorium processor2 ".targetThorium"
   968 set copper :meetTarget:copper
-    * op add *tmp328 :meetTarget:lead .leadSurplus
-    * set lead *tmp328
+  969 op add lead :meetTarget:lead .leadSurplus
   970 set graphite :meetTarget:graphite
   971 set silicon :meetTarget:silicon
   972 set titanium :meetTarget:titanium
 
   993 setaddr :targetMet*retaddr *label291 (h:*label291)
   994 call *label47 *invalid :targetMet*retval (m:*label291) (h:*label291)
   995 label *label291
-    * set *tmp338 :targetMet*retval
-    * op equal *tmp339 *tmp338 false
+  996 op equal *tmp339 :targetMet*retval false
   997 jump *label290 equal *tmp339 false
   998 setaddr :supplyBase*retaddr *label292 (h:*label292)
   999 call *label13 *invalid :supplyBase*retval (m:*label292) (h:*label292)
 
  1012 setaddr :targetMet*retaddr *label299 (h:*label299)
  1013 call *label47 *invalid :targetMet*retval (m:*label299) (h:*label299)
  1014 label *label299
-    * set *tmp342 :targetMet*retval
-    * op equal *tmp343 *tmp342 false
+ 1015 op equal *tmp343 :targetMet*retval false
  1016 jump *label298 equal *tmp343 false
  1017 setaddr :supplyBase*retaddr *label300 (h:*label300)
  1018 call *label13 *invalid :supplyBase*retval (m:*label300) (h:*label300)
 
  1199 call *label33 *invalid :moveTo*retval (m:*label317) (h:*label317)
  1200 label *label317
  1201 label *label316
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp352 *tmp353
-    * set :buildBlockAt:building *tmp352
+ 1202 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp353
  1203 op notEqual *tmp354 :buildBlockAt:building null
  1204 jump *label318 equal *tmp354 false
  1205 op equal *tmp356 :buildBlockAt:type :buildBlockAt:block
 
  1229 set :buildBlockAt:success false
  1230 label *label323
  1231 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp358 *tmp359
-    * set :buildBlockAt:building *tmp358
+ 1232 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp359
  1233 op equal *tmp360 :buildBlockAt:building null
  1234 op equal *tmp361 :buildBlockAt:success false
  1235 op land *tmp362 *tmp360 *tmp361
 
  1272 ubind .builder
  1273 set :logBlock:block :buildBlockAt:block
  1274 set :logBlock:index :buildBlockAt:index
-    * sensor *tmp371 :logBlock:block @id
-    * set :log:encodedId *tmp371
+ 1275 sensor :log:encodedId :logBlock:block @id
  1276 read *tmp100 bank1 511
  1277 op sub *tmp372 *tmp100 1
  1278 write *tmp372 bank1 511
 
  1447 op min *tmp416 :setFlareTarget:target 8
  1448 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1449 label *label365
-    * set *tmp417 .positive
-    * op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp417
+ 1450 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1451 set :buildTitaniumDrill*retval .positive
  1452 jump *label347 always
  1453 jump *label363 always
 
  1483 read *tmp51 processor3 ".locations"
  1484 op lessThan *tmp419 :buildTitaniumDrills:current *tmp51
  1485 jump *label374 equal *tmp419 false
-    * op mul *tmp420 :buildTitaniumDrills:current 4
-    * set :buildTitaniumDrills:index *tmp420
+ 1486 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1487 op add *tmp421 :buildTitaniumDrills:index 1
-    * set *tmp422 *tmp421
-    * read *tmp423 bank1 *tmp422
-    * set :buildTitaniumDrills:size *tmp423
+ 1488 read :buildTitaniumDrills:size bank1 *tmp421
  1489 op greaterThanEq *tmp424 :buildTitaniumDrills:size 3
  1490 jump *label375 equal *tmp424 false
-    * op add *tmp426 :buildTitaniumDrills:index 2
-    * set *tmp427 *tmp426
-    * read *tmp428 bank1 *tmp427
-    * set :buildTitaniumDrills:x *tmp428
+ 1491 op add *tmp427 :buildTitaniumDrills:index 2
+ 1492 read :buildTitaniumDrills:x bank1 *tmp427
  1493 op add *tmp429 :buildTitaniumDrills:index 3
-    * set *tmp430 *tmp429
-    * read *tmp431 bank1 *tmp430
-    * set :buildTitaniumDrills:y *tmp431
+ 1494 read :buildTitaniumDrills:y bank1 *tmp429
  1495 op sub *tmp432 :buildTitaniumDrills:x 1
  1496 op sub *tmp433 :buildTitaniumDrills:y 1
  1497 set :buildTitaniumDrill:x *tmp432
 
  1515 label *label378
  1516 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1517 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp437 :buildTitaniumDrill*retval
-    * op add *tmp438 *tmp434 *tmp437
+ 1518 op add *tmp438 *tmp434 :buildTitaniumDrill*retval
  1519 op sub *tmp439 :buildTitaniumDrills:x 1
  1520 op add *tmp440 :buildTitaniumDrills:y 1
  1521 set :buildTitaniumDrill:x *tmp439
 
  1527 label *label379
  1528 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1529 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp441 :buildTitaniumDrill*retval
-    * op add *tmp442 *tmp438 *tmp441
+ 1530 op add *tmp442 *tmp438 :buildTitaniumDrill*retval
  1531 op add *tmp443 :buildTitaniumDrills:x 1
  1532 op add *tmp444 :buildTitaniumDrills:y 1
  1533 set :buildTitaniumDrill:x *tmp443
 
  1539 label *label380
  1540 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1541 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp445 :buildTitaniumDrill*retval
-    * op add *tmp446 *tmp442 *tmp445
-    * set :buildTitaniumDrills:built *tmp446
+ 1542 op add :buildTitaniumDrills:built *tmp442 :buildTitaniumDrill*retval
  1543 op equal *tmp447 :buildTitaniumDrills:built 0
  1544 jump *label381 equal *tmp447 false
  1545 set :buildTitaniumDrill:x :buildTitaniumDrills:x
 
  1551 label *label383
  1552 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1553 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp449 :buildTitaniumDrill*retval
-    * set :buildTitaniumDrills:built *tmp449
+ 1554 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1555 jump *label382 always
  1556 label *label381
  1557 label *label382

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1333 jump *label342 always
  1334 set *tmp384 null
  1335 label *label342
-    * jump *label344 equal *tmp384 @ore-titanium
-    * jump *label343 always
+ 1336 jump *label343 notEqual *tmp384 @ore-titanium
  1337 label *label344
  1338 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1339 jump *label341 always
 
  1341 jump *label346 equal *tmp384 @ore-copper
  1342 jump *label346 equal *tmp384 @ore-lead
  1343 jump *label346 equal *tmp384 @ore-scrap
-    * jump *label346 equal *tmp384 @ore-coal
-    * jump *label345 always
+ 1344 jump *label345 notEqual *tmp384 @ore-coal
  1345 label *label346
  1346 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1347 jump *label341 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-66 instructions):
 
    35 set .builder @unit
    36 ulocate building core false @copper .coreX .coreY *tmp103 .core
    37 label *label57
-    * op equal *tmp104 .core null
-    * jump *label56 notEqual *tmp104 false
+   38 jump *label56 equal .core null
    39 label *label58
    40 set .sandContainer .core
    41 set *signature "b1abbf1945b2011d:v1"
 
    79 label *label66
    80 label *label67
    81 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * op equal *tmp106 *tmp105 false
-    * jump *label69 equal *tmp106 false
+   82 jump *label69 notEqual *tmp105 false
    83 op sub *tmp107 :moveTo:radius 0.5
    84 ucontrol approach :moveTo:x :moveTo:y *tmp107
    85 label *label68
 
    95 label *label71
    96 label *label72
    97 sensor *tmp108 @unit @firstItem
-    * op notEqual *tmp109 *tmp108 null
-    * jump *label75 equal *tmp109 false
+   98 jump *label75 equal *tmp108 null
    99 ucontrol itemDrop @air 1000
   100 jump *label76 always
   101 label *label75
 
   103 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   104 label *label73
   105 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * op equal *tmp112 *tmp111 false
-    * jump *label72 notEqual *tmp112 false
+  106 jump *label72 equal *tmp111 false
   107 label *label74
   108 label *label70
   109 return :moveToEmpty*retaddr
 
   111 label *label35
   112 label *label78
   113 sensor *tmp113 @unit @firstItem
-    * op notEqual *tmp114 *tmp113 null
-    * jump *label80 equal *tmp114 false
+  114 jump *label80 equal *tmp113 null
   115 ucontrol itemDrop @air 1000
   116 label *label79
   117 jump *label78 always
 
   137 call *label30 *invalid :status3*retval (m:*label84) (h:*label84)
   138 label *label84
   139 sensor *tmp117 @unit @firstItem
-    * op equal *tmp118 *tmp117 :depositItems:item
-    * jump *label85 equal *tmp118 false
+  140 jump *label85 notEqual *tmp117 :depositItems:item
   141 set :moveToBlock:block :depositItems:block
   142 set :moveToBlock:radius 6
   143 setaddr :moveToBlock*retaddr *label87 (h:*label87)
 
   150 sensor *tmp121 @unit @firstItem
   151 op mul *tmp122 *tmp121 :depositItems:cap
   152 sensor *tmp123 :depositItems:block :depositItems:item
-    * op greaterThan *tmp124 *tmp122 *tmp123
-    * jump *label88 notEqual *tmp124 false
+  153 jump *label88 greaterThan *tmp122 *tmp123
   154 label *label90
   155 jump *label86 always
   156 label *label85
   157 label *label91
   158 sensor *tmp125 @unit @firstItem
-    * op notEqual *tmp126 *tmp125 null
-    * jump *label93 equal *tmp126 false
+  159 jump *label93 equal *tmp125 null
   160 ucontrol itemDrop @air 1000
   161 label *label92
   162 jump *label91 always
 
   172 end
   173 label *label38
   174 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * op equal *tmp129 *tmp127 false
-    * jump *label96 equal *tmp129 false
+  175 jump *label96 notEqual *tmp127 false
   176 set :error:error "Cannot locate ore"
   177 setaddr :error*retaddr *label98 (h:*label98)
   178 call *label32 *invalid :error*retval (m:*label98) (h:*label98)
 
   202 call *label34 *invalid :moveToEmpty*retval (m:*label102) (h:*label102)
   203 label *label102
   204 sensor *tmp132 @unit @firstItem
-    * op notEqual *tmp133 *tmp132 :mineOre:ore
-    * jump *label103 equal *tmp133 false
+  205 jump *label103 equal *tmp132 :mineOre:ore
   206 setaddr :dropAll*retaddr *label105 (h:*label105)
   207 call *label35 *invalid :dropAll*retval (m:*label105) (h:*label105)
   208 label *label105
 
   225 label *label110
   226 label *label111
   227 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp141 @second :mineOre:stop
-    * jump *label112 equal *tmp141 false
+  228 jump *label112 lessThanEq @second :mineOre:stop
   229 jump *label109 always
   230 jump *label113 always
   231 label *label112
   232 label *label113
-    * op equal *tmp143 .noTarget false
-    * jump *label114 equal *tmp143 false
+  233 jump *label114 notEqual .noTarget false
   234 setaddr :targetMet*retaddr *label116 (h:*label116)
   235 call *label47 *invalid :targetMet*retval (m:*label116) (h:*label116)
   236 label *label116
 
   244 label *label115
   245 label *label108
   246 sensor *tmp146 @unit @totalItems
-    * op lessThan *tmp147 *tmp146 :mineOre:amount
-    * jump *label107 notEqual *tmp147 false
+  247 jump *label107 lessThan *tmp146 :mineOre:amount
   248 label *label109
   249 ucontrol unbind
   250 set :depositItems:block :mineOre:block
 
   348 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   349 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   350 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * op greaterThan *tmp167 :supplyBlock:missing 0
-    * jump *label139 equal *tmp167 false
+  351 jump *label139 lessThanEq :supplyBlock:missing 0
   352 set :mineOre:ore :supplyBlock:ore
   353 set :mineOre:amount :supplyBlock:blockCapacity
   354 set :mineOre:block :supplyBlock:block
 
   458 call *label28 *invalid :status1*retval (m:*label158) (h:*label158)
   459 label *label158
   460 sensor *tmp211 .thoriumBattery @totalPower
-    * op lessThan *tmp212 *tmp211 2000
-    * jump *label159 equal *tmp212 false
+  461 jump *label159 greaterThanEq *tmp211 2000
   462 sensor *tmp214 .thoriumGenerator @coal
-    * op equal *tmp215 *tmp214 0
-    * jump *label161 equal *tmp215 false
+  463 jump *label161 notEqual *tmp214 0
   464 sensor *tmp217 .core @coal
-    * op lessThan *tmp218 *tmp217 50
-    * jump *label163 equal *tmp218 false
+  465 jump *label163 greaterThanEq *tmp217 50
   466 set :supplyBlock:block .thoriumGenerator
   467 set :supplyBlock:ore @coal
   468 setaddr :supplyBlock*retaddr *label165 (h:*label165)
 
   488 call *label42 *invalid :fetchBlock*retval (m:*label167) (h:*label167)
   489 label *label167
   490 sensor *tmp220 .core @thorium
-    * op greaterThan *tmp221 *tmp220 400
-    * jump *label168 equal *tmp221 false
+  491 jump *label168 lessThanEq *tmp220 400
   492 set :setMonoTarget:target 0
   493 write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
   494 label *label170
 
   502 jump *label156 always
   503 label *label155
   504 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op greaterThan *tmp223 *tmp81 1
-    * jump *label172 equal *tmp223 false
+  505 jump *label172 lessThanEq *tmp81 1
   506 set :status1:text "Phase 1: supplying base"
   507 setaddr :status1*retaddr *label175 (h:*label175)
   508 call *label28 *invalid :status1*retval (m:*label175) (h:*label175)
 
   515 jump *label173 always
   516 label *label172
   517 set :supplyBase0:supplied false
-    * op equal *tmp225 A©JNJP-unloader6 null
-    * jump *label178 equal *tmp225 false
+  518 jump *label178 notEqual A©JNJP-unloader6 null
   519 sensor *tmp227 .core @graphite
-    * op lessThan *tmp228 *tmp227 graphite
-    * jump *label180 equal *tmp228 false
+  520 jump *label180 greaterThanEq *tmp227 graphite
   521 sensor *tmp230 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp231 *tmp230 5
-    * jump *label182 equal *tmp231 false
+  522 jump *label182 greaterThanEq *tmp230 5
   523 set :status1:text "Goal 1: graphite requirement"
   524 setaddr :status1*retaddr *label184 (h:*label184)
   525 call *label28 *invalid :status1*retval (m:*label184) (h:*label184)
 
   537 label *label180
   538 label *label181
   539 sensor *tmp233 AJTJK-battery1 @totalPower
-    * op lessThan *tmp234 *tmp233 .powerTarget
-    * jump *label186 equal *tmp234 false
+  540 jump *label186 greaterThanEq *tmp233 .powerTarget
   541 sensor *tmp236 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp237 *tmp236 2
-    * jump *label188 equal *tmp237 false
+  542 jump *label188 greaterThanEq *tmp236 2
   543 set :status1:text "Goal 4: supplying generator"
   544 setaddr :status1*retaddr *label190 (h:*label190)
   545 call *label28 *invalid :status1*retval (m:*label190) (h:*label190)
 
   557 label *label186
   558 label *label187
   559 sensor *tmp239 .core @silicon
-    * op lessThan *tmp240 *tmp239 silicon
-    * jump *label192 equal *tmp240 false
+  560 jump *label192 greaterThanEq *tmp239 silicon
   561 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp243 *tmp242 5
-    * jump *label194 equal *tmp243 false
+  562 jump *label194 greaterThanEq *tmp242 5
   563 set :status1:text "Goal 2: coal for silicon requirement"
   564 setaddr :status1*retaddr *label196 (h:*label196)
   565 call *label28 *invalid :status1*retval (m:*label196) (h:*label196)
 
   573 jump *label195 always
   574 label *label194
   575 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp246 *tmp245 5
-    * jump *label198 equal *tmp246 false
+  576 jump *label198 greaterThanEq *tmp245 5
   577 jump *label200 equal .scrap false
   578 sensor *tmp249 AXPRJd-pulverizer26 @scrap
-    * op lessThan *tmp250 *tmp249 10
-    * jump *label202 equal *tmp250 false
+  579 jump *label202 greaterThanEq *tmp249 10
   580 set :status1:text "Goal 3a: scrap for silicon requirement"
   581 setaddr :status1*retaddr *label204 (h:*label204)
   582 call *label28 *invalid :status1*retval (m:*label204) (h:*label204)
 
   614 label *label178
   615 label *label179
   616 sensor *tmp252 .core @titanium
-    * op lessThan *tmp253 *tmp252 titanium
-    * jump *label208 equal *tmp253 false
+  617 jump *label208 greaterThanEq *tmp252 titanium
   618 sensor *tmp255 .core @titanium
   619 op sub *tmp256 titanium *tmp255
   620 op min *tmp254 5 *tmp256
 
   624 label *label209
   625 set :supplyBase0:titaniumTrigger *tmp254
   626 sensor *tmp258 .titaniumDrill @titanium
-    * op lessThan *tmp259 *tmp258 :supplyBase0:titaniumTrigger
-    * jump *label210 equal *tmp259 false
-    * op equal *tmp261 :supplyBase0:supplied false
-    * jump *label212 equal *tmp261 false
+  627 jump *label210 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  628 jump *label212 notEqual :supplyBase0:supplied false
   629 sensor *tmp263 AJTJK-battery1 @totalPower
   630 op mul *tmp264 A©JNJP-unloader6 .powerTarget
-    * op lessThan *tmp265 *tmp263 *tmp264
-    * jump *label214 equal *tmp265 false
+  631 jump *label214 greaterThanEq *tmp263 *tmp264
   632 set :status1:text "Goal 5: supplying generator"
   633 setaddr :status1*retaddr *label216 (h:*label216)
   634 call *label28 *invalid :status1*retval (m:*label216) (h:*label216)
 
   640 jump *label215 always
   641 label *label214
   642 sensor *tmp267 .core @silicon
-    * op lessThan *tmp268 *tmp267 silicon
-    * jump *label218 equal *tmp268 false
+  643 jump *label218 greaterThanEq *tmp267 silicon
   644 jump *label220 equal .scrap false
   645 set :status1:text "Goal 6: silicon requirement"
   646 setaddr :status1*retaddr *label222 (h:*label222)
 
   649 jump *label223 equal A¨SSJh-container30 false
   650 sensor :supplyBase0:coal .core @coal
   651 sensor :supplyBase0:sand A¨SSJh-container30 @sand
-    * op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
-    * jump *label225 equal *tmp274 false
+  652 jump *label225 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   653 set *tmp275 @coal
   654 jump *label226 always
   655 label *label225
   656 set *tmp275 @scrap
   657 label *label226
   658 set :supplyBase0:ore *tmp275
-    * op lessThan *tmp276 :supplyBase0:coal :supplyBase0:sand
-    * jump *label227 equal *tmp276 false
+  659 jump *label227 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   660 set *tmp277 .core
   661 jump *label228 always
   662 label *label227
 
   683 label *label231
   684 sensor :supplyBase0:coal.1 .core @coal
   685 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label232 equal *tmp280 false
+  686 jump *label232 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
   687 set *tmp281 @coal
   688 jump *label233 always
   689 label *label232
 
   698 jump *label219 always
   699 label *label218
   700 sensor *tmp282 .core @copper
-    * op lessThan *tmp283 *tmp282 copper
-    * jump *label235 equal *tmp283 false
+  701 jump *label235 greaterThanEq *tmp282 copper
   702 set :status1:text "Goal 7: copper requirement"
   703 setaddr :status1*retaddr *label237 (h:*label237)
   704 call *label28 *invalid :status1*retval (m:*label237) (h:*label237)
 
   710 jump *label236 always
   711 label *label235
   712 sensor *tmp285 .core @lead
-    * op lessThan *tmp286 *tmp285 lead
-    * jump *label239 equal *tmp286 false
+  713 jump *label239 greaterThanEq *tmp285 lead
   714 set :status1:text "Goal 8: lead requirement"
   715 setaddr :status1*retaddr *label241 (h:*label241)
   716 call *label28 *invalid :status1*retval (m:*label241) (h:*label241)
 
   722 jump *label240 always
   723 label *label239
   724 sensor *tmp288 .core @metaglass
-    * op lessThan *tmp289 *tmp288 metaglass
-    * jump *label243 equal *tmp289 false
+  725 jump *label243 greaterThanEq *tmp288 metaglass
   726 set :status1:text "Goal 9: metaglass requirement"
   727 setaddr :status1*retaddr *label245 (h:*label245)
   728 call *label28 *invalid :status1*retval (m:*label245) (h:*label245)
 
   746 setaddr :status1*retaddr *label250 (h:*label250)
   747 call *label28 *invalid :status1*retval (m:*label250) (h:*label250)
   748 label *label250
-    * op equal *tmp292 A¨SSJh-container30 null
-    * jump *label251 equal *tmp292 false
+  749 jump *label251 notEqual A¨SSJh-container30 null
   750 sensor *tmp294 .core @coal
   751 sensor *tmp295 .core @sand
   752 op lessThanEq *tmp296 *tmp294 *tmp295
 
   767 sensor *tmp300 A¨SSJh-container30 @sand
   768 sensor *tmp301 A¨SSJh-container30 @scrap
   769 op add *tmp302 *tmp300 *tmp301
-    * op lessThanEq *tmp303 *tmp299 *tmp302
-    * jump *label256 equal *tmp303 false
+  770 jump *label256 greaterThan *tmp299 *tmp302
   771 set :mineOre.2:ore @coal
   772 setaddr :mineOre.2*retaddr *label258 (h:*label258)
   773 call *label41 *invalid :mineOre.2*retval (m:*label258) (h:*label258)
 
   810 end
   811 label *label47
   812 sensor *tmp305 .core @silicon
-    * op lessThan *tmp306 *tmp305 silicon
-    * jump *label263 equal *tmp306 false
+  813 jump *label263 greaterThanEq *tmp305 silicon
   814 write @silicon processor2 ".missing"
   815 set :targetMet*retval false
   816 jump *label262 always
 
   818 label *label263
   819 label *label264
   820 sensor *tmp308 .core @copper
-    * op lessThan *tmp309 *tmp308 copper
-    * jump *label265 equal *tmp309 false
+  821 jump *label265 greaterThanEq *tmp308 copper
   822 write @copper processor2 ".missing"
   823 set :targetMet*retval false
   824 jump *label262 always
 
   826 label *label265
   827 label *label266
   828 sensor *tmp311 .core @lead
-    * op lessThan *tmp312 *tmp311 lead
-    * jump *label267 equal *tmp312 false
+  829 jump *label267 greaterThanEq *tmp311 lead
   830 write @lead processor2 ".missing"
   831 set :targetMet*retval false
   832 jump *label262 always
 
   834 label *label267
   835 label *label268
   836 sensor *tmp314 .core @metaglass
-    * op lessThan *tmp315 *tmp314 metaglass
-    * jump *label269 equal *tmp315 false
+  837 jump *label269 greaterThanEq *tmp314 metaglass
   838 write @metaglass processor2 ".missing"
   839 set :targetMet*retval false
   840 jump *label262 always
 
   842 label *label269
   843 label *label270
   844 sensor *tmp317 .core @graphite
-    * op lessThan *tmp318 *tmp317 graphite
-    * jump *label271 equal *tmp318 false
+  845 jump *label271 greaterThanEq *tmp317 graphite
   846 write @graphite processor2 ".missing"
   847 set :targetMet*retval false
   848 jump *label262 always
 
   850 label *label271
   851 label *label272
   852 sensor *tmp320 .core @titanium
-    * op lessThan *tmp321 *tmp320 titanium
-    * jump *label273 equal *tmp321 false
+  853 jump *label273 greaterThanEq *tmp320 titanium
   854 write @titanium processor2 ".missing"
   855 set :targetMet*retval false
   856 jump *label262 always
 
   858 label *label273
   859 label *label274
   860 sensor *tmp323 .core @thorium
-    * op lessThan *tmp324 *tmp323 thorium
-    * jump *label275 equal *tmp324 false
+  861 jump *label275 greaterThanEq *tmp323 thorium
   862 write @thorium processor2 ".missing"
   863 set :targetMet*retval false
   864 jump *label262 always
 
   945 setaddr :targetMet*retaddr *label291 (h:*label291)
   946 call *label47 *invalid :targetMet*retval (m:*label291) (h:*label291)
   947 label *label291
-    * op equal *tmp339 :targetMet*retval false
-    * jump *label290 equal *tmp339 false
+  948 jump *label290 notEqual :targetMet*retval false
   949 setaddr :supplyBase*retaddr *label292 (h:*label292)
   950 call *label13 *invalid :supplyBase*retval (m:*label292) (h:*label292)
   951 label *label292
 
   963 setaddr :targetMet*retaddr *label299 (h:*label299)
   964 call *label47 *invalid :targetMet*retval (m:*label299) (h:*label299)
   965 label *label299
-    * op equal *tmp343 :targetMet*retval false
-    * jump *label298 equal *tmp343 false
+  966 jump *label298 notEqual :targetMet*retval false
   967 setaddr :supplyBase*retaddr *label300 (h:*label300)
   968 call *label13 *invalid :supplyBase*retval (m:*label300) (h:*label300)
   969 label *label300
 
  1044 end
  1045 label *label18
  1046 op add *tmp345 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp346 *tmp345 0
-    * jump *label308 equal *tmp346 false
+ 1047 jump *label308 lessThanEq *tmp345 0
  1048 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1049 setaddr :unpackCfg*retaddr *label310 (h:*label310)
  1050 call *label46 *invalid :unpackCfg*retval (m:*label310) (h:*label310)
 
  1149 label *label317
  1150 label *label316
  1151 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp353
-    * op notEqual *tmp354 :buildBlockAt:building null
-    * jump *label318 equal *tmp354 false
-    * op equal *tmp356 :buildBlockAt:type :buildBlockAt:block
-    * jump *label320 equal *tmp356 false
+ 1152 jump *label318 equal :buildBlockAt:building null
+ 1153 jump *label320 notEqual :buildBlockAt:type :buildBlockAt:block
  1154 set :buildBlockAt*retval :buildBlockAt:building
  1155 jump *label315 always
  1156 jump *label321 always
 
  1197 label *label326
  1198 set :buildBlockAt:success true
  1199 label *label327
-    * op equal *tmp364 :buildBlockAt:block @multiplicative-reconstructor
-    * jump *label329 equal *tmp364 false
+ 1200 jump *label329 notEqual :buildBlockAt:block @multiplicative-reconstructor
  1201 control enabled processor6 false
  1202 ubind @poly
-    * op notEqual *tmp367 @unit .builder
-    * jump *label331 equal *tmp367 false
+ 1203 jump *label331 equal @unit .builder
  1204 ucontrol approach :buildBlockAt:x :buildBlockAt:y 6
  1205 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1206 jump *label332 always
 
  1210 label *label329
  1211 label *label330
  1212 label *label324
-    * op notEqual *tmp369 :buildBlockAt:type :buildBlockAt:block
-    * jump *label323 notEqual *tmp369 false
+ 1213 jump *label323 notEqual :buildBlockAt:type :buildBlockAt:block
  1214 label *label325
  1215 control enabled processor6 true
  1216 ubind .builder
 
  1226 op add *tmp376 :log:encodedId *tmp375
  1227 write *tmp376 bank1 *tmp373
  1228 label *label334
-    * op greaterThanEq *tmp377 :logBlock:index 0
-    * jump *label335 equal *tmp377 false
+ 1229 jump *label335 lessThan :logBlock:index 0
  1230 op shl *tmp379 1 :logBlock:index
  1231 read *tmp7 processor2 ".blocksBuilt"
  1232 op or *tmp380 *tmp7 *tmp379
 
  1294 return :titaniumDrillScore*retaddr
  1295 end
  1296 label *label50
-    * op lessThan *tmp390 :buildTitaniumDrill:count .MAX_COUNT
-    * jump *label348 equal *tmp390 false
-    * op lessThan *tmp392 :buildTitaniumDrill:tiles .MAX_TILES
-    * jump *label350 equal *tmp392 false
+ 1297 jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
+ 1298 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1299 set :moveTo.2:x :buildTitaniumDrill:x
  1300 set :moveTo.2:y :buildTitaniumDrill:y
  1301 set *tmp394 :moveTo.2:x
 
  1372 call *label23 *invalid :buildBlockAt*retval (m:*label361) (h:*label361)
  1373 label *label361
  1374 set :buildTitaniumDrill:drill :buildBlockAt*retval
-    * op notEqual *tmp412 :buildTitaniumDrill:drill null
-    * jump *label362 equal *tmp412 false
+ 1375 jump *label362 equal :buildTitaniumDrill:drill null
  1376 write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
  1377 write false processor8 ":addTitaniumDrill*finished"
  1378 write 1 processor8 "@counter"
 
  1419 label *label369
  1420 label *label372
  1421 read *tmp51 processor3 ".locations"
-    * op lessThan *tmp419 :buildTitaniumDrills:current *tmp51
-    * jump *label374 equal *tmp419 false
+ 1422 jump *label374 greaterThanEq :buildTitaniumDrills:current *tmp51
  1423 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1424 op add *tmp421 :buildTitaniumDrills:index 1
  1425 read :buildTitaniumDrills:size bank1 *tmp421
-    * op greaterThanEq *tmp424 :buildTitaniumDrills:size 3
-    * jump *label375 equal *tmp424 false
+ 1426 jump *label375 lessThan :buildTitaniumDrills:size 3
  1427 op add *tmp427 :buildTitaniumDrills:index 2
  1428 read :buildTitaniumDrills:x bank1 *tmp427
  1429 op add *tmp429 :buildTitaniumDrills:index 3
 
  1476 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1477 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1478 op add :buildTitaniumDrills:built *tmp442 :buildTitaniumDrill*retval
-    * op equal *tmp447 :buildTitaniumDrills:built 0
-    * jump *label381 equal *tmp447 false
+ 1479 jump *label381 notEqual :buildTitaniumDrills:built 0
  1480 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1481 set :buildTitaniumDrill:y :buildTitaniumDrills:y
  1482 set :buildTitaniumDrill:count :buildTitaniumDrills:count
 
  1497 label *label373
  1498 jump *label372 always
  1499 label *label374
-    * op greaterThanEq *tmp451 :buildTitaniumDrills:tiles .MAX_TILES
-    * jump *label384 equal *tmp451 false
+ 1500 jump *label384 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1501 jump *label371 always
  1502 jump *label385 always
  1503 label *label384
  1504 label *label385
-    * op greaterThanEq *tmp453 :buildTitaniumDrills:count .MAX_COUNT
-    * jump *label386 equal *tmp453 false
+ 1505 jump *label386 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1506 jump *label371 always
  1507 jump *label387 always
  1508 label *label386
  1509 label *label387
  1510 label *label370
  1511 read *tmp52 processor3 ".searchFinished"
-    * op equal *tmp455 *tmp52 false
-    * jump *label369 notEqual *tmp455 false
+ 1512 jump *label369 equal *tmp52 false
  1513 label *label371
  1514 label *label366
  1515 set :buildTitaniumDrills*finished true

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-46 instructions):
 
    97 sensor *tmp108 @unit @firstItem
    98 jump *label75 equal *tmp108 null
    99 ucontrol itemDrop @air 1000
-    * jump *label76 always
   100 label *label75
   101 label *label76
   102 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   176 setaddr :error*retaddr *label98 (h:*label98)
   177 call *label32 *invalid :error*retval (m:*label98) (h:*label98)
   178 label *label98
-    * jump *label97 always
   179 label *label96
   180 label *label97
   181 label *label95
 
   204 setaddr :dropAll*retaddr *label105 (h:*label105)
   205 call *label35 *invalid :dropAll*retval (m:*label105) (h:*label105)
   206 label *label105
-    * jump *label104 always
   207 label *label103
   208 label *label104
   209 set :status3:text "Mining..."
 
   218 op land *tmp139 *tmp137 *tmp138
   219 jump *label110 equal *tmp139 false
   220 jump *label109 always
-    * jump *label111 always
   221 label *label110
   222 label *label111
   223 ucontrol mine :mineOre:x :mineOre:y
   224 jump *label112 lessThanEq @second :mineOre:stop
   225 jump *label109 always
-    * jump *label113 always
   226 label *label112
   227 label *label113
   228 jump *label114 notEqual .noTarget false
 
   231 label *label116
   232 jump *label117 equal :targetMet*retval false
   233 jump *label109 always
-    * jump *label118 always
   234 label *label117
   235 label *label118
-    * jump *label115 always
   236 label *label114
   237 label *label115
   238 label *label108
 
   313 op land *tmp158 *tmp156 *tmp157
   314 jump *label134 equal *tmp158 false
   315 ucontrol itemDrop @air 1000
-    * jump *label135 always
   316 label *label134
   317 label *label135
   318 label *label132
 
   347 setaddr :mineOre*retaddr *label141 (h:*label141)
   348 call *label39 *invalid :mineOre*retval (m:*label141) (h:*label141)
   349 label *label141
-    * jump *label140 always
   350 label *label139
   351 label *label140
   352 label *label137
 
   382 op land *tmp174 *tmp172 *tmp173
   383 jump *label150 equal *tmp174 false
   384 ucontrol itemDrop @air 1000
-    * jump *label151 always
   385 label *label150
   386 label *label151
   387 label *label148
 
   466 call *label44 *invalid :supplyBlockFromCore*retval (m:*label166) (h:*label166)
   467 label *label166
   468 label *label164
-    * jump *label162 always
   469 label *label161
   470 label *label162
-    * jump *label160 always
   471 label *label159
   472 label *label160
   473 set :fetchBlock:block .thoriumContainer
 
   483 set :setPolyTarget:target 4
   484 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   485 label *label171
-    * jump *label169 always
   486 label *label168
   487 label *label169
   488 label *label157
 
   517 call *label43 *invalid :supplyBlock*retval (m:*label185) (h:*label185)
   518 label *label185
   519 set :supplyBase0:supplied true
-    * jump *label183 always
   520 label *label182
   521 label *label183
-    * jump *label181 always
   522 label *label180
   523 label *label181
   524 sensor *tmp233 AJTJK-battery1 @totalPower
 
   535 call *label43 *invalid :supplyBlock*retval (m:*label191) (h:*label191)
   536 label *label191
   537 jump *label177 always
-    * jump *label189 always
   538 label *label188
   539 label *label189
-    * jump *label187 always
   540 label *label186
   541 label *label187
   542 sensor *tmp239 .core @silicon
 
   570 call *label43 *invalid :supplyBlock*retval (m:*label205) (h:*label205)
   571 label *label205
   572 set :supplyBase0:supplied true
-    * jump *label203 always
   573 label *label202
   574 label *label203
   575 jump *label201 always
 
   585 label *label207
   586 set :supplyBase0:supplied true
   587 label *label201
-    * jump *label199 always
   588 label *label198
   589 label *label199
   590 label *label195
-    * jump *label193 always
   591 label *label192
   592 label *label193
-    * jump *label179 always
   593 label *label178
   594 label *label179
   595 sensor *tmp252 .core @titanium
 
   765 label *label236
   766 label *label219
   767 label *label215
-    * jump *label213 always
   768 label *label212
   769 label *label213
   770 jump *label211 always
 
   792 write @silicon processor2 ".missing"
   793 set :targetMet*retval false
   794 jump *label262 always
-    * jump *label264 always
   795 label *label263
   796 label *label264
   797 sensor *tmp308 .core @copper
 
   799 write @copper processor2 ".missing"
   800 set :targetMet*retval false
   801 jump *label262 always
-    * jump *label266 always
   802 label *label265
   803 label *label266
   804 sensor *tmp311 .core @lead
 
   806 write @lead processor2 ".missing"
   807 set :targetMet*retval false
   808 jump *label262 always
-    * jump *label268 always
   809 label *label267
   810 label *label268
   811 sensor *tmp314 .core @metaglass
 
   813 write @metaglass processor2 ".missing"
   814 set :targetMet*retval false
   815 jump *label262 always
-    * jump *label270 always
   816 label *label269
   817 label *label270
   818 sensor *tmp317 .core @graphite
 
   820 write @graphite processor2 ".missing"
   821 set :targetMet*retval false
   822 jump *label262 always
-    * jump *label272 always
   823 label *label271
   824 label *label272
   825 sensor *tmp320 .core @titanium
 
   827 write @titanium processor2 ".missing"
   828 set :targetMet*retval false
   829 jump *label262 always
-    * jump *label274 always
   830 label *label273
   831 label *label274
   832 sensor *tmp323 .core @thorium
 
   834 write @thorium processor2 ".missing"
   835 set :targetMet*retval false
   836 jump *label262 always
-    * jump *label276 always
   837 label *label275
   838 label *label276
   839 set :targetMet*retval true
 
   941 label *label297
   942 jump *label296 always
   943 label *label298
-    * jump *label294 always
   944 label *label293
   945 label *label294
   946 label *label277
 
  1047 label *label311
  1048 set :buildRemoteBlock*retval :buildBlock*retval
  1049 jump *label307 always
-    * jump *label309 always
  1050 label *label308
  1051 label *label309
  1052 set :buildRemoteBlock*retval false
 
  1122 jump *label320 notEqual :buildBlockAt:type :buildBlockAt:block
  1123 set :buildBlockAt*retval :buildBlockAt:building
  1124 jump *label315 always
-    * jump *label321 always
  1125 label *label320
  1126 label *label321
  1127 set :buildError:text "Cannot build at position"
 
  1136 set .ERROR_Y :buildError:y
  1137 stop
  1138 label *label322
-    * jump *label319 always
  1139 label *label318
  1140 label *label319
  1141 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1170 jump *label331 equal @unit .builder
  1171 ucontrol approach :buildBlockAt:x :buildBlockAt:y 6
  1172 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
-    * jump *label332 always
  1173 label *label331
  1174 label *label332
-    * jump *label330 always
  1175 label *label329
  1176 label *label330
  1177 label *label324
 
  1197 op or *tmp380 *tmp7 *tmp379
  1198 write *tmp380 processor2 ".blocksBuilt"
  1199 write :logBlock:index processor2 ".recentBuildIndex"
-    * jump *label336 always
  1200 label *label335
  1201 label *label336
  1202 label *label333
 
  1251 jump *label345 notEqual *tmp384 @ore-coal
  1252 label *label346
  1253 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * jump *label341 always
  1254 label *label345
  1255 label *label341
  1256 label *label340
 
  1351 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1352 set :buildTitaniumDrill*retval .positive
  1353 jump *label347 always
-    * jump *label363 always
  1354 label *label362
  1355 label *label363
-    * jump *label359 always
  1356 label *label358
  1357 label *label359
-    * jump *label351 always
  1358 label *label350
  1359 label *label351
-    * jump *label349 always
  1360 label *label348
  1361 label *label349
  1362 set :buildTitaniumDrill*retval 0
 
  1370 set :buildTitaniumDrills:tiles 0
  1371 jump *label367 equal .scrap false
  1372 op add .MAX_TILES .MAX_TILES 4
-    * jump *label368 always
  1373 label *label367
  1374 label *label368
  1375 wait 0.0001
 
  1445 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1446 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1447 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
-    * jump *label382 always
  1448 label *label381
  1449 label *label382
-    * jump *label376 always
  1450 label *label375
  1451 label *label376
  1452 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
 
  1455 label *label374
  1456 jump *label384 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1457 jump *label371 always
-    * jump *label385 always
  1458 label *label384
  1459 label *label385
  1460 jump *label386 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1461 jump *label371 always
-    * jump *label387 always
  1462 label *label386
  1463 label *label387
  1464 label *label370

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
   194 label *label101
   195 set :mineOre:x :locateOre:x
   196 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  197 set :moveToEmpty:x :locateOre:x
+  198 set :moveToEmpty:y :locateOre:y
   199 setaddr :moveToEmpty*retaddr *label102 (h:*label102)
   200 call *label34 *invalid :moveToEmpty*retval (m:*label102) (h:*label102)
   201 label *label102
 
   257 label *label121
   258 set *tmp148 :mineOre.1:ore
   259 set *tmp149 :mineOre.1:block
-    * set :mineOre:ore *tmp148
+  260 set :mineOre:ore :mineOre.1:ore
   261 set :mineOre:amount 28
-    * set :mineOre:block *tmp149
+  262 set :mineOre:block :mineOre.1:block
   263 setaddr :mineOre*retaddr *label122 (h:*label122)
   264 call *label39 *invalid :mineOre*retval (m:*label122) (h:*label122)
   265 label *label122
 
   401 end
   402 label *label46
   403 set :unpackCfg:index 1
-    * set *tmp180 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  404 set *tmp180 1
+  405 op add :unpackCfg:index 1 1
   406 read *tmp181 :unpackCfg:cfg *tmp180
   407 op sub *tmp182 *tmp181 74
   408 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  409 set *tmp184 2
+  410 op add :unpackCfg:index 2 1
   411 read *tmp185 :unpackCfg:cfg *tmp184
   412 op sub *tmp186 *tmp185 74
   413 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  414 set *tmp188 3
+  415 op add :unpackCfg:index 3 1
   416 read *tmp189 :unpackCfg:cfg *tmp188
   417 op sub *tmp190 *tmp189 74
   418 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  419 set *tmp192 4
+  420 op add :unpackCfg:index 4 1
   421 read *tmp193 :unpackCfg:cfg *tmp192
   422 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  423 set *tmp195 5
+  424 op add :unpackCfg:index 5 1
   425 read *tmp196 :unpackCfg:cfg *tmp195
   426 op sub :unpackCfg:ind *tmp196 74
   427 sensor :unpackCfg:cu :unpackCfg:type @copper
 
   478 sensor *tmp220 .core @thorium
   479 jump *label168 lessThanEq *tmp220 400
   480 set :setMonoTarget:target 0
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  481 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   482 label *label170
   483 set :setPolyTarget:target 4
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  484 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   485 label *label171
   486 label *label168
   487 label *label169
 
   603 label *label209
   604 set :supplyBase0:titaniumTrigger *tmp254
   605 sensor *tmp258 .titaniumDrill @titanium
-    * jump *label210 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  606 jump *label210 greaterThanEq *tmp258 *tmp254
   607 jump *label212 notEqual :supplyBase0:supplied false
   608 sensor *tmp263 AJTJK-battery1 @totalPower
   609 op mul *tmp264 A©JNJP-unloader6 .powerTarget
 
   642 set *tmp277 A¨SSJh-container30
   643 label *label228
   644 set :supplyBase0:block *tmp277
-    * set :mineOre.1:ore :supplyBase0:ore
-    * set :mineOre.1:block :supplyBase0:block
+  645 set :mineOre.1:ore *tmp275
+  646 set :mineOre.1:block *tmp277
   647 setaddr :mineOre.1*retaddr *label229 (h:*label229)
   648 call *label40 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
   649 label *label229
 
   669 set *tmp281 @sand
   670 label *label233
   671 set :supplyBase0:ore.1 *tmp281
-    * set :mineOre.2:ore :supplyBase0:ore.1
+  672 set :mineOre.2:ore *tmp281
   673 setaddr :mineOre.2*retaddr *label234 (h:*label234)
   674 call *label41 *invalid :mineOre.2*retval (m:*label234) (h:*label234)
   675 label *label234
 
   838 label *label276
   839 set :targetMet*retval true
   840 jump *label262 always
-    * set :targetMet*retval null
   841 label *label262
   842 return :targetMet*retaddr
   843 end
 
   910 op add *tmp337 :meetTarget:graphite *tmp336
   911 write *tmp337 AÕFFJS-micro-processor9 ".graphiteReserve"
   912 write lead processor7 ".leadTarget"
-    * write copper processor7 ".copperTarget"
+  913 write :meetTarget:copper processor7 ".copperTarget"
   914 label *label288
   915 setaddr :targetMet*retaddr *label291 (h:*label291)
   916 call *label47 *invalid :targetMet*retval (m:*label291) (h:*label291)
 
   961 set :meetTargetCfg:ti :unpackCfg:ti
   962 set :meetTargetCfg:mg :unpackCfg:mg
   963 set :meetTargetCfg:th :unpackCfg:th
-    * set :meetTarget:block :meetTargetCfg:type
-    * set :meetTarget:copper :meetTargetCfg:cu
-    * set :meetTarget:lead :meetTargetCfg:pb
-    * set :meetTarget:graphite :meetTargetCfg:gr
-    * set :meetTarget:silicon :meetTargetCfg:si
-    * set :meetTarget:titanium :meetTargetCfg:ti
-    * set :meetTarget:metaglass :meetTargetCfg:mg
-    * set :meetTarget:thorium :meetTargetCfg:th
+  964 set :meetTarget:block :unpackCfg:type
+  965 set :meetTarget:copper :unpackCfg:cu
+  966 set :meetTarget:lead :unpackCfg:pb
+  967 set :meetTarget:graphite :unpackCfg:gr
+  968 set :meetTarget:silicon :unpackCfg:si
+  969 set :meetTarget:titanium :unpackCfg:ti
+  970 set :meetTarget:metaglass :unpackCfg:mg
+  971 set :meetTarget:thorium :unpackCfg:th
   972 set :meetTarget:forBuild :meetTargetCfg:forBuild
   973 set :meetTarget:isNoTarget false
   974 setaddr :meetTarget*retaddr *label303 (h:*label303)
 
  1005 set :buildBlock:built :buildBlockAt*retval
  1006 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1007 write 2 AÕFFJS-micro-processor9 "@counter"
-    * set :buildBlock*retval :buildBlock:built
+ 1008 set :buildBlock*retval :buildBlockAt*retval
  1009 jump *label304 always
-    * set :buildBlock*retval null
  1010 label *label304
  1011 return :buildBlock*retaddr
  1012 end
 
  1027 set :buildRemoteBlock:th :unpackCfg:th
  1028 set :buildRemoteBlock:rotation :unpackCfg:rotation
  1029 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1030 set :buildBlock:block :unpackCfg:type
  1031 set :buildBlock:x :buildRemoteBlock:x
  1032 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1033 set :buildBlock:copper :unpackCfg:cu
+ 1034 set :buildBlock:lead :unpackCfg:pb
+ 1035 set :buildBlock:graphite :unpackCfg:gr
+ 1036 set :buildBlock:silicon :unpackCfg:si
+ 1037 set :buildBlock:titanium :unpackCfg:ti
+ 1038 set :buildBlock:metaglass :unpackCfg:mg
+ 1039 set :buildBlock:thorium :unpackCfg:th
+ 1040 set :buildBlock:rotation :unpackCfg:rotation
  1041 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+ 1042 set :buildBlock:index :unpackCfg:ind
  1043 setaddr :buildBlock*retaddr *label311 (h:*label311)
  1044 call *label48 *invalid :buildBlock*retval (m:*label311) (h:*label311)
  1045 label *label311
 
  1049 label *label309
  1050 set :buildRemoteBlock*retval false
  1051 jump *label307 always
-    * set :buildRemoteBlock*retval null
  1052 label *label307
  1053 set :buildRemoteBlock*finished true
  1054 jump *label59 always
 
  1070 set :buildBlockFromCfg:th :unpackCfg:th
  1071 set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1072 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp348 .coreX :buildBlockFromCfg:x
-    * op add *tmp349 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1073 op add *tmp348 .coreX :unpackCfg:x
+ 1074 op add *tmp349 .coreY :unpackCfg:y
+ 1075 set :buildBlock:block :unpackCfg:type
  1076 set :buildBlock:x *tmp348
  1077 set :buildBlock:y *tmp349
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1078 set :buildBlock:copper :unpackCfg:cu
+ 1079 set :buildBlock:lead :unpackCfg:pb
+ 1080 set :buildBlock:graphite :unpackCfg:gr
+ 1081 set :buildBlock:silicon :unpackCfg:si
+ 1082 set :buildBlock:titanium :unpackCfg:ti
+ 1083 set :buildBlock:metaglass :unpackCfg:mg
+ 1084 set :buildBlock:thorium :unpackCfg:th
+ 1085 set :buildBlock:rotation :unpackCfg:rotation
  1086 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+ 1087 set :buildBlock:index :unpackCfg:ind
  1088 setaddr :buildBlock*retaddr *label314 (h:*label314)
  1089 call *label48 *invalid :buildBlock*retval (m:*label314) (h:*label314)
  1090 label *label314
  1091 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor2 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor9 :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+ 1092 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+ 1093 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
+ 1094 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
+ 1095 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
+ 1096 set :buildBlockFromCfg*retval :buildBlock*retval
  1097 jump *label312 always
-    * set :buildBlockFromCfg*retval null
  1098 label *label312
  1099 set :buildBlockFromCfg*finished true
  1100 jump *label59 always
 
  1104 label *label23
  1105 set :moveTo.1:x :buildBlockAt:x
  1106 set :moveTo.1:y :buildBlockAt:y
-    * set *tmp350 :moveTo.1:x
-    * set *tmp351 :moveTo.1:y
-    * set :moveTo:x *tmp350
-    * set :moveTo:y *tmp351
+ 1107 set *tmp350 :buildBlockAt:x
+ 1108 set *tmp351 :buildBlockAt:y
+ 1109 set :moveTo:x :moveTo.1:x
+ 1110 set :moveTo:y :moveTo.1:y
  1111 set :moveTo:radius 6
  1112 setaddr :moveTo*retaddr *label317 (h:*label317)
  1113 call *label33 *invalid :moveTo*retval (m:*label317) (h:*label317)
 
  1125 set :buildError:type :buildBlockAt:type
  1126 set :buildError:x :buildBlockAt:x
  1127 set :buildError:y :buildBlockAt:y
-    * set .ERROR :buildError:text
-    * set .ERROR_FOUND_BLOCK :buildError:block
-    * set .ERROR_FOUND_TYPE :buildError:type
-    * set .ERROR_X :buildError:x
-    * set .ERROR_Y :buildError:y
+ 1128 set .ERROR "Cannot build at position"
+ 1129 set .ERROR_FOUND_BLOCK :buildBlockAt:block
+ 1130 set .ERROR_FOUND_TYPE :buildBlockAt:type
+ 1131 set .ERROR_X :buildBlockAt:x
+ 1132 set .ERROR_Y :buildBlockAt:y
  1133 stop
  1134 label *label322
  1135 label *label318
 
  1149 set :buildError.1:type :buildBlockAt:type
  1150 set :buildError.1:x :buildBlockAt:x
  1151 set :buildError.1:y :buildBlockAt:y
-    * set .ERROR :buildError.1:text
-    * set .ERROR_FOUND_BLOCK :buildError.1:block
-    * set .ERROR_FOUND_TYPE :buildError.1:type
-    * set .ERROR_X :buildError.1:x
-    * set .ERROR_Y :buildError.1:y
+ 1152 set .ERROR "Error while building"
+ 1153 set .ERROR_FOUND_BLOCK :buildBlockAt:block
+ 1154 set .ERROR_FOUND_TYPE :buildBlockAt:type
+ 1155 set .ERROR_X :buildBlockAt:x
+ 1156 set .ERROR_Y :buildBlockAt:y
  1157 stop
  1158 label *label328
  1159 jump *label327 always
 
  1177 ubind .builder
  1178 set :logBlock:block :buildBlockAt:block
  1179 set :logBlock:index :buildBlockAt:index
-    * sensor :log:encodedId :logBlock:block @id
+ 1180 sensor :log:encodedId :buildBlockAt:block @id
  1181 read *tmp100 bank1 511
  1182 op sub *tmp372 *tmp100 1
  1183 write *tmp372 bank1 511
 
  1185 read *tmp0 processor1 "time"
  1186 op mul *tmp375 *tmp0 1000
  1187 op add *tmp376 :log:encodedId *tmp375
-    * write *tmp376 bank1 *tmp373
+ 1188 write *tmp376 bank1 *tmp372
  1189 label *label334
-    * jump *label335 lessThan :logBlock:index 0
-    * op shl *tmp379 1 :logBlock:index
+ 1190 jump *label335 lessThan :buildBlockAt:index 0
+ 1191 op shl *tmp379 1 :buildBlockAt:index
  1192 read *tmp7 processor2 ".blocksBuilt"
  1193 op or *tmp380 *tmp7 *tmp379
  1194 write *tmp380 processor2 ".blocksBuilt"
-    * write :logBlock:index processor2 ".recentBuildIndex"
+ 1195 write :buildBlockAt:index processor2 ".recentBuildIndex"
  1196 label *label335
  1197 label *label336
  1198 label *label333
  1199 set :buildBlockAt*retval :buildBlockAt:building
  1200 jump *label315 always
-    * set :buildBlockAt*retval null
  1201 label *label315
  1202 set :buildBlockAt*finished true
  1203 return :buildBlockAt*retaddr
 
  1213 call *label23 *invalid :buildBlockAt*retval (m:*label338) (h:*label338)
  1214 label *label338
  1215 set :buildFirstTitaniumDrillAt:drill :buildBlockAt*retval
-    * write :buildFirstTitaniumDrillAt:drill processor8 ":addTitaniumDrill:drill"
+ 1216 write :buildBlockAt*retval processor8 ":addTitaniumDrill:drill"
  1217 write false processor8 ":addTitaniumDrill*finished"
  1218 write 1 processor8 "@counter"
  1219 label *label339
  1220 wait 1e-15
  1221 read *tmp382 processor8 ":addTitaniumDrill*finished"
  1222 jump *label339 equal *tmp382 false
-    * set :buildFirstTitaniumDrillAt*retval :buildFirstTitaniumDrillAt:drill
+ 1223 set :buildFirstTitaniumDrillAt*retval :buildBlockAt*retval
  1224 jump *label337 always
-    * set :buildFirstTitaniumDrillAt*retval null
  1225 label *label337
  1226 set :buildFirstTitaniumDrillAt*finished true
  1227 jump *label59 always
 
  1229 label *label49
  1230 set :getFloor:x :titaniumDrillScore:x
  1231 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y *tmp386 *tmp385 :getFloor:floor
+ 1232 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
  1233 set *tmp384 :getFloor:floor
  1234 jump *label342 always
-    * set *tmp384 null
  1235 label *label342
-    * jump *label343 notEqual *tmp384 @ore-titanium
+ 1236 jump *label343 notEqual :getFloor:floor @ore-titanium
  1237 label *label344
  1238 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1239 jump *label341 always
  1240 label *label343
-    * jump *label346 equal *tmp384 @ore-copper
-    * jump *label346 equal *tmp384 @ore-lead
-    * jump *label346 equal *tmp384 @ore-scrap
-    * jump *label345 notEqual *tmp384 @ore-coal
+ 1241 jump *label346 equal :getFloor:floor @ore-copper
+ 1242 jump *label346 equal :getFloor:floor @ore-lead
+ 1243 jump *label346 equal :getFloor:floor @ore-scrap
+ 1244 jump *label345 notEqual :getFloor:floor @ore-coal
  1245 label *label346
  1246 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1247 label *label345
 
  1254 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1255 set :moveTo.2:x :buildTitaniumDrill:x
  1256 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp394 :moveTo.2:x
-    * set *tmp395 :moveTo.2:y
-    * set :moveTo:x *tmp394
-    * set :moveTo:y *tmp395
+ 1257 set *tmp394 :buildTitaniumDrill:x
+ 1258 set *tmp395 :buildTitaniumDrill:y
+ 1259 set :moveTo:x :moveTo.2:x
+ 1260 set :moveTo:y :moveTo.2:y
  1261 set :moveTo:radius 6
  1262 setaddr :moveTo*retaddr *label353 (h:*label353)
  1263 call *label33 *invalid :moveTo*retval (m:*label353) (h:*label353)
 
  1328 call *label23 *invalid :buildBlockAt*retval (m:*label361) (h:*label361)
  1329 label *label361
  1330 set :buildTitaniumDrill:drill :buildBlockAt*retval
-    * jump *label362 equal :buildTitaniumDrill:drill null
-    * write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
+ 1331 jump *label362 equal :buildBlockAt*retval null
+ 1332 write :buildBlockAt*retval processor8 ":addTitaniumDrill:drill"
  1333 write false processor8 ":addTitaniumDrill*finished"
  1334 write 1 processor8 "@counter"
  1335 label *label364
 
  1338 jump *label364 equal *tmp415 false
  1339 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1340 set :setFlareTarget:target :buildTitaniumDrill:count
-    * op min *tmp416 :setFlareTarget:target 8
+ 1341 op min *tmp416 :buildTitaniumDrill:count 8
  1342 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1343 label *label365
  1344 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
 
  1354 label *label349
  1355 set :buildTitaniumDrill*retval 0
  1356 jump *label347 always
-    * set :buildTitaniumDrill*retval null
  1357 label *label347
  1358 return :buildTitaniumDrill*retaddr
  1359 end
 
  1394 op sub *tmp436 :buildTitaniumDrills:y 1
  1395 set :buildTitaniumDrill:x *tmp435
  1396 set :buildTitaniumDrill:y *tmp436
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1397 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1398 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1399 setaddr :buildTitaniumDrill*retaddr *label378 (h:*label378)
  1400 call *label50 *invalid :buildTitaniumDrill*retval (m:*label378) (h:*label378)
  1401 label *label378
 
  1406 op add *tmp440 :buildTitaniumDrills:y 1
  1407 set :buildTitaniumDrill:x *tmp439
  1408 set :buildTitaniumDrill:y *tmp440
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1409 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1410 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1411 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1412 call *label50 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
  1413 label *label379
 
  1418 op add *tmp444 :buildTitaniumDrills:y 1
  1419 set :buildTitaniumDrill:x *tmp443
  1420 set :buildTitaniumDrill:y *tmp444
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1421 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1422 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1423 setaddr :buildTitaniumDrill*retaddr *label380 (h:*label380)
  1424 call *label50 *invalid :buildTitaniumDrill*retval (m:*label380) (h:*label380)
  1425 label *label380
 
  1429 jump *label381 notEqual :buildTitaniumDrills:built 0
  1430 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1431 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1432 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1433 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1434 setaddr :buildTitaniumDrill*retaddr *label383 (h:*label383)
  1435 call *label50 *invalid :buildTitaniumDrill*retval (m:*label383) (h:*label383)
  1436 label *label383

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-69 instructions):
 
   255 setaddr :status2*retaddr *label121 (h:*label121)
   256 call *label29 *invalid :status2*retval (m:*label121) (h:*label121)
   257 label *label121
-    * set *tmp148 :mineOre.1:ore
-    * set *tmp149 :mineOre.1:block
   258 set :mineOre:ore :mineOre.1:ore
   259 set :mineOre:amount 28
   260 set :mineOre:block :mineOre.1:block
 
   398 return :supplyBlockFromCore*retaddr
   399 end
   400 label *label46
-    * set :unpackCfg:index 1
   401 set *tmp180 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp181 :unpackCfg:cfg *tmp180
+  402 read *tmp181 :unpackCfg:cfg 1
   403 op sub *tmp182 *tmp181 74
   404 lookup block :unpackCfg:type *tmp182
   405 set *tmp184 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp185 :unpackCfg:cfg *tmp184
+  406 read *tmp185 :unpackCfg:cfg 2
   407 op sub *tmp186 *tmp185 74
   408 op div :unpackCfg:x *tmp186 2
   409 set *tmp188 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp189 :unpackCfg:cfg *tmp188
+  410 read *tmp189 :unpackCfg:cfg 3
   411 op sub *tmp190 *tmp189 74
   412 op div :unpackCfg:y *tmp190 2
   413 set *tmp192 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp193 :unpackCfg:cfg *tmp192
+  414 read *tmp193 :unpackCfg:cfg 4
   415 op sub :unpackCfg:rotation *tmp193 74
   416 set *tmp195 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp196 :unpackCfg:cfg *tmp195
+  417 read *tmp196 :unpackCfg:cfg 5
   418 op sub :unpackCfg:ind *tmp196 74
   419 sensor :unpackCfg:cu :unpackCfg:type @copper
   420 sensor :unpackCfg:pb :unpackCfg:type @lead
 
   469 label *label167
   470 sensor *tmp220 .core @thorium
   471 jump *label168 lessThanEq *tmp220 400
-    * set :setMonoTarget:target 0
   472 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   473 label *label170
-    * set :setPolyTarget:target 4
   474 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   475 label *label171
   476 label *label168
 
   591 label *label208
   592 set *tmp254 100
   593 label *label209
-    * set :supplyBase0:titaniumTrigger *tmp254
   594 sensor *tmp258 .titaniumDrill @titanium
   595 jump *label210 greaterThanEq *tmp258 *tmp254
   596 jump *label212 notEqual :supplyBase0:supplied false
 
   623 label *label225
   624 set *tmp275 @scrap
   625 label *label226
-    * set :supplyBase0:ore *tmp275
   626 jump *label227 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   627 set *tmp277 .core
   628 jump *label228 always
   629 label *label227
   630 set *tmp277 A¨SSJh-container30
   631 label *label228
-    * set :supplyBase0:block *tmp277
   632 set :mineOre.1:ore *tmp275
   633 set :mineOre.1:block *tmp277
   634 setaddr :mineOre.1*retaddr *label229 (h:*label229)
 
   655 label *label232
   656 set *tmp281 @sand
   657 label *label233
-    * set :supplyBase0:ore.1 *tmp281
   658 set :mineOre.2:ore *tmp281
   659 setaddr :mineOre.2*retaddr *label234 (h:*label234)
   660 call *label41 *invalid :mineOre.2*retval (m:*label234) (h:*label234)
 
   939 setaddr :unpackCfg*retaddr *label302 (h:*label302)
   940 call *label46 *invalid :unpackCfg*retval (m:*label302) (h:*label302)
   941 label *label302
-    * set :meetTargetCfg:type :unpackCfg:type
-    * set :meetTargetCfg:cu :unpackCfg:cu
-    * set :meetTargetCfg:pb :unpackCfg:pb
-    * set :meetTargetCfg:gr :unpackCfg:gr
-    * set :meetTargetCfg:si :unpackCfg:si
-    * set :meetTargetCfg:ti :unpackCfg:ti
-    * set :meetTargetCfg:mg :unpackCfg:mg
-    * set :meetTargetCfg:th :unpackCfg:th
   942 set :meetTarget:block :unpackCfg:type
   943 set :meetTarget:copper :unpackCfg:cu
   944 set :meetTarget:lead :unpackCfg:pb
 
   980 setaddr :buildBlockAt*retaddr *label306 (h:*label306)
   981 call *label23 *invalid :buildBlockAt*retval (m:*label306) (h:*label306)
   982 label *label306
-    * set :buildBlock:built :buildBlockAt*retval
   983 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   984 write 2 AÕFFJS-micro-processor9 "@counter"
   985 set :buildBlock*retval :buildBlockAt*retval
 
   994 setaddr :unpackCfg*retaddr *label310 (h:*label310)
   995 call *label46 *invalid :unpackCfg*retval (m:*label310) (h:*label310)
   996 label *label310
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   997 set :buildBlock:block :unpackCfg:type
   998 set :buildBlock:x :buildRemoteBlock:x
   999 set :buildBlock:y :buildRemoteBlock:y
 
  1025 setaddr :unpackCfg*retaddr *label313 (h:*label313)
  1026 call *label46 *invalid :unpackCfg*retval (m:*label313) (h:*label313)
  1027 label *label313
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
  1028 op add *tmp348 .coreX :unpackCfg:x
  1029 op add *tmp349 .coreY :unpackCfg:y
  1030 set :buildBlock:block :unpackCfg:type
 
  1043 setaddr :buildBlock*retaddr *label314 (h:*label314)
  1044 call *label48 *invalid :buildBlock*retval (m:*label314) (h:*label314)
  1045 label *label314
-    * set :buildBlockFromCfg:building :buildBlock*retval
  1046 write :buildBlock*retval @this :buildBlockFromCfg:cfg
  1047 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
  1048 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
 
  1058 label *label23
  1059 set :moveTo.1:x :buildBlockAt:x
  1060 set :moveTo.1:y :buildBlockAt:y
-    * set *tmp350 :buildBlockAt:x
-    * set *tmp351 :buildBlockAt:y
-    * set :moveTo:x :moveTo.1:x
-    * set :moveTo:y :moveTo.1:y
+ 1061 set :moveTo:x :buildBlockAt:x
+ 1062 set :moveTo:y :buildBlockAt:y
  1063 set :moveTo:radius 6
  1064 setaddr :moveTo*retaddr *label317 (h:*label317)
  1065 call *label33 *invalid :moveTo*retval (m:*label317) (h:*label317)
 
  1072 jump *label315 always
  1073 label *label320
  1074 label *label321
-    * set :buildError:text "Cannot build at position"
-    * set :buildError:block :buildBlockAt:block
-    * set :buildError:type :buildBlockAt:type
-    * set :buildError:x :buildBlockAt:x
-    * set :buildError:y :buildBlockAt:y
  1075 set .ERROR "Cannot build at position"
  1076 set .ERROR_FOUND_BLOCK :buildBlockAt:block
  1077 set .ERROR_FOUND_TYPE :buildBlockAt:type
 
  1091 op equal *tmp361 :buildBlockAt:success false
  1092 op land *tmp362 *tmp360 *tmp361
  1093 jump *label326 equal *tmp362 false
-    * set :buildError.1:text "Error while building"
-    * set :buildError.1:block :buildBlockAt:block
-    * set :buildError.1:type :buildBlockAt:type
-    * set :buildError.1:x :buildBlockAt:x
-    * set :buildError.1:y :buildBlockAt:y
  1094 set .ERROR "Error while building"
  1095 set .ERROR_FOUND_BLOCK :buildBlockAt:block
  1096 set .ERROR_FOUND_TYPE :buildBlockAt:type
 
  1117 label *label325
  1118 control enabled processor6 true
  1119 ubind .builder
-    * set :logBlock:block :buildBlockAt:block
-    * set :logBlock:index :buildBlockAt:index
  1120 sensor :log:encodedId :buildBlockAt:block @id
  1121 read *tmp100 bank1 511
  1122 op sub *tmp372 *tmp100 1
  1123 write *tmp372 bank1 511
-    * set *tmp373 *tmp372
  1124 read *tmp0 processor1 "time"
  1125 op mul *tmp375 *tmp0 1000
  1126 op add *tmp376 :log:encodedId *tmp375
 
  1151 setaddr :buildBlockAt*retaddr *label338 (h:*label338)
  1152 call *label23 *invalid :buildBlockAt*retval (m:*label338) (h:*label338)
  1153 label *label338
-    * set :buildFirstTitaniumDrillAt:drill :buildBlockAt*retval
  1154 write :buildBlockAt*retval processor8 ":addTitaniumDrill:drill"
  1155 write false processor8 ":addTitaniumDrill*finished"
  1156 write 1 processor8 "@counter"
 
  1165 jump *label59 always
  1166 end
  1167 label *label49
-    * set :getFloor:x :titaniumDrillScore:x
-    * set :getFloor:y :titaniumDrillScore:y
  1168 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
-    * set *tmp384 :getFloor:floor
  1169 jump *label342 always
  1170 label *label342
  1171 jump *label343 notEqual :getFloor:floor @ore-titanium
 
  1189 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1190 set :moveTo.2:x :buildTitaniumDrill:x
  1191 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp394 :buildTitaniumDrill:x
-    * set *tmp395 :buildTitaniumDrill:y
-    * set :moveTo:x :moveTo.2:x
-    * set :moveTo:y :moveTo.2:y
+ 1192 set :moveTo:x :buildTitaniumDrill:x
+ 1193 set :moveTo:y :buildTitaniumDrill:y
  1194 set :moveTo:radius 6
  1195 setaddr :moveTo*retaddr *label353 (h:*label353)
  1196 call *label33 *invalid :moveTo*retval (m:*label353) (h:*label353)
 
  1260 setaddr :buildBlockAt*retaddr *label361 (h:*label361)
  1261 call *label23 *invalid :buildBlockAt*retval (m:*label361) (h:*label361)
  1262 label *label361
-    * set :buildTitaniumDrill:drill :buildBlockAt*retval
  1263 jump *label362 equal :buildBlockAt*retval null
  1264 write :buildBlockAt*retval processor8 ":addTitaniumDrill:drill"
  1265 write false processor8 ":addTitaniumDrill*finished"
 
  1269 read *tmp415 processor8 ":addTitaniumDrill*finished"
  1270 jump *label364 equal *tmp415 false
  1271 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
-    * set :setFlareTarget:target :buildTitaniumDrill:count
  1272 op min *tmp416 :buildTitaniumDrill:count 8
  1273 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1274 label *label365

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-9 instructions):
 
   398 return :supplyBlockFromCore*retaddr
   399 end
   400 label *label46
-    * set *tmp180 1
   401 read *tmp181 :unpackCfg:cfg 1
   402 op sub *tmp182 *tmp181 74
   403 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 2
   404 read *tmp185 :unpackCfg:cfg 2
   405 op sub *tmp186 *tmp185 74
   406 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 3
   407 read *tmp189 :unpackCfg:cfg 3
   408 op sub *tmp190 *tmp189 74
   409 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 4
   410 read *tmp193 :unpackCfg:cfg 4
   411 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 5
   412 read *tmp196 :unpackCfg:cfg 5
   413 op sub :unpackCfg:ind *tmp196 74
   414 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1051 label *label22
  1052 setaddr :buildBlockAt*retaddr *label59
  1053 label *label23
-    * set :moveTo.1:x :buildBlockAt:x
-    * set :moveTo.1:y :buildBlockAt:y
  1054 set :moveTo:x :buildBlockAt:x
  1055 set :moveTo:y :buildBlockAt:y
  1056 set :moveTo:radius 6
 
  1180 label *label50
  1181 jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1182 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * set :moveTo.2:x :buildTitaniumDrill:x
-    * set :moveTo.2:y :buildTitaniumDrill:y
  1183 set :moveTo:x :buildTitaniumDrill:x
  1184 set :moveTo:y :buildTitaniumDrill:y
  1185 set :moveTo:radius 6

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    77 setaddr :status3*retaddr *label66 (h:*label66)
    78 call *label30 *invalid :status3*retval (m:*label66) (h:*label66)
    79 label *label66
+   80 op sub *tmp107 :moveTo:radius 0.5
    81 label *label67
    82 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    83 jump *label69 notEqual *tmp105 false
-    * op sub *tmp107 :moveTo:radius 0.5
    84 ucontrol approach :moveTo:x :moveTo:y *tmp107
    85 label *label68
    86 jump *label67 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-12 instructions):
 
   612 jump *label223 equal A¨SSJh-container30 false
   613 sensor :supplyBase0:coal .core @coal
   614 sensor :supplyBase0:sand A¨SSJh-container30 @sand
-    * jump *label225 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp275 @coal
-    * jump *label226 always
-    * label *label225
-    * set *tmp275 @scrap
-    * label *label226
-    * jump *label227 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp277 .core
-    * jump *label228 always
-    * label *label227
-    * set *tmp277 A¨SSJh-container30
-    * label *label228
+  615 select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  616 select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand .core A¨SSJh-container30
   617 set :mineOre.1:ore *tmp275
   618 set :mineOre.1:block *tmp277
   619 setaddr :mineOre.1*retaddr *label229 (h:*label229)
 
   634 label *label231
   635 sensor :supplyBase0:coal.1 .core @coal
   636 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label232 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp281 @coal
-    * jump *label233 always
-    * label *label232
-    * set *tmp281 @sand
-    * label *label233
+  637 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   638 set :mineOre.2:ore *tmp281
   639 setaddr :mineOre.2*retaddr *label234 (h:*label234)
   640 call *label41 *invalid :mineOre.2*retval (m:*label234) (h:*label234)
 
   692 call *label28 *invalid :status1*retval (m:*label250) (h:*label250)
   693 label *label250
   694 jump *label251 notEqual A¨SSJh-container30 null
-    * sensor *tmp294 .core @coal
-    * sensor *tmp295 .core @sand
-    * op lessThanEq *tmp296 *tmp294 *tmp295
-    * op or *tmp297 .scrap *tmp296
-    * jump *label253 equal *tmp297 false
-    * set *tmp298 @coal
-    * jump *label254 always
-    * label *label253
-    * set *tmp298 @sand
-    * label *label254
+  695 sensor *tmp294 .core @coal
+  696 sensor *tmp295 .core @sand
+  697 op lessThanEq *tmp296 *tmp294 *tmp295
+  698 op or *tmp297 .scrap *tmp296
+  699 select *tmp298 notEqual *tmp297 false @coal @sand
   700 set :mineOre.2:ore *tmp298
   701 setaddr :mineOre.2*retaddr *label255 (h:*label255)
   702 call *label41 *invalid :mineOre.2*retval (m:*label255) (h:*label255)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   577 label *label193
   578 label *label178
   579 label *label179
+  580 set *tmp254 100
   581 sensor *tmp252 .core @titanium
-    * jump *label208 greaterThanEq *tmp252 titanium
+  582 jump *label209 greaterThanEq *tmp252 titanium
   583 sensor *tmp255 .core @titanium
   584 op sub *tmp256 titanium *tmp255
   585 op min *tmp254 5 *tmp256
   586 jump *label209 always
-    * label *label208
-    * set *tmp254 100
   587 label *label209
   588 sensor *tmp258 .titaniumDrill @titanium
   589 jump *label210 greaterThanEq *tmp258 *tmp254

Modifications by Unroll iteration loop at BuilderController.mnd:203:5 (-2 instructions):
 
   805 setaddr :meetTarget*retaddr *label59
   806 label *label15
   807 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp326 *label281
-    * jump *label278 always
-    * multilabel *label281 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp326 *label282
-    * jump *label278 always
-    * multilabel *label282 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp326 *label283
-    * jump *label278 always
-    * multilabel *label283 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp326 *label284
-    * jump *label278 always
-    * multilabel *label284 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp326 *label285
-    * jump *label278 always
-    * multilabel *label285 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp326 *label286
-    * jump *label278 always
-    * multilabel *label286 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp326 *label287
-    * label *label278
-    * op sign *tmp327 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label279
-    * multijump *tmp326 0 0 (m:marker0)
-    * multilabel *label287 (m:marker0)
-    * label *label280
+  808 set :meetTarget:t :meetTarget:copper
+  809 label *label388
+  810 op sign *tmp327 :meetTarget:t
+  811 op add :meetTarget:count :meetTarget:count *tmp327
+  812 label *label389
+  813 set :meetTarget:t :meetTarget:lead
+  814 label *label392
+  815 op sign *tmp327 :meetTarget:t
+  816 op add :meetTarget:count :meetTarget:count *tmp327
+  817 label *label393
+  818 set :meetTarget:t :meetTarget:graphite
+  819 label *label396
+  820 op sign *tmp327 :meetTarget:t
+  821 op add :meetTarget:count :meetTarget:count *tmp327
+  822 label *label397
+  823 set :meetTarget:t :meetTarget:silicon
+  824 label *label400
+  825 op sign *tmp327 :meetTarget:t
+  826 op add :meetTarget:count :meetTarget:count *tmp327
+  827 label *label401
+  828 set :meetTarget:t :meetTarget:titanium
+  829 label *label404
+  830 op sign *tmp327 :meetTarget:t
+  831 op add :meetTarget:count :meetTarget:count *tmp327
+  832 label *label405
+  833 set :meetTarget:t :meetTarget:metaglass
+  834 label *label408
+  835 op sign *tmp327 :meetTarget:t
+  836 op add :meetTarget:count :meetTarget:count *tmp327
+  837 label *label409
+  838 set :meetTarget:t :meetTarget:thorium
+  839 label *label412
+  840 op sign *tmp327 :meetTarget:t
+  841 op add :meetTarget:count :meetTarget:count *tmp327
+  842 label *label413
+  843 label *label280
   844 write :meetTarget:count processor2 ".totalTargets"
   845 write :meetTarget:block processor2 ".nextBlock"
   846 write :meetTarget:copper processor2 ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   807 set :meetTarget:count 0
   808 set :meetTarget:t :meetTarget:copper
   809 label *label388
-    * op sign *tmp327 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp327
+  810 op sign *tmp327 :meetTarget:copper
+  811 op add :meetTarget:count 0 *tmp327
   812 label *label389
   813 set :meetTarget:t :meetTarget:lead
   814 label *label392
-    * op sign *tmp327 :meetTarget:t
+  815 op sign *tmp327 :meetTarget:lead
   816 op add :meetTarget:count :meetTarget:count *tmp327
   817 label *label393
   818 set :meetTarget:t :meetTarget:graphite
   819 label *label396
-    * op sign *tmp327 :meetTarget:t
+  820 op sign *tmp327 :meetTarget:graphite
   821 op add :meetTarget:count :meetTarget:count *tmp327
   822 label *label397
   823 set :meetTarget:t :meetTarget:silicon
   824 label *label400
-    * op sign *tmp327 :meetTarget:t
+  825 op sign *tmp327 :meetTarget:silicon
   826 op add :meetTarget:count :meetTarget:count *tmp327
   827 label *label401
   828 set :meetTarget:t :meetTarget:titanium
   829 label *label404
-    * op sign *tmp327 :meetTarget:t
+  830 op sign *tmp327 :meetTarget:titanium
   831 op add :meetTarget:count :meetTarget:count *tmp327
   832 label *label405
   833 set :meetTarget:t :meetTarget:metaglass
   834 label *label408
-    * op sign *tmp327 :meetTarget:t
+  835 op sign *tmp327 :meetTarget:metaglass
   836 op add :meetTarget:count :meetTarget:count *tmp327
   837 label *label409
   838 set :meetTarget:t :meetTarget:thorium
   839 label *label412
-    * op sign *tmp327 :meetTarget:t
+  840 op sign *tmp327 :meetTarget:thorium
   841 op add :meetTarget:count :meetTarget:count *tmp327
   842 label *label413
   843 label *label280

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   804 label *label14
   805 setaddr :meetTarget*retaddr *label59
   806 label *label15
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
   807 label *label388
   808 op sign *tmp327 :meetTarget:copper
   809 op add :meetTarget:count 0 *tmp327
   810 label *label389
-    * set :meetTarget:t :meetTarget:lead
   811 label *label392
   812 op sign *tmp327 :meetTarget:lead
   813 op add :meetTarget:count :meetTarget:count *tmp327
   814 label *label393
-    * set :meetTarget:t :meetTarget:graphite
   815 label *label396
   816 op sign *tmp327 :meetTarget:graphite
   817 op add :meetTarget:count :meetTarget:count *tmp327
   818 label *label397
-    * set :meetTarget:t :meetTarget:silicon
   819 label *label400
   820 op sign *tmp327 :meetTarget:silicon
   821 op add :meetTarget:count :meetTarget:count *tmp327
   822 label *label401
-    * set :meetTarget:t :meetTarget:titanium
   823 label *label404
   824 op sign *tmp327 :meetTarget:titanium
   825 op add :meetTarget:count :meetTarget:count *tmp327
   826 label *label405
-    * set :meetTarget:t :meetTarget:metaglass
   827 label *label408
   828 op sign *tmp327 :meetTarget:metaglass
   829 op add :meetTarget:count :meetTarget:count *tmp327
   830 label *label409
-    * set :meetTarget:t :meetTarget:thorium
   831 label *label412
   832 op sign *tmp327 :meetTarget:thorium
   833 op add :meetTarget:count :meetTarget:count *tmp327

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-18 instructions):
 
    43 wait 1e12
    44 jump *label59 always
    45 end
-    * label *label28
-    * write :status1:text processor2 ".status1"
-    * label *label60
-    * return :status1*retaddr
-    * end
    46 label *label29
    47 write :status2:text processor2 ".status2"
    48 write :status2:item processor2 ".item2"
 
   426 write *tmp209 processor7 ".sandTarget"
   427 jump *label155 equal .thoriumContainer false
   428 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label158 (h:*label158)
-    * call *label28 *invalid :status1*retval (m:*label158) (h:*label158)
-    * label *label158
+  429 label *label417
+  430 write :status1:text processor2 ".status1"
+  431 label *label418
   432 sensor *tmp211 .thoriumBattery @totalPower
   433 jump *label159 greaterThanEq *tmp211 2000
   434 sensor *tmp214 .thoriumGenerator @coal
 
   471 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   472 jump *label172 lessThanEq *tmp81 1
   473 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label175 (h:*label175)
-    * call *label28 *invalid :status1*retval (m:*label175) (h:*label175)
-    * label *label175
+  474 label *label419
+  475 write :status1:text processor2 ".status1"
+  476 label *label420
   477 set :mineOre.2:ore @coal
   478 setaddr :mineOre.2*retaddr *label176 (h:*label176)
   479 call *label41 *invalid :mineOre.2*retval (m:*label176) (h:*label176)
 
   488 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   489 jump *label182 greaterThanEq *tmp230 5
   490 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label184 (h:*label184)
-    * call *label28 *invalid :status1*retval (m:*label184) (h:*label184)
-    * label *label184
+  491 label *label421
+  492 write :status1:text processor2 ".status1"
+  493 label *label422
   494 set :supplyBlock:block AJEMJJ-graphite-press0
   495 set :supplyBlock:ore @coal
   496 setaddr :supplyBlock*retaddr *label185 (h:*label185)
 
   506 sensor *tmp236 AJRJM-combustion-generator3 @coal
   507 jump *label188 greaterThanEq *tmp236 2
   508 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label190 (h:*label190)
-    * call *label28 *invalid :status1*retval (m:*label190) (h:*label190)
-    * label *label190
+  509 label *label423
+  510 write :status1:text processor2 ".status1"
+  511 label *label424
   512 set :supplyBlock:block AJRJM-combustion-generator3
   513 set :supplyBlock:ore @coal
   514 setaddr :supplyBlock*retaddr *label191 (h:*label191)
 
   524 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   525 jump *label194 greaterThanEq *tmp242 5
   526 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label196 (h:*label196)
-    * call *label28 *invalid :status1*retval (m:*label196) (h:*label196)
-    * label *label196
+  527 label *label425
+  528 write :status1:text processor2 ".status1"
+  529 label *label426
   530 set :supplyBlock:block ALMQJN-silicon-smelter4
   531 set :supplyBlock:ore @coal
   532 setaddr :supplyBlock*retaddr *label197 (h:*label197)
 
   541 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   542 jump *label202 greaterThanEq *tmp249 10
   543 set :status1:text "Goal 3a: scrap for silicon requirement"
-    * setaddr :status1*retaddr *label204 (h:*label204)
-    * call *label28 *invalid :status1*retval (m:*label204) (h:*label204)
-    * label *label204
+  544 label *label427
+  545 write :status1:text processor2 ".status1"
+  546 label *label428
   547 set :supplyBlock:block AXPRJd-pulverizer26
   548 set :supplyBlock:ore @scrap
   549 setaddr :supplyBlock*retaddr *label205 (h:*label205)
 
   555 jump *label201 always
   556 label *label200
   557 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label206 (h:*label206)
-    * call *label28 *invalid :status1*retval (m:*label206) (h:*label206)
-    * label *label206
+  558 label *label429
+  559 write :status1:text processor2 ".status1"
+  560 label *label430
   561 set :supplyBlock:block ALMQJN-silicon-smelter4
   562 set :supplyBlock:ore @sand
   563 setaddr :supplyBlock*retaddr *label207 (h:*label207)
 
   587 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   588 jump *label214 greaterThanEq *tmp263 *tmp264
   589 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label216 (h:*label216)
-    * call *label28 *invalid :status1*retval (m:*label216) (h:*label216)
-    * label *label216
+  590 label *label431
+  591 write :status1:text processor2 ".status1"
+  592 label *label432
   593 set :mineOre.2:ore @coal
   594 setaddr :mineOre.2*retaddr *label217 (h:*label217)
   595 call *label41 *invalid :mineOre.2*retval (m:*label217) (h:*label217)
 
   600 jump *label218 greaterThanEq *tmp267 silicon
   601 jump *label220 equal .scrap false
   602 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label222 (h:*label222)
-    * call *label28 *invalid :status1*retval (m:*label222) (h:*label222)
-    * label *label222
+  603 label *label433
+  604 write :status1:text processor2 ".status1"
+  605 label *label434
   606 jump *label223 equal A¨SSJh-container30 false
   607 sensor :supplyBase0:coal .core @coal
   608 sensor :supplyBase0:sand A¨SSJh-container30 @sand
 
   623 jump *label221 always
   624 label *label220
   625 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label231 (h:*label231)
-    * call *label28 *invalid :status1*retval (m:*label231) (h:*label231)
-    * label *label231
+  626 label *label435
+  627 write :status1:text processor2 ".status1"
+  628 label *label436
   629 sensor :supplyBase0:coal.1 .core @coal
   630 sensor :supplyBase0:sand.1 .core @sand
   631 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   639 sensor *tmp282 .core @copper
   640 jump *label235 greaterThanEq *tmp282 copper
   641 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label237 (h:*label237)
-    * call *label28 *invalid :status1*retval (m:*label237) (h:*label237)
-    * label *label237
+  642 label *label437
+  643 write :status1:text processor2 ".status1"
+  644 label *label438
   645 set :mineOre.2:ore @copper
   646 setaddr :mineOre.2*retaddr *label238 (h:*label238)
   647 call *label41 *invalid :mineOre.2*retval (m:*label238) (h:*label238)
 
   651 sensor *tmp285 .core @lead
   652 jump *label239 greaterThanEq *tmp285 lead
   653 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label241 (h:*label241)
-    * call *label28 *invalid :status1*retval (m:*label241) (h:*label241)
-    * label *label241
+  654 label *label439
+  655 write :status1:text processor2 ".status1"
+  656 label *label440
   657 set :mineOre.2:ore @lead
   658 setaddr :mineOre.2*retaddr *label242 (h:*label242)
   659 call *label41 *invalid :mineOre.2*retval (m:*label242) (h:*label242)
 
   663 sensor *tmp288 .core @metaglass
   664 jump *label243 greaterThanEq *tmp288 metaglass
   665 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label245 (h:*label245)
-    * call *label28 *invalid :status1*retval (m:*label245) (h:*label245)
-    * label *label245
+  666 label *label441
+  667 write :status1:text processor2 ".status1"
+  668 label *label442
   669 jump *label246 equal .scrap false
   670 set :mineOre.1:ore @scrap
   671 set :mineOre.1:block .sandContainer
 
   682 jump *label244 always
   683 label *label243
   684 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label250 (h:*label250)
-    * call *label28 *invalid :status1*retval (m:*label250) (h:*label250)
-    * label *label250
+  685 label *label443
+  686 write :status1:text processor2 ".status1"
+  687 label *label444
   688 jump *label251 notEqual A¨SSJh-container30 null
   689 sensor *tmp294 .core @coal
   690 sensor *tmp295 .core @sand
 
   725 jump *label211 always
   726 label *label210
   727 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label260 (h:*label260)
-    * call *label28 *invalid :status1*retval (m:*label260) (h:*label260)
-    * label *label260
+  728 label *label445
+  729 write :status1:text processor2 ".status1"
+  730 label *label446
   731 set :fetchBlock:block .titaniumDrill
   732 set :fetchBlock:item @titanium
   733 setaddr :fetchBlock*retaddr *label261 (h:*label261)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   427 jump *label155 equal .thoriumContainer false
   428 set :status1:text "Phase 2: servicing thorium drill"
   429 label *label417
-    * write :status1:text processor2 ".status1"
+  430 write "Phase 2: servicing thorium drill" processor2 ".status1"
   431 label *label418
   432 sensor *tmp211 .thoriumBattery @totalPower
   433 jump *label159 greaterThanEq *tmp211 2000
 
   472 jump *label172 lessThanEq *tmp81 1
   473 set :status1:text "Phase 1: supplying base"
   474 label *label419
-    * write :status1:text processor2 ".status1"
+  475 write "Phase 1: supplying base" processor2 ".status1"
   476 label *label420
   477 set :mineOre.2:ore @coal
   478 setaddr :mineOre.2*retaddr *label176 (h:*label176)
 
   489 jump *label182 greaterThanEq *tmp230 5
   490 set :status1:text "Goal 1: graphite requirement"
   491 label *label421
-    * write :status1:text processor2 ".status1"
+  492 write "Goal 1: graphite requirement" processor2 ".status1"
   493 label *label422
   494 set :supplyBlock:block AJEMJJ-graphite-press0
   495 set :supplyBlock:ore @coal
 
   507 jump *label188 greaterThanEq *tmp236 2
   508 set :status1:text "Goal 4: supplying generator"
   509 label *label423
-    * write :status1:text processor2 ".status1"
+  510 write "Goal 4: supplying generator" processor2 ".status1"
   511 label *label424
   512 set :supplyBlock:block AJRJM-combustion-generator3
   513 set :supplyBlock:ore @coal
 
   525 jump *label194 greaterThanEq *tmp242 5
   526 set :status1:text "Goal 2: coal for silicon requirement"
   527 label *label425
-    * write :status1:text processor2 ".status1"
+  528 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   529 label *label426
   530 set :supplyBlock:block ALMQJN-silicon-smelter4
   531 set :supplyBlock:ore @coal
 
   542 jump *label202 greaterThanEq *tmp249 10
   543 set :status1:text "Goal 3a: scrap for silicon requirement"
   544 label *label427
-    * write :status1:text processor2 ".status1"
+  545 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   546 label *label428
   547 set :supplyBlock:block AXPRJd-pulverizer26
   548 set :supplyBlock:ore @scrap
 
   556 label *label200
   557 set :status1:text "Goal 3: sand for silicon requirement"
   558 label *label429
-    * write :status1:text processor2 ".status1"
+  559 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   560 label *label430
   561 set :supplyBlock:block ALMQJN-silicon-smelter4
   562 set :supplyBlock:ore @sand
 
   588 jump *label214 greaterThanEq *tmp263 *tmp264
   589 set :status1:text "Goal 5: supplying generator"
   590 label *label431
-    * write :status1:text processor2 ".status1"
+  591 write "Goal 5: supplying generator" processor2 ".status1"
   592 label *label432
   593 set :mineOre.2:ore @coal
   594 setaddr :mineOre.2*retaddr *label217 (h:*label217)
 
   601 jump *label220 equal .scrap false
   602 set :status1:text "Goal 6: silicon requirement"
   603 label *label433
-    * write :status1:text processor2 ".status1"
+  604 write "Goal 6: silicon requirement" processor2 ".status1"
   605 label *label434
   606 jump *label223 equal A¨SSJh-container30 false
   607 sensor :supplyBase0:coal .core @coal
 
   624 label *label220
   625 set :status1:text "Goal 6: silicon requirement"
   626 label *label435
-    * write :status1:text processor2 ".status1"
+  627 write "Goal 6: silicon requirement" processor2 ".status1"
   628 label *label436
   629 sensor :supplyBase0:coal.1 .core @coal
   630 sensor :supplyBase0:sand.1 .core @sand
 
   640 jump *label235 greaterThanEq *tmp282 copper
   641 set :status1:text "Goal 7: copper requirement"
   642 label *label437
-    * write :status1:text processor2 ".status1"
+  643 write "Goal 7: copper requirement" processor2 ".status1"
   644 label *label438
   645 set :mineOre.2:ore @copper
   646 setaddr :mineOre.2*retaddr *label238 (h:*label238)
 
   652 jump *label239 greaterThanEq *tmp285 lead
   653 set :status1:text "Goal 8: lead requirement"
   654 label *label439
-    * write :status1:text processor2 ".status1"
+  655 write "Goal 8: lead requirement" processor2 ".status1"
   656 label *label440
   657 set :mineOre.2:ore @lead
   658 setaddr :mineOre.2*retaddr *label242 (h:*label242)
 
   664 jump *label243 greaterThanEq *tmp288 metaglass
   665 set :status1:text "Goal 9: metaglass requirement"
   666 label *label441
-    * write :status1:text processor2 ".status1"
+  667 write "Goal 9: metaglass requirement" processor2 ".status1"
   668 label *label442
   669 jump *label246 equal .scrap false
   670 set :mineOre.1:ore @scrap
 
   683 label *label243
   684 set :status1:text "Goal 10: supplying base"
   685 label *label443
-    * write :status1:text processor2 ".status1"
+  686 write "Goal 10: supplying base" processor2 ".status1"
   687 label *label444
   688 jump *label251 notEqual A¨SSJh-container30 null
   689 sensor *tmp294 .core @coal
 
   726 label *label210
   727 set :status1:text "Goal 11: Fetching titanium"
   728 label *label445
-    * write :status1:text processor2 ".status1"
+  729 write "Goal 11: Fetching titanium" processor2 ".status1"
   730 label *label446
   731 set :fetchBlock:block .titaniumDrill
   732 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
   425 op max *tmp209 0 *tmp208
   426 write *tmp209 processor7 ".sandTarget"
   427 jump *label155 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   428 label *label417
   429 write "Phase 2: servicing thorium drill" processor2 ".status1"
   430 label *label418
 
   469 label *label155
   470 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   471 jump *label172 lessThanEq *tmp81 1
-    * set :status1:text "Phase 1: supplying base"
   472 label *label419
   473 write "Phase 1: supplying base" processor2 ".status1"
   474 label *label420
 
   485 jump *label180 greaterThanEq *tmp227 graphite
   486 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   487 jump *label182 greaterThanEq *tmp230 5
-    * set :status1:text "Goal 1: graphite requirement"
   488 label *label421
   489 write "Goal 1: graphite requirement" processor2 ".status1"
   490 label *label422
 
   502 jump *label186 greaterThanEq *tmp233 .powerTarget
   503 sensor *tmp236 AJRJM-combustion-generator3 @coal
   504 jump *label188 greaterThanEq *tmp236 2
-    * set :status1:text "Goal 4: supplying generator"
   505 label *label423
   506 write "Goal 4: supplying generator" processor2 ".status1"
   507 label *label424
 
   519 jump *label192 greaterThanEq *tmp239 silicon
   520 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   521 jump *label194 greaterThanEq *tmp242 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   522 label *label425
   523 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   524 label *label426
 
   535 jump *label200 equal .scrap false
   536 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   537 jump *label202 greaterThanEq *tmp249 10
-    * set :status1:text "Goal 3a: scrap for silicon requirement"
   538 label *label427
   539 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   540 label *label428
 
   548 label *label203
   549 jump *label201 always
   550 label *label200
-    * set :status1:text "Goal 3: sand for silicon requirement"
   551 label *label429
   552 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   553 label *label430
 
   579 sensor *tmp263 AJTJK-battery1 @totalPower
   580 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   581 jump *label214 greaterThanEq *tmp263 *tmp264
-    * set :status1:text "Goal 5: supplying generator"
   582 label *label431
   583 write "Goal 5: supplying generator" processor2 ".status1"
   584 label *label432
 
   591 sensor *tmp267 .core @silicon
   592 jump *label218 greaterThanEq *tmp267 silicon
   593 jump *label220 equal .scrap false
-    * set :status1:text "Goal 6: silicon requirement"
   594 label *label433
   595 write "Goal 6: silicon requirement" processor2 ".status1"
   596 label *label434
 
   613 label *label224
   614 jump *label221 always
   615 label *label220
-    * set :status1:text "Goal 6: silicon requirement"
   616 label *label435
   617 write "Goal 6: silicon requirement" processor2 ".status1"
   618 label *label436
 
   628 label *label218
   629 sensor *tmp282 .core @copper
   630 jump *label235 greaterThanEq *tmp282 copper
-    * set :status1:text "Goal 7: copper requirement"
   631 label *label437
   632 write "Goal 7: copper requirement" processor2 ".status1"
   633 label *label438
 
   639 label *label235
   640 sensor *tmp285 .core @lead
   641 jump *label239 greaterThanEq *tmp285 lead
-    * set :status1:text "Goal 8: lead requirement"
   642 label *label439
   643 write "Goal 8: lead requirement" processor2 ".status1"
   644 label *label440
 
   650 label *label239
   651 sensor *tmp288 .core @metaglass
   652 jump *label243 greaterThanEq *tmp288 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   653 label *label441
   654 write "Goal 9: metaglass requirement" processor2 ".status1"
   655 label *label442
 
   668 label *label247
   669 jump *label244 always
   670 label *label243
-    * set :status1:text "Goal 10: supplying base"
   671 label *label443
   672 write "Goal 10: supplying base" processor2 ".status1"
   673 label *label444
 
   710 label *label213
   711 jump *label211 always
   712 label *label210
-    * set :status1:text "Goal 11: Fetching titanium"
   713 label *label445
   714 write "Goal 11: Fetching titanium" processor2 ".status1"
   715 label *label446

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
    50 label *label61
    51 return :status2*retaddr
    52 end
-    * label *label30
-    * write :status3:text processor2 ".status3"
-    * label *label62
-    * return :status3*retaddr
-    * end
    53 label *label31
    54 write :transportStatus:target processor2 ".transportTarget"
    55 write :transportStatus:item processor2 ".transportItem"
 
    64 end
    65 label *label33
    66 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label66 (h:*label66)
-    * call *label30 *invalid :status3*retval (m:*label66) (h:*label66)
-    * label *label66
+   67 label *label447
+   68 write :status3:text processor2 ".status3"
+   69 label *label448
    70 op sub *tmp107 :moveTo:radius 0.5
    71 label *label67
    72 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
 
    80 end
    81 label *label34
    82 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label71 (h:*label71)
-    * call *label30 *invalid :status3*retval (m:*label71) (h:*label71)
-    * label *label71
+   83 label *label449
+   84 write :status3:text processor2 ".status3"
+   85 label *label450
    86 label *label72
    87 sensor *tmp108 @unit @firstItem
    88 jump *label75 equal *tmp108 null
 
   122 end
   123 label *label37
   124 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label84 (h:*label84)
-    * call *label30 *invalid :status3*retval (m:*label84) (h:*label84)
-    * label *label84
+  125 label *label451
+  126 write :status3:text processor2 ".status3"
+  127 label *label452
   128 sensor *tmp117 @unit @firstItem
   129 jump *label85 notEqual *tmp117 :depositItems:item
   130 set :moveToBlock:block :depositItems:block
 
   197 label *label103
   198 label *label104
   199 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label106 (h:*label106)
-    * call *label30 *invalid :status3*retval (m:*label106) (h:*label106)
-    * label *label106
+  200 label *label453
+  201 write :status3:text processor2 ".status3"
+  202 label *label454
   203 op add :mineOre:stop @second 10
   204 label *label107
   205 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    65 label *label33
    66 set :status3:text "Moving..."
    67 label *label447
-    * write :status3:text processor2 ".status3"
+   68 write "Moving..." processor2 ".status3"
    69 label *label448
    70 op sub *tmp107 :moveTo:radius 0.5
    71 label *label67
 
    81 label *label34
    82 set :status3:text "Moving..."
    83 label *label449
-    * write :status3:text processor2 ".status3"
+   84 write "Moving..." processor2 ".status3"
    85 label *label450
    86 label *label72
    87 sensor *tmp108 @unit @firstItem
 
   123 label *label37
   124 set :status3:text "Depositing..."
   125 label *label451
-    * write :status3:text processor2 ".status3"
+  126 write "Depositing..." processor2 ".status3"
   127 label *label452
   128 sensor *tmp117 @unit @firstItem
   129 jump *label85 notEqual *tmp117 :depositItems:item
 
   198 label *label104
   199 set :status3:text "Mining..."
   200 label *label453
-    * write :status3:text processor2 ".status3"
+  201 write "Mining..." processor2 ".status3"
   202 label *label454
   203 op add :mineOre:stop @second 10
   204 label *label107

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    63 return :error*retaddr
    64 end
    65 label *label33
-    * set :status3:text "Moving..."
    66 label *label447
    67 write "Moving..." processor2 ".status3"
    68 label *label448
 
    78 return :moveTo*retaddr
    79 end
    80 label *label34
-    * set :status3:text "Moving..."
    81 label *label449
    82 write "Moving..." processor2 ".status3"
    83 label *label450
 
   119 return :moveToBlock*retaddr
   120 end
   121 label *label37
-    * set :status3:text "Depositing..."
   122 label *label451
   123 write "Depositing..." processor2 ".status3"
   124 label *label452
 
   193 label *label105
   194 label *label103
   195 label *label104
-    * set :status3:text "Mining..."
   196 label *label453
   197 write "Mining..." processor2 ".status3"
   198 label *label454

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    56 label *label63
    57 return :transportStatus*retaddr
    58 end
-    * label *label32
-    * set .ERROR :error:error
-    * stop
-    * label *label64
-    * return :error*retaddr
-    * end
    59 label *label33
    60 label *label447
    61 write "Moving..." processor2 ".status3"
 
   154 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label96 notEqual *tmp127 false
   156 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label98 (h:*label98)
-    * call *label32 *invalid :error*retval (m:*label98) (h:*label98)
-    * label *label98
+  157 label *label455
+  158 set .ERROR :error:error
+  159 stop
+  160 label *label456
   161 label *label96
   162 label *label97
   163 label *label95

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   155 jump *label96 notEqual *tmp127 false
   156 set :error:error "Cannot locate ore"
   157 label *label455
-    * set .ERROR :error:error
+  158 set .ERROR "Cannot locate ore"
   159 stop
   160 label *label456
   161 label *label96

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   153 label *label38
   154 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label96 notEqual *tmp127 false
-    * set :error:error "Cannot locate ore"
   156 label *label455
   157 set .ERROR "Cannot locate ore"
   158 stop

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
   100 label *label77
   101 return :dropAll*retaddr
   102 end
-    * label *label36
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label82 (h:*label82)
-    * call *label33 *invalid :moveTo*retval (m:*label82) (h:*label82)
-    * label *label82
-    * label *label81
-    * return :moveToBlock*retaddr
-    * end
   103 label *label37
   104 label *label451
   105 write "Depositing..." processor2 ".status3"
 
   108 jump *label85 notEqual *tmp117 :depositItems:item
   109 set :moveToBlock:block :depositItems:block
   110 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label87 (h:*label87)
-    * call *label36 *invalid :moveToBlock*retval (m:*label87) (h:*label87)
-    * label *label87
+  111 label *label457
+  112 sensor *tmp115 :moveToBlock:block @x
+  113 sensor *tmp116 :moveToBlock:block @y
+  114 set :moveTo:x *tmp115
+  115 set :moveTo:y *tmp116
+  116 set :moveTo:radius :moveToBlock:radius
+  117 setaddr :moveTo*retaddr *label458 (h:*label458)
+  118 call *label33 *invalid :moveTo*retval (m:*label458) (h:*label458)
+  119 label *label458
+  120 label *label459
   121 sensor :depositItems:cap :depositItems:block @itemCapacity
   122 label *label88
   123 ucontrol itemDrop :depositItems:block 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   109 set :moveToBlock:block :depositItems:block
   110 set :moveToBlock:radius 6
   111 label *label457
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
+  112 sensor *tmp115 :depositItems:block @x
+  113 sensor *tmp116 :depositItems:block @y
   114 set :moveTo:x *tmp115
   115 set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
+  116 set :moveTo:radius 6
   117 setaddr :moveTo*retaddr *label458 (h:*label458)
   118 call *label33 *invalid :moveTo*retval (m:*label458) (h:*label458)
   119 label *label458

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   106 label *label452
   107 sensor *tmp117 @unit @firstItem
   108 jump *label85 notEqual *tmp117 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   109 label *label457
   110 sensor *tmp115 :depositItems:block @x
   111 sensor *tmp116 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   143 label *label83
   144 return :depositItems*retaddr
   145 end
-    * label *label38
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * jump *label96 notEqual *tmp127 false
-    * label *label455
-    * set .ERROR "Cannot locate ore"
-    * stop
-    * label *label456
-    * label *label96
-    * label *label97
-    * label *label95
-    * return :locateOre*retaddr
-    * end
   146 label *label39
   147 op min :mineOre:amount :mineOre:amount 28
   148 set :transportStatus:target :mineOre:amount
 
   151 call *label31 *invalid :transportStatus*retval (m:*label100) (h:*label100)
   152 label *label100
   153 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label101 (h:*label101)
-    * call *label38 *invalid :locateOre*retval (m:*label101) (h:*label101)
-    * label *label101
+  154 label *label460
+  155 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  156 jump *label463 notEqual *tmp127 false
+  157 label *label461
+  158 set .ERROR "Cannot locate ore"
+  159 stop
+  160 label *label462
+  161 label *label463
+  162 label *label464
+  163 label *label465
   164 set :mineOre:x :locateOre:x
   165 set :mineOre:y :locateOre:y
   166 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   152 label *label100
   153 set :locateOre:ore :mineOre:ore
   154 label *label460
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  155 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   156 jump *label463 notEqual *tmp127 false
   157 label *label461
   158 set .ERROR "Cannot locate ore"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   150 setaddr :transportStatus*retaddr *label100 (h:*label100)
   151 call *label31 *invalid :transportStatus*retval (m:*label100) (h:*label100)
   152 label *label100
-    * set :locateOre:ore :mineOre:ore
   153 label *label460
   154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label463 notEqual *tmp127 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 (-4 instructions):
 
   317 label *label137
   318 return :supplyBlock*retaddr
   319 end
-    * label *label44
-    * sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min :supplyBlockFromCore:cap *tmp169 28
-    * set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label143 (h:*label143)
-    * call *label31 *invalid :transportStatus*retval (m:*label143) (h:*label143)
-    * label *label143
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label144 (h:*label144)
-    * call *label29 *invalid :status2*retval (m:*label144) (h:*label144)
-    * label *label144
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label145 (h:*label145)
-    * call *label34 *invalid :moveToEmpty*retval (m:*label145) (h:*label145)
-    * label *label145
-    * setaddr :dropAll*retaddr *label146 (h:*label146)
-    * call *label35 *invalid :dropAll*retval (m:*label146) (h:*label146)
-    * label *label146
-    * label *label147
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp174 *tmp172 *tmp173
-    * jump *label150 equal *tmp174 false
-    * ucontrol itemDrop @air 1000
-    * label *label150
-    * label *label151
-    * label *label148
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
-    * op land *tmp179 *tmp177 *tmp178
-    * jump *label147 notEqual *tmp179 false
-    * label *label149
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label152 (h:*label152)
-    * call *label37 *invalid :depositItems*retval (m:*label152) (h:*label152)
-    * label *label152
-    * label *label142
-    * return :supplyBlockFromCore*retaddr
-    * end
   320 label *label46
   321 read *tmp181 :unpackCfg:cfg 1
   322 op sub *tmp182 *tmp181 74
 
   368 label *label163
   369 set :supplyBlockFromCore:target .thoriumGenerator
   370 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label166 (h:*label166)
-    * call *label44 *invalid :supplyBlockFromCore*retval (m:*label166) (h:*label166)
-    * label *label166
+  371 label *label466
+  372 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
+  373 op min :supplyBlockFromCore:cap *tmp169 28
+  374 set :transportStatus:target :supplyBlockFromCore:cap
+  375 set :transportStatus:item :supplyBlockFromCore:item
+  376 setaddr :transportStatus*retaddr *label467 (h:*label467)
+  377 call *label31 *invalid :transportStatus*retval (m:*label467) (h:*label467)
+  378 label *label467
+  379 set :status2:text "Transferring "
+  380 set :status2:item :supplyBlockFromCore:item
+  381 set :status2:block :supplyBlockFromCore:target
+  382 setaddr :status2*retaddr *label468 (h:*label468)
+  383 call *label29 *invalid :status2*retval (m:*label468) (h:*label468)
+  384 label *label468
+  385 set :moveToEmpty:x .coreX
+  386 set :moveToEmpty:y .coreY
+  387 setaddr :moveToEmpty*retaddr *label469 (h:*label469)
+  388 call *label34 *invalid :moveToEmpty*retval (m:*label469) (h:*label469)
+  389 label *label469
+  390 setaddr :dropAll*retaddr *label470 (h:*label470)
+  391 call *label35 *invalid :dropAll*retval (m:*label470) (h:*label470)
+  392 label *label470
+  393 label *label471
+  394 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  395 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  396 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
+  397 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  398 op land *tmp174 *tmp172 *tmp173
+  399 jump *label472 equal *tmp174 false
+  400 ucontrol itemDrop @air 1000
+  401 label *label472
+  402 label *label473
+  403 label *label474
+  404 sensor *tmp176 @unit :supplyBlockFromCore:item
+  405 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
+  406 sensor *tmp178 .core :supplyBlockFromCore:item
+  407 op land *tmp179 *tmp177 *tmp178
+  408 jump *label471 notEqual *tmp179 false
+  409 label *label475
+  410 set :depositItems:block :supplyBlockFromCore:target
+  411 set :depositItems:item :supplyBlockFromCore:item
+  412 setaddr :depositItems*retaddr *label476 (h:*label476)
+  413 call *label37 *invalid :depositItems*retval (m:*label476) (h:*label476)
+  414 label *label476
+  415 label *label477
   416 label *label164
   417 label *label161
   418 label *label162

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   372 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   373 op min :supplyBlockFromCore:cap *tmp169 28
   374 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
+  375 set :transportStatus:item @coal
   376 setaddr :transportStatus*retaddr *label467 (h:*label467)
   377 call *label31 *invalid :transportStatus*retval (m:*label467) (h:*label467)
   378 label *label467

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
    93 label *label78
    94 sensor *tmp113 @unit @firstItem
    95 jump *label80 equal *tmp113 null
+   96 label *label478
    97 ucontrol itemDrop @air 1000
    98 label *label79
-    * jump *label78 always
+   99 sensor *tmp113 @unit @firstItem
+  100 jump *label478 notEqual *tmp113 null
   101 label *label80
   102 label *label77
   103 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
    64 label *label67
    65 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    66 jump *label69 notEqual *tmp105 false
+   67 label *label479
    68 ucontrol approach :moveTo:x :moveTo:y *tmp107
    69 label *label68
-    * jump *label67 always
+   70 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+   71 jump *label479 equal *tmp105 false
    72 label *label69
    73 label *label65
    74 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   134 label *label91
   135 sensor *tmp125 @unit @firstItem
   136 jump *label93 equal *tmp125 null
+  137 label *label480
   138 ucontrol itemDrop @air 1000
   139 label *label92
-    * jump *label91 always
+  140 sensor *tmp125 @unit @firstItem
+  141 jump *label480 notEqual *tmp125 null
   142 label *label93
   143 label *label86
   144 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
   143 label *label86
   144 set :transportStatus:target 0
   145 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label94 (h:*label94)
-    * call *label31 *invalid :transportStatus*retval (m:*label94) (h:*label94)
-    * label *label94
+  146 label *label481
+  147 write :transportStatus:target processor2 ".transportTarget"
+  148 write :transportStatus:item processor2 ".transportItem"
+  149 label *label482
   150 label *label83
   151 return :depositItems*retaddr
   152 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   144 set :transportStatus:target 0
   145 set :transportStatus:item null
   146 label *label481
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  147 write 0 processor2 ".transportTarget"
+  148 write null processor2 ".transportItem"
   149 label *label482
   150 label *label83
   151 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   141 jump *label480 notEqual *tmp125 null
   142 label *label93
   143 label *label86
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   144 label *label481
   145 write 0 processor2 ".transportTarget"
   146 write null processor2 ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
    50 label *label61
    51 return :status2*retaddr
    52 end
-    * label *label31
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
-    * label *label63
-    * return :transportStatus*retaddr
-    * end
    53 label *label33
    54 label *label447
    55 write "Moving..." processor2 ".status3"
 
   146 op min :mineOre:amount :mineOre:amount 28
   147 set :transportStatus:target :mineOre:amount
   148 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label100 (h:*label100)
-    * call *label31 *invalid :transportStatus*retval (m:*label100) (h:*label100)
-    * label *label100
+  149 label *label483
+  150 write :transportStatus:target processor2 ".transportTarget"
+  151 write :transportStatus:item processor2 ".transportItem"
+  152 label *label484
   153 label *label460
   154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label463 notEqual *tmp127 false
 
   251 sensor *tmp151 :fetchBlock:block @itemCapacity
   252 op min :transportStatus:target *tmp151 28
   253 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label127 (h:*label127)
-    * call *label31 *invalid :transportStatus*retval (m:*label127) (h:*label127)
-    * label *label127
+  254 label *label485
+  255 write :transportStatus:target processor2 ".transportTarget"
+  256 write :transportStatus:item processor2 ".transportItem"
+  257 label *label486
   258 set :status2:text "Fetching "
   259 set :status2:item :fetchBlock:item
   260 set :status2:block :fetchBlock:block
 
   374 op min :supplyBlockFromCore:cap *tmp169 28
   375 set :transportStatus:target :supplyBlockFromCore:cap
   376 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label467 (h:*label467)
-    * call *label31 *invalid :transportStatus*retval (m:*label467) (h:*label467)
-    * label *label467
+  377 label *label487
+  378 write :transportStatus:target processor2 ".transportTarget"
+  379 write :transportStatus:item processor2 ".transportItem"
+  380 label *label488
   381 set :status2:text "Transferring "
   382 set :status2:item :supplyBlockFromCore:item
   383 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   147 set :transportStatus:target :mineOre:amount
   148 set :transportStatus:item :mineOre:ore
   149 label *label483
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  150 write :mineOre:amount processor2 ".transportTarget"
+  151 write :mineOre:ore processor2 ".transportItem"
   152 label *label484
   153 label *label460
   154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
 
   253 set :transportStatus:item :fetchBlock:item
   254 label *label485
   255 write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  256 write :fetchBlock:item processor2 ".transportItem"
   257 label *label486
   258 set :status2:text "Fetching "
   259 set :status2:item :fetchBlock:item
 
   375 set :transportStatus:target :supplyBlockFromCore:cap
   376 set :transportStatus:item @coal
   377 label *label487
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  378 write :supplyBlockFromCore:cap processor2 ".transportTarget"
+  379 write @coal processor2 ".transportItem"
   380 label *label488
   381 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
+  382 set :status2:item @coal
   383 set :status2:block :supplyBlockFromCore:target
   384 setaddr :status2*retaddr *label468 (h:*label468)
   385 call *label29 *invalid :status2*retval (m:*label468) (h:*label468)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   145 label *label39
   146 op min :mineOre:amount :mineOre:amount 28
   147 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   148 label *label483
   149 write :mineOre:amount processor2 ".transportTarget"
   150 write :mineOre:ore processor2 ".transportItem"
 
   249 label *label42
   250 sensor *tmp151 :fetchBlock:block @itemCapacity
   251 op min :transportStatus:target *tmp151 28
-    * set :transportStatus:item :fetchBlock:item
   252 label *label485
   253 write :transportStatus:target processor2 ".transportTarget"
   254 write :fetchBlock:item processor2 ".transportItem"
 
   371 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   372 op min :supplyBlockFromCore:cap *tmp169 28
   373 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item @coal
   374 label *label487
   375 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   376 write @coal processor2 ".transportItem"

Modifications by Inline function call at Actions.mnd:145:5 (+1 instructions):
 
   256 set :status2:text "Fetching "
   257 set :status2:item :fetchBlock:item
   258 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label128 (h:*label128)
-    * call *label29 *invalid :status2*retval (m:*label128) (h:*label128)
-    * label *label128
+  259 label *label489
+  260 write :status2:text processor2 ".status2"
+  261 write :status2:item processor2 ".item2"
+  262 write :status2:block processor2 ".block2"
+  263 label *label490
   264 sensor *tmp153 :fetchBlock:block @x
   265 sensor *tmp154 :fetchBlock:block @y
   266 set :moveToEmpty:x *tmp153

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   257 set :status2:item :fetchBlock:item
   258 set :status2:block :fetchBlock:block
   259 label *label489
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  260 write "Fetching " processor2 ".status2"
+  261 write :fetchBlock:item processor2 ".item2"
+  262 write :fetchBlock:block processor2 ".block2"
   263 label *label490
   264 sensor *tmp153 :fetchBlock:block @x
   265 sensor *tmp154 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   253 write :transportStatus:target processor2 ".transportTarget"
   254 write :fetchBlock:item processor2 ".transportItem"
   255 label *label486
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   256 label *label489
   257 write "Fetching " processor2 ".status2"
   258 write :fetchBlock:item processor2 ".item2"

Modifications by Inline function call at Actions.mnd:139:5 (+1 instructions):
 
   234 set :status2:text "Mining "
   235 set :status2:item :mineOre.2:ore
   236 set :status2:block "core"
-    * setaddr :status2*retaddr *label124 (h:*label124)
-    * call *label29 *invalid :status2*retval (m:*label124) (h:*label124)
-    * label *label124
+  237 label *label491
+  238 write :status2:text processor2 ".status2"
+  239 write :status2:item processor2 ".item2"
+  240 write :status2:block processor2 ".block2"
+  241 label *label492
   242 set :mineOre:ore :mineOre.2:ore
   243 set :mineOre:amount 28
   244 set :mineOre:block .core

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   235 set :status2:item :mineOre.2:ore
   236 set :status2:block "core"
   237 label *label491
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  238 write "Mining " processor2 ".status2"
+  239 write :mineOre.2:ore processor2 ".item2"
+  240 write "core" processor2 ".block2"
   241 label *label492
   242 set :mineOre:ore :mineOre.2:ore
   243 set :mineOre:amount 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   231 return :mineOre.1*retaddr
   232 end
   233 label *label41
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.2:ore
-    * set :status2:block "core"
   234 label *label491
   235 write "Mining " processor2 ".status2"
   236 write :mineOre.2:ore processor2 ".item2"

Modifications by Inline function call at Actions.mnd:147:5 (+3 instructions):
 
   264 setaddr :moveToEmpty*retaddr *label129 (h:*label129)
   265 call *label34 *invalid :moveToEmpty*retval (m:*label129) (h:*label129)
   266 label *label129
-    * setaddr :dropAll*retaddr *label130 (h:*label130)
-    * call *label35 *invalid :dropAll*retval (m:*label130) (h:*label130)
-    * label *label130
+  267 label *label493
+  268 label *label494
+  269 sensor *tmp113 @unit @firstItem
+  270 jump *label497 equal *tmp113 null
+  271 label *label495
+  272 ucontrol itemDrop @air 1000
+  273 label *label496
+  274 sensor *tmp113 @unit @firstItem
+  275 jump *label495 notEqual *tmp113 null
+  276 label *label497
+  277 label *label498
   278 label *label131
   279 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   280 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function call at Actions.mnd:146:5 (+5 instructions):
 
   261 sensor *tmp154 :fetchBlock:block @y
   262 set :moveToEmpty:x *tmp153
   263 set :moveToEmpty:y *tmp154
-    * setaddr :moveToEmpty*retaddr *label129 (h:*label129)
-    * call *label34 *invalid :moveToEmpty*retval (m:*label129) (h:*label129)
-    * label *label129
+  264 label *label499
+  265 label *label500
+  266 write "Moving..." processor2 ".status3"
+  267 label *label501
+  268 label *label502
+  269 sensor *tmp108 @unit @firstItem
+  270 jump *label503 equal *tmp108 null
+  271 ucontrol itemDrop @air 1000
+  272 label *label503
+  273 label *label504
+  274 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  275 label *label505
+  276 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  277 jump *label502 equal *tmp111 false
+  278 label *label506
+  279 label *label507
   280 label *label493
   281 label *label494
   282 sensor *tmp113 @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   271 ucontrol itemDrop @air 1000
   272 label *label503
   273 label *label504
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  274 ucontrol approach *tmp153 *tmp154 5.5
   275 label *label505
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  276 ucontrol within *tmp153 *tmp154 6 *tmp111
   277 jump *label502 equal *tmp111 false
   278 label *label506
   279 label *label507

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   259 label *label490
   260 sensor *tmp153 :fetchBlock:block @x
   261 sensor *tmp154 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp153
-    * set :moveToEmpty:y *tmp154
   262 label *label499
   263 label *label500
   264 write "Moving..." processor2 ".status3"

Modifications by Inline function call at Actions.mnd:119:16 (+35 instructions):
 
   192 label *label112
   193 label *label113
   194 jump *label114 notEqual .noTarget false
-    * setaddr :targetMet*retaddr *label116 (h:*label116)
-    * call *label47 *invalid :targetMet*retval (m:*label116) (h:*label116)
-    * label *label116
+  195 label *label508
+  196 sensor *tmp305 .core @silicon
+  197 jump *label509 greaterThanEq *tmp305 silicon
+  198 write @silicon processor2 ".missing"
+  199 set :targetMet*retval false
+  200 jump *label523 always
+  201 label *label509
+  202 label *label510
+  203 sensor *tmp308 .core @copper
+  204 jump *label511 greaterThanEq *tmp308 copper
+  205 write @copper processor2 ".missing"
+  206 set :targetMet*retval false
+  207 jump *label523 always
+  208 label *label511
+  209 label *label512
+  210 sensor *tmp311 .core @lead
+  211 jump *label513 greaterThanEq *tmp311 lead
+  212 write @lead processor2 ".missing"
+  213 set :targetMet*retval false
+  214 jump *label523 always
+  215 label *label513
+  216 label *label514
+  217 sensor *tmp314 .core @metaglass
+  218 jump *label515 greaterThanEq *tmp314 metaglass
+  219 write @metaglass processor2 ".missing"
+  220 set :targetMet*retval false
+  221 jump *label523 always
+  222 label *label515
+  223 label *label516
+  224 sensor *tmp317 .core @graphite
+  225 jump *label517 greaterThanEq *tmp317 graphite
+  226 write @graphite processor2 ".missing"
+  227 set :targetMet*retval false
+  228 jump *label523 always
+  229 label *label517
+  230 label *label518
+  231 sensor *tmp320 .core @titanium
+  232 jump *label519 greaterThanEq *tmp320 titanium
+  233 write @titanium processor2 ".missing"
+  234 set :targetMet*retval false
+  235 jump *label523 always
+  236 label *label519
+  237 label *label520
+  238 sensor *tmp323 .core @thorium
+  239 jump *label521 greaterThanEq *tmp323 thorium
+  240 write @thorium processor2 ".missing"
+  241 set :targetMet*retval false
+  242 jump *label523 always
+  243 label *label521
+  244 label *label522
+  245 set :targetMet*retval true
+  246 jump *label523 always
+  247 label *label523
   248 jump *label117 equal :targetMet*retval false
   249 jump *label109 always
   250 label *label117

Modifications by Inline function call at Actions.mnd:68:5 (+5 instructions):
 
   110 set :moveTo:x *tmp115
   111 set :moveTo:y *tmp116
   112 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label458 (h:*label458)
-    * call *label33 *invalid :moveTo*retval (m:*label458) (h:*label458)
-    * label *label458
+  113 label *label524
+  114 label *label525
+  115 write "Moving..." processor2 ".status3"
+  116 label *label526
+  117 op sub *tmp107 :moveTo:radius 0.5
+  118 label *label527
+  119 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  120 jump *label530 notEqual *tmp105 false
+  121 label *label528
+  122 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  123 label *label529
+  124 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  125 jump *label528 equal *tmp105 false
+  126 label *label530
+  127 label *label531
   128 label *label459
   129 sensor :depositItems:cap :depositItems:block @itemCapacity
   130 label *label88

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   114 label *label525
   115 write "Moving..." processor2 ".status3"
   116 label *label526
-    * op sub *tmp107 :moveTo:radius 0.5
+  117 op sub *tmp107 6 0.5
   118 label *label527
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  119 ucontrol within *tmp115 *tmp116 6 *tmp105
   120 jump *label530 notEqual *tmp105 false
   121 label *label528
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  122 ucontrol approach *tmp115 *tmp116 5.5
   123 label *label529
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  124 ucontrol within *tmp115 *tmp116 6 *tmp105
   125 jump *label528 equal *tmp105 false
   126 label *label530
   127 label *label531

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   107 label *label457
   108 sensor *tmp115 :depositItems:block @x
   109 sensor *tmp116 :depositItems:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius 6
   110 label *label524
   111 label *label525
   112 write "Moving..." processor2 ".status3"
   113 label *label526
-    * op sub *tmp107 6 0.5
   114 label *label527
   115 ucontrol within *tmp115 *tmp116 6 *tmp105
   116 jump *label530 notEqual *tmp105 false

Modifications by Inline function call at Actions.mnd:162:5 (+1 instructions):
 
   373 set :status2:text "Supplying "
   374 set :status2:item :supplyBlock:ore
   375 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label138 (h:*label138)
-    * call *label29 *invalid :status2*retval (m:*label138) (h:*label138)
-    * label *label138
+  376 label *label532
+  377 write :status2:text processor2 ".status2"
+  378 write :status2:item processor2 ".item2"
+  379 write :status2:block processor2 ".block2"
+  380 label *label533
   381 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   382 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   383 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   374 set :status2:item :supplyBlock:ore
   375 set :status2:block :supplyBlock:block
   376 label *label532
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  377 write "Supplying " processor2 ".status2"
+  378 write :supplyBlock:ore processor2 ".item2"
+  379 write :supplyBlock:block processor2 ".block2"
   380 label *label533
   381 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   382 sensor *tmp165 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   370 return :fetchBlock*retaddr
   371 end
   372 label *label43
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   373 label *label532
   374 write "Supplying " processor2 ".status2"
   375 write :supplyBlock:ore processor2 ".item2"

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+1 instructions):
 
    67 label *label65
    68 return :moveTo*retaddr
    69 end
-    * label *label34
-    * label *label449
-    * write "Moving..." processor2 ".status3"
-    * label *label450
-    * label *label72
-    * sensor *tmp108 @unit @firstItem
-    * jump *label75 equal *tmp108 null
-    * ucontrol itemDrop @air 1000
-    * label *label75
-    * label *label76
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label73
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * jump *label72 equal *tmp111 false
-    * label *label74
-    * label *label70
-    * return :moveToEmpty*retaddr
-    * end
    70 label *label35
    71 label *label78
    72 sensor *tmp113 @unit @firstItem
 
   153 set :mineOre:y :locateOre:y
   154 set :moveToEmpty:x :locateOre:x
   155 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label102 (h:*label102)
-    * call *label34 *invalid :moveToEmpty*retval (m:*label102) (h:*label102)
-    * label *label102
+  156 label *label534
+  157 label *label535
+  158 write "Moving..." processor2 ".status3"
+  159 label *label536
+  160 label *label537
+  161 sensor *tmp108 @unit @firstItem
+  162 jump *label538 equal *tmp108 null
+  163 ucontrol itemDrop @air 1000
+  164 label *label538
+  165 label *label539
+  166 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  167 label *label540
+  168 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  169 jump *label537 equal *tmp111 false
+  170 label *label541
+  171 label *label542
   172 sensor *tmp132 @unit @firstItem
   173 jump *label103 equal *tmp132 :mineOre:ore
   174 setaddr :dropAll*retaddr *label105 (h:*label105)
 
   452 label *label468
   453 set :moveToEmpty:x .coreX
   454 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label469 (h:*label469)
-    * call *label34 *invalid :moveToEmpty*retval (m:*label469) (h:*label469)
-    * label *label469
+  455 label *label543
+  456 label *label544
+  457 write "Moving..." processor2 ".status3"
+  458 label *label545
+  459 label *label546
+  460 sensor *tmp108 @unit @firstItem
+  461 jump *label547 equal *tmp108 null
+  462 ucontrol itemDrop @air 1000
+  463 label *label547
+  464 label *label548
+  465 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  466 label *label549
+  467 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  468 jump *label546 equal *tmp111 false
+  469 label *label550
+  470 label *label551
   471 setaddr :dropAll*retaddr *label470 (h:*label470)
   472 call *label35 *invalid :dropAll*retval (m:*label470) (h:*label470)
   473 label *label470

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   163 ucontrol itemDrop @air 1000
   164 label *label538
   165 label *label539
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  166 ucontrol approach :locateOre:x :locateOre:y 5.5
   167 label *label540
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  168 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
   169 jump *label537 equal *tmp111 false
   170 label *label541
   171 label *label542
 
   462 ucontrol itemDrop @air 1000
   463 label *label547
   464 label *label548
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  465 ucontrol approach .coreX .coreY 5.5
   466 label *label549
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  467 ucontrol within .coreX .coreY 6 *tmp111
   468 jump *label546 equal *tmp111 false
   469 label *label550
   470 label *label551

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   151 label *label465
   152 set :mineOre:x :locateOre:x
   153 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   154 label *label534
   155 label *label535
   156 write "Moving..." processor2 ".status3"
 
   448 setaddr :status2*retaddr *label468 (h:*label468)
   449 call *label29 *invalid :status2*retval (m:*label468) (h:*label468)
   450 label *label468
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   451 label *label543
   452 label *label544
   453 write "Moving..." processor2 ".status3"

Modifications by Replicate loop condition at BuilderController.mnd:232:5 (+2 instructions):
 
   895 call *label47 *invalid :targetMet*retval (m:*label291) (h:*label291)
   896 label *label291
   897 jump *label290 notEqual :targetMet*retval false
+  898 label *label552
   899 setaddr :supplyBase*retaddr *label292 (h:*label292)
   900 call *label13 *invalid :supplyBase*retval (m:*label292) (h:*label292)
   901 label *label292
   902 label *label289
-    * jump *label288 always
+  903 setaddr :targetMet*retaddr *label553 (h:*label553)
+  904 call *label47 *invalid :targetMet*retval (m:*label553) (h:*label553)
+  905 label *label553
+  906 jump *label552 equal :targetMet*retval false
   907 label *label290
   908 jump *label293 equal :meetTarget:forBuild false
   909 write false AÕFFJS-micro-processor9 ":buildStart*finished"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-3 instructions):
 
    43 wait 1e12
    44 jump *label59 always
    45 end
-    * label *label29
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
-    * label *label61
-    * return :status2*retaddr
-    * end
    46 label *label33
    47 label *label447
    48 write "Moving..." processor2 ".status3"
 
   262 set :status2:text "Mining "
   263 set :status2:item :mineOre.1:ore
   264 set :status2:block :mineOre.1:block
-    * setaddr :status2*retaddr *label121 (h:*label121)
-    * call *label29 *invalid :status2*retval (m:*label121) (h:*label121)
-    * label *label121
+  265 label *label554
+  266 write :status2:text processor2 ".status2"
+  267 write :status2:item processor2 ".item2"
+  268 write :status2:block processor2 ".block2"
+  269 label *label555
   270 set :mineOre:ore :mineOre.1:ore
   271 set :mineOre:amount 28
   272 set :mineOre:block :mineOre.1:block
 
   440 set :status2:text "Transferring "
   441 set :status2:item @coal
   442 set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label468 (h:*label468)
-    * call *label29 *invalid :status2*retval (m:*label468) (h:*label468)
-    * label *label468
+  443 label *label556
+  444 write :status2:text processor2 ".status2"
+  445 write :status2:item processor2 ".item2"
+  446 write :status2:block processor2 ".block2"
+  447 label *label557
   448 label *label543
   449 label *label544
   450 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   263 set :status2:item :mineOre.1:ore
   264 set :status2:block :mineOre.1:block
   265 label *label554
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  266 write "Mining " processor2 ".status2"
+  267 write :mineOre.1:ore processor2 ".item2"
+  268 write :mineOre.1:block processor2 ".block2"
   269 label *label555
   270 set :mineOre:ore :mineOre.1:ore
   271 set :mineOre:amount 28
 
   441 set :status2:item @coal
   442 set :status2:block :supplyBlockFromCore:target
   443 label *label556
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  444 write "Transferring " processor2 ".status2"
+  445 write @coal processor2 ".item2"
+  446 write :supplyBlockFromCore:target processor2 ".block2"
   447 label *label557
   448 label *label543
   449 label *label544

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   259 return :mineOre*retaddr
   260 end
   261 label *label40
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block :mineOre.1:block
   262 label *label554
   263 write "Mining " processor2 ".status2"
   264 write :mineOre.1:ore processor2 ".item2"
 
   434 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   435 write @coal processor2 ".transportItem"
   436 label *label488
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block :supplyBlockFromCore:target
   437 label *label556
   438 write "Transferring " processor2 ".status2"
   439 write @coal processor2 ".item2"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
    60 label *label65
    61 return :moveTo*retaddr
    62 end
-    * label *label35
-    * label *label78
-    * sensor *tmp113 @unit @firstItem
-    * jump *label80 equal *tmp113 null
-    * label *label478
-    * ucontrol itemDrop @air 1000
-    * label *label79
-    * sensor *tmp113 @unit @firstItem
-    * jump *label478 notEqual *tmp113 null
-    * label *label80
-    * label *label77
-    * return :dropAll*retaddr
-    * end
    63 label *label37
    64 label *label451
    65 write "Depositing..." processor2 ".status3"
 
   149 label *label542
   150 sensor *tmp132 @unit @firstItem
   151 jump *label103 equal *tmp132 :mineOre:ore
-    * setaddr :dropAll*retaddr *label105 (h:*label105)
-    * call *label35 *invalid :dropAll*retval (m:*label105) (h:*label105)
-    * label *label105
+  152 label *label558
+  153 label *label559
+  154 sensor *tmp113 @unit @firstItem
+  155 jump *label562 equal *tmp113 null
+  156 label *label560
+  157 ucontrol itemDrop @air 1000
+  158 label *label561
+  159 sensor *tmp113 @unit @firstItem
+  160 jump *label560 notEqual *tmp113 null
+  161 label *label562
+  162 label *label563
   163 label *label103
   164 label *label104
   165 label *label453
 
   450 jump *label546 equal *tmp111 false
   451 label *label550
   452 label *label551
-    * setaddr :dropAll*retaddr *label470 (h:*label470)
-    * call *label35 *invalid :dropAll*retval (m:*label470) (h:*label470)
-    * label *label470
+  453 label *label564
+  454 label *label565
+  455 sensor *tmp113 @unit @firstItem
+  456 jump *label568 equal *tmp113 null
+  457 label *label566
+  458 ucontrol itemDrop @air 1000
+  459 label *label567
+  460 sensor *tmp113 @unit @firstItem
+  461 jump *label566 notEqual *tmp113 null
+  462 label *label568
+  463 label *label569
   464 label *label471
   465 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
   466 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   175 jump *label109 always
   176 label *label110
   177 label *label111
-    * ucontrol mine :mineOre:x :mineOre:y
+  178 ucontrol mine :locateOre:x :locateOre:y
   179 jump *label112 lessThanEq @second :mineOre:stop
   180 jump *label109 always
   181 label *label112
 
   462 label *label568
   463 label *label569
   464 label *label471
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  465 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   466 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   467 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  468 op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal
   469 op land *tmp174 *tmp172 *tmp173
   470 jump *label472 equal *tmp174 false
   471 ucontrol itemDrop @air 1000
   472 label *label472
   473 label *label473
   474 label *label474
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
+  475 sensor *tmp176 @unit @coal
   476 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
+  477 sensor *tmp178 .core @coal
   478 op land *tmp179 *tmp177 *tmp178
   479 jump *label471 notEqual *tmp179 false
   480 label *label475
   481 set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  482 set :depositItems:item @coal
   483 setaddr :depositItems*retaddr *label476 (h:*label476)
   484 call *label37 *invalid :depositItems*retval (m:*label476) (h:*label476)
   485 label *label476

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   129 label *label463
   130 label *label464
   131 label *label465
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   132 label *label534
   133 label *label535
   134 write "Moving..." processor2 ".status3"
 
   418 jump *label164 always
   419 label *label163
   420 set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   421 label *label466
   422 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   423 op min :supplyBlockFromCore:cap *tmp169 28

Modifications by Replicate loop condition at BuilderController.mnd:238:9 (+2 instructions):
 
   908 call *label47 *invalid :targetMet*retval (m:*label299) (h:*label299)
   909 label *label299
   910 jump *label298 notEqual :targetMet*retval false
+  911 label *label570
   912 setaddr :supplyBase*retaddr *label300 (h:*label300)
   913 call *label13 *invalid :supplyBase*retval (m:*label300) (h:*label300)
   914 label *label300
   915 label *label297
-    * jump *label296 always
+  916 setaddr :targetMet*retaddr *label571 (h:*label571)
+  917 call *label47 *invalid :targetMet*retval (m:*label571) (h:*label571)
+  918 label *label571
+  919 jump *label570 equal :targetMet*retval false
   920 label *label298
   921 label *label293
   922 label *label294

Modifications by Inline function call at BuilderController.mnd:152:5 (+6 instructions):
 
   508 write "Phase 1: supplying base" processor2 ".status1"
   509 label *label420
   510 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label176 (h:*label176)
-    * call *label41 *invalid :mineOre.2*retval (m:*label176) (h:*label176)
-    * label *label176
+  511 label *label572
+  512 label *label573
+  513 write "Mining " processor2 ".status2"
+  514 write :mineOre.2:ore processor2 ".item2"
+  515 write "core" processor2 ".block2"
+  516 label *label574
+  517 set :mineOre:ore :mineOre.2:ore
+  518 set :mineOre:amount 28
+  519 set :mineOre:block .core
+  520 setaddr :mineOre*retaddr *label575 (h:*label575)
+  521 call *label39 *invalid :mineOre*retval (m:*label575) (h:*label575)
+  522 label *label575
+  523 label *label576
   524 label *label174
   525 jump *label173 always
   526 label *label172

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   511 label *label572
   512 label *label573
   513 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  514 write @coal processor2 ".item2"
   515 write "core" processor2 ".block2"
   516 label *label574
-    * set :mineOre:ore :mineOre.2:ore
+  517 set :mineOre:ore @coal
   518 set :mineOre:amount 28
   519 set :mineOre:block .core
   520 setaddr :mineOre*retaddr *label575 (h:*label575)

Modifications by Inline function call at Actions.mnd:157:5 (+23 instructions):
 
   341 label *label133
   342 set :depositItems:block .core
   343 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label136 (h:*label136)
-    * call *label37 *invalid :depositItems*retval (m:*label136) (h:*label136)
-    * label *label136
+  344 label *label577
+  345 label *label578
+  346 write "Depositing..." processor2 ".status3"
+  347 label *label579
+  348 sensor *tmp117 @unit @firstItem
+  349 jump *label593 notEqual *tmp117 :depositItems:item
+  350 label *label580
+  351 sensor *tmp115 :depositItems:block @x
+  352 sensor *tmp116 :depositItems:block @y
+  353 label *label581
+  354 label *label582
+  355 write "Moving..." processor2 ".status3"
+  356 label *label583
+  357 label *label584
+  358 ucontrol within *tmp115 *tmp116 6 *tmp105
+  359 jump *label587 notEqual *tmp105 false
+  360 label *label585
+  361 ucontrol approach *tmp115 *tmp116 5.5
+  362 label *label586
+  363 ucontrol within *tmp115 *tmp116 6 *tmp105
+  364 jump *label585 equal *tmp105 false
+  365 label *label587
+  366 label *label588
+  367 label *label589
+  368 sensor :depositItems:cap :depositItems:block @itemCapacity
+  369 label *label590
+  370 ucontrol itemDrop :depositItems:block 28
+  371 label *label591
+  372 sensor *tmp121 @unit @firstItem
+  373 op mul *tmp122 *tmp121 :depositItems:cap
+  374 sensor *tmp123 :depositItems:block :depositItems:item
+  375 jump *label590 greaterThan *tmp122 *tmp123
+  376 label *label592
+  377 jump *label598 always
+  378 label *label593
+  379 label *label594
+  380 sensor *tmp125 @unit @firstItem
+  381 jump *label597 equal *tmp125 null
+  382 label *label595
+  383 ucontrol itemDrop @air 1000
+  384 label *label596
+  385 sensor *tmp125 @unit @firstItem
+  386 jump *label595 notEqual *tmp125 null
+  387 label *label597
+  388 label *label598
+  389 label *label599
+  390 write 0 processor2 ".transportTarget"
+  391 write null processor2 ".transportItem"
+  392 label *label600
+  393 label *label601
   394 label *label126
   395 return :fetchBlock*retaddr
   396 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   346 write "Depositing..." processor2 ".status3"
   347 label *label579
   348 sensor *tmp117 @unit @firstItem
-    * jump *label593 notEqual *tmp117 :depositItems:item
+  349 jump *label593 notEqual *tmp117 :fetchBlock:item
   350 label *label580
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  351 sensor *tmp115 .core @x
+  352 sensor *tmp116 .core @y
   353 label *label581
   354 label *label582
   355 write "Moving..." processor2 ".status3"
 
   365 label *label587
   366 label *label588
   367 label *label589
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  368 sensor :depositItems:cap .core @itemCapacity
   369 label *label590
-    * ucontrol itemDrop :depositItems:block 28
+  370 ucontrol itemDrop .core 28
   371 label *label591
   372 sensor *tmp121 @unit @firstItem
   373 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  374 sensor *tmp123 .core :fetchBlock:item
   375 jump *label590 greaterThan *tmp122 *tmp123
   376 label *label592
   377 jump *label598 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   339 op land *tmp163 *tmp161 *tmp162
   340 jump *label131 notEqual *tmp163 false
   341 label *label133
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   342 label *label577
   343 label *label578
   344 write "Depositing..." processor2 ".status3"

Modifications by Replicate loop condition at BuilderController.mnd:413:9 (+1 instructions):
 
  1344 label *label372
  1345 read *tmp51 processor3 ".locations"
  1346 jump *label374 greaterThanEq :buildTitaniumDrills:current *tmp51
+ 1347 label *label602
  1348 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1349 op add *tmp421 :buildTitaniumDrills:index 1
  1350 read :buildTitaniumDrills:size bank1 *tmp421
 
  1418 label *label376
  1419 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1420 label *label373
-    * jump *label372 always
+ 1421 read *tmp51 processor3 ".locations"
+ 1422 jump *label602 lessThan :buildTitaniumDrills:current *tmp51
  1423 label *label374
  1424 jump *label384 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1425 jump *label371 always

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+19 instructions):
 
    60 label *label65
    61 return :moveTo*retaddr
    62 end
-    * label *label37
-    * label *label451
-    * write "Depositing..." processor2 ".status3"
-    * label *label452
-    * sensor *tmp117 @unit @firstItem
-    * jump *label85 notEqual *tmp117 :depositItems:item
-    * label *label457
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
-    * label *label524
-    * label *label525
-    * write "Moving..." processor2 ".status3"
-    * label *label526
-    * label *label527
-    * ucontrol within *tmp115 *tmp116 6 *tmp105
-    * jump *label530 notEqual *tmp105 false
-    * label *label528
-    * ucontrol approach *tmp115 *tmp116 5.5
-    * label *label529
-    * ucontrol within *tmp115 *tmp116 6 *tmp105
-    * jump *label528 equal *tmp105 false
-    * label *label530
-    * label *label531
-    * label *label459
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label88
-    * ucontrol itemDrop :depositItems:block 28
-    * label *label89
-    * sensor *tmp121 @unit @firstItem
-    * op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
-    * jump *label88 greaterThan *tmp122 *tmp123
-    * label *label90
-    * jump *label86 always
-    * label *label85
-    * label *label91
-    * sensor *tmp125 @unit @firstItem
-    * jump *label93 equal *tmp125 null
-    * label *label480
-    * ucontrol itemDrop @air 1000
-    * label *label92
-    * sensor *tmp125 @unit @firstItem
-    * jump *label480 notEqual *tmp125 null
-    * label *label93
-    * label *label86
-    * label *label481
-    * write 0 processor2 ".transportTarget"
-    * write null processor2 ".transportItem"
-    * label *label482
-    * label *label83
-    * return :depositItems*retaddr
-    * end
    63 label *label39
    64 op min :mineOre:amount :mineOre:amount 28
    65 set :transportStatus:target :mineOre:amount
 
   193 ucontrol unbind
   194 set :depositItems:block :mineOre:block
   195 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label119 (h:*label119)
-    * call *label37 *invalid :depositItems*retval (m:*label119) (h:*label119)
-    * label *label119
+  196 label *label603
+  197 label *label604
+  198 write "Depositing..." processor2 ".status3"
+  199 label *label605
+  200 sensor *tmp117 @unit @firstItem
+  201 jump *label619 notEqual *tmp117 :depositItems:item
+  202 label *label606
+  203 sensor *tmp115 :depositItems:block @x
+  204 sensor *tmp116 :depositItems:block @y
+  205 label *label607
+  206 label *label608
+  207 write "Moving..." processor2 ".status3"
+  208 label *label609
+  209 label *label610
+  210 ucontrol within *tmp115 *tmp116 6 *tmp105
+  211 jump *label613 notEqual *tmp105 false
+  212 label *label611
+  213 ucontrol approach *tmp115 *tmp116 5.5
+  214 label *label612
+  215 ucontrol within *tmp115 *tmp116 6 *tmp105
+  216 jump *label611 equal *tmp105 false
+  217 label *label613
+  218 label *label614
+  219 label *label615
+  220 sensor :depositItems:cap :depositItems:block @itemCapacity
+  221 label *label616
+  222 ucontrol itemDrop :depositItems:block 28
+  223 label *label617
+  224 sensor *tmp121 @unit @firstItem
+  225 op mul *tmp122 *tmp121 :depositItems:cap
+  226 sensor *tmp123 :depositItems:block :depositItems:item
+  227 jump *label616 greaterThan *tmp122 *tmp123
+  228 label *label618
+  229 jump *label624 always
+  230 label *label619
+  231 label *label620
+  232 sensor *tmp125 @unit @firstItem
+  233 jump *label623 equal *tmp125 null
+  234 label *label621
+  235 ucontrol itemDrop @air 1000
+  236 label *label622
+  237 sensor *tmp125 @unit @firstItem
+  238 jump *label621 notEqual *tmp125 null
+  239 label *label623
+  240 label *label624
+  241 label *label625
+  242 write 0 processor2 ".transportTarget"
+  243 write null processor2 ".transportItem"
+  244 label *label626
+  245 label *label627
   246 label *label99
   247 return :mineOre*retaddr
   248 end
 
   517 label *label475
   518 set :depositItems:block :supplyBlockFromCore:target
   519 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label476 (h:*label476)
-    * call *label37 *invalid :depositItems*retval (m:*label476) (h:*label476)
-    * label *label476
+  520 label *label628
+  521 label *label629
+  522 write "Depositing..." processor2 ".status3"
+  523 label *label630
+  524 sensor *tmp117 @unit @firstItem
+  525 jump *label644 notEqual *tmp117 :depositItems:item
+  526 label *label631
+  527 sensor *tmp115 :depositItems:block @x
+  528 sensor *tmp116 :depositItems:block @y
+  529 label *label632
+  530 label *label633
+  531 write "Moving..." processor2 ".status3"
+  532 label *label634
+  533 label *label635
+  534 ucontrol within *tmp115 *tmp116 6 *tmp105
+  535 jump *label638 notEqual *tmp105 false
+  536 label *label636
+  537 ucontrol approach *tmp115 *tmp116 5.5
+  538 label *label637
+  539 ucontrol within *tmp115 *tmp116 6 *tmp105
+  540 jump *label636 equal *tmp105 false
+  541 label *label638
+  542 label *label639
+  543 label *label640
+  544 sensor :depositItems:cap :depositItems:block @itemCapacity
+  545 label *label641
+  546 ucontrol itemDrop :depositItems:block 28
+  547 label *label642
+  548 sensor *tmp121 @unit @firstItem
+  549 op mul *tmp122 *tmp121 :depositItems:cap
+  550 sensor *tmp123 :depositItems:block :depositItems:item
+  551 jump *label641 greaterThan *tmp122 *tmp123
+  552 label *label643
+  553 jump *label649 always
+  554 label *label644
+  555 label *label645
+  556 sensor *tmp125 @unit @firstItem
+  557 jump *label648 equal *tmp125 null
+  558 label *label646
+  559 ucontrol itemDrop @air 1000
+  560 label *label647
+  561 sensor *tmp125 @unit @firstItem
+  562 jump *label646 notEqual *tmp125 null
+  563 label *label648
+  564 label *label649
+  565 label *label650
+  566 write 0 processor2 ".transportTarget"
+  567 write null processor2 ".transportItem"
+  568 label *label651
+  569 label *label652
   570 label *label477
   571 label *label164
   572 label *label161

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    62 end
    63 label *label39
    64 op min :mineOre:amount :mineOre:amount 28
-    * set :transportStatus:target :mineOre:amount
    65 label *label483
    66 write :mineOre:amount processor2 ".transportTarget"
    67 write :mineOre:ore processor2 ".transportItem"
 
   197 write "Depositing..." processor2 ".status3"
   198 label *label605
   199 sensor *tmp117 @unit @firstItem
-    * jump *label619 notEqual *tmp117 :depositItems:item
+  200 jump *label619 notEqual *tmp117 :mineOre:ore
   201 label *label606
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  202 sensor *tmp115 :mineOre:block @x
+  203 sensor *tmp116 :mineOre:block @y
   204 label *label607
   205 label *label608
   206 write "Moving..." processor2 ".status3"
 
   216 label *label613
   217 label *label614
   218 label *label615
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  219 sensor :depositItems:cap :mineOre:block @itemCapacity
   220 label *label616
-    * ucontrol itemDrop :depositItems:block 28
+  221 ucontrol itemDrop :mineOre:block 28
   222 label *label617
   223 sensor *tmp121 @unit @firstItem
   224 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  225 sensor *tmp123 :mineOre:block :mineOre:ore
   226 jump *label616 greaterThan *tmp122 *tmp123
   227 label *label618
   228 jump *label624 always
 
   521 write "Depositing..." processor2 ".status3"
   522 label *label630
   523 sensor *tmp117 @unit @firstItem
-    * jump *label644 notEqual *tmp117 :depositItems:item
+  524 jump *label644 notEqual *tmp117 @coal
   525 label *label631
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  526 sensor *tmp115 :supplyBlockFromCore:target @x
+  527 sensor *tmp116 :supplyBlockFromCore:target @y
   528 label *label632
   529 label *label633
   530 write "Moving..." processor2 ".status3"
 
   540 label *label638
   541 label *label639
   542 label *label640
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  543 sensor :depositItems:cap :supplyBlockFromCore:target @itemCapacity
   544 label *label641
-    * ucontrol itemDrop :depositItems:block 28
+  545 ucontrol itemDrop :supplyBlockFromCore:target 28
   546 label *label642
   547 sensor *tmp121 @unit @firstItem
   548 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  549 sensor *tmp123 :supplyBlockFromCore:target @coal
   550 jump *label641 greaterThan *tmp122 *tmp123
   551 label *label643
   552 jump *label649 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   190 jump *label107 lessThan *tmp146 :mineOre:amount
   191 label *label109
   192 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
   193 label *label603
   194 label *label604
   195 write "Depositing..." processor2 ".status3"
 
   512 op land *tmp179 *tmp177 *tmp178
   513 jump *label471 notEqual *tmp179 false
   514 label *label475
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item @coal
   515 label *label628
   516 label *label629
   517 write "Depositing..." processor2 ".status3"

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (+1 instructions):
 
    43 wait 1e12
    44 jump *label59 always
    45 end
-    * label *label33
-    * label *label447
-    * write "Moving..." processor2 ".status3"
-    * label *label448
-    * op sub *tmp107 :moveTo:radius 0.5
-    * label *label67
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label69 notEqual *tmp105 false
-    * label *label479
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
-    * label *label68
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label479 equal *tmp105 false
-    * label *label69
-    * label *label65
-    * return :moveTo*retaddr
-    * end
    46 label *label39
    47 op min :mineOre:amount :mineOre:amount 28
    48 label *label483
 
  1126 set :moveTo:x :buildBlockAt:x
  1127 set :moveTo:y :buildBlockAt:y
  1128 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label317 (h:*label317)
-    * call *label33 *invalid :moveTo*retval (m:*label317) (h:*label317)
-    * label *label317
+ 1129 label *label653
+ 1130 label *label654
+ 1131 write "Moving..." processor2 ".status3"
+ 1132 label *label655
+ 1133 op sub *tmp107 :moveTo:radius 0.5
+ 1134 label *label656
+ 1135 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1136 jump *label659 notEqual *tmp105 false
+ 1137 label *label657
+ 1138 ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1139 label *label658
+ 1140 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1141 jump *label657 equal *tmp105 false
+ 1142 label *label659
+ 1143 label *label660
  1144 label *label316
  1145 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp353
  1146 jump *label318 equal :buildBlockAt:building null
 
  1267 set :moveTo:x :buildTitaniumDrill:x
  1268 set :moveTo:y :buildTitaniumDrill:y
  1269 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label353 (h:*label353)
-    * call *label33 *invalid :moveTo*retval (m:*label353) (h:*label353)
-    * label *label353
+ 1270 label *label661
+ 1271 label *label662
+ 1272 write "Moving..." processor2 ".status3"
+ 1273 label *label663
+ 1274 op sub *tmp107 :moveTo:radius 0.5
+ 1275 label *label664
+ 1276 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1277 jump *label667 notEqual *tmp105 false
+ 1278 label *label665
+ 1279 ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1280 label *label666
+ 1281 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1282 jump *label665 equal *tmp105 false
+ 1283 label *label667
+ 1284 label *label668
  1285 label *label352
  1286 set .positive 0
  1287 set .negative 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1130 label *label654
  1131 write "Moving..." processor2 ".status3"
  1132 label *label655
-    * op sub *tmp107 :moveTo:radius 0.5
+ 1133 op sub *tmp107 6 0.5
  1134 label *label656
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1135 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105
  1136 jump *label659 notEqual *tmp105 false
  1137 label *label657
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1138 ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5
  1139 label *label658
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1140 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105
  1141 jump *label657 equal *tmp105 false
  1142 label *label659
  1143 label *label660
 
  1271 label *label662
  1272 write "Moving..." processor2 ".status3"
  1273 label *label663
-    * op sub *tmp107 :moveTo:radius 0.5
+ 1274 op sub *tmp107 6 0.5
  1275 label *label664
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1276 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1277 jump *label667 notEqual *tmp105 false
  1278 label *label665
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1279 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
  1280 label *label666
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1281 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1282 jump *label665 equal *tmp105 false
  1283 label *label667
  1284 label *label668

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1123 label *label22
  1124 setaddr :buildBlockAt*retaddr *label59
  1125 label *label23
-    * set :moveTo:x :buildBlockAt:x
-    * set :moveTo:y :buildBlockAt:y
-    * set :moveTo:radius 6
  1126 label *label653
  1127 label *label654
  1128 write "Moving..." processor2 ".status3"
  1129 label *label655
-    * op sub *tmp107 6 0.5
  1130 label *label656
  1131 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105
  1132 jump *label659 notEqual *tmp105 false
 
  1260 label *label50
  1261 jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1262 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * set :moveTo:x :buildTitaniumDrill:x
-    * set :moveTo:y :buildTitaniumDrill:y
-    * set :moveTo:radius 6
  1263 label *label661
  1264 label *label662
  1265 write "Moving..." processor2 ".status3"
  1266 label *label663
-    * op sub *tmp107 6 0.5
  1267 label *label664
  1268 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1269 jump *label667 notEqual *tmp105 false

Modifications by Inline function call at BuilderController.mnd:375:13 (+8 instructions):
 
  1283 set :titaniumDrillScore:y *tmp397
  1284 set :titaniumDrillScore:positive .positive
  1285 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label354 (h:*label354)
-    * call *label49 *invalid :titaniumDrillScore*retval (m:*label354) (h:*label354)
-    * label *label354
+ 1286 label *label669
+ 1287 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1288 jump *label670 always
+ 1289 label *label670
+ 1290 jump *label672 notEqual :getFloor:floor @ore-titanium
+ 1291 label *label671
+ 1292 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1293 jump *label675 always
+ 1294 label *label672
+ 1295 jump *label673 equal :getFloor:floor @ore-copper
+ 1296 jump *label673 equal :getFloor:floor @ore-lead
+ 1297 jump *label673 equal :getFloor:floor @ore-scrap
+ 1298 jump *label674 notEqual :getFloor:floor @ore-coal
+ 1299 label *label673
+ 1300 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1301 label *label674
+ 1302 label *label675
+ 1303 label *label676
  1304 set .positive :titaniumDrillScore:positive
  1305 set .negative :titaniumDrillScore:negative
  1306 op sub *tmp399 :buildTitaniumDrill:x 0.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1284 set :titaniumDrillScore:positive .positive
  1285 set :titaniumDrillScore:negative .negative
  1286 label *label669
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1287 ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
  1288 jump *label670 always
  1289 label *label670
  1290 jump *label672 notEqual :getFloor:floor @ore-titanium
 
  1305 set .negative :titaniumDrillScore:negative
  1306 op sub *tmp399 :buildTitaniumDrill:x 0.5
  1307 op add *tmp400 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp399
+ 1308 set :titaniumDrillScore:x *tmp396
  1309 set :titaniumDrillScore:y *tmp400
  1310 set :titaniumDrillScore:positive .positive
  1311 set :titaniumDrillScore:negative .negative

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
  1279 set .negative 0
  1280 op sub *tmp396 :buildTitaniumDrill:x 0.5
  1281 op sub *tmp397 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp397
  1282 set :titaniumDrillScore:positive .positive
  1283 set :titaniumDrillScore:negative .negative
  1284 label *label669
 
  1301 label *label676
  1302 set .positive :titaniumDrillScore:positive
  1303 set .negative :titaniumDrillScore:negative
-    * op sub *tmp399 :buildTitaniumDrill:x 0.5
  1304 op add *tmp400 :buildTitaniumDrill:y 0.5
  1305 set :titaniumDrillScore:x *tmp396
  1306 set :titaniumDrillScore:y *tmp400

Modifications by Inline function call at BuilderController.mnd:376:13 (+8 instructions):
 
  1306 set :titaniumDrillScore:y *tmp400
  1307 set :titaniumDrillScore:positive .positive
  1308 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label355 (h:*label355)
-    * call *label49 *invalid :titaniumDrillScore*retval (m:*label355) (h:*label355)
-    * label *label355
+ 1309 label *label677
+ 1310 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1311 jump *label678 always
+ 1312 label *label678
+ 1313 jump *label680 notEqual :getFloor:floor @ore-titanium
+ 1314 label *label679
+ 1315 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1316 jump *label683 always
+ 1317 label *label680
+ 1318 jump *label681 equal :getFloor:floor @ore-copper
+ 1319 jump *label681 equal :getFloor:floor @ore-lead
+ 1320 jump *label681 equal :getFloor:floor @ore-scrap
+ 1321 jump *label682 notEqual :getFloor:floor @ore-coal
+ 1322 label *label681
+ 1323 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1324 label *label682
+ 1325 label *label683
+ 1326 label *label684
  1327 set .positive :titaniumDrillScore:positive
  1328 set .negative :titaniumDrillScore:negative
  1329 op add *tmp402 :buildTitaniumDrill:x 0.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1307 set :titaniumDrillScore:positive .positive
  1308 set :titaniumDrillScore:negative .negative
  1309 label *label677
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1310 ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
  1311 jump *label678 always
  1312 label *label678
  1313 jump *label680 notEqual :getFloor:floor @ore-titanium
 
  1329 op add *tmp402 :buildTitaniumDrill:x 0.5
  1330 op sub *tmp403 :buildTitaniumDrill:y 0.5
  1331 set :titaniumDrillScore:x *tmp402
-    * set :titaniumDrillScore:y *tmp403
+ 1332 set :titaniumDrillScore:y *tmp397
  1333 set :titaniumDrillScore:positive .positive
  1334 set :titaniumDrillScore:negative .negative
  1335 setaddr :titaniumDrillScore*retaddr *label356 (h:*label356)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
  1302 set .positive :titaniumDrillScore:positive
  1303 set .negative :titaniumDrillScore:negative
  1304 op add *tmp400 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp400
  1305 set :titaniumDrillScore:positive .positive
  1306 set :titaniumDrillScore:negative .negative
  1307 label *label677
 
  1325 set .positive :titaniumDrillScore:positive
  1326 set .negative :titaniumDrillScore:negative
  1327 op add *tmp402 :buildTitaniumDrill:x 0.5
-    * op sub *tmp403 :buildTitaniumDrill:y 0.5
  1328 set :titaniumDrillScore:x *tmp402
  1329 set :titaniumDrillScore:y *tmp397
  1330 set :titaniumDrillScore:positive .positive

Modifications by Inline function 'titaniumDrillScore' defined at BuilderController.mnd:358:1 (+4 instructions):
 
  1237 set :buildFirstTitaniumDrillAt*finished true
  1238 jump *label59 always
  1239 end
-    * label *label49
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
-    * jump *label342 always
-    * label *label342
-    * jump *label343 notEqual :getFloor:floor @ore-titanium
-    * label *label344
-    * op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * jump *label341 always
-    * label *label343
-    * jump *label346 equal :getFloor:floor @ore-copper
-    * jump *label346 equal :getFloor:floor @ore-lead
-    * jump *label346 equal :getFloor:floor @ore-scrap
-    * jump *label345 notEqual :getFloor:floor @ore-coal
-    * label *label346
-    * op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * label *label345
-    * label *label341
-    * label *label340
-    * return :titaniumDrillScore*retaddr
-    * end
  1240 label *label50
  1241 jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1242 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
 
  1309 set :titaniumDrillScore:y *tmp397
  1310 set :titaniumDrillScore:positive .positive
  1311 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label356 (h:*label356)
-    * call *label49 *invalid :titaniumDrillScore*retval (m:*label356) (h:*label356)
-    * label *label356
+ 1312 label *label685
+ 1313 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1314 jump *label686 always
+ 1315 label *label686
+ 1316 jump *label688 notEqual :getFloor:floor @ore-titanium
+ 1317 label *label687
+ 1318 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1319 jump *label691 always
+ 1320 label *label688
+ 1321 jump *label689 equal :getFloor:floor @ore-copper
+ 1322 jump *label689 equal :getFloor:floor @ore-lead
+ 1323 jump *label689 equal :getFloor:floor @ore-scrap
+ 1324 jump *label690 notEqual :getFloor:floor @ore-coal
+ 1325 label *label689
+ 1326 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1327 label *label690
+ 1328 label *label691
+ 1329 label *label692
  1330 set .positive :titaniumDrillScore:positive
  1331 set .negative :titaniumDrillScore:negative
  1332 op add *tmp405 :buildTitaniumDrill:x 0.5
 
  1335 set :titaniumDrillScore:y *tmp406
  1336 set :titaniumDrillScore:positive .positive
  1337 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label357 (h:*label357)
-    * call *label49 *invalid :titaniumDrillScore*retval (m:*label357) (h:*label357)
-    * label *label357
+ 1338 label *label693
+ 1339 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1340 jump *label694 always
+ 1341 label *label694
+ 1342 jump *label696 notEqual :getFloor:floor @ore-titanium
+ 1343 label *label695
+ 1344 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1345 jump *label699 always
+ 1346 label *label696
+ 1347 jump *label697 equal :getFloor:floor @ore-copper
+ 1348 jump *label697 equal :getFloor:floor @ore-lead
+ 1349 jump *label697 equal :getFloor:floor @ore-scrap
+ 1350 jump *label698 notEqual :getFloor:floor @ore-coal
+ 1351 label *label697
+ 1352 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1353 label *label698
+ 1354 label *label699
+ 1355 label *label700
  1356 set .positive :titaniumDrillScore:positive
  1357 set .negative :titaniumDrillScore:negative
  1358 op greaterThan *tmp408 .positive .negative

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1310 set :titaniumDrillScore:positive .positive
  1311 set :titaniumDrillScore:negative .negative
  1312 label *label685
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1313 ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
  1314 jump *label686 always
  1315 label *label686
  1316 jump *label688 notEqual :getFloor:floor @ore-titanium
 
  1331 set .negative :titaniumDrillScore:negative
  1332 op add *tmp405 :buildTitaniumDrill:x 0.5
  1333 op add *tmp406 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp405
-    * set :titaniumDrillScore:y *tmp406
+ 1334 set :titaniumDrillScore:x *tmp402
+ 1335 set :titaniumDrillScore:y *tmp400
  1336 set :titaniumDrillScore:positive .positive
  1337 set :titaniumDrillScore:negative .negative
  1338 label *label693
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1339 ucontrol getBlock *tmp405 *tmp406 *tmp386 *tmp385 :getFloor:floor
  1340 jump *label694 always
  1341 label *label694
  1342 jump *label696 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1305 set .positive :titaniumDrillScore:positive
  1306 set .negative :titaniumDrillScore:negative
  1307 op add *tmp402 :buildTitaniumDrill:x 0.5
-    * set :titaniumDrillScore:x *tmp402
-    * set :titaniumDrillScore:y *tmp397
  1308 set :titaniumDrillScore:positive .positive
  1309 set :titaniumDrillScore:negative .negative
  1310 label *label685
 
  1329 set .negative :titaniumDrillScore:negative
  1330 op add *tmp405 :buildTitaniumDrill:x 0.5
  1331 op add *tmp406 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp402
-    * set :titaniumDrillScore:y *tmp400
  1332 set :titaniumDrillScore:positive .positive
  1333 set :titaniumDrillScore:negative .negative
  1334 label *label693
-    * ucontrol getBlock *tmp405 *tmp406 *tmp386 *tmp385 :getFloor:floor
+ 1335 ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
  1336 jump *label694 always
  1337 label *label694
  1338 jump *label696 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
  1327 label *label692
  1328 set .positive :titaniumDrillScore:positive
  1329 set .negative :titaniumDrillScore:negative
-    * op add *tmp405 :buildTitaniumDrill:x 0.5
-    * op add *tmp406 :buildTitaniumDrill:y 0.5
  1330 set :titaniumDrillScore:positive .positive
  1331 set :titaniumDrillScore:negative .negative
  1332 label *label693

Modifications by Inline function call at BuilderController.mnd:100:17 (+6 instructions):
 
   693 write "Goal 5: supplying generator" processor2 ".status1"
   694 label *label432
   695 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label217 (h:*label217)
-    * call *label41 *invalid :mineOre.2*retval (m:*label217) (h:*label217)
-    * label *label217
+  696 label *label701
+  697 label *label702
+  698 write "Mining " processor2 ".status2"
+  699 write :mineOre.2:ore processor2 ".item2"
+  700 write "core" processor2 ".block2"
+  701 label *label703
+  702 set :mineOre:ore :mineOre.2:ore
+  703 set :mineOre:amount 28
+  704 set :mineOre:block .core
+  705 setaddr :mineOre*retaddr *label704 (h:*label704)
+  706 call *label39 *invalid :mineOre*retval (m:*label704) (h:*label704)
+  707 label *label704
+  708 label *label705
   709 jump *label215 always
   710 label *label214
   711 sensor *tmp267 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   696 label *label701
   697 label *label702
   698 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  699 write @coal processor2 ".item2"
   700 write "core" processor2 ".block2"
   701 label *label703
-    * set :mineOre:ore :mineOre.2:ore
+  702 set :mineOre:ore @coal
   703 set :mineOre:amount 28
   704 set :mineOre:block .core
   705 setaddr :mineOre*retaddr *label704 (h:*label704)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-9 instructions):
 
   681 sensor *tmp255 .core @titanium
   682 op sub *tmp256 titanium *tmp255
   683 op min *tmp254 5 *tmp256
-    * jump *label209 always
   684 label *label209
   685 sensor *tmp258 .titaniumDrill @titanium
   686 jump *label210 greaterThanEq *tmp258 *tmp254
 
  1059 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1060 write 2 AÕFFJS-micro-processor9 "@counter"
  1061 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label304 always
  1062 label *label304
  1063 return :buildBlock*retaddr
  1064 end
 
  1123 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
  1124 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
  1125 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label312 always
  1126 label *label312
  1127 set :buildBlockFromCfg*finished true
  1128 jump *label59 always
 
  1216 label *label336
  1217 label *label333
  1218 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label315 always
  1219 label *label315
  1220 set :buildBlockAt*finished true
  1221 return :buildBlockAt*retaddr
 
  1238 read *tmp382 processor8 ":addTitaniumDrill*finished"
  1239 jump *label339 equal *tmp382 false
  1240 set :buildFirstTitaniumDrillAt*retval :buildBlockAt*retval
-    * jump *label337 always
  1241 label *label337
  1242 set :buildFirstTitaniumDrillAt*finished true
  1243 jump *label59 always
 
  1268 set :titaniumDrillScore:negative .negative
  1269 label *label669
  1270 ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * jump *label670 always
  1271 label *label670
  1272 jump *label672 notEqual :getFloor:floor @ore-titanium
  1273 label *label671
 
  1290 set :titaniumDrillScore:negative .negative
  1291 label *label677
  1292 ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * jump *label678 always
  1293 label *label678
  1294 jump *label680 notEqual :getFloor:floor @ore-titanium
  1295 label *label679
 
  1312 set :titaniumDrillScore:negative .negative
  1313 label *label685
  1314 ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * jump *label686 always
  1315 label *label686
  1316 jump *label688 notEqual :getFloor:floor @ore-titanium
  1317 label *label687
 
  1333 set :titaniumDrillScore:negative .negative
  1334 label *label693
  1335 ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * jump *label694 always
  1336 label *label694
  1337 jump *label696 notEqual :getFloor:floor @ore-titanium
  1338 label *label695

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-4 instructions):
 
   905 label *label15
   906 label *label388
   907 op sign *tmp327 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp327
+  908 set :meetTarget:count *tmp327
   909 label *label389
   910 label *label392
   911 op sign *tmp327 :meetTarget:lead
 
  1434 op sub *tmp436 :buildTitaniumDrills:y 1
  1435 set :buildTitaniumDrill:x *tmp435
  1436 set :buildTitaniumDrill:y *tmp436
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1437 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1438 setaddr :buildTitaniumDrill*retaddr *label378 (h:*label378)
  1439 call *label50 *invalid :buildTitaniumDrill*retval (m:*label378) (h:*label378)
 
  1445 op add *tmp440 :buildTitaniumDrills:y 1
  1446 set :buildTitaniumDrill:x *tmp439
  1447 set :buildTitaniumDrill:y *tmp440
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1448 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1449 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1450 call *label50 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
 
  1456 op add *tmp444 :buildTitaniumDrills:y 1
  1457 set :buildTitaniumDrill:x *tmp443
  1458 set :buildTitaniumDrill:y *tmp444
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1459 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1460 setaddr :buildTitaniumDrill*retaddr *label380 (h:*label380)
  1461 call *label50 *invalid :buildTitaniumDrill*retval (m:*label380) (h:*label380)
 
  1466 jump *label381 notEqual :buildTitaniumDrills:built 0
  1467 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1468 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1469 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1470 setaddr :buildTitaniumDrill*retaddr *label383 (h:*label383)
  1471 call *label50 *invalid :buildTitaniumDrill*retval (m:*label383) (h:*label383)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   904 setaddr :meetTarget*retaddr *label59
   905 label *label15
   906 label *label388
-    * op sign *tmp327 :meetTarget:copper
-    * set :meetTarget:count *tmp327
+  907 op sign :meetTarget:count :meetTarget:copper
   908 label *label389
   909 label *label392
   910 op sign *tmp327 :meetTarget:lead

Modifications by Iterated phase, Temp Variables Elimination, pass 2, iteration 1 (-2 instructions):
 
   737 label *label436
   738 sensor :supplyBase0:coal.1 .core @coal
   739 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.2:ore *tmp281
+  740 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   741 setaddr :mineOre.2*retaddr *label234 (h:*label234)
   742 call *label41 *invalid :mineOre.2*retval (m:*label234) (h:*label234)
   743 label *label234
 
   794 sensor *tmp295 .core @sand
   795 op lessThanEq *tmp296 *tmp294 *tmp295
   796 op or *tmp297 .scrap *tmp296
-    * select *tmp298 notEqual *tmp297 false @coal @sand
-    * set :mineOre.2:ore *tmp298
+  797 select :mineOre.2:ore notEqual *tmp297 false @coal @sand
   798 setaddr :mineOre.2*retaddr *label255 (h:*label255)
   799 call *label41 *invalid :mineOre.2*retval (m:*label255) (h:*label255)
   800 label *label255

Modifications by Inline function call at BuilderController.mnd:161:17 (+10 instructions):
 
   432 jump *label163 greaterThanEq *tmp217 50
   433 set :supplyBlock:block .thoriumGenerator
   434 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label165 (h:*label165)
-    * call *label43 *invalid :supplyBlock*retval (m:*label165) (h:*label165)
-    * label *label165
+  435 label *label706
+  436 label *label707
+  437 write "Supplying " processor2 ".status2"
+  438 write :supplyBlock:ore processor2 ".item2"
+  439 write :supplyBlock:block processor2 ".block2"
+  440 label *label708
+  441 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  442 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  443 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  444 jump *label710 lessThanEq :supplyBlock:missing 0
+  445 set :mineOre:ore :supplyBlock:ore
+  446 set :mineOre:amount :supplyBlock:blockCapacity
+  447 set :mineOre:block :supplyBlock:block
+  448 setaddr :mineOre*retaddr *label709 (h:*label709)
+  449 call *label39 *invalid :mineOre*retval (m:*label709) (h:*label709)
+  450 label *label709
+  451 label *label710
+  452 label *label711
+  453 label *label712
   454 jump *label164 always
   455 label *label163
   456 set :supplyBlockFromCore:target .thoriumGenerator

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   435 label *label706
   436 label *label707
   437 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  438 write @coal processor2 ".item2"
   439 write :supplyBlock:block processor2 ".block2"
   440 label *label708
   441 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  442 sensor *tmp165 :supplyBlock:block @coal
   443 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   444 jump *label710 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  445 set :mineOre:ore @coal
   446 set :mineOre:amount :supplyBlock:blockCapacity
   447 set :mineOre:block :supplyBlock:block
   448 setaddr :mineOre*retaddr *label709 (h:*label709)

Modifications by Inline function call at BuilderController.mnd:118:21 (+6 instructions):
 
   754 sensor :supplyBase0:coal.1 .core @coal
   755 sensor :supplyBase0:sand.1 .core @sand
   756 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * setaddr :mineOre.2*retaddr *label234 (h:*label234)
-    * call *label41 *invalid :mineOre.2*retval (m:*label234) (h:*label234)
-    * label *label234
+  757 label *label713
+  758 label *label714
+  759 write "Mining " processor2 ".status2"
+  760 write :mineOre.2:ore processor2 ".item2"
+  761 write "core" processor2 ".block2"
+  762 label *label715
+  763 set :mineOre:ore :mineOre.2:ore
+  764 set :mineOre:amount 28
+  765 set :mineOre:block .core
+  766 setaddr :mineOre*retaddr *label716 (h:*label716)
+  767 call *label39 *invalid :mineOre*retval (m:*label716) (h:*label716)
+  768 label *label716
+  769 label *label717
   770 label *label221
   771 jump *label219 always
   772 label *label218

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1 (-4 instructions):
 
  1457 op sub *tmp436 :buildTitaniumDrills:y 1
  1458 set :buildTitaniumDrill:x *tmp435
  1459 set :buildTitaniumDrill:y *tmp436
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1460 setaddr :buildTitaniumDrill*retaddr *label378 (h:*label378)
  1461 call *label50 *invalid :buildTitaniumDrill*retval (m:*label378) (h:*label378)
  1462 label *label378
 
  1467 op add *tmp440 :buildTitaniumDrills:y 1
  1468 set :buildTitaniumDrill:x *tmp439
  1469 set :buildTitaniumDrill:y *tmp440
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1470 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1471 call *label50 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
  1472 label *label379
 
  1477 op add *tmp444 :buildTitaniumDrills:y 1
  1478 set :buildTitaniumDrill:x *tmp443
  1479 set :buildTitaniumDrill:y *tmp444
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1480 setaddr :buildTitaniumDrill*retaddr *label380 (h:*label380)
  1481 call *label50 *invalid :buildTitaniumDrill*retval (m:*label380) (h:*label380)
  1482 label *label380
 
  1486 jump *label381 notEqual :buildTitaniumDrills:built 0
  1487 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1488 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1489 setaddr :buildTitaniumDrill*retaddr *label383 (h:*label383)
  1490 call *label50 *invalid :buildTitaniumDrill*retval (m:*label383) (h:*label383)
  1491 label *label383

Modifications by Inline function call at BuilderController.mnd:122:17 (+6 instructions):
 
   776 write "Goal 7: copper requirement" processor2 ".status1"
   777 label *label438
   778 set :mineOre.2:ore @copper
-    * setaddr :mineOre.2*retaddr *label238 (h:*label238)
-    * call *label41 *invalid :mineOre.2*retval (m:*label238) (h:*label238)
-    * label *label238
+  779 label *label718
+  780 label *label719
+  781 write "Mining " processor2 ".status2"
+  782 write :mineOre.2:ore processor2 ".item2"
+  783 write "core" processor2 ".block2"
+  784 label *label720
+  785 set :mineOre:ore :mineOre.2:ore
+  786 set :mineOre:amount 28
+  787 set :mineOre:block .core
+  788 setaddr :mineOre*retaddr *label721 (h:*label721)
+  789 call *label39 *invalid :mineOre*retval (m:*label721) (h:*label721)
+  790 label *label721
+  791 label *label722
   792 jump *label236 always
   793 label *label235
   794 sensor *tmp285 .core @lead

Modifications by Iterated phase, Data Flow Optimization, pass 3, iteration 1:
 
   779 label *label718
   780 label *label719
   781 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  782 write @copper processor2 ".item2"
   783 write "core" processor2 ".block2"
   784 label *label720
-    * set :mineOre:ore :mineOre.2:ore
+  785 set :mineOre:ore @copper
   786 set :mineOre:amount 28
   787 set :mineOre:block .core
   788 setaddr :mineOre*retaddr *label721 (h:*label721)

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    34 ubind @poly
    35 set .builder @unit
    36 ulocate building core false @copper .coreX .coreY *tmp103 .core
-    * label *label57
    37 jump *label56 equal .core null
-    * label *label58
    38 set .sandContainer .core
    39 set *signature "b1abbf1945b2011d:v1"
    40 label *label59
 
    43 end
    44 label *label39
    45 op min :mineOre:amount :mineOre:amount 28
-    * label *label483
    46 write :mineOre:amount processor2 ".transportTarget"
    47 write :mineOre:ore processor2 ".transportItem"
-    * label *label484
-    * label *label460
    48 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
    49 jump *label463 notEqual *tmp127 false
-    * label *label461
    50 set .ERROR "Cannot locate ore"
    51 stop
-    * label *label462
    52 label *label463
-    * label *label464
-    * label *label465
-    * label *label534
-    * label *label535
    53 write "Moving..." processor2 ".status3"
-    * label *label536
    54 label *label537
    55 sensor *tmp108 @unit @firstItem
    56 jump *label538 equal *tmp108 null
    57 ucontrol itemDrop @air 1000
    58 label *label538
-    * label *label539
    59 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label540
    60 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
    61 jump *label537 equal *tmp111 false
-    * label *label541
-    * label *label542
    62 sensor *tmp132 @unit @firstItem
    63 jump *label103 equal *tmp132 :mineOre:ore
-    * label *label558
-    * label *label559
    64 sensor *tmp113 @unit @firstItem
    65 jump *label562 equal *tmp113 null
    66 label *label560
    67 ucontrol itemDrop @air 1000
-    * label *label561
    68 sensor *tmp113 @unit @firstItem
    69 jump *label560 notEqual *tmp113 null
    70 label *label562
-    * label *label563
    71 label *label103
-    * label *label104
-    * label *label453
    72 write "Mining..." processor2 ".status3"
-    * label *label454
    73 op add :mineOre:stop @second 10
    74 label *label107
    75 sensor :mineOre:item @unit @firstItem
 
    79 jump *label110 equal *tmp139 false
    80 jump *label109 always
    81 label *label110
-    * label *label111
    82 ucontrol mine :locateOre:x :locateOre:y
    83 jump *label112 lessThanEq @second :mineOre:stop
    84 jump *label109 always
    85 label *label112
-    * label *label113
    86 jump *label114 notEqual .noTarget false
-    * label *label508
    87 sensor *tmp305 .core @silicon
    88 jump *label509 greaterThanEq *tmp305 silicon
    89 write @silicon processor2 ".missing"
    90 set :targetMet*retval false
    91 jump *label523 always
    92 label *label509
-    * label *label510
    93 sensor *tmp308 .core @copper
    94 jump *label511 greaterThanEq *tmp308 copper
    95 write @copper processor2 ".missing"
    96 set :targetMet*retval false
    97 jump *label523 always
    98 label *label511
-    * label *label512
    99 sensor *tmp311 .core @lead
   100 jump *label513 greaterThanEq *tmp311 lead
   101 write @lead processor2 ".missing"
   102 set :targetMet*retval false
   103 jump *label523 always
   104 label *label513
-    * label *label514
   105 sensor *tmp314 .core @metaglass
   106 jump *label515 greaterThanEq *tmp314 metaglass
   107 write @metaglass processor2 ".missing"
   108 set :targetMet*retval false
   109 jump *label523 always
   110 label *label515
-    * label *label516
   111 sensor *tmp317 .core @graphite
   112 jump *label517 greaterThanEq *tmp317 graphite
   113 write @graphite processor2 ".missing"
   114 set :targetMet*retval false
   115 jump *label523 always
   116 label *label517
-    * label *label518
   117 sensor *tmp320 .core @titanium
   118 jump *label519 greaterThanEq *tmp320 titanium
   119 write @titanium processor2 ".missing"
   120 set :targetMet*retval false
   121 jump *label523 always
   122 label *label519
-    * label *label520
   123 sensor *tmp323 .core @thorium
   124 jump *label521 greaterThanEq *tmp323 thorium
   125 write @thorium processor2 ".missing"
   126 set :targetMet*retval false
   127 jump *label523 always
   128 label *label521
-    * label *label522
   129 set :targetMet*retval true
   130 jump *label523 always
   131 label *label523
   132 jump *label117 equal :targetMet*retval false
   133 jump *label109 always
   134 label *label117
-    * label *label118
   135 label *label114
-    * label *label115
-    * label *label108
   136 sensor *tmp146 @unit @totalItems
   137 jump *label107 lessThan *tmp146 :mineOre:amount
   138 label *label109
   139 ucontrol unbind
-    * label *label603
-    * label *label604
   140 write "Depositing..." processor2 ".status3"
-    * label *label605
   141 sensor *tmp117 @unit @firstItem
   142 jump *label619 notEqual *tmp117 :mineOre:ore
-    * label *label606
   143 sensor *tmp115 :mineOre:block @x
   144 sensor *tmp116 :mineOre:block @y
-    * label *label607
-    * label *label608
   145 write "Moving..." processor2 ".status3"
-    * label *label609
-    * label *label610
   146 ucontrol within *tmp115 *tmp116 6 *tmp105
   147 jump *label613 notEqual *tmp105 false
   148 label *label611
   149 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label612
   150 ucontrol within *tmp115 *tmp116 6 *tmp105
   151 jump *label611 equal *tmp105 false
   152 label *label613
-    * label *label614
-    * label *label615
   153 sensor :depositItems:cap :mineOre:block @itemCapacity
   154 label *label616
   155 ucontrol itemDrop :mineOre:block 28
-    * label *label617
   156 sensor *tmp121 @unit @firstItem
   157 op mul *tmp122 *tmp121 :depositItems:cap
   158 sensor *tmp123 :mineOre:block :mineOre:ore
   159 jump *label616 greaterThan *tmp122 *tmp123
-    * label *label618
   160 jump *label624 always
   161 label *label619
-    * label *label620
   162 sensor *tmp125 @unit @firstItem
   163 jump *label623 equal *tmp125 null
   164 label *label621
   165 ucontrol itemDrop @air 1000
-    * label *label622
   166 sensor *tmp125 @unit @firstItem
   167 jump *label621 notEqual *tmp125 null
   168 label *label623
   169 label *label624
-    * label *label625
   170 write 0 processor2 ".transportTarget"
   171 write null processor2 ".transportItem"
-    * label *label626
-    * label *label627
-    * label *label99
   172 return :mineOre*retaddr
   173 end
   174 label *label40
-    * label *label554
   175 write "Mining " processor2 ".status2"
   176 write :mineOre.1:ore processor2 ".item2"
   177 write :mineOre.1:block processor2 ".block2"
-    * label *label555
   178 set :mineOre:ore :mineOre.1:ore
   179 set :mineOre:amount 28
   180 set :mineOre:block :mineOre.1:block
   181 setaddr :mineOre*retaddr *label122 (h:*label122)
   182 call *label39 *invalid :mineOre*retval (m:*label122) (h:*label122)
   183 label *label122
-    * label *label120
   184 return :mineOre.1*retaddr
   185 end
   186 label *label41
-    * label *label491
   187 write "Mining " processor2 ".status2"
   188 write :mineOre.2:ore processor2 ".item2"
   189 write "core" processor2 ".block2"
-    * label *label492
   190 set :mineOre:ore :mineOre.2:ore
   191 set :mineOre:amount 28
   192 set :mineOre:block .core
   193 setaddr :mineOre*retaddr *label125 (h:*label125)
   194 call *label39 *invalid :mineOre*retval (m:*label125) (h:*label125)
   195 label *label125
-    * label *label123
   196 return :mineOre.2*retaddr
   197 end
   198 label *label42
   199 sensor *tmp151 :fetchBlock:block @itemCapacity
   200 op min :transportStatus:target *tmp151 28
-    * label *label485
   201 write :transportStatus:target processor2 ".transportTarget"
   202 write :fetchBlock:item processor2 ".transportItem"
-    * label *label486
-    * label *label489
   203 write "Fetching " processor2 ".status2"
   204 write :fetchBlock:item processor2 ".item2"
   205 write :fetchBlock:block processor2 ".block2"
-    * label *label490
   206 sensor *tmp153 :fetchBlock:block @x
   207 sensor *tmp154 :fetchBlock:block @y
-    * label *label499
-    * label *label500
   208 write "Moving..." processor2 ".status3"
-    * label *label501
   209 label *label502
   210 sensor *tmp108 @unit @firstItem
   211 jump *label503 equal *tmp108 null
   212 ucontrol itemDrop @air 1000
   213 label *label503
-    * label *label504
   214 ucontrol approach *tmp153 *tmp154 5.5
-    * label *label505
   215 ucontrol within *tmp153 *tmp154 6 *tmp111
   216 jump *label502 equal *tmp111 false
-    * label *label506
-    * label *label507
-    * label *label493
-    * label *label494
   217 sensor *tmp113 @unit @firstItem
   218 jump *label497 equal *tmp113 null
   219 label *label495
   220 ucontrol itemDrop @air 1000
-    * label *label496
   221 sensor *tmp113 @unit @firstItem
   222 jump *label495 notEqual *tmp113 null
   223 label *label497
-    * label *label498
   224 label *label131
   225 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   226 sensor :fetchBlock:unitItem @unit @firstItem
 
   230 jump *label134 equal *tmp158 false
   231 ucontrol itemDrop @air 1000
   232 label *label134
-    * label *label135
-    * label *label132
   233 sensor *tmp160 @unit :fetchBlock:item
   234 op lessThan *tmp161 *tmp160 28
   235 sensor *tmp162 :fetchBlock:block :fetchBlock:item
   236 op land *tmp163 *tmp161 *tmp162
   237 jump *label131 notEqual *tmp163 false
-    * label *label133
-    * label *label577
-    * label *label578
   238 write "Depositing..." processor2 ".status3"
-    * label *label579
   239 sensor *tmp117 @unit @firstItem
   240 jump *label593 notEqual *tmp117 :fetchBlock:item
-    * label *label580
   241 sensor *tmp115 .core @x
   242 sensor *tmp116 .core @y
-    * label *label581
-    * label *label582
   243 write "Moving..." processor2 ".status3"
-    * label *label583
-    * label *label584
   244 ucontrol within *tmp115 *tmp116 6 *tmp105
   245 jump *label587 notEqual *tmp105 false
   246 label *label585
   247 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label586
   248 ucontrol within *tmp115 *tmp116 6 *tmp105
   249 jump *label585 equal *tmp105 false
   250 label *label587
-    * label *label588
-    * label *label589
   251 sensor :depositItems:cap .core @itemCapacity
   252 label *label590
   253 ucontrol itemDrop .core 28
-    * label *label591
   254 sensor *tmp121 @unit @firstItem
   255 op mul *tmp122 *tmp121 :depositItems:cap
   256 sensor *tmp123 .core :fetchBlock:item
   257 jump *label590 greaterThan *tmp122 *tmp123
-    * label *label592
   258 jump *label598 always
   259 label *label593
-    * label *label594
   260 sensor *tmp125 @unit @firstItem
   261 jump *label597 equal *tmp125 null
   262 label *label595
   263 ucontrol itemDrop @air 1000
-    * label *label596
   264 sensor *tmp125 @unit @firstItem
   265 jump *label595 notEqual *tmp125 null
   266 label *label597
   267 label *label598
-    * label *label599
   268 write 0 processor2 ".transportTarget"
   269 write null processor2 ".transportItem"
-    * label *label600
-    * label *label601
-    * label *label126
   270 return :fetchBlock*retaddr
   271 end
   272 label *label43
-    * label *label532
   273 write "Supplying " processor2 ".status2"
   274 write :supplyBlock:ore processor2 ".item2"
   275 write :supplyBlock:block processor2 ".block2"
-    * label *label533
   276 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   277 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   278 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   284 call *label39 *invalid :mineOre*retval (m:*label141) (h:*label141)
   285 label *label141
   286 label *label139
-    * label *label140
-    * label *label137
   287 return :supplyBlock*retaddr
   288 end
   289 label *label46
 
   307 sensor :unpackCfg:ti :unpackCfg:type @titanium
   308 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   309 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label153
   310 return :unpackCfg*retaddr
   311 end
   312 label *label12
 
   318 op max *tmp209 0 *tmp208
   319 write *tmp209 processor7 ".sandTarget"
   320 jump *label155 equal .thoriumContainer false
-    * label *label417
   321 write "Phase 2: servicing thorium drill" processor2 ".status1"
-    * label *label418
   322 sensor *tmp211 .thoriumBattery @totalPower
   323 jump *label159 greaterThanEq *tmp211 2000
   324 sensor *tmp214 .thoriumGenerator @coal
 
   327 jump *label163 greaterThanEq *tmp217 50
   328 set :supplyBlock:block .thoriumGenerator
   329 set :supplyBlock:ore @coal
-    * label *label706
-    * label *label707
   330 write "Supplying " processor2 ".status2"
   331 write @coal processor2 ".item2"
   332 write :supplyBlock:block processor2 ".block2"
-    * label *label708
   333 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   334 sensor *tmp165 :supplyBlock:block @coal
   335 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   341 call *label39 *invalid :mineOre*retval (m:*label709) (h:*label709)
   342 label *label709
   343 label *label710
-    * label *label711
-    * label *label712
   344 jump *label164 always
   345 label *label163
   346 set :supplyBlockFromCore:target .thoriumGenerator
-    * label *label466
   347 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   348 op min :supplyBlockFromCore:cap *tmp169 28
   349 set :transportStatus:target :supplyBlockFromCore:cap
-    * label *label487
   350 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   351 write @coal processor2 ".transportItem"
-    * label *label488
-    * label *label556
   352 write "Transferring " processor2 ".status2"
   353 write @coal processor2 ".item2"
   354 write :supplyBlockFromCore:target processor2 ".block2"
-    * label *label557
-    * label *label543
-    * label *label544
   355 write "Moving..." processor2 ".status3"
-    * label *label545
   356 label *label546
   357 sensor *tmp108 @unit @firstItem
   358 jump *label547 equal *tmp108 null
   359 ucontrol itemDrop @air 1000
   360 label *label547
-    * label *label548
   361 ucontrol approach .coreX .coreY 5.5
-    * label *label549
   362 ucontrol within .coreX .coreY 6 *tmp111
   363 jump *label546 equal *tmp111 false
-    * label *label550
-    * label *label551
-    * label *label564
-    * label *label565
   364 sensor *tmp113 @unit @firstItem
   365 jump *label568 equal *tmp113 null
   366 label *label566
   367 ucontrol itemDrop @air 1000
-    * label *label567
   368 sensor *tmp113 @unit @firstItem
   369 jump *label566 notEqual *tmp113 null
   370 label *label568
-    * label *label569
   371 label *label471
   372 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   373 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   377 jump *label472 equal *tmp174 false
   378 ucontrol itemDrop @air 1000
   379 label *label472
-    * label *label473
-    * label *label474
   380 sensor *tmp176 @unit @coal
   381 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
   382 sensor *tmp178 .core @coal
   383 op land *tmp179 *tmp177 *tmp178
   384 jump *label471 notEqual *tmp179 false
-    * label *label475
-    * label *label628
-    * label *label629
   385 write "Depositing..." processor2 ".status3"
-    * label *label630
   386 sensor *tmp117 @unit @firstItem
   387 jump *label644 notEqual *tmp117 @coal
-    * label *label631
   388 sensor *tmp115 :supplyBlockFromCore:target @x
   389 sensor *tmp116 :supplyBlockFromCore:target @y
-    * label *label632
-    * label *label633
   390 write "Moving..." processor2 ".status3"
-    * label *label634
-    * label *label635
   391 ucontrol within *tmp115 *tmp116 6 *tmp105
   392 jump *label638 notEqual *tmp105 false
   393 label *label636
   394 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label637
   395 ucontrol within *tmp115 *tmp116 6 *tmp105
   396 jump *label636 equal *tmp105 false
   397 label *label638
-    * label *label639
-    * label *label640
   398 sensor :depositItems:cap :supplyBlockFromCore:target @itemCapacity
   399 label *label641
   400 ucontrol itemDrop :supplyBlockFromCore:target 28
-    * label *label642
   401 sensor *tmp121 @unit @firstItem
   402 op mul *tmp122 *tmp121 :depositItems:cap
   403 sensor *tmp123 :supplyBlockFromCore:target @coal
   404 jump *label641 greaterThan *tmp122 *tmp123
-    * label *label643
   405 jump *label649 always
   406 label *label644
-    * label *label645
   407 sensor *tmp125 @unit @firstItem
   408 jump *label648 equal *tmp125 null
   409 label *label646
   410 ucontrol itemDrop @air 1000
-    * label *label647
   411 sensor *tmp125 @unit @firstItem
   412 jump *label646 notEqual *tmp125 null
   413 label *label648
   414 label *label649
-    * label *label650
   415 write 0 processor2 ".transportTarget"
   416 write null processor2 ".transportItem"
-    * label *label651
-    * label *label652
-    * label *label477
   417 label *label164
   418 label *label161
-    * label *label162
   419 label *label159
-    * label *label160
   420 set :fetchBlock:block .thoriumContainer
   421 set :fetchBlock:item @thorium
   422 setaddr :fetchBlock*retaddr *label167 (h:*label167)
 
   425 sensor *tmp220 .core @thorium
   426 jump *label168 lessThanEq *tmp220 400
   427 write 0 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label170
   428 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label171
   429 label *label168
-    * label *label169
-    * label *label157
   430 jump *label156 always
   431 label *label155
   432 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   433 jump *label172 lessThanEq *tmp81 1
-    * label *label419
   434 write "Phase 1: supplying base" processor2 ".status1"
-    * label *label420
   435 set :mineOre.2:ore @coal
-    * label *label572
-    * label *label573
   436 write "Mining " processor2 ".status2"
   437 write @coal processor2 ".item2"
   438 write "core" processor2 ".block2"
-    * label *label574
   439 set :mineOre:ore @coal
   440 set :mineOre:amount 28
   441 set :mineOre:block .core
   442 setaddr :mineOre*retaddr *label575 (h:*label575)
   443 call *label39 *invalid :mineOre*retval (m:*label575) (h:*label575)
   444 label *label575
-    * label *label576
-    * label *label174
   445 jump *label173 always
   446 label *label172
   447 set :supplyBase0:supplied false
 
   450 jump *label180 greaterThanEq *tmp227 graphite
   451 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   452 jump *label182 greaterThanEq *tmp230 5
-    * label *label421
   453 write "Goal 1: graphite requirement" processor2 ".status1"
-    * label *label422
   454 set :supplyBlock:block AJEMJJ-graphite-press0
   455 set :supplyBlock:ore @coal
   456 setaddr :supplyBlock*retaddr *label185 (h:*label185)
 
   458 label *label185
   459 set :supplyBase0:supplied true
   460 label *label182
-    * label *label183
   461 label *label180
-    * label *label181
   462 sensor *tmp233 AJTJK-battery1 @totalPower
   463 jump *label186 greaterThanEq *tmp233 .powerTarget
   464 sensor *tmp236 AJRJM-combustion-generator3 @coal
   465 jump *label188 greaterThanEq *tmp236 2
-    * label *label423
   466 write "Goal 4: supplying generator" processor2 ".status1"
-    * label *label424
   467 set :supplyBlock:block AJRJM-combustion-generator3
   468 set :supplyBlock:ore @coal
   469 setaddr :supplyBlock*retaddr *label191 (h:*label191)
 
   471 label *label191
   472 jump *label177 always
   473 label *label188
-    * label *label189
   474 label *label186
-    * label *label187
   475 sensor *tmp239 .core @silicon
   476 jump *label192 greaterThanEq *tmp239 silicon
   477 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   478 jump *label194 greaterThanEq *tmp242 5
-    * label *label425
   479 write "Goal 2: coal for silicon requirement" processor2 ".status1"
-    * label *label426
   480 set :supplyBlock:block ALMQJN-silicon-smelter4
   481 set :supplyBlock:ore @coal
   482 setaddr :supplyBlock*retaddr *label197 (h:*label197)
 
   490 jump *label200 equal .scrap false
   491 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   492 jump *label202 greaterThanEq *tmp249 10
-    * label *label427
   493 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
-    * label *label428
   494 set :supplyBlock:block AXPRJd-pulverizer26
   495 set :supplyBlock:ore @scrap
   496 setaddr :supplyBlock*retaddr *label205 (h:*label205)
 
   498 label *label205
   499 set :supplyBase0:supplied true
   500 label *label202
-    * label *label203
   501 jump *label201 always
   502 label *label200
-    * label *label429
   503 write "Goal 3: sand for silicon requirement" processor2 ".status1"
-    * label *label430
   504 set :supplyBlock:block ALMQJN-silicon-smelter4
   505 set :supplyBlock:ore @sand
   506 setaddr :supplyBlock*retaddr *label207 (h:*label207)
 
   509 set :supplyBase0:supplied true
   510 label *label201
   511 label *label198
-    * label *label199
   512 label *label195
   513 label *label192
-    * label *label193
   514 label *label178
-    * label *label179
   515 set *tmp254 100
   516 sensor *tmp252 .core @titanium
   517 jump *label209 greaterThanEq *tmp252 titanium
 
   525 sensor *tmp263 AJTJK-battery1 @totalPower
   526 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   527 jump *label214 greaterThanEq *tmp263 *tmp264
-    * label *label431
   528 write "Goal 5: supplying generator" processor2 ".status1"
-    * label *label432
   529 set :mineOre.2:ore @coal
-    * label *label701
-    * label *label702
   530 write "Mining " processor2 ".status2"
   531 write @coal processor2 ".item2"
   532 write "core" processor2 ".block2"
-    * label *label703
   533 set :mineOre:ore @coal
   534 set :mineOre:amount 28
   535 set :mineOre:block .core
   536 setaddr :mineOre*retaddr *label704 (h:*label704)
   537 call *label39 *invalid :mineOre*retval (m:*label704) (h:*label704)
   538 label *label704
-    * label *label705
   539 jump *label215 always
   540 label *label214
   541 sensor *tmp267 .core @silicon
   542 jump *label218 greaterThanEq *tmp267 silicon
   543 jump *label220 equal .scrap false
-    * label *label433
   544 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label434
   545 jump *label223 equal A¨SSJh-container30 false
   546 sensor :supplyBase0:coal .core @coal
   547 sensor :supplyBase0:sand A¨SSJh-container30 @sand
 
   561 label *label224
   562 jump *label221 always
   563 label *label220
-    * label *label435
   564 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label436
   565 sensor :supplyBase0:coal.1 .core @coal
   566 sensor :supplyBase0:sand.1 .core @sand
   567 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * label *label713
-    * label *label714
   568 write "Mining " processor2 ".status2"
   569 write :mineOre.2:ore processor2 ".item2"
   570 write "core" processor2 ".block2"
-    * label *label715
   571 set :mineOre:ore :mineOre.2:ore
   572 set :mineOre:amount 28
   573 set :mineOre:block .core
   574 setaddr :mineOre*retaddr *label716 (h:*label716)
   575 call *label39 *invalid :mineOre*retval (m:*label716) (h:*label716)
   576 label *label716
-    * label *label717
   577 label *label221
   578 jump *label219 always
   579 label *label218
   580 sensor *tmp282 .core @copper
   581 jump *label235 greaterThanEq *tmp282 copper
-    * label *label437
   582 write "Goal 7: copper requirement" processor2 ".status1"
-    * label *label438
   583 set :mineOre.2:ore @copper
-    * label *label718
-    * label *label719
   584 write "Mining " processor2 ".status2"
   585 write @copper processor2 ".item2"
   586 write "core" processor2 ".block2"
-    * label *label720
   587 set :mineOre:ore @copper
   588 set :mineOre:amount 28
   589 set :mineOre:block .core
   590 setaddr :mineOre*retaddr *label721 (h:*label721)
   591 call *label39 *invalid :mineOre*retval (m:*label721) (h:*label721)
   592 label *label721
-    * label *label722
   593 jump *label236 always
   594 label *label235
   595 sensor *tmp285 .core @lead
   596 jump *label239 greaterThanEq *tmp285 lead
-    * label *label439
   597 write "Goal 8: lead requirement" processor2 ".status1"
-    * label *label440
   598 set :mineOre.2:ore @lead
   599 setaddr :mineOre.2*retaddr *label242 (h:*label242)
   600 call *label41 *invalid :mineOre.2*retval (m:*label242) (h:*label242)
 
   603 label *label239
   604 sensor *tmp288 .core @metaglass
   605 jump *label243 greaterThanEq *tmp288 metaglass
-    * label *label441
   606 write "Goal 9: metaglass requirement" processor2 ".status1"
-    * label *label442
   607 jump *label246 equal .scrap false
   608 set :mineOre.1:ore @scrap
   609 set :mineOre.1:block .sandContainer
 
   619 label *label247
   620 jump *label244 always
   621 label *label243
-    * label *label443
   622 write "Goal 10: supplying base" processor2 ".status1"
-    * label *label444
   623 jump *label251 notEqual A¨SSJh-container30 null
   624 sensor *tmp294 .core @coal
   625 sensor *tmp295 .core @sand
 
   655 label *label219
   656 label *label215
   657 label *label212
-    * label *label213
   658 jump *label211 always
   659 label *label210
-    * label *label445
   660 write "Goal 11: Fetching titanium" processor2 ".status1"
-    * label *label446
   661 set :fetchBlock:block .titaniumDrill
   662 set :fetchBlock:item @titanium
   663 setaddr :fetchBlock*retaddr *label261 (h:*label261)
 
   667 label *label177
   668 label *label173
   669 label *label156
-    * label *label154
   670 set :supplyBase*finished true
   671 return :supplyBase*retaddr
   672 end
 
   677 set :targetMet*retval false
   678 jump *label262 always
   679 label *label263
-    * label *label264
   680 sensor *tmp308 .core @copper
   681 jump *label265 greaterThanEq *tmp308 copper
   682 write @copper processor2 ".missing"
   683 set :targetMet*retval false
   684 jump *label262 always
   685 label *label265
-    * label *label266
   686 sensor *tmp311 .core @lead
   687 jump *label267 greaterThanEq *tmp311 lead
   688 write @lead processor2 ".missing"
   689 set :targetMet*retval false
   690 jump *label262 always
   691 label *label267
-    * label *label268
   692 sensor *tmp314 .core @metaglass
   693 jump *label269 greaterThanEq *tmp314 metaglass
   694 write @metaglass processor2 ".missing"
   695 set :targetMet*retval false
   696 jump *label262 always
   697 label *label269
-    * label *label270
   698 sensor *tmp317 .core @graphite
   699 jump *label271 greaterThanEq *tmp317 graphite
   700 write @graphite processor2 ".missing"
   701 set :targetMet*retval false
   702 jump *label262 always
   703 label *label271
-    * label *label272
   704 sensor *tmp320 .core @titanium
   705 jump *label273 greaterThanEq *tmp320 titanium
   706 write @titanium processor2 ".missing"
   707 set :targetMet*retval false
   708 jump *label262 always
   709 label *label273
-    * label *label274
   710 sensor *tmp323 .core @thorium
   711 jump *label275 greaterThanEq *tmp323 thorium
   712 write @thorium processor2 ".missing"
   713 set :targetMet*retval false
   714 jump *label262 always
   715 label *label275
-    * label *label276
   716 set :targetMet*retval true
   717 jump *label262 always
   718 label *label262
 
   721 label *label14
   722 setaddr :meetTarget*retaddr *label59
   723 label *label15
-    * label *label388
   724 op sign :meetTarget:count :meetTarget:copper
-    * label *label389
-    * label *label392
   725 op sign *tmp327 :meetTarget:lead
   726 op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label393
-    * label *label396
   727 op sign *tmp327 :meetTarget:graphite
   728 op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label397
-    * label *label400
   729 op sign *tmp327 :meetTarget:silicon
   730 op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label401
-    * label *label404
   731 op sign *tmp327 :meetTarget:titanium
   732 op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label405
-    * label *label408
   733 op sign *tmp327 :meetTarget:metaglass
   734 op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label409
-    * label *label412
   735 op sign *tmp327 :meetTarget:thorium
   736 op add :meetTarget:count :meetTarget:count *tmp327
-    * label *label413
-    * label *label280
   737 write :meetTarget:count processor2 ".totalTargets"
   738 write :meetTarget:block processor2 ".nextBlock"
   739 write :meetTarget:copper processor2 ".targetCopper"
 
   767 write *tmp337 AÕFFJS-micro-processor9 ".graphiteReserve"
   768 write lead processor7 ".leadTarget"
   769 write :meetTarget:copper processor7 ".copperTarget"
-    * label *label288
   770 setaddr :targetMet*retaddr *label291 (h:*label291)
   771 call *label47 *invalid :targetMet*retval (m:*label291) (h:*label291)
   772 label *label291
 
   775 setaddr :supplyBase*retaddr *label292 (h:*label292)
   776 call *label13 *invalid :supplyBase*retval (m:*label292) (h:*label292)
   777 label *label292
-    * label *label289
   778 setaddr :targetMet*retaddr *label553 (h:*label553)
   779 call *label47 *invalid :targetMet*retval (m:*label553) (h:*label553)
   780 label *label553
 
   787 wait 1e-15
   788 read *tmp341 AÕFFJS-micro-processor9 ":buildStart*finished"
   789 jump *label295 equal *tmp341 false
-    * label *label296
   790 setaddr :targetMet*retaddr *label299 (h:*label299)
   791 call *label47 *invalid :targetMet*retval (m:*label299) (h:*label299)
   792 label *label299
 
   795 setaddr :supplyBase*retaddr *label300 (h:*label300)
   796 call *label13 *invalid :supplyBase*retval (m:*label300) (h:*label300)
   797 label *label300
-    * label *label297
   798 setaddr :targetMet*retaddr *label571 (h:*label571)
   799 call *label47 *invalid :targetMet*retval (m:*label571) (h:*label571)
   800 label *label571
   801 jump *label570 equal :targetMet*retval false
   802 label *label298
   803 label *label293
-    * label *label294
-    * label *label277
   804 set :meetTarget*finished true
   805 return :meetTarget*retaddr
   806 end
 
   824 setaddr :meetTarget*retaddr *label303 (h:*label303)
   825 call *label15 *invalid :meetTarget*retval (m:*label303) (h:*label303)
   826 label *label303
-    * label *label301
   827 set :meetTargetCfg*finished true
   828 return :meetTargetCfg*retaddr
   829 end
 
   854 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   855 write 2 AÕFFJS-micro-processor9 "@counter"
   856 set :buildBlock*retval :buildBlockAt*retval
-    * label *label304
   857 return :buildBlock*retaddr
   858 end
   859 label *label18
 
   882 set :buildRemoteBlock*retval :buildBlock*retval
   883 jump *label307 always
   884 label *label308
-    * label *label309
   885 set :buildRemoteBlock*retval false
   886 jump *label307 always
   887 label *label307
 
   916 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
   917 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
   918 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label312
   919 set :buildBlockFromCfg*finished true
   920 jump *label59 always
   921 end
   922 label *label22
   923 setaddr :buildBlockAt*retaddr *label59
   924 label *label23
-    * label *label653
-    * label *label654
   925 write "Moving..." processor2 ".status3"
-    * label *label655
-    * label *label656
   926 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105
   927 jump *label659 notEqual *tmp105 false
   928 label *label657
   929 ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5
-    * label *label658
   930 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105
   931 jump *label657 equal *tmp105 false
   932 label *label659
-    * label *label660
-    * label *label316
   933 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp353
   934 jump *label318 equal :buildBlockAt:building null
   935 jump *label320 notEqual :buildBlockAt:type :buildBlockAt:block
   936 set :buildBlockAt*retval :buildBlockAt:building
   937 jump *label315 always
   938 label *label320
-    * label *label321
   939 set .ERROR "Cannot build at position"
   940 set .ERROR_FOUND_BLOCK :buildBlockAt:block
   941 set .ERROR_FOUND_TYPE :buildBlockAt:type
   942 set .ERROR_X :buildBlockAt:x
   943 set .ERROR_Y :buildBlockAt:y
   944 stop
-    * label *label322
   945 label *label318
-    * label *label319
   946 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   947 wait 0.25
   948 set :buildBlockAt:success false
 
   959 set .ERROR_X :buildBlockAt:x
   960 set .ERROR_Y :buildBlockAt:y
   961 stop
-    * label *label328
   962 jump *label327 always
   963 label *label326
   964 set :buildBlockAt:success true
 
   970 ucontrol approach :buildBlockAt:x :buildBlockAt:y 6
   971 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   972 label *label331
-    * label *label332
   973 label *label329
-    * label *label330
-    * label *label324
   974 jump *label323 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label325
   975 control enabled processor6 true
   976 ubind .builder
   977 sensor :log:encodedId :buildBlockAt:block @id
 
   982 op mul *tmp375 *tmp0 1000
   983 op add *tmp376 :log:encodedId *tmp375
   984 write *tmp376 bank1 *tmp372
-    * label *label334
   985 jump *label335 lessThan :buildBlockAt:index 0
   986 op shl *tmp379 1 :buildBlockAt:index
   987 read *tmp7 processor2 ".blocksBuilt"
 
   989 write *tmp380 processor2 ".blocksBuilt"
   990 write :buildBlockAt:index processor2 ".recentBuildIndex"
   991 label *label335
-    * label *label336
-    * label *label333
   992 set :buildBlockAt*retval :buildBlockAt:building
   993 label *label315
   994 set :buildBlockAt*finished true
 
  1012 read *tmp382 processor8 ":addTitaniumDrill*finished"
  1013 jump *label339 equal *tmp382 false
  1014 set :buildFirstTitaniumDrillAt*retval :buildBlockAt*retval
-    * label *label337
  1015 set :buildFirstTitaniumDrillAt*finished true
  1016 jump *label59 always
  1017 end
  1018 label *label50
  1019 jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1020 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * label *label661
-    * label *label662
  1021 write "Moving..." processor2 ".status3"
-    * label *label663
-    * label *label664
  1022 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1023 jump *label667 notEqual *tmp105 false
  1024 label *label665
  1025 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
-    * label *label666
  1026 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1027 jump *label665 equal *tmp105 false
  1028 label *label667
-    * label *label668
-    * label *label352
  1029 set .positive 0
  1030 set .negative 0
  1031 op sub *tmp396 :buildTitaniumDrill:x 0.5
  1032 op sub *tmp397 :buildTitaniumDrill:y 0.5
  1033 set :titaniumDrillScore:positive .positive
  1034 set :titaniumDrillScore:negative .negative
-    * label *label669
  1035 ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * label *label670
  1036 jump *label672 notEqual :getFloor:floor @ore-titanium
-    * label *label671
  1037 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1038 jump *label675 always
  1039 label *label672
 
  1045 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1046 label *label674
  1047 label *label675
-    * label *label676
  1048 set .positive :titaniumDrillScore:positive
  1049 set .negative :titaniumDrillScore:negative
  1050 op add *tmp400 :buildTitaniumDrill:y 0.5
  1051 set :titaniumDrillScore:positive .positive
  1052 set :titaniumDrillScore:negative .negative
-    * label *label677
  1053 ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * label *label678
  1054 jump *label680 notEqual :getFloor:floor @ore-titanium
-    * label *label679
  1055 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1056 jump *label683 always
  1057 label *label680
 
  1063 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1064 label *label682
  1065 label *label683
-    * label *label684
  1066 set .positive :titaniumDrillScore:positive
  1067 set .negative :titaniumDrillScore:negative
  1068 op add *tmp402 :buildTitaniumDrill:x 0.5
  1069 set :titaniumDrillScore:positive .positive
  1070 set :titaniumDrillScore:negative .negative
-    * label *label685
  1071 ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * label *label686
  1072 jump *label688 notEqual :getFloor:floor @ore-titanium
-    * label *label687
  1073 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1074 jump *label691 always
  1075 label *label688
 
  1081 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1082 label *label690
  1083 label *label691
-    * label *label692
  1084 set .positive :titaniumDrillScore:positive
  1085 set .negative :titaniumDrillScore:negative
  1086 set :titaniumDrillScore:positive .positive
  1087 set :titaniumDrillScore:negative .negative
-    * label *label693
  1088 ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * label *label694
  1089 jump *label696 notEqual :getFloor:floor @ore-titanium
-    * label *label695
  1090 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1091 jump *label699 always
  1092 label *label696
 
  1098 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1099 label *label698
  1100 label *label699
-    * label *label700
  1101 set .positive :titaniumDrillScore:positive
  1102 set .negative :titaniumDrillScore:negative
  1103 op greaterThan *tmp408 .positive .negative
 
  1129 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1130 op min *tmp416 :buildTitaniumDrill:count 8
  1131 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label365
  1132 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1133 set :buildTitaniumDrill*retval .positive
  1134 jump *label347 always
  1135 label *label362
-    * label *label363
  1136 label *label358
-    * label *label359
  1137 label *label350
-    * label *label351
  1138 label *label348
-    * label *label349
  1139 set :buildTitaniumDrill*retval 0
  1140 jump *label347 always
  1141 label *label347
 
  1147 jump *label367 equal .scrap false
  1148 op add .MAX_TILES .MAX_TILES 4
  1149 label *label367
-    * label *label368
  1150 wait 0.0001
  1151 wait 0.0001
  1152 label *label369
-    * label *label372
  1153 read *tmp51 processor3 ".locations"
  1154 jump *label374 greaterThanEq :buildTitaniumDrills:current *tmp51
  1155 label *label602
 
  1213 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1214 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1215 label *label381
-    * label *label382
  1216 label *label375
-    * label *label376
  1217 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
-    * label *label373
  1218 read *tmp51 processor3 ".locations"
  1219 jump *label602 lessThan :buildTitaniumDrills:current *tmp51
  1220 label *label374
  1221 jump *label384 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1222 jump *label371 always
  1223 label *label384
-    * label *label385
  1224 jump *label386 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1225 jump *label371 always
  1226 label *label386
-    * label *label387
-    * label *label370
  1227 read *tmp52 processor3 ".searchFinished"
  1228 jump *label369 equal *tmp52 false
  1229 label *label371
-    * label *label366
  1230 set :buildTitaniumDrills*finished true
  1231 jump *label59 always
  1232 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-5 instructions):
 
    76 op notEqual *tmp137 :mineOre:item null
    77 op notEqual *tmp138 :mineOre:item :mineOre:ore
    78 op land *tmp139 *tmp137 *tmp138
-    * jump *label110 equal *tmp139 false
-    * jump *label109 always
+   79 jump *label109 notEqual *tmp139 false
    80 label *label110
    81 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label112 lessThanEq @second :mineOre:stop
-    * jump *label109 always
+   82 jump *label109 greaterThan @second :mineOre:stop
    83 label *label112
    84 jump *label114 notEqual .noTarget false
    85 sensor *tmp305 .core @silicon
 
   127 set :targetMet*retval true
   128 jump *label523 always
   129 label *label523
-    * jump *label117 equal :targetMet*retval false
-    * jump *label109 always
+  130 jump *label109 notEqual :targetMet*retval false
   131 label *label117
   132 label *label114
   133 sensor *tmp146 @unit @totalItems
 
  1215 read *tmp51 processor3 ".locations"
  1216 jump *label602 lessThan :buildTitaniumDrills:current *tmp51
  1217 label *label374
-    * jump *label384 lessThan :buildTitaniumDrills:tiles .MAX_TILES
-    * jump *label371 always
+ 1218 jump *label371 greaterThanEq :buildTitaniumDrills:tiles .MAX_TILES
  1219 label *label384
-    * jump *label386 lessThan :buildTitaniumDrills:count .MAX_COUNT
-    * jump *label371 always
+ 1220 jump *label371 greaterThanEq :buildTitaniumDrills:count .MAX_COUNT
  1221 label *label386
  1222 read *tmp52 processor3 ".searchFinished"
  1223 jump *label369 equal *tmp52 false

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
    77 op notEqual *tmp138 :mineOre:item :mineOre:ore
    78 op land *tmp139 *tmp137 *tmp138
    79 jump *label109 notEqual *tmp139 false
-    * label *label110
    80 ucontrol mine :locateOre:x :locateOre:y
    81 jump *label109 greaterThan @second :mineOre:stop
-    * label *label112
    82 jump *label114 notEqual .noTarget false
    83 sensor *tmp305 .core @silicon
    84 jump *label509 greaterThanEq *tmp305 silicon
 
   126 jump *label523 always
   127 label *label523
   128 jump *label109 notEqual :targetMet*retval false
-    * label *label117
   129 label *label114
   130 sensor *tmp146 @unit @totalItems
   131 jump *label107 lessThan *tmp146 :mineOre:amount
 
  1213 jump *label602 lessThan :buildTitaniumDrills:current *tmp51
  1214 label *label374
  1215 jump *label371 greaterThanEq :buildTitaniumDrills:tiles .MAX_TILES
-    * label *label384
  1216 jump *label371 greaterThanEq :buildTitaniumDrills:count .MAX_COUNT
-    * label *label386
  1217 read *tmp52 processor3 ".searchFinished"
  1218 jump *label369 equal *tmp52 false
  1219 label *label371

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
   327 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   328 sensor *tmp165 :supplyBlock:block @coal
   329 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * jump *label710 lessThanEq :supplyBlock:missing 0
+  330 jump *label164 lessThanEq :supplyBlock:missing 0
   331 set :mineOre:ore @coal
   332 set :mineOre:amount :supplyBlock:blockCapacity
   333 set :mineOre:block :supplyBlock:block
-    * setaddr :mineOre*retaddr *label709 (h:*label709)
+  334 setaddr :mineOre*retaddr *label164 (h:*label709)
   335 call *label39 *invalid :mineOre*retval (m:*label709) (h:*label709)
   336 label *label709
   337 label *label710
 
   417 call *label42 *invalid :fetchBlock*retval (m:*label167) (h:*label167)
   418 label *label167
   419 sensor *tmp220 .core @thorium
-    * jump *label168 lessThanEq *tmp220 400
+  420 jump *label156 lessThanEq *tmp220 400
   421 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   422 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   423 label *label168
 
   433 set :mineOre:ore @coal
   434 set :mineOre:amount 28
   435 set :mineOre:block .core
-    * setaddr :mineOre*retaddr *label575 (h:*label575)
+  436 setaddr :mineOre*retaddr *label173 (h:*label575)
   437 call *label39 *invalid :mineOre*retval (m:*label575) (h:*label575)
   438 label *label575
   439 jump *label173 always
 
   460 write "Goal 4: supplying generator" processor2 ".status1"
   461 set :supplyBlock:block AJRJM-combustion-generator3
   462 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label191 (h:*label191)
+  463 setaddr :supplyBlock*retaddr *label177 (h:*label191)
   464 call *label43 *invalid :supplyBlock*retval (m:*label191) (h:*label191)
   465 label *label191
   466 jump *label177 always
 
   483 jump *label198 greaterThanEq *tmp245 5
   484 jump *label200 equal .scrap false
   485 sensor *tmp249 AXPRJd-pulverizer26 @scrap
-    * jump *label202 greaterThanEq *tmp249 10
+  486 jump *label201 greaterThanEq *tmp249 10
   487 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   488 set :supplyBlock:block AXPRJd-pulverizer26
   489 set :supplyBlock:ore @scrap
 
   515 label *label209
   516 sensor *tmp258 .titaniumDrill @titanium
   517 jump *label210 greaterThanEq *tmp258 *tmp254
-    * jump *label212 notEqual :supplyBase0:supplied false
+  518 jump *label211 notEqual :supplyBase0:supplied false
   519 sensor *tmp263 AJTJK-battery1 @totalPower
   520 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   521 jump *label214 greaterThanEq *tmp263 *tmp264
 
   527 set :mineOre:ore @coal
   528 set :mineOre:amount 28
   529 set :mineOre:block .core
-    * setaddr :mineOre*retaddr *label704 (h:*label704)
+  530 setaddr :mineOre*retaddr *label211 (h:*label704)
   531 call *label39 *invalid :mineOre*retval (m:*label704) (h:*label704)
   532 label *label704
-    * jump *label215 always
+  533 jump *label211 always
   534 label *label214
   535 sensor *tmp267 .core @silicon
   536 jump *label218 greaterThanEq *tmp267 silicon
 
   543 select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand .core A¨SSJh-container30
   544 set :mineOre.1:ore *tmp275
   545 set :mineOre.1:block *tmp277
-    * setaddr :mineOre.1*retaddr *label229 (h:*label229)
+  546 setaddr :mineOre.1*retaddr *label211 (h:*label229)
   547 call *label40 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
   548 label *label229
-    * jump *label224 always
+  549 jump *label211 always
   550 label *label223
   551 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label230 (h:*label230)
+  552 setaddr :mineOre.2*retaddr *label211 (h:*label230)
   553 call *label41 *invalid :mineOre.2*retval (m:*label230) (h:*label230)
   554 label *label230
   555 label *label224
-    * jump *label221 always
+  556 jump *label211 always
   557 label *label220
   558 write "Goal 6: silicon requirement" processor2 ".status1"
   559 sensor :supplyBase0:coal.1 .core @coal
 
   565 set :mineOre:ore :mineOre.2:ore
   566 set :mineOre:amount 28
   567 set :mineOre:block .core
-    * setaddr :mineOre*retaddr *label716 (h:*label716)
+  568 setaddr :mineOre*retaddr *label211 (h:*label716)
   569 call *label39 *invalid :mineOre*retval (m:*label716) (h:*label716)
   570 label *label716
   571 label *label221
-    * jump *label219 always
+  572 jump *label211 always
   573 label *label218
   574 sensor *tmp282 .core @copper
   575 jump *label235 greaterThanEq *tmp282 copper
 
   581 set :mineOre:ore @copper
   582 set :mineOre:amount 28
   583 set :mineOre:block .core
-    * setaddr :mineOre*retaddr *label721 (h:*label721)
+  584 setaddr :mineOre*retaddr *label211 (h:*label721)
   585 call *label39 *invalid :mineOre*retval (m:*label721) (h:*label721)
   586 label *label721
-    * jump *label236 always
+  587 jump *label211 always
   588 label *label235
   589 sensor *tmp285 .core @lead
   590 jump *label239 greaterThanEq *tmp285 lead
   591 write "Goal 8: lead requirement" processor2 ".status1"
   592 set :mineOre.2:ore @lead
-    * setaddr :mineOre.2*retaddr *label242 (h:*label242)
+  593 setaddr :mineOre.2*retaddr *label211 (h:*label242)
   594 call *label41 *invalid :mineOre.2*retval (m:*label242) (h:*label242)
   595 label *label242
-    * jump *label240 always
+  596 jump *label211 always
   597 label *label239
   598 sensor *tmp288 .core @metaglass
   599 jump *label243 greaterThanEq *tmp288 metaglass
 
   601 jump *label246 equal .scrap false
   602 set :mineOre.1:ore @scrap
   603 set :mineOre.1:block .sandContainer
-    * setaddr :mineOre.1*retaddr *label248 (h:*label248)
+  604 setaddr :mineOre.1*retaddr *label211 (h:*label248)
   605 call *label40 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   606 label *label248
-    * jump *label247 always
+  607 jump *label211 always
   608 label *label246
   609 set :mineOre.2:ore @sand
-    * setaddr :mineOre.2*retaddr *label249 (h:*label249)
+  610 setaddr :mineOre.2*retaddr *label211 (h:*label249)
   611 call *label41 *invalid :mineOre.2*retval (m:*label249) (h:*label249)
   612 label *label249
   613 label *label247
-    * jump *label244 always
+  614 jump *label211 always
   615 label *label243
   616 write "Goal 10: supplying base" processor2 ".status1"
   617 jump *label251 notEqual A¨SSJh-container30 null
 
   620 op lessThanEq *tmp296 *tmp294 *tmp295
   621 op or *tmp297 .scrap *tmp296
   622 select :mineOre.2:ore notEqual *tmp297 false @coal @sand
-    * setaddr :mineOre.2*retaddr *label255 (h:*label255)
+  623 setaddr :mineOre.2*retaddr *label211 (h:*label255)
   624 call *label41 *invalid :mineOre.2*retval (m:*label255) (h:*label255)
   625 label *label255
-    * jump *label252 always
+  626 jump *label211 always
   627 label *label251
   628 sensor *tmp299 .core @coal
   629 sensor *tmp300 A¨SSJh-container30 @sand
 
   631 op add *tmp302 *tmp300 *tmp301
   632 jump *label256 greaterThan *tmp299 *tmp302
   633 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label258 (h:*label258)
+  634 setaddr :mineOre.2*retaddr *label211 (h:*label258)
   635 call *label41 *invalid :mineOre.2*retval (m:*label258) (h:*label258)
   636 label *label258
-    * jump *label257 always
+  637 jump *label211 always
   638 label *label256
   639 set :mineOre.1:ore @scrap
   640 set :mineOre.1:block A¨SSJh-container30
-    * setaddr :mineOre.1*retaddr *label259 (h:*label259)
+  641 setaddr :mineOre.1*retaddr *label211 (h:*label259)
   642 call *label40 *invalid :mineOre.1*retval (m:*label259) (h:*label259)
   643 label *label259
   644 label *label257
 
   669 jump *label263 greaterThanEq *tmp305 silicon
   670 write @silicon processor2 ".missing"
   671 set :targetMet*retval false
-    * jump *label262 always
+  672 return :targetMet*retaddr
   673 label *label263
   674 sensor *tmp308 .core @copper
   675 jump *label265 greaterThanEq *tmp308 copper
   676 write @copper processor2 ".missing"
   677 set :targetMet*retval false
-    * jump *label262 always
+  678 return :targetMet*retaddr
   679 label *label265
   680 sensor *tmp311 .core @lead
   681 jump *label267 greaterThanEq *tmp311 lead
   682 write @lead processor2 ".missing"
   683 set :targetMet*retval false
-    * jump *label262 always
+  684 return :targetMet*retaddr
   685 label *label267
   686 sensor *tmp314 .core @metaglass
   687 jump *label269 greaterThanEq *tmp314 metaglass
   688 write @metaglass processor2 ".missing"
   689 set :targetMet*retval false
-    * jump *label262 always
+  690 return :targetMet*retaddr
   691 label *label269
   692 sensor *tmp317 .core @graphite
   693 jump *label271 greaterThanEq *tmp317 graphite
   694 write @graphite processor2 ".missing"
   695 set :targetMet*retval false
-    * jump *label262 always
+  696 return :targetMet*retaddr
   697 label *label271
   698 sensor *tmp320 .core @titanium
   699 jump *label273 greaterThanEq *tmp320 titanium
   700 write @titanium processor2 ".missing"
   701 set :targetMet*retval false
-    * jump *label262 always
+  702 return :targetMet*retaddr
   703 label *label273
   704 sensor *tmp323 .core @thorium
   705 jump *label275 greaterThanEq *tmp323 thorium
   706 write @thorium processor2 ".missing"
   707 set :targetMet*retval false
-    * jump *label262 always
+  708 return :targetMet*retaddr
   709 label *label275
   710 set :targetMet*retval true
-    * jump *label262 always
+  711 return :targetMet*retaddr
   712 label *label262
   713 return :targetMet*retaddr
   714 end
 
  1125 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1126 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1127 set :buildTitaniumDrill*retval .positive
-    * jump *label347 always
+ 1128 return :buildTitaniumDrill*retaddr
  1129 label *label362
  1130 label *label358
  1131 label *label350
  1132 label *label348
  1133 set :buildTitaniumDrill*retval 0
-    * jump *label347 always
+ 1134 return :buildTitaniumDrill*retaddr
  1135 label *label347
  1136 return :buildTitaniumDrill*retaddr
  1137 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-34 instructions):
 
    40 label *label59
    41 wait 1e12
    42 jump *label59 always
-    * end
    43 label *label39
    44 op min :mineOre:amount :mineOre:amount 28
    45 write :mineOre:amount processor2 ".transportTarget"
 
   163 write 0 processor2 ".transportTarget"
   164 write null processor2 ".transportItem"
   165 return :mineOre*retaddr
-    * end
   166 label *label40
   167 write "Mining " processor2 ".status2"
   168 write :mineOre.1:ore processor2 ".item2"
 
   174 call *label39 *invalid :mineOre*retval (m:*label122) (h:*label122)
   175 label *label122
   176 return :mineOre.1*retaddr
-    * end
   177 label *label41
   178 write "Mining " processor2 ".status2"
   179 write :mineOre.2:ore processor2 ".item2"
 
   185 call *label39 *invalid :mineOre*retval (m:*label125) (h:*label125)
   186 label *label125
   187 return :mineOre.2*retaddr
-    * end
   188 label *label42
   189 sensor *tmp151 :fetchBlock:block @itemCapacity
   190 op min :transportStatus:target *tmp151 28
 
   258 write 0 processor2 ".transportTarget"
   259 write null processor2 ".transportItem"
   260 return :fetchBlock*retaddr
-    * end
   261 label *label43
   262 write "Supplying " processor2 ".status2"
   263 write :supplyBlock:ore processor2 ".item2"
 
   274 label *label141
   275 label *label139
   276 return :supplyBlock*retaddr
-    * end
   277 label *label46
   278 read *tmp181 :unpackCfg:cfg 1
   279 op sub *tmp182 *tmp181 74
 
   296 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   297 sensor :unpackCfg:th :unpackCfg:type @thorium
   298 return :unpackCfg*retaddr
-    * end
   299 label *label12
   300 setaddr :supplyBase*retaddr *label59
   301 label *label13
 
   326 set :mineOre:block :supplyBlock:block
   327 setaddr :mineOre*retaddr *label164 (h:*label709)
   328 call *label39 *invalid :mineOre*retval (m:*label709) (h:*label709)
-    * label *label709
-    * label *label710
-    * jump *label164 always
   329 label *label163
   330 set :supplyBlockFromCore:target .thoriumGenerator
   331 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
 
   410 jump *label156 lessThanEq *tmp220 400
   411 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   412 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label168
   413 jump *label156 always
   414 label *label155
   415 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   424 set :mineOre:block .core
   425 setaddr :mineOre*retaddr *label173 (h:*label575)
   426 call *label39 *invalid :mineOre*retval (m:*label575) (h:*label575)
-    * label *label575
-    * jump *label173 always
   427 label *label172
   428 set :supplyBase0:supplied false
   429 jump *label178 notEqual A©JNJP-unloader6 null
 
   449 set :supplyBlock:ore @coal
   450 setaddr :supplyBlock*retaddr *label177 (h:*label191)
   451 call *label43 *invalid :supplyBlock*retval (m:*label191) (h:*label191)
-    * label *label191
-    * jump *label177 always
   452 label *label188
   453 label *label186
   454 sensor *tmp239 .core @silicon
 
   476 call *label43 *invalid :supplyBlock*retval (m:*label205) (h:*label205)
   477 label *label205
   478 set :supplyBase0:supplied true
-    * label *label202
   479 jump *label201 always
   480 label *label200
   481 write "Goal 3: sand for silicon requirement" processor2 ".status1"
 
   513 set :mineOre:block .core
   514 setaddr :mineOre*retaddr *label211 (h:*label704)
   515 call *label39 *invalid :mineOre*retval (m:*label704) (h:*label704)
-    * label *label704
-    * jump *label211 always
   516 label *label214
   517 sensor *tmp267 .core @silicon
   518 jump *label218 greaterThanEq *tmp267 silicon
 
   527 set :mineOre.1:block *tmp277
   528 setaddr :mineOre.1*retaddr *label211 (h:*label229)
   529 call *label40 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
-    * label *label229
-    * jump *label211 always
   530 label *label223
   531 set :mineOre.2:ore @coal
   532 setaddr :mineOre.2*retaddr *label211 (h:*label230)
   533 call *label41 *invalid :mineOre.2*retval (m:*label230) (h:*label230)
-    * label *label230
-    * label *label224
-    * jump *label211 always
   534 label *label220
   535 write "Goal 6: silicon requirement" processor2 ".status1"
   536 sensor :supplyBase0:coal.1 .core @coal
 
   544 set :mineOre:block .core
   545 setaddr :mineOre*retaddr *label211 (h:*label716)
   546 call *label39 *invalid :mineOre*retval (m:*label716) (h:*label716)
-    * label *label716
-    * label *label221
-    * jump *label211 always
   547 label *label218
   548 sensor *tmp282 .core @copper
   549 jump *label235 greaterThanEq *tmp282 copper
 
   557 set :mineOre:block .core
   558 setaddr :mineOre*retaddr *label211 (h:*label721)
   559 call *label39 *invalid :mineOre*retval (m:*label721) (h:*label721)
-    * label *label721
-    * jump *label211 always
   560 label *label235
   561 sensor *tmp285 .core @lead
   562 jump *label239 greaterThanEq *tmp285 lead
 
   564 set :mineOre.2:ore @lead
   565 setaddr :mineOre.2*retaddr *label211 (h:*label242)
   566 call *label41 *invalid :mineOre.2*retval (m:*label242) (h:*label242)
-    * label *label242
-    * jump *label211 always
   567 label *label239
   568 sensor *tmp288 .core @metaglass
   569 jump *label243 greaterThanEq *tmp288 metaglass
 
   573 set :mineOre.1:block .sandContainer
   574 setaddr :mineOre.1*retaddr *label211 (h:*label248)
   575 call *label40 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
-    * label *label248
-    * jump *label211 always
   576 label *label246
   577 set :mineOre.2:ore @sand
   578 setaddr :mineOre.2*retaddr *label211 (h:*label249)
   579 call *label41 *invalid :mineOre.2*retval (m:*label249) (h:*label249)
-    * label *label249
-    * label *label247
-    * jump *label211 always
   580 label *label243
   581 write "Goal 10: supplying base" processor2 ".status1"
   582 jump *label251 notEqual A¨SSJh-container30 null
 
   587 select :mineOre.2:ore notEqual *tmp297 false @coal @sand
   588 setaddr :mineOre.2*retaddr *label211 (h:*label255)
   589 call *label41 *invalid :mineOre.2*retval (m:*label255) (h:*label255)
-    * label *label255
-    * jump *label211 always
   590 label *label251
   591 sensor *tmp299 .core @coal
   592 sensor *tmp300 A¨SSJh-container30 @sand
 
   596 set :mineOre.2:ore @coal
   597 setaddr :mineOre.2*retaddr *label211 (h:*label258)
   598 call *label41 *invalid :mineOre.2*retval (m:*label258) (h:*label258)
-    * label *label258
-    * jump *label211 always
   599 label *label256
   600 set :mineOre.1:ore @scrap
   601 set :mineOre.1:block A¨SSJh-container30
   602 setaddr :mineOre.1*retaddr *label211 (h:*label259)
   603 call *label40 *invalid :mineOre.1*retval (m:*label259) (h:*label259)
-    * label *label259
-    * label *label257
-    * label *label252
-    * label *label244
-    * label *label240
-    * label *label236
-    * label *label219
-    * label *label215
-    * label *label212
-    * jump *label211 always
   604 label *label210
   605 write "Goal 11: Fetching titanium" processor2 ".status1"
   606 set :fetchBlock:block .titaniumDrill
 
   614 label *label156
   615 set :supplyBase*finished true
   616 return :supplyBase*retaddr
-    * end
   617 label *label47
   618 sensor *tmp305 .core @silicon
   619 jump *label263 greaterThanEq *tmp305 silicon
 
   659 label *label275
   660 set :targetMet*retval true
   661 return :targetMet*retaddr
-    * label *label262
-    * return :targetMet*retaddr
-    * end
   662 label *label14
   663 setaddr :meetTarget*retaddr *label59
   664 label *label15
 
   744 label *label293
   745 set :meetTarget*finished true
   746 return :meetTarget*retaddr
-    * end
   747 label *label16
   748 setaddr :meetTargetCfg*retaddr *label59
   749 label *label17
 
   766 label *label303
   767 set :meetTargetCfg*finished true
   768 return :meetTargetCfg*retaddr
-    * end
   769 label *label48
   770 op notEqual *tmp344 AÕFFJS-micro-processor9 null
   771 set :meetTarget:block :buildBlock:block
 
   794 write 2 AÕFFJS-micro-processor9 "@counter"
   795 set :buildBlock*retval :buildBlockAt*retval
   796 return :buildBlock*retaddr
-    * end
   797 label *label18
   798 op add *tmp345 :buildRemoteBlock:x :buildRemoteBlock:y
   799 jump *label308 lessThanEq *tmp345 0
 
   825 label *label307
   826 set :buildRemoteBlock*finished true
   827 jump *label59 always
-    * end
   828 label *label20
   829 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   830 setaddr :unpackCfg*retaddr *label313 (h:*label313)
 
   855 set :buildBlockFromCfg*retval :buildBlock*retval
   856 set :buildBlockFromCfg*finished true
   857 jump *label59 always
-    * end
   858 label *label22
   859 setaddr :buildBlockAt*retaddr *label59
   860 label *label23
 
   929 label *label315
   930 set :buildBlockAt*finished true
   931 return :buildBlockAt*retaddr
-    * end
   932 label *label24
   933 set :buildBlockAt:block @pneumatic-drill
   934 set :buildBlockAt:x :buildFirstTitaniumDrillAt:x
 
   949 set :buildFirstTitaniumDrillAt*retval :buildBlockAt*retval
   950 set :buildFirstTitaniumDrillAt*finished true
   951 jump *label59 always
-    * end
   952 label *label50
   953 jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
   954 jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
 
  1072 label *label348
  1073 set :buildTitaniumDrill*retval 0
  1074 return :buildTitaniumDrill*retaddr
-    * label *label347
-    * return :buildTitaniumDrill*retaddr
-    * end
  1075 label *label26
  1076 set :buildTitaniumDrills:count 1
  1077 set :buildTitaniumDrills:tiles 0
 
  1156 label *label371
  1157 set :buildTitaniumDrills*finished true
  1158 jump *label59 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    33 label *label56
    34 ubind @poly
    35 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp103 .core
+   36 ulocate building core false @copper .coreX .coreY 0 .core
    37 jump *label56 equal .core null
    38 set .sandContainer .core
    39 set *signature "b1abbf1945b2011d:v1"
 
    44 op min :mineOre:amount :mineOre:amount 28
    45 write :mineOre:amount processor2 ".transportTarget"
    46 write :mineOre:ore processor2 ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+   47 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 0
    48 jump *label463 notEqual *tmp127 false
    49 set .ERROR "Cannot locate ore"
    50 stop
 
   866 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105
   867 jump *label657 equal *tmp105 false
   868 label *label659
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp353
+  869 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   870 jump *label318 equal :buildBlockAt:building null
   871 jump *label320 notEqual :buildBlockAt:type :buildBlockAt:block
   872 set :buildBlockAt*retval :buildBlockAt:building
 
   884 set :buildBlockAt:success false
   885 label *label323
   886 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building *tmp359
+  887 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   888 op equal *tmp360 :buildBlockAt:building null
   889 op equal *tmp361 :buildBlockAt:success false
   890 op land *tmp362 *tmp360 *tmp361
 
   966 op sub *tmp397 :buildTitaniumDrill:y 0.5
   967 set :titaniumDrillScore:positive .positive
   968 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
+  969 ucontrol getBlock *tmp396 *tmp397 0 0 :getFloor:floor
   970 jump *label672 notEqual :getFloor:floor @ore-titanium
   971 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
   972 jump *label675 always
 
   984 op add *tmp400 :buildTitaniumDrill:y 0.5
   985 set :titaniumDrillScore:positive .positive
   986 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
+  987 ucontrol getBlock *tmp396 *tmp400 0 0 :getFloor:floor
   988 jump *label680 notEqual :getFloor:floor @ore-titanium
   989 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
   990 jump *label683 always
 
  1002 op add *tmp402 :buildTitaniumDrill:x 0.5
  1003 set :titaniumDrillScore:positive .positive
  1004 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
+ 1005 ucontrol getBlock *tmp402 *tmp397 0 0 :getFloor:floor
  1006 jump *label688 notEqual :getFloor:floor @ore-titanium
  1007 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1008 jump *label691 always
 
  1019 set .negative :titaniumDrillScore:negative
  1020 set :titaniumDrillScore:positive .positive
  1021 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
+ 1022 ucontrol getBlock *tmp402 *tmp400 0 0 :getFloor:floor
  1023 jump *label696 notEqual :getFloor:floor @ore-titanium
  1024 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1025 jump *label699 always

Final code before resolving virtual instructions:

    0:  jump *label51 always 0 0                                     BuilderController.mnd: #set target = 8;
    1:  jump *label22 always 0 0                                     ...
    2:  jump *label20 always 0 0                                     ...
    3:  jump *label24 always 0 0                                     ...
    4:  jump *label18 always 0 0                                     ...
    5:  jump *label26 always 0 0                                     ...
    6:  jump *label14 always 0 0                                     ...
    7:  jump *label16 always 0 0                                     ...
    8:  jump *label12 always 0 0                                     ...
        label *label51                                               ...
    9:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
        label *label52                                               BuilderController.mnd: require "Display.mnd" remote display;
   10:  read *tmp32 processor2 "*signature"                          ...
   11:  jump *label52 notEqual *tmp32 "0:v1"                         ...
        label *label53                                               BuilderController.mnd: require "OreLocator.mnd" remote oreLocator;
   12:  read *tmp71 processor3 "*signature"                          ...
   13:  jump *label53 notEqual *tmp71 "3290b8c661787058:v1"          ...
        label *label54                                               BuilderController.mnd: require "FlareController.mnd" remote flareController;
   14:  read *tmp93 processor8 "*signature"                          ...
   15:  jump *label54 notEqual *tmp93 "881dde114374c003:v1"          ...
        label *label55                                               BuilderController.mnd: require "MonoController.mnd" remote monoController;
   16:  read *tmp99 processor7 "*signature"                          ...
   17:  jump *label55 notEqual *tmp99 "0:v1"                         ...
   18:  set .leadSurplus 0                                           BuilderController.mnd: remote var
   19:  set .graphiteSurplus 20                                      ...
   20:  set .siliconSurplus 20                                       ...
   21:  set .siliconMonoSurplus 0                                    ...
   22:  set .metaglassSurplus 20                                     ...
   23:  write 511 bank1 511                                          BuilderController.mnd: external bank1[511] logPosition = 511;
   24:  set .positive 0                                              BuilderController.mnd: volatile var positive = 0, negative = 0;
   25:  set .negative 0                                              ...
   26:  set .MAX_TILES 10                                            BuilderController.mnd: var MAX_TILES = 10;
   27:  set .MAX_COUNT 6                                             BuilderController.mnd: var MAX_COUNT = 6;
        label *label56                                               BuilderController.mnd: do
   28:  ubind @poly                                                  BuilderController.mnd: builder = ubind(@poly);
   29:  set .builder @unit                                           ...
   30:  ulocate building core false @copper .coreX .coreY 0 .core    BuilderController.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   31:  jump *label56 equal .core null                               BuilderController.mnd: do
   32:  set .sandContainer .core                                     BuilderController.mnd: sandContainer = core;
   33:  set *signature "b1abbf1945b2011d:v1"                         BuilderController.mnd: #set target = 8;
        label *label59                                               ...
   34:  wait 1e12                                                    ...
   35:  jump *label59 always 0 0                                     ...
        label *label39                                               Actions.mnd: void mineOre(ore, amount, block)
   36:  op min :mineOre:amount :mineOre:amount 28                    Actions.mnd: amount = min(amount, capacity);
   37:  write :mineOre:amount processor2 ".transportTarget"          Actions.mnd: display.transportTarget = target;
   38:  write :mineOre:ore processor2 ".transportItem"               Actions.mnd: display.transportItem = item;
   39:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   40:  jump *label463 notEqual *tmp127 false                        ...
   41:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
   42:  stop                                                         Actions.mnd: stopProcessor();
        label *label463                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   43:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label537                                              Actions.mnd: do
   44:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
   45:  jump *label538 equal *tmp108 null                            ...
   46:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label538                                              ...
   47:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
   48:  ucontrol within :locateOre:x :locateOre:y 6 *tmp111 0        Actions.mnd: while !within(x, y, RADIUS);
   49:  jump *label537 equal *tmp111 false                           Actions.mnd: do
   50:  sensor *tmp132 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   51:  jump *label103 equal *tmp132 :mineOre:ore                    ...
   52:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   53:  jump *label562 equal *tmp113 null                            ...
        label *label560                                              ...
   54:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
   55:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   56:  jump *label560 notEqual *tmp113 null                         ...
        label *label562                                              ...
        label *label103                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   57:  write "Mining..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
   58:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label107                                              Actions.mnd: do
   59:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
   60:  op notEqual *tmp137 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
   61:  op notEqual *tmp138 :mineOre:item :mineOre:ore               ...
   62:  op land *tmp139 *tmp137 *tmp138                              ...
   63:  jump *label109 notEqual *tmp139 false                        ...
   64:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
   65:  jump *label109 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
   66:  jump *label114 notEqual .noTarget false                      Actions.mnd: if not noTarget then
   67:  sensor *tmp305 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then display.missing = @silicon; return false; end;
   68:  jump *label509 greaterThanEq *tmp305 silicon                 ...
   69:  write @silicon processor2 ".missing"                         ...
   70:  set :targetMet*retval false                                  ...
   71:  jump *label523 always 0 0                                    ...
        label *label509                                              ...
   72:  sensor *tmp308 .core @copper                                 BuilderController.mnd: if core.@copper < targetCopper then display.missing = @copper; return false; end;
   73:  jump *label511 greaterThanEq *tmp308 copper                  ...
   74:  write @copper processor2 ".missing"                          ...
   75:  set :targetMet*retval false                                  ...
   76:  jump *label523 always 0 0                                    ...
        label *label511                                              ...
   77:  sensor *tmp311 .core @lead                                   BuilderController.mnd: if core.@lead < targetLead then display.missing = @lead; return false; end;
   78:  jump *label513 greaterThanEq *tmp311 lead                    ...
   79:  write @lead processor2 ".missing"                            ...
   80:  set :targetMet*retval false                                  ...
   81:  jump *label523 always 0 0                                    ...
        label *label513                                              ...
   82:  sensor *tmp314 .core @metaglass                              BuilderController.mnd: if core.@metaglass < targetMetaglass then display.missing = @metaglass; return false; end;
   83:  jump *label515 greaterThanEq *tmp314 metaglass               ...
   84:  write @metaglass processor2 ".missing"                       ...
   85:  set :targetMet*retval false                                  ...
   86:  jump *label523 always 0 0                                    ...
        label *label515                                              ...
   87:  sensor *tmp317 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then display.missing = @graphite; return false; end;
   88:  jump *label517 greaterThanEq *tmp317 graphite                ...
   89:  write @graphite processor2 ".missing"                        ...
   90:  set :targetMet*retval false                                  ...
   91:  jump *label523 always 0 0                                    ...
        label *label517                                              ...
   92:  sensor *tmp320 .core @titanium                               BuilderController.mnd: if core.@titanium < targetTitanium then display.missing = @titanium; return false; end;
   93:  jump *label519 greaterThanEq *tmp320 titanium                ...
   94:  write @titanium processor2 ".missing"                        ...
   95:  set :targetMet*retval false                                  ...
   96:  jump *label523 always 0 0                                    ...
        label *label519                                              ...
   97:  sensor *tmp323 .core @thorium                                BuilderController.mnd: if core.@thorium < targetThorium then display.missing = @thorium; return false; end;
   98:  jump *label521 greaterThanEq *tmp323 thorium                 ...
   99:  write @thorium processor2 ".missing"                         ...
  100:  set :targetMet*retval false                                  ...
  101:  jump *label523 always 0 0                                    ...
        label *label521                                              ...
  102:  set :targetMet*retval true                                   BuilderController.mnd: return true;
  103:  jump *label523 always 0 0                                    ...
        label *label523                                              Actions.mnd: if targetMet() then
  104:  jump *label109 notEqual :targetMet*retval false              ...
        label *label114                                              Actions.mnd: if not noTarget then
  105:  sensor *tmp146 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  106:  jump *label107 lessThan *tmp146 :mineOre:amount              Actions.mnd: do
        label *label109                                              ...
  107:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  108:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  109:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  110:  jump *label619 notEqual *tmp117 :mineOre:ore                 ...
  111:  sensor *tmp115 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  112:  sensor *tmp116 :mineOre:block @y                             ...
  113:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  114:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  115:  jump *label613 notEqual *tmp105 false                        ...
        label *label611                                              ...
  116:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  117:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  118:  jump *label611 equal *tmp105 false                           ...
        label *label613                                              ...
  119:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label616                                              Actions.mnd: do
  120:  ucontrol itemDrop :mineOre:block 28 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  121:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  122:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  123:  sensor *tmp123 :mineOre:block :mineOre:ore                   ...
  124:  jump *label616 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  125:  jump *label624 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label619                                              ...
  126:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  127:  jump *label623 equal *tmp125 null                            ...
        label *label621                                              ...
  128:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  129:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  130:  jump *label621 notEqual *tmp125 null                         ...
        label *label623                                              ...
        label *label624                                              Actions.mnd: if @unit.@firstItem == item then
  131:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  132:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  133:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label40                                               Actions.mnd: void mineOre(ore, block)
  134:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  135:  write :mineOre.1:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  136:  write :mineOre.1:block processor2 ".block2"                  Actions.mnd: display.block2 = block;
  137:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, block);
  138:  set :mineOre:amount 28                                       ...
  139:  set :mineOre:block :mineOre.1:block                          ...
  140:  setaddr :mineOre*retaddr *label122                           ...
  141:  call *label39 *invalid :mineOre*retval                       ...
        label *label122                                              ...
  142:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore, block)
        label *label41                                               Actions.mnd: void mineOre(ore)
  143:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  144:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  145:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  146:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  147:  set :mineOre:amount 28                                       ...
  148:  set :mineOre:block .core                                     ...
  149:  setaddr :mineOre*retaddr *label125                           ...
  150:  call *label39 *invalid :mineOre*retval                       ...
        label *label125                                              ...
  151:  return :mineOre.2*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label42                                               Actions.mnd: void fetchBlock(block, item)
  152:  sensor *tmp151 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  153:  op min :transportStatus:target *tmp151 28                    ...
  154:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  155:  write :fetchBlock:item processor2 ".transportItem"           Actions.mnd: display.transportItem = item;
  156:  write "Fetching " processor2 ".status2"                      Actions.mnd: display.status2 = text;
  157:  write :fetchBlock:item processor2 ".item2"                   Actions.mnd: display.item2 = item;
  158:  write :fetchBlock:block processor2 ".block2"                 Actions.mnd: display.block2 = block;
  159:  sensor *tmp153 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  160:  sensor *tmp154 :fetchBlock:block @y                          ...
  161:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label502                                              Actions.mnd: do
  162:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  163:  jump *label503 equal *tmp108 null                            ...
  164:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label503                                              ...
  165:  ucontrol approach *tmp153 *tmp154 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  166:  ucontrol within *tmp153 *tmp154 6 *tmp111 0                  Actions.mnd: while !within(x, y, RADIUS);
  167:  jump *label502 equal *tmp111 false                           Actions.mnd: do
  168:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  169:  jump *label497 equal *tmp113 null                            ...
        label *label495                                              ...
  170:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  171:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  172:  jump *label495 notEqual *tmp113 null                         ...
        label *label497                                              ...
        label *label131                                              Actions.mnd: do
  173:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 28 0 0  Actions.mnd: itemTake(block, item, capacity);
  174:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  175:  op notEqual *tmp156 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  176:  op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item    ...
  177:  op land *tmp158 *tmp156 *tmp157                              ...
  178:  jump *label134 equal *tmp158 false                           ...
  179:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label134                                              Actions.mnd: if unitItem != null and unitItem != item then
  180:  sensor *tmp160 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  181:  op lessThan *tmp161 *tmp160 28                               ...
  182:  sensor *tmp162 :fetchBlock:block :fetchBlock:item            ...
  183:  op land *tmp163 *tmp161 *tmp162                              ...
  184:  jump *label131 notEqual *tmp163 false                        Actions.mnd: do
  185:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  186:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  187:  jump *label593 notEqual *tmp117 :fetchBlock:item             ...
  188:  sensor *tmp115 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  189:  sensor *tmp116 .core @y                                      ...
  190:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  191:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  192:  jump *label587 notEqual *tmp105 false                        ...
        label *label585                                              ...
  193:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  194:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  195:  jump *label585 equal *tmp105 false                           ...
        label *label587                                              ...
  196:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label590                                              Actions.mnd: do
  197:  ucontrol itemDrop .core 28 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  198:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  199:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  200:  sensor *tmp123 .core :fetchBlock:item                        ...
  201:  jump *label590 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  202:  jump *label598 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label593                                              ...
  203:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  204:  jump *label597 equal *tmp125 null                            ...
        label *label595                                              ...
  205:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  206:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  207:  jump *label595 notEqual *tmp125 null                         ...
        label *label597                                              ...
        label *label598                                              Actions.mnd: if @unit.@firstItem == item then
  208:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  209:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  210:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label43                                               Actions.mnd: void supplyBlock(block, ore)
  211:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  212:  write :supplyBlock:ore processor2 ".item2"                   Actions.mnd: display.item2 = item;
  213:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  214:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  215:  sensor *tmp165 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  216:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  217:  jump *label139 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  218:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  219:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  220:  set :mineOre:block :supplyBlock:block                        ...
  221:  setaddr :mineOre*retaddr *label141                           ...
  222:  call *label39 *invalid :mineOre*retval                       ...
        label *label141                                              ...
        label *label139                                              Actions.mnd: if missing > 0 then
  223:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label46                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  224:  read *tmp181 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  225:  op sub *tmp182 *tmp181 74                                    ...
  226:  lookup block :unpackCfg:type *tmp182                         ...
  227:  read *tmp185 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  228:  op sub *tmp186 *tmp185 74                                    ...
  229:  op div :unpackCfg:x *tmp186 2                                ...
  230:  read *tmp189 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  231:  op sub *tmp190 *tmp189 74                                    ...
  232:  op div :unpackCfg:y *tmp190 2                                ...
  233:  read *tmp193 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  234:  op sub :unpackCfg:rotation *tmp193 74                        ...
  235:  read *tmp196 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  236:  op sub :unpackCfg:ind *tmp196 74                             ...
  237:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  238:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  239:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  240:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  241:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  242:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  243:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  244:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label12                                               BuilderController.mnd: remote void supplyBase()
  245:  setaddr :supplyBase*retaddr *label59                         ...
        label *label13                                               ...
  246:  op add *tmp206 .siliconMonoSurplus silicon                   BuilderController.mnd: monoController.sandTarget = max(0, siliconMonoSurplus + targetSilicon - core.@silicon);
  247:  sensor *tmp207 .core @silicon                                ...
  248:  op sub *tmp208 *tmp206 *tmp207                               ...
  249:  op max *tmp209 0 *tmp208                                     ...
  250:  write *tmp209 processor7 ".sandTarget"                       ...
  251:  jump *label155 equal .thoriumContainer false                 BuilderController.mnd: if thoriumContainer then
  252:  write "Phase 2: servicing thorium drill" processor2 ".status Actions.mnd: display.status1 = text;
  253:  sensor *tmp211 .thoriumBattery @totalPower                   BuilderController.mnd: if thoriumBattery.@totalPower < 2000 then
  254:  jump *label159 greaterThanEq *tmp211 2000                    ...
  255:  sensor *tmp214 .thoriumGenerator @coal                       BuilderController.mnd: if thoriumGenerator.@coal == 0 then
  256:  jump *label161 notEqual *tmp214 0                            ...
  257:  sensor *tmp217 .core @coal                                   BuilderController.mnd: if core.@coal < 50 then
  258:  jump *label163 greaterThanEq *tmp217 50                      ...
  259:  set :supplyBlock:block .thoriumGenerator                     BuilderController.mnd: supplyBlock(thoriumGenerator, @coal);
  260:  set :supplyBlock:ore @coal                                   ...
  261:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  262:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  263:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  264:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  265:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  266:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  267:  jump *label164 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  268:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  269:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  270:  set :mineOre:block :supplyBlock:block                        ...
  271:  setaddr :mineOre*retaddr *label164                           ...
  272:  call *label39 *invalid :mineOre*retval                       ...
        label *label163                                              BuilderController.mnd: if core.@coal < 50 then
  273:  set :supplyBlockFromCore:target .thoriumGenerator            BuilderController.mnd: supplyBlockFromCore(thoriumGenerator, @coal);
  274:  sensor *tmp169 :supplyBlockFromCore:target @itemCapacity     Actions.mnd: var cap = min(target.@itemCapacity, capacity);
  275:  op min :supplyBlockFromCore:cap *tmp169 28                   ...
  276:  set :transportStatus:target :supplyBlockFromCore:cap         Actions.mnd: transportStatus(cap, item);
  277:  write :supplyBlockFromCore:cap processor2 ".transportTarget" Actions.mnd: display.transportTarget = target;
  278:  write @coal processor2 ".transportItem"                      Actions.mnd: display.transportItem = item;
  279:  write "Transferring " processor2 ".status2"                  Actions.mnd: display.status2 = text;
  280:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  281:  write :supplyBlockFromCore:target processor2 ".block2"       Actions.mnd: display.block2 = block;
  282:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label546                                              Actions.mnd: do
  283:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  284:  jump *label547 equal *tmp108 null                            ...
  285:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label547                                              ...
  286:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  287:  ucontrol within .coreX .coreY 6 *tmp111 0                    Actions.mnd: while !within(x, y, RADIUS);
  288:  jump *label546 equal *tmp111 false                           Actions.mnd: do
  289:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  290:  jump *label568 equal *tmp113 null                            ...
        label *label566                                              ...
  291:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  292:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  293:  jump *label566 notEqual *tmp113 null                         ...
        label *label568                                              ...
        label *label471                                              Actions.mnd: do
  294:  ucontrol itemTake .core @coal :supplyBlockFromCore:cap 0 0   Actions.mnd: itemTake(core, item, cap);
  295:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  296:  op notEqual *tmp172 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  297:  op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal      ...
  298:  op land *tmp174 *tmp172 *tmp173                              ...
  299:  jump *label472 equal *tmp174 false                           ...
  300:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label472                                              Actions.mnd: if unitItem != null and unitItem != item then
  301:  sensor *tmp176 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < cap and core.sensor(item);
  302:  op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap         ...
  303:  sensor *tmp178 .core @coal                                   ...
  304:  op land *tmp179 *tmp177 *tmp178                              ...
  305:  jump *label471 notEqual *tmp179 false                        Actions.mnd: do
  306:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  307:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  308:  jump *label644 notEqual *tmp117 @coal                        ...
  309:  sensor *tmp115 :supplyBlockFromCore:target @x                Actions.mnd: moveTo(block.@x, block.@y, radius);
  310:  sensor *tmp116 :supplyBlockFromCore:target @y                ...
  311:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  312:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  313:  jump *label638 notEqual *tmp105 false                        ...
        label *label636                                              ...
  314:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  315:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  316:  jump *label636 equal *tmp105 false                           ...
        label *label638                                              ...
  317:  sensor :depositItems:cap :supplyBlockFromCore:target @itemCa Actions.mnd: var cap = block.@itemCapacity;
        label *label641                                              Actions.mnd: do
  318:  ucontrol itemDrop :supplyBlockFromCore:target 28 0 0 0       Actions.mnd: itemDrop(block, capacity);
  319:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  320:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  321:  sensor *tmp123 :supplyBlockFromCore:target @coal             ...
  322:  jump *label641 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  323:  jump *label649 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label644                                              ...
  324:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  325:  jump *label648 equal *tmp125 null                            ...
        label *label646                                              ...
  326:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  327:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  328:  jump *label646 notEqual *tmp125 null                         ...
        label *label648                                              ...
        label *label649                                              Actions.mnd: if @unit.@firstItem == item then
  329:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  330:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
        label *label164                                              BuilderController.mnd: if core.@coal < 50 then
        label *label161                                              BuilderController.mnd: if thoriumGenerator.@coal == 0 then
        label *label159                                              BuilderController.mnd: if thoriumBattery.@totalPower < 2000 then
  331:  set :fetchBlock:block .thoriumContainer                      BuilderController.mnd: fetchBlock(thoriumContainer, @thorium);
  332:  set :fetchBlock:item @thorium                                ...
  333:  setaddr :fetchBlock*retaddr *label167                        ...
  334:  call *label42 *invalid :fetchBlock*retval                    ...
        label *label167                                              ...
  335:  sensor *tmp220 .core @thorium                                BuilderController.mnd: if core.@thorium > 400 then
  336:  jump *label156 lessThanEq *tmp220 400                        ...
  337:  write 0 AÕFFJS-micro-processor9 ".monoTarget"                BuilderController.mnd: processor.monoTarget = target;
  338:  write 4 AÕFFJS-micro-processor9 ".polyTarget"                BuilderController.mnd: processor.polyTarget = target;
  339:  jump *label156 always 0 0                                    BuilderController.mnd: if thoriumContainer then
        label *label155                                              ...
  340:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 BuilderController.mnd: elsif processor.monos > 1 then
  341:  jump *label172 lessThanEq *tmp81 1                           ...
  342:  write "Phase 1: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  343:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  344:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  345:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  346:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  347:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  348:  set :mineOre:amount 28                                       ...
  349:  set :mineOre:block .core                                     ...
  350:  setaddr :mineOre*retaddr *label173                           ...
  351:  call *label39 *invalid :mineOre*retval                       ...
        label *label172                                              BuilderController.mnd: elsif processor.monos > 1 then
  352:  set :supplyBase0:supplied false                              BuilderController.mnd: var supplied = false;
  353:  jump *label178 notEqual A©JNJP-unloader6 null                BuilderController.mnd: if unloader1 == null then
  354:  sensor *tmp227 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then
  355:  jump *label180 greaterThanEq *tmp227 graphite                ...
  356:  sensor *tmp230 AJEMJJ-graphite-press0 @coal                  BuilderController.mnd: if press.@coal < 5 then
  357:  jump *label182 greaterThanEq *tmp230 5                       ...
  358:  write "Goal 1: graphite requirement" processor2 ".status1"   Actions.mnd: display.status1 = text;
  359:  set :supplyBlock:block AJEMJJ-graphite-press0                BuilderController.mnd: supplyBlock(press, @coal);
  360:  set :supplyBlock:ore @coal                                   ...
  361:  setaddr :supplyBlock*retaddr *label185                       ...
  362:  call *label43 *invalid :supplyBlock*retval                   ...
        label *label185                                              ...
  363:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
        label *label182                                              BuilderController.mnd: if press.@coal < 5 then
        label *label180                                              BuilderController.mnd: if core.@graphite < targetGraphite then
  364:  sensor *tmp233 AJTJK-battery1 @totalPower                   BuilderController.mnd: if battery1.@totalPower < powerTarget then
  365:  jump *label186 greaterThanEq *tmp233 .powerTarget            ...
  366:  sensor *tmp236 AJRJM-combustion-generator3 @coal            BuilderController.mnd: if generator.@coal < 2 then
  367:  jump *label188 greaterThanEq *tmp236 2                       ...
  368:  write "Goal 4: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  369:  set :supplyBlock:block AJRJM-combustion-generator3          BuilderController.mnd: supplyBlock(generator, @coal);
  370:  set :supplyBlock:ore @coal                                   ...
  371:  setaddr :supplyBlock*retaddr *label177                       ...
  372:  call *label43 *invalid :supplyBlock*retval                   ...
        label *label188                                              BuilderController.mnd: if generator.@coal < 2 then
        label *label186                                              BuilderController.mnd: if battery1.@totalPower < powerTarget then
  373:  sensor *tmp239 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then
  374:  jump *label192 greaterThanEq *tmp239 silicon                 ...
  375:  sensor *tmp242 ALMQJN-silicon-smelter4 @coal                 BuilderController.mnd: if smelter.@coal < 5 then
  376:  jump *label194 greaterThanEq *tmp242 5                       ...
  377:  write "Goal 2: coal for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  378:  set :supplyBlock:block ALMQJN-silicon-smelter4               BuilderController.mnd: supplyBlock(smelter, @coal);
  379:  set :supplyBlock:ore @coal                                   ...
  380:  setaddr :supplyBlock*retaddr *label197                       ...
  381:  call *label43 *invalid :supplyBlock*retval                   ...
        label *label197                                              ...
  382:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
  383:  jump *label195 always 0 0                                    BuilderController.mnd: if smelter.@coal < 5 then
        label *label194                                              ...
  384:  sensor *tmp245 ALMQJN-silicon-smelter4 @sand                 BuilderController.mnd: elsif smelter.@sand < 5 then
  385:  jump *label198 greaterThanEq *tmp245 5                       ...
  386:  jump *label200 equal .scrap false                            BuilderController.mnd: if scrap then
  387:  sensor *tmp249 AXPRJd-pulverizer26 @scrap                    BuilderController.mnd: if pulverizer1.@scrap < 10 then
  388:  jump *label201 greaterThanEq *tmp249 10                      ...
  389:  write "Goal 3a: scrap for silicon requirement" processor2 ". Actions.mnd: display.status1 = text;
  390:  set :supplyBlock:block AXPRJd-pulverizer26                   BuilderController.mnd: supplyBlock(pulverizer1, @scrap);
  391:  set :supplyBlock:ore @scrap                                  ...
  392:  setaddr :supplyBlock*retaddr *label205                       ...
  393:  call *label43 *invalid :supplyBlock*retval                   ...
        label *label205                                              ...
  394:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
  395:  jump *label201 always 0 0                                    BuilderController.mnd: if scrap then
        label *label200                                              ...
  396:  write "Goal 3: sand for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  397:  set :supplyBlock:block ALMQJN-silicon-smelter4               BuilderController.mnd: supplyBlock(smelter, @sand);
  398:  set :supplyBlock:ore @sand                                   ...
  399:  setaddr :supplyBlock*retaddr *label207                       ...
  400:  call *label43 *invalid :supplyBlock*retval                   ...
        label *label207                                              ...
  401:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
        label *label201                                              BuilderController.mnd: if scrap then
        label *label198                                              BuilderController.mnd: elsif smelter.@sand < 5 then
        label *label195                                              BuilderController.mnd: if smelter.@coal < 5 then
        label *label192                                              BuilderController.mnd: if core.@silicon < targetSilicon then
        label *label178                                              BuilderController.mnd: if unloader1 == null then
  402:  set *tmp254 100                                              BuilderController.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(5, targetTitanium - core.@titanium) : 100;
  403:  sensor *tmp252 .core @titanium                               ...
  404:  jump *label209 greaterThanEq *tmp252 titanium                ...
  405:  sensor *tmp255 .core @titanium                               ...
  406:  op sub *tmp256 titanium *tmp255                              ...
  407:  op min *tmp254 5 *tmp256                                     ...
        label *label209                                              ...
  408:  sensor *tmp258 .titaniumDrill @titanium                      BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  409:  jump *label210 greaterThanEq *tmp258 *tmp254                 ...
  410:  jump *label211 notEqual :supplyBase0:supplied false          BuilderController.mnd: if !supplied then
  411:  sensor *tmp263 AJTJK-battery1 @totalPower                   BuilderController.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  412:  op mul *tmp264 A©JNJP-unloader6 .powerTarget                 ...
  413:  jump *label214 greaterThanEq *tmp263 *tmp264                 ...
  414:  write "Goal 5: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  415:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  416:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  417:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  418:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  419:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  420:  set :mineOre:amount 28                                       ...
  421:  set :mineOre:block .core                                     ...
  422:  setaddr :mineOre*retaddr *label211                           ...
  423:  call *label39 *invalid :mineOre*retval                       ...
        label *label214                                              BuilderController.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  424:  sensor *tmp267 .core @silicon                                BuilderController.mnd: elsif core.@silicon < targetSilicon then
  425:  jump *label218 greaterThanEq *tmp267 silicon                 ...
  426:  jump *label220 equal .scrap false                            BuilderController.mnd: if scrap then
  427:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  428:  jump *label223 equal A¨SSJh-container30 false                BuilderController.mnd: if container_a then
  429:  sensor :supplyBase0:coal .core @coal                         BuilderController.mnd: var coal = core.@coal;
  430:  sensor :supplyBase0:sand A¨SSJh-container30 @sand            BuilderController.mnd: var sand = container_a.@sand;
  431:  select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand  BuilderController.mnd: var ore = coal < sand ? @coal : @scrap;
  432:  select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand  BuilderController.mnd: var block = coal < sand ? core : container_a;
  433:  set :mineOre.1:ore *tmp275                                   BuilderController.mnd: mineOre(ore, block);
  434:  set :mineOre.1:block *tmp277                                 ...
  435:  setaddr :mineOre.1*retaddr *label211                         ...
  436:  call *label40 *invalid :mineOre.1*retval                     ...
        label *label223                                              BuilderController.mnd: if container_a then
  437:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  438:  setaddr :mineOre.2*retaddr *label211                         ...
  439:  call *label41 *invalid :mineOre.2*retval                     ...
        label *label220                                              BuilderController.mnd: if scrap then
  440:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  441:  sensor :supplyBase0:coal.1 .core @coal                       BuilderController.mnd: var coal = core.@coal;
  442:  sensor :supplyBase0:sand.1 .core @sand                       BuilderController.mnd: var sand = core.@sand;
  443:  select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBa BuilderController.mnd: var ore = coal < sand ? @coal : @sand;
  444:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  445:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  446:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  447:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  448:  set :mineOre:amount 28                                       ...
  449:  set :mineOre:block .core                                     ...
  450:  setaddr :mineOre*retaddr *label211                           ...
  451:  call *label39 *invalid :mineOre*retval                       ...
        label *label218                                              BuilderController.mnd: elsif core.@silicon < targetSilicon then
  452:  sensor *tmp282 .core @copper                                 BuilderController.mnd: elsif core.@copper < targetCopper then
  453:  jump *label235 greaterThanEq *tmp282 copper                  ...
  454:  write "Goal 7: copper requirement" processor2 ".status1"     Actions.mnd: display.status1 = text;
  455:  set :mineOre.2:ore @copper                                   BuilderController.mnd: mineOre(@copper);
  456:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  457:  write @copper processor2 ".item2"                            Actions.mnd: display.item2 = item;
  458:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  459:  set :mineOre:ore @copper                                     Actions.mnd: mineOre(ore, capacity, core);
  460:  set :mineOre:amount 28                                       ...
  461:  set :mineOre:block .core                                     ...
  462:  setaddr :mineOre*retaddr *label211                           ...
  463:  call *label39 *invalid :mineOre*retval                       ...
        label *label235                                              BuilderController.mnd: elsif core.@copper < targetCopper then
  464:  sensor *tmp285 .core @lead                                   BuilderController.mnd: elsif core.@lead < targetLead then
  465:  jump *label239 greaterThanEq *tmp285 lead                    ...
  466:  write "Goal 8: lead requirement" processor2 ".status1"       Actions.mnd: display.status1 = text;
  467:  set :mineOre.2:ore @lead                                     BuilderController.mnd: mineOre(@lead);
  468:  setaddr :mineOre.2*retaddr *label211                         ...
  469:  call *label41 *invalid :mineOre.2*retval                     ...
        label *label239                                              BuilderController.mnd: elsif core.@lead < targetLead then
  470:  sensor *tmp288 .core @metaglass                              BuilderController.mnd: elsif core.@metaglass < targetMetaglass then
  471:  jump *label243 greaterThanEq *tmp288 metaglass               ...
  472:  write "Goal 9: metaglass requirement" processor2 ".status1"  Actions.mnd: display.status1 = text;
  473:  jump *label246 equal .scrap false                            BuilderController.mnd: if scrap then
  474:  set :mineOre.1:ore @scrap                                    BuilderController.mnd: mineOre(@scrap, sandContainer);
  475:  set :mineOre.1:block .sandContainer                          ...
  476:  setaddr :mineOre.1*retaddr *label211                         ...
  477:  call *label40 *invalid :mineOre.1*retval                     ...
        label *label246                                              BuilderController.mnd: if scrap then
  478:  set :mineOre.2:ore @sand                                     BuilderController.mnd: mineOre(@sand);
  479:  setaddr :mineOre.2*retaddr *label211                         ...
  480:  call *label41 *invalid :mineOre.2*retval                     ...
        label *label243                                              BuilderController.mnd: elsif core.@metaglass < targetMetaglass then
  481:  write "Goal 10: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  482:  jump *label251 notEqual A¨SSJh-container30 null              BuilderController.mnd: if container_a == null then
  483:  sensor *tmp294 .core @coal                                   BuilderController.mnd: mineOre(scrap or core.@coal <= core.@sand ? @coal : @sand);
  484:  sensor *tmp295 .core @sand                                   ...
  485:  op lessThanEq *tmp296 *tmp294 *tmp295                        ...
  486:  op or *tmp297 .scrap *tmp296                                 ...
  487:  select :mineOre.2:ore notEqual *tmp297 false @coal @sand     ...
  488:  setaddr :mineOre.2*retaddr *label211                         ...
  489:  call *label41 *invalid :mineOre.2*retval                     ...
        label *label251                                              BuilderController.mnd: if container_a == null then
  490:  sensor *tmp299 .core @coal                                   BuilderController.mnd: elsif core.@coal <= container_a.@sand + container_a.@scrap then
  491:  sensor *tmp300 A¨SSJh-container30 @sand                      ...
  492:  sensor *tmp301 A¨SSJh-container30 @scrap                     ...
  493:  op add *tmp302 *tmp300 *tmp301                               ...
  494:  jump *label256 greaterThan *tmp299 *tmp302                   ...
  495:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  496:  setaddr :mineOre.2*retaddr *label211                         ...
  497:  call *label41 *invalid :mineOre.2*retval                     ...
        label *label256                                              BuilderController.mnd: elsif core.@coal <= container_a.@sand + container_a.@scrap then
  498:  set :mineOre.1:ore @scrap                                    BuilderController.mnd: mineOre(@scrap, container_a);
  499:  set :mineOre.1:block A¨SSJh-container30                      ...
  500:  setaddr :mineOre.1*retaddr *label211                         ...
  501:  call *label40 *invalid :mineOre.1*retval                     ...
        label *label210                                              BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  502:  write "Goal 11: Fetching titanium" processor2 ".status1"     Actions.mnd: display.status1 = text;
  503:  set :fetchBlock:block .titaniumDrill                         BuilderController.mnd: fetchBlock(titaniumDrill, @titanium);
  504:  set :fetchBlock:item @titanium                               ...
  505:  setaddr :fetchBlock*retaddr *label261                        ...
  506:  call *label42 *invalid :fetchBlock*retval                    ...
        label *label261                                              ...
        label *label211                                              BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label177                                              BuilderController.mnd: supplyBase0();
        label *label173                                              BuilderController.mnd: elsif processor.monos > 1 then
        label *label156                                              BuilderController.mnd: if thoriumContainer then
  507:  set :supplyBase*finished true                                BuilderController.mnd: remote void supplyBase()
  508:  return :supplyBase*retaddr                                   ...
        label *label47                                               BuilderController.mnd: def targetMet()
  509:  sensor *tmp305 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then display.missing = @silicon; return false; end;
  510:  jump *label263 greaterThanEq *tmp305 silicon                 ...
  511:  write @silicon processor2 ".missing"                         ...
  512:  set :targetMet*retval false                                  ...
  513:  return :targetMet*retaddr                                    ...
        label *label263                                              ...
  514:  sensor *tmp308 .core @copper                                 BuilderController.mnd: if core.@copper < targetCopper then display.missing = @copper; return false; end;
  515:  jump *label265 greaterThanEq *tmp308 copper                  ...
  516:  write @copper processor2 ".missing"                          ...
  517:  set :targetMet*retval false                                  ...
  518:  return :targetMet*retaddr                                    ...
        label *label265                                              ...
  519:  sensor *tmp311 .core @lead                                   BuilderController.mnd: if core.@lead < targetLead then display.missing = @lead; return false; end;
  520:  jump *label267 greaterThanEq *tmp311 lead                    ...
  521:  write @lead processor2 ".missing"                            ...
  522:  set :targetMet*retval false                                  ...
  523:  return :targetMet*retaddr                                    ...
        label *label267                                              ...
  524:  sensor *tmp314 .core @metaglass                              BuilderController.mnd: if core.@metaglass < targetMetaglass then display.missing = @metaglass; return false; end;
  525:  jump *label269 greaterThanEq *tmp314 metaglass               ...
  526:  write @metaglass processor2 ".missing"                       ...
  527:  set :targetMet*retval false                                  ...
  528:  return :targetMet*retaddr                                    ...
        label *label269                                              ...
  529:  sensor *tmp317 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then display.missing = @graphite; return false; end;
  530:  jump *label271 greaterThanEq *tmp317 graphite                ...
  531:  write @graphite processor2 ".missing"                        ...
  532:  set :targetMet*retval false                                  ...
  533:  return :targetMet*retaddr                                    ...
        label *label271                                              ...
  534:  sensor *tmp320 .core @titanium                               BuilderController.mnd: if core.@titanium < targetTitanium then display.missing = @titanium; return false; end;
  535:  jump *label273 greaterThanEq *tmp320 titanium                ...
  536:  write @titanium processor2 ".missing"                        ...
  537:  set :targetMet*retval false                                  ...
  538:  return :targetMet*retaddr                                    ...
        label *label273                                              ...
  539:  sensor *tmp323 .core @thorium                                BuilderController.mnd: if core.@thorium < targetThorium then display.missing = @thorium; return false; end;
  540:  jump *label275 greaterThanEq *tmp323 thorium                 ...
  541:  write @thorium processor2 ".missing"                         ...
  542:  set :targetMet*retval false                                  ...
  543:  return :targetMet*retaddr                                    ...
        label *label275                                              ...
  544:  set :targetMet*retval true                                   BuilderController.mnd: return true;
  545:  return :targetMet*retaddr                                    ...
        label *label14                                               BuilderController.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  546:  setaddr :meetTarget*retaddr *label59                         ...
        label *label15                                               ...
  547:  op sign :meetTarget:count :meetTarget:copper 0               BuilderController.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  548:  op sign *tmp327 :meetTarget:lead 0                           ...
  549:  op add :meetTarget:count :meetTarget:count *tmp327           ...
  550:  op sign *tmp327 :meetTarget:graphite 0                       ...
  551:  op add :meetTarget:count :meetTarget:count *tmp327           ...
  552:  op sign *tmp327 :meetTarget:silicon 0                        ...
  553:  op add :meetTarget:count :meetTarget:count *tmp327           ...
  554:  op sign *tmp327 :meetTarget:titanium 0                       ...
  555:  op add :meetTarget:count :meetTarget:count *tmp327           ...
  556:  op sign *tmp327 :meetTarget:metaglass 0                      ...
  557:  op add :meetTarget:count :meetTarget:count *tmp327           ...
  558:  op sign *tmp327 :meetTarget:thorium 0                        ...
  559:  op add :meetTarget:count :meetTarget:count *tmp327           ...
  560:  write :meetTarget:count processor2 ".totalTargets"           BuilderController.mnd: display.totalTargets = count;
  561:  write :meetTarget:block processor2 ".nextBlock"              BuilderController.mnd: display.nextBlock = block;
  562:  write :meetTarget:copper processor2 ".targetCopper"          BuilderController.mnd: display.targetCopper = copper;
  563:  write :meetTarget:lead processor2 ".targetLead"              BuilderController.mnd: display.targetLead = lead;
  564:  write :meetTarget:graphite processor2 ".targetGraphite"      BuilderController.mnd: display.targetGraphite = graphite;
  565:  write :meetTarget:silicon processor2 ".targetSilicon"        BuilderController.mnd: display.targetSilicon = silicon;
  566:  write :meetTarget:titanium processor2 ".targetTitanium"      BuilderController.mnd: display.targetTitanium = titanium;
  567:  write :meetTarget:metaglass processor2 ".targetMetaglass"    BuilderController.mnd: display.targetMetaglass = metaglass;
  568:  write :meetTarget:thorium processor2 ".targetThorium"        BuilderController.mnd: display.targetThorium = thorium;
  569:  set copper :meetTarget:copper                                BuilderController.mnd: targetCopper = copper;
  570:  op add lead :meetTarget:lead .leadSurplus                    BuilderController.mnd: targetLead = lead + leadSurplus;
  571:  set graphite :meetTarget:graphite                            BuilderController.mnd: targetGraphite = graphite;
  572:  set silicon :meetTarget:silicon                              BuilderController.mnd: targetSilicon = silicon;
  573:  set titanium :meetTarget:titanium                            BuilderController.mnd: targetTitanium = titanium;
  574:  set metaglass :meetTarget:metaglass                          BuilderController.mnd: targetMetaglass = metaglass;
  575:  set thorium :meetTarget:thorium                              BuilderController.mnd: targetThorium = thorium;
  576:  set .noTarget :meetTarget:isNoTarget                         BuilderController.mnd: noTarget = isNoTarget;
  577:  op add *tmp329 :meetTarget:graphite .graphiteSurplus         BuilderController.mnd: processor.pressTarget = graphite + graphiteSurplus;
  578:  write *tmp329 AÕFFJS-micro-processor9 ".pressTarget"         ...
  579:  op add *tmp330 :meetTarget:silicon .siliconSurplus           BuilderController.mnd: processor.smelterTarget = silicon + siliconSurplus;
  580:  write *tmp330 AÕFFJS-micro-processor9 ".smelterTarget"       ...
  581:  op add *tmp331 :meetTarget:metaglass .metaglassSurplus       BuilderController.mnd: processor.kilnTarget = metaglass + metaglassSurplus;
  582:  write *tmp331 AÕFFJS-micro-processor9 ".kilnTarget"          ...
  583:  op sign *tmp332 :meetTarget:silicon 0                        BuilderController.mnd: processor.siliconReserve = silicon + sign(silicon) * 20;
  584:  op mul *tmp333 *tmp332 20                                    ...
  585:  op add *tmp334 :meetTarget:silicon *tmp333                   ...
  586:  write *tmp334 AÕFFJS-micro-processor9 ".siliconReserve"      ...
  587:  op sign *tmp335 :meetTarget:graphite 0                       BuilderController.mnd: processor.graphiteReserve = graphite + sign(graphite) * 20;
  588:  op mul *tmp336 *tmp335 20                                    ...
  589:  op add *tmp337 :meetTarget:graphite *tmp336                  ...
  590:  write *tmp337 AÕFFJS-micro-processor9 ".graphiteReserve"     ...
  591:  write lead processor7 ".leadTarget"                          BuilderController.mnd: monoController.leadTarget = targetLead;
  592:  write :meetTarget:copper processor7 ".copperTarget"          BuilderController.mnd: monoController.copperTarget = targetCopper;
  593:  setaddr :targetMet*retaddr *label291                         BuilderController.mnd: while !targetMet() do
  594:  call *label47 *invalid :targetMet*retval                     ...
        label *label291                                              ...
  595:  jump *label290 notEqual :targetMet*retval false              ...
        label *label552                                              ...
  596:  setaddr :supplyBase*retaddr *label292                        BuilderController.mnd: supplyBase();
  597:  call *label13 *invalid :supplyBase*retval                    ...
        label *label292                                              ...
  598:  setaddr :targetMet*retaddr *label553                         BuilderController.mnd: while !targetMet() do
  599:  call *label47 *invalid :targetMet*retval                     ...
        label *label553                                              ...
  600:  jump *label552 equal :targetMet*retval false                 ...
        label *label290                                              ...
  601:  jump *label293 equal :meetTarget:forBuild false              BuilderController.mnd: if forBuild then
  602:  write false AÕFFJS-micro-processor9 ":buildStart*finished"   BuilderController.mnd: processor.buildStart();
  603:  write 1 AÕFFJS-micro-processor9 "@counter"                   ...
        label *label295                                              ...
  604:  wait 1e-15                                                   ...
  605:  read *tmp341 AÕFFJS-micro-processor9 ":buildStart*finished"  ...
  606:  jump *label295 equal *tmp341 false                           ...
  607:  setaddr :targetMet*retaddr *label299                         BuilderController.mnd: while !targetMet() do
  608:  call *label47 *invalid :targetMet*retval                     ...
        label *label299                                              ...
  609:  jump *label298 notEqual :targetMet*retval false              ...
        label *label570                                              ...
  610:  setaddr :supplyBase*retaddr *label300                        BuilderController.mnd: supplyBase();
  611:  call *label13 *invalid :supplyBase*retval                    ...
        label *label300                                              ...
  612:  setaddr :targetMet*retaddr *label571                         BuilderController.mnd: while !targetMet() do
  613:  call *label47 *invalid :targetMet*retval                     ...
        label *label571                                              ...
  614:  jump *label570 equal :targetMet*retval false                 ...
        label *label298                                              ...
        label *label293                                              BuilderController.mnd: if forBuild then
  615:  set :meetTarget*finished true                                BuilderController.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  616:  return :meetTarget*retaddr                                   ...
        label *label16                                               BuilderController.mnd: remote void meetTargetCfg(cfg, forBuild)
  617:  setaddr :meetTargetCfg*retaddr *label59                      ...
        label *label17                                               ...
  618:  set :unpackCfg:cfg :meetTargetCfg:cfg                        BuilderController.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  619:  setaddr :unpackCfg*retaddr *label302                         ...
  620:  call *label46 *invalid :unpackCfg*retval                     ...
        label *label302                                              ...
  621:  set :meetTarget:block :unpackCfg:type                        BuilderController.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th, forBuild, false);
  622:  set :meetTarget:copper :unpackCfg:cu                         ...
  623:  set :meetTarget:lead :unpackCfg:pb                           ...
  624:  set :meetTarget:graphite :unpackCfg:gr                       ...
  625:  set :meetTarget:silicon :unpackCfg:si                        ...
  626:  set :meetTarget:titanium :unpackCfg:ti                       ...
  627:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  628:  set :meetTarget:thorium :unpackCfg:th                        ...
  629:  set :meetTarget:forBuild :meetTargetCfg:forBuild             ...
  630:  set :meetTarget:isNoTarget false                             ...
  631:  setaddr :meetTarget*retaddr *label303                        ...
  632:  call *label15 *invalid :meetTarget*retval                    ...
        label *label303                                              ...
  633:  set :meetTargetCfg*finished true                             BuilderController.mnd: remote void meetTargetCfg(cfg, forBuild)
  634:  return :meetTargetCfg*retaddr                                ...
        label *label48                                               BuilderController.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  635:  op notEqual *tmp344 AÕFFJS-micro-processor9 null             BuilderController.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, processor != null, false);
  636:  set :meetTarget:block :buildBlock:block                      ...
  637:  set :meetTarget:copper :buildBlock:copper                    ...
  638:  set :meetTarget:lead :buildBlock:lead                        ...
  639:  set :meetTarget:graphite :buildBlock:graphite                ...
  640:  set :meetTarget:silicon :buildBlock:silicon                  ...
  641:  set :meetTarget:titanium :buildBlock:titanium                ...
  642:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  643:  set :meetTarget:thorium :buildBlock:thorium                  ...
  644:  set :meetTarget:forBuild *tmp344                             ...
  645:  set :meetTarget:isNoTarget false                             ...
  646:  setaddr :meetTarget*retaddr *label305                        ...
  647:  call *label15 *invalid :meetTarget*retval                    ...
        label *label305                                              ...
  648:  set :buildBlockAt:block :buildBlock:block                    BuilderController.mnd: var built = buildBlockAt(block, x, y, rotation, config, index);
  649:  set :buildBlockAt:x :buildBlock:x                            ...
  650:  set :buildBlockAt:y :buildBlock:y                            ...
  651:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  652:  set :buildBlockAt:config :buildBlock:config                  ...
  653:  set :buildBlockAt:index :buildBlock:index                    ...
  654:  setaddr :buildBlockAt*retaddr *label306                      ...
  655:  call *label23 *invalid :buildBlockAt*retval                  ...
        label *label306                                              ...
  656:  write false AÕFFJS-micro-processor9 ":buildStop*finished"    BuilderController.mnd: async(processor.buildStop());
  657:  write 2 AÕFFJS-micro-processor9 "@counter"                   ...
  658:  set :buildBlock*retval :buildBlockAt*retval                  BuilderController.mnd: return built;
  659:  return :buildBlock*retaddr                                   BuilderController.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label18                                               BuilderController.mnd: remote def buildRemoteBlock(cfg, x, y)
  660:  op add *tmp345 :buildRemoteBlock:x :buildRemoteBlock:y       BuilderController.mnd: if x + y > 0 then
  661:  jump *label308 lessThanEq *tmp345 0                          ...
  662:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     BuilderController.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  663:  setaddr :unpackCfg*retaddr *label310                         ...
  664:  call *label46 *invalid :unpackCfg*retval                     ...
        label *label310                                              ...
  665:  set :buildBlock:block :unpackCfg:type                        BuilderController.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  666:  set :buildBlock:x :buildRemoteBlock:x                        ...
  667:  set :buildBlock:y :buildRemoteBlock:y                        ...
  668:  set :buildBlock:copper :unpackCfg:cu                         ...
  669:  set :buildBlock:lead :unpackCfg:pb                           ...
  670:  set :buildBlock:graphite :unpackCfg:gr                       ...
  671:  set :buildBlock:silicon :unpackCfg:si                        ...
  672:  set :buildBlock:titanium :unpackCfg:ti                       ...
  673:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  674:  set :buildBlock:thorium :unpackCfg:th                        ...
  675:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  676:  set :buildBlock:config null                                  ...
  677:  set :buildBlock:index :unpackCfg:ind                         ...
  678:  setaddr :buildBlock*retaddr *label311                        ...
  679:  call *label48 *invalid :buildBlock*retval                    ...
        label *label311                                              ...
  680:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  681:  jump *label307 always 0 0                                    ...
        label *label308                                              BuilderController.mnd: if x + y > 0 then
  682:  set :buildRemoteBlock*retval false                           BuilderController.mnd: return false;
  683:  jump *label307 always 0 0                                    ...
        label *label307                                              BuilderController.mnd: remote def buildRemoteBlock(cfg, x, y)
  684:  set :buildRemoteBlock*finished true                          ...
  685:  jump *label59 always 0 0                                     ...
        label *label20                                               BuilderController.mnd: remote def buildBlockFromCfg(cfg, config)
  686:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    BuilderController.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  687:  setaddr :unpackCfg*retaddr *label313                         ...
  688:  call *label46 *invalid :unpackCfg*retval                     ...
        label *label313                                              ...
  689:  op add *tmp348 .coreX :unpackCfg:x                           BuilderController.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  690:  op add *tmp349 .coreY :unpackCfg:y                           ...
  691:  set :buildBlock:block :unpackCfg:type                        ...
  692:  set :buildBlock:x *tmp348                                    ...
  693:  set :buildBlock:y *tmp349                                    ...
  694:  set :buildBlock:copper :unpackCfg:cu                         ...
  695:  set :buildBlock:lead :unpackCfg:pb                           ...
  696:  set :buildBlock:graphite :unpackCfg:gr                       ...
  697:  set :buildBlock:silicon :unpackCfg:si                        ...
  698:  set :buildBlock:titanium :unpackCfg:ti                       ...
  699:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  700:  set :buildBlock:thorium :unpackCfg:th                        ...
  701:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  702:  set :buildBlock:config :buildBlockFromCfg:config             ...
  703:  set :buildBlock:index :unpackCfg:ind                         ...
  704:  setaddr :buildBlock*retaddr *label314                        ...
  705:  call *label48 *invalid :buildBlock*retval                    ...
        label *label314                                              ...
  706:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        BuilderController.mnd: @this.write(building, cfg);
  707:  write :buildBlock*retval processor2 :buildBlockFromCfg:cfg   BuilderController.mnd: display.write(building, cfg);
  708:  write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlock BuilderController.mnd: processor.write(building, cfg);
  709:  write :buildBlock*retval processor9 :buildBlockFromCfg:cfg   BuilderController.mnd: baseBuilder.write(building, cfg);
  710:  set :buildBlockFromCfg*retval :buildBlock*retval             BuilderController.mnd: return building;
  711:  set :buildBlockFromCfg*finished true                         BuilderController.mnd: remote def buildBlockFromCfg(cfg, config)
  712:  jump *label59 always 0 0                                     ...
        label *label22                                               BuilderController.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  713:  setaddr :buildBlockAt*retaddr *label59                       ...
        label *label23                                               ...
  714:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  715:  ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105 0  Actions.mnd: while !within(x, y, radius) do
  716:  jump *label659 notEqual *tmp105 false                        ...
        label *label657                                              ...
  717:  ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5 0 0    Actions.mnd: approach(x, y, radius - 0.5);
  718:  ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp105 0  Actions.mnd: while !within(x, y, radius) do
  719:  jump *label657 equal *tmp105 false                           ...
        label *label659                                              ...
  720:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc BuilderController.mnd: var building = getBlock(x, y, out type);
  721:  jump *label318 equal :buildBlockAt:building null             BuilderController.mnd: if building != null then
  722:  jump *label320 notEqual :buildBlockAt:type :buildBlockAt:blo BuilderController.mnd: if type == block then return building; end;
  723:  set :buildBlockAt*retval :buildBlockAt:building              ...
  724:  jump *label315 always 0 0                                    ...
        label *label320                                              ...
  725:  set .ERROR "Cannot build at position"                        BuilderController.mnd: ERROR = text;
  726:  set .ERROR_FOUND_BLOCK :buildBlockAt:block                   BuilderController.mnd: ERROR_FOUND_BLOCK = block;
  727:  set .ERROR_FOUND_TYPE :buildBlockAt:type                     BuilderController.mnd: ERROR_FOUND_TYPE = type;
  728:  set .ERROR_X :buildBlockAt:x                                 BuilderController.mnd: ERROR_X = x;
  729:  set .ERROR_Y :buildBlockAt:y                                 BuilderController.mnd: ERROR_Y = y;
  730:  stop                                                         BuilderController.mnd: stopProcessor();
        label *label318                                              BuilderController.mnd: if building != null then
  731:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt BuilderController.mnd: build(x, y, block, rotation, config);
  732:  wait 0.25                                                    BuilderController.mnd: wait(0.25);
  733:  set :buildBlockAt:success false                              BuilderController.mnd: var success = false;
        label *label323                                              BuilderController.mnd: do
  734:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt BuilderController.mnd: build(x, y, block, rotation, config);
  735:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc BuilderController.mnd: building = getBlock(x, y, out type);
  736:  op equal *tmp360 :buildBlockAt:building null                 BuilderController.mnd: if building == null and !success then
  737:  op equal *tmp361 :buildBlockAt:success false                 ...
  738:  op land *tmp362 *tmp360 *tmp361                              ...
  739:  jump *label326 equal *tmp362 false                           ...
  740:  set .ERROR "Error while building"                            BuilderController.mnd: ERROR = text;
  741:  set .ERROR_FOUND_BLOCK :buildBlockAt:block                   BuilderController.mnd: ERROR_FOUND_BLOCK = block;
  742:  set .ERROR_FOUND_TYPE :buildBlockAt:type                     BuilderController.mnd: ERROR_FOUND_TYPE = type;
  743:  set .ERROR_X :buildBlockAt:x                                 BuilderController.mnd: ERROR_X = x;
  744:  set .ERROR_Y :buildBlockAt:y                                 BuilderController.mnd: ERROR_Y = y;
  745:  stop                                                         BuilderController.mnd: stopProcessor();
  746:  jump *label327 always 0 0                                    BuilderController.mnd: if building == null and !success then
        label *label326                                              ...
  747:  set :buildBlockAt:success true                               BuilderController.mnd: success = true;
        label *label327                                              BuilderController.mnd: if building == null and !success then
  748:  jump *label329 notEqual :buildBlockAt:block @multiplicative- BuilderController.mnd: if block == @multiplicative-reconstructor then
  749:  control enabled processor6 false 0 0 0                       BuilderController.mnd: polyController.enabled = false;     // Brutal, but effective :)
  750:  ubind @poly                                                  BuilderController.mnd: ubind(@poly);
  751:  jump *label331 equal @unit .builder                          BuilderController.mnd: if @unit != builder then
  752:  ucontrol approach :buildBlockAt:x :buildBlockAt:y 6 0 0      BuilderController.mnd: approach(x, y, RADIUS);
  753:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt BuilderController.mnd: build(x, y, block, rotation, config);
        label *label331                                              BuilderController.mnd: if @unit != builder then
        label *label329                                              BuilderController.mnd: if block == @multiplicative-reconstructor then
  754:  jump *label323 notEqual :buildBlockAt:type :buildBlockAt:blo BuilderController.mnd: do
  755:  control enabled processor6 true 0 0 0                        BuilderController.mnd: polyController.enabled = true;
  756:  ubind .builder                                               BuilderController.mnd: ubind(builder);
  757:  sensor :log:encodedId :buildBlockAt:block @id                BuilderController.mnd: log(block.@id);
  758:  read *tmp100 bank1 511                                       BuilderController.mnd: bank1[--logPosition] = encodedId + TIME * 1000;
  759:  op sub *tmp372 *tmp100 1                                     ...
  760:  write *tmp372 bank1 511                                      ...
  761:  read *tmp0 processor1 "time"                                 ...
  762:  op mul *tmp375 *tmp0 1000                                    ...
  763:  op add *tmp376 :log:encodedId *tmp375                        ...
  764:  write *tmp376 bank1 *tmp372                                  ...
  765:  jump *label335 lessThan :buildBlockAt:index 0                BuilderController.mnd: if index >= 0 then
  766:  op shl *tmp379 1 :buildBlockAt:index                         BuilderController.mnd: display.blocksBuilt |= (1 << index);
  767:  read *tmp7 processor2 ".blocksBuilt"                         ...
  768:  op or *tmp380 *tmp7 *tmp379                                  ...
  769:  write *tmp380 processor2 ".blocksBuilt"                      ...
  770:  write :buildBlockAt:index processor2 ".recentBuildIndex"     BuilderController.mnd: display.recentBuildIndex = index;
        label *label335                                              BuilderController.mnd: if index >= 0 then
  771:  set :buildBlockAt*retval :buildBlockAt:building              BuilderController.mnd: return building;
        label *label315                                              BuilderController.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  772:  set :buildBlockAt*finished true                              ...
  773:  return :buildBlockAt*retaddr                                 ...
        label *label24                                               BuilderController.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  774:  set :buildBlockAt:block @pneumatic-drill                     BuilderController.mnd: var drill = buildBlockAt(@pneumatic-drill, x, y, 0, null, -1);
  775:  set :buildBlockAt:x :buildFirstTitaniumDrillAt:x             ...
  776:  set :buildBlockAt:y :buildFirstTitaniumDrillAt:y             ...
  777:  set :buildBlockAt:rotation 0                                 ...
  778:  set :buildBlockAt:config null                                ...
  779:  set :buildBlockAt:index -1                                   ...
  780:  setaddr :buildBlockAt*retaddr *label338                      ...
  781:  call *label23 *invalid :buildBlockAt*retval                  ...
        label *label338                                              ...
  782:  write :buildBlockAt*retval processor8 ":addTitaniumDrill:dri BuilderController.mnd: flareController.addTitaniumDrill(drill);
  783:  write false processor8 ":addTitaniumDrill*finished"          ...
  784:  write 1 processor8 "@counter"                                ...
        label *label339                                              ...
  785:  wait 1e-15                                                   ...
  786:  read *tmp382 processor8 ":addTitaniumDrill*finished"         ...
  787:  jump *label339 equal *tmp382 false                           ...
  788:  set :buildFirstTitaniumDrillAt*retval :buildBlockAt*retval   BuilderController.mnd: return drill;
  789:  set :buildFirstTitaniumDrillAt*finished true                 BuilderController.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  790:  jump *label59 always 0 0                                     ...
        label *label50                                               BuilderController.mnd: def buildTitaniumDrill(x, y, in out count, in out tiles)
  791:  jump *label348 greaterThanEq :buildTitaniumDrill:count .MAX_ BuilderController.mnd: if count < MAX_COUNT then
  792:  jump *label350 greaterThanEq :buildTitaniumDrill:tiles .MAX_ BuilderController.mnd: if tiles < MAX_TILES then
  793:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  794:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  795:  jump *label667 notEqual *tmp105 false                        ...
        label *label665                                              ...
  796:  ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill: Actions.mnd: approach(x, y, radius - 0.5);
  797:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  798:  jump *label665 equal *tmp105 false                           ...
        label *label667                                              ...
  799:  set .positive 0                                              BuilderController.mnd: positive = 0; negative = 0;
  800:  set .negative 0                                              ...
  801:  op sub *tmp396 :buildTitaniumDrill:x 0.5                     BuilderController.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  802:  op sub *tmp397 :buildTitaniumDrill:y 0.5                     ...
  803:  set :titaniumDrillScore:positive .positive                   ...
  804:  set :titaniumDrillScore:negative .negative                   ...
  805:  ucontrol getBlock *tmp396 *tmp397 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  806:  jump *label672 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  807:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  808:  jump *label675 always 0 0                                    ...
        label *label672                                              ...
  809:  jump *label673 equal :getFloor:floor @ore-copper             ...
  810:  jump *label673 equal :getFloor:floor @ore-lead               ...
  811:  jump *label673 equal :getFloor:floor @ore-scrap              ...
  812:  jump *label674 notEqual :getFloor:floor @ore-coal            ...
        label *label673                                              ...
  813:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label674                                              ...
        label *label675                                              ...
  814:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  815:  set .negative :titaniumDrillScore:negative                   ...
  816:  op add *tmp400 :buildTitaniumDrill:y 0.5                     BuilderController.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  817:  set :titaniumDrillScore:positive .positive                   ...
  818:  set :titaniumDrillScore:negative .negative                   ...
  819:  ucontrol getBlock *tmp396 *tmp400 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  820:  jump *label680 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  821:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  822:  jump *label683 always 0 0                                    ...
        label *label680                                              ...
  823:  jump *label681 equal :getFloor:floor @ore-copper             ...
  824:  jump *label681 equal :getFloor:floor @ore-lead               ...
  825:  jump *label681 equal :getFloor:floor @ore-scrap              ...
  826:  jump *label682 notEqual :getFloor:floor @ore-coal            ...
        label *label681                                              ...
  827:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label682                                              ...
        label *label683                                              ...
  828:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  829:  set .negative :titaniumDrillScore:negative                   ...
  830:  op add *tmp402 :buildTitaniumDrill:x 0.5                     BuilderController.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  831:  set :titaniumDrillScore:positive .positive                   ...
  832:  set :titaniumDrillScore:negative .negative                   ...
  833:  ucontrol getBlock *tmp402 *tmp397 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  834:  jump *label688 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  835:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  836:  jump *label691 always 0 0                                    ...
        label *label688                                              ...
  837:  jump *label689 equal :getFloor:floor @ore-copper             ...
  838:  jump *label689 equal :getFloor:floor @ore-lead               ...
  839:  jump *label689 equal :getFloor:floor @ore-scrap              ...
  840:  jump *label690 notEqual :getFloor:floor @ore-coal            ...
        label *label689                                              ...
  841:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label690                                              ...
        label *label691                                              ...
  842:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  843:  set .negative :titaniumDrillScore:negative                   ...
  844:  set :titaniumDrillScore:positive .positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  845:  set :titaniumDrillScore:negative .negative                   ...
  846:  ucontrol getBlock *tmp402 *tmp400 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  847:  jump *label696 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  848:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  849:  jump *label699 always 0 0                                    ...
        label *label696                                              ...
  850:  jump *label697 equal :getFloor:floor @ore-copper             ...
  851:  jump *label697 equal :getFloor:floor @ore-lead               ...
  852:  jump *label697 equal :getFloor:floor @ore-scrap              ...
  853:  jump *label698 notEqual :getFloor:floor @ore-coal            ...
        label *label697                                              ...
  854:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label698                                              ...
        label *label699                                              ...
  855:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  856:  set .negative :titaniumDrillScore:negative                   ...
  857:  op greaterThan *tmp408 .positive .negative                   BuilderController.mnd: if positive > negative && positive >= 2 then
  858:  op greaterThanEq *tmp409 .positive 2                         ...
  859:  op land *tmp410 *tmp408 *tmp409                              ...
  860:  jump *label358 equal *tmp410 false                           ...
  861:  set :meetTargetCfg:cfg "AJJJ~-pneumatic-drill52"            BuilderController.mnd: meetTargetCfg(PNEUMATIC_DRILL, true);
  862:  set :meetTargetCfg:forBuild true                             ...
  863:  setaddr :meetTargetCfg*retaddr *label360                     ...
  864:  call *label17 *invalid :meetTargetCfg*retval                 ...
        label *label360                                              ...
  865:  set :buildBlockAt:block @pneumatic-drill                     BuilderController.mnd: var drill = buildBlockAt(@pneumatic-drill, x, y, null, 0, -1);
  866:  set :buildBlockAt:x :buildTitaniumDrill:x                    ...
  867:  set :buildBlockAt:y :buildTitaniumDrill:y                    ...
  868:  set :buildBlockAt:rotation null                              ...
  869:  set :buildBlockAt:config 0                                   ...
  870:  set :buildBlockAt:index -1                                   ...
  871:  setaddr :buildBlockAt*retaddr *label361                      ...
  872:  call *label23 *invalid :buildBlockAt*retval                  ...
        label *label361                                              ...
  873:  jump *label362 equal :buildBlockAt*retval null               BuilderController.mnd: if drill != null then
  874:  write :buildBlockAt*retval processor8 ":addTitaniumDrill:dri BuilderController.mnd: flareController.addTitaniumDrill(drill);
  875:  write false processor8 ":addTitaniumDrill*finished"          ...
  876:  write 1 processor8 "@counter"                                ...
        label *label364                                              ...
  877:  wait 1e-15                                                   ...
  878:  read *tmp415 processor8 ":addTitaniumDrill*finished"         ...
  879:  jump *label364 equal *tmp415 false                           ...
  880:  op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1 BuilderController.mnd: setFlareTarget(++count);
  881:  op min *tmp416 :buildTitaniumDrill:count 8                   BuilderController.mnd: processor.flareTarget = min(target, 8);
  882:  write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"         ...
  883:  op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles . BuilderController.mnd: tiles += positive;
  884:  set :buildTitaniumDrill*retval .positive                     BuilderController.mnd: return positive;
  885:  return :buildTitaniumDrill*retaddr                           ...
        label *label362                                              BuilderController.mnd: if drill != null then
        label *label358                                              BuilderController.mnd: if positive > negative && positive >= 2 then
        label *label350                                              BuilderController.mnd: if tiles < MAX_TILES then
        label *label348                                              BuilderController.mnd: if count < MAX_COUNT then
  886:  set :buildTitaniumDrill*retval 0                             BuilderController.mnd: return 0;
  887:  return :buildTitaniumDrill*retaddr                           ...
        label *label26                                               BuilderController.mnd: remote void buildTitaniumDrills(current)
  888:  set :buildTitaniumDrills:count 1                             BuilderController.mnd: var count = 1;
  889:  set :buildTitaniumDrills:tiles 0                             BuilderController.mnd: var tiles = 0;
  890:  jump *label367 equal .scrap false                            BuilderController.mnd: if scrap then MAX_TILES += 4; end;
  891:  op add .MAX_TILES .MAX_TILES 4                               ...
        label *label367                                              ...
  892:  wait 0.0001                                                  BuilderController.mnd: wait(1e-4);
  893:  wait 0.0001                                                  BuilderController.mnd: wait(1e-4);
        label *label369                                              BuilderController.mnd: do
  894:  read *tmp51 processor3 ".locations"                          BuilderController.mnd: while current < oreLocator.locations do
  895:  jump *label374 greaterThanEq :buildTitaniumDrills:current *t ...
        label *label602                                              ...
  896:  op mul :buildTitaniumDrills:index :buildTitaniumDrills:curre BuilderController.mnd: var index = current * 4;
  897:  op add *tmp421 :buildTitaniumDrills:index 1                  BuilderController.mnd: var size = bank1[index + 1];
  898:  read :buildTitaniumDrills:size bank1 *tmp421                 ...
  899:  jump *label375 lessThan :buildTitaniumDrills:size 3          BuilderController.mnd: if size >= 3 then
  900:  op add *tmp427 :buildTitaniumDrills:index 2                  BuilderController.mnd: var x = bank1[index + 2];
  901:  read :buildTitaniumDrills:x bank1 *tmp427                    ...
  902:  op add *tmp429 :buildTitaniumDrills:index 3                  BuilderController.mnd: var y = bank1[index + 3];
  903:  read :buildTitaniumDrills:y bank1 *tmp429                    ...
  904:  op sub *tmp432 :buildTitaniumDrills:x 1                      BuilderController.mnd: var built = buildTitaniumDrill(x - 1, y - 1, in out count, in out tiles)
  905:  op sub *tmp433 :buildTitaniumDrills:y 1                      ...
  906:  set :buildTitaniumDrill:x *tmp432                            ...
  907:  set :buildTitaniumDrill:y *tmp433                            ...
  908:  set :buildTitaniumDrill:count :buildTitaniumDrills:count     ...
  909:  set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles     ...
  910:  setaddr :buildTitaniumDrill*retaddr *label377                ...
  911:  call *label50 *invalid :buildTitaniumDrill*retval            ...
        label *label377                                              ...
  912:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  913:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  914:  set *tmp434 :buildTitaniumDrill*retval                       ...
  915:  op add *tmp435 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x + 1, y - 1, in out count, in out tiles)
  916:  op sub *tmp436 :buildTitaniumDrills:y 1                      ...
  917:  set :buildTitaniumDrill:x *tmp435                            ...
  918:  set :buildTitaniumDrill:y *tmp436                            ...
  919:  setaddr :buildTitaniumDrill*retaddr *label378                ...
  920:  call *label50 *invalid :buildTitaniumDrill*retval            ...
        label *label378                                              ...
  921:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  922:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  923:  op add *tmp438 *tmp434 :buildTitaniumDrill*retval            ...
  924:  op sub *tmp439 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x - 1, y + 1, in out count, in out tiles)
  925:  op add *tmp440 :buildTitaniumDrills:y 1                      ...
  926:  set :buildTitaniumDrill:x *tmp439                            ...
  927:  set :buildTitaniumDrill:y *tmp440                            ...
  928:  setaddr :buildTitaniumDrill*retaddr *label379                ...
  929:  call *label50 *invalid :buildTitaniumDrill*retval            ...
        label *label379                                              ...
  930:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  931:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  932:  op add *tmp442 *tmp438 :buildTitaniumDrill*retval            ...
  933:  op add *tmp443 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x + 1, y + 1, in out count, in out tiles);
  934:  op add *tmp444 :buildTitaniumDrills:y 1                      ...
  935:  set :buildTitaniumDrill:x *tmp443                            ...
  936:  set :buildTitaniumDrill:y *tmp444                            ...
  937:  setaddr :buildTitaniumDrill*retaddr *label380                ...
  938:  call *label50 *invalid :buildTitaniumDrill*retval            ...
        label *label380                                              ...
  939:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  940:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  941:  op add :buildTitaniumDrills:built *tmp442 :buildTitaniumDril ...
  942:  jump *label381 notEqual :buildTitaniumDrills:built 0         BuilderController.mnd: if built == 0 then
  943:  set :buildTitaniumDrill:x :buildTitaniumDrills:x             BuilderController.mnd: built = buildTitaniumDrill(x, y, in out count, in out tiles);
  944:  set :buildTitaniumDrill:y :buildTitaniumDrills:y             ...
  945:  setaddr :buildTitaniumDrill*retaddr *label383                ...
  946:  call *label50 *invalid :buildTitaniumDrill*retval            ...
        label *label383                                              ...
  947:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  948:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  949:  set :buildTitaniumDrills:built :buildTitaniumDrill*retval    ...
        label *label381                                              BuilderController.mnd: if built == 0 then
        label *label375                                              BuilderController.mnd: if size >= 3 then
  950:  op add :buildTitaniumDrills:current :buildTitaniumDrills:cur BuilderController.mnd: while current < oreLocator.locations do
  951:  read *tmp51 processor3 ".locations"                          ...
  952:  jump *label602 lessThan :buildTitaniumDrills:current *tmp51  ...
        label *label374                                              ...
  953:  jump *label371 greaterThanEq :buildTitaniumDrills:tiles .MAX BuilderController.mnd: if tiles >= MAX_TILES then break; end;
  954:  jump *label371 greaterThanEq :buildTitaniumDrills:count .MAX BuilderController.mnd: if count >= MAX_COUNT then break; end;
  955:  read *tmp52 processor3 ".searchFinished"                     BuilderController.mnd: while !oreLocator.searchFinished;
  956:  jump *label369 equal *tmp52 false                            BuilderController.mnd: do
        label *label371                                              ...
  957:  set :buildTitaniumDrills*finished true                       BuilderController.mnd: remote void buildTitaniumDrills(current)
  958:  jump *label59 always 0 0                                     ...


Performance: parsed in 767 ms, compiled in 363 ms, optimized in 4,520 ms, run in 3 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (3 steps):
The program didn't generate any output.
Execution exception at instruction 10: read *tmp32 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
