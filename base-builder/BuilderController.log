  1427 instructions before optimizations.
    50 instructions eliminated by Temp Variables Elimination (3 passes, 8 iterations).
     1 instructions eliminated by Case Expression Optimization.
   139 instructions eliminated by Dead Code Elimination (12 iterations).
    66 instructions eliminated by Jump Optimization (6 iterations).
    56 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     8 instructions eliminated by Expression Optimization (2 passes, 4 iterations).
    12 instructions eliminated by If Expression Optimization (5 iterations).
   172 instructions eliminated by Data Flow Optimization (27 passes, 85 iterations).
     1 loops improved by Loop Hoisting.
     8 instructions added by Loop Optimization (4 iterations).
     6 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (37 iterations).
     1 loops unrolled by Loop Unrolling.
    68 instructions added by Function Inlining (37 iterations).
    52 function calls inlined by Function Inlining.
     7 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    29 instructions updated by Jump Threading.
     1 calls threaded by Jump Threading.
    25 instructions eliminated by Unreachable Code Elimination (2 iterations).
   965 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
  ! Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
  ! Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
  ! Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
  * Unroll iteration loop at BuilderController.mnd:204:5         size   -13, benefit       94.5, efficiency   Infinity (-10 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit      482.8, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +147, benefit       28.0, efficiency      0.190
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.2, efficiency      0.076
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.8, efficiency      4.352
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:157:5          size    +0, benefit      231.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +0, benefit      115.7, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:61:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:69:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:77:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:83:25          size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:88:21          size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:100:17         size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:104:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
  ! Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:115:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:122:17         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:125:17         size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:128:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:135:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
  ! Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
  ! Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:146:9          size    +0, benefit       57.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +74, benefit        8.0, efficiency      0.108
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +74, benefit        8.0, efficiency      0.108
  ! Inline function call at BuilderController.mnd:259:5          size   +74, benefit       12.0, efficiency      0.162
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
  ! Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
  ! Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
  ! Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit      482.8, efficiency   Infinity (-33 instructions)
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.2, efficiency      0.076
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.8, efficiency      4.352
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:157:5          size    +0, benefit      231.4, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:152:5          size    +0, benefit      115.7, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:61:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:69:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:77:17          size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:83:25          size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:88:21          size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:100:17         size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:104:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
  ! Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:115:21         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:122:17         size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:125:17         size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:128:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:135:17         size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
  ! Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
  ! Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:146:9          size    +0, benefit       57.9, efficiency   Infinity
  ! Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 18):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +377, benefit      396.8, efficiency      1.052
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
    Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
    Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.2, efficiency      0.076
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.8, efficiency      4.352
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
  ! Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +189, benefit      262.5, efficiency      1.389
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +189, benefit      131.3, efficiency      0.694
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +189, benefit        3.0, efficiency      0.016

Pass 1: speed optimization selection (cost limit 29):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
  * Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit      573.4, efficiency     13.986
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +377, benefit      396.8, efficiency      1.052
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +21, benefit      209.7, efficiency      9.988
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
  ! Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +21, benefit      330.6, efficiency     15.744
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +21, benefit       33.1, efficiency      1.574
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
  ! Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +189, benefit      262.5, efficiency      1.389
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +189, benefit      131.3, efficiency      0.694
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +189, benefit        3.0, efficiency      0.016

Pass 1: speed optimization selection (cost limit 34):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity (-6 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit      573.4, efficiency     13.986
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +377, benefit      396.8, efficiency      1.052
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +3, benefit      236.0, efficiency     78.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
  ! Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +21, benefit      209.7, efficiency      9.988
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
  ! Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +21, benefit      330.6, efficiency     15.744
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +21, benefit       33.1, efficiency      1.574
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +189, benefit      262.5, efficiency      1.389
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +189, benefit      131.3, efficiency      0.694
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +189, benefit        3.0, efficiency      0.016

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity (-5 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +377, benefit      396.8, efficiency      1.052
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +3, benefit      236.0, efficiency     78.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +189, benefit      262.5, efficiency      1.389
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +189, benefit      131.3, efficiency      0.694
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +189, benefit        3.0, efficiency      0.016

Pass 1: speed optimization selection (cost limit 45):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity (-4 instructions)
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +377, benefit      396.8, efficiency      1.052
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BuilderController.mnd:164:17         size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +189, benefit      262.5, efficiency      1.389
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +189, benefit      131.3, efficiency      0.694
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +189, benefit        3.0, efficiency      0.016

Pass 1: speed optimization selection (cost limit 49):
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055 (+1 instructions)
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 48):
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 47):
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962 (+1 instructions)
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
  * Replicate loop condition at BuilderController.mnd:428:9      size    +1, benefit      625.0, efficiency    625.000 (+1 instructions)
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit      573.4, efficiency     11.703
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +25, benefit      209.7, efficiency      8.390
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +25, benefit      330.6, efficiency     13.225
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +25, benefit       33.1, efficiency      1.323
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 45):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit      573.4, efficiency     11.703
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +25, benefit      209.7, efficiency      8.390
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +25, benefit      330.6, efficiency     13.225
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +25, benefit       33.1, efficiency      1.323
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 47):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit      573.4, efficiency    573.428 (-7 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.2, efficiency      0.078
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.8, efficiency      4.458
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 54):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  * Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 size   +26, benefit     8437.5, efficiency    324.519 (+8 instructions)
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:168:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BuilderController.mnd:391:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:392:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:393:13         size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BuilderController.mnd:394:13         size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:436:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:437:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:438:23         size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BuilderController.mnd:441:29         size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +379, benefit     8437.5, efficiency     22.263
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:168:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  * Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672 (+1 instructions)
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:436:23         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:437:23         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:438:23         size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BuilderController.mnd:441:29         size   +95, benefit      937.5, efficiency      9.868
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 45):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     1129.3, efficiency    225.864 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BuilderController.mnd:168:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 52):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
  * Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977 (-2 instructions)
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 54):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit      323.1, efficiency     64.627
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +71, benefit      142.2, efficiency      2.002
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
  * Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.8, efficiency     91.390 (-2 instructions)
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BuilderController.mnd:153:5          size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:119:21         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:123:17         size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BuilderController.mnd:126:17         size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:137:21         size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BuilderController.mnd:139:21         size    +9, benefit        0.2, efficiency      0.025
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.4, efficiency     46.785
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
  * Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 53):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.4, efficiency     46.785
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
  * Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 50):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.4, efficiency     46.785
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit     2360.1, efficiency     33.240
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  * Inline function call at Actions.mnd:119:16                   size   +36, benefit     1966.3, efficiency     54.620 (+35 instructions)
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.2, efficiency      0.080
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.8, efficiency      4.570
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
    Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 15):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.4, efficiency     46.785
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit      236.0, efficiency      1.584
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +35, benefit      393.8, efficiency     11.250
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit        3.2, efficiency      0.043
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit      182.8, efficiency      2.437
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  * Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981 (-2 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit       50.0, efficiency      0.666
    Inline function call at BuilderController.mnd:162:17         size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:70:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:78:17          size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BuilderController.mnd:84:25          size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BuilderController.mnd:89:21          size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 17):
    Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.4, efficiency     40.392
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561 (-3 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +149, benefit      236.0, efficiency      1.584
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +35, benefit      393.8, efficiency     11.250
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +75, benefit        3.2, efficiency      0.043
  ! Inline function call at Actions.mnd:140:5                    size   +75, benefit      182.8, efficiency      2.437
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +75, benefit       50.0, efficiency      0.666
    Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 20):
  * Replicate loop condition at BuilderController.mnd:233:5      size    +2, benefit       87.5, efficiency     43.750 (+2 instructions)
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.4, efficiency     40.392
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit      236.0, efficiency      1.522
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +443, benefit      396.8, efficiency      0.896
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +35, benefit      393.8, efficiency     11.250
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +127, benefit       28.0, efficiency      0.220
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit        3.2, efficiency      0.041
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit      182.8, efficiency      2.343
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit       50.0, efficiency      0.641
    Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +222, benefit      262.5, efficiency      1.182
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +222, benefit      131.3, efficiency      0.591
  ! Inline function call at BuilderController.mnd:246:5          size   +64, benefit        8.0, efficiency      0.125
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +64, benefit        8.0, efficiency      0.125
  ! Inline function call at BuilderController.mnd:259:5          size   +64, benefit       12.0, efficiency      0.188
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +222, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 18):
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.4, efficiency     40.392 (-9 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit      236.0, efficiency      1.522
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        2.8, efficiency      0.167
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +443, benefit      396.8, efficiency      0.896
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit      656.3, efficiency      9.243
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +131, benefit       28.0, efficiency      0.214
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.2, efficiency      1.598
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit        3.2, efficiency      0.041
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit      182.8, efficiency      2.343
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit       50.0, efficiency      0.641
    Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +9, benefit        0.3, efficiency      0.029
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +222, benefit      262.5, efficiency      1.182
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +222, benefit      131.3, efficiency      0.591
  ! Inline function call at BuilderController.mnd:246:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:259:5          size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +222, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 27):
    Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483 (-4 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +155, benefit      236.0, efficiency      1.522
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +439, benefit      396.8, efficiency      0.904
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit      656.3, efficiency      9.243
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +78, benefit        3.2, efficiency      0.041
  ! Inline function call at Actions.mnd:140:5                    size   +78, benefit      182.8, efficiency      2.343
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +78, benefit       50.0, efficiency      0.641
    Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +220, benefit      262.5, efficiency      1.193
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +220, benefit      131.3, efficiency      0.597
  ! Inline function call at BuilderController.mnd:246:5          size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:259:5          size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +220, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 31):
  * Replicate loop condition at BuilderController.mnd:239:9      size    +2, benefit       43.8, efficiency     21.875 (+2 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +157, benefit      236.0, efficiency      1.503
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +443, benefit      396.8, efficiency      0.896
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size   +71, benefit      656.3, efficiency      9.243
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
    Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +222, benefit      262.5, efficiency      1.182
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +222, benefit      131.3, efficiency      0.591
  ! Inline function call at BuilderController.mnd:246:5          size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BuilderController.mnd:259:5          size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +222, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 29):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +157, benefit      236.0, efficiency      1.503
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +55, benefit      142.2, efficiency      2.585
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +443, benefit      396.8, efficiency      0.896
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
    Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  * Inline function call at BuilderController.mnd:153:5          size    +7, benefit      115.7, efficiency     16.531 (+6 instructions)
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +222, benefit      262.5, efficiency      1.182
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +222, benefit      131.3, efficiency      0.591
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:259:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +222, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 23):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +236, benefit      384.7, efficiency      1.630
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit       26.4, efficiency      0.551
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +455, benefit      396.8, efficiency      0.872
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  * Inline function call at BuilderController.mnd:162:17         size   +11, benefit       33.1, efficiency      3.006 (+10 instructions)
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +228, benefit      262.5, efficiency      1.151
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +228, benefit      131.3, efficiency      0.576
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:259:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +228, benefit        3.0, efficiency      0.013

Pass 1: speed optimization selection (cost limit 13):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +315, benefit      403.3, efficiency      1.280
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit       26.4, efficiency      0.551
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +475, benefit      396.8, efficiency      0.835
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +135, benefit       28.0, efficiency      0.207
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
    Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  * Inline function call at BuilderController.mnd:101:17         size    +7, benefit       14.5, efficiency      2.066 (+6 instructions)
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +238, benefit      262.5, efficiency      1.103
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +238, benefit      131.3, efficiency      0.551
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:259:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +238, benefit        3.0, efficiency      0.013

Pass 1: speed optimization selection (cost limit 7):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +394, benefit      421.9, efficiency      1.071
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       12.0, efficiency      0.292
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +487, benefit      396.8, efficiency      0.815
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +135, benefit       28.0, efficiency      0.207
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  * Inline function call at BuilderController.mnd:119:21         size    +7, benefit        3.6, efficiency      0.517 (+6 instructions)
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +244, benefit      262.5, efficiency      1.076
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +244, benefit      131.3, efficiency      0.538
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:259:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +244, benefit        3.0, efficiency      0.012

Pass 1: speed optimization selection (cost limit 1):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +473, benefit      426.6, efficiency      0.902
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit        8.4, efficiency      0.246
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +499, benefit      396.8, efficiency      0.795
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +135, benefit       28.0, efficiency      0.207
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
  ! Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +250, benefit      262.5, efficiency      1.050
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +250, benefit      131.3, efficiency      0.525
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BuilderController.mnd:259:5          size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BuilderController.mnd:260:17         size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BuilderController.mnd:358:12         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:362:17         size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BuilderController.mnd:397:29         size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BuilderController.mnd:435:29         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:436:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:437:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:438:23         size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BuilderController.mnd:441:29         size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BuilderController.mnd:453:5          size  +250, benefit        3.0, efficiency      0.012

Pass 2: speed optimization selection (cost limit 17):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +473, benefit      426.6, efficiency      0.902
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit        8.4, efficiency      0.246
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BuilderController.mnd:176:1 size  +495, benefit      396.8, efficiency      0.802
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  * Inline function call at BuilderController.mnd:62:17          size   +11, benefit       16.5, efficiency      1.503 (+10 instructions)
    Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
    Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +248, benefit      262.5, efficiency      1.058
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +248, benefit      131.3, efficiency      0.529
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:259:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:438:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:441:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:453:5          size  +248, benefit        3.0, efficiency      0.012

Pass 2: speed optimization selection (cost limit 7):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit        8.4, efficiency      0.246
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
    Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  * Inline function call at BuilderController.mnd:123:17         size    +7, benefit        3.6, efficiency      0.517 (+6 instructions)
    Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
    Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +258, benefit      262.5, efficiency      1.017
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +258, benefit      131.3, efficiency      0.509
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:259:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:438:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:441:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:453:5          size  +258, benefit        3.0, efficiency      0.012

Pass 2: speed optimization selection (cost limit 1):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        4.7, efficiency      0.176
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
  ! Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +264, benefit      262.5, efficiency      0.994
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +264, benefit      131.3, efficiency      0.497
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:259:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:438:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:441:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:453:5          size  +264, benefit        3.0, efficiency      0.011

Pass 3: speed optimization selection (cost limit 5):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        4.7, efficiency      0.176
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
  ! Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +264, benefit      262.5, efficiency      0.994
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +264, benefit      131.3, efficiency      0.497
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:259:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:438:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:441:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:453:5          size  +264, benefit        3.0, efficiency      0.011

Pass 4: speed optimization selection (cost limit 5):
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        2.8, efficiency      0.219
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        4.7, efficiency      0.176
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BuilderController.mnd:188:1 size  +107, benefit      787.5, efficiency      7.360
  ! Inline function 'meetTargetLocal' defined at BuilderController.mnd:201:1 size  +133, benefit       28.0, efficiency      0.211
  ! Inline function 'buildBlock' defined at BuilderController.mnd:258:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BuilderController.mnd:316:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BuilderController.mnd:386:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +79, benefit        3.2, efficiency      0.040
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      182.8, efficiency      2.314
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       50.0, efficiency      0.633
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BuilderController.mnd:168:5          size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit      148.8, efficiency      1.883
  ! Inline function call at Actions.mnd:166:9                    size   +79, benefit        9.3, efficiency      0.118
  ! Inline function call at BuilderController.mnd:70:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:78:17          size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BuilderController.mnd:84:25          size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BuilderController.mnd:89:21          size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit       18.6, efficiency      0.235
  ! Inline function call at BuilderController.mnd:110:25         size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BuilderController.mnd:112:25         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at Actions.mnd:140:5                    size   +79, benefit        4.6, efficiency      0.059
  ! Inline function call at BuilderController.mnd:126:17         size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BuilderController.mnd:130:21         size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BuilderController.mnd:132:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:137:21         size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BuilderController.mnd:139:21         size    +7, benefit        0.2, efficiency      0.032
  ! Inline function call at BuilderController.mnd:141:21         size    +7, benefit        0.3, efficiency      0.037
  ! Inline function call at BuilderController.mnd:147:9          size   +36, benefit       66.1, efficiency      1.837
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:234:9          size  +264, benefit      262.5, efficiency      0.994
  ! Inline function call at BuilderController.mnd:233:12         size   +36, benefit      262.5, efficiency      7.292
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:240:13         size  +264, benefit      131.3, efficiency      0.497
  ! Inline function call at BuilderController.mnd:239:16         size   +36, benefit      131.3, efficiency      3.646
  ! Inline function call at BuilderController.mnd:246:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:251:5          size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BuilderController.mnd:252:5          size   +67, benefit        8.0, efficiency      0.119
  ! Inline function call at BuilderController.mnd:259:5          size   +67, benefit       12.0, efficiency      0.179
  ! Inline function call at BuilderController.mnd:260:17         size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BuilderController.mnd:268:9          size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BuilderController.mnd:269:16         size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BuilderController.mnd:277:5          size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BuilderController.mnd:278:20         size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BuilderController.mnd:358:12         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:362:17         size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BuilderController.mnd:397:29         size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BuilderController.mnd:435:29         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:436:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:437:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:438:23         size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BuilderController.mnd:441:29         size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BuilderController.mnd:453:5          size  +264, benefit        3.0, efficiency      0.011

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1503 jump *label344 always
  1504 set *tmp384 null
  1505 label *label344
-    * set *tmp387 *tmp384
-    * jump *label346 equal *tmp387 @ore-titanium
+ 1506 jump *label346 equal *tmp384 @ore-titanium
  1507 jump *label345 always
  1508 label *label346
  1509 set *tmp388 :titaniumDrillScore:positive
 
  1511 set *tmp383 *tmp388
  1512 jump *label343 always
  1513 label *label345
-    * jump *label348 equal *tmp387 @ore-copper
-    * jump *label348 equal *tmp387 @ore-lead
-    * jump *label348 equal *tmp387 @ore-scrap
-    * jump *label348 equal *tmp387 @ore-coal
+ 1514 jump *label348 equal *tmp384 @ore-copper
+ 1515 jump *label348 equal *tmp384 @ore-lead
+ 1516 jump *label348 equal *tmp384 @ore-scrap
+ 1517 jump *label348 equal *tmp384 @ore-coal
  1518 jump *label347 always
  1519 label *label348
  1520 set *tmp389 :titaniumDrillScore:negative

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-78 instructions):
 
   102 op notEqual *tmp109 *tmp108 null
   103 jump *label70 equal *tmp109 false
   104 ucontrol itemDrop @air 1000
-    * set *tmp110 null
   105 jump *label71 always
   106 label *label70
-    * set *tmp110 null
   107 label *label71
   108 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   109 label *label68
 
   162 op greaterThan *tmp124 *tmp122 *tmp123
   163 jump *label83 notEqual *tmp124 false
   164 label *label85
-    * set *tmp119 null
   165 jump *label81 always
   166 label *label80
   167 label *label86
 
   172 label *label87
   173 jump *label86 always
   174 label *label88
-    * set *tmp119 null
   175 label *label81
   176 set :transportStatus:target 0
   177 set :transportStatus:item null
 
   189 setaddr :error*retaddr *label93 (h:*label93)
   190 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
   191 label *label93
-    * set *tmp130 null
   192 jump *label92 always
   193 label *label91
-    * set *tmp130 null
   194 label *label92
   195 label *label90
   196 return :locateOre*retaddr
 
   220 setaddr :dropAll*retaddr *label100 (h:*label100)
   221 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   222 label *label100
-    * set *tmp134 null
   223 jump *label99 always
   224 label *label98
-    * set *tmp134 null
   225 label *label99
   226 set :status3:text "Mining..."
   227 setaddr :status3*retaddr *label101 (h:*label101)
 
   237 op land *tmp139 *tmp137 *tmp138
   238 jump *label105 equal *tmp139 false
   239 jump *label104 always
-    * set *tmp140 null
   240 jump *label106 always
   241 label *label105
-    * set *tmp140 null
   242 label *label106
   243 ucontrol mine :mineOre:x :mineOre:y
   244 op greaterThan *tmp141 @second :mineOre:stop
   245 jump *label107 equal *tmp141 false
   246 jump *label104 always
-    * set *tmp142 null
   247 jump *label108 always
   248 label *label107
-    * set *tmp142 null
   249 label *label108
   250 op equal *tmp143 .noTarget false
   251 jump *label109 equal *tmp143 false
 
   259 label *label112
   260 set *tmp145 null
   261 label *label113
-    * set *tmp144 *tmp145
   262 jump *label110 always
   263 label *label109
-    * set *tmp144 null
   264 label *label110
   265 label *label103
   266 sensor *tmp146 @unit @totalItems
 
   344 op land *tmp158 *tmp156 *tmp157
   345 jump *label129 equal *tmp158 false
   346 ucontrol itemDrop @air 1000
-    * set *tmp159 null
   347 jump *label130 always
   348 label *label129
-    * set *tmp159 null
   349 label *label130
   350 label *label127
   351 sensor *tmp160 @unit :fetchBlock:item
 
   382 setaddr :mineOre*retaddr *label136 (h:*label136)
   383 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   384 label *label136
-    * set *tmp168 null
   385 jump *label135 always
   386 label *label134
-    * set *tmp168 null
   387 label *label135
   388 label *label132
   389 return :supplyBlock*retaddr
 
   420 op land *tmp174 *tmp172 *tmp173
   421 jump *label145 equal *tmp174 false
   422 ucontrol itemDrop @air 1000
-    * set *tmp175 null
   423 jump *label146 always
   424 label *label145
-    * set *tmp175 null
   425 label *label146
   426 label *label143
   427 sensor *tmp176 @unit :supplyBlockFromCore:item
 
   483 sensor *tmp204 :unpackCfg:type @thorium
   484 set :unpackCfg:th *tmp204
   485 sensor *tmp205 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp205
   486 label *label148
   487 return :unpackCfg*retaddr
   488 end
 
   526 label *label156
   527 set *tmp216 null
   528 label *label157
-    * set *tmp213 *tmp216
   529 jump *label155 always
   530 label *label154
-    * set *tmp213 null
   531 label *label155
   532 set :fetchBlock:block .thoriumContainer
   533 set :fetchBlock:item @thorium
 
   543 set :setPolyTarget:target 4
   544 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   545 label *label166
-    * set *tmp222 null
   546 jump *label164 always
   547 label *label163
-    * set *tmp222 null
   548 label *label164
   549 label *label152
-    * set *tmp210 null
   550 jump *label151 always
   551 label *label150
   552 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   588 label *label177
   589 set *tmp232 null
   590 label *label178
-    * set *tmp229 *tmp232
   591 jump *label176 always
   592 label *label175
-    * set *tmp229 null
   593 label *label176
   594 sensor *tmp233 AJTJK-battery1 @totalPower
   595 op lessThan *tmp234 *tmp233 .powerTarget
 
   612 label *label183
   613 set *tmp238 null
   614 label *label184
-    * set *tmp235 *tmp238
   615 jump *label182 always
   616 label *label181
-    * set *tmp235 null
   617 label *label182
   618 sensor *tmp239 .core @silicon
   619 op lessThan *tmp240 *tmp239 silicon
 
   683 label *label187
   684 set *tmp241 null
   685 label *label188
-    * set *tmp226 *tmp241
   686 jump *label174 always
   687 label *label173
-    * set *tmp226 null
   688 label *label174
   689 sensor *tmp252 .core @titanium
   690 op lessThan *tmp253 *tmp252 titanium
 
   902 label *label207
   903 set *tmp262 null
   904 label *label208
-    * set *tmp260 *tmp262
   905 jump *label206 always
   906 label *label205
   907 set :status1:text "Goal 11: Fetching titanium"
 
   913 setaddr :fetchBlock*retaddr *label256 (h:*label256)
   914 call *label28 *invalid :fetchBlock*retval (m:*label256) (h:*label256)
   915 label *label256
-    * set *tmp260 null
   916 label *label206
   917 label *label172
   918 set *tmp224 null
   919 label *label168
-    * set *tmp210 *tmp224
   920 label *label151
   921 label *label149
   922 return :supplyBaseLocal*retaddr
 
   928 write @copper processor2 ".missing"
   929 set :targetMet*retval false
   930 jump *label257 always
-    * set *tmp307 null
   931 jump *label259 always
   932 label *label258
-    * set *tmp307 null
   933 label *label259
   934 sensor *tmp308 .core @lead
   935 op lessThan *tmp309 *tmp308 lead
 
   937 write @lead processor2 ".missing"
   938 set :targetMet*retval false
   939 jump *label257 always
-    * set *tmp310 null
   940 jump *label261 always
   941 label *label260
-    * set *tmp310 null
   942 label *label261
   943 sensor *tmp311 .core @graphite
   944 op lessThan *tmp312 *tmp311 graphite
 
   946 write @graphite processor2 ".missing"
   947 set :targetMet*retval false
   948 jump *label257 always
-    * set *tmp313 null
   949 jump *label263 always
   950 label *label262
-    * set *tmp313 null
   951 label *label263
   952 sensor *tmp314 .core @silicon
   953 op lessThan *tmp315 *tmp314 silicon
 
   955 write @silicon processor2 ".missing"
   956 set :targetMet*retval false
   957 jump *label257 always
-    * set *tmp316 null
   958 jump *label265 always
   959 label *label264
-    * set *tmp316 null
   960 label *label265
   961 sensor *tmp317 .core @titanium
   962 op lessThan *tmp318 *tmp317 titanium
 
   964 write @titanium processor2 ".missing"
   965 set :targetMet*retval false
   966 jump *label257 always
-    * set *tmp319 null
   967 jump *label267 always
   968 label *label266
-    * set *tmp319 null
   969 label *label267
   970 sensor *tmp320 .core @metaglass
   971 op lessThan *tmp321 *tmp320 metaglass
 
   973 write @metaglass processor2 ".missing"
   974 set :targetMet*retval false
   975 jump *label257 always
-    * set *tmp322 null
   976 jump *label269 always
   977 label *label268
-    * set *tmp322 null
   978 label *label269
   979 sensor *tmp323 .core @thorium
   980 op lessThan *tmp324 *tmp323 thorium
 
   982 write @thorium processor2 ".missing"
   983 set :targetMet*retval false
   984 jump *label257 always
-    * set *tmp325 null
   985 jump *label271 always
   986 label *label270
-    * set *tmp325 null
   987 label *label271
   988 set :targetMet*retval true
   989 jump *label257 always
 
  1093 label *label292
  1094 jump *label291 always
  1095 label *label293
-    * set *tmp340 null
  1096 jump *label289 always
  1097 label *label288
-    * set *tmp340 null
  1098 label *label289
  1099 label *label272
  1100 return :meetTargetLocal*retaddr
 
  1216 label *label308
  1217 set :buildRemoteBlock*retval :buildBlock*retval
  1218 jump *label304 always
-    * set *tmp347 null
  1219 jump *label306 always
  1220 label *label305
-    * set *tmp347 null
  1221 label *label306
  1222 set :buildRemoteBlock*retval false
  1223 jump *label304 always
 
  1293 jump *label320 equal *tmp356 false
  1294 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1295 jump *label315 always
-    * set *tmp357 null
  1296 jump *label321 always
  1297 label *label320
-    * set *tmp357 null
  1298 label *label321
  1299 set :buildError:text "Cannot build at position"
  1300 set :buildError:block :buildBlockAtLocal:block
 
  1308 set .ERROR_Y :buildError:y
  1309 stop
  1310 label *label322
-    * set *tmp355 null
  1311 jump *label319 always
  1312 label *label318
-    * set *tmp355 null
  1313 label *label319
  1314 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
  1315 wait 0.25
 
  1334 set .ERROR_Y :buildError.1:y
  1335 stop
  1336 label *label328
-    * set *tmp363 null
  1337 jump *label327 always
  1338 label *label326
  1339 set :buildBlockAtLocal:success true
-    * set *tmp363 :buildBlockAtLocal:success
  1340 label *label327
  1341 op equal *tmp364 :buildBlockAtLocal:block @multiplicative-reconstructor
  1342 jump *label329 equal *tmp364 false
 
  1351 label *label331
  1352 set *tmp368 null
  1353 label *label332
-    * set *tmp365 *tmp368
  1354 jump *label330 always
  1355 label *label329
-    * set *tmp365 null
  1356 label *label330
  1357 label *label324
  1358 op notEqual *tmp369 :buildBlockAtLocal:type :buildBlockAtLocal:block
 
  1380 op or *tmp380 *tmp7 *tmp379
  1381 write *tmp380 processor2 ".blocksBuilt"
  1382 write :logBlock:index processor2 ".recentBuildIndex"
-    * set *tmp378 :logBlock:index
  1383 jump *label336 always
  1384 label *label335
-    * set *tmp378 null
  1385 label *label336
  1386 label *label333
  1387 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
 
  1494 label *label356
  1495 set .positive :titaniumDrillScore:positive
  1496 set .negative :titaniumDrillScore:negative
-    * set *tmp398 :titaniumDrillScore*retval
  1497 op sub *tmp399 :buildTitaniumDrill:x 0.5
  1498 op add *tmp400 :buildTitaniumDrill:y 0.5
  1499 set :titaniumDrillScore:x *tmp399
 
  1505 label *label357
  1506 set .positive :titaniumDrillScore:positive
  1507 set .negative :titaniumDrillScore:negative
-    * set *tmp401 :titaniumDrillScore*retval
  1508 op add *tmp402 :buildTitaniumDrill:x 0.5
  1509 op sub *tmp403 :buildTitaniumDrill:y 0.5
  1510 set :titaniumDrillScore:x *tmp402
 
  1516 label *label358
  1517 set .positive :titaniumDrillScore:positive
  1518 set .negative :titaniumDrillScore:negative
-    * set *tmp404 :titaniumDrillScore*retval
  1519 op add *tmp405 :buildTitaniumDrill:x 0.5
  1520 op add *tmp406 :buildTitaniumDrill:y 0.5
  1521 set :titaniumDrillScore:x *tmp405
 
  1527 label *label359
  1528 set .positive :titaniumDrillScore:positive
  1529 set .negative :titaniumDrillScore:negative
-    * set *tmp407 :titaniumDrillScore*retval
  1530 op greaterThan *tmp408 .positive .negative
  1531 op greaterThanEq *tmp409 .positive 2
  1532 op land *tmp410 *tmp408 *tmp409
 
  1574 label *label352
  1575 set *tmp393 null
  1576 label *label353
-    * set *tmp391 *tmp393
  1577 jump *label351 always
  1578 label *label350
-    * set *tmp391 null
  1579 label *label351
  1580 set :buildTitaniumDrill*retval 0
  1581 jump *label349 always
 
  1588 set :buildTitaniumDrills:tiles 0
  1589 jump *label368 equal .scrap false
  1590 op add .MAX_TILES .MAX_TILES 4
-    * set *tmp418 .MAX_TILES
  1591 jump *label369 always
  1592 label *label368
-    * set *tmp418 null
  1593 label *label369
  1594 wait 0.0001
  1595 wait 0.0001
 
  1684 label *label382
  1685 set *tmp448 null
  1686 label *label383
-    * set *tmp425 *tmp448
  1687 jump *label377 always
  1688 label *label376
-    * set *tmp425 null
  1689 label *label377
-    * set *tmp450 :buildTitaniumDrills:current
  1690 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1691 label *label374
  1692 jump *label373 always
 
  1694 op greaterThanEq *tmp451 :buildTitaniumDrills:tiles .MAX_TILES
  1695 jump *label385 equal *tmp451 false
  1696 jump *label372 always
-    * set *tmp452 null
  1697 jump *label386 always
  1698 label *label385
-    * set *tmp452 null
  1699 label *label386
  1700 op greaterThanEq *tmp453 :buildTitaniumDrills:count .MAX_COUNT
  1701 jump *label387 equal *tmp453 false
  1702 jump *label372 always
-    * set *tmp454 null
  1703 jump *label388 always
  1704 label *label387
-    * set *tmp454 null
  1705 label *label388
  1706 label *label371
  1707 read *tmp52 processor3 ".searchFinished"

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   254 label *label111
   255 jump *label112 equal :targetMet*retval false
   256 jump *label104 always
-    * set *tmp145 null
   257 jump *label113 always
   258 label *label112
-    * set *tmp145 null
   259 label *label113
   260 jump *label110 always
   261 label *label109
 
   480 set :unpackCfg:mg *tmp203
   481 sensor *tmp204 :unpackCfg:type @thorium
   482 set :unpackCfg:th *tmp204
-    * sensor *tmp205 :unpackCfg:type @size
   483 label *label148
   484 return :unpackCfg*retaddr
   485 end
 
   518 label *label161
   519 set *tmp219 null
   520 label *label159
-    * set *tmp216 *tmp219
   521 jump *label157 always
   522 label *label156
-    * set *tmp216 null
   523 label *label157
   524 jump *label155 always
   525 label *label154
 
   556 call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
   557 label *label171
   558 label *label169
-    * set *tmp224 null
   559 jump *label168 always
   560 label *label167
   561 set :supplyBase0:supplied false
 
   577 call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
   578 label *label180
   579 set :supplyBase0:supplied true
-    * set *tmp232 :supplyBase0:supplied
   580 jump *label178 always
   581 label *label177
-    * set *tmp232 null
   582 label *label178
   583 jump *label176 always
   584 label *label175
 
   599 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   600 label *label186
   601 jump *label172 always
-    * set *tmp238 null
   602 jump *label184 always
   603 label *label183
-    * set *tmp238 null
   604 label *label184
   605 jump *label182 always
   606 label *label181
 
   668 label *label194
   669 set *tmp244 *tmp247
   670 label *label190
-    * set *tmp241 *tmp244
   671 jump *label188 always
   672 label *label187
-    * set *tmp241 null
   673 label *label188
   674 jump *label174 always
   675 label *label173
 
   885 label *label214
   886 set *tmp266 *tmp269
   887 label *label210
-    * set *tmp262 *tmp266
   888 jump *label208 always
   889 label *label207
-    * set *tmp262 null
   890 label *label208
   891 jump *label206 always
   892 label *label205
 
   901 label *label256
   902 label *label206
   903 label *label172
-    * set *tmp224 null
   904 label *label168
   905 label *label151
   906 label *label149
 
  1331 jump *label331 equal *tmp367 false
  1332 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1333 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * set *tmp368 null
  1334 jump *label332 always
  1335 label *label331
-    * set *tmp368 null
  1336 label *label332
  1337 jump *label330 always
  1338 label *label329
 
  1444 label *label347
  1445 set *tmp383 null
  1446 label *label343
-    * set :titaniumDrillScore*retval *tmp383
  1447 label *label342
  1448 return :titaniumDrillScore*retaddr
  1449 end
 
  1551 label *label360
  1552 set *tmp411 null
  1553 label *label361
-    * set *tmp393 *tmp411
  1554 jump *label353 always
  1555 label *label352
-    * set *tmp393 null
  1556 label *label353
  1557 jump *label351 always
  1558 label *label350
 
  1659 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1660 set *tmp449 :buildTitaniumDrill*retval
  1661 set :buildTitaniumDrills:built *tmp449
-    * set *tmp448 :buildTitaniumDrills:built
  1662 jump *label383 always
  1663 label *label382
-    * set *tmp448 null
  1664 label *label383
  1665 jump *label377 always
  1666 label *label376

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
   508 setaddr :supplyBlock*retaddr *label160 (h:*label160)
   509 call *label29 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
   510 label *label160
-    * set *tmp219 null
   511 jump *label159 always
   512 label *label158
   513 set :supplyBlockFromCore:target .thoriumGenerator
 
   515 setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
   516 call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   517 label *label161
-    * set *tmp219 null
   518 label *label159
   519 jump *label157 always
   520 label *label156
 
   619 call *label29 *invalid :supplyBlock*retval (m:*label192) (h:*label192)
   620 label *label192
   621 set :supplyBase0:supplied true
-    * set *tmp244 :supplyBase0:supplied
   622 jump *label190 always
   623 label *label189
   624 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
 
   663 label *label193
   664 set *tmp247 null
   665 label *label194
-    * set *tmp244 *tmp247
   666 label *label190
   667 jump *label188 always
   668 label *label187
 
   699 setaddr :mineOre.2*retaddr *label212 (h:*label212)
   700 call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
   701 label *label212
-    * set *tmp266 null
   702 jump *label210 always
   703 label *label209
   704 sensor *tmp267 .core @silicon
 
   878 label *label231
   879 set *tmp269 *tmp284
   880 label *label214
-    * set *tmp266 *tmp269
   881 label *label210
   882 jump *label208 always
   883 label *label207
 
  1422 label *label346
  1423 set *tmp388 :titaniumDrillScore:positive
  1424 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * set *tmp383 *tmp388
  1425 jump *label343 always
  1426 label *label345
  1427 jump *label348 equal *tmp384 @ore-copper
 
  1432 label *label348
  1433 set *tmp389 :titaniumDrillScore:negative
  1434 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * set *tmp383 *tmp389
  1435 jump *label343 always
  1436 label *label347
-    * set *tmp383 null
  1437 label *label343
  1438 label *label342
  1439 return :titaniumDrillScore*retaddr
 
  1537 label *label363
  1538 set *tmp413 null
  1539 label *label364
-    * set *tmp411 *tmp413
  1540 jump *label361 always
  1541 label *label360
-    * set *tmp411 null
  1542 label *label361
  1543 jump *label353 always
  1544 label *label352

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-8 instructions):
 
   658 set :supplyBase0:supplied true
   659 set *tmp248 :supplyBase0:supplied
   660 label *label196
-    * set *tmp247 *tmp248
   661 jump *label194 always
   662 label *label193
-    * set *tmp247 null
   663 label *label194
   664 label *label190
   665 jump *label188 always
 
   767 label *label229
   768 set *tmp270 null
   769 label *label216
-    * set *tmp269 *tmp270
   770 jump *label214 always
   771 label *label213
   772 sensor *tmp282 .core @copper
 
   873 label *label235
   874 set *tmp284 *tmp287
   875 label *label231
-    * set *tmp269 *tmp284
   876 label *label214
   877 label *label210
   878 jump *label208 always
 
  1416 jump *label346 equal *tmp384 @ore-titanium
  1417 jump *label345 always
  1418 label *label346
-    * set *tmp388 :titaniumDrillScore:positive
  1419 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1420 jump *label343 always
  1421 label *label345
 
  1425 jump *label348 equal *tmp384 @ore-coal
  1426 jump *label347 always
  1427 label *label348
-    * set *tmp389 :titaniumDrillScore:negative
  1428 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1429 jump *label343 always
  1430 label *label347
 
  1526 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp417
  1527 set :buildTitaniumDrill*retval .positive
  1528 jump *label349 always
-    * set *tmp413 null
  1529 jump *label364 always
  1530 label *label363
-    * set *tmp413 null
  1531 label *label364
  1532 jump *label361 always
  1533 label *label360

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-6 instructions):
 
   643 label *label197
   644 set *tmp251 null
   645 label *label198
-    * set *tmp248 *tmp251
   646 jump *label196 always
   647 label *label195
   648 set :status1:text "Goal 3: sand for silicon requirement"
 
   655 call *label29 *invalid :supplyBlock*retval (m:*label202) (h:*label202)
   656 label *label202
   657 set :supplyBase0:supplied true
-    * set *tmp248 :supplyBase0:supplied
   658 label *label196
   659 jump *label194 always
   660 label *label193
 
   740 label *label225
   741 set *tmp271 null
   742 label *label219
-    * set *tmp270 *tmp271
   743 jump *label216 always
   744 label *label215
   745 set :status1:text "Goal 6: silicon requirement"
 
   762 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   763 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   764 label *label229
-    * set *tmp270 null
   765 label *label216
   766 jump *label214 always
   767 label *label213
 
   776 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   777 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
   778 label *label233
-    * set *tmp284 null
   779 jump *label231 always
   780 label *label230
   781 sensor *tmp285 .core @lead
 
   866 label *label239
   867 set *tmp287 *tmp290
   868 label *label235
-    * set *tmp284 *tmp287
   869 label *label231
   870 label *label214
   871 label *label210

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-6 instructions):
 
   638 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   639 label *label200
   640 set :supplyBase0:supplied true
-    * set *tmp251 :supplyBase0:supplied
   641 jump *label198 always
   642 label *label197
-    * set *tmp251 null
   643 label *label198
   644 jump *label196 always
   645 label *label195
 
   729 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   730 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   731 label *label224
-    * set *tmp271 null
   732 jump *label219 always
   733 label *label218
   734 set :mineOre.2:ore @coal
   735 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   736 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   737 label *label225
-    * set *tmp271 null
   738 label *label219
   739 jump *label216 always
   740 label *label215
 
   785 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   786 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
   787 label *label237
-    * set *tmp287 null
   788 jump *label235 always
   789 label *label234
   790 sensor *tmp288 .core @metaglass
 
   859 label *label247
   860 set *tmp290 *tmp293
   861 label *label239
-    * set *tmp287 *tmp290
   862 label *label235
   863 label *label231
   864 label *label214

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   809 label *label244
   810 set *tmp291 null
   811 label *label242
-    * set *tmp290 *tmp291
   812 jump *label239 always
   813 label *label238
   814 set :status1:text "Goal 10: supplying base"
 
   856 label *label252
   857 set *tmp293 *tmp304
   858 label *label247
-    * set *tmp290 *tmp293
   859 label *label239
   860 label *label235
   861 label *label231

Modifications by Initial phase, Dead Code Elimination, iteration 8 (-4 instructions):
 
   800 setaddr :mineOre.1*retaddr *label243 (h:*label243)
   801 call *label26 *invalid :mineOre.1*retval (m:*label243) (h:*label243)
   802 label *label243
-    * set *tmp291 null
   803 jump *label242 always
   804 label *label241
   805 set :mineOre.2:ore @sand
   806 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   807 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   808 label *label244
-    * set *tmp291 null
   809 label *label242
   810 jump *label239 always
   811 label *label238
 
   829 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   830 call *label27 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
   831 label *label250
-    * set *tmp293 null
   832 jump *label247 always
   833 label *label246
   834 sensor *tmp299 .core @coal
 
   851 label *label254
   852 set *tmp304 null
   853 label *label252
-    * set *tmp293 *tmp304
   854 label *label247
   855 label *label239
   856 label *label235

Modifications by Initial phase, Dead Code Elimination, iteration 9 (-2 instructions):
 
   841 setaddr :mineOre.2*retaddr *label253 (h:*label253)
   842 call *label27 *invalid :mineOre.2*retval (m:*label253) (h:*label253)
   843 label *label253
-    * set *tmp304 null
   844 jump *label252 always
   845 label *label251
   846 set :mineOre.1:ore @scrap
 
   848 setaddr :mineOre.1*retaddr *label254 (h:*label254)
   849 call *label26 *invalid :mineOre.1*retval (m:*label254) (h:*label254)
   850 label *label254
-    * set *tmp304 null
   851 label *label252
   852 label *label247
   853 label *label239

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-49 instructions):
 
    32 set .MAX_COUNT 6
    33 label *label51
    34 ubind @poly
-    * set *tmp101 @unit
-    * set .builder *tmp101
-    * ulocate building core false @copper .coreX .coreY *tmp103 *tmp102
-    * set .core *tmp102
+   35 set .builder @unit
+   36 ulocate building core false @copper .coreX .coreY *tmp103 .core
    37 label *label52
    38 op equal *tmp104 .core null
    39 jump *label51 notEqual *tmp104 false
 
   149 setaddr :moveToBlock*retaddr *label82 (h:*label82)
   150 call *label22 *invalid :moveToBlock*retval (m:*label82) (h:*label82)
   151 label *label82
-    * sensor *tmp120 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp120
+  152 sensor :depositItems:cap :depositItems:block @itemCapacity
   153 label *label83
   154 ucontrol itemDrop :depositItems:block 28
   155 label *label84
 
   193 return :locateOre*retaddr
   194 end
   195 label *label25
-    * op min *tmp131 :mineOre:amount 28
-    * set :mineOre:amount *tmp131
+  196 op min :mineOre:amount :mineOre:amount 28
   197 set :transportStatus:target :mineOre:amount
   198 set :transportStatus:item :mineOre:ore
   199 setaddr :transportStatus*retaddr *label95 (h:*label95)
 
   223 setaddr :status3*retaddr *label101 (h:*label101)
   224 call *label16 *invalid :status3*retval (m:*label101) (h:*label101)
   225 label *label101
-    * op add *tmp135 @second 10
-    * set :mineOre:stop *tmp135
+  226 op add :mineOre:stop @second 10
   227 label *label102
-    * sensor *tmp136 @unit @firstItem
-    * set :mineOre:item *tmp136
+  228 sensor :mineOre:item @unit @firstItem
   229 op notEqual *tmp137 :mineOre:item null
   230 op notEqual *tmp138 :mineOre:item :mineOre:ore
   231 op land *tmp139 *tmp137 *tmp138
 
   293 setaddr :status2*retaddr *label119 (h:*label119)
   294 call *label15 *invalid :status2*retval (m:*label119) (h:*label119)
   295 label *label119
-    * set *tmp150 :mineOre.2:ore
-    * set :mineOre:ore *tmp150
+  296 set :mineOre:ore :mineOre.2:ore
   297 set :mineOre:amount 28
   298 set :mineOre:block .core
   299 setaddr :mineOre*retaddr *label120 (h:*label120)
 
   304 end
   305 label *label28
   306 sensor *tmp151 :fetchBlock:block @itemCapacity
-    * op min *tmp152 *tmp151 28
-    * set :transportStatus:target *tmp152
+  307 op min :transportStatus:target *tmp151 28
   308 set :transportStatus:item :fetchBlock:item
   309 setaddr :transportStatus*retaddr *label122 (h:*label122)
   310 call *label17 *invalid :transportStatus*retval (m:*label122) (h:*label122)
 
   327 label *label125
   328 label *label126
   329 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
-    * sensor *tmp155 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp155
+  330 sensor :fetchBlock:unitItem @unit @firstItem
   331 op notEqual *tmp156 :fetchBlock:unitItem null
   332 op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item
   333 op land *tmp158 *tmp156 *tmp157
 
   358 setaddr :status2*retaddr *label133 (h:*label133)
   359 call *label15 *invalid :status2*retval (m:*label133) (h:*label133)
   360 label *label133
-    * sensor *tmp164 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp164
+  361 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   362 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp166 :supplyBlock:blockCapacity *tmp165
-    * set :supplyBlock:missing *tmp166
+  363 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   364 op greaterThan *tmp167 :supplyBlock:missing 0
   365 jump *label134 equal *tmp167 false
   366 set :mineOre:ore :supplyBlock:ore
 
   377 end
   378 label *label30
   379 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp170 *tmp169 28
-    * set :supplyBlockFromCore:cap *tmp170
+  380 op min :supplyBlockFromCore:cap *tmp169 28
   381 set :transportStatus:target :supplyBlockFromCore:cap
   382 set :transportStatus:item :supplyBlockFromCore:item
   383 setaddr :transportStatus*retaddr *label138 (h:*label138)
 
   399 label *label141
   400 label *label142
   401 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor *tmp171 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp171
+  402 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   403 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
   404 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   405 op land *tmp174 *tmp172 *tmp173
 
   429 op add :unpackCfg:index :unpackCfg:index 1
   430 read *tmp181 :unpackCfg:cfg *tmp180
   431 op sub *tmp182 *tmp181 74
-    * lookup block *tmp183 *tmp182
-    * set :unpackCfg:type *tmp183
+  432 lookup block :unpackCfg:type *tmp182
   433 set *tmp184 :unpackCfg:index
   434 op add :unpackCfg:index :unpackCfg:index 1
   435 read *tmp185 :unpackCfg:cfg *tmp184
   436 op sub *tmp186 *tmp185 74
-    * op div *tmp187 *tmp186 2
-    * set :unpackCfg:x *tmp187
+  437 op div :unpackCfg:x *tmp186 2
   438 set *tmp188 :unpackCfg:index
   439 op add :unpackCfg:index :unpackCfg:index 1
   440 read *tmp189 :unpackCfg:cfg *tmp188
   441 op sub *tmp190 *tmp189 74
-    * op div *tmp191 *tmp190 2
-    * set :unpackCfg:y *tmp191
+  442 op div :unpackCfg:y *tmp190 2
   443 set *tmp192 :unpackCfg:index
   444 op add :unpackCfg:index :unpackCfg:index 1
   445 read *tmp193 :unpackCfg:cfg *tmp192
-    * op sub *tmp194 *tmp193 74
-    * set :unpackCfg:rotation *tmp194
+  446 op sub :unpackCfg:rotation *tmp193 74
   447 set *tmp195 :unpackCfg:index
   448 op add :unpackCfg:index :unpackCfg:index 1
   449 read *tmp196 :unpackCfg:cfg *tmp195
-    * op sub *tmp197 *tmp196 74
-    * set :unpackCfg:ind *tmp197
-    * sensor *tmp198 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp198
-    * sensor *tmp199 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp199
-    * sensor *tmp200 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp200
-    * sensor *tmp201 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp201
-    * sensor *tmp202 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp202
-    * sensor *tmp203 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp203
-    * sensor *tmp204 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp204
+  450 op sub :unpackCfg:ind *tmp196 74
+  451 sensor :unpackCfg:cu :unpackCfg:type @copper
+  452 sensor :unpackCfg:pb :unpackCfg:type @lead
+  453 sensor :unpackCfg:gr :unpackCfg:type @graphite
+  454 sensor :unpackCfg:si :unpackCfg:type @silicon
+  455 sensor :unpackCfg:ti :unpackCfg:type @titanium
+  456 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+  457 sensor :unpackCfg:th :unpackCfg:type @thorium
   458 label *label148
   459 return :unpackCfg*retaddr
   460 end
 
   644 jump *label203 equal *tmp253 false
   645 sensor *tmp255 .core @titanium
   646 op sub *tmp256 titanium *tmp255
-    * op min *tmp257 5 *tmp256
-    * set *tmp254 *tmp257
+  647 op min *tmp254 5 *tmp256
   648 jump *label204 always
   649 label *label203
   650 set *tmp254 100
 
   678 call *label14 *invalid :status1*retval (m:*label217) (h:*label217)
   679 label *label217
   680 jump *label218 equal A¨SSJh-container30 false
-    * sensor *tmp272 .core @coal
-    * set :supplyBase0:coal *tmp272
-    * sensor *tmp273 A¨SSJh-container30 @sand
-    * set :supplyBase0:sand *tmp273
+  681 sensor :supplyBase0:coal .core @coal
+  682 sensor :supplyBase0:sand A¨SSJh-container30 @sand
   683 op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
   684 jump *label220 equal *tmp274 false
   685 set *tmp275 @coal
 
   714 setaddr :status1*retaddr *label226 (h:*label226)
   715 call *label14 *invalid :status1*retval (m:*label226) (h:*label226)
   716 label *label226
-    * sensor *tmp278 .core @coal
-    * set :supplyBase0:coal.1 *tmp278
-    * sensor *tmp279 .core @sand
-    * set :supplyBase0:sand.1 *tmp279
+  717 sensor :supplyBase0:coal.1 .core @coal
+  718 sensor :supplyBase0:sand.1 .core @sand
   719 op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
   720 jump *label227 equal *tmp280 false
   721 set *tmp281 @coal
 
   961 write :meetTargetLocal:metaglass processor2 ".targetMetaglass"
   962 write :meetTargetLocal:thorium processor2 ".targetThorium"
   963 set copper :meetTargetLocal:copper
-    * op add *tmp328 :meetTargetLocal:lead .leadSurplus
-    * set lead *tmp328
+  964 op add lead :meetTargetLocal:lead .leadSurplus
   965 set graphite :meetTargetLocal:graphite
   966 set silicon :meetTargetLocal:silicon
   967 set titanium :meetTargetLocal:titanium
 
   988 setaddr :targetMet*retaddr *label286 (h:*label286)
   989 call *label39 *invalid :targetMet*retval (m:*label286) (h:*label286)
   990 label *label286
-    * set *tmp338 :targetMet*retval
-    * op equal *tmp339 *tmp338 false
+  991 op equal *tmp339 :targetMet*retval false
   992 jump *label285 equal *tmp339 false
   993 setaddr :supplyBaseLocal*retaddr *label287 (h:*label287)
   994 call *label38 *invalid :supplyBaseLocal*retval (m:*label287) (h:*label287)
 
  1007 setaddr :targetMet*retaddr *label294 (h:*label294)
  1008 call *label39 *invalid :targetMet*retval (m:*label294) (h:*label294)
  1009 label *label294
-    * set *tmp342 :targetMet*retval
-    * op equal *tmp343 *tmp342 false
+ 1010 op equal *tmp343 :targetMet*retval false
  1011 jump *label293 equal *tmp343 false
  1012 setaddr :supplyBaseLocal*retaddr *label295 (h:*label295)
  1013 call *label38 *invalid :supplyBaseLocal*retval (m:*label295) (h:*label295)
 
  1207 call *label19 *invalid :moveTo*retval (m:*label317) (h:*label317)
  1208 label *label317
  1209 label *label316
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type *tmp352 *tmp353
-    * set :buildBlockAtLocal:building *tmp352
+ 1210 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
  1211 op notEqual *tmp354 :buildBlockAtLocal:building null
  1212 jump *label318 equal *tmp354 false
  1213 op equal *tmp356 :buildBlockAtLocal:type :buildBlockAtLocal:block
 
  1237 set :buildBlockAtLocal:success false
  1238 label *label323
  1239 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type *tmp358 *tmp359
-    * set :buildBlockAtLocal:building *tmp358
+ 1240 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp359
  1241 op equal *tmp360 :buildBlockAtLocal:building null
  1242 op equal *tmp361 :buildBlockAtLocal:success false
  1243 op land *tmp362 *tmp360 *tmp361
 
  1280 ubind .builder
  1281 set :logBlock:block :buildBlockAtLocal:block
  1282 set :logBlock:index :buildBlockAtLocal:index
-    * sensor *tmp371 :logBlock:block @id
-    * set :log:encodedId *tmp371
+ 1283 sensor :log:encodedId :logBlock:block @id
  1284 read *tmp100 bank1 511
  1285 op sub *tmp372 *tmp100 1
  1286 write *tmp372 bank1 511
 
  1466 op min *tmp416 :setFlareTarget:target 8
  1467 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1468 label *label366
-    * set *tmp417 .positive
-    * op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp417
+ 1469 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1470 set :buildTitaniumDrill*retval .positive
  1471 jump *label349 always
  1472 jump *label364 always
 
  1502 read *tmp51 processor3 ".locations"
  1503 op lessThan *tmp419 :buildTitaniumDrills:current *tmp51
  1504 jump *label375 equal *tmp419 false
-    * op mul *tmp420 :buildTitaniumDrills:current 4
-    * set :buildTitaniumDrills:index *tmp420
+ 1505 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1506 op add *tmp421 :buildTitaniumDrills:index 1
-    * set *tmp422 *tmp421
-    * read *tmp423 bank1 *tmp422
-    * set :buildTitaniumDrills:size *tmp423
+ 1507 read :buildTitaniumDrills:size bank1 *tmp421
  1508 op greaterThanEq *tmp424 :buildTitaniumDrills:size 3
  1509 jump *label376 equal *tmp424 false
-    * op add *tmp426 :buildTitaniumDrills:index 2
-    * set *tmp427 *tmp426
-    * read *tmp428 bank1 *tmp427
-    * set :buildTitaniumDrills:x *tmp428
+ 1510 op add *tmp427 :buildTitaniumDrills:index 2
+ 1511 read :buildTitaniumDrills:x bank1 *tmp427
  1512 op add *tmp429 :buildTitaniumDrills:index 3
-    * set *tmp430 *tmp429
-    * read *tmp431 bank1 *tmp430
-    * set :buildTitaniumDrills:y *tmp431
+ 1513 read :buildTitaniumDrills:y bank1 *tmp429
  1514 op sub *tmp432 :buildTitaniumDrills:x 1
  1515 op sub *tmp433 :buildTitaniumDrills:y 1
  1516 set :buildTitaniumDrill:x *tmp432
 
  1534 label *label379
  1535 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1536 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp437 :buildTitaniumDrill*retval
-    * op add *tmp438 *tmp434 *tmp437
+ 1537 op add *tmp438 *tmp434 :buildTitaniumDrill*retval
  1538 op sub *tmp439 :buildTitaniumDrills:x 1
  1539 op add *tmp440 :buildTitaniumDrills:y 1
  1540 set :buildTitaniumDrill:x *tmp439
 
  1546 label *label380
  1547 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1548 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp441 :buildTitaniumDrill*retval
-    * op add *tmp442 *tmp438 *tmp441
+ 1549 op add *tmp442 *tmp438 :buildTitaniumDrill*retval
  1550 op add *tmp443 :buildTitaniumDrills:x 1
  1551 op add *tmp444 :buildTitaniumDrills:y 1
  1552 set :buildTitaniumDrill:x *tmp443
 
  1558 label *label381
  1559 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1560 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp445 :buildTitaniumDrill*retval
-    * op add *tmp446 *tmp442 *tmp445
-    * set :buildTitaniumDrills:built *tmp446
+ 1561 op add :buildTitaniumDrills:built *tmp442 :buildTitaniumDrill*retval
  1562 op equal *tmp447 :buildTitaniumDrills:built 0
  1563 jump *label382 equal *tmp447 false
  1564 set :buildTitaniumDrill:x :buildTitaniumDrills:x
 
  1570 label *label384
  1571 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1572 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp449 :buildTitaniumDrill*retval
-    * set :buildTitaniumDrills:built *tmp449
+ 1573 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1574 jump *label383 always
  1575 label *label382
  1576 label *label383

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1357 jump *label344 always
  1358 set *tmp384 null
  1359 label *label344
-    * jump *label346 equal *tmp384 @ore-titanium
-    * jump *label345 always
+ 1360 jump *label345 notEqual *tmp384 @ore-titanium
  1361 label *label346
  1362 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1363 jump *label343 always
 
  1365 jump *label348 equal *tmp384 @ore-copper
  1366 jump *label348 equal *tmp384 @ore-lead
  1367 jump *label348 equal *tmp384 @ore-scrap
-    * jump *label348 equal *tmp384 @ore-coal
-    * jump *label347 always
+ 1368 jump *label347 notEqual *tmp384 @ore-coal
  1369 label *label348
  1370 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1371 jump *label343 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-66 instructions):
 
    35 set .builder @unit
    36 ulocate building core false @copper .coreX .coreY *tmp103 .core
    37 label *label52
-    * op equal *tmp104 .core null
-    * jump *label51 notEqual *tmp104 false
+   38 jump *label51 equal .core null
    39 label *label53
    40 set .sandContainer .core
    41 set *signature "77658b7b93afc77c:v1"
 
    79 label *label61
    80 label *label62
    81 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * op equal *tmp106 *tmp105 false
-    * jump *label64 equal *tmp106 false
+   82 jump *label64 notEqual *tmp105 false
    83 op sub *tmp107 :moveTo:radius 0.5
    84 ucontrol approach :moveTo:x :moveTo:y *tmp107
    85 label *label63
 
    95 label *label66
    96 label *label67
    97 sensor *tmp108 @unit @firstItem
-    * op notEqual *tmp109 *tmp108 null
-    * jump *label70 equal *tmp109 false
+   98 jump *label70 equal *tmp108 null
    99 ucontrol itemDrop @air 1000
   100 jump *label71 always
   101 label *label70
 
   103 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   104 label *label68
   105 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * op equal *tmp112 *tmp111 false
-    * jump *label67 notEqual *tmp112 false
+  106 jump *label67 equal *tmp111 false
   107 label *label69
   108 label *label65
   109 return :moveToEmpty*retaddr
 
   111 label *label21
   112 label *label73
   113 sensor *tmp113 @unit @firstItem
-    * op notEqual *tmp114 *tmp113 null
-    * jump *label75 equal *tmp114 false
+  114 jump *label75 equal *tmp113 null
   115 ucontrol itemDrop @air 1000
   116 label *label74
   117 jump *label73 always
 
   137 call *label16 *invalid :status3*retval (m:*label79) (h:*label79)
   138 label *label79
   139 sensor *tmp117 @unit @firstItem
-    * op equal *tmp118 *tmp117 :depositItems:item
-    * jump *label80 equal *tmp118 false
+  140 jump *label80 notEqual *tmp117 :depositItems:item
   141 set :moveToBlock:block :depositItems:block
   142 set :moveToBlock:radius 6
   143 setaddr :moveToBlock*retaddr *label82 (h:*label82)
 
   150 sensor *tmp121 @unit @firstItem
   151 op mul *tmp122 *tmp121 :depositItems:cap
   152 sensor *tmp123 :depositItems:block :depositItems:item
-    * op greaterThan *tmp124 *tmp122 *tmp123
-    * jump *label83 notEqual *tmp124 false
+  153 jump *label83 greaterThan *tmp122 *tmp123
   154 label *label85
   155 jump *label81 always
   156 label *label80
   157 label *label86
   158 sensor *tmp125 @unit @firstItem
-    * op notEqual *tmp126 *tmp125 null
-    * jump *label88 equal *tmp126 false
+  159 jump *label88 equal *tmp125 null
   160 ucontrol itemDrop @air 1000
   161 label *label87
   162 jump *label86 always
 
   172 end
   173 label *label24
   174 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * op equal *tmp129 *tmp127 false
-    * jump *label91 equal *tmp129 false
+  175 jump *label91 notEqual *tmp127 false
   176 set :error:error "Cannot locate ore"
   177 setaddr :error*retaddr *label93 (h:*label93)
   178 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
 
   202 call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
   203 label *label97
   204 sensor *tmp132 @unit @firstItem
-    * op notEqual *tmp133 *tmp132 :mineOre:ore
-    * jump *label98 equal *tmp133 false
+  205 jump *label98 equal *tmp132 :mineOre:ore
   206 setaddr :dropAll*retaddr *label100 (h:*label100)
   207 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   208 label *label100
 
   225 label *label105
   226 label *label106
   227 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp141 @second :mineOre:stop
-    * jump *label107 equal *tmp141 false
+  228 jump *label107 lessThanEq @second :mineOre:stop
   229 jump *label104 always
   230 jump *label108 always
   231 label *label107
   232 label *label108
-    * op equal *tmp143 .noTarget false
-    * jump *label109 equal *tmp143 false
+  233 jump *label109 notEqual .noTarget false
   234 setaddr :targetMet*retaddr *label111 (h:*label111)
   235 call *label39 *invalid :targetMet*retval (m:*label111) (h:*label111)
   236 label *label111
 
   244 label *label110
   245 label *label103
   246 sensor *tmp146 @unit @totalItems
-    * op lessThan *tmp147 *tmp146 :mineOre:amount
-    * jump *label102 notEqual *tmp147 false
+  247 jump *label102 lessThan *tmp146 :mineOre:amount
   248 label *label104
   249 ucontrol unbind
   250 set :depositItems:block :mineOre:block
 
   348 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   349 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   350 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * op greaterThan *tmp167 :supplyBlock:missing 0
-    * jump *label134 equal *tmp167 false
+  351 jump *label134 lessThanEq :supplyBlock:missing 0
   352 set :mineOre:ore :supplyBlock:ore
   353 set :mineOre:amount :supplyBlock:blockCapacity
   354 set :mineOre:block :supplyBlock:block
 
   456 call *label14 *invalid :status1*retval (m:*label153) (h:*label153)
   457 label *label153
   458 sensor *tmp211 .thoriumBattery @totalPower
-    * op lessThan *tmp212 *tmp211 2000
-    * jump *label154 equal *tmp212 false
+  459 jump *label154 greaterThanEq *tmp211 2000
   460 sensor *tmp214 .thoriumGenerator @coal
-    * op equal *tmp215 *tmp214 0
-    * jump *label156 equal *tmp215 false
+  461 jump *label156 notEqual *tmp214 0
   462 sensor *tmp217 .core @coal
-    * op lessThan *tmp218 *tmp217 50
-    * jump *label158 equal *tmp218 false
+  463 jump *label158 greaterThanEq *tmp217 50
   464 set :supplyBlock:block .thoriumGenerator
   465 set :supplyBlock:ore @coal
   466 setaddr :supplyBlock*retaddr *label160 (h:*label160)
 
   486 call *label28 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   487 label *label162
   488 sensor *tmp220 .core @thorium
-    * op greaterThan *tmp221 *tmp220 400
-    * jump *label163 equal *tmp221 false
+  489 jump *label163 lessThanEq *tmp220 400
   490 set :setMonoTarget:target 0
   491 write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
   492 label *label165
 
   500 jump *label151 always
   501 label *label150
   502 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op greaterThan *tmp223 *tmp81 1
-    * jump *label167 equal *tmp223 false
+  503 jump *label167 lessThanEq *tmp81 1
   504 set :status1:text "Phase 1: supplying base"
   505 setaddr :status1*retaddr *label170 (h:*label170)
   506 call *label14 *invalid :status1*retval (m:*label170) (h:*label170)
 
   513 jump *label168 always
   514 label *label167
   515 set :supplyBase0:supplied false
-    * op equal *tmp225 A©JNJP-unloader6 null
-    * jump *label173 equal *tmp225 false
+  516 jump *label173 notEqual A©JNJP-unloader6 null
   517 sensor *tmp227 .core @graphite
-    * op lessThan *tmp228 *tmp227 graphite
-    * jump *label175 equal *tmp228 false
+  518 jump *label175 greaterThanEq *tmp227 graphite
   519 sensor *tmp230 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp231 *tmp230 5
-    * jump *label177 equal *tmp231 false
+  520 jump *label177 greaterThanEq *tmp230 5
   521 set :status1:text "Goal 1: graphite requirement"
   522 setaddr :status1*retaddr *label179 (h:*label179)
   523 call *label14 *invalid :status1*retval (m:*label179) (h:*label179)
 
   535 label *label175
   536 label *label176
   537 sensor *tmp233 AJTJK-battery1 @totalPower
-    * op lessThan *tmp234 *tmp233 .powerTarget
-    * jump *label181 equal *tmp234 false
+  538 jump *label181 greaterThanEq *tmp233 .powerTarget
   539 sensor *tmp236 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp237 *tmp236 2
-    * jump *label183 equal *tmp237 false
+  540 jump *label183 greaterThanEq *tmp236 2
   541 set :status1:text "Goal 4: supplying generator"
   542 setaddr :status1*retaddr *label185 (h:*label185)
   543 call *label14 *invalid :status1*retval (m:*label185) (h:*label185)
 
   555 label *label181
   556 label *label182
   557 sensor *tmp239 .core @silicon
-    * op lessThan *tmp240 *tmp239 silicon
-    * jump *label187 equal *tmp240 false
+  558 jump *label187 greaterThanEq *tmp239 silicon
   559 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp243 *tmp242 5
-    * jump *label189 equal *tmp243 false
+  560 jump *label189 greaterThanEq *tmp242 5
   561 set :status1:text "Goal 2: coal for silicon requirement"
   562 setaddr :status1*retaddr *label191 (h:*label191)
   563 call *label14 *invalid :status1*retval (m:*label191) (h:*label191)
 
   571 jump *label190 always
   572 label *label189
   573 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp246 *tmp245 5
-    * jump *label193 equal *tmp246 false
+  574 jump *label193 greaterThanEq *tmp245 5
   575 jump *label195 equal .scrap false
   576 sensor *tmp249 AXPRJd-pulverizer26 @scrap
-    * op lessThan *tmp250 *tmp249 10
-    * jump *label197 equal *tmp250 false
+  577 jump *label197 greaterThanEq *tmp249 10
   578 set :status1:text "Goal 3a: scrap for silicon requirement"
   579 setaddr :status1*retaddr *label199 (h:*label199)
   580 call *label14 *invalid :status1*retval (m:*label199) (h:*label199)
 
   612 label *label173
   613 label *label174
   614 sensor *tmp252 .core @titanium
-    * op lessThan *tmp253 *tmp252 titanium
-    * jump *label203 equal *tmp253 false
+  615 jump *label203 greaterThanEq *tmp252 titanium
   616 sensor *tmp255 .core @titanium
   617 op sub *tmp256 titanium *tmp255
   618 op min *tmp254 5 *tmp256
 
   622 label *label204
   623 set :supplyBase0:titaniumTrigger *tmp254
   624 sensor *tmp258 .titaniumDrill @titanium
-    * op lessThan *tmp259 *tmp258 :supplyBase0:titaniumTrigger
-    * jump *label205 equal *tmp259 false
-    * op equal *tmp261 :supplyBase0:supplied false
-    * jump *label207 equal *tmp261 false
+  625 jump *label205 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  626 jump *label207 notEqual :supplyBase0:supplied false
   627 sensor *tmp263 AJTJK-battery1 @totalPower
   628 op mul *tmp264 A©JNJP-unloader6 .powerTarget
-    * op lessThan *tmp265 *tmp263 *tmp264
-    * jump *label209 equal *tmp265 false
+  629 jump *label209 greaterThanEq *tmp263 *tmp264
   630 set :status1:text "Goal 5: supplying generator"
   631 setaddr :status1*retaddr *label211 (h:*label211)
   632 call *label14 *invalid :status1*retval (m:*label211) (h:*label211)
 
   638 jump *label210 always
   639 label *label209
   640 sensor *tmp267 .core @silicon
-    * op lessThan *tmp268 *tmp267 silicon
-    * jump *label213 equal *tmp268 false
+  641 jump *label213 greaterThanEq *tmp267 silicon
   642 jump *label215 equal .scrap false
   643 set :status1:text "Goal 6: silicon requirement"
   644 setaddr :status1*retaddr *label217 (h:*label217)
 
   647 jump *label218 equal A¨SSJh-container30 false
   648 sensor :supplyBase0:coal .core @coal
   649 sensor :supplyBase0:sand A¨SSJh-container30 @sand
-    * op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
-    * jump *label220 equal *tmp274 false
+  650 jump *label220 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   651 set *tmp275 @coal
   652 jump *label221 always
   653 label *label220
   654 set *tmp275 @scrap
   655 label *label221
   656 set :supplyBase0:ore *tmp275
-    * op lessThan *tmp276 :supplyBase0:coal :supplyBase0:sand
-    * jump *label222 equal *tmp276 false
+  657 jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   658 set *tmp277 .core
   659 jump *label223 always
   660 label *label222
 
   681 label *label226
   682 sensor :supplyBase0:coal.1 .core @coal
   683 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label227 equal *tmp280 false
+  684 jump *label227 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
   685 set *tmp281 @coal
   686 jump *label228 always
   687 label *label227
 
   696 jump *label214 always
   697 label *label213
   698 sensor *tmp282 .core @copper
-    * op lessThan *tmp283 *tmp282 copper
-    * jump *label230 equal *tmp283 false
+  699 jump *label230 greaterThanEq *tmp282 copper
   700 set :status1:text "Goal 7: copper requirement"
   701 setaddr :status1*retaddr *label232 (h:*label232)
   702 call *label14 *invalid :status1*retval (m:*label232) (h:*label232)
 
   708 jump *label231 always
   709 label *label230
   710 sensor *tmp285 .core @lead
-    * op lessThan *tmp286 *tmp285 lead
-    * jump *label234 equal *tmp286 false
+  711 jump *label234 greaterThanEq *tmp285 lead
   712 set :status1:text "Goal 8: lead requirement"
   713 setaddr :status1*retaddr *label236 (h:*label236)
   714 call *label14 *invalid :status1*retval (m:*label236) (h:*label236)
 
   720 jump *label235 always
   721 label *label234
   722 sensor *tmp288 .core @metaglass
-    * op lessThan *tmp289 *tmp288 metaglass
-    * jump *label238 equal *tmp289 false
+  723 jump *label238 greaterThanEq *tmp288 metaglass
   724 set :status1:text "Goal 9: metaglass requirement"
   725 setaddr :status1*retaddr *label240 (h:*label240)
   726 call *label14 *invalid :status1*retval (m:*label240) (h:*label240)
 
   744 setaddr :status1*retaddr *label245 (h:*label245)
   745 call *label14 *invalid :status1*retval (m:*label245) (h:*label245)
   746 label *label245
-    * op equal *tmp292 A¨SSJh-container30 null
-    * jump *label246 equal *tmp292 false
+  747 jump *label246 notEqual A¨SSJh-container30 null
   748 sensor *tmp294 .core @coal
   749 sensor *tmp295 .core @sand
   750 op lessThanEq *tmp296 *tmp294 *tmp295
 
   765 sensor *tmp300 A¨SSJh-container30 @sand
   766 sensor *tmp301 A¨SSJh-container30 @scrap
   767 op add *tmp302 *tmp300 *tmp301
-    * op lessThanEq *tmp303 *tmp299 *tmp302
-    * jump *label251 equal *tmp303 false
+  768 jump *label251 greaterThan *tmp299 *tmp302
   769 set :mineOre.2:ore @coal
   770 setaddr :mineOre.2*retaddr *label253 (h:*label253)
   771 call *label27 *invalid :mineOre.2*retval (m:*label253) (h:*label253)
 
   807 end
   808 label *label39
   809 sensor *tmp305 .core @copper
-    * op lessThan *tmp306 *tmp305 copper
-    * jump *label258 equal *tmp306 false
+  810 jump *label258 greaterThanEq *tmp305 copper
   811 write @copper processor2 ".missing"
   812 set :targetMet*retval false
   813 jump *label257 always
 
   815 label *label258
   816 label *label259
   817 sensor *tmp308 .core @lead
-    * op lessThan *tmp309 *tmp308 lead
-    * jump *label260 equal *tmp309 false
+  818 jump *label260 greaterThanEq *tmp308 lead
   819 write @lead processor2 ".missing"
   820 set :targetMet*retval false
   821 jump *label257 always
 
   823 label *label260
   824 label *label261
   825 sensor *tmp311 .core @graphite
-    * op lessThan *tmp312 *tmp311 graphite
-    * jump *label262 equal *tmp312 false
+  826 jump *label262 greaterThanEq *tmp311 graphite
   827 write @graphite processor2 ".missing"
   828 set :targetMet*retval false
   829 jump *label257 always
 
   831 label *label262
   832 label *label263
   833 sensor *tmp314 .core @silicon
-    * op lessThan *tmp315 *tmp314 silicon
-    * jump *label264 equal *tmp315 false
+  834 jump *label264 greaterThanEq *tmp314 silicon
   835 write @silicon processor2 ".missing"
   836 set :targetMet*retval false
   837 jump *label257 always
 
   839 label *label264
   840 label *label265
   841 sensor *tmp317 .core @titanium
-    * op lessThan *tmp318 *tmp317 titanium
-    * jump *label266 equal *tmp318 false
+  842 jump *label266 greaterThanEq *tmp317 titanium
   843 write @titanium processor2 ".missing"
   844 set :targetMet*retval false
   845 jump *label257 always
 
   847 label *label266
   848 label *label267
   849 sensor *tmp320 .core @metaglass
-    * op lessThan *tmp321 *tmp320 metaglass
-    * jump *label268 equal *tmp321 false
+  850 jump *label268 greaterThanEq *tmp320 metaglass
   851 write @metaglass processor2 ".missing"
   852 set :targetMet*retval false
   853 jump *label257 always
 
   855 label *label268
   856 label *label269
   857 sensor *tmp323 .core @thorium
-    * op lessThan *tmp324 *tmp323 thorium
-    * jump *label270 equal *tmp324 false
+  858 jump *label270 greaterThanEq *tmp323 thorium
   859 write @thorium processor2 ".missing"
   860 set :targetMet*retval false
   861 jump *label257 always
 
   940 setaddr :targetMet*retaddr *label286 (h:*label286)
   941 call *label39 *invalid :targetMet*retval (m:*label286) (h:*label286)
   942 label *label286
-    * op equal *tmp339 :targetMet*retval false
-    * jump *label285 equal *tmp339 false
+  943 jump *label285 notEqual :targetMet*retval false
   944 setaddr :supplyBaseLocal*retaddr *label287 (h:*label287)
   945 call *label38 *invalid :supplyBaseLocal*retval (m:*label287) (h:*label287)
   946 label *label287
 
   958 setaddr :targetMet*retaddr *label294 (h:*label294)
   959 call *label39 *invalid :targetMet*retval (m:*label294) (h:*label294)
   960 label *label294
-    * op equal *tmp343 :targetMet*retval false
-    * jump *label293 equal *tmp343 false
+  961 jump *label293 notEqual :targetMet*retval false
   962 setaddr :supplyBaseLocal*retaddr *label295 (h:*label295)
   963 call *label38 *invalid :supplyBaseLocal*retval (m:*label295) (h:*label295)
   964 label *label295
 
  1054 end
  1055 label *label8
  1056 op add *tmp345 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp346 *tmp345 0
-    * jump *label305 equal *tmp346 false
+ 1057 jump *label305 lessThanEq *tmp345 0
  1058 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1059 setaddr :unpackCfg*retaddr *label307 (h:*label307)
  1060 call *label32 *invalid :unpackCfg*retval (m:*label307) (h:*label307)
 
  1157 label *label317
  1158 label *label316
  1159 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
-    * op notEqual *tmp354 :buildBlockAtLocal:building null
-    * jump *label318 equal *tmp354 false
-    * op equal *tmp356 :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * jump *label320 equal *tmp356 false
+ 1160 jump *label318 equal :buildBlockAtLocal:building null
+ 1161 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1162 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1163 jump *label315 always
  1164 jump *label321 always
 
  1205 label *label326
  1206 set :buildBlockAtLocal:success true
  1207 label *label327
-    * op equal *tmp364 :buildBlockAtLocal:block @multiplicative-reconstructor
-    * jump *label329 equal *tmp364 false
+ 1208 jump *label329 notEqual :buildBlockAtLocal:block @multiplicative-reconstructor
  1209 control enabled processor6 false
  1210 ubind @poly
-    * op notEqual *tmp367 @unit .builder
-    * jump *label331 equal *tmp367 false
+ 1211 jump *label331 equal @unit .builder
  1212 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1213 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
  1214 jump *label332 always
 
  1218 label *label329
  1219 label *label330
  1220 label *label324
-    * op notEqual *tmp369 :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * jump *label323 notEqual *tmp369 false
+ 1221 jump *label323 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1222 label *label325
  1223 control enabled processor6 true
  1224 ubind .builder
 
  1234 op add *tmp376 :log:encodedId *tmp375
  1235 write *tmp376 bank1 *tmp373
  1236 label *label334
-    * op greaterThanEq *tmp377 :logBlock:index 0
-    * jump *label335 equal *tmp377 false
+ 1237 jump *label335 lessThan :logBlock:index 0
  1238 op shl *tmp379 1 :logBlock:index
  1239 read *tmp7 processor2 ".blocksBuilt"
  1240 op or *tmp380 *tmp7 *tmp379
 
  1318 return :titaniumDrillScore*retaddr
  1319 end
  1320 label *label45
-    * op lessThan *tmp390 :buildTitaniumDrill:count .MAX_COUNT
-    * jump *label350 equal *tmp390 false
-    * op lessThan *tmp392 :buildTitaniumDrill:tiles .MAX_TILES
-    * jump *label352 equal *tmp392 false
+ 1321 jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
+ 1322 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1323 set :moveTo.2:x :buildTitaniumDrill:x
  1324 set :moveTo.2:y :buildTitaniumDrill:y
  1325 set *tmp394 :moveTo.2:x
 
  1391 call *label43 *invalid :buildBlockAtLocal*retval (m:*label362) (h:*label362)
  1392 label *label362
  1393 set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
-    * op notEqual *tmp412 :buildTitaniumDrill:drill null
-    * jump *label363 equal *tmp412 false
+ 1394 jump *label363 equal :buildTitaniumDrill:drill null
  1395 write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
  1396 write false processor8 ":addTitaniumDrill*finished"
  1397 write 1 processor8 "@counter"
 
  1438 label *label370
  1439 label *label373
  1440 read *tmp51 processor3 ".locations"
-    * op lessThan *tmp419 :buildTitaniumDrills:current *tmp51
-    * jump *label375 equal *tmp419 false
+ 1441 jump *label375 greaterThanEq :buildTitaniumDrills:current *tmp51
  1442 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1443 op add *tmp421 :buildTitaniumDrills:index 1
  1444 read :buildTitaniumDrills:size bank1 *tmp421
-    * op greaterThanEq *tmp424 :buildTitaniumDrills:size 3
-    * jump *label376 equal *tmp424 false
+ 1445 jump *label376 lessThan :buildTitaniumDrills:size 3
  1446 op add *tmp427 :buildTitaniumDrills:index 2
  1447 read :buildTitaniumDrills:x bank1 *tmp427
  1448 op add *tmp429 :buildTitaniumDrills:index 3
 
  1495 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1496 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1497 op add :buildTitaniumDrills:built *tmp442 :buildTitaniumDrill*retval
-    * op equal *tmp447 :buildTitaniumDrills:built 0
-    * jump *label382 equal *tmp447 false
+ 1498 jump *label382 notEqual :buildTitaniumDrills:built 0
  1499 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1500 set :buildTitaniumDrill:y :buildTitaniumDrills:y
  1501 set :buildTitaniumDrill:count :buildTitaniumDrills:count
 
  1516 label *label374
  1517 jump *label373 always
  1518 label *label375
-    * op greaterThanEq *tmp451 :buildTitaniumDrills:tiles .MAX_TILES
-    * jump *label385 equal *tmp451 false
+ 1519 jump *label385 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1520 jump *label372 always
  1521 jump *label386 always
  1522 label *label385
  1523 label *label386
-    * op greaterThanEq *tmp453 :buildTitaniumDrills:count .MAX_COUNT
-    * jump *label387 equal *tmp453 false
+ 1524 jump *label387 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1525 jump *label372 always
  1526 jump *label388 always
  1527 label *label387
  1528 label *label388
  1529 label *label371
  1530 read *tmp52 processor3 ".searchFinished"
-    * op equal *tmp455 *tmp52 false
-    * jump *label370 notEqual *tmp455 false
+ 1531 jump *label370 equal *tmp52 false
  1532 label *label372
  1533 label *label367
  1534 set :buildTitaniumDrills*finished true

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-46 instructions):
 
    97 sensor *tmp108 @unit @firstItem
    98 jump *label70 equal *tmp108 null
    99 ucontrol itemDrop @air 1000
-    * jump *label71 always
   100 label *label70
   101 label *label71
   102 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   176 setaddr :error*retaddr *label93 (h:*label93)
   177 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
   178 label *label93
-    * jump *label92 always
   179 label *label91
   180 label *label92
   181 label *label90
 
   204 setaddr :dropAll*retaddr *label100 (h:*label100)
   205 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   206 label *label100
-    * jump *label99 always
   207 label *label98
   208 label *label99
   209 set :status3:text "Mining..."
 
   218 op land *tmp139 *tmp137 *tmp138
   219 jump *label105 equal *tmp139 false
   220 jump *label104 always
-    * jump *label106 always
   221 label *label105
   222 label *label106
   223 ucontrol mine :mineOre:x :mineOre:y
   224 jump *label107 lessThanEq @second :mineOre:stop
   225 jump *label104 always
-    * jump *label108 always
   226 label *label107
   227 label *label108
   228 jump *label109 notEqual .noTarget false
 
   231 label *label111
   232 jump *label112 equal :targetMet*retval false
   233 jump *label104 always
-    * jump *label113 always
   234 label *label112
   235 label *label113
-    * jump *label110 always
   236 label *label109
   237 label *label110
   238 label *label103
 
   313 op land *tmp158 *tmp156 *tmp157
   314 jump *label129 equal *tmp158 false
   315 ucontrol itemDrop @air 1000
-    * jump *label130 always
   316 label *label129
   317 label *label130
   318 label *label127
 
   347 setaddr :mineOre*retaddr *label136 (h:*label136)
   348 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   349 label *label136
-    * jump *label135 always
   350 label *label134
   351 label *label135
   352 label *label132
 
   382 op land *tmp174 *tmp172 *tmp173
   383 jump *label145 equal *tmp174 false
   384 ucontrol itemDrop @air 1000
-    * jump *label146 always
   385 label *label145
   386 label *label146
   387 label *label143
 
   464 call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   465 label *label161
   466 label *label159
-    * jump *label157 always
   467 label *label156
   468 label *label157
-    * jump *label155 always
   469 label *label154
   470 label *label155
   471 set :fetchBlock:block .thoriumContainer
 
   481 set :setPolyTarget:target 4
   482 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   483 label *label166
-    * jump *label164 always
   484 label *label163
   485 label *label164
   486 label *label152
 
   515 call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
   516 label *label180
   517 set :supplyBase0:supplied true
-    * jump *label178 always
   518 label *label177
   519 label *label178
-    * jump *label176 always
   520 label *label175
   521 label *label176
   522 sensor *tmp233 AJTJK-battery1 @totalPower
 
   533 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   534 label *label186
   535 jump *label172 always
-    * jump *label184 always
   536 label *label183
   537 label *label184
-    * jump *label182 always
   538 label *label181
   539 label *label182
   540 sensor *tmp239 .core @silicon
 
   568 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   569 label *label200
   570 set :supplyBase0:supplied true
-    * jump *label198 always
   571 label *label197
   572 label *label198
   573 jump *label196 always
 
   583 label *label202
   584 set :supplyBase0:supplied true
   585 label *label196
-    * jump *label194 always
   586 label *label193
   587 label *label194
   588 label *label190
-    * jump *label188 always
   589 label *label187
   590 label *label188
-    * jump *label174 always
   591 label *label173
   592 label *label174
   593 sensor *tmp252 .core @titanium
 
   763 label *label231
   764 label *label214
   765 label *label210
-    * jump *label208 always
   766 label *label207
   767 label *label208
   768 jump *label206 always
 
   789 write @copper processor2 ".missing"
   790 set :targetMet*retval false
   791 jump *label257 always
-    * jump *label259 always
   792 label *label258
   793 label *label259
   794 sensor *tmp308 .core @lead
 
   796 write @lead processor2 ".missing"
   797 set :targetMet*retval false
   798 jump *label257 always
-    * jump *label261 always
   799 label *label260
   800 label *label261
   801 sensor *tmp311 .core @graphite
 
   803 write @graphite processor2 ".missing"
   804 set :targetMet*retval false
   805 jump *label257 always
-    * jump *label263 always
   806 label *label262
   807 label *label263
   808 sensor *tmp314 .core @silicon
 
   810 write @silicon processor2 ".missing"
   811 set :targetMet*retval false
   812 jump *label257 always
-    * jump *label265 always
   813 label *label264
   814 label *label265
   815 sensor *tmp317 .core @titanium
 
   817 write @titanium processor2 ".missing"
   818 set :targetMet*retval false
   819 jump *label257 always
-    * jump *label267 always
   820 label *label266
   821 label *label267
   822 sensor *tmp320 .core @metaglass
 
   824 write @metaglass processor2 ".missing"
   825 set :targetMet*retval false
   826 jump *label257 always
-    * jump *label269 always
   827 label *label268
   828 label *label269
   829 sensor *tmp323 .core @thorium
 
   831 write @thorium processor2 ".missing"
   832 set :targetMet*retval false
   833 jump *label257 always
-    * jump *label271 always
   834 label *label270
   835 label *label271
   836 set :targetMet*retval true
 
   936 label *label292
   937 jump *label291 always
   938 label *label293
-    * jump *label289 always
   939 label *label288
   940 label *label289
   941 label *label272
 
  1057 label *label308
  1058 set :buildRemoteBlock*retval :buildBlock*retval
  1059 jump *label304 always
-    * jump *label306 always
  1060 label *label305
  1061 label *label306
  1062 set :buildRemoteBlock*retval false
 
  1130 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1131 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1132 jump *label315 always
-    * jump *label321 always
  1133 label *label320
  1134 label *label321
  1135 set :buildError:text "Cannot build at position"
 
  1144 set .ERROR_Y :buildError:y
  1145 stop
  1146 label *label322
-    * jump *label319 always
  1147 label *label318
  1148 label *label319
  1149 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
 
  1178 jump *label331 equal @unit .builder
  1179 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1180 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * jump *label332 always
  1181 label *label331
  1182 label *label332
-    * jump *label330 always
  1183 label *label329
  1184 label *label330
  1185 label *label324
 
  1205 op or *tmp380 *tmp7 *tmp379
  1206 write *tmp380 processor2 ".blocksBuilt"
  1207 write :logBlock:index processor2 ".recentBuildIndex"
-    * jump *label336 always
  1208 label *label335
  1209 label *label336
  1210 label *label333
 
  1275 jump *label347 notEqual *tmp384 @ore-coal
  1276 label *label348
  1277 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * jump *label343 always
  1278 label *label347
  1279 label *label343
  1280 label *label342
 
  1370 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1371 set :buildTitaniumDrill*retval .positive
  1372 jump *label349 always
-    * jump *label364 always
  1373 label *label363
  1374 label *label364
-    * jump *label361 always
  1375 label *label360
  1376 label *label361
-    * jump *label353 always
  1377 label *label352
  1378 label *label353
-    * jump *label351 always
  1379 label *label350
  1380 label *label351
  1381 set :buildTitaniumDrill*retval 0
 
  1389 set :buildTitaniumDrills:tiles 0
  1390 jump *label368 equal .scrap false
  1391 op add .MAX_TILES .MAX_TILES 4
-    * jump *label369 always
  1392 label *label368
  1393 label *label369
  1394 wait 0.0001
 
  1464 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1465 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1466 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
-    * jump *label383 always
  1467 label *label382
  1468 label *label383
-    * jump *label377 always
  1469 label *label376
  1470 label *label377
  1471 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
 
  1474 label *label375
  1475 jump *label385 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1476 jump *label372 always
-    * jump *label386 always
  1477 label *label385
  1478 label *label386
  1479 jump *label387 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1480 jump *label372 always
-    * jump *label388 always
  1481 label *label387
  1482 label *label388
  1483 label *label371

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
   194 label *label96
   195 set :mineOre:x :locateOre:x
   196 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  197 set :moveToEmpty:x :locateOre:x
+  198 set :moveToEmpty:y :locateOre:y
   199 setaddr :moveToEmpty*retaddr *label97 (h:*label97)
   200 call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
   201 label *label97
 
   257 label *label116
   258 set *tmp148 :mineOre.1:ore
   259 set *tmp149 :mineOre.1:block
-    * set :mineOre:ore *tmp148
+  260 set :mineOre:ore :mineOre.1:ore
   261 set :mineOre:amount 28
-    * set :mineOre:block *tmp149
+  262 set :mineOre:block :mineOre.1:block
   263 setaddr :mineOre*retaddr *label117 (h:*label117)
   264 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   265 label *label117
 
   401 end
   402 label *label32
   403 set :unpackCfg:index 1
-    * set *tmp180 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  404 set *tmp180 1
+  405 op add :unpackCfg:index 1 1
   406 read *tmp181 :unpackCfg:cfg *tmp180
   407 op sub *tmp182 *tmp181 74
   408 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  409 set *tmp184 2
+  410 op add :unpackCfg:index 2 1
   411 read *tmp185 :unpackCfg:cfg *tmp184
   412 op sub *tmp186 *tmp185 74
   413 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  414 set *tmp188 3
+  415 op add :unpackCfg:index 3 1
   416 read *tmp189 :unpackCfg:cfg *tmp188
   417 op sub *tmp190 *tmp189 74
   418 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  419 set *tmp192 4
+  420 op add :unpackCfg:index 4 1
   421 read *tmp193 :unpackCfg:cfg *tmp192
   422 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  423 set *tmp195 5
+  424 op add :unpackCfg:index 5 1
   425 read *tmp196 :unpackCfg:cfg *tmp195
   426 op sub :unpackCfg:ind *tmp196 74
   427 sensor :unpackCfg:cu :unpackCfg:type @copper
 
   476 sensor *tmp220 .core @thorium
   477 jump *label163 lessThanEq *tmp220 400
   478 set :setMonoTarget:target 0
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  479 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   480 label *label165
   481 set :setPolyTarget:target 4
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  482 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   483 label *label166
   484 label *label163
   485 label *label164
 
   601 label *label204
   602 set :supplyBase0:titaniumTrigger *tmp254
   603 sensor *tmp258 .titaniumDrill @titanium
-    * jump *label205 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  604 jump *label205 greaterThanEq *tmp258 *tmp254
   605 jump *label207 notEqual :supplyBase0:supplied false
   606 sensor *tmp263 AJTJK-battery1 @totalPower
   607 op mul *tmp264 A©JNJP-unloader6 .powerTarget
 
   640 set *tmp277 A¨SSJh-container30
   641 label *label223
   642 set :supplyBase0:block *tmp277
-    * set :mineOre.1:ore :supplyBase0:ore
-    * set :mineOre.1:block :supplyBase0:block
+  643 set :mineOre.1:ore *tmp275
+  644 set :mineOre.1:block *tmp277
   645 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   646 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   647 label *label224
 
   667 set *tmp281 @sand
   668 label *label228
   669 set :supplyBase0:ore.1 *tmp281
-    * set :mineOre.2:ore :supplyBase0:ore.1
+  670 set :mineOre.2:ore *tmp281
   671 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   672 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   673 label *label229
 
   835 label *label271
   836 set :targetMet*retval true
   837 jump *label257 always
-    * set :targetMet*retval null
   838 label *label257
   839 return :targetMet*retaddr
   840 end
 
   905 op add *tmp337 :meetTargetLocal:graphite *tmp336
   906 write *tmp337 AÕFFJS-micro-processor9 ".graphiteReserve"
   907 write lead processor7 ".leadTarget"
-    * write copper processor7 ".copperTarget"
+  908 write :meetTargetLocal:copper processor7 ".copperTarget"
   909 label *label283
   910 setaddr :targetMet*retaddr *label286 (h:*label286)
   911 call *label39 *invalid :targetMet*retval (m:*label286) (h:*label286)
 
   971 set :meetTargetCfg:ti :unpackCfg:ti
   972 set :meetTargetCfg:mg :unpackCfg:mg
   973 set :meetTargetCfg:th :unpackCfg:th
-    * set :meetTargetLocal:block :meetTargetCfg:type
-    * set :meetTargetLocal:copper :meetTargetCfg:cu
-    * set :meetTargetLocal:lead :meetTargetCfg:pb
-    * set :meetTargetLocal:graphite :meetTargetCfg:gr
-    * set :meetTargetLocal:silicon :meetTargetCfg:si
-    * set :meetTargetLocal:titanium :meetTargetCfg:ti
-    * set :meetTargetLocal:metaglass :meetTargetCfg:mg
-    * set :meetTargetLocal:thorium :meetTargetCfg:th
+  974 set :meetTargetLocal:block :unpackCfg:type
+  975 set :meetTargetLocal:copper :unpackCfg:cu
+  976 set :meetTargetLocal:lead :unpackCfg:pb
+  977 set :meetTargetLocal:graphite :unpackCfg:gr
+  978 set :meetTargetLocal:silicon :unpackCfg:si
+  979 set :meetTargetLocal:titanium :unpackCfg:ti
+  980 set :meetTargetLocal:metaglass :unpackCfg:mg
+  981 set :meetTargetLocal:thorium :unpackCfg:th
   982 set :meetTargetLocal:forBuild false
   983 set :meetTargetLocal:isNoTarget false
   984 setaddr :meetTargetLocal*retaddr *label300 (h:*label300)
 
  1015 set :buildBlock:built :buildBlockAtLocal*retval
  1016 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1017 write 2 AÕFFJS-micro-processor9 "@counter"
-    * set :buildBlock*retval :buildBlock:built
+ 1018 set :buildBlock*retval :buildBlockAtLocal*retval
  1019 jump *label301 always
-    * set :buildBlock*retval null
  1020 label *label301
  1021 return :buildBlock*retaddr
  1022 end
 
  1037 set :buildRemoteBlock:th :unpackCfg:th
  1038 set :buildRemoteBlock:rotation :unpackCfg:rotation
  1039 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1040 set :buildBlock:block :unpackCfg:type
  1041 set :buildBlock:x :buildRemoteBlock:x
  1042 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1043 set :buildBlock:copper :unpackCfg:cu
+ 1044 set :buildBlock:lead :unpackCfg:pb
+ 1045 set :buildBlock:graphite :unpackCfg:gr
+ 1046 set :buildBlock:silicon :unpackCfg:si
+ 1047 set :buildBlock:titanium :unpackCfg:ti
+ 1048 set :buildBlock:metaglass :unpackCfg:mg
+ 1049 set :buildBlock:thorium :unpackCfg:th
+ 1050 set :buildBlock:rotation :unpackCfg:rotation
  1051 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+ 1052 set :buildBlock:index :unpackCfg:ind
  1053 setaddr :buildBlock*retaddr *label308 (h:*label308)
  1054 call *label41 *invalid :buildBlock*retval (m:*label308) (h:*label308)
  1055 label *label308
 
  1059 label *label306
  1060 set :buildRemoteBlock*retval false
  1061 jump *label304 always
-    * set :buildRemoteBlock*retval null
  1062 label *label304
  1063 set :buildRemoteBlock*finished true
  1064 jump *label54 always
 
  1080 set :buildBlockFromCfg:th :unpackCfg:th
  1081 set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1082 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp348 .coreX :buildBlockFromCfg:x
-    * op add *tmp349 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1083 op add *tmp348 .coreX :unpackCfg:x
+ 1084 op add *tmp349 .coreY :unpackCfg:y
+ 1085 set :buildBlock:block :unpackCfg:type
  1086 set :buildBlock:x *tmp348
  1087 set :buildBlock:y *tmp349
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1088 set :buildBlock:copper :unpackCfg:cu
+ 1089 set :buildBlock:lead :unpackCfg:pb
+ 1090 set :buildBlock:graphite :unpackCfg:gr
+ 1091 set :buildBlock:silicon :unpackCfg:si
+ 1092 set :buildBlock:titanium :unpackCfg:ti
+ 1093 set :buildBlock:metaglass :unpackCfg:mg
+ 1094 set :buildBlock:thorium :unpackCfg:th
+ 1095 set :buildBlock:rotation :unpackCfg:rotation
  1096 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+ 1097 set :buildBlock:index :unpackCfg:ind
  1098 setaddr :buildBlock*retaddr *label311 (h:*label311)
  1099 call *label41 *invalid :buildBlock*retval (m:*label311) (h:*label311)
  1100 label *label311
  1101 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor2 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor9 :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+ 1102 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+ 1103 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
+ 1104 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
+ 1105 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
+ 1106 set :buildBlockFromCfg*retval :buildBlock*retval
  1107 jump *label309 always
-    * set :buildBlockFromCfg*retval null
  1108 label *label309
  1109 set :buildBlockFromCfg*finished true
  1110 jump *label54 always
 
  1112 label *label43
  1113 set :moveTo.1:x :buildBlockAtLocal:x
  1114 set :moveTo.1:y :buildBlockAtLocal:y
-    * set *tmp350 :moveTo.1:x
-    * set *tmp351 :moveTo.1:y
-    * set :moveTo:x *tmp350
-    * set :moveTo:y *tmp351
+ 1115 set *tmp350 :buildBlockAtLocal:x
+ 1116 set *tmp351 :buildBlockAtLocal:y
+ 1117 set :moveTo:x :moveTo.1:x
+ 1118 set :moveTo:y :moveTo.1:y
  1119 set :moveTo:radius 6
  1120 setaddr :moveTo*retaddr *label317 (h:*label317)
  1121 call *label19 *invalid :moveTo*retval (m:*label317) (h:*label317)
 
  1133 set :buildError:type :buildBlockAtLocal:type
  1134 set :buildError:x :buildBlockAtLocal:x
  1135 set :buildError:y :buildBlockAtLocal:y
-    * set .ERROR :buildError:text
-    * set .ERROR_FOUND_BLOCK :buildError:block
-    * set .ERROR_FOUND_TYPE :buildError:type
-    * set .ERROR_X :buildError:x
-    * set .ERROR_Y :buildError:y
+ 1136 set .ERROR "Cannot build at position"
+ 1137 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
+ 1138 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
+ 1139 set .ERROR_X :buildBlockAtLocal:x
+ 1140 set .ERROR_Y :buildBlockAtLocal:y
  1141 stop
  1142 label *label322
  1143 label *label318
 
  1157 set :buildError.1:type :buildBlockAtLocal:type
  1158 set :buildError.1:x :buildBlockAtLocal:x
  1159 set :buildError.1:y :buildBlockAtLocal:y
-    * set .ERROR :buildError.1:text
-    * set .ERROR_FOUND_BLOCK :buildError.1:block
-    * set .ERROR_FOUND_TYPE :buildError.1:type
-    * set .ERROR_X :buildError.1:x
-    * set .ERROR_Y :buildError.1:y
+ 1160 set .ERROR "Error while building"
+ 1161 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
+ 1162 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
+ 1163 set .ERROR_X :buildBlockAtLocal:x
+ 1164 set .ERROR_Y :buildBlockAtLocal:y
  1165 stop
  1166 label *label328
  1167 jump *label327 always
 
  1185 ubind .builder
  1186 set :logBlock:block :buildBlockAtLocal:block
  1187 set :logBlock:index :buildBlockAtLocal:index
-    * sensor :log:encodedId :logBlock:block @id
+ 1188 sensor :log:encodedId :buildBlockAtLocal:block @id
  1189 read *tmp100 bank1 511
  1190 op sub *tmp372 *tmp100 1
  1191 write *tmp372 bank1 511
 
  1193 read *tmp0 processor1 "time"
  1194 op mul *tmp375 *tmp0 1000
  1195 op add *tmp376 :log:encodedId *tmp375
-    * write *tmp376 bank1 *tmp373
+ 1196 write *tmp376 bank1 *tmp372
  1197 label *label334
-    * jump *label335 lessThan :logBlock:index 0
-    * op shl *tmp379 1 :logBlock:index
+ 1198 jump *label335 lessThan :buildBlockAtLocal:index 0
+ 1199 op shl *tmp379 1 :buildBlockAtLocal:index
  1200 read *tmp7 processor2 ".blocksBuilt"
  1201 op or *tmp380 *tmp7 *tmp379
  1202 write *tmp380 processor2 ".blocksBuilt"
-    * write :logBlock:index processor2 ".recentBuildIndex"
+ 1203 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
  1204 label *label335
  1205 label *label336
  1206 label *label333
  1207 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1208 jump *label315 always
-    * set :buildBlockAtLocal*retval null
  1209 label *label315
  1210 return :buildBlockAtLocal*retaddr
  1211 end
 
  1221 label *label338
  1222 set :buildBlockAt*retval :buildBlockAtLocal*retval
  1223 jump *label337 always
-    * set :buildBlockAt*retval null
  1224 label *label337
  1225 set :buildBlockAt*finished true
  1226 jump *label54 always
 
  1236 call *label43 *invalid :buildBlockAtLocal*retval (m:*label340) (h:*label340)
  1237 label *label340
  1238 set :buildFirstTitaniumDrillAt:drill :buildBlockAtLocal*retval
-    * write :buildFirstTitaniumDrillAt:drill processor8 ":addTitaniumDrill:drill"
+ 1239 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1240 write false processor8 ":addTitaniumDrill*finished"
  1241 write 1 processor8 "@counter"
  1242 label *label341
  1243 wait 1e-15
  1244 read *tmp382 processor8 ":addTitaniumDrill*finished"
  1245 jump *label341 equal *tmp382 false
-    * set :buildFirstTitaniumDrillAt*retval :buildFirstTitaniumDrillAt:drill
+ 1246 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
  1247 jump *label339 always
-    * set :buildFirstTitaniumDrillAt*retval null
  1248 label *label339
  1249 set :buildFirstTitaniumDrillAt*finished true
  1250 jump *label54 always
 
  1252 label *label44
  1253 set :getFloor:x :titaniumDrillScore:x
  1254 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y *tmp386 *tmp385 :getFloor:floor
+ 1255 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
  1256 set *tmp384 :getFloor:floor
  1257 jump *label344 always
-    * set *tmp384 null
  1258 label *label344
-    * jump *label345 notEqual *tmp384 @ore-titanium
+ 1259 jump *label345 notEqual :getFloor:floor @ore-titanium
  1260 label *label346
  1261 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1262 jump *label343 always
  1263 label *label345
-    * jump *label348 equal *tmp384 @ore-copper
-    * jump *label348 equal *tmp384 @ore-lead
-    * jump *label348 equal *tmp384 @ore-scrap
-    * jump *label347 notEqual *tmp384 @ore-coal
+ 1264 jump *label348 equal :getFloor:floor @ore-copper
+ 1265 jump *label348 equal :getFloor:floor @ore-lead
+ 1266 jump *label348 equal :getFloor:floor @ore-scrap
+ 1267 jump *label347 notEqual :getFloor:floor @ore-coal
  1268 label *label348
  1269 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1270 label *label347
 
  1277 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1278 set :moveTo.2:x :buildTitaniumDrill:x
  1279 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp394 :moveTo.2:x
-    * set *tmp395 :moveTo.2:y
-    * set :moveTo:x *tmp394
-    * set :moveTo:y *tmp395
+ 1280 set *tmp394 :buildTitaniumDrill:x
+ 1281 set *tmp395 :buildTitaniumDrill:y
+ 1282 set :moveTo:x :moveTo.2:x
+ 1283 set :moveTo:y :moveTo.2:y
  1284 set :moveTo:radius 6
  1285 setaddr :moveTo*retaddr *label355 (h:*label355)
  1286 call *label19 *invalid :moveTo*retval (m:*label355) (h:*label355)
 
  1346 call *label43 *invalid :buildBlockAtLocal*retval (m:*label362) (h:*label362)
  1347 label *label362
  1348 set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
-    * jump *label363 equal :buildTitaniumDrill:drill null
-    * write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
+ 1349 jump *label363 equal :buildBlockAtLocal*retval null
+ 1350 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1351 write false processor8 ":addTitaniumDrill*finished"
  1352 write 1 processor8 "@counter"
  1353 label *label365
 
  1356 jump *label365 equal *tmp415 false
  1357 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1358 set :setFlareTarget:target :buildTitaniumDrill:count
-    * op min *tmp416 :setFlareTarget:target 8
+ 1359 op min *tmp416 :buildTitaniumDrill:count 8
  1360 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1361 label *label366
  1362 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
 
  1372 label *label351
  1373 set :buildTitaniumDrill*retval 0
  1374 jump *label349 always
-    * set :buildTitaniumDrill*retval null
  1375 label *label349
  1376 return :buildTitaniumDrill*retaddr
  1377 end
 
  1412 op sub *tmp436 :buildTitaniumDrills:y 1
  1413 set :buildTitaniumDrill:x *tmp435
  1414 set :buildTitaniumDrill:y *tmp436
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1415 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1416 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1417 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1418 call *label45 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
  1419 label *label379
 
  1424 op add *tmp440 :buildTitaniumDrills:y 1
  1425 set :buildTitaniumDrill:x *tmp439
  1426 set :buildTitaniumDrill:y *tmp440
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1427 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1428 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1429 setaddr :buildTitaniumDrill*retaddr *label380 (h:*label380)
  1430 call *label45 *invalid :buildTitaniumDrill*retval (m:*label380) (h:*label380)
  1431 label *label380
 
  1436 op add *tmp444 :buildTitaniumDrills:y 1
  1437 set :buildTitaniumDrill:x *tmp443
  1438 set :buildTitaniumDrill:y *tmp444
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1439 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1440 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1441 setaddr :buildTitaniumDrill*retaddr *label381 (h:*label381)
  1442 call *label45 *invalid :buildTitaniumDrill*retval (m:*label381) (h:*label381)
  1443 label *label381
 
  1447 jump *label382 notEqual :buildTitaniumDrills:built 0
  1448 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1449 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1450 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1451 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1452 setaddr :buildTitaniumDrill*retaddr *label384 (h:*label384)
  1453 call *label45 *invalid :buildTitaniumDrill*retval (m:*label384) (h:*label384)
  1454 label *label384

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-69 instructions):
 
   255 setaddr :status2*retaddr *label116 (h:*label116)
   256 call *label15 *invalid :status2*retval (m:*label116) (h:*label116)
   257 label *label116
-    * set *tmp148 :mineOre.1:ore
-    * set *tmp149 :mineOre.1:block
   258 set :mineOre:ore :mineOre.1:ore
   259 set :mineOre:amount 28
   260 set :mineOre:block :mineOre.1:block
 
   398 return :supplyBlockFromCore*retaddr
   399 end
   400 label *label32
-    * set :unpackCfg:index 1
   401 set *tmp180 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp181 :unpackCfg:cfg *tmp180
+  402 read *tmp181 :unpackCfg:cfg 1
   403 op sub *tmp182 *tmp181 74
   404 lookup block :unpackCfg:type *tmp182
   405 set *tmp184 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp185 :unpackCfg:cfg *tmp184
+  406 read *tmp185 :unpackCfg:cfg 2
   407 op sub *tmp186 *tmp185 74
   408 op div :unpackCfg:x *tmp186 2
   409 set *tmp188 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp189 :unpackCfg:cfg *tmp188
+  410 read *tmp189 :unpackCfg:cfg 3
   411 op sub *tmp190 *tmp189 74
   412 op div :unpackCfg:y *tmp190 2
   413 set *tmp192 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp193 :unpackCfg:cfg *tmp192
+  414 read *tmp193 :unpackCfg:cfg 4
   415 op sub :unpackCfg:rotation *tmp193 74
   416 set *tmp195 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp196 :unpackCfg:cfg *tmp195
+  417 read *tmp196 :unpackCfg:cfg 5
   418 op sub :unpackCfg:ind *tmp196 74
   419 sensor :unpackCfg:cu :unpackCfg:type @copper
   420 sensor :unpackCfg:pb :unpackCfg:type @lead
 
   467 label *label162
   468 sensor *tmp220 .core @thorium
   469 jump *label163 lessThanEq *tmp220 400
-    * set :setMonoTarget:target 0
   470 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   471 label *label165
-    * set :setPolyTarget:target 4
   472 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   473 label *label166
   474 label *label163
 
   589 label *label203
   590 set *tmp254 100
   591 label *label204
-    * set :supplyBase0:titaniumTrigger *tmp254
   592 sensor *tmp258 .titaniumDrill @titanium
   593 jump *label205 greaterThanEq *tmp258 *tmp254
   594 jump *label207 notEqual :supplyBase0:supplied false
 
   621 label *label220
   622 set *tmp275 @scrap
   623 label *label221
-    * set :supplyBase0:ore *tmp275
   624 jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   625 set *tmp277 .core
   626 jump *label223 always
   627 label *label222
   628 set *tmp277 A¨SSJh-container30
   629 label *label223
-    * set :supplyBase0:block *tmp277
   630 set :mineOre.1:ore *tmp275
   631 set :mineOre.1:block *tmp277
   632 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   653 label *label227
   654 set *tmp281 @sand
   655 label *label228
-    * set :supplyBase0:ore.1 *tmp281
   656 set :mineOre.2:ore *tmp281
   657 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   658 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
 
   949 setaddr :unpackCfg*retaddr *label299 (h:*label299)
   950 call *label32 *invalid :unpackCfg*retval (m:*label299) (h:*label299)
   951 label *label299
-    * set :meetTargetCfg:type :unpackCfg:type
-    * set :meetTargetCfg:cu :unpackCfg:cu
-    * set :meetTargetCfg:pb :unpackCfg:pb
-    * set :meetTargetCfg:gr :unpackCfg:gr
-    * set :meetTargetCfg:si :unpackCfg:si
-    * set :meetTargetCfg:ti :unpackCfg:ti
-    * set :meetTargetCfg:mg :unpackCfg:mg
-    * set :meetTargetCfg:th :unpackCfg:th
   952 set :meetTargetLocal:block :unpackCfg:type
   953 set :meetTargetLocal:copper :unpackCfg:cu
   954 set :meetTargetLocal:lead :unpackCfg:pb
 
   990 setaddr :buildBlockAtLocal*retaddr *label303 (h:*label303)
   991 call *label43 *invalid :buildBlockAtLocal*retval (m:*label303) (h:*label303)
   992 label *label303
-    * set :buildBlock:built :buildBlockAtLocal*retval
   993 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   994 write 2 AÕFFJS-micro-processor9 "@counter"
   995 set :buildBlock*retval :buildBlockAtLocal*retval
 
  1004 setaddr :unpackCfg*retaddr *label307 (h:*label307)
  1005 call *label32 *invalid :unpackCfg*retval (m:*label307) (h:*label307)
  1006 label *label307
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
  1007 set :buildBlock:block :unpackCfg:type
  1008 set :buildBlock:x :buildRemoteBlock:x
  1009 set :buildBlock:y :buildRemoteBlock:y
 
  1035 setaddr :unpackCfg*retaddr *label310 (h:*label310)
  1036 call *label32 *invalid :unpackCfg*retval (m:*label310) (h:*label310)
  1037 label *label310
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
  1038 op add *tmp348 .coreX :unpackCfg:x
  1039 op add *tmp349 .coreY :unpackCfg:y
  1040 set :buildBlock:block :unpackCfg:type
 
  1053 setaddr :buildBlock*retaddr *label311 (h:*label311)
  1054 call *label41 *invalid :buildBlock*retval (m:*label311) (h:*label311)
  1055 label *label311
-    * set :buildBlockFromCfg:building :buildBlock*retval
  1056 write :buildBlock*retval @this :buildBlockFromCfg:cfg
  1057 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
  1058 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
 
  1066 label *label43
  1067 set :moveTo.1:x :buildBlockAtLocal:x
  1068 set :moveTo.1:y :buildBlockAtLocal:y
-    * set *tmp350 :buildBlockAtLocal:x
-    * set *tmp351 :buildBlockAtLocal:y
-    * set :moveTo:x :moveTo.1:x
-    * set :moveTo:y :moveTo.1:y
+ 1069 set :moveTo:x :buildBlockAtLocal:x
+ 1070 set :moveTo:y :buildBlockAtLocal:y
  1071 set :moveTo:radius 6
  1072 setaddr :moveTo*retaddr *label317 (h:*label317)
  1073 call *label19 *invalid :moveTo*retval (m:*label317) (h:*label317)
 
  1080 jump *label315 always
  1081 label *label320
  1082 label *label321
-    * set :buildError:text "Cannot build at position"
-    * set :buildError:block :buildBlockAtLocal:block
-    * set :buildError:type :buildBlockAtLocal:type
-    * set :buildError:x :buildBlockAtLocal:x
-    * set :buildError:y :buildBlockAtLocal:y
  1083 set .ERROR "Cannot build at position"
  1084 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
  1085 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
 
  1099 op equal *tmp361 :buildBlockAtLocal:success false
  1100 op land *tmp362 *tmp360 *tmp361
  1101 jump *label326 equal *tmp362 false
-    * set :buildError.1:text "Error while building"
-    * set :buildError.1:block :buildBlockAtLocal:block
-    * set :buildError.1:type :buildBlockAtLocal:type
-    * set :buildError.1:x :buildBlockAtLocal:x
-    * set :buildError.1:y :buildBlockAtLocal:y
  1102 set .ERROR "Error while building"
  1103 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
  1104 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
 
  1125 label *label325
  1126 control enabled processor6 true
  1127 ubind .builder
-    * set :logBlock:block :buildBlockAtLocal:block
-    * set :logBlock:index :buildBlockAtLocal:index
  1128 sensor :log:encodedId :buildBlockAtLocal:block @id
  1129 read *tmp100 bank1 511
  1130 op sub *tmp372 *tmp100 1
  1131 write *tmp372 bank1 511
-    * set *tmp373 *tmp372
  1132 read *tmp0 processor1 "time"
  1133 op mul *tmp375 *tmp0 1000
  1134 op add *tmp376 :log:encodedId *tmp375
 
  1174 setaddr :buildBlockAtLocal*retaddr *label340 (h:*label340)
  1175 call *label43 *invalid :buildBlockAtLocal*retval (m:*label340) (h:*label340)
  1176 label *label340
-    * set :buildFirstTitaniumDrillAt:drill :buildBlockAtLocal*retval
  1177 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1178 write false processor8 ":addTitaniumDrill*finished"
  1179 write 1 processor8 "@counter"
 
  1188 jump *label54 always
  1189 end
  1190 label *label44
-    * set :getFloor:x :titaniumDrillScore:x
-    * set :getFloor:y :titaniumDrillScore:y
  1191 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
-    * set *tmp384 :getFloor:floor
  1192 jump *label344 always
  1193 label *label344
  1194 jump *label345 notEqual :getFloor:floor @ore-titanium
 
  1212 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
  1213 set :moveTo.2:x :buildTitaniumDrill:x
  1214 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp394 :buildTitaniumDrill:x
-    * set *tmp395 :buildTitaniumDrill:y
-    * set :moveTo:x :moveTo.2:x
-    * set :moveTo:y :moveTo.2:y
+ 1215 set :moveTo:x :buildTitaniumDrill:x
+ 1216 set :moveTo:y :buildTitaniumDrill:y
  1217 set :moveTo:radius 6
  1218 setaddr :moveTo*retaddr *label355 (h:*label355)
  1219 call *label19 *invalid :moveTo*retval (m:*label355) (h:*label355)
 
  1278 setaddr :buildBlockAtLocal*retaddr *label362 (h:*label362)
  1279 call *label43 *invalid :buildBlockAtLocal*retval (m:*label362) (h:*label362)
  1280 label *label362
-    * set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
  1281 jump *label363 equal :buildBlockAtLocal*retval null
  1282 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1283 write false processor8 ":addTitaniumDrill*finished"
 
  1287 read *tmp415 processor8 ":addTitaniumDrill*finished"
  1288 jump *label365 equal *tmp415 false
  1289 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
-    * set :setFlareTarget:target :buildTitaniumDrill:count
  1290 op min *tmp416 :buildTitaniumDrill:count 8
  1291 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1292 label *label366

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-9 instructions):
 
   398 return :supplyBlockFromCore*retaddr
   399 end
   400 label *label32
-    * set *tmp180 1
   401 read *tmp181 :unpackCfg:cfg 1
   402 op sub *tmp182 *tmp181 74
   403 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 2
   404 read *tmp185 :unpackCfg:cfg 2
   405 op sub *tmp186 *tmp185 74
   406 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 3
   407 read *tmp189 :unpackCfg:cfg 3
   408 op sub *tmp190 *tmp189 74
   409 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 4
   410 read *tmp193 :unpackCfg:cfg 4
   411 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 5
   412 read *tmp196 :unpackCfg:cfg 5
   413 op sub :unpackCfg:ind *tmp196 74
   414 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1059 jump *label54 always
  1060 end
  1061 label *label43
-    * set :moveTo.1:x :buildBlockAtLocal:x
-    * set :moveTo.1:y :buildBlockAtLocal:y
  1062 set :moveTo:x :buildBlockAtLocal:x
  1063 set :moveTo:y :buildBlockAtLocal:y
  1064 set :moveTo:radius 6
 
  1203 label *label45
  1204 jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1205 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * set :moveTo.2:x :buildTitaniumDrill:x
-    * set :moveTo.2:y :buildTitaniumDrill:y
  1206 set :moveTo:x :buildTitaniumDrill:x
  1207 set :moveTo:y :buildTitaniumDrill:y
  1208 set :moveTo:radius 6

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    77 setaddr :status3*retaddr *label61 (h:*label61)
    78 call *label16 *invalid :status3*retval (m:*label61) (h:*label61)
    79 label *label61
+   80 op sub *tmp107 :moveTo:radius 0.5
    81 label *label62
    82 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    83 jump *label64 notEqual *tmp105 false
-    * op sub *tmp107 :moveTo:radius 0.5
    84 ucontrol approach :moveTo:x :moveTo:y *tmp107
    85 label *label63
    86 jump *label62 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-12 instructions):
 
   610 jump *label218 equal A¨SSJh-container30 false
   611 sensor :supplyBase0:coal .core @coal
   612 sensor :supplyBase0:sand A¨SSJh-container30 @sand
-    * jump *label220 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp275 @coal
-    * jump *label221 always
-    * label *label220
-    * set *tmp275 @scrap
-    * label *label221
-    * jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp277 .core
-    * jump *label223 always
-    * label *label222
-    * set *tmp277 A¨SSJh-container30
-    * label *label223
+  613 select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  614 select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand .core A¨SSJh-container30
   615 set :mineOre.1:ore *tmp275
   616 set :mineOre.1:block *tmp277
   617 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   632 label *label226
   633 sensor :supplyBase0:coal.1 .core @coal
   634 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label227 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp281 @coal
-    * jump *label228 always
-    * label *label227
-    * set *tmp281 @sand
-    * label *label228
+  635 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   636 set :mineOre.2:ore *tmp281
   637 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   638 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
 
   690 call *label14 *invalid :status1*retval (m:*label245) (h:*label245)
   691 label *label245
   692 jump *label246 notEqual A¨SSJh-container30 null
-    * sensor *tmp294 .core @coal
-    * sensor *tmp295 .core @sand
-    * op lessThanEq *tmp296 *tmp294 *tmp295
-    * op or *tmp297 .scrap *tmp296
-    * jump *label248 equal *tmp297 false
-    * set *tmp298 @coal
-    * jump *label249 always
-    * label *label248
-    * set *tmp298 @sand
-    * label *label249
+  693 sensor *tmp294 .core @coal
+  694 sensor *tmp295 .core @sand
+  695 op lessThanEq *tmp296 *tmp294 *tmp295
+  696 op or *tmp297 .scrap *tmp296
+  697 select *tmp298 notEqual *tmp297 false @coal @sand
   698 set :mineOre.2:ore *tmp298
   699 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   700 call *label27 *invalid :mineOre.2*retval (m:*label250) (h:*label250)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   575 label *label188
   576 label *label173
   577 label *label174
+  578 set *tmp254 100
   579 sensor *tmp252 .core @titanium
-    * jump *label203 greaterThanEq *tmp252 titanium
+  580 jump *label204 greaterThanEq *tmp252 titanium
   581 sensor *tmp255 .core @titanium
   582 op sub *tmp256 titanium *tmp255
   583 op min *tmp254 5 *tmp256
   584 jump *label204 always
-    * label *label203
-    * set *tmp254 100
   585 label *label204
   586 sensor *tmp258 .titaniumDrill @titanium
   587 jump *label205 greaterThanEq *tmp258 *tmp254

Modifications by Unroll iteration loop at BuilderController.mnd:204:5 (-2 instructions):
 
   800 end
   801 label *label40
   802 set :meetTargetLocal:count 0
-    * set :meetTargetLocal:t :meetTargetLocal:copper
-    * setaddr *tmp326 *label276
-    * jump *label273 always
-    * multilabel *label276 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:lead
-    * setaddr *tmp326 *label277
-    * jump *label273 always
-    * multilabel *label277 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:graphite
-    * setaddr *tmp326 *label278
-    * jump *label273 always
-    * multilabel *label278 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:silicon
-    * setaddr *tmp326 *label279
-    * jump *label273 always
-    * multilabel *label279 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:titanium
-    * setaddr *tmp326 *label280
-    * jump *label273 always
-    * multilabel *label280 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:metaglass
-    * setaddr *tmp326 *label281
-    * jump *label273 always
-    * multilabel *label281 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:thorium
-    * setaddr *tmp326 *label282
-    * label *label273
-    * op sign *tmp327 :meetTargetLocal:t
-    * op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label274
-    * multijump *tmp326 0 0 (m:marker0)
-    * multilabel *label282 (m:marker0)
-    * label *label275
+  803 set :meetTargetLocal:t :meetTargetLocal:copper
+  804 label *label391
+  805 op sign *tmp327 :meetTargetLocal:t
+  806 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  807 label *label392
+  808 set :meetTargetLocal:t :meetTargetLocal:lead
+  809 label *label395
+  810 op sign *tmp327 :meetTargetLocal:t
+  811 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  812 label *label396
+  813 set :meetTargetLocal:t :meetTargetLocal:graphite
+  814 label *label399
+  815 op sign *tmp327 :meetTargetLocal:t
+  816 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  817 label *label400
+  818 set :meetTargetLocal:t :meetTargetLocal:silicon
+  819 label *label403
+  820 op sign *tmp327 :meetTargetLocal:t
+  821 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  822 label *label404
+  823 set :meetTargetLocal:t :meetTargetLocal:titanium
+  824 label *label407
+  825 op sign *tmp327 :meetTargetLocal:t
+  826 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  827 label *label408
+  828 set :meetTargetLocal:t :meetTargetLocal:metaglass
+  829 label *label411
+  830 op sign *tmp327 :meetTargetLocal:t
+  831 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  832 label *label412
+  833 set :meetTargetLocal:t :meetTargetLocal:thorium
+  834 label *label415
+  835 op sign *tmp327 :meetTargetLocal:t
+  836 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  837 label *label416
+  838 label *label275
   839 write :meetTargetLocal:count processor2 ".totalTargets"
   840 write :meetTargetLocal:block processor2 ".nextBlock"
   841 write :meetTargetLocal:copper processor2 ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   802 set :meetTargetLocal:count 0
   803 set :meetTargetLocal:t :meetTargetLocal:copper
   804 label *label391
-    * op sign *tmp327 :meetTargetLocal:t
-    * op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
+  805 op sign *tmp327 :meetTargetLocal:copper
+  806 op add :meetTargetLocal:count 0 *tmp327
   807 label *label392
   808 set :meetTargetLocal:t :meetTargetLocal:lead
   809 label *label395
-    * op sign *tmp327 :meetTargetLocal:t
+  810 op sign *tmp327 :meetTargetLocal:lead
   811 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   812 label *label396
   813 set :meetTargetLocal:t :meetTargetLocal:graphite
   814 label *label399
-    * op sign *tmp327 :meetTargetLocal:t
+  815 op sign *tmp327 :meetTargetLocal:graphite
   816 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   817 label *label400
   818 set :meetTargetLocal:t :meetTargetLocal:silicon
   819 label *label403
-    * op sign *tmp327 :meetTargetLocal:t
+  820 op sign *tmp327 :meetTargetLocal:silicon
   821 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   822 label *label404
   823 set :meetTargetLocal:t :meetTargetLocal:titanium
   824 label *label407
-    * op sign *tmp327 :meetTargetLocal:t
+  825 op sign *tmp327 :meetTargetLocal:titanium
   826 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   827 label *label408
   828 set :meetTargetLocal:t :meetTargetLocal:metaglass
   829 label *label411
-    * op sign *tmp327 :meetTargetLocal:t
+  830 op sign *tmp327 :meetTargetLocal:metaglass
   831 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   832 label *label412
   833 set :meetTargetLocal:t :meetTargetLocal:thorium
   834 label *label415
-    * op sign *tmp327 :meetTargetLocal:t
+  835 op sign *tmp327 :meetTargetLocal:thorium
   836 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   837 label *label416
   838 label *label275

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   799 return :targetMet*retaddr
   800 end
   801 label *label40
-    * set :meetTargetLocal:count 0
-    * set :meetTargetLocal:t :meetTargetLocal:copper
   802 label *label391
   803 op sign *tmp327 :meetTargetLocal:copper
   804 op add :meetTargetLocal:count 0 *tmp327
   805 label *label392
-    * set :meetTargetLocal:t :meetTargetLocal:lead
   806 label *label395
   807 op sign *tmp327 :meetTargetLocal:lead
   808 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   809 label *label396
-    * set :meetTargetLocal:t :meetTargetLocal:graphite
   810 label *label399
   811 op sign *tmp327 :meetTargetLocal:graphite
   812 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   813 label *label400
-    * set :meetTargetLocal:t :meetTargetLocal:silicon
   814 label *label403
   815 op sign *tmp327 :meetTargetLocal:silicon
   816 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   817 label *label404
-    * set :meetTargetLocal:t :meetTargetLocal:titanium
   818 label *label407
   819 op sign *tmp327 :meetTargetLocal:titanium
   820 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   821 label *label408
-    * set :meetTargetLocal:t :meetTargetLocal:metaglass
   822 label *label411
   823 op sign *tmp327 :meetTargetLocal:metaglass
   824 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
   825 label *label412
-    * set :meetTargetLocal:t :meetTargetLocal:thorium
   826 label *label415
   827 op sign *tmp327 :meetTargetLocal:thorium
   828 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-18 instructions):
 
    43 wait 1e12
    44 jump *label54 always
    45 end
-    * label *label14
-    * write :status1:text processor2 ".status1"
-    * label *label55
-    * return :status1*retaddr
-    * end
    46 label *label15
    47 write :status2:text processor2 ".status2"
    48 write :status2:item processor2 ".item2"
 
   424 write *tmp209 processor7 ".sandTarget"
   425 jump *label150 equal .thoriumContainer false
   426 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label153 (h:*label153)
-    * call *label14 *invalid :status1*retval (m:*label153) (h:*label153)
-    * label *label153
+  427 label *label420
+  428 write :status1:text processor2 ".status1"
+  429 label *label421
   430 sensor *tmp211 .thoriumBattery @totalPower
   431 jump *label154 greaterThanEq *tmp211 2000
   432 sensor *tmp214 .thoriumGenerator @coal
 
   469 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   470 jump *label167 lessThanEq *tmp81 1
   471 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label170 (h:*label170)
-    * call *label14 *invalid :status1*retval (m:*label170) (h:*label170)
-    * label *label170
+  472 label *label422
+  473 write :status1:text processor2 ".status1"
+  474 label *label423
   475 set :mineOre.2:ore @coal
   476 setaddr :mineOre.2*retaddr *label171 (h:*label171)
   477 call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
 
   486 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   487 jump *label177 greaterThanEq *tmp230 5
   488 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label179 (h:*label179)
-    * call *label14 *invalid :status1*retval (m:*label179) (h:*label179)
-    * label *label179
+  489 label *label424
+  490 write :status1:text processor2 ".status1"
+  491 label *label425
   492 set :supplyBlock:block AJEMJJ-graphite-press0
   493 set :supplyBlock:ore @coal
   494 setaddr :supplyBlock*retaddr *label180 (h:*label180)
 
   504 sensor *tmp236 AJRJM-combustion-generator3 @coal
   505 jump *label183 greaterThanEq *tmp236 2
   506 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label185 (h:*label185)
-    * call *label14 *invalid :status1*retval (m:*label185) (h:*label185)
-    * label *label185
+  507 label *label426
+  508 write :status1:text processor2 ".status1"
+  509 label *label427
   510 set :supplyBlock:block AJRJM-combustion-generator3
   511 set :supplyBlock:ore @coal
   512 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   522 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   523 jump *label189 greaterThanEq *tmp242 5
   524 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label191 (h:*label191)
-    * call *label14 *invalid :status1*retval (m:*label191) (h:*label191)
-    * label *label191
+  525 label *label428
+  526 write :status1:text processor2 ".status1"
+  527 label *label429
   528 set :supplyBlock:block ALMQJN-silicon-smelter4
   529 set :supplyBlock:ore @coal
   530 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   539 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   540 jump *label197 greaterThanEq *tmp249 10
   541 set :status1:text "Goal 3a: scrap for silicon requirement"
-    * setaddr :status1*retaddr *label199 (h:*label199)
-    * call *label14 *invalid :status1*retval (m:*label199) (h:*label199)
-    * label *label199
+  542 label *label430
+  543 write :status1:text processor2 ".status1"
+  544 label *label431
   545 set :supplyBlock:block AXPRJd-pulverizer26
   546 set :supplyBlock:ore @scrap
   547 setaddr :supplyBlock*retaddr *label200 (h:*label200)
 
   553 jump *label196 always
   554 label *label195
   555 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label201 (h:*label201)
-    * call *label14 *invalid :status1*retval (m:*label201) (h:*label201)
-    * label *label201
+  556 label *label432
+  557 write :status1:text processor2 ".status1"
+  558 label *label433
   559 set :supplyBlock:block ALMQJN-silicon-smelter4
   560 set :supplyBlock:ore @sand
   561 setaddr :supplyBlock*retaddr *label202 (h:*label202)
 
   585 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   586 jump *label209 greaterThanEq *tmp263 *tmp264
   587 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label211 (h:*label211)
-    * call *label14 *invalid :status1*retval (m:*label211) (h:*label211)
-    * label *label211
+  588 label *label434
+  589 write :status1:text processor2 ".status1"
+  590 label *label435
   591 set :mineOre.2:ore @coal
   592 setaddr :mineOre.2*retaddr *label212 (h:*label212)
   593 call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
 
   598 jump *label213 greaterThanEq *tmp267 silicon
   599 jump *label215 equal .scrap false
   600 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label217 (h:*label217)
-    * call *label14 *invalid :status1*retval (m:*label217) (h:*label217)
-    * label *label217
+  601 label *label436
+  602 write :status1:text processor2 ".status1"
+  603 label *label437
   604 jump *label218 equal A¨SSJh-container30 false
   605 sensor :supplyBase0:coal .core @coal
   606 sensor :supplyBase0:sand A¨SSJh-container30 @sand
 
   621 jump *label216 always
   622 label *label215
   623 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label226 (h:*label226)
-    * call *label14 *invalid :status1*retval (m:*label226) (h:*label226)
-    * label *label226
+  624 label *label438
+  625 write :status1:text processor2 ".status1"
+  626 label *label439
   627 sensor :supplyBase0:coal.1 .core @coal
   628 sensor :supplyBase0:sand.1 .core @sand
   629 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   637 sensor *tmp282 .core @copper
   638 jump *label230 greaterThanEq *tmp282 copper
   639 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label232 (h:*label232)
-    * call *label14 *invalid :status1*retval (m:*label232) (h:*label232)
-    * label *label232
+  640 label *label440
+  641 write :status1:text processor2 ".status1"
+  642 label *label441
   643 set :mineOre.2:ore @copper
   644 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   645 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
 
   649 sensor *tmp285 .core @lead
   650 jump *label234 greaterThanEq *tmp285 lead
   651 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label236 (h:*label236)
-    * call *label14 *invalid :status1*retval (m:*label236) (h:*label236)
-    * label *label236
+  652 label *label442
+  653 write :status1:text processor2 ".status1"
+  654 label *label443
   655 set :mineOre.2:ore @lead
   656 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   657 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
 
   661 sensor *tmp288 .core @metaglass
   662 jump *label238 greaterThanEq *tmp288 metaglass
   663 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label240 (h:*label240)
-    * call *label14 *invalid :status1*retval (m:*label240) (h:*label240)
-    * label *label240
+  664 label *label444
+  665 write :status1:text processor2 ".status1"
+  666 label *label445
   667 jump *label241 equal .scrap false
   668 set :mineOre.1:ore @scrap
   669 set :mineOre.1:block .sandContainer
 
   680 jump *label239 always
   681 label *label238
   682 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label245 (h:*label245)
-    * call *label14 *invalid :status1*retval (m:*label245) (h:*label245)
-    * label *label245
+  683 label *label446
+  684 write :status1:text processor2 ".status1"
+  685 label *label447
   686 jump *label246 notEqual A¨SSJh-container30 null
   687 sensor *tmp294 .core @coal
   688 sensor *tmp295 .core @sand
 
   723 jump *label206 always
   724 label *label205
   725 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label255 (h:*label255)
-    * call *label14 *invalid :status1*retval (m:*label255) (h:*label255)
-    * label *label255
+  726 label *label448
+  727 write :status1:text processor2 ".status1"
+  728 label *label449
   729 set :fetchBlock:block .titaniumDrill
   730 set :fetchBlock:item @titanium
   731 setaddr :fetchBlock*retaddr *label256 (h:*label256)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   425 jump *label150 equal .thoriumContainer false
   426 set :status1:text "Phase 2: servicing thorium drill"
   427 label *label420
-    * write :status1:text processor2 ".status1"
+  428 write "Phase 2: servicing thorium drill" processor2 ".status1"
   429 label *label421
   430 sensor *tmp211 .thoriumBattery @totalPower
   431 jump *label154 greaterThanEq *tmp211 2000
 
   470 jump *label167 lessThanEq *tmp81 1
   471 set :status1:text "Phase 1: supplying base"
   472 label *label422
-    * write :status1:text processor2 ".status1"
+  473 write "Phase 1: supplying base" processor2 ".status1"
   474 label *label423
   475 set :mineOre.2:ore @coal
   476 setaddr :mineOre.2*retaddr *label171 (h:*label171)
 
   487 jump *label177 greaterThanEq *tmp230 5
   488 set :status1:text "Goal 1: graphite requirement"
   489 label *label424
-    * write :status1:text processor2 ".status1"
+  490 write "Goal 1: graphite requirement" processor2 ".status1"
   491 label *label425
   492 set :supplyBlock:block AJEMJJ-graphite-press0
   493 set :supplyBlock:ore @coal
 
   505 jump *label183 greaterThanEq *tmp236 2
   506 set :status1:text "Goal 4: supplying generator"
   507 label *label426
-    * write :status1:text processor2 ".status1"
+  508 write "Goal 4: supplying generator" processor2 ".status1"
   509 label *label427
   510 set :supplyBlock:block AJRJM-combustion-generator3
   511 set :supplyBlock:ore @coal
 
   523 jump *label189 greaterThanEq *tmp242 5
   524 set :status1:text "Goal 2: coal for silicon requirement"
   525 label *label428
-    * write :status1:text processor2 ".status1"
+  526 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   527 label *label429
   528 set :supplyBlock:block ALMQJN-silicon-smelter4
   529 set :supplyBlock:ore @coal
 
   540 jump *label197 greaterThanEq *tmp249 10
   541 set :status1:text "Goal 3a: scrap for silicon requirement"
   542 label *label430
-    * write :status1:text processor2 ".status1"
+  543 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   544 label *label431
   545 set :supplyBlock:block AXPRJd-pulverizer26
   546 set :supplyBlock:ore @scrap
 
   554 label *label195
   555 set :status1:text "Goal 3: sand for silicon requirement"
   556 label *label432
-    * write :status1:text processor2 ".status1"
+  557 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   558 label *label433
   559 set :supplyBlock:block ALMQJN-silicon-smelter4
   560 set :supplyBlock:ore @sand
 
   586 jump *label209 greaterThanEq *tmp263 *tmp264
   587 set :status1:text "Goal 5: supplying generator"
   588 label *label434
-    * write :status1:text processor2 ".status1"
+  589 write "Goal 5: supplying generator" processor2 ".status1"
   590 label *label435
   591 set :mineOre.2:ore @coal
   592 setaddr :mineOre.2*retaddr *label212 (h:*label212)
 
   599 jump *label215 equal .scrap false
   600 set :status1:text "Goal 6: silicon requirement"
   601 label *label436
-    * write :status1:text processor2 ".status1"
+  602 write "Goal 6: silicon requirement" processor2 ".status1"
   603 label *label437
   604 jump *label218 equal A¨SSJh-container30 false
   605 sensor :supplyBase0:coal .core @coal
 
   622 label *label215
   623 set :status1:text "Goal 6: silicon requirement"
   624 label *label438
-    * write :status1:text processor2 ".status1"
+  625 write "Goal 6: silicon requirement" processor2 ".status1"
   626 label *label439
   627 sensor :supplyBase0:coal.1 .core @coal
   628 sensor :supplyBase0:sand.1 .core @sand
 
   638 jump *label230 greaterThanEq *tmp282 copper
   639 set :status1:text "Goal 7: copper requirement"
   640 label *label440
-    * write :status1:text processor2 ".status1"
+  641 write "Goal 7: copper requirement" processor2 ".status1"
   642 label *label441
   643 set :mineOre.2:ore @copper
   644 setaddr :mineOre.2*retaddr *label233 (h:*label233)
 
   650 jump *label234 greaterThanEq *tmp285 lead
   651 set :status1:text "Goal 8: lead requirement"
   652 label *label442
-    * write :status1:text processor2 ".status1"
+  653 write "Goal 8: lead requirement" processor2 ".status1"
   654 label *label443
   655 set :mineOre.2:ore @lead
   656 setaddr :mineOre.2*retaddr *label237 (h:*label237)
 
   662 jump *label238 greaterThanEq *tmp288 metaglass
   663 set :status1:text "Goal 9: metaglass requirement"
   664 label *label444
-    * write :status1:text processor2 ".status1"
+  665 write "Goal 9: metaglass requirement" processor2 ".status1"
   666 label *label445
   667 jump *label241 equal .scrap false
   668 set :mineOre.1:ore @scrap
 
   681 label *label238
   682 set :status1:text "Goal 10: supplying base"
   683 label *label446
-    * write :status1:text processor2 ".status1"
+  684 write "Goal 10: supplying base" processor2 ".status1"
   685 label *label447
   686 jump *label246 notEqual A¨SSJh-container30 null
   687 sensor *tmp294 .core @coal
 
   724 label *label205
   725 set :status1:text "Goal 11: Fetching titanium"
   726 label *label448
-    * write :status1:text processor2 ".status1"
+  727 write "Goal 11: Fetching titanium" processor2 ".status1"
   728 label *label449
   729 set :fetchBlock:block .titaniumDrill
   730 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
   423 op max *tmp209 0 *tmp208
   424 write *tmp209 processor7 ".sandTarget"
   425 jump *label150 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   426 label *label420
   427 write "Phase 2: servicing thorium drill" processor2 ".status1"
   428 label *label421
 
   467 label *label150
   468 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   469 jump *label167 lessThanEq *tmp81 1
-    * set :status1:text "Phase 1: supplying base"
   470 label *label422
   471 write "Phase 1: supplying base" processor2 ".status1"
   472 label *label423
 
   483 jump *label175 greaterThanEq *tmp227 graphite
   484 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   485 jump *label177 greaterThanEq *tmp230 5
-    * set :status1:text "Goal 1: graphite requirement"
   486 label *label424
   487 write "Goal 1: graphite requirement" processor2 ".status1"
   488 label *label425
 
   500 jump *label181 greaterThanEq *tmp233 .powerTarget
   501 sensor *tmp236 AJRJM-combustion-generator3 @coal
   502 jump *label183 greaterThanEq *tmp236 2
-    * set :status1:text "Goal 4: supplying generator"
   503 label *label426
   504 write "Goal 4: supplying generator" processor2 ".status1"
   505 label *label427
 
   517 jump *label187 greaterThanEq *tmp239 silicon
   518 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   519 jump *label189 greaterThanEq *tmp242 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   520 label *label428
   521 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   522 label *label429
 
   533 jump *label195 equal .scrap false
   534 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   535 jump *label197 greaterThanEq *tmp249 10
-    * set :status1:text "Goal 3a: scrap for silicon requirement"
   536 label *label430
   537 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   538 label *label431
 
   546 label *label198
   547 jump *label196 always
   548 label *label195
-    * set :status1:text "Goal 3: sand for silicon requirement"
   549 label *label432
   550 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   551 label *label433
 
   577 sensor *tmp263 AJTJK-battery1 @totalPower
   578 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   579 jump *label209 greaterThanEq *tmp263 *tmp264
-    * set :status1:text "Goal 5: supplying generator"
   580 label *label434
   581 write "Goal 5: supplying generator" processor2 ".status1"
   582 label *label435
 
   589 sensor *tmp267 .core @silicon
   590 jump *label213 greaterThanEq *tmp267 silicon
   591 jump *label215 equal .scrap false
-    * set :status1:text "Goal 6: silicon requirement"
   592 label *label436
   593 write "Goal 6: silicon requirement" processor2 ".status1"
   594 label *label437
 
   611 label *label219
   612 jump *label216 always
   613 label *label215
-    * set :status1:text "Goal 6: silicon requirement"
   614 label *label438
   615 write "Goal 6: silicon requirement" processor2 ".status1"
   616 label *label439
 
   626 label *label213
   627 sensor *tmp282 .core @copper
   628 jump *label230 greaterThanEq *tmp282 copper
-    * set :status1:text "Goal 7: copper requirement"
   629 label *label440
   630 write "Goal 7: copper requirement" processor2 ".status1"
   631 label *label441
 
   637 label *label230
   638 sensor *tmp285 .core @lead
   639 jump *label234 greaterThanEq *tmp285 lead
-    * set :status1:text "Goal 8: lead requirement"
   640 label *label442
   641 write "Goal 8: lead requirement" processor2 ".status1"
   642 label *label443
 
   648 label *label234
   649 sensor *tmp288 .core @metaglass
   650 jump *label238 greaterThanEq *tmp288 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   651 label *label444
   652 write "Goal 9: metaglass requirement" processor2 ".status1"
   653 label *label445
 
   666 label *label242
   667 jump *label239 always
   668 label *label238
-    * set :status1:text "Goal 10: supplying base"
   669 label *label446
   670 write "Goal 10: supplying base" processor2 ".status1"
   671 label *label447
 
   708 label *label208
   709 jump *label206 always
   710 label *label205
-    * set :status1:text "Goal 11: Fetching titanium"
   711 label *label448
   712 write "Goal 11: Fetching titanium" processor2 ".status1"
   713 label *label449

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
    50 label *label56
    51 return :status2*retaddr
    52 end
-    * label *label16
-    * write :status3:text processor2 ".status3"
-    * label *label57
-    * return :status3*retaddr
-    * end
    53 label *label17
    54 write :transportStatus:target processor2 ".transportTarget"
    55 write :transportStatus:item processor2 ".transportItem"
 
    64 end
    65 label *label19
    66 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label61 (h:*label61)
-    * call *label16 *invalid :status3*retval (m:*label61) (h:*label61)
-    * label *label61
+   67 label *label450
+   68 write :status3:text processor2 ".status3"
+   69 label *label451
    70 op sub *tmp107 :moveTo:radius 0.5
    71 label *label62
    72 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
 
    80 end
    81 label *label20
    82 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label66 (h:*label66)
-    * call *label16 *invalid :status3*retval (m:*label66) (h:*label66)
-    * label *label66
+   83 label *label452
+   84 write :status3:text processor2 ".status3"
+   85 label *label453
    86 label *label67
    87 sensor *tmp108 @unit @firstItem
    88 jump *label70 equal *tmp108 null
 
   122 end
   123 label *label23
   124 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label79 (h:*label79)
-    * call *label16 *invalid :status3*retval (m:*label79) (h:*label79)
-    * label *label79
+  125 label *label454
+  126 write :status3:text processor2 ".status3"
+  127 label *label455
   128 sensor *tmp117 @unit @firstItem
   129 jump *label80 notEqual *tmp117 :depositItems:item
   130 set :moveToBlock:block :depositItems:block
 
   197 label *label98
   198 label *label99
   199 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label101 (h:*label101)
-    * call *label16 *invalid :status3*retval (m:*label101) (h:*label101)
-    * label *label101
+  200 label *label456
+  201 write :status3:text processor2 ".status3"
+  202 label *label457
   203 op add :mineOre:stop @second 10
   204 label *label102
   205 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    65 label *label19
    66 set :status3:text "Moving..."
    67 label *label450
-    * write :status3:text processor2 ".status3"
+   68 write "Moving..." processor2 ".status3"
    69 label *label451
    70 op sub *tmp107 :moveTo:radius 0.5
    71 label *label62
 
    81 label *label20
    82 set :status3:text "Moving..."
    83 label *label452
-    * write :status3:text processor2 ".status3"
+   84 write "Moving..." processor2 ".status3"
    85 label *label453
    86 label *label67
    87 sensor *tmp108 @unit @firstItem
 
   123 label *label23
   124 set :status3:text "Depositing..."
   125 label *label454
-    * write :status3:text processor2 ".status3"
+  126 write "Depositing..." processor2 ".status3"
   127 label *label455
   128 sensor *tmp117 @unit @firstItem
   129 jump *label80 notEqual *tmp117 :depositItems:item
 
   198 label *label99
   199 set :status3:text "Mining..."
   200 label *label456
-    * write :status3:text processor2 ".status3"
+  201 write "Mining..." processor2 ".status3"
   202 label *label457
   203 op add :mineOre:stop @second 10
   204 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    63 return :error*retaddr
    64 end
    65 label *label19
-    * set :status3:text "Moving..."
    66 label *label450
    67 write "Moving..." processor2 ".status3"
    68 label *label451
 
    78 return :moveTo*retaddr
    79 end
    80 label *label20
-    * set :status3:text "Moving..."
    81 label *label452
    82 write "Moving..." processor2 ".status3"
    83 label *label453
 
   119 return :moveToBlock*retaddr
   120 end
   121 label *label23
-    * set :status3:text "Depositing..."
   122 label *label454
   123 write "Depositing..." processor2 ".status3"
   124 label *label455
 
   193 label *label100
   194 label *label98
   195 label *label99
-    * set :status3:text "Mining..."
   196 label *label456
   197 write "Mining..." processor2 ".status3"
   198 label *label457

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    56 label *label58
    57 return :transportStatus*retaddr
    58 end
-    * label *label18
-    * set .ERROR :error:error
-    * stop
-    * label *label59
-    * return :error*retaddr
-    * end
    59 label *label19
    60 label *label450
    61 write "Moving..." processor2 ".status3"
 
   154 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label91 notEqual *tmp127 false
   156 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label93 (h:*label93)
-    * call *label18 *invalid :error*retval (m:*label93) (h:*label93)
-    * label *label93
+  157 label *label458
+  158 set .ERROR :error:error
+  159 stop
+  160 label *label459
   161 label *label91
   162 label *label92
   163 label *label90

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   155 jump *label91 notEqual *tmp127 false
   156 set :error:error "Cannot locate ore"
   157 label *label458
-    * set .ERROR :error:error
+  158 set .ERROR "Cannot locate ore"
   159 stop
   160 label *label459
   161 label *label91

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   153 label *label24
   154 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label91 notEqual *tmp127 false
-    * set :error:error "Cannot locate ore"
   156 label *label458
   157 set .ERROR "Cannot locate ore"
   158 stop

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
   100 label *label72
   101 return :dropAll*retaddr
   102 end
-    * label *label22
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label77 (h:*label77)
-    * call *label19 *invalid :moveTo*retval (m:*label77) (h:*label77)
-    * label *label77
-    * label *label76
-    * return :moveToBlock*retaddr
-    * end
   103 label *label23
   104 label *label454
   105 write "Depositing..." processor2 ".status3"
 
   108 jump *label80 notEqual *tmp117 :depositItems:item
   109 set :moveToBlock:block :depositItems:block
   110 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label82 (h:*label82)
-    * call *label22 *invalid :moveToBlock*retval (m:*label82) (h:*label82)
-    * label *label82
+  111 label *label460
+  112 sensor *tmp115 :moveToBlock:block @x
+  113 sensor *tmp116 :moveToBlock:block @y
+  114 set :moveTo:x *tmp115
+  115 set :moveTo:y *tmp116
+  116 set :moveTo:radius :moveToBlock:radius
+  117 setaddr :moveTo*retaddr *label461 (h:*label461)
+  118 call *label19 *invalid :moveTo*retval (m:*label461) (h:*label461)
+  119 label *label461
+  120 label *label462
   121 sensor :depositItems:cap :depositItems:block @itemCapacity
   122 label *label83
   123 ucontrol itemDrop :depositItems:block 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   109 set :moveToBlock:block :depositItems:block
   110 set :moveToBlock:radius 6
   111 label *label460
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
+  112 sensor *tmp115 :depositItems:block @x
+  113 sensor *tmp116 :depositItems:block @y
   114 set :moveTo:x *tmp115
   115 set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
+  116 set :moveTo:radius 6
   117 setaddr :moveTo*retaddr *label461 (h:*label461)
   118 call *label19 *invalid :moveTo*retval (m:*label461) (h:*label461)
   119 label *label461

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   106 label *label455
   107 sensor *tmp117 @unit @firstItem
   108 jump *label80 notEqual *tmp117 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   109 label *label460
   110 sensor *tmp115 :depositItems:block @x
   111 sensor *tmp116 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   143 label *label78
   144 return :depositItems*retaddr
   145 end
-    * label *label24
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * jump *label91 notEqual *tmp127 false
-    * label *label458
-    * set .ERROR "Cannot locate ore"
-    * stop
-    * label *label459
-    * label *label91
-    * label *label92
-    * label *label90
-    * return :locateOre*retaddr
-    * end
   146 label *label25
   147 op min :mineOre:amount :mineOre:amount 28
   148 set :transportStatus:target :mineOre:amount
 
   151 call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
   152 label *label95
   153 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label96 (h:*label96)
-    * call *label24 *invalid :locateOre*retval (m:*label96) (h:*label96)
-    * label *label96
+  154 label *label463
+  155 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  156 jump *label466 notEqual *tmp127 false
+  157 label *label464
+  158 set .ERROR "Cannot locate ore"
+  159 stop
+  160 label *label465
+  161 label *label466
+  162 label *label467
+  163 label *label468
   164 set :mineOre:x :locateOre:x
   165 set :mineOre:y :locateOre:y
   166 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   152 label *label95
   153 set :locateOre:ore :mineOre:ore
   154 label *label463
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  155 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   156 jump *label466 notEqual *tmp127 false
   157 label *label464
   158 set .ERROR "Cannot locate ore"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   150 setaddr :transportStatus*retaddr *label95 (h:*label95)
   151 call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
   152 label *label95
-    * set :locateOre:ore :mineOre:ore
   153 label *label463
   154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label466 notEqual *tmp127 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 (-4 instructions):
 
   317 label *label132
   318 return :supplyBlock*retaddr
   319 end
-    * label *label30
-    * sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min :supplyBlockFromCore:cap *tmp169 28
-    * set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label138 (h:*label138)
-    * call *label17 *invalid :transportStatus*retval (m:*label138) (h:*label138)
-    * label *label138
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label139 (h:*label139)
-    * call *label15 *invalid :status2*retval (m:*label139) (h:*label139)
-    * label *label139
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label140 (h:*label140)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label140) (h:*label140)
-    * label *label140
-    * setaddr :dropAll*retaddr *label141 (h:*label141)
-    * call *label21 *invalid :dropAll*retval (m:*label141) (h:*label141)
-    * label *label141
-    * label *label142
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp174 *tmp172 *tmp173
-    * jump *label145 equal *tmp174 false
-    * ucontrol itemDrop @air 1000
-    * label *label145
-    * label *label146
-    * label *label143
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
-    * op land *tmp179 *tmp177 *tmp178
-    * jump *label142 notEqual *tmp179 false
-    * label *label144
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label147 (h:*label147)
-    * call *label23 *invalid :depositItems*retval (m:*label147) (h:*label147)
-    * label *label147
-    * label *label137
-    * return :supplyBlockFromCore*retaddr
-    * end
   320 label *label32
   321 read *tmp181 :unpackCfg:cfg 1
   322 op sub *tmp182 *tmp181 74
 
   366 label *label158
   367 set :supplyBlockFromCore:target .thoriumGenerator
   368 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
-    * call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
-    * label *label161
+  369 label *label469
+  370 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
+  371 op min :supplyBlockFromCore:cap *tmp169 28
+  372 set :transportStatus:target :supplyBlockFromCore:cap
+  373 set :transportStatus:item :supplyBlockFromCore:item
+  374 setaddr :transportStatus*retaddr *label470 (h:*label470)
+  375 call *label17 *invalid :transportStatus*retval (m:*label470) (h:*label470)
+  376 label *label470
+  377 set :status2:text "Transferring "
+  378 set :status2:item :supplyBlockFromCore:item
+  379 set :status2:block :supplyBlockFromCore:target
+  380 setaddr :status2*retaddr *label471 (h:*label471)
+  381 call *label15 *invalid :status2*retval (m:*label471) (h:*label471)
+  382 label *label471
+  383 set :moveToEmpty:x .coreX
+  384 set :moveToEmpty:y .coreY
+  385 setaddr :moveToEmpty*retaddr *label472 (h:*label472)
+  386 call *label20 *invalid :moveToEmpty*retval (m:*label472) (h:*label472)
+  387 label *label472
+  388 setaddr :dropAll*retaddr *label473 (h:*label473)
+  389 call *label21 *invalid :dropAll*retval (m:*label473) (h:*label473)
+  390 label *label473
+  391 label *label474
+  392 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  393 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  394 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
+  395 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  396 op land *tmp174 *tmp172 *tmp173
+  397 jump *label475 equal *tmp174 false
+  398 ucontrol itemDrop @air 1000
+  399 label *label475
+  400 label *label476
+  401 label *label477
+  402 sensor *tmp176 @unit :supplyBlockFromCore:item
+  403 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
+  404 sensor *tmp178 .core :supplyBlockFromCore:item
+  405 op land *tmp179 *tmp177 *tmp178
+  406 jump *label474 notEqual *tmp179 false
+  407 label *label478
+  408 set :depositItems:block :supplyBlockFromCore:target
+  409 set :depositItems:item :supplyBlockFromCore:item
+  410 setaddr :depositItems*retaddr *label479 (h:*label479)
+  411 call *label23 *invalid :depositItems*retval (m:*label479) (h:*label479)
+  412 label *label479
+  413 label *label480
   414 label *label159
   415 label *label156
   416 label *label157

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   370 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   371 op min :supplyBlockFromCore:cap *tmp169 28
   372 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
+  373 set :transportStatus:item @coal
   374 setaddr :transportStatus*retaddr *label470 (h:*label470)
   375 call *label17 *invalid :transportStatus*retval (m:*label470) (h:*label470)
   376 label *label470

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
    64 label *label62
    65 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    66 jump *label64 notEqual *tmp105 false
+   67 label *label481
    68 ucontrol approach :moveTo:x :moveTo:y *tmp107
    69 label *label63
-    * jump *label62 always
+   70 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+   71 jump *label481 equal *tmp105 false
    72 label *label64
    73 label *label60
    74 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
    95 label *label73
    96 sensor *tmp113 @unit @firstItem
    97 jump *label75 equal *tmp113 null
+   98 label *label482
    99 ucontrol itemDrop @air 1000
   100 label *label74
-    * jump *label73 always
+  101 sensor *tmp113 @unit @firstItem
+  102 jump *label482 notEqual *tmp113 null
   103 label *label75
   104 label *label72
   105 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   134 label *label86
   135 sensor *tmp125 @unit @firstItem
   136 jump *label88 equal *tmp125 null
+  137 label *label483
   138 ucontrol itemDrop @air 1000
   139 label *label87
-    * jump *label86 always
+  140 sensor *tmp125 @unit @firstItem
+  141 jump *label483 notEqual *tmp125 null
   142 label *label88
   143 label *label81
   144 set :transportStatus:target 0

Modifications by Replicate loop condition at BuilderController.mnd:428:9 (+1 instructions):
 
  1237 label *label373
  1238 read *tmp51 processor3 ".locations"
  1239 jump *label375 greaterThanEq :buildTitaniumDrills:current *tmp51
+ 1240 label *label484
  1241 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1242 op add *tmp421 :buildTitaniumDrills:index 1
  1243 read :buildTitaniumDrills:size bank1 *tmp421
 
  1311 label *label377
  1312 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1313 label *label374
-    * jump *label373 always
+ 1314 read *tmp51 processor3 ".locations"
+ 1315 jump *label484 lessThan :buildTitaniumDrills:current *tmp51
  1316 label *label375
  1317 jump *label385 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1318 jump *label372 always

Modifications by Inline function call at Actions.mnd:88:5:
 
   143 label *label81
   144 set :transportStatus:target 0
   145 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label89 (h:*label89)
-    * call *label17 *invalid :transportStatus*retval (m:*label89) (h:*label89)
-    * label *label89
+  146 label *label485
+  147 write :transportStatus:target processor2 ".transportTarget"
+  148 write :transportStatus:item processor2 ".transportItem"
+  149 label *label486
   150 label *label78
   151 return :depositItems*retaddr
   152 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   144 set :transportStatus:target 0
   145 set :transportStatus:item null
   146 label *label485
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  147 write 0 processor2 ".transportTarget"
+  148 write null processor2 ".transportItem"
   149 label *label486
   150 label *label78
   151 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   141 jump *label483 notEqual *tmp125 null
   142 label *label88
   143 label *label81
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   144 label *label485
   145 write 0 processor2 ".transportTarget"
   146 write null processor2 ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
    50 label *label56
    51 return :status2*retaddr
    52 end
-    * label *label17
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
-    * label *label58
-    * return :transportStatus*retaddr
-    * end
    53 label *label19
    54 label *label450
    55 write "Moving..." processor2 ".status3"
 
   146 op min :mineOre:amount :mineOre:amount 28
   147 set :transportStatus:target :mineOre:amount
   148 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label95 (h:*label95)
-    * call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
-    * label *label95
+  149 label *label487
+  150 write :transportStatus:target processor2 ".transportTarget"
+  151 write :transportStatus:item processor2 ".transportItem"
+  152 label *label488
   153 label *label463
   154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   155 jump *label466 notEqual *tmp127 false
 
   251 sensor *tmp151 :fetchBlock:block @itemCapacity
   252 op min :transportStatus:target *tmp151 28
   253 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label122 (h:*label122)
-    * call *label17 *invalid :transportStatus*retval (m:*label122) (h:*label122)
-    * label *label122
+  254 label *label489
+  255 write :transportStatus:target processor2 ".transportTarget"
+  256 write :transportStatus:item processor2 ".transportItem"
+  257 label *label490
   258 set :status2:text "Fetching "
   259 set :status2:item :fetchBlock:item
   260 set :status2:block :fetchBlock:block
 
   372 op min :supplyBlockFromCore:cap *tmp169 28
   373 set :transportStatus:target :supplyBlockFromCore:cap
   374 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label470 (h:*label470)
-    * call *label17 *invalid :transportStatus*retval (m:*label470) (h:*label470)
-    * label *label470
+  375 label *label491
+  376 write :transportStatus:target processor2 ".transportTarget"
+  377 write :transportStatus:item processor2 ".transportItem"
+  378 label *label492
   379 set :status2:text "Transferring "
   380 set :status2:item :supplyBlockFromCore:item
   381 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   147 set :transportStatus:target :mineOre:amount
   148 set :transportStatus:item :mineOre:ore
   149 label *label487
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  150 write :mineOre:amount processor2 ".transportTarget"
+  151 write :mineOre:ore processor2 ".transportItem"
   152 label *label488
   153 label *label463
   154 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
 
   253 set :transportStatus:item :fetchBlock:item
   254 label *label489
   255 write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  256 write :fetchBlock:item processor2 ".transportItem"
   257 label *label490
   258 set :status2:text "Fetching "
   259 set :status2:item :fetchBlock:item
 
   373 set :transportStatus:target :supplyBlockFromCore:cap
   374 set :transportStatus:item @coal
   375 label *label491
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  376 write :supplyBlockFromCore:cap processor2 ".transportTarget"
+  377 write @coal processor2 ".transportItem"
   378 label *label492
   379 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
+  380 set :status2:item @coal
   381 set :status2:block :supplyBlockFromCore:target
   382 setaddr :status2*retaddr *label471 (h:*label471)
   383 call *label15 *invalid :status2*retval (m:*label471) (h:*label471)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   145 label *label25
   146 op min :mineOre:amount :mineOre:amount 28
   147 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   148 label *label487
   149 write :mineOre:amount processor2 ".transportTarget"
   150 write :mineOre:ore processor2 ".transportItem"
 
   249 label *label28
   250 sensor *tmp151 :fetchBlock:block @itemCapacity
   251 op min :transportStatus:target *tmp151 28
-    * set :transportStatus:item :fetchBlock:item
   252 label *label489
   253 write :transportStatus:target processor2 ".transportTarget"
   254 write :fetchBlock:item processor2 ".transportItem"
 
   369 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   370 op min :supplyBlockFromCore:cap *tmp169 28
   371 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item @coal
   372 label *label491
   373 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   374 write @coal processor2 ".transportItem"

Modifications by Inline function 'titaniumDrillScore' defined at BuilderController.mnd:374:1 (+20 instructions):
 
  1100 set :buildFirstTitaniumDrillAt*finished true
  1101 jump *label54 always
  1102 end
-    * label *label44
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
-    * jump *label344 always
-    * label *label344
-    * jump *label345 notEqual :getFloor:floor @ore-titanium
-    * label *label346
-    * op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * jump *label343 always
-    * label *label345
-    * jump *label348 equal :getFloor:floor @ore-copper
-    * jump *label348 equal :getFloor:floor @ore-lead
-    * jump *label348 equal :getFloor:floor @ore-scrap
-    * jump *label347 notEqual :getFloor:floor @ore-coal
-    * label *label348
-    * op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * label *label347
-    * label *label343
-    * label *label342
-    * return :titaniumDrillScore*retaddr
-    * end
  1103 label *label45
  1104 jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1105 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
 
  1118 set :titaniumDrillScore:y *tmp397
  1119 set :titaniumDrillScore:positive .positive
  1120 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label356 (h:*label356)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label356) (h:*label356)
-    * label *label356
+ 1121 label *label493
+ 1122 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1123 jump *label494 always
+ 1124 label *label494
+ 1125 jump *label496 notEqual :getFloor:floor @ore-titanium
+ 1126 label *label495
+ 1127 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1128 jump *label499 always
+ 1129 label *label496
+ 1130 jump *label497 equal :getFloor:floor @ore-copper
+ 1131 jump *label497 equal :getFloor:floor @ore-lead
+ 1132 jump *label497 equal :getFloor:floor @ore-scrap
+ 1133 jump *label498 notEqual :getFloor:floor @ore-coal
+ 1134 label *label497
+ 1135 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1136 label *label498
+ 1137 label *label499
+ 1138 label *label500
  1139 set .positive :titaniumDrillScore:positive
  1140 set .negative :titaniumDrillScore:negative
  1141 op sub *tmp399 :buildTitaniumDrill:x 0.5
 
  1144 set :titaniumDrillScore:y *tmp400
  1145 set :titaniumDrillScore:positive .positive
  1146 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label357 (h:*label357)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label357) (h:*label357)
-    * label *label357
+ 1147 label *label501
+ 1148 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1149 jump *label502 always
+ 1150 label *label502
+ 1151 jump *label504 notEqual :getFloor:floor @ore-titanium
+ 1152 label *label503
+ 1153 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1154 jump *label507 always
+ 1155 label *label504
+ 1156 jump *label505 equal :getFloor:floor @ore-copper
+ 1157 jump *label505 equal :getFloor:floor @ore-lead
+ 1158 jump *label505 equal :getFloor:floor @ore-scrap
+ 1159 jump *label506 notEqual :getFloor:floor @ore-coal
+ 1160 label *label505
+ 1161 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1162 label *label506
+ 1163 label *label507
+ 1164 label *label508
  1165 set .positive :titaniumDrillScore:positive
  1166 set .negative :titaniumDrillScore:negative
  1167 op add *tmp402 :buildTitaniumDrill:x 0.5
 
  1170 set :titaniumDrillScore:y *tmp403
  1171 set :titaniumDrillScore:positive .positive
  1172 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label358 (h:*label358)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label358) (h:*label358)
-    * label *label358
+ 1173 label *label509
+ 1174 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1175 jump *label510 always
+ 1176 label *label510
+ 1177 jump *label512 notEqual :getFloor:floor @ore-titanium
+ 1178 label *label511
+ 1179 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1180 jump *label515 always
+ 1181 label *label512
+ 1182 jump *label513 equal :getFloor:floor @ore-copper
+ 1183 jump *label513 equal :getFloor:floor @ore-lead
+ 1184 jump *label513 equal :getFloor:floor @ore-scrap
+ 1185 jump *label514 notEqual :getFloor:floor @ore-coal
+ 1186 label *label513
+ 1187 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1188 label *label514
+ 1189 label *label515
+ 1190 label *label516
  1191 set .positive :titaniumDrillScore:positive
  1192 set .negative :titaniumDrillScore:negative
  1193 op add *tmp405 :buildTitaniumDrill:x 0.5
 
  1196 set :titaniumDrillScore:y *tmp406
  1197 set :titaniumDrillScore:positive .positive
  1198 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label359 (h:*label359)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label359) (h:*label359)
-    * label *label359
+ 1199 label *label517
+ 1200 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1201 jump *label518 always
+ 1202 label *label518
+ 1203 jump *label520 notEqual :getFloor:floor @ore-titanium
+ 1204 label *label519
+ 1205 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1206 jump *label523 always
+ 1207 label *label520
+ 1208 jump *label521 equal :getFloor:floor @ore-copper
+ 1209 jump *label521 equal :getFloor:floor @ore-lead
+ 1210 jump *label521 equal :getFloor:floor @ore-scrap
+ 1211 jump *label522 notEqual :getFloor:floor @ore-coal
+ 1212 label *label521
+ 1213 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1214 label *label522
+ 1215 label *label523
+ 1216 label *label524
  1217 set .positive :titaniumDrillScore:positive
  1218 set .negative :titaniumDrillScore:negative
  1219 op greaterThan *tmp408 .positive .negative

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1119 set :titaniumDrillScore:positive .positive
  1120 set :titaniumDrillScore:negative .negative
  1121 label *label493
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1122 ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
  1123 jump *label494 always
  1124 label *label494
  1125 jump *label496 notEqual :getFloor:floor @ore-titanium
 
  1140 set .negative :titaniumDrillScore:negative
  1141 op sub *tmp399 :buildTitaniumDrill:x 0.5
  1142 op add *tmp400 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp399
+ 1143 set :titaniumDrillScore:x *tmp396
  1144 set :titaniumDrillScore:y *tmp400
  1145 set :titaniumDrillScore:positive .positive
  1146 set :titaniumDrillScore:negative .negative
  1147 label *label501
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1148 ucontrol getBlock *tmp399 *tmp400 *tmp386 *tmp385 :getFloor:floor
  1149 jump *label502 always
  1150 label *label502
  1151 jump *label504 notEqual :getFloor:floor @ore-titanium
 
  1167 op add *tmp402 :buildTitaniumDrill:x 0.5
  1168 op sub *tmp403 :buildTitaniumDrill:y 0.5
  1169 set :titaniumDrillScore:x *tmp402
-    * set :titaniumDrillScore:y *tmp403
+ 1170 set :titaniumDrillScore:y *tmp397
  1171 set :titaniumDrillScore:positive .positive
  1172 set :titaniumDrillScore:negative .negative
  1173 label *label509
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1174 ucontrol getBlock *tmp402 *tmp403 *tmp386 *tmp385 :getFloor:floor
  1175 jump *label510 always
  1176 label *label510
  1177 jump *label512 notEqual :getFloor:floor @ore-titanium
 
  1192 set .negative :titaniumDrillScore:negative
  1193 op add *tmp405 :buildTitaniumDrill:x 0.5
  1194 op add *tmp406 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp405
-    * set :titaniumDrillScore:y *tmp406
+ 1195 set :titaniumDrillScore:x *tmp402
+ 1196 set :titaniumDrillScore:y *tmp400
  1197 set :titaniumDrillScore:positive .positive
  1198 set :titaniumDrillScore:negative .negative
  1199 label *label517
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp386 *tmp385 :getFloor:floor
+ 1200 ucontrol getBlock *tmp405 *tmp406 *tmp386 *tmp385 :getFloor:floor
  1201 jump *label518 always
  1202 label *label518
  1203 jump *label520 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1114 set .negative 0
  1115 op sub *tmp396 :buildTitaniumDrill:x 0.5
  1116 op sub *tmp397 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp397
  1117 set :titaniumDrillScore:positive .positive
  1118 set :titaniumDrillScore:negative .negative
  1119 label *label493
 
  1138 set .negative :titaniumDrillScore:negative
  1139 op sub *tmp399 :buildTitaniumDrill:x 0.5
  1140 op add *tmp400 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp400
  1141 set :titaniumDrillScore:positive .positive
  1142 set :titaniumDrillScore:negative .negative
  1143 label *label501
-    * ucontrol getBlock *tmp399 *tmp400 *tmp386 *tmp385 :getFloor:floor
+ 1144 ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
  1145 jump *label502 always
  1146 label *label502
  1147 jump *label504 notEqual :getFloor:floor @ore-titanium
 
  1162 set .negative :titaniumDrillScore:negative
  1163 op add *tmp402 :buildTitaniumDrill:x 0.5
  1164 op sub *tmp403 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp402
-    * set :titaniumDrillScore:y *tmp397
  1165 set :titaniumDrillScore:positive .positive
  1166 set :titaniumDrillScore:negative .negative
  1167 label *label509
-    * ucontrol getBlock *tmp402 *tmp403 *tmp386 *tmp385 :getFloor:floor
+ 1168 ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
  1169 jump *label510 always
  1170 label *label510
  1171 jump *label512 notEqual :getFloor:floor @ore-titanium
 
  1186 set .negative :titaniumDrillScore:negative
  1187 op add *tmp405 :buildTitaniumDrill:x 0.5
  1188 op add *tmp406 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp402
-    * set :titaniumDrillScore:y *tmp400
  1189 set :titaniumDrillScore:positive .positive
  1190 set :titaniumDrillScore:negative .negative
  1191 label *label517
-    * ucontrol getBlock *tmp405 *tmp406 *tmp386 *tmp385 :getFloor:floor
+ 1192 ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
  1193 jump *label518 always
  1194 label *label518
  1195 jump *label520 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-4 instructions):
 
  1136 label *label500
  1137 set .positive :titaniumDrillScore:positive
  1138 set .negative :titaniumDrillScore:negative
-    * op sub *tmp399 :buildTitaniumDrill:x 0.5
  1139 op add *tmp400 :buildTitaniumDrill:y 0.5
  1140 set :titaniumDrillScore:positive .positive
  1141 set :titaniumDrillScore:negative .negative
 
  1160 set .positive :titaniumDrillScore:positive
  1161 set .negative :titaniumDrillScore:negative
  1162 op add *tmp402 :buildTitaniumDrill:x 0.5
-    * op sub *tmp403 :buildTitaniumDrill:y 0.5
  1163 set :titaniumDrillScore:positive .positive
  1164 set :titaniumDrillScore:negative .negative
  1165 label *label509
 
  1182 label *label516
  1183 set .positive :titaniumDrillScore:positive
  1184 set .negative :titaniumDrillScore:negative
-    * op add *tmp405 :buildTitaniumDrill:x 0.5
-    * op add *tmp406 :buildTitaniumDrill:y 0.5
  1185 set :titaniumDrillScore:positive .positive
  1186 set :titaniumDrillScore:negative .negative
  1187 label *label517

Modifications by Inline function call at Actions.mnd:46:5 (+5 instructions):
 
  1106 set :moveTo:x :buildTitaniumDrill:x
  1107 set :moveTo:y :buildTitaniumDrill:y
  1108 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label355 (h:*label355)
-    * call *label19 *invalid :moveTo*retval (m:*label355) (h:*label355)
-    * label *label355
+ 1109 label *label525
+ 1110 label *label526
+ 1111 write "Moving..." processor2 ".status3"
+ 1112 label *label527
+ 1113 op sub *tmp107 :moveTo:radius 0.5
+ 1114 label *label528
+ 1115 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1116 jump *label531 notEqual *tmp105 false
+ 1117 label *label529
+ 1118 ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1119 label *label530
+ 1120 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1121 jump *label529 equal *tmp105 false
+ 1122 label *label531
+ 1123 label *label532
  1124 label *label354
  1125 set .positive 0
  1126 set .negative 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1110 label *label526
  1111 write "Moving..." processor2 ".status3"
  1112 label *label527
-    * op sub *tmp107 :moveTo:radius 0.5
+ 1113 op sub *tmp107 6 0.5
  1114 label *label528
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1115 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1116 jump *label531 notEqual *tmp105 false
  1117 label *label529
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1118 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
  1119 label *label530
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1120 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1121 jump *label529 equal *tmp105 false
  1122 label *label531
  1123 label *label532

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1103 label *label45
  1104 jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1105 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * set :moveTo:x :buildTitaniumDrill:x
-    * set :moveTo:y :buildTitaniumDrill:y
-    * set :moveTo:radius 6
  1106 label *label525
  1107 label *label526
  1108 write "Moving..." processor2 ".status3"
  1109 label *label527
-    * op sub *tmp107 6 0.5
  1110 label *label528
  1111 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1112 jump *label531 notEqual *tmp105 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (+1 instructions):
 
    50 label *label56
    51 return :status2*retaddr
    52 end
-    * label *label19
-    * label *label450
-    * write "Moving..." processor2 ".status3"
-    * label *label451
-    * op sub *tmp107 :moveTo:radius 0.5
-    * label *label62
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label64 notEqual *tmp105 false
-    * label *label481
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
-    * label *label63
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label481 equal *tmp105 false
-    * label *label64
-    * label *label60
-    * return :moveTo*retaddr
-    * end
    53 label *label20
    54 label *label452
    55 write "Moving..." processor2 ".status3"
 
    93 set :moveTo:x *tmp115
    94 set :moveTo:y *tmp116
    95 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label461 (h:*label461)
-    * call *label19 *invalid :moveTo*retval (m:*label461) (h:*label461)
-    * label *label461
+   96 label *label533
+   97 label *label534
+   98 write "Moving..." processor2 ".status3"
+   99 label *label535
+  100 op sub *tmp107 :moveTo:radius 0.5
+  101 label *label536
+  102 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  103 jump *label539 notEqual *tmp105 false
+  104 label *label537
+  105 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  106 label *label538
+  107 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  108 jump *label537 equal *tmp105 false
+  109 label *label539
+  110 label *label540
   111 label *label462
   112 sensor :depositItems:cap :depositItems:block @itemCapacity
   113 label *label83
 
   977 set :moveTo:x :buildBlockAtLocal:x
   978 set :moveTo:y :buildBlockAtLocal:y
   979 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label317 (h:*label317)
-    * call *label19 *invalid :moveTo*retval (m:*label317) (h:*label317)
-    * label *label317
+  980 label *label541
+  981 label *label542
+  982 write "Moving..." processor2 ".status3"
+  983 label *label543
+  984 op sub *tmp107 :moveTo:radius 0.5
+  985 label *label544
+  986 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  987 jump *label547 notEqual *tmp105 false
+  988 label *label545
+  989 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  990 label *label546
+  991 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  992 jump *label545 equal *tmp105 false
+  993 label *label547
+  994 label *label548
   995 label *label316
   996 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
   997 jump *label318 equal :buildBlockAtLocal:building null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    97 label *label534
    98 write "Moving..." processor2 ".status3"
    99 label *label535
-    * op sub *tmp107 :moveTo:radius 0.5
+  100 op sub *tmp107 6 0.5
   101 label *label536
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  102 ucontrol within *tmp115 *tmp116 6 *tmp105
   103 jump *label539 notEqual *tmp105 false
   104 label *label537
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  105 ucontrol approach *tmp115 *tmp116 5.5
   106 label *label538
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  107 ucontrol within *tmp115 *tmp116 6 *tmp105
   108 jump *label537 equal *tmp105 false
   109 label *label539
   110 label *label540
 
   981 label *label542
   982 write "Moving..." processor2 ".status3"
   983 label *label543
-    * op sub *tmp107 :moveTo:radius 0.5
+  984 op sub *tmp107 6 0.5
   985 label *label544
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  986 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   987 jump *label547 notEqual *tmp105 false
   988 label *label545
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  989 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 5.5
   990 label *label546
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  991 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   992 jump *label545 equal *tmp105 false
   993 label *label547
   994 label *label548

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
    90 label *label460
    91 sensor *tmp115 :depositItems:block @x
    92 sensor *tmp116 :depositItems:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius 6
    93 label *label533
    94 label *label534
    95 write "Moving..." processor2 ".status3"
    96 label *label535
-    * op sub *tmp107 6 0.5
    97 label *label536
    98 ucontrol within *tmp115 *tmp116 6 *tmp105
    99 jump *label539 notEqual *tmp105 false
 
   970 jump *label54 always
   971 end
   972 label *label43
-    * set :moveTo:x :buildBlockAtLocal:x
-    * set :moveTo:y :buildBlockAtLocal:y
-    * set :moveTo:radius 6
   973 label *label541
   974 label *label542
   975 write "Moving..." processor2 ".status3"
   976 label *label543
-    * op sub *tmp107 6 0.5
   977 label *label544
   978 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   979 jump *label547 notEqual *tmp105 false

Modifications by Inline function call at Actions.mnd:145:5 (+1 instructions):
 
   247 set :status2:text "Fetching "
   248 set :status2:item :fetchBlock:item
   249 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label123 (h:*label123)
-    * call *label15 *invalid :status2*retval (m:*label123) (h:*label123)
-    * label *label123
+  250 label *label549
+  251 write :status2:text processor2 ".status2"
+  252 write :status2:item processor2 ".item2"
+  253 write :status2:block processor2 ".block2"
+  254 label *label550
   255 sensor *tmp153 :fetchBlock:block @x
   256 sensor *tmp154 :fetchBlock:block @y
   257 set :moveToEmpty:x *tmp153

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   248 set :status2:item :fetchBlock:item
   249 set :status2:block :fetchBlock:block
   250 label *label549
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  251 write "Fetching " processor2 ".status2"
+  252 write :fetchBlock:item processor2 ".item2"
+  253 write :fetchBlock:block processor2 ".block2"
   254 label *label550
   255 sensor *tmp153 :fetchBlock:block @x
   256 sensor *tmp154 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   244 write :transportStatus:target processor2 ".transportTarget"
   245 write :fetchBlock:item processor2 ".transportItem"
   246 label *label490
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   247 label *label549
   248 write "Fetching " processor2 ".status2"
   249 write :fetchBlock:item processor2 ".item2"

Modifications by Inline function call at Actions.mnd:139:5 (+1 instructions):
 
   225 set :status2:text "Mining "
   226 set :status2:item :mineOre.2:ore
   227 set :status2:block "core"
-    * setaddr :status2*retaddr *label119 (h:*label119)
-    * call *label15 *invalid :status2*retval (m:*label119) (h:*label119)
-    * label *label119
+  228 label *label551
+  229 write :status2:text processor2 ".status2"
+  230 write :status2:item processor2 ".item2"
+  231 write :status2:block processor2 ".block2"
+  232 label *label552
   233 set :mineOre:ore :mineOre.2:ore
   234 set :mineOre:amount 28
   235 set :mineOre:block .core

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   226 set :status2:item :mineOre.2:ore
   227 set :status2:block "core"
   228 label *label551
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  229 write "Mining " processor2 ".status2"
+  230 write :mineOre.2:ore processor2 ".item2"
+  231 write "core" processor2 ".block2"
   232 label *label552
   233 set :mineOre:ore :mineOre.2:ore
   234 set :mineOre:amount 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   222 return :mineOre.1*retaddr
   223 end
   224 label *label27
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.2:ore
-    * set :status2:block "core"
   225 label *label551
   226 write "Mining " processor2 ".status2"
   227 write :mineOre.2:ore processor2 ".item2"

Modifications by Inline function call at Actions.mnd:147:5 (+3 instructions):
 
   255 setaddr :moveToEmpty*retaddr *label124 (h:*label124)
   256 call *label20 *invalid :moveToEmpty*retval (m:*label124) (h:*label124)
   257 label *label124
-    * setaddr :dropAll*retaddr *label125 (h:*label125)
-    * call *label21 *invalid :dropAll*retval (m:*label125) (h:*label125)
-    * label *label125
+  258 label *label553
+  259 label *label554
+  260 sensor *tmp113 @unit @firstItem
+  261 jump *label557 equal *tmp113 null
+  262 label *label555
+  263 ucontrol itemDrop @air 1000
+  264 label *label556
+  265 sensor *tmp113 @unit @firstItem
+  266 jump *label555 notEqual *tmp113 null
+  267 label *label557
+  268 label *label558
   269 label *label126
   270 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   271 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function call at Actions.mnd:146:5 (+5 instructions):
 
   252 sensor *tmp154 :fetchBlock:block @y
   253 set :moveToEmpty:x *tmp153
   254 set :moveToEmpty:y *tmp154
-    * setaddr :moveToEmpty*retaddr *label124 (h:*label124)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label124) (h:*label124)
-    * label *label124
+  255 label *label559
+  256 label *label560
+  257 write "Moving..." processor2 ".status3"
+  258 label *label561
+  259 label *label562
+  260 sensor *tmp108 @unit @firstItem
+  261 jump *label563 equal *tmp108 null
+  262 ucontrol itemDrop @air 1000
+  263 label *label563
+  264 label *label564
+  265 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  266 label *label565
+  267 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  268 jump *label562 equal *tmp111 false
+  269 label *label566
+  270 label *label567
   271 label *label553
   272 label *label554
   273 sensor *tmp113 @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   262 ucontrol itemDrop @air 1000
   263 label *label563
   264 label *label564
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  265 ucontrol approach *tmp153 *tmp154 5.5
   266 label *label565
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  267 ucontrol within *tmp153 *tmp154 6 *tmp111
   268 jump *label562 equal *tmp111 false
   269 label *label566
   270 label *label567

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   250 label *label550
   251 sensor *tmp153 :fetchBlock:block @x
   252 sensor *tmp154 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp153
-    * set :moveToEmpty:y *tmp154
   253 label *label559
   254 label *label560
   255 write "Moving..." processor2 ".status3"

Modifications by Inline function call at Actions.mnd:119:16 (+35 instructions):
 
   183 label *label107
   184 label *label108
   185 jump *label109 notEqual .noTarget false
-    * setaddr :targetMet*retaddr *label111 (h:*label111)
-    * call *label39 *invalid :targetMet*retval (m:*label111) (h:*label111)
-    * label *label111
+  186 label *label568
+  187 sensor *tmp305 .core @copper
+  188 jump *label569 greaterThanEq *tmp305 copper
+  189 write @copper processor2 ".missing"
+  190 set :targetMet*retval false
+  191 jump *label583 always
+  192 label *label569
+  193 label *label570
+  194 sensor *tmp308 .core @lead
+  195 jump *label571 greaterThanEq *tmp308 lead
+  196 write @lead processor2 ".missing"
+  197 set :targetMet*retval false
+  198 jump *label583 always
+  199 label *label571
+  200 label *label572
+  201 sensor *tmp311 .core @graphite
+  202 jump *label573 greaterThanEq *tmp311 graphite
+  203 write @graphite processor2 ".missing"
+  204 set :targetMet*retval false
+  205 jump *label583 always
+  206 label *label573
+  207 label *label574
+  208 sensor *tmp314 .core @silicon
+  209 jump *label575 greaterThanEq *tmp314 silicon
+  210 write @silicon processor2 ".missing"
+  211 set :targetMet*retval false
+  212 jump *label583 always
+  213 label *label575
+  214 label *label576
+  215 sensor *tmp317 .core @titanium
+  216 jump *label577 greaterThanEq *tmp317 titanium
+  217 write @titanium processor2 ".missing"
+  218 set :targetMet*retval false
+  219 jump *label583 always
+  220 label *label577
+  221 label *label578
+  222 sensor *tmp320 .core @metaglass
+  223 jump *label579 greaterThanEq *tmp320 metaglass
+  224 write @metaglass processor2 ".missing"
+  225 set :targetMet*retval false
+  226 jump *label583 always
+  227 label *label579
+  228 label *label580
+  229 sensor *tmp323 .core @thorium
+  230 jump *label581 greaterThanEq *tmp323 thorium
+  231 write @thorium processor2 ".missing"
+  232 set :targetMet*retval false
+  233 jump *label583 always
+  234 label *label581
+  235 label *label582
+  236 set :targetMet*retval true
+  237 jump *label583 always
+  238 label *label583
   239 jump *label112 equal :targetMet*retval false
   240 jump *label104 always
   241 label *label112

Modifications by Inline function call at Actions.mnd:162:5 (+1 instructions):
 
   356 set :status2:text "Supplying "
   357 set :status2:item :supplyBlock:ore
   358 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label133 (h:*label133)
-    * call *label15 *invalid :status2*retval (m:*label133) (h:*label133)
-    * label *label133
+  359 label *label584
+  360 write :status2:text processor2 ".status2"
+  361 write :status2:item processor2 ".item2"
+  362 write :status2:block processor2 ".block2"
+  363 label *label585
   364 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   365 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   366 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   357 set :status2:item :supplyBlock:ore
   358 set :status2:block :supplyBlock:block
   359 label *label584
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  360 write "Supplying " processor2 ".status2"
+  361 write :supplyBlock:ore processor2 ".item2"
+  362 write :supplyBlock:block processor2 ".block2"
   363 label *label585
   364 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   365 sensor *tmp165 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   353 return :fetchBlock*retaddr
   354 end
   355 label *label29
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   356 label *label584
   357 write "Supplying " processor2 ".status2"
   358 write :supplyBlock:ore processor2 ".item2"

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+1 instructions):
 
    50 label *label56
    51 return :status2*retaddr
    52 end
-    * label *label20
-    * label *label452
-    * write "Moving..." processor2 ".status3"
-    * label *label453
-    * label *label67
-    * sensor *tmp108 @unit @firstItem
-    * jump *label70 equal *tmp108 null
-    * ucontrol itemDrop @air 1000
-    * label *label70
-    * label *label71
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label68
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * jump *label67 equal *tmp111 false
-    * label *label69
-    * label *label65
-    * return :moveToEmpty*retaddr
-    * end
    53 label *label21
    54 label *label73
    55 sensor *tmp113 @unit @firstItem
 
   136 set :mineOre:y :locateOre:y
   137 set :moveToEmpty:x :locateOre:x
   138 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label97 (h:*label97)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
-    * label *label97
+  139 label *label586
+  140 label *label587
+  141 write "Moving..." processor2 ".status3"
+  142 label *label588
+  143 label *label589
+  144 sensor *tmp108 @unit @firstItem
+  145 jump *label590 equal *tmp108 null
+  146 ucontrol itemDrop @air 1000
+  147 label *label590
+  148 label *label591
+  149 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  150 label *label592
+  151 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  152 jump *label589 equal *tmp111 false
+  153 label *label593
+  154 label *label594
   155 sensor *tmp132 @unit @firstItem
   156 jump *label98 equal *tmp132 :mineOre:ore
   157 setaddr :dropAll*retaddr *label100 (h:*label100)
 
   433 label *label471
   434 set :moveToEmpty:x .coreX
   435 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label472 (h:*label472)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label472) (h:*label472)
-    * label *label472
+  436 label *label595
+  437 label *label596
+  438 write "Moving..." processor2 ".status3"
+  439 label *label597
+  440 label *label598
+  441 sensor *tmp108 @unit @firstItem
+  442 jump *label599 equal *tmp108 null
+  443 ucontrol itemDrop @air 1000
+  444 label *label599
+  445 label *label600
+  446 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  447 label *label601
+  448 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  449 jump *label598 equal *tmp111 false
+  450 label *label602
+  451 label *label603
   452 setaddr :dropAll*retaddr *label473 (h:*label473)
   453 call *label21 *invalid :dropAll*retval (m:*label473) (h:*label473)
   454 label *label473

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   146 ucontrol itemDrop @air 1000
   147 label *label590
   148 label *label591
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  149 ucontrol approach :locateOre:x :locateOre:y 5.5
   150 label *label592
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  151 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
   152 jump *label589 equal *tmp111 false
   153 label *label593
   154 label *label594
 
   443 ucontrol itemDrop @air 1000
   444 label *label599
   445 label *label600
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  446 ucontrol approach .coreX .coreY 5.5
   447 label *label601
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  448 ucontrol within .coreX .coreY 6 *tmp111
   449 jump *label598 equal *tmp111 false
   450 label *label602
   451 label *label603

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   134 label *label468
   135 set :mineOre:x :locateOre:x
   136 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   137 label *label586
   138 label *label587
   139 write "Moving..." processor2 ".status3"
 
   429 setaddr :status2*retaddr *label471 (h:*label471)
   430 call *label15 *invalid :status2*retval (m:*label471) (h:*label471)
   431 label *label471
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   432 label *label595
   433 label *label596
   434 write "Moving..." processor2 ".status3"

Modifications by Replicate loop condition at BuilderController.mnd:233:5 (+2 instructions):
 
   873 call *label39 *invalid :targetMet*retval (m:*label286) (h:*label286)
   874 label *label286
   875 jump *label285 notEqual :targetMet*retval false
+  876 label *label604
   877 setaddr :supplyBaseLocal*retaddr *label287 (h:*label287)
   878 call *label38 *invalid :supplyBaseLocal*retval (m:*label287) (h:*label287)
   879 label *label287
   880 label *label284
-    * jump *label283 always
+  881 setaddr :targetMet*retaddr *label605 (h:*label605)
+  882 call *label39 *invalid :targetMet*retval (m:*label605) (h:*label605)
+  883 label *label605
+  884 jump *label604 equal :targetMet*retval false
   885 label *label285
   886 jump *label288 equal :meetTargetLocal:forBuild false
   887 write false AÕFFJS-micro-processor9 ":buildStart*finished"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-3 instructions):
 
    43 wait 1e12
    44 jump *label54 always
    45 end
-    * label *label15
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
-    * label *label56
-    * return :status2*retaddr
-    * end
    46 label *label21
    47 label *label73
    48 sensor *tmp113 @unit @firstItem
 
   245 set :status2:text "Mining "
   246 set :status2:item :mineOre.1:ore
   247 set :status2:block :mineOre.1:block
-    * setaddr :status2*retaddr *label116 (h:*label116)
-    * call *label15 *invalid :status2*retval (m:*label116) (h:*label116)
-    * label *label116
+  248 label *label606
+  249 write :status2:text processor2 ".status2"
+  250 write :status2:item processor2 ".item2"
+  251 write :status2:block processor2 ".block2"
+  252 label *label607
   253 set :mineOre:ore :mineOre.1:ore
   254 set :mineOre:amount 28
   255 set :mineOre:block :mineOre.1:block
 
   421 set :status2:text "Transferring "
   422 set :status2:item @coal
   423 set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label471 (h:*label471)
-    * call *label15 *invalid :status2*retval (m:*label471) (h:*label471)
-    * label *label471
+  424 label *label608
+  425 write :status2:text processor2 ".status2"
+  426 write :status2:item processor2 ".item2"
+  427 write :status2:block processor2 ".block2"
+  428 label *label609
   429 label *label595
   430 label *label596
   431 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   246 set :status2:item :mineOre.1:ore
   247 set :status2:block :mineOre.1:block
   248 label *label606
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  249 write "Mining " processor2 ".status2"
+  250 write :mineOre.1:ore processor2 ".item2"
+  251 write :mineOre.1:block processor2 ".block2"
   252 label *label607
   253 set :mineOre:ore :mineOre.1:ore
   254 set :mineOre:amount 28
 
   422 set :status2:item @coal
   423 set :status2:block :supplyBlockFromCore:target
   424 label *label608
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  425 write "Transferring " processor2 ".status2"
+  426 write @coal processor2 ".item2"
+  427 write :supplyBlockFromCore:target processor2 ".block2"
   428 label *label609
   429 label *label595
   430 label *label596

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   242 return :mineOre*retaddr
   243 end
   244 label *label26
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block :mineOre.1:block
   245 label *label606
   246 write "Mining " processor2 ".status2"
   247 write :mineOre.1:ore processor2 ".item2"
 
   415 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   416 write @coal processor2 ".transportItem"
   417 label *label492
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block :supplyBlockFromCore:target
   418 label *label608
   419 write "Transferring " processor2 ".status2"
   420 write @coal processor2 ".item2"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
    43 wait 1e12
    44 jump *label54 always
    45 end
-    * label *label21
-    * label *label73
-    * sensor *tmp113 @unit @firstItem
-    * jump *label75 equal *tmp113 null
-    * label *label482
-    * ucontrol itemDrop @air 1000
-    * label *label74
-    * sensor *tmp113 @unit @firstItem
-    * jump *label482 notEqual *tmp113 null
-    * label *label75
-    * label *label72
-    * return :dropAll*retaddr
-    * end
    46 label *label23
    47 label *label454
    48 write "Depositing..." processor2 ".status3"
 
   132 label *label594
   133 sensor *tmp132 @unit @firstItem
   134 jump *label98 equal *tmp132 :mineOre:ore
-    * setaddr :dropAll*retaddr *label100 (h:*label100)
-    * call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
-    * label *label100
+  135 label *label610
+  136 label *label611
+  137 sensor *tmp113 @unit @firstItem
+  138 jump *label614 equal *tmp113 null
+  139 label *label612
+  140 ucontrol itemDrop @air 1000
+  141 label *label613
+  142 sensor *tmp113 @unit @firstItem
+  143 jump *label612 notEqual *tmp113 null
+  144 label *label614
+  145 label *label615
   146 label *label98
   147 label *label99
   148 label *label456
 
   431 jump *label598 equal *tmp111 false
   432 label *label602
   433 label *label603
-    * setaddr :dropAll*retaddr *label473 (h:*label473)
-    * call *label21 *invalid :dropAll*retval (m:*label473) (h:*label473)
-    * label *label473
+  434 label *label616
+  435 label *label617
+  436 sensor *tmp113 @unit @firstItem
+  437 jump *label620 equal *tmp113 null
+  438 label *label618
+  439 ucontrol itemDrop @air 1000
+  440 label *label619
+  441 sensor *tmp113 @unit @firstItem
+  442 jump *label618 notEqual *tmp113 null
+  443 label *label620
+  444 label *label621
   445 label *label474
   446 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
   447 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   158 jump *label104 always
   159 label *label105
   160 label *label106
-    * ucontrol mine :mineOre:x :mineOre:y
+  161 ucontrol mine :locateOre:x :locateOre:y
   162 jump *label107 lessThanEq @second :mineOre:stop
   163 jump *label104 always
   164 label *label107
 
   443 label *label620
   444 label *label621
   445 label *label474
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  446 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   447 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   448 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  449 op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal
   450 op land *tmp174 *tmp172 *tmp173
   451 jump *label475 equal *tmp174 false
   452 ucontrol itemDrop @air 1000
   453 label *label475
   454 label *label476
   455 label *label477
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
+  456 sensor *tmp176 @unit @coal
   457 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
+  458 sensor *tmp178 .core @coal
   459 op land *tmp179 *tmp177 *tmp178
   460 jump *label474 notEqual *tmp179 false
   461 label *label478
   462 set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  463 set :depositItems:item @coal
   464 setaddr :depositItems*retaddr *label479 (h:*label479)
   465 call *label23 *invalid :depositItems*retval (m:*label479) (h:*label479)
   466 label *label479

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   112 label *label466
   113 label *label467
   114 label *label468
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   115 label *label586
   116 label *label587
   117 write "Moving..." processor2 ".status3"
 
   399 jump *label159 always
   400 label *label158
   401 set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   402 label *label469
   403 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   404 op min :supplyBlockFromCore:cap *tmp169 28

Modifications by Replicate loop condition at BuilderController.mnd:239:9 (+2 instructions):
 
   886 call *label39 *invalid :targetMet*retval (m:*label294) (h:*label294)
   887 label *label294
   888 jump *label293 notEqual :targetMet*retval false
+  889 label *label622
   890 setaddr :supplyBaseLocal*retaddr *label295 (h:*label295)
   891 call *label38 *invalid :supplyBaseLocal*retval (m:*label295) (h:*label295)
   892 label *label295
   893 label *label292
-    * jump *label291 always
+  894 setaddr :targetMet*retaddr *label623 (h:*label623)
+  895 call *label39 *invalid :targetMet*retval (m:*label623) (h:*label623)
+  896 label *label623
+  897 jump *label622 equal :targetMet*retval false
   898 label *label293
   899 label *label288
   900 label *label289

Modifications by Inline function call at BuilderController.mnd:153:5 (+6 instructions):
 
   489 write "Phase 1: supplying base" processor2 ".status1"
   490 label *label423
   491 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label171 (h:*label171)
-    * call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
-    * label *label171
+  492 label *label624
+  493 label *label625
+  494 write "Mining " processor2 ".status2"
+  495 write :mineOre.2:ore processor2 ".item2"
+  496 write "core" processor2 ".block2"
+  497 label *label626
+  498 set :mineOre:ore :mineOre.2:ore
+  499 set :mineOre:amount 28
+  500 set :mineOre:block .core
+  501 setaddr :mineOre*retaddr *label627 (h:*label627)
+  502 call *label25 *invalid :mineOre*retval (m:*label627) (h:*label627)
+  503 label *label627
+  504 label *label628
   505 label *label169
   506 jump *label168 always
   507 label *label167

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   492 label *label624
   493 label *label625
   494 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  495 write @coal processor2 ".item2"
   496 write "core" processor2 ".block2"
   497 label *label626
-    * set :mineOre:ore :mineOre.2:ore
+  498 set :mineOre:ore @coal
   499 set :mineOre:amount 28
   500 set :mineOre:block .core
   501 setaddr :mineOre*retaddr *label627 (h:*label627)

Modifications by Inline function call at BuilderController.mnd:162:17 (+10 instructions):
 
   393 jump *label158 greaterThanEq *tmp217 50
   394 set :supplyBlock:block .thoriumGenerator
   395 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label160 (h:*label160)
-    * call *label29 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
-    * label *label160
+  396 label *label629
+  397 label *label630
+  398 write "Supplying " processor2 ".status2"
+  399 write :supplyBlock:ore processor2 ".item2"
+  400 write :supplyBlock:block processor2 ".block2"
+  401 label *label631
+  402 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  403 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  404 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  405 jump *label633 lessThanEq :supplyBlock:missing 0
+  406 set :mineOre:ore :supplyBlock:ore
+  407 set :mineOre:amount :supplyBlock:blockCapacity
+  408 set :mineOre:block :supplyBlock:block
+  409 setaddr :mineOre*retaddr *label632 (h:*label632)
+  410 call *label25 *invalid :mineOre*retval (m:*label632) (h:*label632)
+  411 label *label632
+  412 label *label633
+  413 label *label634
+  414 label *label635
   415 jump *label159 always
   416 label *label158
   417 set :supplyBlockFromCore:target .thoriumGenerator

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   396 label *label629
   397 label *label630
   398 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  399 write @coal processor2 ".item2"
   400 write :supplyBlock:block processor2 ".block2"
   401 label *label631
   402 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  403 sensor *tmp165 :supplyBlock:block @coal
   404 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   405 jump *label633 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  406 set :mineOre:ore @coal
   407 set :mineOre:amount :supplyBlock:blockCapacity
   408 set :mineOre:block :supplyBlock:block
   409 setaddr :mineOre*retaddr *label632 (h:*label632)

Modifications by Inline function call at BuilderController.mnd:101:17 (+6 instructions):
 
   625 write "Goal 5: supplying generator" processor2 ".status1"
   626 label *label435
   627 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label212 (h:*label212)
-    * call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
-    * label *label212
+  628 label *label636
+  629 label *label637
+  630 write "Mining " processor2 ".status2"
+  631 write :mineOre.2:ore processor2 ".item2"
+  632 write "core" processor2 ".block2"
+  633 label *label638
+  634 set :mineOre:ore :mineOre.2:ore
+  635 set :mineOre:amount 28
+  636 set :mineOre:block .core
+  637 setaddr :mineOre*retaddr *label639 (h:*label639)
+  638 call *label25 *invalid :mineOre*retval (m:*label639) (h:*label639)
+  639 label *label639
+  640 label *label640
   641 jump *label210 always
   642 label *label209
   643 sensor *tmp267 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   628 label *label636
   629 label *label637
   630 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  631 write @coal processor2 ".item2"
   632 write "core" processor2 ".block2"
   633 label *label638
-    * set :mineOre:ore :mineOre.2:ore
+  634 set :mineOre:ore @coal
   635 set :mineOre:amount 28
   636 set :mineOre:block .core
   637 setaddr :mineOre*retaddr *label639 (h:*label639)

Modifications by Inline function call at BuilderController.mnd:119:21 (+6 instructions):
 
   672 sensor :supplyBase0:sand.1 .core @sand
   673 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   674 set :mineOre.2:ore *tmp281
-    * setaddr :mineOre.2*retaddr *label229 (h:*label229)
-    * call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
-    * label *label229
+  675 label *label641
+  676 label *label642
+  677 write "Mining " processor2 ".status2"
+  678 write :mineOre.2:ore processor2 ".item2"
+  679 write "core" processor2 ".block2"
+  680 label *label643
+  681 set :mineOre:ore :mineOre.2:ore
+  682 set :mineOre:amount 28
+  683 set :mineOre:block .core
+  684 setaddr :mineOre*retaddr *label644 (h:*label644)
+  685 call *label25 *invalid :mineOre*retval (m:*label644) (h:*label644)
+  686 label *label644
+  687 label *label645
   688 label *label216
   689 jump *label214 always
   690 label *label213

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   675 label *label641
   676 label *label642
   677 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  678 write *tmp281 processor2 ".item2"
   679 write "core" processor2 ".block2"
   680 label *label643
-    * set :mineOre:ore :mineOre.2:ore
+  681 set :mineOre:ore *tmp281
   682 set :mineOre:amount 28
   683 set :mineOre:block .core
   684 setaddr :mineOre*retaddr *label644 (h:*label644)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-10 instructions):
 
   613 sensor *tmp255 .core @titanium
   614 op sub *tmp256 titanium *tmp255
   615 op min *tmp254 5 *tmp256
-    * jump *label204 always
   616 label *label204
   617 sensor *tmp258 .titaniumDrill @titanium
   618 jump *label205 greaterThanEq *tmp258 *tmp254
 
  1013 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1014 write 2 AÕFFJS-micro-processor9 "@counter"
  1015 set :buildBlock*retval :buildBlockAtLocal*retval
-    * jump *label301 always
  1016 label *label301
  1017 return :buildBlock*retaddr
  1018 end
 
  1077 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
  1078 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
  1079 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label309 always
  1080 label *label309
  1081 set :buildBlockFromCfg*finished true
  1082 jump *label54 always
 
  1168 label *label336
  1169 label *label333
  1170 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * jump *label315 always
  1171 label *label315
  1172 return :buildBlockAtLocal*retaddr
  1173 end
 
  1182 call *label43 *invalid :buildBlockAtLocal*retval (m:*label338) (h:*label338)
  1183 label *label338
  1184 set :buildBlockAt*retval :buildBlockAtLocal*retval
-    * jump *label337 always
  1185 label *label337
  1186 set :buildBlockAt*finished true
  1187 jump *label54 always
 
  1204 read *tmp382 processor8 ":addTitaniumDrill*finished"
  1205 jump *label341 equal *tmp382 false
  1206 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
-    * jump *label339 always
  1207 label *label339
  1208 set :buildFirstTitaniumDrillAt*finished true
  1209 jump *label54 always
 
  1234 set :titaniumDrillScore:negative .negative
  1235 label *label493
  1236 ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * jump *label494 always
  1237 label *label494
  1238 jump *label496 notEqual :getFloor:floor @ore-titanium
  1239 label *label495
 
  1256 set :titaniumDrillScore:negative .negative
  1257 label *label501
  1258 ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * jump *label502 always
  1259 label *label502
  1260 jump *label504 notEqual :getFloor:floor @ore-titanium
  1261 label *label503
 
  1278 set :titaniumDrillScore:negative .negative
  1279 label *label509
  1280 ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * jump *label510 always
  1281 label *label510
  1282 jump *label512 notEqual :getFloor:floor @ore-titanium
  1283 label *label511
 
  1299 set :titaniumDrillScore:negative .negative
  1300 label *label517
  1301 ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * jump *label518 always
  1302 label *label518
  1303 jump *label520 notEqual :getFloor:floor @ore-titanium
  1304 label *label519

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-4 instructions):
 
   844 label *label40
   845 label *label391
   846 op sign *tmp327 :meetTargetLocal:copper
-    * op add :meetTargetLocal:count 0 *tmp327
+  847 set :meetTargetLocal:count *tmp327
   848 label *label392
   849 label *label395
   850 op sign *tmp327 :meetTargetLocal:lead
 
  1395 op sub *tmp436 :buildTitaniumDrills:y 1
  1396 set :buildTitaniumDrill:x *tmp435
  1397 set :buildTitaniumDrill:y *tmp436
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1398 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1399 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1400 call *label45 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
 
  1406 op add *tmp440 :buildTitaniumDrills:y 1
  1407 set :buildTitaniumDrill:x *tmp439
  1408 set :buildTitaniumDrill:y *tmp440
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1409 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1410 setaddr :buildTitaniumDrill*retaddr *label380 (h:*label380)
  1411 call *label45 *invalid :buildTitaniumDrill*retval (m:*label380) (h:*label380)
 
  1417 op add *tmp444 :buildTitaniumDrills:y 1
  1418 set :buildTitaniumDrill:x *tmp443
  1419 set :buildTitaniumDrill:y *tmp444
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1420 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1421 setaddr :buildTitaniumDrill*retaddr *label381 (h:*label381)
  1422 call *label45 *invalid :buildTitaniumDrill*retval (m:*label381) (h:*label381)
 
  1427 jump *label382 notEqual :buildTitaniumDrills:built 0
  1428 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1429 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1430 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1431 setaddr :buildTitaniumDrill*retaddr *label384 (h:*label384)
  1432 call *label45 *invalid :buildTitaniumDrill*retval (m:*label384) (h:*label384)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   843 end
   844 label *label40
   845 label *label391
-    * op sign *tmp327 :meetTargetLocal:copper
-    * set :meetTargetLocal:count *tmp327
+  846 op sign :meetTargetLocal:count :meetTargetLocal:copper
   847 label *label392
   848 label *label395
   849 op sign *tmp327 :meetTargetLocal:lead

Modifications by Iterated phase, Temp Variables Elimination, pass 2, iteration 1 (-1 instructions):
 
   737 sensor *tmp295 .core @sand
   738 op lessThanEq *tmp296 *tmp294 *tmp295
   739 op or *tmp297 .scrap *tmp296
-    * select *tmp298 notEqual *tmp297 false @coal @sand
-    * set :mineOre.2:ore *tmp298
+  740 select :mineOre.2:ore notEqual *tmp297 false @coal @sand
   741 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   742 call *label27 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
   743 label *label250

Modifications by Inline function call at BuilderController.mnd:62:17 (+10 instructions):
 
   532 label *label425
   533 set :supplyBlock:block AJEMJJ-graphite-press0
   534 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label180 (h:*label180)
-    * call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
-    * label *label180
+  535 label *label646
+  536 label *label647
+  537 write "Supplying " processor2 ".status2"
+  538 write :supplyBlock:ore processor2 ".item2"
+  539 write :supplyBlock:block processor2 ".block2"
+  540 label *label648
+  541 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  542 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  543 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  544 jump *label650 lessThanEq :supplyBlock:missing 0
+  545 set :mineOre:ore :supplyBlock:ore
+  546 set :mineOre:amount :supplyBlock:blockCapacity
+  547 set :mineOre:block :supplyBlock:block
+  548 setaddr :mineOre*retaddr *label649 (h:*label649)
+  549 call *label25 *invalid :mineOre*retval (m:*label649) (h:*label649)
+  550 label *label649
+  551 label *label650
+  552 label *label651
+  553 label *label652
   554 set :supplyBase0:supplied true
   555 label *label177
   556 label *label178

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   535 label *label646
   536 label *label647
   537 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  538 write @coal processor2 ".item2"
   539 write :supplyBlock:block processor2 ".block2"
   540 label *label648
   541 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  542 sensor *tmp165 :supplyBlock:block @coal
   543 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   544 jump *label650 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  545 set :mineOre:ore @coal
   546 set :mineOre:amount :supplyBlock:blockCapacity
   547 set :mineOre:block :supplyBlock:block
   548 setaddr :mineOre*retaddr *label649 (h:*label649)

Modifications by Inline function call at BuilderController.mnd:123:17 (+6 instructions):
 
   709 write "Goal 7: copper requirement" processor2 ".status1"
   710 label *label441
   711 set :mineOre.2:ore @copper
-    * setaddr :mineOre.2*retaddr *label233 (h:*label233)
-    * call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
-    * label *label233
+  712 label *label653
+  713 label *label654
+  714 write "Mining " processor2 ".status2"
+  715 write :mineOre.2:ore processor2 ".item2"
+  716 write "core" processor2 ".block2"
+  717 label *label655
+  718 set :mineOre:ore :mineOre.2:ore
+  719 set :mineOre:amount 28
+  720 set :mineOre:block .core
+  721 setaddr :mineOre*retaddr *label656 (h:*label656)
+  722 call *label25 *invalid :mineOre*retval (m:*label656) (h:*label656)
+  723 label *label656
+  724 label *label657
   725 jump *label231 always
   726 label *label230
   727 sensor *tmp285 .core @lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   712 label *label653
   713 label *label654
   714 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  715 write @copper processor2 ".item2"
   716 write "core" processor2 ".block2"
   717 label *label655
-    * set :mineOre:ore :mineOre.2:ore
+  718 set :mineOre:ore @copper
   719 set :mineOre:amount 28
   720 set :mineOre:block .core
   721 setaddr :mineOre*retaddr *label656 (h:*label656)

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1 (-4 instructions):
 
  1419 op sub *tmp436 :buildTitaniumDrills:y 1
  1420 set :buildTitaniumDrill:x *tmp435
  1421 set :buildTitaniumDrill:y *tmp436
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1422 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1423 call *label45 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
  1424 label *label379
 
  1429 op add *tmp440 :buildTitaniumDrills:y 1
  1430 set :buildTitaniumDrill:x *tmp439
  1431 set :buildTitaniumDrill:y *tmp440
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1432 setaddr :buildTitaniumDrill*retaddr *label380 (h:*label380)
  1433 call *label45 *invalid :buildTitaniumDrill*retval (m:*label380) (h:*label380)
  1434 label *label380
 
  1439 op add *tmp444 :buildTitaniumDrills:y 1
  1440 set :buildTitaniumDrill:x *tmp443
  1441 set :buildTitaniumDrill:y *tmp444
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1442 setaddr :buildTitaniumDrill*retaddr *label381 (h:*label381)
  1443 call *label45 *invalid :buildTitaniumDrill*retval (m:*label381) (h:*label381)
  1444 label *label381
 
  1448 jump *label382 notEqual :buildTitaniumDrills:built 0
  1449 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1450 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1451 setaddr :buildTitaniumDrill*retaddr *label384 (h:*label384)
  1452 call *label45 *invalid :buildTitaniumDrill*retval (m:*label384) (h:*label384)
  1453 label *label384

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    34 ubind @poly
    35 set .builder @unit
    36 ulocate building core false @copper .coreX .coreY *tmp103 .core
-    * label *label52
    37 jump *label51 equal .core null
-    * label *label53
    38 set .sandContainer .core
    39 set *signature "77658b7b93afc77c:v1"
    40 label *label54
 
    42 jump *label54 always
    43 end
    44 label *label23
-    * label *label454
    45 write "Depositing..." processor2 ".status3"
-    * label *label455
    46 sensor *tmp117 @unit @firstItem
    47 jump *label80 notEqual *tmp117 :depositItems:item
-    * label *label460
    48 sensor *tmp115 :depositItems:block @x
    49 sensor *tmp116 :depositItems:block @y
-    * label *label533
-    * label *label534
    50 write "Moving..." processor2 ".status3"
-    * label *label535
-    * label *label536
    51 ucontrol within *tmp115 *tmp116 6 *tmp105
    52 jump *label539 notEqual *tmp105 false
    53 label *label537
    54 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label538
    55 ucontrol within *tmp115 *tmp116 6 *tmp105
    56 jump *label537 equal *tmp105 false
    57 label *label539
-    * label *label540
-    * label *label462
    58 sensor :depositItems:cap :depositItems:block @itemCapacity
    59 label *label83
    60 ucontrol itemDrop :depositItems:block 28
-    * label *label84
    61 sensor *tmp121 @unit @firstItem
    62 op mul *tmp122 *tmp121 :depositItems:cap
    63 sensor *tmp123 :depositItems:block :depositItems:item
    64 jump *label83 greaterThan *tmp122 *tmp123
-    * label *label85
    65 jump *label81 always
    66 label *label80
-    * label *label86
    67 sensor *tmp125 @unit @firstItem
    68 jump *label88 equal *tmp125 null
    69 label *label483
    70 ucontrol itemDrop @air 1000
-    * label *label87
    71 sensor *tmp125 @unit @firstItem
    72 jump *label483 notEqual *tmp125 null
    73 label *label88
    74 label *label81
-    * label *label485
    75 write 0 processor2 ".transportTarget"
    76 write null processor2 ".transportItem"
-    * label *label486
-    * label *label78
    77 return :depositItems*retaddr
    78 end
    79 label *label25
    80 op min :mineOre:amount :mineOre:amount 28
    81 set :transportStatus:target :mineOre:amount
-    * label *label487
    82 write :mineOre:amount processor2 ".transportTarget"
    83 write :mineOre:ore processor2 ".transportItem"
-    * label *label488
-    * label *label463
    84 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
    85 jump *label466 notEqual *tmp127 false
-    * label *label464
    86 set .ERROR "Cannot locate ore"
    87 stop
-    * label *label465
    88 label *label466
-    * label *label467
-    * label *label468
-    * label *label586
-    * label *label587
    89 write "Moving..." processor2 ".status3"
-    * label *label588
    90 label *label589
    91 sensor *tmp108 @unit @firstItem
    92 jump *label590 equal *tmp108 null
    93 ucontrol itemDrop @air 1000
    94 label *label590
-    * label *label591
    95 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label592
    96 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
    97 jump *label589 equal *tmp111 false
-    * label *label593
-    * label *label594
    98 sensor *tmp132 @unit @firstItem
    99 jump *label98 equal *tmp132 :mineOre:ore
-    * label *label610
-    * label *label611
   100 sensor *tmp113 @unit @firstItem
   101 jump *label614 equal *tmp113 null
   102 label *label612
   103 ucontrol itemDrop @air 1000
-    * label *label613
   104 sensor *tmp113 @unit @firstItem
   105 jump *label612 notEqual *tmp113 null
   106 label *label614
-    * label *label615
   107 label *label98
-    * label *label99
-    * label *label456
   108 write "Mining..." processor2 ".status3"
-    * label *label457
   109 op add :mineOre:stop @second 10
   110 label *label102
   111 sensor :mineOre:item @unit @firstItem
 
   115 jump *label105 equal *tmp139 false
   116 jump *label104 always
   117 label *label105
-    * label *label106
   118 ucontrol mine :locateOre:x :locateOre:y
   119 jump *label107 lessThanEq @second :mineOre:stop
   120 jump *label104 always
   121 label *label107
-    * label *label108
   122 jump *label109 notEqual .noTarget false
-    * label *label568
   123 sensor *tmp305 .core @copper
   124 jump *label569 greaterThanEq *tmp305 copper
   125 write @copper processor2 ".missing"
   126 set :targetMet*retval false
   127 jump *label583 always
   128 label *label569
-    * label *label570
   129 sensor *tmp308 .core @lead
   130 jump *label571 greaterThanEq *tmp308 lead
   131 write @lead processor2 ".missing"
   132 set :targetMet*retval false
   133 jump *label583 always
   134 label *label571
-    * label *label572
   135 sensor *tmp311 .core @graphite
   136 jump *label573 greaterThanEq *tmp311 graphite
   137 write @graphite processor2 ".missing"
   138 set :targetMet*retval false
   139 jump *label583 always
   140 label *label573
-    * label *label574
   141 sensor *tmp314 .core @silicon
   142 jump *label575 greaterThanEq *tmp314 silicon
   143 write @silicon processor2 ".missing"
   144 set :targetMet*retval false
   145 jump *label583 always
   146 label *label575
-    * label *label576
   147 sensor *tmp317 .core @titanium
   148 jump *label577 greaterThanEq *tmp317 titanium
   149 write @titanium processor2 ".missing"
   150 set :targetMet*retval false
   151 jump *label583 always
   152 label *label577
-    * label *label578
   153 sensor *tmp320 .core @metaglass
   154 jump *label579 greaterThanEq *tmp320 metaglass
   155 write @metaglass processor2 ".missing"
   156 set :targetMet*retval false
   157 jump *label583 always
   158 label *label579
-    * label *label580
   159 sensor *tmp323 .core @thorium
   160 jump *label581 greaterThanEq *tmp323 thorium
   161 write @thorium processor2 ".missing"
   162 set :targetMet*retval false
   163 jump *label583 always
   164 label *label581
-    * label *label582
   165 set :targetMet*retval true
   166 jump *label583 always
   167 label *label583
   168 jump *label112 equal :targetMet*retval false
   169 jump *label104 always
   170 label *label112
-    * label *label113
   171 label *label109
-    * label *label110
-    * label *label103
   172 sensor *tmp146 @unit @totalItems
   173 jump *label102 lessThan *tmp146 :mineOre:amount
   174 label *label104
 
   178 setaddr :depositItems*retaddr *label114 (h:*label114)
   179 call *label23 *invalid :depositItems*retval (m:*label114) (h:*label114)
   180 label *label114
-    * label *label94
   181 return :mineOre*retaddr
   182 end
   183 label *label26
-    * label *label606
   184 write "Mining " processor2 ".status2"
   185 write :mineOre.1:ore processor2 ".item2"
   186 write :mineOre.1:block processor2 ".block2"
-    * label *label607
   187 set :mineOre:ore :mineOre.1:ore
   188 set :mineOre:amount 28
   189 set :mineOre:block :mineOre.1:block
   190 setaddr :mineOre*retaddr *label117 (h:*label117)
   191 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   192 label *label117
-    * label *label115
   193 return :mineOre.1*retaddr
   194 end
   195 label *label27
-    * label *label551
   196 write "Mining " processor2 ".status2"
   197 write :mineOre.2:ore processor2 ".item2"
   198 write "core" processor2 ".block2"
-    * label *label552
   199 set :mineOre:ore :mineOre.2:ore
   200 set :mineOre:amount 28
   201 set :mineOre:block .core
   202 setaddr :mineOre*retaddr *label120 (h:*label120)
   203 call *label25 *invalid :mineOre*retval (m:*label120) (h:*label120)
   204 label *label120
-    * label *label118
   205 return :mineOre.2*retaddr
   206 end
   207 label *label28
   208 sensor *tmp151 :fetchBlock:block @itemCapacity
   209 op min :transportStatus:target *tmp151 28
-    * label *label489
   210 write :transportStatus:target processor2 ".transportTarget"
   211 write :fetchBlock:item processor2 ".transportItem"
-    * label *label490
-    * label *label549
   212 write "Fetching " processor2 ".status2"
   213 write :fetchBlock:item processor2 ".item2"
   214 write :fetchBlock:block processor2 ".block2"
-    * label *label550
   215 sensor *tmp153 :fetchBlock:block @x
   216 sensor *tmp154 :fetchBlock:block @y
-    * label *label559
-    * label *label560
   217 write "Moving..." processor2 ".status3"
-    * label *label561
   218 label *label562
   219 sensor *tmp108 @unit @firstItem
   220 jump *label563 equal *tmp108 null
   221 ucontrol itemDrop @air 1000
   222 label *label563
-    * label *label564
   223 ucontrol approach *tmp153 *tmp154 5.5
-    * label *label565
   224 ucontrol within *tmp153 *tmp154 6 *tmp111
   225 jump *label562 equal *tmp111 false
-    * label *label566
-    * label *label567
-    * label *label553
-    * label *label554
   226 sensor *tmp113 @unit @firstItem
   227 jump *label557 equal *tmp113 null
   228 label *label555
   229 ucontrol itemDrop @air 1000
-    * label *label556
   230 sensor *tmp113 @unit @firstItem
   231 jump *label555 notEqual *tmp113 null
   232 label *label557
-    * label *label558
   233 label *label126
   234 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   235 sensor :fetchBlock:unitItem @unit @firstItem
 
   239 jump *label129 equal *tmp158 false
   240 ucontrol itemDrop @air 1000
   241 label *label129
-    * label *label130
-    * label *label127
   242 sensor *tmp160 @unit :fetchBlock:item
   243 op lessThan *tmp161 *tmp160 28
   244 sensor *tmp162 :fetchBlock:block :fetchBlock:item
   245 op land *tmp163 *tmp161 *tmp162
   246 jump *label126 notEqual *tmp163 false
-    * label *label128
   247 set :depositItems:block .core
   248 set :depositItems:item :fetchBlock:item
   249 setaddr :depositItems*retaddr *label131 (h:*label131)
   250 call *label23 *invalid :depositItems*retval (m:*label131) (h:*label131)
   251 label *label131
-    * label *label121
   252 return :fetchBlock*retaddr
   253 end
   254 label *label29
-    * label *label584
   255 write "Supplying " processor2 ".status2"
   256 write :supplyBlock:ore processor2 ".item2"
   257 write :supplyBlock:block processor2 ".block2"
-    * label *label585
   258 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   259 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   260 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   266 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   267 label *label136
   268 label *label134
-    * label *label135
-    * label *label132
   269 return :supplyBlock*retaddr
   270 end
   271 label *label32
 
   289 sensor :unpackCfg:ti :unpackCfg:type @titanium
   290 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   291 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label148
   292 return :unpackCfg*retaddr
   293 end
   294 label *label38
 
   298 op max *tmp209 0 *tmp208
   299 write *tmp209 processor7 ".sandTarget"
   300 jump *label150 equal .thoriumContainer false
-    * label *label420
   301 write "Phase 2: servicing thorium drill" processor2 ".status1"
-    * label *label421
   302 sensor *tmp211 .thoriumBattery @totalPower
   303 jump *label154 greaterThanEq *tmp211 2000
   304 sensor *tmp214 .thoriumGenerator @coal
 
   307 jump *label158 greaterThanEq *tmp217 50
   308 set :supplyBlock:block .thoriumGenerator
   309 set :supplyBlock:ore @coal
-    * label *label629
-    * label *label630
   310 write "Supplying " processor2 ".status2"
   311 write @coal processor2 ".item2"
   312 write :supplyBlock:block processor2 ".block2"
-    * label *label631
   313 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   314 sensor *tmp165 :supplyBlock:block @coal
   315 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   321 call *label25 *invalid :mineOre*retval (m:*label632) (h:*label632)
   322 label *label632
   323 label *label633
-    * label *label634
-    * label *label635
   324 jump *label159 always
   325 label *label158
   326 set :supplyBlockFromCore:target .thoriumGenerator
-    * label *label469
   327 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   328 op min :supplyBlockFromCore:cap *tmp169 28
   329 set :transportStatus:target :supplyBlockFromCore:cap
-    * label *label491
   330 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   331 write @coal processor2 ".transportItem"
-    * label *label492
-    * label *label608
   332 write "Transferring " processor2 ".status2"
   333 write @coal processor2 ".item2"
   334 write :supplyBlockFromCore:target processor2 ".block2"
-    * label *label609
-    * label *label595
-    * label *label596
   335 write "Moving..." processor2 ".status3"
-    * label *label597
   336 label *label598
   337 sensor *tmp108 @unit @firstItem
   338 jump *label599 equal *tmp108 null
   339 ucontrol itemDrop @air 1000
   340 label *label599
-    * label *label600
   341 ucontrol approach .coreX .coreY 5.5
-    * label *label601
   342 ucontrol within .coreX .coreY 6 *tmp111
   343 jump *label598 equal *tmp111 false
-    * label *label602
-    * label *label603
-    * label *label616
-    * label *label617
   344 sensor *tmp113 @unit @firstItem
   345 jump *label620 equal *tmp113 null
   346 label *label618
   347 ucontrol itemDrop @air 1000
-    * label *label619
   348 sensor *tmp113 @unit @firstItem
   349 jump *label618 notEqual *tmp113 null
   350 label *label620
-    * label *label621
   351 label *label474
   352 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   353 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   357 jump *label475 equal *tmp174 false
   358 ucontrol itemDrop @air 1000
   359 label *label475
-    * label *label476
-    * label *label477
   360 sensor *tmp176 @unit @coal
   361 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
   362 sensor *tmp178 .core @coal
   363 op land *tmp179 *tmp177 *tmp178
   364 jump *label474 notEqual *tmp179 false
-    * label *label478
   365 set :depositItems:block :supplyBlockFromCore:target
   366 set :depositItems:item @coal
   367 setaddr :depositItems*retaddr *label479 (h:*label479)
   368 call *label23 *invalid :depositItems*retval (m:*label479) (h:*label479)
   369 label *label479
-    * label *label480
   370 label *label159
   371 label *label156
-    * label *label157
   372 label *label154
-    * label *label155
   373 set :fetchBlock:block .thoriumContainer
   374 set :fetchBlock:item @thorium
   375 setaddr :fetchBlock*retaddr *label162 (h:*label162)
 
   378 sensor *tmp220 .core @thorium
   379 jump *label163 lessThanEq *tmp220 400
   380 write 0 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label165
   381 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label166
   382 label *label163
-    * label *label164
-    * label *label152
   383 jump *label151 always
   384 label *label150
   385 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   386 jump *label167 lessThanEq *tmp81 1
-    * label *label422
   387 write "Phase 1: supplying base" processor2 ".status1"
-    * label *label423
   388 set :mineOre.2:ore @coal
-    * label *label624
-    * label *label625
   389 write "Mining " processor2 ".status2"
   390 write @coal processor2 ".item2"
   391 write "core" processor2 ".block2"
-    * label *label626
   392 set :mineOre:ore @coal
   393 set :mineOre:amount 28
   394 set :mineOre:block .core
   395 setaddr :mineOre*retaddr *label627 (h:*label627)
   396 call *label25 *invalid :mineOre*retval (m:*label627) (h:*label627)
   397 label *label627
-    * label *label628
-    * label *label169
   398 jump *label168 always
   399 label *label167
   400 set :supplyBase0:supplied false
 
   403 jump *label175 greaterThanEq *tmp227 graphite
   404 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   405 jump *label177 greaterThanEq *tmp230 5
-    * label *label424
   406 write "Goal 1: graphite requirement" processor2 ".status1"
-    * label *label425
   407 set :supplyBlock:block AJEMJJ-graphite-press0
   408 set :supplyBlock:ore @coal
-    * label *label646
-    * label *label647
   409 write "Supplying " processor2 ".status2"
   410 write @coal processor2 ".item2"
   411 write :supplyBlock:block processor2 ".block2"
-    * label *label648
   412 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   413 sensor *tmp165 :supplyBlock:block @coal
   414 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   420 call *label25 *invalid :mineOre*retval (m:*label649) (h:*label649)
   421 label *label649
   422 label *label650
-    * label *label651
-    * label *label652
   423 set :supplyBase0:supplied true
   424 label *label177
-    * label *label178
   425 label *label175
-    * label *label176
   426 sensor *tmp233 AJTJK-battery1 @totalPower
   427 jump *label181 greaterThanEq *tmp233 .powerTarget
   428 sensor *tmp236 AJRJM-combustion-generator3 @coal
   429 jump *label183 greaterThanEq *tmp236 2
-    * label *label426
   430 write "Goal 4: supplying generator" processor2 ".status1"
-    * label *label427
   431 set :supplyBlock:block AJRJM-combustion-generator3
   432 set :supplyBlock:ore @coal
   433 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   435 label *label186
   436 jump *label172 always
   437 label *label183
-    * label *label184
   438 label *label181
-    * label *label182
   439 sensor *tmp239 .core @silicon
   440 jump *label187 greaterThanEq *tmp239 silicon
   441 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   442 jump *label189 greaterThanEq *tmp242 5
-    * label *label428
   443 write "Goal 2: coal for silicon requirement" processor2 ".status1"
-    * label *label429
   444 set :supplyBlock:block ALMQJN-silicon-smelter4
   445 set :supplyBlock:ore @coal
   446 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   454 jump *label195 equal .scrap false
   455 sensor *tmp249 AXPRJd-pulverizer26 @scrap
   456 jump *label197 greaterThanEq *tmp249 10
-    * label *label430
   457 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
-    * label *label431
   458 set :supplyBlock:block AXPRJd-pulverizer26
   459 set :supplyBlock:ore @scrap
   460 setaddr :supplyBlock*retaddr *label200 (h:*label200)
 
   462 label *label200
   463 set :supplyBase0:supplied true
   464 label *label197
-    * label *label198
   465 jump *label196 always
   466 label *label195
-    * label *label432
   467 write "Goal 3: sand for silicon requirement" processor2 ".status1"
-    * label *label433
   468 set :supplyBlock:block ALMQJN-silicon-smelter4
   469 set :supplyBlock:ore @sand
   470 setaddr :supplyBlock*retaddr *label202 (h:*label202)
 
   473 set :supplyBase0:supplied true
   474 label *label196
   475 label *label193
-    * label *label194
   476 label *label190
   477 label *label187
-    * label *label188
   478 label *label173
-    * label *label174
   479 set *tmp254 100
   480 sensor *tmp252 .core @titanium
   481 jump *label204 greaterThanEq *tmp252 titanium
 
   489 sensor *tmp263 AJTJK-battery1 @totalPower
   490 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   491 jump *label209 greaterThanEq *tmp263 *tmp264
-    * label *label434
   492 write "Goal 5: supplying generator" processor2 ".status1"
-    * label *label435
   493 set :mineOre.2:ore @coal
-    * label *label636
-    * label *label637
   494 write "Mining " processor2 ".status2"
   495 write @coal processor2 ".item2"
   496 write "core" processor2 ".block2"
-    * label *label638
   497 set :mineOre:ore @coal
   498 set :mineOre:amount 28
   499 set :mineOre:block .core
   500 setaddr :mineOre*retaddr *label639 (h:*label639)
   501 call *label25 *invalid :mineOre*retval (m:*label639) (h:*label639)
   502 label *label639
-    * label *label640
   503 jump *label210 always
   504 label *label209
   505 sensor *tmp267 .core @silicon
   506 jump *label213 greaterThanEq *tmp267 silicon
   507 jump *label215 equal .scrap false
-    * label *label436
   508 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label437
   509 jump *label218 equal A¨SSJh-container30 false
   510 sensor :supplyBase0:coal .core @coal
   511 sensor :supplyBase0:sand A¨SSJh-container30 @sand
 
   525 label *label219
   526 jump *label216 always
   527 label *label215
-    * label *label438
   528 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label439
   529 sensor :supplyBase0:coal.1 .core @coal
   530 sensor :supplyBase0:sand.1 .core @sand
   531 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   532 set :mineOre.2:ore *tmp281
-    * label *label641
-    * label *label642
   533 write "Mining " processor2 ".status2"
   534 write *tmp281 processor2 ".item2"
   535 write "core" processor2 ".block2"
-    * label *label643
   536 set :mineOre:ore *tmp281
   537 set :mineOre:amount 28
   538 set :mineOre:block .core
   539 setaddr :mineOre*retaddr *label644 (h:*label644)
   540 call *label25 *invalid :mineOre*retval (m:*label644) (h:*label644)
   541 label *label644
-    * label *label645
   542 label *label216
   543 jump *label214 always
   544 label *label213
   545 sensor *tmp282 .core @copper
   546 jump *label230 greaterThanEq *tmp282 copper
-    * label *label440
   547 write "Goal 7: copper requirement" processor2 ".status1"
-    * label *label441
   548 set :mineOre.2:ore @copper
-    * label *label653
-    * label *label654
   549 write "Mining " processor2 ".status2"
   550 write @copper processor2 ".item2"
   551 write "core" processor2 ".block2"
-    * label *label655
   552 set :mineOre:ore @copper
   553 set :mineOre:amount 28
   554 set :mineOre:block .core
   555 setaddr :mineOre*retaddr *label656 (h:*label656)
   556 call *label25 *invalid :mineOre*retval (m:*label656) (h:*label656)
   557 label *label656
-    * label *label657
   558 jump *label231 always
   559 label *label230
   560 sensor *tmp285 .core @lead
   561 jump *label234 greaterThanEq *tmp285 lead
-    * label *label442
   562 write "Goal 8: lead requirement" processor2 ".status1"
-    * label *label443
   563 set :mineOre.2:ore @lead
   564 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   565 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
 
   568 label *label234
   569 sensor *tmp288 .core @metaglass
   570 jump *label238 greaterThanEq *tmp288 metaglass
-    * label *label444
   571 write "Goal 9: metaglass requirement" processor2 ".status1"
-    * label *label445
   572 jump *label241 equal .scrap false
   573 set :mineOre.1:ore @scrap
   574 set :mineOre.1:block .sandContainer
 
   584 label *label242
   585 jump *label239 always
   586 label *label238
-    * label *label446
   587 write "Goal 10: supplying base" processor2 ".status1"
-    * label *label447
   588 jump *label246 notEqual A¨SSJh-container30 null
   589 sensor *tmp294 .core @coal
   590 sensor *tmp295 .core @sand
 
   620 label *label214
   621 label *label210
   622 label *label207
-    * label *label208
   623 jump *label206 always
   624 label *label205
-    * label *label448
   625 write "Goal 11: Fetching titanium" processor2 ".status1"
-    * label *label449
   626 set :fetchBlock:block .titaniumDrill
   627 set :fetchBlock:item @titanium
   628 setaddr :fetchBlock*retaddr *label256 (h:*label256)
 
   632 label *label172
   633 label *label168
   634 label *label151
-    * label *label149
   635 return :supplyBaseLocal*retaddr
   636 end
   637 label *label39
 
   641 set :targetMet*retval false
   642 jump *label257 always
   643 label *label258
-    * label *label259
   644 sensor *tmp308 .core @lead
   645 jump *label260 greaterThanEq *tmp308 lead
   646 write @lead processor2 ".missing"
   647 set :targetMet*retval false
   648 jump *label257 always
   649 label *label260
-    * label *label261
   650 sensor *tmp311 .core @graphite
   651 jump *label262 greaterThanEq *tmp311 graphite
   652 write @graphite processor2 ".missing"
   653 set :targetMet*retval false
   654 jump *label257 always
   655 label *label262
-    * label *label263
   656 sensor *tmp314 .core @silicon
   657 jump *label264 greaterThanEq *tmp314 silicon
   658 write @silicon processor2 ".missing"
   659 set :targetMet*retval false
   660 jump *label257 always
   661 label *label264
-    * label *label265
   662 sensor *tmp317 .core @titanium
   663 jump *label266 greaterThanEq *tmp317 titanium
   664 write @titanium processor2 ".missing"
   665 set :targetMet*retval false
   666 jump *label257 always
   667 label *label266
-    * label *label267
   668 sensor *tmp320 .core @metaglass
   669 jump *label268 greaterThanEq *tmp320 metaglass
   670 write @metaglass processor2 ".missing"
   671 set :targetMet*retval false
   672 jump *label257 always
   673 label *label268
-    * label *label269
   674 sensor *tmp323 .core @thorium
   675 jump *label270 greaterThanEq *tmp323 thorium
   676 write @thorium processor2 ".missing"
   677 set :targetMet*retval false
   678 jump *label257 always
   679 label *label270
-    * label *label271
   680 set :targetMet*retval true
   681 jump *label257 always
   682 label *label257
   683 return :targetMet*retaddr
   684 end
   685 label *label40
-    * label *label391
   686 op sign :meetTargetLocal:count :meetTargetLocal:copper
-    * label *label392
-    * label *label395
   687 op sign *tmp327 :meetTargetLocal:lead
   688 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label396
-    * label *label399
   689 op sign *tmp327 :meetTargetLocal:graphite
   690 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label400
-    * label *label403
   691 op sign *tmp327 :meetTargetLocal:silicon
   692 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label404
-    * label *label407
   693 op sign *tmp327 :meetTargetLocal:titanium
   694 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label408
-    * label *label411
   695 op sign *tmp327 :meetTargetLocal:metaglass
   696 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label412
-    * label *label415
   697 op sign *tmp327 :meetTargetLocal:thorium
   698 op add :meetTargetLocal:count :meetTargetLocal:count *tmp327
-    * label *label416
-    * label *label275
   699 write :meetTargetLocal:count processor2 ".totalTargets"
   700 write :meetTargetLocal:block processor2 ".nextBlock"
   701 write :meetTargetLocal:copper processor2 ".targetCopper"
 
   729 write *tmp337 AÕFFJS-micro-processor9 ".graphiteReserve"
   730 write lead processor7 ".leadTarget"
   731 write :meetTargetLocal:copper processor7 ".copperTarget"
-    * label *label283
   732 setaddr :targetMet*retaddr *label286 (h:*label286)
   733 call *label39 *invalid :targetMet*retval (m:*label286) (h:*label286)
   734 label *label286
 
   737 setaddr :supplyBaseLocal*retaddr *label287 (h:*label287)
   738 call *label38 *invalid :supplyBaseLocal*retval (m:*label287) (h:*label287)
   739 label *label287
-    * label *label284
   740 setaddr :targetMet*retaddr *label605 (h:*label605)
   741 call *label39 *invalid :targetMet*retval (m:*label605) (h:*label605)
   742 label *label605
 
   749 wait 1e-15
   750 read *tmp341 AÕFFJS-micro-processor9 ":buildStart*finished"
   751 jump *label290 equal *tmp341 false
-    * label *label291
   752 setaddr :targetMet*retaddr *label294 (h:*label294)
   753 call *label39 *invalid :targetMet*retval (m:*label294) (h:*label294)
   754 label *label294
 
   757 setaddr :supplyBaseLocal*retaddr *label295 (h:*label295)
   758 call *label38 *invalid :supplyBaseLocal*retval (m:*label295) (h:*label295)
   759 label *label295
-    * label *label292
   760 setaddr :targetMet*retaddr *label623 (h:*label623)
   761 call *label39 *invalid :targetMet*retval (m:*label623) (h:*label623)
   762 label *label623
   763 jump *label622 equal :targetMet*retval false
   764 label *label293
   765 label *label288
-    * label *label289
-    * label *label272
   766 return :meetTargetLocal*retaddr
   767 end
   768 label *label6
 
   779 setaddr :meetTargetLocal*retaddr *label297 (h:*label297)
   780 call *label40 *invalid :meetTargetLocal*retval (m:*label297) (h:*label297)
   781 label *label297
-    * label *label296
   782 set :meetTarget*finished true
   783 jump *label54 always
   784 end
 
   800 setaddr :meetTargetLocal*retaddr *label300 (h:*label300)
   801 call *label40 *invalid :meetTargetLocal*retval (m:*label300) (h:*label300)
   802 label *label300
-    * label *label298
   803 set :meetTargetCfg*finished true
   804 jump *label54 always
   805 end
 
   830 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   831 write 2 AÕFFJS-micro-processor9 "@counter"
   832 set :buildBlock*retval :buildBlockAtLocal*retval
-    * label *label301
   833 return :buildBlock*retaddr
   834 end
   835 label *label8
 
   858 set :buildRemoteBlock*retval :buildBlock*retval
   859 jump *label304 always
   860 label *label305
-    * label *label306
   861 set :buildRemoteBlock*retval false
   862 jump *label304 always
   863 label *label304
 
   892 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
   893 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
   894 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label309
   895 set :buildBlockFromCfg*finished true
   896 jump *label54 always
   897 end
   898 label *label43
-    * label *label541
-    * label *label542
   899 write "Moving..." processor2 ".status3"
-    * label *label543
-    * label *label544
   900 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   901 jump *label547 notEqual *tmp105 false
   902 label *label545
   903 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 5.5
-    * label *label546
   904 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   905 jump *label545 equal *tmp105 false
   906 label *label547
-    * label *label548
-    * label *label316
   907 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
   908 jump *label318 equal :buildBlockAtLocal:building null
   909 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   910 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
   911 jump *label315 always
   912 label *label320
-    * label *label321
   913 set .ERROR "Cannot build at position"
   914 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
   915 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
   916 set .ERROR_X :buildBlockAtLocal:x
   917 set .ERROR_Y :buildBlockAtLocal:y
   918 stop
-    * label *label322
   919 label *label318
-    * label *label319
   920 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
   921 wait 0.25
   922 set :buildBlockAtLocal:success false
 
   933 set .ERROR_X :buildBlockAtLocal:x
   934 set .ERROR_Y :buildBlockAtLocal:y
   935 stop
-    * label *label328
   936 jump *label327 always
   937 label *label326
   938 set :buildBlockAtLocal:success true
 
   944 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
   945 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
   946 label *label331
-    * label *label332
   947 label *label329
-    * label *label330
-    * label *label324
   948 jump *label323 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * label *label325
   949 control enabled processor6 true
   950 ubind .builder
   951 sensor :log:encodedId :buildBlockAtLocal:block @id
 
   956 op mul *tmp375 *tmp0 1000
   957 op add *tmp376 :log:encodedId *tmp375
   958 write *tmp376 bank1 *tmp372
-    * label *label334
   959 jump *label335 lessThan :buildBlockAtLocal:index 0
   960 op shl *tmp379 1 :buildBlockAtLocal:index
   961 read *tmp7 processor2 ".blocksBuilt"
 
   963 write *tmp380 processor2 ".blocksBuilt"
   964 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
   965 label *label335
-    * label *label336
-    * label *label333
   966 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
   967 label *label315
   968 return :buildBlockAtLocal*retaddr
 
   978 call *label43 *invalid :buildBlockAtLocal*retval (m:*label338) (h:*label338)
   979 label *label338
   980 set :buildBlockAt*retval :buildBlockAtLocal*retval
-    * label *label337
   981 set :buildBlockAt*finished true
   982 jump *label54 always
   983 end
 
   999 read *tmp382 processor8 ":addTitaniumDrill*finished"
  1000 jump *label341 equal *tmp382 false
  1001 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
-    * label *label339
  1002 set :buildFirstTitaniumDrillAt*finished true
  1003 jump *label54 always
  1004 end
  1005 label *label45
  1006 jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
  1007 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
-    * label *label525
-    * label *label526
  1008 write "Moving..." processor2 ".status3"
-    * label *label527
-    * label *label528
  1009 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1010 jump *label531 notEqual *tmp105 false
  1011 label *label529
  1012 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
-    * label *label530
  1013 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1014 jump *label529 equal *tmp105 false
  1015 label *label531
-    * label *label532
-    * label *label354
  1016 set .positive 0
  1017 set .negative 0
  1018 op sub *tmp396 :buildTitaniumDrill:x 0.5
  1019 op sub *tmp397 :buildTitaniumDrill:y 0.5
  1020 set :titaniumDrillScore:positive .positive
  1021 set :titaniumDrillScore:negative .negative
-    * label *label493
  1022 ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * label *label494
  1023 jump *label496 notEqual :getFloor:floor @ore-titanium
-    * label *label495
  1024 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1025 jump *label499 always
  1026 label *label496
 
  1032 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1033 label *label498
  1034 label *label499
-    * label *label500
  1035 set .positive :titaniumDrillScore:positive
  1036 set .negative :titaniumDrillScore:negative
  1037 op add *tmp400 :buildTitaniumDrill:y 0.5
  1038 set :titaniumDrillScore:positive .positive
  1039 set :titaniumDrillScore:negative .negative
-    * label *label501
  1040 ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * label *label502
  1041 jump *label504 notEqual :getFloor:floor @ore-titanium
-    * label *label503
  1042 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1043 jump *label507 always
  1044 label *label504
 
  1050 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1051 label *label506
  1052 label *label507
-    * label *label508
  1053 set .positive :titaniumDrillScore:positive
  1054 set .negative :titaniumDrillScore:negative
  1055 op add *tmp402 :buildTitaniumDrill:x 0.5
  1056 set :titaniumDrillScore:positive .positive
  1057 set :titaniumDrillScore:negative .negative
-    * label *label509
  1058 ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
-    * label *label510
  1059 jump *label512 notEqual :getFloor:floor @ore-titanium
-    * label *label511
  1060 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1061 jump *label515 always
  1062 label *label512
 
  1068 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1069 label *label514
  1070 label *label515
-    * label *label516
  1071 set .positive :titaniumDrillScore:positive
  1072 set .negative :titaniumDrillScore:negative
  1073 set :titaniumDrillScore:positive .positive
  1074 set :titaniumDrillScore:negative .negative
-    * label *label517
  1075 ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
-    * label *label518
  1076 jump *label520 notEqual :getFloor:floor @ore-titanium
-    * label *label519
  1077 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1078 jump *label523 always
  1079 label *label520
 
  1085 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1086 label *label522
  1087 label *label523
-    * label *label524
  1088 set .positive :titaniumDrillScore:positive
  1089 set .negative :titaniumDrillScore:negative
  1090 op greaterThan *tmp408 .positive .negative
 
  1111 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1112 op min *tmp416 :buildTitaniumDrill:count 8
  1113 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label366
  1114 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1115 set :buildTitaniumDrill*retval .positive
  1116 jump *label349 always
  1117 label *label363
-    * label *label364
  1118 label *label360
-    * label *label361
  1119 label *label352
-    * label *label353
  1120 label *label350
-    * label *label351
  1121 set :buildTitaniumDrill*retval 0
  1122 jump *label349 always
  1123 label *label349
 
  1129 jump *label368 equal .scrap false
  1130 op add .MAX_TILES .MAX_TILES 4
  1131 label *label368
-    * label *label369
  1132 wait 0.0001
  1133 wait 0.0001
  1134 label *label370
-    * label *label373
  1135 read *tmp51 processor3 ".locations"
  1136 jump *label375 greaterThanEq :buildTitaniumDrills:current *tmp51
  1137 label *label484
 
  1195 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1196 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1197 label *label382
-    * label *label383
  1198 label *label376
-    * label *label377
  1199 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
-    * label *label374
  1200 read *tmp51 processor3 ".locations"
  1201 jump *label484 lessThan :buildTitaniumDrills:current *tmp51
  1202 label *label375
  1203 jump *label385 lessThan :buildTitaniumDrills:tiles .MAX_TILES
  1204 jump *label372 always
  1205 label *label385
-    * label *label386
  1206 jump *label387 lessThan :buildTitaniumDrills:count .MAX_COUNT
  1207 jump *label372 always
  1208 label *label387
-    * label *label388
-    * label *label371
  1209 read *tmp52 processor3 ".searchFinished"
  1210 jump *label370 equal *tmp52 false
  1211 label *label372
-    * label *label367
  1212 set :buildTitaniumDrills*finished true
  1213 jump *label54 always
  1214 end
 
  1216 setaddr :supplyBaseLocal*retaddr *label390 (h:*label390)
  1217 call *label38 *invalid :supplyBaseLocal*retval (m:*label390) (h:*label390)
  1218 label *label390
-    * label *label389
  1219 set :supplyBase*finished true
  1220 jump *label54 always
  1221 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-5 instructions):
 
   112 op notEqual *tmp137 :mineOre:item null
   113 op notEqual *tmp138 :mineOre:item :mineOre:ore
   114 op land *tmp139 *tmp137 *tmp138
-    * jump *label105 equal *tmp139 false
-    * jump *label104 always
+  115 jump *label104 notEqual *tmp139 false
   116 label *label105
   117 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label107 lessThanEq @second :mineOre:stop
-    * jump *label104 always
+  118 jump *label104 greaterThan @second :mineOre:stop
   119 label *label107
   120 jump *label109 notEqual .noTarget false
   121 sensor *tmp305 .core @copper
 
   163 set :targetMet*retval true
   164 jump *label583 always
   165 label *label583
-    * jump *label112 equal :targetMet*retval false
-    * jump *label104 always
+  166 jump *label104 notEqual :targetMet*retval false
   167 label *label112
   168 label *label109
   169 sensor *tmp146 @unit @totalItems
 
  1197 read *tmp51 processor3 ".locations"
  1198 jump *label484 lessThan :buildTitaniumDrills:current *tmp51
  1199 label *label375
-    * jump *label385 lessThan :buildTitaniumDrills:tiles .MAX_TILES
-    * jump *label372 always
+ 1200 jump *label372 greaterThanEq :buildTitaniumDrills:tiles .MAX_TILES
  1201 label *label385
-    * jump *label387 lessThan :buildTitaniumDrills:count .MAX_COUNT
-    * jump *label372 always
+ 1202 jump *label372 greaterThanEq :buildTitaniumDrills:count .MAX_COUNT
  1203 label *label387
  1204 read *tmp52 processor3 ".searchFinished"
  1205 jump *label370 equal *tmp52 false

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
   113 op notEqual *tmp138 :mineOre:item :mineOre:ore
   114 op land *tmp139 *tmp137 *tmp138
   115 jump *label104 notEqual *tmp139 false
-    * label *label105
   116 ucontrol mine :locateOre:x :locateOre:y
   117 jump *label104 greaterThan @second :mineOre:stop
-    * label *label107
   118 jump *label109 notEqual .noTarget false
   119 sensor *tmp305 .core @copper
   120 jump *label569 greaterThanEq *tmp305 copper
 
   162 jump *label583 always
   163 label *label583
   164 jump *label104 notEqual :targetMet*retval false
-    * label *label112
   165 label *label109
   166 sensor *tmp146 @unit @totalItems
   167 jump *label102 lessThan *tmp146 :mineOre:amount
 
  1195 jump *label484 lessThan :buildTitaniumDrills:current *tmp51
  1196 label *label375
  1197 jump *label372 greaterThanEq :buildTitaniumDrills:tiles .MAX_TILES
-    * label *label385
  1198 jump *label372 greaterThanEq :buildTitaniumDrills:count .MAX_COUNT
-    * label *label387
  1199 read *tmp52 processor3 ".searchFinished"
  1200 jump *label370 equal *tmp52 false
  1201 label *label372

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
   307 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   308 sensor *tmp165 :supplyBlock:block @coal
   309 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * jump *label633 lessThanEq :supplyBlock:missing 0
+  310 jump *label159 lessThanEq :supplyBlock:missing 0
   311 set :mineOre:ore @coal
   312 set :mineOre:amount :supplyBlock:blockCapacity
   313 set :mineOre:block :supplyBlock:block
-    * setaddr :mineOre*retaddr *label632 (h:*label632)
+  314 setaddr :mineOre*retaddr *label159 (h:*label632)
   315 call *label25 *invalid :mineOre*retval (m:*label632) (h:*label632)
   316 label *label632
   317 label *label633
 
   370 call *label28 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   371 label *label162
   372 sensor *tmp220 .core @thorium
-    * jump *label163 lessThanEq *tmp220 400
+  373 jump *label151 lessThanEq *tmp220 400
   374 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   375 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   376 label *label163
-    * jump *label151 always
+  377 return :supplyBaseLocal*retaddr
   378 label *label150
   379 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   380 jump *label167 lessThanEq *tmp81 1
 
   389 setaddr :mineOre*retaddr *label627 (h:*label627)
   390 call *label25 *invalid :mineOre*retval (m:*label627) (h:*label627)
   391 label *label627
-    * jump *label168 always
+  392 return :supplyBaseLocal*retaddr
   393 label *label167
   394 set :supplyBase0:supplied false
   395 jump *label173 notEqual A©JNJP-unloader6 null
 
   427 setaddr :supplyBlock*retaddr *label186 (h:*label186)
   428 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   429 label *label186
-    * jump *label172 always
+  430 return :supplyBaseLocal*retaddr
   431 label *label183
   432 label *label181
   433 sensor *tmp239 .core @silicon
 
   447 jump *label193 greaterThanEq *tmp245 5
   448 jump *label195 equal .scrap false
   449 sensor *tmp249 AXPRJd-pulverizer26 @scrap
-    * jump *label197 greaterThanEq *tmp249 10
+  450 jump *label196 greaterThanEq *tmp249 10
   451 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   452 set :supplyBlock:block AXPRJd-pulverizer26
   453 set :supplyBlock:ore @scrap
 
   479 label *label204
   480 sensor *tmp258 .titaniumDrill @titanium
   481 jump *label205 greaterThanEq *tmp258 *tmp254
-    * jump *label207 notEqual :supplyBase0:supplied false
+  482 jump *label206 notEqual :supplyBase0:supplied false
   483 sensor *tmp263 AJTJK-battery1 @totalPower
   484 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   485 jump *label209 greaterThanEq *tmp263 *tmp264
 
   494 setaddr :mineOre*retaddr *label639 (h:*label639)
   495 call *label25 *invalid :mineOre*retval (m:*label639) (h:*label639)
   496 label *label639
-    * jump *label210 always
+  497 return :supplyBaseLocal*retaddr
   498 label *label209
   499 sensor *tmp267 .core @silicon
   500 jump *label213 greaterThanEq *tmp267 silicon
 
   510 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   511 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   512 label *label224
-    * jump *label219 always
+  513 return :supplyBaseLocal*retaddr
   514 label *label218
   515 set :mineOre.2:ore @coal
   516 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   517 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   518 label *label225
   519 label *label219
-    * jump *label216 always
+  520 return :supplyBaseLocal*retaddr
   521 label *label215
   522 write "Goal 6: silicon requirement" processor2 ".status1"
   523 sensor :supplyBase0:coal.1 .core @coal
 
   534 call *label25 *invalid :mineOre*retval (m:*label644) (h:*label644)
   535 label *label644
   536 label *label216
-    * jump *label214 always
+  537 return :supplyBaseLocal*retaddr
   538 label *label213
   539 sensor *tmp282 .core @copper
   540 jump *label230 greaterThanEq *tmp282 copper
 
   549 setaddr :mineOre*retaddr *label656 (h:*label656)
   550 call *label25 *invalid :mineOre*retval (m:*label656) (h:*label656)
   551 label *label656
-    * jump *label231 always
+  552 return :supplyBaseLocal*retaddr
   553 label *label230
   554 sensor *tmp285 .core @lead
   555 jump *label234 greaterThanEq *tmp285 lead
 
   558 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   559 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
   560 label *label237
-    * jump *label235 always
+  561 return :supplyBaseLocal*retaddr
   562 label *label234
   563 sensor *tmp288 .core @metaglass
   564 jump *label238 greaterThanEq *tmp288 metaglass
 
   569 setaddr :mineOre.1*retaddr *label243 (h:*label243)
   570 call *label26 *invalid :mineOre.1*retval (m:*label243) (h:*label243)
   571 label *label243
-    * jump *label242 always
+  572 return :supplyBaseLocal*retaddr
   573 label *label241
   574 set :mineOre.2:ore @sand
   575 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   576 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   577 label *label244
   578 label *label242
-    * jump *label239 always
+  579 return :supplyBaseLocal*retaddr
   580 label *label238
   581 write "Goal 10: supplying base" processor2 ".status1"
   582 jump *label246 notEqual A¨SSJh-container30 null
 
   588 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   589 call *label27 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
   590 label *label250
-    * jump *label247 always
+  591 return :supplyBaseLocal*retaddr
   592 label *label246
   593 sensor *tmp299 .core @coal
   594 sensor *tmp300 A¨SSJh-container30 @sand
 
   599 setaddr :mineOre.2*retaddr *label253 (h:*label253)
   600 call *label27 *invalid :mineOre.2*retval (m:*label253) (h:*label253)
   601 label *label253
-    * jump *label252 always
+  602 return :supplyBaseLocal*retaddr
   603 label *label251
   604 set :mineOre.1:ore @scrap
   605 set :mineOre.1:block A¨SSJh-container30
 
   614 label *label214
   615 label *label210
   616 label *label207
-    * jump *label206 always
+  617 return :supplyBaseLocal*retaddr
   618 label *label205
   619 write "Goal 11: Fetching titanium" processor2 ".status1"
   620 set :fetchBlock:block .titaniumDrill
 
   633 jump *label258 greaterThanEq *tmp305 copper
   634 write @copper processor2 ".missing"
   635 set :targetMet*retval false
-    * jump *label257 always
+  636 return :targetMet*retaddr
   637 label *label258
   638 sensor *tmp308 .core @lead
   639 jump *label260 greaterThanEq *tmp308 lead
   640 write @lead processor2 ".missing"
   641 set :targetMet*retval false
-    * jump *label257 always
+  642 return :targetMet*retaddr
   643 label *label260
   644 sensor *tmp311 .core @graphite
   645 jump *label262 greaterThanEq *tmp311 graphite
   646 write @graphite processor2 ".missing"
   647 set :targetMet*retval false
-    * jump *label257 always
+  648 return :targetMet*retaddr
   649 label *label262
   650 sensor *tmp314 .core @silicon
   651 jump *label264 greaterThanEq *tmp314 silicon
   652 write @silicon processor2 ".missing"
   653 set :targetMet*retval false
-    * jump *label257 always
+  654 return :targetMet*retaddr
   655 label *label264
   656 sensor *tmp317 .core @titanium
   657 jump *label266 greaterThanEq *tmp317 titanium
   658 write @titanium processor2 ".missing"
   659 set :targetMet*retval false
-    * jump *label257 always
+  660 return :targetMet*retaddr
   661 label *label266
   662 sensor *tmp320 .core @metaglass
   663 jump *label268 greaterThanEq *tmp320 metaglass
   664 write @metaglass processor2 ".missing"
   665 set :targetMet*retval false
-    * jump *label257 always
+  666 return :targetMet*retaddr
   667 label *label268
   668 sensor *tmp323 .core @thorium
   669 jump *label270 greaterThanEq *tmp323 thorium
   670 write @thorium processor2 ".missing"
   671 set :targetMet*retval false
-    * jump *label257 always
+  672 return :targetMet*retaddr
   673 label *label270
   674 set :targetMet*retval true
-    * jump *label257 always
+  675 return :targetMet*retaddr
   676 label *label257
   677 return :targetMet*retaddr
   678 end
 
   902 jump *label318 equal :buildBlockAtLocal:building null
   903 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   904 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * jump *label315 always
+  905 return :buildBlockAtLocal*retaddr
   906 label *label320
   907 set .ERROR "Cannot build at position"
   908 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
 
  1107 write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"
  1108 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1109 set :buildTitaniumDrill*retval .positive
-    * jump *label349 always
+ 1110 return :buildTitaniumDrill*retaddr
  1111 label *label363
  1112 label *label360
  1113 label *label352
  1114 label *label350
  1115 set :buildTitaniumDrill*retval 0
-    * jump *label349 always
+ 1116 return :buildTitaniumDrill*retaddr
  1117 label *label349
  1118 return :buildTitaniumDrill*retaddr
  1119 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-25 instructions):
 
    40 label *label54
    41 wait 1e12
    42 jump *label54 always
-    * end
    43 label *label23
    44 write "Depositing..." processor2 ".status3"
    45 sensor *tmp117 @unit @firstItem
 
    74 write 0 processor2 ".transportTarget"
    75 write null processor2 ".transportItem"
    76 return :depositItems*retaddr
-    * end
    77 label *label25
    78 op min :mineOre:amount :mineOre:amount 28
    79 set :transportStatus:target :mineOre:amount
 
   171 call *label23 *invalid :depositItems*retval (m:*label114) (h:*label114)
   172 label *label114
   173 return :mineOre*retaddr
-    * end
   174 label *label26
   175 write "Mining " processor2 ".status2"
   176 write :mineOre.1:ore processor2 ".item2"
 
   182 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   183 label *label117
   184 return :mineOre.1*retaddr
-    * end
   185 label *label27
   186 write "Mining " processor2 ".status2"
   187 write :mineOre.2:ore processor2 ".item2"
 
   193 call *label25 *invalid :mineOre*retval (m:*label120) (h:*label120)
   194 label *label120
   195 return :mineOre.2*retaddr
-    * end
   196 label *label28
   197 sensor *tmp151 :fetchBlock:block @itemCapacity
   198 op min :transportStatus:target *tmp151 28
 
   239 call *label23 *invalid :depositItems*retval (m:*label131) (h:*label131)
   240 label *label131
   241 return :fetchBlock*retaddr
-    * end
   242 label *label29
   243 write "Supplying " processor2 ".status2"
   244 write :supplyBlock:ore processor2 ".item2"
 
   255 label *label136
   256 label *label134
   257 return :supplyBlock*retaddr
-    * end
   258 label *label32
   259 read *tmp181 :unpackCfg:cfg 1
   260 op sub *tmp182 *tmp181 74
 
   277 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   278 sensor :unpackCfg:th :unpackCfg:type @thorium
   279 return :unpackCfg*retaddr
-    * end
   280 label *label38
   281 op add *tmp206 .siliconMonoSurplus silicon
   282 sensor *tmp207 .core @silicon
 
   305 set :mineOre:block :supplyBlock:block
   306 setaddr :mineOre*retaddr *label159 (h:*label632)
   307 call *label25 *invalid :mineOre*retval (m:*label632) (h:*label632)
-    * label *label632
-    * label *label633
-    * jump *label159 always
   308 label *label158
   309 set :supplyBlockFromCore:target .thoriumGenerator
   310 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
 
   362 jump *label151 lessThanEq *tmp220 400
   363 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   364 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label163
   365 return :supplyBaseLocal*retaddr
   366 label *label150
   367 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   443 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   444 label *label200
   445 set :supplyBase0:supplied true
-    * label *label197
   446 jump *label196 always
   447 label *label195
   448 write "Goal 3: sand for silicon requirement" processor2 ".status1"
 
   503 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   504 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   505 label *label225
-    * label *label219
   506 return :supplyBaseLocal*retaddr
   507 label *label215
   508 write "Goal 6: silicon requirement" processor2 ".status1"
 
   519 setaddr :mineOre*retaddr *label644 (h:*label644)
   520 call *label25 *invalid :mineOre*retval (m:*label644) (h:*label644)
   521 label *label644
-    * label *label216
   522 return :supplyBaseLocal*retaddr
   523 label *label213
   524 sensor *tmp282 .core @copper
 
   560 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   561 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   562 label *label244
-    * label *label242
   563 return :supplyBaseLocal*retaddr
   564 label *label238
   565 write "Goal 10: supplying base" processor2 ".status1"
 
   590 setaddr :mineOre.1*retaddr *label254 (h:*label254)
   591 call *label26 *invalid :mineOre.1*retval (m:*label254) (h:*label254)
   592 label *label254
-    * label *label252
-    * label *label247
-    * label *label239
-    * label *label235
-    * label *label231
-    * label *label214
-    * label *label210
-    * label *label207
   593 return :supplyBaseLocal*retaddr
   594 label *label205
   595 write "Goal 11: Fetching titanium" processor2 ".status1"
 
   599 call *label28 *invalid :fetchBlock*retval (m:*label256) (h:*label256)
   600 label *label256
   601 label *label206
-    * label *label172
-    * label *label168
   602 label *label151
   603 return :supplyBaseLocal*retaddr
-    * end
   604 label *label39
   605 sensor *tmp305 .core @copper
   606 jump *label258 greaterThanEq *tmp305 copper
 
   646 label *label270
   647 set :targetMet*retval true
   648 return :targetMet*retaddr
-    * label *label257
-    * return :targetMet*retaddr
-    * end
   649 label *label40
   650 op sign :meetTargetLocal:count :meetTargetLocal:copper
   651 op sign *tmp327 :meetTargetLocal:lead
 
   728 label *label293
   729 label *label288
   730 return :meetTargetLocal*retaddr
-    * end
   731 label *label6
   732 set :meetTargetLocal:block :meetTarget:block
   733 set :meetTargetLocal:copper :meetTarget:copper
 
   744 label *label297
   745 set :meetTarget*finished true
   746 jump *label54 always
-    * end
   747 label *label7
   748 set :unpackCfg:cfg :meetTargetCfg:cfg
   749 setaddr :unpackCfg*retaddr *label299 (h:*label299)
 
   764 label *label300
   765 set :meetTargetCfg*finished true
   766 jump *label54 always
-    * end
   767 label *label41
   768 op notEqual *tmp344 AÕFFJS-micro-processor9 null
   769 set :meetTargetLocal:block :buildBlock:block
 
   792 write 2 AÕFFJS-micro-processor9 "@counter"
   793 set :buildBlock*retval :buildBlockAtLocal*retval
   794 return :buildBlock*retaddr
-    * end
   795 label *label8
   796 op add *tmp345 :buildRemoteBlock:x :buildRemoteBlock:y
   797 jump *label305 lessThanEq *tmp345 0
 
   823 label *label304
   824 set :buildRemoteBlock*finished true
   825 jump *label54 always
-    * end
   826 label *label9
   827 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   828 setaddr :unpackCfg*retaddr *label310 (h:*label310)
 
   853 set :buildBlockFromCfg*retval :buildBlock*retval
   854 set :buildBlockFromCfg*finished true
   855 jump *label54 always
-    * end
   856 label *label43
   857 write "Moving..." processor2 ".status3"
   858 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
 
   922 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
   923 label *label335
   924 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * label *label315
   925 return :buildBlockAtLocal*retaddr
-    * end
   926 label *label10
   927 set :buildBlockAtLocal:block :buildBlockAt:block
   928 set :buildBlockAtLocal:x :buildBlockAt:x
 
   936 set :buildBlockAt*retval :buildBlockAtLocal*retval
   937 set :buildBlockAt*finished true
   938 jump *label54 always
-    * end
   939 label *label11
   940 set :buildBlockAtLocal:block @pneumatic-drill
   941 set :buildBlockAtLocal:x :buildFirstTitaniumDrillAt:x
 
   956 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
   957 set :buildFirstTitaniumDrillAt*finished true
   958 jump *label54 always
-    * end
   959 label *label45
   960 jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_COUNT
   961 jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_TILES
 
  1074 label *label350
  1075 set :buildTitaniumDrill*retval 0
  1076 return :buildTitaniumDrill*retaddr
-    * label *label349
-    * return :buildTitaniumDrill*retaddr
-    * end
  1077 label *label12
  1078 set :buildTitaniumDrills:count 1
  1079 set :buildTitaniumDrills:tiles 0
 
  1158 label *label372
  1159 set :buildTitaniumDrills*finished true
  1160 jump *label54 always
-    * end
  1161 label *label13
  1162 setaddr :supplyBaseLocal*retaddr *label390 (h:*label390)
  1163 call *label38 *invalid :supplyBaseLocal*retval (m:*label390) (h:*label390)
  1164 label *label390
  1165 set :supplyBase*finished true
  1166 jump *label54 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    33 label *label51
    34 ubind @poly
    35 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp103 .core
+   36 ulocate building core false @copper .coreX .coreY 0 .core
    37 jump *label51 equal .core null
    38 set .sandContainer .core
    39 set *signature "77658b7b93afc77c:v1"
 
    79 set :transportStatus:target :mineOre:amount
    80 write :mineOre:amount processor2 ".transportTarget"
    81 write :mineOre:ore processor2 ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+   82 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 0
    83 jump *label466 notEqual *tmp127 false
    84 set .ERROR "Cannot locate ore"
    85 stop
 
   862 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   863 jump *label545 equal *tmp105 false
   864 label *label547
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
+  865 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building 0
   866 jump *label318 equal :buildBlockAtLocal:building null
   867 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   868 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
 
   880 set :buildBlockAtLocal:success false
   881 label *label323
   882 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp359
+  883 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building 0
   884 op equal *tmp360 :buildBlockAtLocal:building null
   885 op equal *tmp361 :buildBlockAtLocal:success false
   886 op land *tmp362 *tmp360 *tmp361
 
   973 op sub *tmp397 :buildTitaniumDrill:y 0.5
   974 set :titaniumDrillScore:positive .positive
   975 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp396 *tmp397 *tmp386 *tmp385 :getFloor:floor
+  976 ucontrol getBlock *tmp396 *tmp397 0 0 :getFloor:floor
   977 jump *label496 notEqual :getFloor:floor @ore-titanium
   978 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
   979 jump *label499 always
 
   991 op add *tmp400 :buildTitaniumDrill:y 0.5
   992 set :titaniumDrillScore:positive .positive
   993 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp396 *tmp400 *tmp386 *tmp385 :getFloor:floor
+  994 ucontrol getBlock *tmp396 *tmp400 0 0 :getFloor:floor
   995 jump *label504 notEqual :getFloor:floor @ore-titanium
   996 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
   997 jump *label507 always
 
  1009 op add *tmp402 :buildTitaniumDrill:x 0.5
  1010 set :titaniumDrillScore:positive .positive
  1011 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp402 *tmp397 *tmp386 *tmp385 :getFloor:floor
+ 1012 ucontrol getBlock *tmp402 *tmp397 0 0 :getFloor:floor
  1013 jump *label512 notEqual :getFloor:floor @ore-titanium
  1014 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1015 jump *label515 always
 
  1026 set .negative :titaniumDrillScore:negative
  1027 set :titaniumDrillScore:positive .positive
  1028 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp402 *tmp400 *tmp386 *tmp385 :getFloor:floor
+ 1029 ucontrol getBlock *tmp402 *tmp400 0 0 :getFloor:floor
  1030 jump *label520 notEqual :getFloor:floor @ore-titanium
  1031 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1032 jump *label523 always

Final code before resolving virtual instructions:

    0:  jump *label46 always 0 0                                     BuilderController.mnd: #set target = 8;
    1:  jump *label10 always 0 0                                     ...
    2:  jump *label9 always 0 0                                      ...
    3:  jump *label11 always 0 0                                     ...
    4:  jump *label8 always 0 0                                      ...
    5:  jump *label12 always 0 0                                     ...
    6:  jump *label6 always 0 0                                      ...
    7:  jump *label7 always 0 0                                      ...
    8:  jump *label13 always 0 0                                     ...
        label *label46                                               ...
    9:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
        label *label47                                               BuilderController.mnd: require "Display.mnd" remote display;
   10:  read *tmp32 processor2 "*signature"                          ...
   11:  jump *label47 notEqual *tmp32 "0:v1"                         ...
        label *label48                                               BuilderController.mnd: require "OreLocator.mnd" remote oreLocator;
   12:  read *tmp71 processor3 "*signature"                          ...
   13:  jump *label48 notEqual *tmp71 "3290b8c661787058:v1"          ...
        label *label49                                               BuilderController.mnd: require "FlareController.mnd" remote flareController;
   14:  read *tmp93 processor8 "*signature"                          ...
   15:  jump *label49 notEqual *tmp93 "881dde114374c003:v1"          ...
        label *label50                                               BuilderController.mnd: require "MonoController.mnd" remote monoController;
   16:  read *tmp99 processor7 "*signature"                          ...
   17:  jump *label50 notEqual *tmp99 "0:v1"                         ...
   18:  set .leadSurplus 0                                           BuilderController.mnd: remote var
   19:  set .graphiteSurplus 20                                      ...
   20:  set .siliconSurplus 20                                       ...
   21:  set .siliconMonoSurplus 0                                    ...
   22:  set .metaglassSurplus 20                                     ...
   23:  write 511 bank1 511                                          BuilderController.mnd: external bank1[511] logPosition = 511;
   24:  set .positive 0                                              BuilderController.mnd: volatile var positive = 0, negative = 0;
   25:  set .negative 0                                              ...
   26:  set .MAX_TILES 10                                            BuilderController.mnd: var MAX_TILES = 10;
   27:  set .MAX_COUNT 6                                             BuilderController.mnd: var MAX_COUNT = 6;
        label *label51                                               BuilderController.mnd: do
   28:  ubind @poly                                                  BuilderController.mnd: builder = ubind(@poly);
   29:  set .builder @unit                                           ...
   30:  ulocate building core false @copper .coreX .coreY 0 .core    BuilderController.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   31:  jump *label51 equal .core null                               BuilderController.mnd: do
   32:  set .sandContainer .core                                     BuilderController.mnd: sandContainer = core;
   33:  set *signature "77658b7b93afc77c:v1"                         BuilderController.mnd: #set target = 8;
        label *label54                                               ...
   34:  wait 1e12                                                    ...
   35:  jump *label54 always 0 0                                     ...
        label *label23                                               Actions.mnd: void depositItems(block, item)
   36:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
   37:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
   38:  jump *label80 notEqual *tmp117 :depositItems:item            ...
   39:  sensor *tmp115 :depositItems:block @x                        Actions.mnd: moveTo(block.@x, block.@y, radius);
   40:  sensor *tmp116 :depositItems:block @y                        ...
   41:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
   42:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
   43:  jump *label539 notEqual *tmp105 false                        ...
        label *label537                                              ...
   44:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
   45:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
   46:  jump *label537 equal *tmp105 false                           ...
        label *label539                                              ...
   47:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label83                                               Actions.mnd: do
   48:  ucontrol itemDrop :depositItems:block 28 0 0 0               Actions.mnd: itemDrop(block, capacity);
   49:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
   50:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
   51:  sensor *tmp123 :depositItems:block :depositItems:item        ...
   52:  jump *label83 greaterThan *tmp122 *tmp123                    Actions.mnd: do
   53:  jump *label81 always 0 0                                     Actions.mnd: if @unit.@firstItem == item then
        label *label80                                               ...
   54:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   55:  jump *label88 equal *tmp125 null                             ...
        label *label483                                              ...
   56:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
   57:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   58:  jump *label483 notEqual *tmp125 null                         ...
        label *label88                                               ...
        label *label81                                               Actions.mnd: if @unit.@firstItem == item then
   59:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
   60:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
   61:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label25                                               Actions.mnd: void mineOre(ore, amount, block)
   62:  op min :mineOre:amount :mineOre:amount 28                    Actions.mnd: amount = min(amount, capacity);
   63:  set :transportStatus:target :mineOre:amount                  Actions.mnd: transportStatus(amount, ore);
   64:  write :mineOre:amount processor2 ".transportTarget"          Actions.mnd: display.transportTarget = target;
   65:  write :mineOre:ore processor2 ".transportItem"               Actions.mnd: display.transportItem = item;
   66:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   67:  jump *label466 notEqual *tmp127 false                        ...
   68:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
   69:  stop                                                         Actions.mnd: stopProcessor();
        label *label466                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   70:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label589                                              Actions.mnd: do
   71:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
   72:  jump *label590 equal *tmp108 null                            ...
   73:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label590                                              ...
   74:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
   75:  ucontrol within :locateOre:x :locateOre:y 6 *tmp111 0        Actions.mnd: while !within(x, y, RADIUS);
   76:  jump *label589 equal *tmp111 false                           Actions.mnd: do
   77:  sensor *tmp132 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   78:  jump *label98 equal *tmp132 :mineOre:ore                     ...
   79:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   80:  jump *label614 equal *tmp113 null                            ...
        label *label612                                              ...
   81:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
   82:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   83:  jump *label612 notEqual *tmp113 null                         ...
        label *label614                                              ...
        label *label98                                               Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   84:  write "Mining..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
   85:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label102                                              Actions.mnd: do
   86:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
   87:  op notEqual *tmp137 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
   88:  op notEqual *tmp138 :mineOre:item :mineOre:ore               ...
   89:  op land *tmp139 *tmp137 *tmp138                              ...
   90:  jump *label104 notEqual *tmp139 false                        ...
   91:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
   92:  jump *label104 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
   93:  jump *label109 notEqual .noTarget false                      Actions.mnd: if not noTarget then
   94:  sensor *tmp305 .core @copper                                 BuilderController.mnd: if core.@copper < targetCopper then display.missing = @copper; return false; end;
   95:  jump *label569 greaterThanEq *tmp305 copper                  ...
   96:  write @copper processor2 ".missing"                          ...
   97:  set :targetMet*retval false                                  ...
   98:  jump *label583 always 0 0                                    ...
        label *label569                                              ...
   99:  sensor *tmp308 .core @lead                                   BuilderController.mnd: if core.@lead < targetLead then display.missing = @lead; return false; end;
  100:  jump *label571 greaterThanEq *tmp308 lead                    ...
  101:  write @lead processor2 ".missing"                            ...
  102:  set :targetMet*retval false                                  ...
  103:  jump *label583 always 0 0                                    ...
        label *label571                                              ...
  104:  sensor *tmp311 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then display.missing = @graphite; return false; end;
  105:  jump *label573 greaterThanEq *tmp311 graphite                ...
  106:  write @graphite processor2 ".missing"                        ...
  107:  set :targetMet*retval false                                  ...
  108:  jump *label583 always 0 0                                    ...
        label *label573                                              ...
  109:  sensor *tmp314 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then display.missing = @silicon; return false; end;
  110:  jump *label575 greaterThanEq *tmp314 silicon                 ...
  111:  write @silicon processor2 ".missing"                         ...
  112:  set :targetMet*retval false                                  ...
  113:  jump *label583 always 0 0                                    ...
        label *label575                                              ...
  114:  sensor *tmp317 .core @titanium                               BuilderController.mnd: if core.@titanium < targetTitanium then display.missing = @titanium; return false; end;
  115:  jump *label577 greaterThanEq *tmp317 titanium                ...
  116:  write @titanium processor2 ".missing"                        ...
  117:  set :targetMet*retval false                                  ...
  118:  jump *label583 always 0 0                                    ...
        label *label577                                              ...
  119:  sensor *tmp320 .core @metaglass                              BuilderController.mnd: if core.@metaglass < targetMetaglass then display.missing = @metaglass; return false; end;
  120:  jump *label579 greaterThanEq *tmp320 metaglass               ...
  121:  write @metaglass processor2 ".missing"                       ...
  122:  set :targetMet*retval false                                  ...
  123:  jump *label583 always 0 0                                    ...
        label *label579                                              ...
  124:  sensor *tmp323 .core @thorium                                BuilderController.mnd: if core.@thorium < targetThorium then display.missing = @thorium; return false; end;
  125:  jump *label581 greaterThanEq *tmp323 thorium                 ...
  126:  write @thorium processor2 ".missing"                         ...
  127:  set :targetMet*retval false                                  ...
  128:  jump *label583 always 0 0                                    ...
        label *label581                                              ...
  129:  set :targetMet*retval true                                   BuilderController.mnd: return true;
  130:  jump *label583 always 0 0                                    ...
        label *label583                                              Actions.mnd: if targetMet() then
  131:  jump *label104 notEqual :targetMet*retval false              ...
        label *label109                                              Actions.mnd: if not noTarget then
  132:  sensor *tmp146 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  133:  jump *label102 lessThan *tmp146 :mineOre:amount              Actions.mnd: do
        label *label104                                              ...
  134:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  135:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  136:  set :depositItems:item :mineOre:ore                          ...
  137:  setaddr :depositItems*retaddr *label114                      ...
  138:  call *label23 *invalid :depositItems*retval                  ...
        label *label114                                              ...
  139:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label26                                               Actions.mnd: void mineOre(ore, block)
  140:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  141:  write :mineOre.1:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  142:  write :mineOre.1:block processor2 ".block2"                  Actions.mnd: display.block2 = block;
  143:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, block);
  144:  set :mineOre:amount 28                                       ...
  145:  set :mineOre:block :mineOre.1:block                          ...
  146:  setaddr :mineOre*retaddr *label117                           ...
  147:  call *label25 *invalid :mineOre*retval                       ...
        label *label117                                              ...
  148:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore, block)
        label *label27                                               Actions.mnd: void mineOre(ore)
  149:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  150:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  151:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  152:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  153:  set :mineOre:amount 28                                       ...
  154:  set :mineOre:block .core                                     ...
  155:  setaddr :mineOre*retaddr *label120                           ...
  156:  call *label25 *invalid :mineOre*retval                       ...
        label *label120                                              ...
  157:  return :mineOre.2*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label28                                               Actions.mnd: void fetchBlock(block, item)
  158:  sensor *tmp151 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  159:  op min :transportStatus:target *tmp151 28                    ...
  160:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  161:  write :fetchBlock:item processor2 ".transportItem"           Actions.mnd: display.transportItem = item;
  162:  write "Fetching " processor2 ".status2"                      Actions.mnd: display.status2 = text;
  163:  write :fetchBlock:item processor2 ".item2"                   Actions.mnd: display.item2 = item;
  164:  write :fetchBlock:block processor2 ".block2"                 Actions.mnd: display.block2 = block;
  165:  sensor *tmp153 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  166:  sensor *tmp154 :fetchBlock:block @y                          ...
  167:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label562                                              Actions.mnd: do
  168:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  169:  jump *label563 equal *tmp108 null                            ...
  170:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label563                                              ...
  171:  ucontrol approach *tmp153 *tmp154 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  172:  ucontrol within *tmp153 *tmp154 6 *tmp111 0                  Actions.mnd: while !within(x, y, RADIUS);
  173:  jump *label562 equal *tmp111 false                           Actions.mnd: do
  174:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  175:  jump *label557 equal *tmp113 null                            ...
        label *label555                                              ...
  176:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  177:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  178:  jump *label555 notEqual *tmp113 null                         ...
        label *label557                                              ...
        label *label126                                              Actions.mnd: do
  179:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 28 0 0  Actions.mnd: itemTake(block, item, capacity);
  180:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  181:  op notEqual *tmp156 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  182:  op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item    ...
  183:  op land *tmp158 *tmp156 *tmp157                              ...
  184:  jump *label129 equal *tmp158 false                           ...
  185:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label129                                              Actions.mnd: if unitItem != null and unitItem != item then
  186:  sensor *tmp160 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  187:  op lessThan *tmp161 *tmp160 28                               ...
  188:  sensor *tmp162 :fetchBlock:block :fetchBlock:item            ...
  189:  op land *tmp163 *tmp161 *tmp162                              ...
  190:  jump *label126 notEqual *tmp163 false                        Actions.mnd: do
  191:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  192:  set :depositItems:item :fetchBlock:item                      ...
  193:  setaddr :depositItems*retaddr *label131                      ...
  194:  call *label23 *invalid :depositItems*retval                  ...
        label *label131                                              ...
  195:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label29                                               Actions.mnd: void supplyBlock(block, ore)
  196:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  197:  write :supplyBlock:ore processor2 ".item2"                   Actions.mnd: display.item2 = item;
  198:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  199:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  200:  sensor *tmp165 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  201:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  202:  jump *label134 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  203:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  204:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  205:  set :mineOre:block :supplyBlock:block                        ...
  206:  setaddr :mineOre*retaddr *label136                           ...
  207:  call *label25 *invalid :mineOre*retval                       ...
        label *label136                                              ...
        label *label134                                              Actions.mnd: if missing > 0 then
  208:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label32                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  209:  read *tmp181 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  210:  op sub *tmp182 *tmp181 74                                    ...
  211:  lookup block :unpackCfg:type *tmp182                         ...
  212:  read *tmp185 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  213:  op sub *tmp186 *tmp185 74                                    ...
  214:  op div :unpackCfg:x *tmp186 2                                ...
  215:  read *tmp189 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  216:  op sub *tmp190 *tmp189 74                                    ...
  217:  op div :unpackCfg:y *tmp190 2                                ...
  218:  read *tmp193 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  219:  op sub :unpackCfg:rotation *tmp193 74                        ...
  220:  read *tmp196 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  221:  op sub :unpackCfg:ind *tmp196 74                             ...
  222:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  223:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  224:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  225:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  226:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  227:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  228:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  229:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label38                                               BuilderController.mnd: void supplyBaseLocal()
  230:  op add *tmp206 .siliconMonoSurplus silicon                   BuilderController.mnd: monoController.sandTarget = max(0, siliconMonoSurplus + targetSilicon - core.@silicon);
  231:  sensor *tmp207 .core @silicon                                ...
  232:  op sub *tmp208 *tmp206 *tmp207                               ...
  233:  op max *tmp209 0 *tmp208                                     ...
  234:  write *tmp209 processor7 ".sandTarget"                       ...
  235:  jump *label150 equal .thoriumContainer false                 BuilderController.mnd: if thoriumContainer then
  236:  write "Phase 2: servicing thorium drill" processor2 ".status Actions.mnd: display.status1 = text;
  237:  sensor *tmp211 .thoriumBattery @totalPower                   BuilderController.mnd: if thoriumBattery.@totalPower < 2000 then
  238:  jump *label154 greaterThanEq *tmp211 2000                    ...
  239:  sensor *tmp214 .thoriumGenerator @coal                       BuilderController.mnd: if thoriumGenerator.@coal == 0 then
  240:  jump *label156 notEqual *tmp214 0                            ...
  241:  sensor *tmp217 .core @coal                                   BuilderController.mnd: if core.@coal < 50 then
  242:  jump *label158 greaterThanEq *tmp217 50                      ...
  243:  set :supplyBlock:block .thoriumGenerator                     BuilderController.mnd: supplyBlock(thoriumGenerator, @coal);
  244:  set :supplyBlock:ore @coal                                   ...
  245:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  246:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  247:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  248:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  249:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  250:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  251:  jump *label159 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  252:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  253:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  254:  set :mineOre:block :supplyBlock:block                        ...
  255:  setaddr :mineOre*retaddr *label159                           ...
  256:  call *label25 *invalid :mineOre*retval                       ...
        label *label158                                              BuilderController.mnd: if core.@coal < 50 then
  257:  set :supplyBlockFromCore:target .thoriumGenerator            BuilderController.mnd: supplyBlockFromCore(thoriumGenerator, @coal);
  258:  sensor *tmp169 :supplyBlockFromCore:target @itemCapacity     Actions.mnd: var cap = min(target.@itemCapacity, capacity);
  259:  op min :supplyBlockFromCore:cap *tmp169 28                   ...
  260:  set :transportStatus:target :supplyBlockFromCore:cap         Actions.mnd: transportStatus(cap, item);
  261:  write :supplyBlockFromCore:cap processor2 ".transportTarget" Actions.mnd: display.transportTarget = target;
  262:  write @coal processor2 ".transportItem"                      Actions.mnd: display.transportItem = item;
  263:  write "Transferring " processor2 ".status2"                  Actions.mnd: display.status2 = text;
  264:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  265:  write :supplyBlockFromCore:target processor2 ".block2"       Actions.mnd: display.block2 = block;
  266:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label598                                              Actions.mnd: do
  267:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  268:  jump *label599 equal *tmp108 null                            ...
  269:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label599                                              ...
  270:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  271:  ucontrol within .coreX .coreY 6 *tmp111 0                    Actions.mnd: while !within(x, y, RADIUS);
  272:  jump *label598 equal *tmp111 false                           Actions.mnd: do
  273:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  274:  jump *label620 equal *tmp113 null                            ...
        label *label618                                              ...
  275:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  276:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  277:  jump *label618 notEqual *tmp113 null                         ...
        label *label620                                              ...
        label *label474                                              Actions.mnd: do
  278:  ucontrol itemTake .core @coal :supplyBlockFromCore:cap 0 0   Actions.mnd: itemTake(core, item, cap);
  279:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  280:  op notEqual *tmp172 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  281:  op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal      ...
  282:  op land *tmp174 *tmp172 *tmp173                              ...
  283:  jump *label475 equal *tmp174 false                           ...
  284:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label475                                              Actions.mnd: if unitItem != null and unitItem != item then
  285:  sensor *tmp176 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < cap and core.sensor(item);
  286:  op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap         ...
  287:  sensor *tmp178 .core @coal                                   ...
  288:  op land *tmp179 *tmp177 *tmp178                              ...
  289:  jump *label474 notEqual *tmp179 false                        Actions.mnd: do
  290:  set :depositItems:block :supplyBlockFromCore:target          Actions.mnd: depositItems(target, item);
  291:  set :depositItems:item @coal                                 ...
  292:  setaddr :depositItems*retaddr *label479                      ...
  293:  call *label23 *invalid :depositItems*retval                  ...
        label *label479                                              ...
        label *label159                                              BuilderController.mnd: if core.@coal < 50 then
        label *label156                                              BuilderController.mnd: if thoriumGenerator.@coal == 0 then
        label *label154                                              BuilderController.mnd: if thoriumBattery.@totalPower < 2000 then
  294:  set :fetchBlock:block .thoriumContainer                      BuilderController.mnd: fetchBlock(thoriumContainer, @thorium);
  295:  set :fetchBlock:item @thorium                                ...
  296:  setaddr :fetchBlock*retaddr *label162                        ...
  297:  call *label28 *invalid :fetchBlock*retval                    ...
        label *label162                                              ...
  298:  sensor *tmp220 .core @thorium                                BuilderController.mnd: if core.@thorium > 400 then
  299:  jump *label151 lessThanEq *tmp220 400                        ...
  300:  write 0 AÕFFJS-micro-processor9 ".monoTarget"                BuilderController.mnd: processor.monoTarget = target;
  301:  write 4 AÕFFJS-micro-processor9 ".polyTarget"                BuilderController.mnd: processor.polyTarget = target;
  302:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if thoriumContainer then
        label *label150                                              ...
  303:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 BuilderController.mnd: elsif processor.monos > 1 then
  304:  jump *label167 lessThanEq *tmp81 1                           ...
  305:  write "Phase 1: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  306:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  307:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  308:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  309:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  310:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  311:  set :mineOre:amount 28                                       ...
  312:  set :mineOre:block .core                                     ...
  313:  setaddr :mineOre*retaddr *label627                           ...
  314:  call *label25 *invalid :mineOre*retval                       ...
        label *label627                                              ...
  315:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif processor.monos > 1 then
        label *label167                                              ...
  316:  set :supplyBase0:supplied false                              BuilderController.mnd: var supplied = false;
  317:  jump *label173 notEqual A©JNJP-unloader6 null                BuilderController.mnd: if unloader1 == null then
  318:  sensor *tmp227 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then
  319:  jump *label175 greaterThanEq *tmp227 graphite                ...
  320:  sensor *tmp230 AJEMJJ-graphite-press0 @coal                  BuilderController.mnd: if press.@coal < 5 then
  321:  jump *label177 greaterThanEq *tmp230 5                       ...
  322:  write "Goal 1: graphite requirement" processor2 ".status1"   Actions.mnd: display.status1 = text;
  323:  set :supplyBlock:block AJEMJJ-graphite-press0                BuilderController.mnd: supplyBlock(press, @coal);
  324:  set :supplyBlock:ore @coal                                   ...
  325:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  326:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  327:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  328:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  329:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  330:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  331:  jump *label650 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  332:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  333:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  334:  set :mineOre:block :supplyBlock:block                        ...
  335:  setaddr :mineOre*retaddr *label649                           ...
  336:  call *label25 *invalid :mineOre*retval                       ...
        label *label649                                              ...
        label *label650                                              Actions.mnd: if missing > 0 then
  337:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
        label *label177                                              BuilderController.mnd: if press.@coal < 5 then
        label *label175                                              BuilderController.mnd: if core.@graphite < targetGraphite then
  338:  sensor *tmp233 AJTJK-battery1 @totalPower                   BuilderController.mnd: if battery1.@totalPower < powerTarget then
  339:  jump *label181 greaterThanEq *tmp233 .powerTarget            ...
  340:  sensor *tmp236 AJRJM-combustion-generator3 @coal            BuilderController.mnd: if generator.@coal < 2 then
  341:  jump *label183 greaterThanEq *tmp236 2                       ...
  342:  write "Goal 4: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  343:  set :supplyBlock:block AJRJM-combustion-generator3          BuilderController.mnd: supplyBlock(generator, @coal);
  344:  set :supplyBlock:ore @coal                                   ...
  345:  setaddr :supplyBlock*retaddr *label186                       ...
  346:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label186                                              ...
  347:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: return;
        label *label183                                              BuilderController.mnd: if generator.@coal < 2 then
        label *label181                                              BuilderController.mnd: if battery1.@totalPower < powerTarget then
  348:  sensor *tmp239 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then
  349:  jump *label187 greaterThanEq *tmp239 silicon                 ...
  350:  sensor *tmp242 ALMQJN-silicon-smelter4 @coal                 BuilderController.mnd: if smelter.@coal < 5 then
  351:  jump *label189 greaterThanEq *tmp242 5                       ...
  352:  write "Goal 2: coal for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  353:  set :supplyBlock:block ALMQJN-silicon-smelter4               BuilderController.mnd: supplyBlock(smelter, @coal);
  354:  set :supplyBlock:ore @coal                                   ...
  355:  setaddr :supplyBlock*retaddr *label192                       ...
  356:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label192                                              ...
  357:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
  358:  jump *label190 always 0 0                                    BuilderController.mnd: if smelter.@coal < 5 then
        label *label189                                              ...
  359:  sensor *tmp245 ALMQJN-silicon-smelter4 @sand                 BuilderController.mnd: elsif smelter.@sand < 5 then
  360:  jump *label193 greaterThanEq *tmp245 5                       ...
  361:  jump *label195 equal .scrap false                            BuilderController.mnd: if scrap then
  362:  sensor *tmp249 AXPRJd-pulverizer26 @scrap                    BuilderController.mnd: if pulverizer1.@scrap < 10 then
  363:  jump *label196 greaterThanEq *tmp249 10                      ...
  364:  write "Goal 3a: scrap for silicon requirement" processor2 ". Actions.mnd: display.status1 = text;
  365:  set :supplyBlock:block AXPRJd-pulverizer26                   BuilderController.mnd: supplyBlock(pulverizer1, @scrap);
  366:  set :supplyBlock:ore @scrap                                  ...
  367:  setaddr :supplyBlock*retaddr *label200                       ...
  368:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label200                                              ...
  369:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
  370:  jump *label196 always 0 0                                    BuilderController.mnd: if scrap then
        label *label195                                              ...
  371:  write "Goal 3: sand for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  372:  set :supplyBlock:block ALMQJN-silicon-smelter4               BuilderController.mnd: supplyBlock(smelter, @sand);
  373:  set :supplyBlock:ore @sand                                   ...
  374:  setaddr :supplyBlock*retaddr *label202                       ...
  375:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label202                                              ...
  376:  set :supplyBase0:supplied true                               BuilderController.mnd: supplied = true;
        label *label196                                              BuilderController.mnd: if scrap then
        label *label193                                              BuilderController.mnd: elsif smelter.@sand < 5 then
        label *label190                                              BuilderController.mnd: if smelter.@coal < 5 then
        label *label187                                              BuilderController.mnd: if core.@silicon < targetSilicon then
        label *label173                                              BuilderController.mnd: if unloader1 == null then
  377:  set *tmp254 100                                              BuilderController.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(5, targetTitanium - core.@titanium) : 100;
  378:  sensor *tmp252 .core @titanium                               ...
  379:  jump *label204 greaterThanEq *tmp252 titanium                ...
  380:  sensor *tmp255 .core @titanium                               ...
  381:  op sub *tmp256 titanium *tmp255                              ...
  382:  op min *tmp254 5 *tmp256                                     ...
        label *label204                                              ...
  383:  sensor *tmp258 .titaniumDrill @titanium                      BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  384:  jump *label205 greaterThanEq *tmp258 *tmp254                 ...
  385:  jump *label206 notEqual :supplyBase0:supplied false          BuilderController.mnd: if !supplied then
  386:  sensor *tmp263 AJTJK-battery1 @totalPower                   BuilderController.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  387:  op mul *tmp264 A©JNJP-unloader6 .powerTarget                 ...
  388:  jump *label209 greaterThanEq *tmp263 *tmp264                 ...
  389:  write "Goal 5: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  390:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  391:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  392:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  393:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  394:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  395:  set :mineOre:amount 28                                       ...
  396:  set :mineOre:block .core                                     ...
  397:  setaddr :mineOre*retaddr *label639                           ...
  398:  call *label25 *invalid :mineOre*retval                       ...
        label *label639                                              ...
  399:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label209                                              ...
  400:  sensor *tmp267 .core @silicon                                BuilderController.mnd: elsif core.@silicon < targetSilicon then
  401:  jump *label213 greaterThanEq *tmp267 silicon                 ...
  402:  jump *label215 equal .scrap false                            BuilderController.mnd: if scrap then
  403:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  404:  jump *label218 equal A¨SSJh-container30 false                BuilderController.mnd: if container_a then
  405:  sensor :supplyBase0:coal .core @coal                         BuilderController.mnd: var coal = core.@coal;
  406:  sensor :supplyBase0:sand A¨SSJh-container30 @sand            BuilderController.mnd: var sand = container_a.@sand;
  407:  select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand  BuilderController.mnd: var ore = coal < sand ? @coal : @scrap;
  408:  select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand  BuilderController.mnd: var block = coal < sand ? core : container_a;
  409:  set :mineOre.1:ore *tmp275                                   BuilderController.mnd: mineOre(ore, block);
  410:  set :mineOre.1:block *tmp277                                 ...
  411:  setaddr :mineOre.1*retaddr *label224                         ...
  412:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label224                                              ...
  413:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if container_a then
        label *label218                                              ...
  414:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  415:  setaddr :mineOre.2*retaddr *label225                         ...
  416:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label225                                              ...
  417:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if scrap then
        label *label215                                              ...
  418:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  419:  sensor :supplyBase0:coal.1 .core @coal                       BuilderController.mnd: var coal = core.@coal;
  420:  sensor :supplyBase0:sand.1 .core @sand                       BuilderController.mnd: var sand = core.@sand;
  421:  select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:san BuilderController.mnd: var ore = coal < sand ? @coal : @sand;
  422:  set :mineOre.2:ore *tmp281                                   BuilderController.mnd: mineOre(ore);
  423:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  424:  write *tmp281 processor2 ".item2"                            Actions.mnd: display.item2 = item;
  425:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  426:  set :mineOre:ore *tmp281                                     Actions.mnd: mineOre(ore, capacity, core);
  427:  set :mineOre:amount 28                                       ...
  428:  set :mineOre:block .core                                     ...
  429:  setaddr :mineOre*retaddr *label644                           ...
  430:  call *label25 *invalid :mineOre*retval                       ...
        label *label644                                              ...
  431:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@silicon < targetSilicon then
        label *label213                                              ...
  432:  sensor *tmp282 .core @copper                                 BuilderController.mnd: elsif core.@copper < targetCopper then
  433:  jump *label230 greaterThanEq *tmp282 copper                  ...
  434:  write "Goal 7: copper requirement" processor2 ".status1"     Actions.mnd: display.status1 = text;
  435:  set :mineOre.2:ore @copper                                   BuilderController.mnd: mineOre(@copper);
  436:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  437:  write @copper processor2 ".item2"                            Actions.mnd: display.item2 = item;
  438:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  439:  set :mineOre:ore @copper                                     Actions.mnd: mineOre(ore, capacity, core);
  440:  set :mineOre:amount 28                                       ...
  441:  set :mineOre:block .core                                     ...
  442:  setaddr :mineOre*retaddr *label656                           ...
  443:  call *label25 *invalid :mineOre*retval                       ...
        label *label656                                              ...
  444:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@copper < targetCopper then
        label *label230                                              ...
  445:  sensor *tmp285 .core @lead                                   BuilderController.mnd: elsif core.@lead < targetLead then
  446:  jump *label234 greaterThanEq *tmp285 lead                    ...
  447:  write "Goal 8: lead requirement" processor2 ".status1"       Actions.mnd: display.status1 = text;
  448:  set :mineOre.2:ore @lead                                     BuilderController.mnd: mineOre(@lead);
  449:  setaddr :mineOre.2*retaddr *label237                         ...
  450:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label237                                              ...
  451:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@lead < targetLead then
        label *label234                                              ...
  452:  sensor *tmp288 .core @metaglass                              BuilderController.mnd: elsif core.@metaglass < targetMetaglass then
  453:  jump *label238 greaterThanEq *tmp288 metaglass               ...
  454:  write "Goal 9: metaglass requirement" processor2 ".status1"  Actions.mnd: display.status1 = text;
  455:  jump *label241 equal .scrap false                            BuilderController.mnd: if scrap then
  456:  set :mineOre.1:ore @scrap                                    BuilderController.mnd: mineOre(@scrap, sandContainer);
  457:  set :mineOre.1:block .sandContainer                          ...
  458:  setaddr :mineOre.1*retaddr *label243                         ...
  459:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label243                                              ...
  460:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if scrap then
        label *label241                                              ...
  461:  set :mineOre.2:ore @sand                                     BuilderController.mnd: mineOre(@sand);
  462:  setaddr :mineOre.2*retaddr *label244                         ...
  463:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label244                                              ...
  464:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@metaglass < targetMetaglass then
        label *label238                                              ...
  465:  write "Goal 10: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  466:  jump *label246 notEqual A¨SSJh-container30 null              BuilderController.mnd: if container_a == null then
  467:  sensor *tmp294 .core @coal                                   BuilderController.mnd: mineOre(scrap or core.@coal <= core.@sand ? @coal : @sand);
  468:  sensor *tmp295 .core @sand                                   ...
  469:  op lessThanEq *tmp296 *tmp294 *tmp295                        ...
  470:  op or *tmp297 .scrap *tmp296                                 ...
  471:  select :mineOre.2:ore notEqual *tmp297 false @coal @sand     ...
  472:  setaddr :mineOre.2*retaddr *label250                         ...
  473:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label250                                              ...
  474:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if container_a == null then
        label *label246                                              ...
  475:  sensor *tmp299 .core @coal                                   BuilderController.mnd: elsif core.@coal <= container_a.@sand + container_a.@scrap then
  476:  sensor *tmp300 A¨SSJh-container30 @sand                      ...
  477:  sensor *tmp301 A¨SSJh-container30 @scrap                     ...
  478:  op add *tmp302 *tmp300 *tmp301                               ...
  479:  jump *label251 greaterThan *tmp299 *tmp302                   ...
  480:  set :mineOre.2:ore @coal                                     BuilderController.mnd: mineOre(@coal);
  481:  setaddr :mineOre.2*retaddr *label253                         ...
  482:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label253                                              ...
  483:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: elsif core.@coal <= container_a.@sand + container_a.@scrap then
        label *label251                                              ...
  484:  set :mineOre.1:ore @scrap                                    BuilderController.mnd: mineOre(@scrap, container_a);
  485:  set :mineOre.1:block A¨SSJh-container30                      ...
  486:  setaddr :mineOre.1*retaddr *label254                         ...
  487:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label254                                              ...
  488:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label205                                              ...
  489:  write "Goal 11: Fetching titanium" processor2 ".status1"     Actions.mnd: display.status1 = text;
  490:  set :fetchBlock:block .titaniumDrill                         BuilderController.mnd: fetchBlock(titaniumDrill, @titanium);
  491:  set :fetchBlock:item @titanium                               ...
  492:  setaddr :fetchBlock*retaddr *label256                        ...
  493:  call *label28 *invalid :fetchBlock*retval                    ...
        label *label256                                              ...
        label *label206                                              BuilderController.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label151                                              BuilderController.mnd: if thoriumContainer then
  494:  return :supplyBaseLocal*retaddr                              BuilderController.mnd: void supplyBaseLocal()
        label *label39                                               BuilderController.mnd: def targetMet()
  495:  sensor *tmp305 .core @copper                                 BuilderController.mnd: if core.@copper < targetCopper then display.missing = @copper; return false; end;
  496:  jump *label258 greaterThanEq *tmp305 copper                  ...
  497:  write @copper processor2 ".missing"                          ...
  498:  set :targetMet*retval false                                  ...
  499:  return :targetMet*retaddr                                    ...
        label *label258                                              ...
  500:  sensor *tmp308 .core @lead                                   BuilderController.mnd: if core.@lead < targetLead then display.missing = @lead; return false; end;
  501:  jump *label260 greaterThanEq *tmp308 lead                    ...
  502:  write @lead processor2 ".missing"                            ...
  503:  set :targetMet*retval false                                  ...
  504:  return :targetMet*retaddr                                    ...
        label *label260                                              ...
  505:  sensor *tmp311 .core @graphite                               BuilderController.mnd: if core.@graphite < targetGraphite then display.missing = @graphite; return false; end;
  506:  jump *label262 greaterThanEq *tmp311 graphite                ...
  507:  write @graphite processor2 ".missing"                        ...
  508:  set :targetMet*retval false                                  ...
  509:  return :targetMet*retaddr                                    ...
        label *label262                                              ...
  510:  sensor *tmp314 .core @silicon                                BuilderController.mnd: if core.@silicon < targetSilicon then display.missing = @silicon; return false; end;
  511:  jump *label264 greaterThanEq *tmp314 silicon                 ...
  512:  write @silicon processor2 ".missing"                         ...
  513:  set :targetMet*retval false                                  ...
  514:  return :targetMet*retaddr                                    ...
        label *label264                                              ...
  515:  sensor *tmp317 .core @titanium                               BuilderController.mnd: if core.@titanium < targetTitanium then display.missing = @titanium; return false; end;
  516:  jump *label266 greaterThanEq *tmp317 titanium                ...
  517:  write @titanium processor2 ".missing"                        ...
  518:  set :targetMet*retval false                                  ...
  519:  return :targetMet*retaddr                                    ...
        label *label266                                              ...
  520:  sensor *tmp320 .core @metaglass                              BuilderController.mnd: if core.@metaglass < targetMetaglass then display.missing = @metaglass; return false; end;
  521:  jump *label268 greaterThanEq *tmp320 metaglass               ...
  522:  write @metaglass processor2 ".missing"                       ...
  523:  set :targetMet*retval false                                  ...
  524:  return :targetMet*retaddr                                    ...
        label *label268                                              ...
  525:  sensor *tmp323 .core @thorium                                BuilderController.mnd: if core.@thorium < targetThorium then display.missing = @thorium; return false; end;
  526:  jump *label270 greaterThanEq *tmp323 thorium                 ...
  527:  write @thorium processor2 ".missing"                         ...
  528:  set :targetMet*retval false                                  ...
  529:  return :targetMet*retaddr                                    ...
        label *label270                                              ...
  530:  set :targetMet*retval true                                   BuilderController.mnd: return true;
  531:  return :targetMet*retaddr                                    ...
        label *label40                                               BuilderController.mnd: void meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  532:  op sign :meetTargetLocal:count :meetTargetLocal:copper 0     BuilderController.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  533:  op sign *tmp327 :meetTargetLocal:lead 0                      ...
  534:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp327 ...
  535:  op sign *tmp327 :meetTargetLocal:graphite 0                  ...
  536:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp327 ...
  537:  op sign *tmp327 :meetTargetLocal:silicon 0                   ...
  538:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp327 ...
  539:  op sign *tmp327 :meetTargetLocal:titanium 0                  ...
  540:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp327 ...
  541:  op sign *tmp327 :meetTargetLocal:metaglass 0                 ...
  542:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp327 ...
  543:  op sign *tmp327 :meetTargetLocal:thorium 0                   ...
  544:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp327 ...
  545:  write :meetTargetLocal:count processor2 ".totalTargets"      BuilderController.mnd: display.totalTargets = count;
  546:  write :meetTargetLocal:block processor2 ".nextBlock"         BuilderController.mnd: display.nextBlock = block;
  547:  write :meetTargetLocal:copper processor2 ".targetCopper"     BuilderController.mnd: display.targetCopper = copper;
  548:  write :meetTargetLocal:lead processor2 ".targetLead"         BuilderController.mnd: display.targetLead = lead;
  549:  write :meetTargetLocal:graphite processor2 ".targetGraphite" BuilderController.mnd: display.targetGraphite = graphite;
  550:  write :meetTargetLocal:silicon processor2 ".targetSilicon"   BuilderController.mnd: display.targetSilicon = silicon;
  551:  write :meetTargetLocal:titanium processor2 ".targetTitanium" BuilderController.mnd: display.targetTitanium = titanium;
  552:  write :meetTargetLocal:metaglass processor2 ".targetMetaglas BuilderController.mnd: display.targetMetaglass = metaglass;
  553:  write :meetTargetLocal:thorium processor2 ".targetThorium"   BuilderController.mnd: display.targetThorium = thorium;
  554:  set copper :meetTargetLocal:copper                           BuilderController.mnd: targetCopper = copper;
  555:  op add lead :meetTargetLocal:lead .leadSurplus               BuilderController.mnd: targetLead = lead + leadSurplus;
  556:  set graphite :meetTargetLocal:graphite                       BuilderController.mnd: targetGraphite = graphite;
  557:  set silicon :meetTargetLocal:silicon                         BuilderController.mnd: targetSilicon = silicon;
  558:  set titanium :meetTargetLocal:titanium                       BuilderController.mnd: targetTitanium = titanium;
  559:  set metaglass :meetTargetLocal:metaglass                     BuilderController.mnd: targetMetaglass = metaglass;
  560:  set thorium :meetTargetLocal:thorium                         BuilderController.mnd: targetThorium = thorium;
  561:  set .noTarget :meetTargetLocal:isNoTarget                    BuilderController.mnd: noTarget = isNoTarget;
  562:  op add *tmp329 :meetTargetLocal:graphite .graphiteSurplus    BuilderController.mnd: processor.pressTarget = graphite + graphiteSurplus;
  563:  write *tmp329 AÕFFJS-micro-processor9 ".pressTarget"         ...
  564:  op add *tmp330 :meetTargetLocal:silicon .siliconSurplus      BuilderController.mnd: processor.smelterTarget = silicon + siliconSurplus;
  565:  write *tmp330 AÕFFJS-micro-processor9 ".smelterTarget"       ...
  566:  op add *tmp331 :meetTargetLocal:metaglass .metaglassSurplus  BuilderController.mnd: processor.kilnTarget = metaglass + metaglassSurplus;
  567:  write *tmp331 AÕFFJS-micro-processor9 ".kilnTarget"          ...
  568:  op sign *tmp332 :meetTargetLocal:silicon 0                   BuilderController.mnd: processor.siliconReserve = silicon + sign(silicon) * 20;
  569:  op mul *tmp333 *tmp332 20                                    ...
  570:  op add *tmp334 :meetTargetLocal:silicon *tmp333              ...
  571:  write *tmp334 AÕFFJS-micro-processor9 ".siliconReserve"      ...
  572:  op sign *tmp335 :meetTargetLocal:graphite 0                  BuilderController.mnd: processor.graphiteReserve = graphite + sign(graphite) * 20;
  573:  op mul *tmp336 *tmp335 20                                    ...
  574:  op add *tmp337 :meetTargetLocal:graphite *tmp336             ...
  575:  write *tmp337 AÕFFJS-micro-processor9 ".graphiteReserve"     ...
  576:  write lead processor7 ".leadTarget"                          BuilderController.mnd: monoController.leadTarget = targetLead;
  577:  write :meetTargetLocal:copper processor7 ".copperTarget"     BuilderController.mnd: monoController.copperTarget = targetCopper;
  578:  setaddr :targetMet*retaddr *label286                         BuilderController.mnd: while !targetMet() do
  579:  call *label39 *invalid :targetMet*retval                     ...
        label *label286                                              ...
  580:  jump *label285 notEqual :targetMet*retval false              ...
        label *label604                                              ...
  581:  setaddr :supplyBaseLocal*retaddr *label287                   BuilderController.mnd: supplyBaseLocal();
  582:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label287                                              ...
  583:  setaddr :targetMet*retaddr *label605                         BuilderController.mnd: while !targetMet() do
  584:  call *label39 *invalid :targetMet*retval                     ...
        label *label605                                              ...
  585:  jump *label604 equal :targetMet*retval false                 ...
        label *label285                                              ...
  586:  jump *label288 equal :meetTargetLocal:forBuild false         BuilderController.mnd: if forBuild then
  587:  write false AÕFFJS-micro-processor9 ":buildStart*finished"   BuilderController.mnd: processor.buildStart();
  588:  write 1 AÕFFJS-micro-processor9 "@counter"                   ...
        label *label290                                              ...
  589:  wait 1e-15                                                   ...
  590:  read *tmp341 AÕFFJS-micro-processor9 ":buildStart*finished"  ...
  591:  jump *label290 equal *tmp341 false                           ...
  592:  setaddr :targetMet*retaddr *label294                         BuilderController.mnd: while !targetMet() do
  593:  call *label39 *invalid :targetMet*retval                     ...
        label *label294                                              ...
  594:  jump *label293 notEqual :targetMet*retval false              ...
        label *label622                                              ...
  595:  setaddr :supplyBaseLocal*retaddr *label295                   BuilderController.mnd: supplyBaseLocal();
  596:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label295                                              ...
  597:  setaddr :targetMet*retaddr *label623                         BuilderController.mnd: while !targetMet() do
  598:  call *label39 *invalid :targetMet*retval                     ...
        label *label623                                              ...
  599:  jump *label622 equal :targetMet*retval false                 ...
        label *label293                                              ...
        label *label288                                              BuilderController.mnd: if forBuild then
  600:  return :meetTargetLocal*retaddr                              BuilderController.mnd: void meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
        label *label6                                                BuilderController.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  601:  set :meetTargetLocal:block :meetTarget:block                 BuilderController.mnd: meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget);
  602:  set :meetTargetLocal:copper :meetTarget:copper               ...
  603:  set :meetTargetLocal:lead :meetTarget:lead                   ...
  604:  set :meetTargetLocal:graphite :meetTarget:graphite           ...
  605:  set :meetTargetLocal:silicon :meetTarget:silicon             ...
  606:  set :meetTargetLocal:titanium :meetTarget:titanium           ...
  607:  set :meetTargetLocal:metaglass :meetTarget:metaglass         ...
  608:  set :meetTargetLocal:thorium :meetTarget:thorium             ...
  609:  set :meetTargetLocal:forBuild :meetTarget:forBuild           ...
  610:  set :meetTargetLocal:isNoTarget :meetTarget:isNoTarget       ...
  611:  setaddr :meetTargetLocal*retaddr *label297                   ...
  612:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label297                                              ...
  613:  set :meetTarget*finished true                                BuilderController.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  614:  jump *label54 always 0 0                                     ...
        label *label7                                                BuilderController.mnd: remote void meetTargetCfg(cfg)
  615:  set :unpackCfg:cfg :meetTargetCfg:cfg                        BuilderController.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  616:  setaddr :unpackCfg*retaddr *label299                         ...
  617:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label299                                              ...
  618:  set :meetTargetLocal:block :unpackCfg:type                   BuilderController.mnd: meetTargetLocal(type, cu, pb, gr, si, ti, mg, th, false, false);
  619:  set :meetTargetLocal:copper :unpackCfg:cu                    ...
  620:  set :meetTargetLocal:lead :unpackCfg:pb                      ...
  621:  set :meetTargetLocal:graphite :unpackCfg:gr                  ...
  622:  set :meetTargetLocal:silicon :unpackCfg:si                   ...
  623:  set :meetTargetLocal:titanium :unpackCfg:ti                  ...
  624:  set :meetTargetLocal:metaglass :unpackCfg:mg                 ...
  625:  set :meetTargetLocal:thorium :unpackCfg:th                   ...
  626:  set :meetTargetLocal:forBuild false                          ...
  627:  set :meetTargetLocal:isNoTarget false                        ...
  628:  setaddr :meetTargetLocal*retaddr *label300                   ...
  629:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label300                                              ...
  630:  set :meetTargetCfg*finished true                             BuilderController.mnd: remote void meetTargetCfg(cfg)
  631:  jump *label54 always 0 0                                     ...
        label *label41                                               BuilderController.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  632:  op notEqual *tmp344 AÕFFJS-micro-processor9 null             BuilderController.mnd: meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, processor != null, false);
  633:  set :meetTargetLocal:block :buildBlock:block                 ...
  634:  set :meetTargetLocal:copper :buildBlock:copper               ...
  635:  set :meetTargetLocal:lead :buildBlock:lead                   ...
  636:  set :meetTargetLocal:graphite :buildBlock:graphite           ...
  637:  set :meetTargetLocal:silicon :buildBlock:silicon             ...
  638:  set :meetTargetLocal:titanium :buildBlock:titanium           ...
  639:  set :meetTargetLocal:metaglass :buildBlock:metaglass         ...
  640:  set :meetTargetLocal:thorium :buildBlock:thorium             ...
  641:  set :meetTargetLocal:forBuild *tmp344                        ...
  642:  set :meetTargetLocal:isNoTarget false                        ...
  643:  setaddr :meetTargetLocal*retaddr *label302                   ...
  644:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label302                                              ...
  645:  set :buildBlockAtLocal:block :buildBlock:block               BuilderController.mnd: var built = buildBlockAtLocal(block, x, y, rotation, config, index);
  646:  set :buildBlockAtLocal:x :buildBlock:x                       ...
  647:  set :buildBlockAtLocal:y :buildBlock:y                       ...
  648:  set :buildBlockAtLocal:rotation :buildBlock:rotation         ...
  649:  set :buildBlockAtLocal:config :buildBlock:config             ...
  650:  set :buildBlockAtLocal:index :buildBlock:index               ...
  651:  setaddr :buildBlockAtLocal*retaddr *label303                 ...
  652:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label303                                              ...
  653:  write false AÕFFJS-micro-processor9 ":buildStop*finished"    BuilderController.mnd: async(processor.buildStop());
  654:  write 2 AÕFFJS-micro-processor9 "@counter"                   ...
  655:  set :buildBlock*retval :buildBlockAtLocal*retval             BuilderController.mnd: return built;
  656:  return :buildBlock*retaddr                                   BuilderController.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label8                                                BuilderController.mnd: remote def buildRemoteBlock(cfg, x, y)
  657:  op add *tmp345 :buildRemoteBlock:x :buildRemoteBlock:y       BuilderController.mnd: if x + y > 0 then
  658:  jump *label305 lessThanEq *tmp345 0                          ...
  659:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     BuilderController.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  660:  setaddr :unpackCfg*retaddr *label307                         ...
  661:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label307                                              ...
  662:  set :buildBlock:block :unpackCfg:type                        BuilderController.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  663:  set :buildBlock:x :buildRemoteBlock:x                        ...
  664:  set :buildBlock:y :buildRemoteBlock:y                        ...
  665:  set :buildBlock:copper :unpackCfg:cu                         ...
  666:  set :buildBlock:lead :unpackCfg:pb                           ...
  667:  set :buildBlock:graphite :unpackCfg:gr                       ...
  668:  set :buildBlock:silicon :unpackCfg:si                        ...
  669:  set :buildBlock:titanium :unpackCfg:ti                       ...
  670:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  671:  set :buildBlock:thorium :unpackCfg:th                        ...
  672:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  673:  set :buildBlock:config null                                  ...
  674:  set :buildBlock:index :unpackCfg:ind                         ...
  675:  setaddr :buildBlock*retaddr *label308                        ...
  676:  call *label41 *invalid :buildBlock*retval                    ...
        label *label308                                              ...
  677:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  678:  jump *label304 always 0 0                                    ...
        label *label305                                              BuilderController.mnd: if x + y > 0 then
  679:  set :buildRemoteBlock*retval false                           BuilderController.mnd: return false;
  680:  jump *label304 always 0 0                                    ...
        label *label304                                              BuilderController.mnd: remote def buildRemoteBlock(cfg, x, y)
  681:  set :buildRemoteBlock*finished true                          ...
  682:  jump *label54 always 0 0                                     ...
        label *label9                                                BuilderController.mnd: remote def buildBlockFromCfg(cfg, config)
  683:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    BuilderController.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  684:  setaddr :unpackCfg*retaddr *label310                         ...
  685:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label310                                              ...
  686:  op add *tmp348 .coreX :unpackCfg:x                           BuilderController.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  687:  op add *tmp349 .coreY :unpackCfg:y                           ...
  688:  set :buildBlock:block :unpackCfg:type                        ...
  689:  set :buildBlock:x *tmp348                                    ...
  690:  set :buildBlock:y *tmp349                                    ...
  691:  set :buildBlock:copper :unpackCfg:cu                         ...
  692:  set :buildBlock:lead :unpackCfg:pb                           ...
  693:  set :buildBlock:graphite :unpackCfg:gr                       ...
  694:  set :buildBlock:silicon :unpackCfg:si                        ...
  695:  set :buildBlock:titanium :unpackCfg:ti                       ...
  696:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  697:  set :buildBlock:thorium :unpackCfg:th                        ...
  698:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  699:  set :buildBlock:config :buildBlockFromCfg:config             ...
  700:  set :buildBlock:index :unpackCfg:ind                         ...
  701:  setaddr :buildBlock*retaddr *label311                        ...
  702:  call *label41 *invalid :buildBlock*retval                    ...
        label *label311                                              ...
  703:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        BuilderController.mnd: @this.write(building, cfg);
  704:  write :buildBlock*retval processor2 :buildBlockFromCfg:cfg   BuilderController.mnd: display.write(building, cfg);
  705:  write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlock BuilderController.mnd: processor.write(building, cfg);
  706:  write :buildBlock*retval processor9 :buildBlockFromCfg:cfg   BuilderController.mnd: baseBuilder.write(building, cfg);
  707:  set :buildBlockFromCfg*retval :buildBlock*retval             BuilderController.mnd: return building;
  708:  set :buildBlockFromCfg*finished true                         BuilderController.mnd: remote def buildBlockFromCfg(cfg, config)
  709:  jump *label54 always 0 0                                     ...
        label *label43                                               BuilderController.mnd: def buildBlockAtLocal(block, x, y, rotation, config, index)
  710:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  711:  ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6  Actions.mnd: while !within(x, y, radius) do
  712:  jump *label547 notEqual *tmp105 false                        ...
        label *label545                                              ...
  713:  ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y  Actions.mnd: approach(x, y, radius - 0.5);
  714:  ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6  Actions.mnd: while !within(x, y, radius) do
  715:  jump *label545 equal *tmp105 false                           ...
        label *label547                                              ...
  716:  ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y  BuilderController.mnd: var building = getBlock(x, y, out type);
  717:  jump *label318 equal :buildBlockAtLocal:building null        BuilderController.mnd: if building != null then
  718:  jump *label320 notEqual :buildBlockAtLocal:type :buildBlockA BuilderController.mnd: if type == block then return building; end;
  719:  set :buildBlockAtLocal*retval :buildBlockAtLocal:building    ...
  720:  return :buildBlockAtLocal*retaddr                            ...
        label *label320                                              ...
  721:  set .ERROR "Cannot build at position"                        BuilderController.mnd: ERROR = text;
  722:  set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block              BuilderController.mnd: ERROR_FOUND_BLOCK = block;
  723:  set .ERROR_FOUND_TYPE :buildBlockAtLocal:type                BuilderController.mnd: ERROR_FOUND_TYPE = type;
  724:  set .ERROR_X :buildBlockAtLocal:x                            BuilderController.mnd: ERROR_X = x;
  725:  set .ERROR_Y :buildBlockAtLocal:y                            BuilderController.mnd: ERROR_Y = y;
  726:  stop                                                         BuilderController.mnd: stopProcessor();
        label *label318                                              BuilderController.mnd: if building != null then
  727:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BuilderController.mnd: build(x, y, block, rotation, config);
  728:  wait 0.25                                                    BuilderController.mnd: wait(0.25);
  729:  set :buildBlockAtLocal:success false                         BuilderController.mnd: var success = false;
        label *label323                                              BuilderController.mnd: do
  730:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BuilderController.mnd: build(x, y, block, rotation, config);
  731:  ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y  BuilderController.mnd: building = getBlock(x, y, out type);
  732:  op equal *tmp360 :buildBlockAtLocal:building null            BuilderController.mnd: if building == null and !success then
  733:  op equal *tmp361 :buildBlockAtLocal:success false            ...
  734:  op land *tmp362 *tmp360 *tmp361                              ...
  735:  jump *label326 equal *tmp362 false                           ...
  736:  set .ERROR "Error while building"                            BuilderController.mnd: ERROR = text;
  737:  set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block              BuilderController.mnd: ERROR_FOUND_BLOCK = block;
  738:  set .ERROR_FOUND_TYPE :buildBlockAtLocal:type                BuilderController.mnd: ERROR_FOUND_TYPE = type;
  739:  set .ERROR_X :buildBlockAtLocal:x                            BuilderController.mnd: ERROR_X = x;
  740:  set .ERROR_Y :buildBlockAtLocal:y                            BuilderController.mnd: ERROR_Y = y;
  741:  stop                                                         BuilderController.mnd: stopProcessor();
  742:  jump *label327 always 0 0                                    BuilderController.mnd: if building == null and !success then
        label *label326                                              ...
  743:  set :buildBlockAtLocal:success true                          BuilderController.mnd: success = true;
        label *label327                                              BuilderController.mnd: if building == null and !success then
  744:  jump *label329 notEqual :buildBlockAtLocal:block @multiplica BuilderController.mnd: if block == @multiplicative-reconstructor then
  745:  control enabled processor6 false 0 0 0                       BuilderController.mnd: polyController.enabled = false;     // Brutal, but effective :)
  746:  ubind @poly                                                  BuilderController.mnd: ubind(@poly);
  747:  jump *label331 equal @unit .builder                          BuilderController.mnd: if @unit != builder then
  748:  ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y  BuilderController.mnd: approach(x, y, RADIUS);
  749:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BuilderController.mnd: build(x, y, block, rotation, config);
        label *label331                                              BuilderController.mnd: if @unit != builder then
        label *label329                                              BuilderController.mnd: if block == @multiplicative-reconstructor then
  750:  jump *label323 notEqual :buildBlockAtLocal:type :buildBlockA BuilderController.mnd: do
  751:  control enabled processor6 true 0 0 0                        BuilderController.mnd: polyController.enabled = true;
  752:  ubind .builder                                               BuilderController.mnd: ubind(builder);
  753:  sensor :log:encodedId :buildBlockAtLocal:block @id           BuilderController.mnd: log(block.@id);
  754:  read *tmp100 bank1 511                                       BuilderController.mnd: bank1[--logPosition] = encodedId + TIME * 1000;
  755:  op sub *tmp372 *tmp100 1                                     ...
  756:  write *tmp372 bank1 511                                      ...
  757:  read *tmp0 processor1 "time"                                 ...
  758:  op mul *tmp375 *tmp0 1000                                    ...
  759:  op add *tmp376 :log:encodedId *tmp375                        ...
  760:  write *tmp376 bank1 *tmp372                                  ...
  761:  jump *label335 lessThan :buildBlockAtLocal:index 0           BuilderController.mnd: if index >= 0 then
  762:  op shl *tmp379 1 :buildBlockAtLocal:index                    BuilderController.mnd: display.blocksBuilt |= (1 << index);
  763:  read *tmp7 processor2 ".blocksBuilt"                         ...
  764:  op or *tmp380 *tmp7 *tmp379                                  ...
  765:  write *tmp380 processor2 ".blocksBuilt"                      ...
  766:  write :buildBlockAtLocal:index processor2 ".recentBuildIndex BuilderController.mnd: display.recentBuildIndex = index;
        label *label335                                              BuilderController.mnd: if index >= 0 then
  767:  set :buildBlockAtLocal*retval :buildBlockAtLocal:building    BuilderController.mnd: return building;
  768:  return :buildBlockAtLocal*retaddr                            BuilderController.mnd: def buildBlockAtLocal(block, x, y, rotation, config, index)
        label *label10                                               BuilderController.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  769:  set :buildBlockAtLocal:block :buildBlockAt:block             BuilderController.mnd: return buildBlockAtLocal(block, x, y, rotation, config, index);
  770:  set :buildBlockAtLocal:x :buildBlockAt:x                     ...
  771:  set :buildBlockAtLocal:y :buildBlockAt:y                     ...
  772:  set :buildBlockAtLocal:rotation :buildBlockAt:rotation       ...
  773:  set :buildBlockAtLocal:config :buildBlockAt:config           ...
  774:  set :buildBlockAtLocal:index :buildBlockAt:index             ...
  775:  setaddr :buildBlockAtLocal*retaddr *label338                 ...
  776:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label338                                              ...
  777:  set :buildBlockAt*retval :buildBlockAtLocal*retval           ...
  778:  set :buildBlockAt*finished true                              BuilderController.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  779:  jump *label54 always 0 0                                     ...
        label *label11                                               BuilderController.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  780:  set :buildBlockAtLocal:block @pneumatic-drill                BuilderController.mnd: var drill = buildBlockAtLocal(@pneumatic-drill, x, y, 0, null, -1);
  781:  set :buildBlockAtLocal:x :buildFirstTitaniumDrillAt:x        ...
  782:  set :buildBlockAtLocal:y :buildFirstTitaniumDrillAt:y        ...
  783:  set :buildBlockAtLocal:rotation 0                            ...
  784:  set :buildBlockAtLocal:config null                           ...
  785:  set :buildBlockAtLocal:index -1                              ...
  786:  setaddr :buildBlockAtLocal*retaddr *label340                 ...
  787:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label340                                              ...
  788:  write :buildBlockAtLocal*retval processor8 ":addTitaniumDril BuilderController.mnd: flareController.addTitaniumDrill(drill);
  789:  write false processor8 ":addTitaniumDrill*finished"          ...
  790:  write 1 processor8 "@counter"                                ...
        label *label341                                              ...
  791:  wait 1e-15                                                   ...
  792:  read *tmp382 processor8 ":addTitaniumDrill*finished"         ...
  793:  jump *label341 equal *tmp382 false                           ...
  794:  set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*ret BuilderController.mnd: return drill;
  795:  set :buildFirstTitaniumDrillAt*finished true                 BuilderController.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  796:  jump *label54 always 0 0                                     ...
        label *label45                                               BuilderController.mnd: def buildTitaniumDrill(x, y, in out count, in out tiles)
  797:  jump *label350 greaterThanEq :buildTitaniumDrill:count .MAX_ BuilderController.mnd: if count < MAX_COUNT then
  798:  jump *label352 greaterThanEq :buildTitaniumDrill:tiles .MAX_ BuilderController.mnd: if tiles < MAX_TILES then
  799:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  800:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  801:  jump *label531 notEqual *tmp105 false                        ...
        label *label529                                              ...
  802:  ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill: Actions.mnd: approach(x, y, radius - 0.5);
  803:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  804:  jump *label529 equal *tmp105 false                           ...
        label *label531                                              ...
  805:  set .positive 0                                              BuilderController.mnd: positive = 0; negative = 0;
  806:  set .negative 0                                              ...
  807:  op sub *tmp396 :buildTitaniumDrill:x 0.5                     BuilderController.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  808:  op sub *tmp397 :buildTitaniumDrill:y 0.5                     ...
  809:  set :titaniumDrillScore:positive .positive                   ...
  810:  set :titaniumDrillScore:negative .negative                   ...
  811:  ucontrol getBlock *tmp396 *tmp397 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  812:  jump *label496 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  813:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  814:  jump *label499 always 0 0                                    ...
        label *label496                                              ...
  815:  jump *label497 equal :getFloor:floor @ore-copper             ...
  816:  jump *label497 equal :getFloor:floor @ore-lead               ...
  817:  jump *label497 equal :getFloor:floor @ore-scrap              ...
  818:  jump *label498 notEqual :getFloor:floor @ore-coal            ...
        label *label497                                              ...
  819:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label498                                              ...
        label *label499                                              ...
  820:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  821:  set .negative :titaniumDrillScore:negative                   ...
  822:  op add *tmp400 :buildTitaniumDrill:y 0.5                     BuilderController.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  823:  set :titaniumDrillScore:positive .positive                   ...
  824:  set :titaniumDrillScore:negative .negative                   ...
  825:  ucontrol getBlock *tmp396 *tmp400 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  826:  jump *label504 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  827:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  828:  jump *label507 always 0 0                                    ...
        label *label504                                              ...
  829:  jump *label505 equal :getFloor:floor @ore-copper             ...
  830:  jump *label505 equal :getFloor:floor @ore-lead               ...
  831:  jump *label505 equal :getFloor:floor @ore-scrap              ...
  832:  jump *label506 notEqual :getFloor:floor @ore-coal            ...
        label *label505                                              ...
  833:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label506                                              ...
        label *label507                                              ...
  834:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  835:  set .negative :titaniumDrillScore:negative                   ...
  836:  op add *tmp402 :buildTitaniumDrill:x 0.5                     BuilderController.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  837:  set :titaniumDrillScore:positive .positive                   ...
  838:  set :titaniumDrillScore:negative .negative                   ...
  839:  ucontrol getBlock *tmp402 *tmp397 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  840:  jump *label512 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  841:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  842:  jump *label515 always 0 0                                    ...
        label *label512                                              ...
  843:  jump *label513 equal :getFloor:floor @ore-copper             ...
  844:  jump *label513 equal :getFloor:floor @ore-lead               ...
  845:  jump *label513 equal :getFloor:floor @ore-scrap              ...
  846:  jump *label514 notEqual :getFloor:floor @ore-coal            ...
        label *label513                                              ...
  847:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label514                                              ...
        label *label515                                              ...
  848:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  849:  set .negative :titaniumDrillScore:negative                   ...
  850:  set :titaniumDrillScore:positive .positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  851:  set :titaniumDrillScore:negative .negative                   ...
  852:  ucontrol getBlock *tmp402 *tmp400 0 0 :getFloor:floor        BuilderController.mnd: getBlock(x, y, , out floor);
  853:  jump *label520 notEqual :getFloor:floor @ore-titanium        BuilderController.mnd: case getFloor(x, y)
  854:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  855:  jump *label523 always 0 0                                    ...
        label *label520                                              ...
  856:  jump *label521 equal :getFloor:floor @ore-copper             ...
  857:  jump *label521 equal :getFloor:floor @ore-lead               ...
  858:  jump *label521 equal :getFloor:floor @ore-scrap              ...
  859:  jump *label522 notEqual :getFloor:floor @ore-coal            ...
        label *label521                                              ...
  860:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label522                                              ...
        label *label523                                              ...
  861:  set .positive :titaniumDrillScore:positive                   BuilderController.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  862:  set .negative :titaniumDrillScore:negative                   ...
  863:  op greaterThan *tmp408 .positive .negative                   BuilderController.mnd: if positive > negative && positive >= 2 then
  864:  op greaterThanEq *tmp409 .positive 2                         ...
  865:  op land *tmp410 *tmp408 *tmp409                              ...
  866:  jump *label360 equal *tmp410 false                           ...
  867:  set :buildBlockAtLocal:block @pneumatic-drill                BuilderController.mnd: var drill = buildBlockAtLocal(@pneumatic-drill, x, y, null, 0, -1);
  868:  set :buildBlockAtLocal:x :buildTitaniumDrill:x               ...
  869:  set :buildBlockAtLocal:y :buildTitaniumDrill:y               ...
  870:  set :buildBlockAtLocal:rotation null                         ...
  871:  set :buildBlockAtLocal:config 0                              ...
  872:  set :buildBlockAtLocal:index -1                              ...
  873:  setaddr :buildBlockAtLocal*retaddr *label362                 ...
  874:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label362                                              ...
  875:  jump *label363 equal :buildBlockAtLocal*retval null          BuilderController.mnd: if drill != null then
  876:  write :buildBlockAtLocal*retval processor8 ":addTitaniumDril BuilderController.mnd: flareController.addTitaniumDrill(drill);
  877:  write false processor8 ":addTitaniumDrill*finished"          ...
  878:  write 1 processor8 "@counter"                                ...
        label *label365                                              ...
  879:  wait 1e-15                                                   ...
  880:  read *tmp415 processor8 ":addTitaniumDrill*finished"         ...
  881:  jump *label365 equal *tmp415 false                           ...
  882:  op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1 BuilderController.mnd: setFlareTarget(++count);
  883:  op min *tmp416 :buildTitaniumDrill:count 8                   BuilderController.mnd: processor.flareTarget = min(target, 8);
  884:  write *tmp416 AÕFFJS-micro-processor9 ".flareTarget"         ...
  885:  op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles . BuilderController.mnd: tiles += positive;
  886:  set :buildTitaniumDrill*retval .positive                     BuilderController.mnd: return positive;
  887:  return :buildTitaniumDrill*retaddr                           ...
        label *label363                                              BuilderController.mnd: if drill != null then
        label *label360                                              BuilderController.mnd: if positive > negative && positive >= 2 then
        label *label352                                              BuilderController.mnd: if tiles < MAX_TILES then
        label *label350                                              BuilderController.mnd: if count < MAX_COUNT then
  888:  set :buildTitaniumDrill*retval 0                             BuilderController.mnd: return 0;
  889:  return :buildTitaniumDrill*retaddr                           ...
        label *label12                                               BuilderController.mnd: remote void buildTitaniumDrills(current)
  890:  set :buildTitaniumDrills:count 1                             BuilderController.mnd: var count = 1;
  891:  set :buildTitaniumDrills:tiles 0                             BuilderController.mnd: var tiles = 0;
  892:  jump *label368 equal .scrap false                            BuilderController.mnd: if scrap then MAX_TILES += 4; end;
  893:  op add .MAX_TILES .MAX_TILES 4                               ...
        label *label368                                              ...
  894:  wait 0.0001                                                  BuilderController.mnd: wait(1e-4);
  895:  wait 0.0001                                                  BuilderController.mnd: wait(1e-4);
        label *label370                                              BuilderController.mnd: do
  896:  read *tmp51 processor3 ".locations"                          BuilderController.mnd: while current < oreLocator.locations do
  897:  jump *label375 greaterThanEq :buildTitaniumDrills:current *t ...
        label *label484                                              ...
  898:  op mul :buildTitaniumDrills:index :buildTitaniumDrills:curre BuilderController.mnd: var index = current * 4;
  899:  op add *tmp421 :buildTitaniumDrills:index 1                  BuilderController.mnd: var size = bank1[index + 1];
  900:  read :buildTitaniumDrills:size bank1 *tmp421                 ...
  901:  jump *label376 lessThan :buildTitaniumDrills:size 3          BuilderController.mnd: if size >= 3 then
  902:  op add *tmp427 :buildTitaniumDrills:index 2                  BuilderController.mnd: var x = bank1[index + 2];
  903:  read :buildTitaniumDrills:x bank1 *tmp427                    ...
  904:  op add *tmp429 :buildTitaniumDrills:index 3                  BuilderController.mnd: var y = bank1[index + 3];
  905:  read :buildTitaniumDrills:y bank1 *tmp429                    ...
  906:  op sub *tmp432 :buildTitaniumDrills:x 1                      BuilderController.mnd: var built = buildTitaniumDrill(x - 1, y - 1, in out count, in out tiles)
  907:  op sub *tmp433 :buildTitaniumDrills:y 1                      ...
  908:  set :buildTitaniumDrill:x *tmp432                            ...
  909:  set :buildTitaniumDrill:y *tmp433                            ...
  910:  set :buildTitaniumDrill:count :buildTitaniumDrills:count     ...
  911:  set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles     ...
  912:  setaddr :buildTitaniumDrill*retaddr *label378                ...
  913:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label378                                              ...
  914:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  915:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  916:  set *tmp434 :buildTitaniumDrill*retval                       ...
  917:  op add *tmp435 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x + 1, y - 1, in out count, in out tiles)
  918:  op sub *tmp436 :buildTitaniumDrills:y 1                      ...
  919:  set :buildTitaniumDrill:x *tmp435                            ...
  920:  set :buildTitaniumDrill:y *tmp436                            ...
  921:  setaddr :buildTitaniumDrill*retaddr *label379                ...
  922:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label379                                              ...
  923:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  924:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  925:  op add *tmp438 *tmp434 :buildTitaniumDrill*retval            ...
  926:  op sub *tmp439 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x - 1, y + 1, in out count, in out tiles)
  927:  op add *tmp440 :buildTitaniumDrills:y 1                      ...
  928:  set :buildTitaniumDrill:x *tmp439                            ...
  929:  set :buildTitaniumDrill:y *tmp440                            ...
  930:  setaddr :buildTitaniumDrill*retaddr *label380                ...
  931:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label380                                              ...
  932:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  933:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  934:  op add *tmp442 *tmp438 :buildTitaniumDrill*retval            ...
  935:  op add *tmp443 :buildTitaniumDrills:x 1                      BuilderController.mnd: + buildTitaniumDrill(x + 1, y + 1, in out count, in out tiles);
  936:  op add *tmp444 :buildTitaniumDrills:y 1                      ...
  937:  set :buildTitaniumDrill:x *tmp443                            ...
  938:  set :buildTitaniumDrill:y *tmp444                            ...
  939:  setaddr :buildTitaniumDrill*retaddr *label381                ...
  940:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label381                                              ...
  941:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  942:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  943:  op add :buildTitaniumDrills:built *tmp442 :buildTitaniumDril ...
  944:  jump *label382 notEqual :buildTitaniumDrills:built 0         BuilderController.mnd: if built == 0 then
  945:  set :buildTitaniumDrill:x :buildTitaniumDrills:x             BuilderController.mnd: built = buildTitaniumDrill(x, y, in out count, in out tiles);
  946:  set :buildTitaniumDrill:y :buildTitaniumDrills:y             ...
  947:  setaddr :buildTitaniumDrill*retaddr *label384                ...
  948:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label384                                              ...
  949:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  950:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  951:  set :buildTitaniumDrills:built :buildTitaniumDrill*retval    ...
        label *label382                                              BuilderController.mnd: if built == 0 then
        label *label376                                              BuilderController.mnd: if size >= 3 then
  952:  op add :buildTitaniumDrills:current :buildTitaniumDrills:cur BuilderController.mnd: while current < oreLocator.locations do
  953:  read *tmp51 processor3 ".locations"                          ...
  954:  jump *label484 lessThan :buildTitaniumDrills:current *tmp51  ...
        label *label375                                              ...
  955:  jump *label372 greaterThanEq :buildTitaniumDrills:tiles .MAX BuilderController.mnd: if tiles >= MAX_TILES then break; end;
  956:  jump *label372 greaterThanEq :buildTitaniumDrills:count .MAX BuilderController.mnd: if count >= MAX_COUNT then break; end;
  957:  read *tmp52 processor3 ".searchFinished"                     BuilderController.mnd: while !oreLocator.searchFinished;
  958:  jump *label370 equal *tmp52 false                            BuilderController.mnd: do
        label *label372                                              ...
  959:  set :buildTitaniumDrills*finished true                       BuilderController.mnd: remote void buildTitaniumDrills(current)
  960:  jump *label54 always 0 0                                     ...
        label *label13                                               BuilderController.mnd: remote void supplyBase()
  961:  setaddr :supplyBaseLocal*retaddr *label390                   BuilderController.mnd: supplyBaseLocal();
  962:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label390                                              ...
  963:  set :supplyBase*finished true                                BuilderController.mnd: remote void supplyBase()
  964:  jump *label54 always 0 0                                     ...


Performance: parsed in 718 ms, compiled in 394 ms, optimized in 4,142 ms, run in 3 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (3 steps):
The program didn't generate any output.
Execution exception at instruction 10: read *tmp32 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
