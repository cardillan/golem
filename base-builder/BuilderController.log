  1403 instructions before optimizations.
    51 instructions eliminated by Temp Variables Elimination (3 passes, 8 iterations).
     1 instructions eliminated by Case Expression Optimization.
   135 instructions eliminated by Dead Code Elimination (11 iterations).
    64 instructions eliminated by Jump Optimization (6 iterations).
    55 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     8 instructions eliminated by Expression Optimization (2 passes, 4 iterations).
    12 instructions eliminated by If Expression Optimization (5 iterations).
   180 instructions eliminated by Data Flow Optimization (27 passes, 89 iterations).
     1 loops improved by Loop Hoisting.
     9 instructions added by Loop Optimization (4 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (39 iterations).
     1 loops unrolled by Loop Unrolling.
    97 instructions added by Function Inlining (39 iterations).
    54 function calls inlined by Function Inlining.
     7 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    28 instructions updated by Jump Threading.
     1 calls threaded by Jump Threading.
    24 instructions eliminated by Unreachable Code Elimination (2 iterations).
   970 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
  ! Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
  ! Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
  ! Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
  * Unroll iteration loop at BlockBuilder.mnd:202:5              size   -13, benefit       94.5, efficiency   Infinity (-10 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit      482.8, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +151, benefit       28.0, efficiency      0.185
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.5, efficiency      0.083
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.5, efficiency      4.345
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:156:5               size    +0, benefit      231.4, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:151:5               size    +0, benefit      115.7, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:61:17               size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:69:17               size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:77:17               size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:83:25               size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:88:21               size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:100:17              size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:104:21              size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
  ! Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:115:21              size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:122:17              size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:125:17              size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:128:17              size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:135:17              size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:145:9               size    +0, benefit       57.9, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +76, benefit        8.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +76, benefit        8.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:258:5               size   +76, benefit       12.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 3):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit      482.8, efficiency   Infinity (-33 instructions)
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
  ! Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.5, efficiency      0.083
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.5, efficiency      4.345
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:156:5               size    +0, benefit      231.4, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
  ! Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
  ! Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:151:5               size    +0, benefit      115.7, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:61:17               size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:69:17               size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:77:17               size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:83:25               size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:88:21               size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:100:17              size    +0, benefit       14.5, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:104:21              size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
  ! Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:115:21              size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:122:17              size    +0, benefit        3.6, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:125:17              size    +0, benefit        1.8, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:128:17              size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:135:17              size    +0, benefit        0.9, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
  ! Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:145:9               size    +0, benefit       57.9, efficiency   Infinity
  ! Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
  ! Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 36):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit     3295.8, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +13, benefit     2711.3, efficiency    208.565
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit      573.4, efficiency     38.229
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit      236.0, efficiency      2.843
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2108.8, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit      501.7, efficiency   Infinity
    Inline function call at Actions.mnd:68:5                     size    +7, benefit      322.6, efficiency     46.079
    Inline function call at Actions.mnd:75:5                     size    +0, benefit      501.7, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
    Inline function call at Actions.mnd:105:5                    size    +8, benefit      209.7, efficiency     26.218
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:108:5                    size    +0, benefit      183.5, efficiency   Infinity
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit        3.5, efficiency      0.083
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit      182.5, efficiency      4.345
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +8, benefit      330.6, efficiency     41.328
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit       50.0, efficiency      1.190
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +8, benefit       33.1, efficiency      4.133
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +7, benefit      806.8, efficiency    115.252
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +7, benefit     1582.0, efficiency    226.004
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 47):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
  * Inline function 'error' defined at Actions.mnd:31:1          size    -1, benefit       91.8, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit      573.4, efficiency     13.986
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:94:9                     size    +1, benefit       91.8, efficiency     91.761
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +4, benefit      236.0, efficiency     58.989
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +21, benefit      209.7, efficiency      9.988
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +21, benefit      330.6, efficiency     15.744
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +21, benefit       33.1, efficiency      1.574
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 52):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit      286.7, efficiency   Infinity (-6 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit      573.4, efficiency     13.986
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:77:9                     size    +6, benefit      286.7, efficiency     47.786
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +3, benefit      236.0, efficiency     78.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +21, benefit      209.7, efficiency      9.988
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +21, benefit      330.6, efficiency     15.744
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +21, benefit       33.1, efficiency      1.574
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 58):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit      236.0, efficiency   Infinity (-5 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:103:5                    size    +3, benefit      236.0, efficiency     78.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit       33.1, efficiency   Infinity (-4 instructions)
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +359, benefit      396.8, efficiency      1.105
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at BlockBuilder.mnd:163:17              size   +32, benefit       33.1, efficiency      1.033
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +180, benefit      262.5, efficiency      1.458
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +180, benefit      131.3, efficiency      0.729
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +180, benefit        3.0, efficiency      0.017

Pass 1: speed optimization selection (cost limit 67):
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15063.1, efficiency  15063.055 (+1 instructions)
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    +9, benefit     2711.3, efficiency    301.261
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +5, benefit      322.6, efficiency     64.511
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
    Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +5, benefit      806.8, efficiency    161.353
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +5, benefit     1582.0, efficiency    316.406
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 66):
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit     2928.5, efficiency   2928.485 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit      351.4, efficiency     70.284
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit       78.7, efficiency     26.218
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +3, benefit      248.0, efficiency     82.656
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +3, benefit       24.8, efficiency      8.266
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
    Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 65):
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit     1792.0, efficiency   1791.962 (+1 instructions)
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 64):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at BlockBuilder.mnd:425:9           size    +1, benefit      625.0, efficiency    625.000 (+1 instructions)
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit      573.4, efficiency     11.703
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +25, benefit      209.7, efficiency      8.390
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +25, benefit      330.6, efficiency     13.225
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +25, benefit       33.1, efficiency      1.323
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit     1146.9, efficiency    573.428
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit      573.4, efficiency     11.703
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit      573.4, efficiency    573.428 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +25, benefit      209.7, efficiency      8.390
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +25, benefit      330.6, efficiency     13.225
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +25, benefit       33.1, efficiency      1.323
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 65):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit      573.4, efficiency    573.428 (-7 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +81, benefit      236.0, efficiency      2.913
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
    Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:101:5                    size    +1, benefit      209.7, efficiency    209.740
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +41, benefit        3.5, efficiency      0.085
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +41, benefit      182.5, efficiency      4.451
    Inline function call at Actions.mnd:144:5                    size    +1, benefit      330.6, efficiency    330.625
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +41, benefit       50.0, efficiency      1.219
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:172:5                    size    +1, benefit       33.1, efficiency     33.063
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 72):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  * Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 size   +26, benefit     8437.5, efficiency    324.519 (+8 instructions)
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +299, benefit     8437.5, efficiency     28.219
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:167:5               size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672
    Inline function call at BlockBuilder.mnd:390:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:391:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:392:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:393:13              size    +9, benefit     2109.4, efficiency    234.375
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:433:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:434:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:435:23              size   +75, benefit     1875.0, efficiency     25.000
  ! Inline function call at BlockBuilder.mnd:438:29              size   +75, benefit      937.5, efficiency     12.500
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 64):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveTo' defined at Actions.mnd:37:1         size   +11, benefit     2711.3, efficiency    246.486
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +379, benefit     8437.5, efficiency     22.263
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:167:5               size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  * Inline function call at Actions.mnd:46:5                     size    +6, benefit     1582.0, efficiency    263.672 (+1 instructions)
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BlockBuilder.mnd:433:23              size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BlockBuilder.mnd:434:23              size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BlockBuilder.mnd:435:23              size   +95, benefit     1875.0, efficiency     19.737
  ! Inline function call at BlockBuilder.mnd:438:29              size   +95, benefit      937.5, efficiency      9.868
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    +5, benefit     1129.3, efficiency    225.864 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit      573.4, efficiency     12.743
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:68:5                     size    +6, benefit      322.6, efficiency     53.759
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +23, benefit      209.7, efficiency      9.119
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +23, benefit      330.6, efficiency     14.375
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +23, benefit       33.1, efficiency      1.438
    Inline function call at BlockBuilder.mnd:167:5               size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at Actions.mnd:46:5                     size    +6, benefit      806.8, efficiency    134.461
    Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
    Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 70):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit      695.1, efficiency     99.298
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +31, benefit      330.6, efficiency     10.665
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
  * Inline function call at Actions.mnd:145:5                    size    +2, benefit      372.0, efficiency    185.977 (-2 instructions)
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +32, benefit      264.5, efficiency      8.266
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +32, benefit       66.1, efficiency      2.066
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 72):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit      323.1, efficiency     64.627
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +62, benefit      141.9, efficiency      2.289
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
  * Inline function call at Actions.mnd:139:5                    size    +2, benefit      182.5, efficiency     91.245 (-2 instructions)
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BlockBuilder.mnd:152:5               size    +9, benefit      115.7, efficiency     12.858
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +9, benefit       14.5, efficiency      1.607
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:119:21              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:123:17              size    +9, benefit        3.6, efficiency      0.402
    Inline function call at BlockBuilder.mnd:126:17              size    +9, benefit        1.8, efficiency      0.201
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +9, benefit        0.5, efficiency      0.050
    Inline function call at BlockBuilder.mnd:146:9               size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 74):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit      236.0, efficiency      2.987
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit     2360.1, efficiency     41.405
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
  * Inline function call at Actions.mnd:119:16                   size   +29, benefit     1966.3, efficiency     67.804 (+28 instructions)
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
    Inline function call at Actions.mnd:135:5                    size   +40, benefit        3.5, efficiency      0.087
    Inline function call at Actions.mnd:140:5                    size   +40, benefit      182.5, efficiency      4.562
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
    Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
    Inline function call at Actions.mnd:166:9                    size   +40, benefit       50.0, efficiency      1.250
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
    Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
    Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
    Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
    Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
    Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit      351.4, efficiency     50.203
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +135, benefit      236.0, efficiency      1.748
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +29, benefit      330.6, efficiency     11.401
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +28, benefit      393.8, efficiency     14.063
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +68, benefit        3.5, efficiency      0.051
  ! Inline function call at Actions.mnd:140:5                    size   +68, benefit      182.5, efficiency      2.684
    Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104
  * Inline function call at Actions.mnd:147:5                    size    +4, benefit      248.0, efficiency     61.992 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +68, benefit       50.0, efficiency      0.735
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +30, benefit      264.5, efficiency      8.817
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +30, benefit       66.1, efficiency      2.204
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 43):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit      573.4, efficiency     52.130
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +135, benefit      236.0, efficiency      1.748
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit      330.6, efficiency     10.332
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +28, benefit      393.8, efficiency     14.063
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +68, benefit        3.5, efficiency      0.051
  ! Inline function call at Actions.mnd:140:5                    size   +68, benefit      182.5, efficiency      2.684
  * Inline function call at Actions.mnd:146:5                    size    +6, benefit      330.6, efficiency     55.104 (+3 instructions)
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981
  ! Inline function call at Actions.mnd:166:9                    size   +68, benefit       50.0, efficiency      0.735
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +33, benefit      264.5, efficiency      8.015
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +33, benefit       66.1, efficiency      2.004
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit      140.6, efficiency     46.882
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +135, benefit      236.0, efficiency      1.748
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit       88.9, efficiency      1.388
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +28, benefit      393.8, efficiency     14.063
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +68, benefit        3.5, efficiency      0.051
  ! Inline function call at Actions.mnd:140:5                    size   +68, benefit      182.5, efficiency      2.684
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  * Inline function call at Actions.mnd:162:5                    size    +2, benefit      100.0, efficiency     49.981 (-2 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +68, benefit       50.0, efficiency      0.735
    Inline function call at BlockBuilder.mnd:161:17              size   +13, benefit       33.1, efficiency      2.543
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:70:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:78:17               size   +13, benefit       16.5, efficiency      1.272
    Inline function call at BlockBuilder.mnd:84:25               size   +13, benefit        2.1, efficiency      0.159
    Inline function call at BlockBuilder.mnd:89:21               size   +13, benefit        4.1, efficiency      0.318
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 42):
    Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.7, efficiency     40.682
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size    +5, benefit      242.8, efficiency     48.561 (-3 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +135, benefit      236.0, efficiency      1.748
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +419, benefit      396.8, efficiency      0.947
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +28, benefit      393.8, efficiency     14.063
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:105:5                    size    +6, benefit      209.7, efficiency     34.957
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +68, benefit        3.5, efficiency      0.051
  ! Inline function call at Actions.mnd:140:5                    size   +68, benefit      182.5, efficiency      2.684
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +68, benefit       50.0, efficiency      0.735
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:174:5                    size    +6, benefit       33.1, efficiency      5.510
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +210, benefit      262.5, efficiency      1.250
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +210, benefit      131.3, efficiency      0.625
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +210, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 45):
  * Replicate loop condition at BlockBuilder.mnd:232:5           size    +2, benefit       87.5, efficiency     43.750 (+2 instructions)
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
    Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.7, efficiency     40.682
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +141, benefit      236.0, efficiency      1.673
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
    Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +28, benefit      393.8, efficiency     14.063
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +131, benefit       28.0, efficiency      0.214
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +71, benefit        3.5, efficiency      0.049
  ! Inline function call at Actions.mnd:140:5                    size   +71, benefit      182.5, efficiency      2.570
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +71, benefit       50.0, efficiency      0.704
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BlockBuilder.mnd:245:5               size   +66, benefit        8.0, efficiency      0.121
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +66, benefit        8.0, efficiency      0.121
  ! Inline function call at BlockBuilder.mnd:258:5               size   +66, benefit       12.0, efficiency      0.182
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 43):
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +1, benefit       40.7, efficiency     40.682 (-9 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +141, benefit      236.0, efficiency      1.673
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit        3.1, efficiency      0.182
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit      656.3, efficiency     11.513
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
    Inline function call at Actions.mnd:134:5                    size    +2, benefit        3.5, efficiency      1.744
  ! Inline function call at Actions.mnd:135:5                    size   +71, benefit        3.5, efficiency      0.049
  ! Inline function call at Actions.mnd:140:5                    size   +71, benefit      182.5, efficiency      2.570
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +71, benefit       50.0, efficiency      0.704
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:173:5                    size    +2, benefit       37.2, efficiency     18.598
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +9, benefit        2.1, efficiency      0.230
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +9, benefit        0.5, efficiency      0.057
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BlockBuilder.mnd:245:5               size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BlockBuilder.mnd:258:5               size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 52):
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
    Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit      103.4, efficiency     34.483 (-4 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +141, benefit      236.0, efficiency      1.673
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +421, benefit      396.8, efficiency      0.942
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit      656.3, efficiency     11.513
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:106:37                   size    +4, benefit       78.7, efficiency     19.663
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +71, benefit        3.5, efficiency      0.049
  ! Inline function call at Actions.mnd:140:5                    size   +71, benefit      182.5, efficiency      2.570
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +71, benefit       50.0, efficiency      0.704
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:175:5                    size    +4, benefit       24.8, efficiency      6.199
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +211, benefit      262.5, efficiency      1.244
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +211, benefit      131.3, efficiency      0.622
  ! Inline function call at BlockBuilder.mnd:245:5               size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BlockBuilder.mnd:258:5               size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +211, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875
  * Replicate loop condition at BlockBuilder.mnd:424:5           size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +143, benefit      236.0, efficiency      1.650
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit      656.3, efficiency     11.513
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +72, benefit        3.5, efficiency      0.048
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      182.5, efficiency      2.535
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +72, benefit       50.0, efficiency      0.694
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BlockBuilder.mnd:245:5               size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BlockBuilder.mnd:258:5               size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 55):
  * Replicate loop condition at BlockBuilder.mnd:238:9           size    +2, benefit       43.8, efficiency     21.875 (+2 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +143, benefit      236.0, efficiency      1.650
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
    Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +57, benefit      656.3, efficiency     11.513
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +135, benefit       28.0, efficiency      0.207
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +72, benefit        3.5, efficiency      0.048
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      182.5, efficiency      2.535
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +72, benefit       50.0, efficiency      0.694
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
    Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +213, benefit      131.3, efficiency      0.616
  ! Inline function call at BlockBuilder.mnd:245:5               size   +68, benefit        8.0, efficiency      0.118
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +68, benefit        8.0, efficiency      0.118
  ! Inline function call at BlockBuilder.mnd:258:5               size   +68, benefit       12.0, efficiency      0.176
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 53):
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +143, benefit      236.0, efficiency      1.650
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +48, benefit      141.9, efficiency      2.957
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +425, benefit      396.8, efficiency      0.934
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +139, benefit       28.0, efficiency      0.201
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +72, benefit        3.5, efficiency      0.048
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      182.5, efficiency      2.535
    Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776
  ! Inline function call at Actions.mnd:166:9                    size   +72, benefit       50.0, efficiency      0.694
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
  * Inline function call at BlockBuilder.mnd:152:5               size    +7, benefit      115.7, efficiency     16.531 (+6 instructions)
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +213, benefit      262.5, efficiency      1.232
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +213, benefit      131.3, efficiency      0.616
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +70, benefit        8.0, efficiency      0.114
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:258:5               size   +70, benefit       12.0, efficiency      0.171
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +213, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 47):
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit      573.4, efficiency     12.201
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +215, benefit      384.7, efficiency      1.789
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
    Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
    Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +35, benefit      330.6, efficiency      9.446
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
    Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +139, benefit       28.0, efficiency      0.201
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +72, benefit        3.5, efficiency      0.048
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      182.5, efficiency      2.535
  * Inline function call at Actions.mnd:157:5                    size   +24, benefit      330.6, efficiency     13.776 (+21 instructions)
  ! Inline function call at Actions.mnd:166:9                    size   +72, benefit       50.0, efficiency      0.694
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
    Inline function call at BlockBuilder.mnd:167:5               size   +36, benefit      264.5, efficiency      7.347
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      148.8, efficiency      2.066
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:146:9               size   +36, benefit       66.1, efficiency      1.837
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +219, benefit      262.5, efficiency      1.199
    Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +219, benefit      131.3, efficiency      0.599
    Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +70, benefit        8.0, efficiency      0.114
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:258:5               size   +70, benefit       12.0, efficiency      0.171
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 26):
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit      242.8, efficiency     10.557 (+14 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +215, benefit      384.7, efficiency      1.789
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +437, benefit      396.8, efficiency      0.908
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +139, benefit       28.0, efficiency      0.201
    Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
    Inline function call at Actions.mnd:129:5                    size   +24, benefit      209.7, efficiency      8.739
  ! Inline function call at Actions.mnd:135:5                    size   +72, benefit        3.5, efficiency      0.048
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      182.5, efficiency      2.535
  ! Inline function call at Actions.mnd:166:9                    size   +72, benefit       50.0, efficiency      0.694
    Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006
    Inline function call at Actions.mnd:185:5                    size   +24, benefit       33.1, efficiency      1.378
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +72, benefit      148.8, efficiency      2.066
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +219, benefit      262.5, efficiency      1.199
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +219, benefit      131.3, efficiency      0.599
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +70, benefit        8.0, efficiency      0.114
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:258:5               size   +70, benefit       12.0, efficiency      0.171
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
    Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
    Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +219, benefit        3.0, efficiency      0.014

Pass 1: speed optimization selection (cost limit 12):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +275, benefit      384.7, efficiency      1.399
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +54, benefit       88.9, efficiency      1.645
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +479, benefit      396.8, efficiency      0.828
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +139, benefit       28.0, efficiency      0.201
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  * Inline function call at BlockBuilder.mnd:161:17              size   +11, benefit       33.1, efficiency      3.006 (+10 instructions)
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
    Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +240, benefit      262.5, efficiency      1.094
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +240, benefit      131.3, efficiency      0.547
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:258:5               size   +70, benefit       12.0, efficiency      0.171
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +240, benefit        3.0, efficiency      0.013

Pass 1: speed optimization selection (cost limit 2):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +367, benefit      403.3, efficiency      1.099
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +499, benefit      396.8, efficiency      0.795
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +139, benefit       28.0, efficiency      0.201
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +23, benefit       14.3, efficiency      0.620
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +173, benefit     1075.7, efficiency      6.218
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +383, benefit     8437.5, efficiency     22.030
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
  ! Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066
  ! Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +250, benefit      262.5, efficiency      1.050
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +250, benefit      131.3, efficiency      0.525
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +70, benefit        8.0, efficiency      0.114
  ! Inline function call at BlockBuilder.mnd:258:5               size   +70, benefit       12.0, efficiency      0.171
  ! Inline function call at BlockBuilder.mnd:259:17              size   +58, benefit        9.0, efficiency      0.155
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +24, benefit        4.8, efficiency      0.198
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +24, benefit        9.5, efficiency      0.396
  ! Inline function call at BlockBuilder.mnd:357:12              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:361:17              size   +58, benefit        6.0, efficiency      0.103
  ! Inline function call at BlockBuilder.mnd:396:29              size   +58, benefit     1054.7, efficiency     18.184
  ! Inline function call at BlockBuilder.mnd:432:29              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:433:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:434:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:435:23              size   +96, benefit     1875.0, efficiency     19.531
  ! Inline function call at BlockBuilder.mnd:438:29              size   +96, benefit      937.5, efficiency      9.766
  ! Inline function call at BlockBuilder.mnd:450:5               size  +250, benefit        3.0, efficiency      0.012

Pass 2: speed optimization selection (cost limit 19):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +367, benefit      403.3, efficiency      1.099
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +41, benefit       26.2, efficiency      0.639
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +493, benefit      396.8, efficiency      0.805
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +137, benefit       28.0, efficiency      0.204
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
    Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  * Inline function call at BlockBuilder.mnd:101:17              size    +7, benefit       14.5, efficiency      2.066 (+6 instructions)
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +247, benefit      262.5, efficiency      1.063
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +247, benefit      131.3, efficiency      0.531
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +69, benefit        8.0, efficiency      0.116
    Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:258:5               size   +69, benefit       12.0, efficiency      0.174
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
    Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +23, benefit        4.8, efficiency      0.207
    Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:433:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:434:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:435:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:438:29              size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BlockBuilder.mnd:450:5               size  +247, benefit        3.0, efficiency      0.012

Pass 2: speed optimization selection (cost limit 13):
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +459, benefit      421.9, efficiency      0.919
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit       11.8, efficiency      0.346
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +43, benefit       55.8, efficiency      1.298
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'supplyBaseLocal' defined at BlockBuilder.mnd:175:1 size  +505, benefit      396.8, efficiency      0.786
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +137, benefit       28.0, efficiency      0.204
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
  * Inline function call at BlockBuilder.mnd:62:17               size   +11, benefit       16.5, efficiency      1.503 (+10 instructions)
    Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
    Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
    Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit       18.6, efficiency      0.202
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +253, benefit      262.5, efficiency      1.038
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +253, benefit      131.3, efficiency      0.519
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:258:5               size   +69, benefit       12.0, efficiency      0.174
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:433:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:434:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:435:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:438:29              size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BlockBuilder.mnd:450:5               size  +253, benefit        3.0, efficiency      0.012

Pass 2: speed optimization selection (cost limit 3):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit       11.8, efficiency      0.346
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +137, benefit       28.0, efficiency      0.204
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit        9.3, efficiency      0.101
  ! Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +263, benefit      262.5, efficiency      0.998
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +263, benefit      131.3, efficiency      0.499
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:258:5               size   +69, benefit       12.0, efficiency      0.174
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:433:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:434:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:435:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:438:29              size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BlockBuilder.mnd:450:5               size  +263, benefit        3.0, efficiency      0.011

Pass 3: speed optimization selection (cost limit 7):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +34, benefit       11.8, efficiency      0.346
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +137, benefit       28.0, efficiency      0.204
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit        9.3, efficiency      0.101
  ! Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit       18.6, efficiency      0.202
    Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
    Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
  * Inline function call at BlockBuilder.mnd:119:21              size    +7, benefit        3.6, efficiency      0.517 (+6 instructions)
    Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
    Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
    Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
    Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
    Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +263, benefit      262.5, efficiency      0.998
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +263, benefit      131.3, efficiency      0.499
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:258:5               size   +69, benefit       12.0, efficiency      0.174
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:433:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:434:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:435:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:438:29              size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BlockBuilder.mnd:450:5               size  +263, benefit        3.0, efficiency      0.011

Pass 3: speed optimization selection (cost limit 1):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        8.1, efficiency      0.301
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +137, benefit       28.0, efficiency      0.204
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit        9.3, efficiency      0.101
  ! Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit        4.6, efficiency      0.051
  ! Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +269, benefit      262.5, efficiency      0.976
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +269, benefit      131.3, efficiency      0.488
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:258:5               size   +69, benefit       12.0, efficiency      0.174
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:433:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:434:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:435:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:438:29              size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BlockBuilder.mnd:450:5               size  +269, benefit        3.0, efficiency      0.011

Pass 4: speed optimization selection (cost limit 1):
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +13, benefit        3.1, efficiency      0.238
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +27, benefit        8.1, efficiency      0.301
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +56, benefit      330.6, efficiency      5.904
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +32, benefit       39.3, efficiency      1.227
  ! Inline function 'unpackCfg' defined at Common.mnd:11:1       size   +37, benefit       21.3, efficiency      0.574
  ! Inline function 'targetMet' defined at BlockBuilder.mnd:187:1 size   +86, benefit      787.5, efficiency      9.157
  ! Inline function 'meetTargetLocal' defined at BlockBuilder.mnd:199:1 size  +137, benefit       28.0, efficiency      0.204
  ! Inline function 'buildBlock' defined at BlockBuilder.mnd:257:1 size   +22, benefit       14.3, efficiency      0.648
  ! Inline function 'buildBlockAtLocal' defined at BlockBuilder.mnd:315:1 size  +170, benefit     1075.7, efficiency      6.328
  ! Inline function 'buildTitaniumDrill' defined at BlockBuilder.mnd:385:1 size  +367, benefit     8437.5, efficiency     22.990
  ! Inline function call at Actions.mnd:135:5                    size   +92, benefit        3.5, efficiency      0.038
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      182.5, efficiency      1.984
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       50.0, efficiency      0.543
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:167:5               size   +57, benefit      264.5, efficiency      4.640
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit      148.8, efficiency      1.617
  ! Inline function call at Actions.mnd:166:9                    size   +92, benefit        9.3, efficiency      0.101
  ! Inline function call at BlockBuilder.mnd:70:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:78:17               size   +11, benefit       16.5, efficiency      1.503
  ! Inline function call at BlockBuilder.mnd:84:25               size   +11, benefit        2.1, efficiency      0.188
  ! Inline function call at BlockBuilder.mnd:89:21               size   +11, benefit        4.1, efficiency      0.376
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit       18.6, efficiency      0.202
  ! Inline function call at BlockBuilder.mnd:110:25              size    +7, benefit        2.1, efficiency      0.295
  ! Inline function call at BlockBuilder.mnd:112:25              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at Actions.mnd:140:5                    size   +92, benefit        4.6, efficiency      0.051
  ! Inline function call at BlockBuilder.mnd:123:17              size    +7, benefit        3.6, efficiency      0.517
  ! Inline function call at BlockBuilder.mnd:126:17              size    +7, benefit        1.8, efficiency      0.258
  ! Inline function call at BlockBuilder.mnd:130:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:132:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:137:21              size    +7, benefit        0.5, efficiency      0.074
  ! Inline function call at BlockBuilder.mnd:140:21              size    +7, benefit        0.5, efficiency      0.065
  ! Inline function call at BlockBuilder.mnd:146:9               size   +57, benefit       66.1, efficiency      1.160
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:233:9               size  +269, benefit      262.5, efficiency      0.976
  ! Inline function call at BlockBuilder.mnd:232:12              size   +29, benefit      262.5, efficiency      9.052
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:239:13              size  +269, benefit      131.3, efficiency      0.488
  ! Inline function call at BlockBuilder.mnd:238:16              size   +29, benefit      131.3, efficiency      4.526
  ! Inline function call at BlockBuilder.mnd:245:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:250:5               size   +19, benefit        7.5, efficiency      0.395
  ! Inline function call at BlockBuilder.mnd:251:5               size   +69, benefit        8.0, efficiency      0.116
  ! Inline function call at BlockBuilder.mnd:258:5               size   +69, benefit       12.0, efficiency      0.174
  ! Inline function call at BlockBuilder.mnd:259:17              size   +57, benefit        9.0, efficiency      0.158
  ! Inline function call at BlockBuilder.mnd:267:9               size   +19, benefit        4.3, efficiency      0.224
  ! Inline function call at BlockBuilder.mnd:268:16              size   +23, benefit        4.8, efficiency      0.207
  ! Inline function call at BlockBuilder.mnd:276:5               size   +19, benefit        9.5, efficiency      0.500
  ! Inline function call at BlockBuilder.mnd:277:20              size   +23, benefit        9.5, efficiency      0.413
  ! Inline function call at BlockBuilder.mnd:357:12              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:361:17              size   +57, benefit        6.0, efficiency      0.105
  ! Inline function call at BlockBuilder.mnd:396:29              size   +57, benefit     1054.7, efficiency     18.503
  ! Inline function call at BlockBuilder.mnd:432:29              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:433:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:434:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:435:23              size   +92, benefit     1875.0, efficiency     20.380
  ! Inline function call at BlockBuilder.mnd:438:29              size   +92, benefit      937.5, efficiency     10.190
  ! Inline function call at BlockBuilder.mnd:450:5               size  +269, benefit        3.0, efficiency      0.011

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1480 jump *label341 always
  1481 set *tmp378 null
  1482 label *label341
-    * set *tmp381 *tmp378
-    * jump *label343 equal *tmp381 @ore-titanium
+ 1483 jump *label343 equal *tmp378 @ore-titanium
  1484 jump *label342 always
  1485 label *label343
  1486 set *tmp382 :titaniumDrillScore:positive
 
  1488 set *tmp377 *tmp382
  1489 jump *label340 always
  1490 label *label342
-    * jump *label345 equal *tmp381 @ore-copper
-    * jump *label345 equal *tmp381 @ore-lead
-    * jump *label345 equal *tmp381 @ore-scrap
-    * jump *label345 equal *tmp381 @ore-coal
+ 1491 jump *label345 equal *tmp378 @ore-copper
+ 1492 jump *label345 equal *tmp378 @ore-lead
+ 1493 jump *label345 equal *tmp378 @ore-scrap
+ 1494 jump *label345 equal *tmp378 @ore-coal
  1495 jump *label344 always
  1496 label *label345
  1497 set *tmp383 :titaniumDrillScore:negative

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-76 instructions):
 
    99 op notEqual *tmp109 *tmp108 null
   100 jump *label70 equal *tmp109 false
   101 ucontrol itemDrop @air 1000
-    * set *tmp110 null
   102 jump *label71 always
   103 label *label70
-    * set *tmp110 null
   104 label *label71
   105 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   106 label *label68
 
   159 op greaterThan *tmp124 *tmp122 *tmp123
   160 jump *label83 notEqual *tmp124 false
   161 label *label85
-    * set *tmp119 null
   162 jump *label81 always
   163 label *label80
   164 label *label86
 
   169 label *label87
   170 jump *label86 always
   171 label *label88
-    * set *tmp119 null
   172 label *label81
   173 set :transportStatus:target 0
   174 set :transportStatus:item null
 
   186 setaddr :error*retaddr *label93 (h:*label93)
   187 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
   188 label *label93
-    * set *tmp130 null
   189 jump *label92 always
   190 label *label91
-    * set *tmp130 null
   191 label *label92
   192 label *label90
   193 return :locateOre*retaddr
 
   217 setaddr :dropAll*retaddr *label100 (h:*label100)
   218 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   219 label *label100
-    * set *tmp134 null
   220 jump *label99 always
   221 label *label98
-    * set *tmp134 null
   222 label *label99
   223 set :status3:text "Mining..."
   224 setaddr :status3*retaddr *label101 (h:*label101)
 
   234 op land *tmp139 *tmp137 *tmp138
   235 jump *label105 equal *tmp139 false
   236 jump *label104 always
-    * set *tmp140 null
   237 jump *label106 always
   238 label *label105
-    * set *tmp140 null
   239 label *label106
   240 ucontrol mine :mineOre:x :mineOre:y
   241 op greaterThan *tmp141 @second :mineOre:stop
   242 jump *label107 equal *tmp141 false
   243 jump *label104 always
-    * set *tmp142 null
   244 jump *label108 always
   245 label *label107
-    * set *tmp142 null
   246 label *label108
   247 op equal *tmp143 .noTarget false
   248 jump *label109 equal *tmp143 false
 
   256 label *label112
   257 set *tmp145 null
   258 label *label113
-    * set *tmp144 *tmp145
   259 jump *label110 always
   260 label *label109
-    * set *tmp144 null
   261 label *label110
   262 label *label103
   263 sensor *tmp146 @unit @totalItems
 
   341 op land *tmp158 *tmp156 *tmp157
   342 jump *label129 equal *tmp158 false
   343 ucontrol itemDrop @air 1000
-    * set *tmp159 null
   344 jump *label130 always
   345 label *label129
-    * set *tmp159 null
   346 label *label130
   347 label *label127
   348 sensor *tmp160 @unit :fetchBlock:item
 
   379 setaddr :mineOre*retaddr *label136 (h:*label136)
   380 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   381 label *label136
-    * set *tmp168 null
   382 jump *label135 always
   383 label *label134
-    * set *tmp168 null
   384 label *label135
   385 label *label132
   386 return :supplyBlock*retaddr
 
   417 op land *tmp174 *tmp172 *tmp173
   418 jump *label145 equal *tmp174 false
   419 ucontrol itemDrop @air 1000
-    * set *tmp175 null
   420 jump *label146 always
   421 label *label145
-    * set *tmp175 null
   422 label *label146
   423 label *label143
   424 sensor *tmp176 @unit :supplyBlockFromCore:item
 
   480 sensor *tmp204 :unpackCfg:type @thorium
   481 set :unpackCfg:th *tmp204
   482 sensor *tmp205 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp205
   483 label *label148
   484 return :unpackCfg*retaddr
   485 end
 
   523 label *label156
   524 set *tmp216 null
   525 label *label157
-    * set *tmp213 *tmp216
   526 jump *label155 always
   527 label *label154
-    * set *tmp213 null
   528 label *label155
   529 set :fetchBlock:block .thoriumContainer
   530 set :fetchBlock:item @thorium
 
   540 set :setPolyTarget:target 4
   541 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   542 label *label166
-    * set *tmp222 null
   543 jump *label164 always
   544 label *label163
-    * set *tmp222 null
   545 label *label164
   546 label *label152
-    * set *tmp210 null
   547 jump *label151 always
   548 label *label150
   549 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   585 label *label177
   586 set *tmp232 null
   587 label *label178
-    * set *tmp229 *tmp232
   588 jump *label176 always
   589 label *label175
-    * set *tmp229 null
   590 label *label176
   591 sensor *tmp233 AJTJK-battery1 @totalPower
   592 op lessThan *tmp234 *tmp233 .powerTarget
 
   609 label *label183
   610 set *tmp238 null
   611 label *label184
-    * set *tmp235 *tmp238
   612 jump *label182 always
   613 label *label181
-    * set *tmp235 null
   614 label *label182
   615 sensor *tmp239 .core @silicon
   616 op lessThan *tmp240 *tmp239 silicon
 
   680 label *label187
   681 set *tmp241 null
   682 label *label188
-    * set *tmp226 *tmp241
   683 jump *label174 always
   684 label *label173
-    * set *tmp226 null
   685 label *label174
   686 sensor *tmp252 .core @titanium
   687 op lessThan *tmp253 *tmp252 titanium
 
   884 label *label207
   885 set *tmp262 null
   886 label *label208
-    * set *tmp260 *tmp262
   887 jump *label206 always
   888 label *label205
   889 set :status1:text "Goal 11: Fetching titanium"
 
   895 setaddr :fetchBlock*retaddr *label253 (h:*label253)
   896 call *label28 *invalid :fetchBlock*retval (m:*label253) (h:*label253)
   897 label *label253
-    * set *tmp260 null
   898 label *label206
   899 label *label172
   900 set *tmp224 null
   901 label *label168
-    * set *tmp210 *tmp224
   902 label *label151
   903 label *label149
   904 return :supplyBaseLocal*retaddr
 
   909 jump *label255 equal *tmp299 false
   910 set :targetMet*retval false
   911 jump *label254 always
-    * set *tmp300 null
   912 jump *label256 always
   913 label *label255
-    * set *tmp300 null
   914 label *label256
   915 sensor *tmp301 .core @lead
   916 op lessThan *tmp302 *tmp301 lead
   917 jump *label257 equal *tmp302 false
   918 set :targetMet*retval false
   919 jump *label254 always
-    * set *tmp303 null
   920 jump *label258 always
   921 label *label257
-    * set *tmp303 null
   922 label *label258
   923 sensor *tmp304 .core @graphite
   924 op lessThan *tmp305 *tmp304 graphite
   925 jump *label259 equal *tmp305 false
   926 set :targetMet*retval false
   927 jump *label254 always
-    * set *tmp306 null
   928 jump *label260 always
   929 label *label259
-    * set *tmp306 null
   930 label *label260
   931 sensor *tmp307 .core @silicon
   932 op lessThan *tmp308 *tmp307 silicon
   933 jump *label261 equal *tmp308 false
   934 set :targetMet*retval false
   935 jump *label254 always
-    * set *tmp309 null
   936 jump *label262 always
   937 label *label261
-    * set *tmp309 null
   938 label *label262
   939 sensor *tmp310 .core @titanium
   940 op lessThan *tmp311 *tmp310 titanium
   941 jump *label263 equal *tmp311 false
   942 set :targetMet*retval false
   943 jump *label254 always
-    * set *tmp312 null
   944 jump *label264 always
   945 label *label263
-    * set *tmp312 null
   946 label *label264
   947 sensor *tmp313 .core @metaglass
   948 op lessThan *tmp314 *tmp313 metaglass
   949 jump *label265 equal *tmp314 false
   950 set :targetMet*retval false
   951 jump *label254 always
-    * set *tmp315 null
   952 jump *label266 always
   953 label *label265
-    * set *tmp315 null
   954 label *label266
   955 sensor *tmp316 .core @thorium
   956 op lessThan *tmp317 *tmp316 thorium
   957 jump *label267 equal *tmp317 false
   958 set :targetMet*retval false
   959 jump *label254 always
-    * set *tmp318 null
   960 jump *label268 always
   961 label *label267
-    * set *tmp318 null
   962 label *label268
   963 set :targetMet*retval true
   964 jump *label254 always
 
  1070 label *label289
  1071 jump *label288 always
  1072 label *label290
-    * set *tmp334 null
  1073 jump *label286 always
  1074 label *label285
-    * set *tmp334 null
  1075 label *label286
  1076 label *label269
  1077 return :meetTargetLocal*retaddr
 
  1193 label *label305
  1194 set :buildRemoteBlock*retval :buildBlock*retval
  1195 jump *label301 always
-    * set *tmp341 null
  1196 jump *label303 always
  1197 label *label302
-    * set *tmp341 null
  1198 label *label303
  1199 set :buildRemoteBlock*retval false
  1200 jump *label301 always
 
  1270 jump *label317 equal *tmp350 false
  1271 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1272 jump *label312 always
-    * set *tmp351 null
  1273 jump *label318 always
  1274 label *label317
-    * set *tmp351 null
  1275 label *label318
  1276 set :buildError:text "Cannot build at position"
  1277 set :buildError:block :buildBlockAtLocal:block
 
  1285 set .ERROR_Y :buildError:y
  1286 stop
  1287 label *label319
-    * set *tmp349 null
  1288 jump *label316 always
  1289 label *label315
-    * set *tmp349 null
  1290 label *label316
  1291 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
  1292 wait 0.25
 
  1311 set .ERROR_Y :buildError.1:y
  1312 stop
  1313 label *label325
-    * set *tmp357 null
  1314 jump *label324 always
  1315 label *label323
  1316 set :buildBlockAtLocal:success true
-    * set *tmp357 :buildBlockAtLocal:success
  1317 label *label324
  1318 op equal *tmp358 :buildBlockAtLocal:block @multiplicative-reconstructor
  1319 jump *label326 equal *tmp358 false
 
  1328 label *label328
  1329 set *tmp362 null
  1330 label *label329
-    * set *tmp359 *tmp362
  1331 jump *label327 always
  1332 label *label326
-    * set *tmp359 null
  1333 label *label327
  1334 label *label321
  1335 op notEqual *tmp363 :buildBlockAtLocal:type :buildBlockAtLocal:block
 
  1357 op or *tmp374 *tmp6 *tmp373
  1358 write *tmp374 processor2 ".blocksBuilt"
  1359 write :logBlock:index processor2 ".recentBuildIndex"
-    * set *tmp372 :logBlock:index
  1360 jump *label333 always
  1361 label *label332
-    * set *tmp372 null
  1362 label *label333
  1363 label *label330
  1364 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
 
  1471 label *label353
  1472 set .positive :titaniumDrillScore:positive
  1473 set .negative :titaniumDrillScore:negative
-    * set *tmp392 :titaniumDrillScore*retval
  1474 op sub *tmp393 :buildTitaniumDrill:x 0.5
  1475 op add *tmp394 :buildTitaniumDrill:y 0.5
  1476 set :titaniumDrillScore:x *tmp393
 
  1482 label *label354
  1483 set .positive :titaniumDrillScore:positive
  1484 set .negative :titaniumDrillScore:negative
-    * set *tmp395 :titaniumDrillScore*retval
  1485 op add *tmp396 :buildTitaniumDrill:x 0.5
  1486 op sub *tmp397 :buildTitaniumDrill:y 0.5
  1487 set :titaniumDrillScore:x *tmp396
 
  1493 label *label355
  1494 set .positive :titaniumDrillScore:positive
  1495 set .negative :titaniumDrillScore:negative
-    * set *tmp398 :titaniumDrillScore*retval
  1496 op add *tmp399 :buildTitaniumDrill:x 0.5
  1497 op add *tmp400 :buildTitaniumDrill:y 0.5
  1498 set :titaniumDrillScore:x *tmp399
 
  1504 label *label356
  1505 set .positive :titaniumDrillScore:positive
  1506 set .negative :titaniumDrillScore:negative
-    * set *tmp401 :titaniumDrillScore*retval
  1507 op greaterThan *tmp402 .positive .negative
  1508 op greaterThanEq *tmp403 .positive 2
  1509 op land *tmp404 *tmp402 *tmp403
 
  1551 label *label349
  1552 set *tmp387 null
  1553 label *label350
-    * set *tmp385 *tmp387
  1554 jump *label348 always
  1555 label *label347
-    * set *tmp385 null
  1556 label *label348
  1557 set :buildTitaniumDrill*retval 0
  1558 jump *label346 always
 
  1659 label *label377
  1660 set *tmp442 null
  1661 label *label378
-    * set *tmp419 *tmp442
  1662 jump *label372 always
  1663 label *label371
-    * set *tmp419 null
  1664 label *label372
-    * set *tmp444 :buildTitaniumDrills:current
  1665 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1666 label *label369
  1667 jump *label368 always
 
  1669 op greaterThanEq *tmp445 :buildTitaniumDrills:tiles 10
  1670 jump *label380 equal *tmp445 false
  1671 jump *label367 always
-    * set *tmp446 null
  1672 jump *label381 always
  1673 label *label380
-    * set *tmp446 null
  1674 label *label381
  1675 op greaterThanEq *tmp447 :buildTitaniumDrills:count 6
  1676 jump *label382 equal *tmp447 false
  1677 jump *label367 always
-    * set *tmp448 null
  1678 jump *label383 always
  1679 label *label382
-    * set *tmp448 null
  1680 label *label383
  1681 label *label366
  1682 jump *label365 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   251 label *label111
   252 jump *label112 equal :targetMet*retval false
   253 jump *label104 always
-    * set *tmp145 null
   254 jump *label113 always
   255 label *label112
-    * set *tmp145 null
   256 label *label113
   257 jump *label110 always
   258 label *label109
 
   477 set :unpackCfg:mg *tmp203
   478 sensor *tmp204 :unpackCfg:type @thorium
   479 set :unpackCfg:th *tmp204
-    * sensor *tmp205 :unpackCfg:type @size
   480 label *label148
   481 return :unpackCfg*retaddr
   482 end
 
   515 label *label161
   516 set *tmp219 null
   517 label *label159
-    * set *tmp216 *tmp219
   518 jump *label157 always
   519 label *label156
-    * set *tmp216 null
   520 label *label157
   521 jump *label155 always
   522 label *label154
 
   553 call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
   554 label *label171
   555 label *label169
-    * set *tmp224 null
   556 jump *label168 always
   557 label *label167
   558 set :supplyBase0:supplied false
 
   574 call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
   575 label *label180
   576 set :supplyBase0:supplied true
-    * set *tmp232 :supplyBase0:supplied
   577 jump *label178 always
   578 label *label177
-    * set *tmp232 null
   579 label *label178
   580 jump *label176 always
   581 label *label175
 
   596 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   597 label *label186
   598 jump *label172 always
-    * set *tmp238 null
   599 jump *label184 always
   600 label *label183
-    * set *tmp238 null
   601 label *label184
   602 jump *label182 always
   603 label *label181
 
   665 label *label194
   666 set *tmp244 *tmp247
   667 label *label190
-    * set *tmp241 *tmp244
   668 jump *label188 always
   669 label *label187
-    * set *tmp241 null
   670 label *label188
   671 jump *label174 always
   672 label *label173
 
   867 label *label214
   868 set *tmp266 *tmp269
   869 label *label210
-    * set *tmp262 *tmp266
   870 jump *label208 always
   871 label *label207
-    * set *tmp262 null
   872 label *label208
   873 jump *label206 always
   874 label *label205
 
   883 label *label253
   884 label *label206
   885 label *label172
-    * set *tmp224 null
   886 label *label168
   887 label *label151
   888 label *label149
 
  1308 jump *label328 equal *tmp361 false
  1309 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1310 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * set *tmp362 null
  1311 jump *label329 always
  1312 label *label328
-    * set *tmp362 null
  1313 label *label329
  1314 jump *label327 always
  1315 label *label326
 
  1421 label *label344
  1422 set *tmp377 null
  1423 label *label340
-    * set :titaniumDrillScore*retval *tmp377
  1424 label *label339
  1425 return :titaniumDrillScore*retaddr
  1426 end
 
  1528 label *label357
  1529 set *tmp405 null
  1530 label *label358
-    * set *tmp387 *tmp405
  1531 jump *label350 always
  1532 label *label349
-    * set *tmp387 null
  1533 label *label350
  1534 jump *label348 always
  1535 label *label347
 
  1634 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1635 set *tmp443 :buildTitaniumDrill*retval
  1636 set :buildTitaniumDrills:built *tmp443
-    * set *tmp442 :buildTitaniumDrills:built
  1637 jump *label378 always
  1638 label *label377
-    * set *tmp442 null
  1639 label *label378
  1640 jump *label372 always
  1641 label *label371

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
   505 setaddr :supplyBlock*retaddr *label160 (h:*label160)
   506 call *label29 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
   507 label *label160
-    * set *tmp219 null
   508 jump *label159 always
   509 label *label158
   510 set :supplyBlockFromCore:target .thoriumGenerator
 
   512 setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
   513 call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   514 label *label161
-    * set *tmp219 null
   515 label *label159
   516 jump *label157 always
   517 label *label156
 
   616 call *label29 *invalid :supplyBlock*retval (m:*label192) (h:*label192)
   617 label *label192
   618 set :supplyBase0:supplied true
-    * set *tmp244 :supplyBase0:supplied
   619 jump *label190 always
   620 label *label189
   621 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
 
   660 label *label193
   661 set *tmp247 null
   662 label *label194
-    * set *tmp244 *tmp247
   663 label *label190
   664 jump *label188 always
   665 label *label187
 
   696 setaddr :mineOre.2*retaddr *label212 (h:*label212)
   697 call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
   698 label *label212
-    * set *tmp266 null
   699 jump *label210 always
   700 label *label209
   701 sensor *tmp267 .core @silicon
 
   860 label *label231
   861 set *tmp269 *tmp284
   862 label *label214
-    * set *tmp266 *tmp269
   863 label *label210
   864 jump *label208 always
   865 label *label207
 
  1399 label *label343
  1400 set *tmp382 :titaniumDrillScore:positive
  1401 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * set *tmp377 *tmp382
  1402 jump *label340 always
  1403 label *label342
  1404 jump *label345 equal *tmp378 @ore-copper
 
  1409 label *label345
  1410 set *tmp383 :titaniumDrillScore:negative
  1411 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * set *tmp377 *tmp383
  1412 jump *label340 always
  1413 label *label344
-    * set *tmp377 null
  1414 label *label340
  1415 label *label339
  1416 return :titaniumDrillScore*retaddr
 
  1514 label *label360
  1515 set *tmp407 null
  1516 label *label361
-    * set *tmp405 *tmp407
  1517 jump *label358 always
  1518 label *label357
-    * set *tmp405 null
  1519 label *label358
  1520 jump *label350 always
  1521 label *label349

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-8 instructions):
 
   655 set :supplyBase0:supplied true
   656 set *tmp248 :supplyBase0:supplied
   657 label *label196
-    * set *tmp247 *tmp248
   658 jump *label194 always
   659 label *label193
-    * set *tmp247 null
   660 label *label194
   661 label *label190
   662 jump *label188 always
 
   764 label *label229
   765 set *tmp270 null
   766 label *label216
-    * set *tmp269 *tmp270
   767 jump *label214 always
   768 label *label213
   769 sensor *tmp282 .core @copper
 
   855 label *label235
   856 set *tmp284 *tmp287
   857 label *label231
-    * set *tmp269 *tmp284
   858 label *label214
   859 label *label210
   860 jump *label208 always
 
  1393 jump *label343 equal *tmp378 @ore-titanium
  1394 jump *label342 always
  1395 label *label343
-    * set *tmp382 :titaniumDrillScore:positive
  1396 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1397 jump *label340 always
  1398 label *label342
 
  1402 jump *label345 equal *tmp378 @ore-coal
  1403 jump *label344 always
  1404 label *label345
-    * set *tmp383 :titaniumDrillScore:negative
  1405 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1406 jump *label340 always
  1407 label *label344
 
  1503 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp411
  1504 set :buildTitaniumDrill*retval .positive
  1505 jump *label346 always
-    * set *tmp407 null
  1506 jump *label361 always
  1507 label *label360
-    * set *tmp407 null
  1508 label *label361
  1509 jump *label358 always
  1510 label *label357

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-6 instructions):
 
   640 label *label197
   641 set *tmp251 null
   642 label *label198
-    * set *tmp248 *tmp251
   643 jump *label196 always
   644 label *label195
   645 set :status1:text "Goal 3: sand for silicon requirement"
 
   652 call *label29 *invalid :supplyBlock*retval (m:*label202) (h:*label202)
   653 label *label202
   654 set :supplyBase0:supplied true
-    * set *tmp248 :supplyBase0:supplied
   655 label *label196
   656 jump *label194 always
   657 label *label193
 
   737 label *label225
   738 set *tmp271 null
   739 label *label219
-    * set *tmp270 *tmp271
   740 jump *label216 always
   741 label *label215
   742 set :status1:text "Goal 6: silicon requirement"
 
   759 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   760 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   761 label *label229
-    * set *tmp270 null
   762 label *label216
   763 jump *label214 always
   764 label *label213
 
   773 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   774 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
   775 label *label233
-    * set *tmp284 null
   776 jump *label231 always
   777 label *label230
   778 sensor *tmp285 .core @lead
 
   848 label *label239
   849 set *tmp287 *tmp290
   850 label *label235
-    * set *tmp284 *tmp287
   851 label *label231
   852 label *label214
   853 label *label210

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-6 instructions):
 
   635 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   636 label *label200
   637 set :supplyBase0:supplied true
-    * set *tmp251 :supplyBase0:supplied
   638 jump *label198 always
   639 label *label197
-    * set *tmp251 null
   640 label *label198
   641 jump *label196 always
   642 label *label195
 
   726 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   727 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   728 label *label224
-    * set *tmp271 null
   729 jump *label219 always
   730 label *label218
   731 set :mineOre.2:ore @coal
   732 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   733 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   734 label *label225
-    * set *tmp271 null
   735 label *label219
   736 jump *label216 always
   737 label *label215
 
   782 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   783 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
   784 label *label237
-    * set *tmp287 null
   785 jump *label235 always
   786 label *label234
   787 sensor *tmp288 .core @metaglass
 
   841 label *label247
   842 set *tmp290 *tmp292
   843 label *label239
-    * set *tmp287 *tmp290
   844 label *label235
   845 label *label231
   846 label *label214

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   806 label *label244
   807 set *tmp291 null
   808 label *label242
-    * set *tmp290 *tmp291
   809 jump *label239 always
   810 label *label238
   811 set :status1:text "Goal 10: supplying base"
 
   838 label *label251
   839 set *tmp292 null
   840 label *label247
-    * set *tmp290 *tmp292
   841 label *label239
   842 label *label235
   843 label *label231

Modifications by Initial phase, Dead Code Elimination, iteration 8 (-4 instructions):
 
   797 setaddr :mineOre.1*retaddr *label243 (h:*label243)
   798 call *label26 *invalid :mineOre.1*retval (m:*label243) (h:*label243)
   799 label *label243
-    * set *tmp291 null
   800 jump *label242 always
   801 label *label241
   802 set :mineOre.2:ore @sand
   803 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   804 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   805 label *label244
-    * set *tmp291 null
   806 label *label242
   807 jump *label239 always
   808 label *label238
 
   816 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   817 call *label26 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   818 label *label248
-    * set *tmp292 null
   819 jump *label247 always
   820 label *label246
   821 sensor *tmp293 .core @coal
 
   833 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   834 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   835 label *label251
-    * set *tmp292 null
   836 label *label247
   837 label *label239
   838 label *label235

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-49 instructions):
 
    30 set .negative 0
    31 label *label51
    32 ubind @poly
-    * set *tmp101 @unit
-    * set .builder *tmp101
-    * ulocate building core false @copper .coreX .coreY *tmp103 *tmp102
-    * set .core *tmp102
+   33 set .builder @unit
+   34 ulocate building core false @copper .coreX .coreY *tmp103 .core
    35 label *label52
    36 op equal *tmp104 .core null
    37 jump *label51 notEqual *tmp104 false
 
   146 setaddr :moveToBlock*retaddr *label82 (h:*label82)
   147 call *label22 *invalid :moveToBlock*retval (m:*label82) (h:*label82)
   148 label *label82
-    * sensor *tmp120 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp120
+  149 sensor :depositItems:cap :depositItems:block @itemCapacity
   150 label *label83
   151 ucontrol itemDrop :depositItems:block 28
   152 label *label84
 
   190 return :locateOre*retaddr
   191 end
   192 label *label25
-    * op min *tmp131 :mineOre:amount 28
-    * set :mineOre:amount *tmp131
+  193 op min :mineOre:amount :mineOre:amount 28
   194 set :transportStatus:target :mineOre:amount
   195 set :transportStatus:item :mineOre:ore
   196 setaddr :transportStatus*retaddr *label95 (h:*label95)
 
   220 setaddr :status3*retaddr *label101 (h:*label101)
   221 call *label16 *invalid :status3*retval (m:*label101) (h:*label101)
   222 label *label101
-    * op add *tmp135 @second 10
-    * set :mineOre:stop *tmp135
+  223 op add :mineOre:stop @second 10
   224 label *label102
-    * sensor *tmp136 @unit @firstItem
-    * set :mineOre:item *tmp136
+  225 sensor :mineOre:item @unit @firstItem
   226 op notEqual *tmp137 :mineOre:item null
   227 op notEqual *tmp138 :mineOre:item :mineOre:ore
   228 op land *tmp139 *tmp137 *tmp138
 
   290 setaddr :status2*retaddr *label119 (h:*label119)
   291 call *label15 *invalid :status2*retval (m:*label119) (h:*label119)
   292 label *label119
-    * set *tmp150 :mineOre.2:ore
-    * set :mineOre:ore *tmp150
+  293 set :mineOre:ore :mineOre.2:ore
   294 set :mineOre:amount 28
   295 set :mineOre:block .core
   296 setaddr :mineOre*retaddr *label120 (h:*label120)
 
   301 end
   302 label *label28
   303 sensor *tmp151 :fetchBlock:block @itemCapacity
-    * op min *tmp152 *tmp151 28
-    * set :transportStatus:target *tmp152
+  304 op min :transportStatus:target *tmp151 28
   305 set :transportStatus:item :fetchBlock:item
   306 setaddr :transportStatus*retaddr *label122 (h:*label122)
   307 call *label17 *invalid :transportStatus*retval (m:*label122) (h:*label122)
 
   324 label *label125
   325 label *label126
   326 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
-    * sensor *tmp155 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp155
+  327 sensor :fetchBlock:unitItem @unit @firstItem
   328 op notEqual *tmp156 :fetchBlock:unitItem null
   329 op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item
   330 op land *tmp158 *tmp156 *tmp157
 
   355 setaddr :status2*retaddr *label133 (h:*label133)
   356 call *label15 *invalid :status2*retval (m:*label133) (h:*label133)
   357 label *label133
-    * sensor *tmp164 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp164
+  358 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   359 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp166 :supplyBlock:blockCapacity *tmp165
-    * set :supplyBlock:missing *tmp166
+  360 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   361 op greaterThan *tmp167 :supplyBlock:missing 0
   362 jump *label134 equal *tmp167 false
   363 set :mineOre:ore :supplyBlock:ore
 
   374 end
   375 label *label30
   376 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp170 *tmp169 28
-    * set :supplyBlockFromCore:cap *tmp170
+  377 op min :supplyBlockFromCore:cap *tmp169 28
   378 set :transportStatus:target :supplyBlockFromCore:cap
   379 set :transportStatus:item :supplyBlockFromCore:item
   380 setaddr :transportStatus*retaddr *label138 (h:*label138)
 
   396 label *label141
   397 label *label142
   398 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor *tmp171 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp171
+  399 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   400 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
   401 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   402 op land *tmp174 *tmp172 *tmp173
 
   426 op add :unpackCfg:index :unpackCfg:index 1
   427 read *tmp181 :unpackCfg:cfg *tmp180
   428 op sub *tmp182 *tmp181 74
-    * lookup block *tmp183 *tmp182
-    * set :unpackCfg:type *tmp183
+  429 lookup block :unpackCfg:type *tmp182
   430 set *tmp184 :unpackCfg:index
   431 op add :unpackCfg:index :unpackCfg:index 1
   432 read *tmp185 :unpackCfg:cfg *tmp184
   433 op sub *tmp186 *tmp185 74
-    * op div *tmp187 *tmp186 2
-    * set :unpackCfg:x *tmp187
+  434 op div :unpackCfg:x *tmp186 2
   435 set *tmp188 :unpackCfg:index
   436 op add :unpackCfg:index :unpackCfg:index 1
   437 read *tmp189 :unpackCfg:cfg *tmp188
   438 op sub *tmp190 *tmp189 74
-    * op div *tmp191 *tmp190 2
-    * set :unpackCfg:y *tmp191
+  439 op div :unpackCfg:y *tmp190 2
   440 set *tmp192 :unpackCfg:index
   441 op add :unpackCfg:index :unpackCfg:index 1
   442 read *tmp193 :unpackCfg:cfg *tmp192
-    * op sub *tmp194 *tmp193 74
-    * set :unpackCfg:rotation *tmp194
+  443 op sub :unpackCfg:rotation *tmp193 74
   444 set *tmp195 :unpackCfg:index
   445 op add :unpackCfg:index :unpackCfg:index 1
   446 read *tmp196 :unpackCfg:cfg *tmp195
-    * op sub *tmp197 *tmp196 74
-    * set :unpackCfg:ind *tmp197
-    * sensor *tmp198 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp198
-    * sensor *tmp199 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp199
-    * sensor *tmp200 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp200
-    * sensor *tmp201 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp201
-    * sensor *tmp202 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp202
-    * sensor *tmp203 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp203
-    * sensor *tmp204 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp204
+  447 op sub :unpackCfg:ind *tmp196 74
+  448 sensor :unpackCfg:cu :unpackCfg:type @copper
+  449 sensor :unpackCfg:pb :unpackCfg:type @lead
+  450 sensor :unpackCfg:gr :unpackCfg:type @graphite
+  451 sensor :unpackCfg:si :unpackCfg:type @silicon
+  452 sensor :unpackCfg:ti :unpackCfg:type @titanium
+  453 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+  454 sensor :unpackCfg:th :unpackCfg:type @thorium
   455 label *label148
   456 return :unpackCfg*retaddr
   457 end
 
   641 jump *label203 equal *tmp253 false
   642 sensor *tmp255 .core @titanium
   643 op sub *tmp256 titanium *tmp255
-    * op min *tmp257 5 *tmp256
-    * set *tmp254 *tmp257
+  644 op min *tmp254 5 *tmp256
   645 jump *label204 always
   646 label *label203
   647 set *tmp254 100
 
   675 call *label14 *invalid :status1*retval (m:*label217) (h:*label217)
   676 label *label217
   677 jump *label218 equal A¨SSJi-container31 false
-    * sensor *tmp272 .core @coal
-    * set :supplyBase0:coal *tmp272
-    * sensor *tmp273 A¨SSJi-container31 @sand
-    * set :supplyBase0:sand *tmp273
+  678 sensor :supplyBase0:coal .core @coal
+  679 sensor :supplyBase0:sand A¨SSJi-container31 @sand
   680 op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
   681 jump *label220 equal *tmp274 false
   682 set *tmp275 @coal
 
   711 setaddr :status1*retaddr *label226 (h:*label226)
   712 call *label14 *invalid :status1*retval (m:*label226) (h:*label226)
   713 label *label226
-    * sensor *tmp278 .core @coal
-    * set :supplyBase0:coal.1 *tmp278
-    * sensor *tmp279 .core @sand
-    * set :supplyBase0:sand.1 *tmp279
+  714 sensor :supplyBase0:coal.1 .core @coal
+  715 sensor :supplyBase0:sand.1 .core @sand
   716 op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
   717 jump *label227 equal *tmp280 false
   718 set *tmp281 @coal
 
   938 write :meetTargetLocal:metaglass processor2 ".targetMetaglass"
   939 write :meetTargetLocal:thorium processor2 ".targetThorium"
   940 set copper :meetTargetLocal:copper
-    * op add *tmp321 :meetTargetLocal:lead .leadSurplus
-    * set lead *tmp321
+  941 op add lead :meetTargetLocal:lead .leadSurplus
   942 set graphite :meetTargetLocal:graphite
   943 set silicon :meetTargetLocal:silicon
   944 set titanium :meetTargetLocal:titanium
 
   967 setaddr :targetMet*retaddr *label283 (h:*label283)
   968 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   969 label *label283
-    * set *tmp332 :targetMet*retval
-    * op equal *tmp333 *tmp332 false
+  970 op equal *tmp333 :targetMet*retval false
   971 jump *label282 equal *tmp333 false
   972 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   973 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
 
   986 setaddr :targetMet*retaddr *label291 (h:*label291)
   987 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   988 label *label291
-    * set *tmp336 :targetMet*retval
-    * op equal *tmp337 *tmp336 false
+  989 op equal *tmp337 :targetMet*retval false
   990 jump *label290 equal *tmp337 false
   991 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   992 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
 
  1186 call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
  1187 label *label314
  1188 label *label313
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type *tmp346 *tmp347
-    * set :buildBlockAtLocal:building *tmp346
+ 1189 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp347
  1190 op notEqual *tmp348 :buildBlockAtLocal:building null
  1191 jump *label315 equal *tmp348 false
  1192 op equal *tmp350 :buildBlockAtLocal:type :buildBlockAtLocal:block
 
  1216 set :buildBlockAtLocal:success false
  1217 label *label320
  1218 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type *tmp352 *tmp353
-    * set :buildBlockAtLocal:building *tmp352
+ 1219 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
  1220 op equal *tmp354 :buildBlockAtLocal:building null
  1221 op equal *tmp355 :buildBlockAtLocal:success false
  1222 op land *tmp356 *tmp354 *tmp355
 
  1259 ubind .builder
  1260 set :logBlock:block :buildBlockAtLocal:block
  1261 set :logBlock:index :buildBlockAtLocal:index
-    * sensor *tmp365 :logBlock:block @id
-    * set :log:encodedId *tmp365
+ 1262 sensor :log:encodedId :logBlock:block @id
  1263 read *tmp100 bank1 511
  1264 op sub *tmp366 *tmp100 1
  1265 write *tmp366 bank1 511
 
  1445 op min *tmp410 :setFlareTarget:target 8
  1446 write *tmp410 AÕFFJS-micro-processor9 ".flareTarget"
  1447 label *label363
-    * set *tmp411 .positive
-    * op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles *tmp411
+ 1448 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1449 set :buildTitaniumDrill*retval .positive
  1450 jump *label346 always
  1451 jump *label361 always
 
  1479 read *tmp50 processor3 ".locations"
  1480 op lessThan *tmp413 :buildTitaniumDrills:current *tmp50
  1481 jump *label370 equal *tmp413 false
-    * op mul *tmp414 :buildTitaniumDrills:current 4
-    * set :buildTitaniumDrills:index *tmp414
-    * op add *tmp415 :buildTitaniumDrills:index 1
-    * set *tmp416 *tmp415
-    * read *tmp417 bank1 *tmp416
-    * set :buildTitaniumDrills:size *tmp417
+ 1482 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
+ 1483 op add *tmp416 :buildTitaniumDrills:index 1
+ 1484 read :buildTitaniumDrills:size bank1 *tmp416
  1485 op greaterThanEq *tmp418 :buildTitaniumDrills:size 3
  1486 jump *label371 equal *tmp418 false
  1487 op add *tmp420 :buildTitaniumDrills:index 2
-    * set *tmp421 *tmp420
-    * read *tmp422 bank1 *tmp421
-    * set :buildTitaniumDrills:x *tmp422
+ 1488 read :buildTitaniumDrills:x bank1 *tmp420
  1489 op add *tmp423 :buildTitaniumDrills:index 3
-    * set *tmp424 *tmp423
-    * read *tmp425 bank1 *tmp424
-    * set :buildTitaniumDrills:y *tmp425
+ 1490 read :buildTitaniumDrills:y bank1 *tmp423
  1491 op sub *tmp426 :buildTitaniumDrills:x 1
  1492 op sub *tmp427 :buildTitaniumDrills:y 1
  1493 set :buildTitaniumDrill:x *tmp426
 
  1511 label *label374
  1512 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1513 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp431 :buildTitaniumDrill*retval
-    * op add *tmp432 *tmp428 *tmp431
+ 1514 op add *tmp432 *tmp428 :buildTitaniumDrill*retval
  1515 op sub *tmp433 :buildTitaniumDrills:x 1
  1516 op add *tmp434 :buildTitaniumDrills:y 1
  1517 set :buildTitaniumDrill:x *tmp433
 
  1523 label *label375
  1524 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1525 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp435 :buildTitaniumDrill*retval
-    * op add *tmp436 *tmp432 *tmp435
+ 1526 op add *tmp436 *tmp432 :buildTitaniumDrill*retval
  1527 op add *tmp437 :buildTitaniumDrills:x 1
  1528 op add *tmp438 :buildTitaniumDrills:y 1
  1529 set :buildTitaniumDrill:x *tmp437
 
  1535 label *label376
  1536 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1537 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp439 :buildTitaniumDrill*retval
-    * op add *tmp440 *tmp436 *tmp439
-    * set :buildTitaniumDrills:built *tmp440
+ 1538 op add :buildTitaniumDrills:built *tmp436 :buildTitaniumDrill*retval
  1539 op equal *tmp441 :buildTitaniumDrills:built 0
  1540 jump *label377 equal *tmp441 false
  1541 set :buildTitaniumDrill:x :buildTitaniumDrills:x
 
  1547 label *label379
  1548 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1549 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
-    * set *tmp443 :buildTitaniumDrill*retval
-    * set :buildTitaniumDrills:built *tmp443
+ 1550 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1551 jump *label378 always
  1552 label *label377
  1553 label *label378

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1336 jump *label341 always
  1337 set *tmp378 null
  1338 label *label341
-    * jump *label343 equal *tmp378 @ore-titanium
-    * jump *label342 always
+ 1339 jump *label342 notEqual *tmp378 @ore-titanium
  1340 label *label343
  1341 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1342 jump *label340 always
 
  1344 jump *label345 equal *tmp378 @ore-copper
  1345 jump *label345 equal *tmp378 @ore-lead
  1346 jump *label345 equal *tmp378 @ore-scrap
-    * jump *label345 equal *tmp378 @ore-coal
-    * jump *label344 always
+ 1347 jump *label344 notEqual *tmp378 @ore-coal
  1348 label *label345
  1349 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1350 jump *label340 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-64 instructions):
 
    33 set .builder @unit
    34 ulocate building core false @copper .coreX .coreY *tmp103 .core
    35 label *label52
-    * op equal *tmp104 .core null
-    * jump *label51 notEqual *tmp104 false
+   36 jump *label51 equal .core null
    37 label *label53
    38 set *signature "77658b7b93afc77c:v1"
    39 label *label54
 
    76 label *label61
    77 label *label62
    78 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * op equal *tmp106 *tmp105 false
-    * jump *label64 equal *tmp106 false
+   79 jump *label64 notEqual *tmp105 false
    80 op sub *tmp107 :moveTo:radius 0.5
    81 ucontrol approach :moveTo:x :moveTo:y *tmp107
    82 label *label63
 
    92 label *label66
    93 label *label67
    94 sensor *tmp108 @unit @firstItem
-    * op notEqual *tmp109 *tmp108 null
-    * jump *label70 equal *tmp109 false
+   95 jump *label70 equal *tmp108 null
    96 ucontrol itemDrop @air 1000
    97 jump *label71 always
    98 label *label70
 
   100 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   101 label *label68
   102 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * op equal *tmp112 *tmp111 false
-    * jump *label67 notEqual *tmp112 false
+  103 jump *label67 equal *tmp111 false
   104 label *label69
   105 label *label65
   106 return :moveToEmpty*retaddr
 
   108 label *label21
   109 label *label73
   110 sensor *tmp113 @unit @firstItem
-    * op notEqual *tmp114 *tmp113 null
-    * jump *label75 equal *tmp114 false
+  111 jump *label75 equal *tmp113 null
   112 ucontrol itemDrop @air 1000
   113 label *label74
   114 jump *label73 always
 
   134 call *label16 *invalid :status3*retval (m:*label79) (h:*label79)
   135 label *label79
   136 sensor *tmp117 @unit @firstItem
-    * op equal *tmp118 *tmp117 :depositItems:item
-    * jump *label80 equal *tmp118 false
+  137 jump *label80 notEqual *tmp117 :depositItems:item
   138 set :moveToBlock:block :depositItems:block
   139 set :moveToBlock:radius 6
   140 setaddr :moveToBlock*retaddr *label82 (h:*label82)
 
   147 sensor *tmp121 @unit @firstItem
   148 op mul *tmp122 *tmp121 :depositItems:cap
   149 sensor *tmp123 :depositItems:block :depositItems:item
-    * op greaterThan *tmp124 *tmp122 *tmp123
-    * jump *label83 notEqual *tmp124 false
+  150 jump *label83 greaterThan *tmp122 *tmp123
   151 label *label85
   152 jump *label81 always
   153 label *label80
   154 label *label86
   155 sensor *tmp125 @unit @firstItem
-    * op notEqual *tmp126 *tmp125 null
-    * jump *label88 equal *tmp126 false
+  156 jump *label88 equal *tmp125 null
   157 ucontrol itemDrop @air 1000
   158 label *label87
   159 jump *label86 always
 
   169 end
   170 label *label24
   171 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * op equal *tmp129 *tmp127 false
-    * jump *label91 equal *tmp129 false
+  172 jump *label91 notEqual *tmp127 false
   173 set :error:error "Cannot locate ore"
   174 setaddr :error*retaddr *label93 (h:*label93)
   175 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
 
   199 call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
   200 label *label97
   201 sensor *tmp132 @unit @firstItem
-    * op notEqual *tmp133 *tmp132 :mineOre:ore
-    * jump *label98 equal *tmp133 false
+  202 jump *label98 equal *tmp132 :mineOre:ore
   203 setaddr :dropAll*retaddr *label100 (h:*label100)
   204 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   205 label *label100
 
   222 label *label105
   223 label *label106
   224 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp141 @second :mineOre:stop
-    * jump *label107 equal *tmp141 false
+  225 jump *label107 lessThanEq @second :mineOre:stop
   226 jump *label104 always
   227 jump *label108 always
   228 label *label107
   229 label *label108
-    * op equal *tmp143 .noTarget false
-    * jump *label109 equal *tmp143 false
+  230 jump *label109 notEqual .noTarget false
   231 setaddr :targetMet*retaddr *label111 (h:*label111)
   232 call *label39 *invalid :targetMet*retval (m:*label111) (h:*label111)
   233 label *label111
 
   241 label *label110
   242 label *label103
   243 sensor *tmp146 @unit @totalItems
-    * op lessThan *tmp147 *tmp146 :mineOre:amount
-    * jump *label102 notEqual *tmp147 false
+  244 jump *label102 lessThan *tmp146 :mineOre:amount
   245 label *label104
   246 ucontrol unbind
   247 set :depositItems:block :mineOre:block
 
   345 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   346 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   347 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * op greaterThan *tmp167 :supplyBlock:missing 0
-    * jump *label134 equal *tmp167 false
+  348 jump *label134 lessThanEq :supplyBlock:missing 0
   349 set :mineOre:ore :supplyBlock:ore
   350 set :mineOre:amount :supplyBlock:blockCapacity
   351 set :mineOre:block :supplyBlock:block
 
   453 call *label14 *invalid :status1*retval (m:*label153) (h:*label153)
   454 label *label153
   455 sensor *tmp211 .thoriumBattery @totalPower
-    * op lessThan *tmp212 *tmp211 2000
-    * jump *label154 equal *tmp212 false
+  456 jump *label154 greaterThanEq *tmp211 2000
   457 sensor *tmp214 .thoriumGenerator @coal
-    * op equal *tmp215 *tmp214 0
-    * jump *label156 equal *tmp215 false
+  458 jump *label156 notEqual *tmp214 0
   459 sensor *tmp217 .core @coal
-    * op lessThan *tmp218 *tmp217 50
-    * jump *label158 equal *tmp218 false
+  460 jump *label158 greaterThanEq *tmp217 50
   461 set :supplyBlock:block .thoriumGenerator
   462 set :supplyBlock:ore @coal
   463 setaddr :supplyBlock*retaddr *label160 (h:*label160)
 
   483 call *label28 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   484 label *label162
   485 sensor *tmp220 .core @thorium
-    * op greaterThan *tmp221 *tmp220 400
-    * jump *label163 equal *tmp221 false
+  486 jump *label163 lessThanEq *tmp220 400
   487 set :setMonoTarget:target 0
   488 write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
   489 label *label165
 
   497 jump *label151 always
   498 label *label150
   499 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op greaterThan *tmp223 *tmp81 1
-    * jump *label167 equal *tmp223 false
+  500 jump *label167 lessThanEq *tmp81 1
   501 set :status1:text "Phase 1: supplying base"
   502 setaddr :status1*retaddr *label170 (h:*label170)
   503 call *label14 *invalid :status1*retval (m:*label170) (h:*label170)
 
   510 jump *label168 always
   511 label *label167
   512 set :supplyBase0:supplied false
-    * op equal *tmp225 A©JNJP-unloader6 null
-    * jump *label173 equal *tmp225 false
+  513 jump *label173 notEqual A©JNJP-unloader6 null
   514 sensor *tmp227 .core @graphite
-    * op lessThan *tmp228 *tmp227 graphite
-    * jump *label175 equal *tmp228 false
+  515 jump *label175 greaterThanEq *tmp227 graphite
   516 sensor *tmp230 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp231 *tmp230 5
-    * jump *label177 equal *tmp231 false
+  517 jump *label177 greaterThanEq *tmp230 5
   518 set :status1:text "Goal 1: graphite requirement"
   519 setaddr :status1*retaddr *label179 (h:*label179)
   520 call *label14 *invalid :status1*retval (m:*label179) (h:*label179)
 
   532 label *label175
   533 label *label176
   534 sensor *tmp233 AJTJK-battery1 @totalPower
-    * op lessThan *tmp234 *tmp233 .powerTarget
-    * jump *label181 equal *tmp234 false
+  535 jump *label181 greaterThanEq *tmp233 .powerTarget
   536 sensor *tmp236 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp237 *tmp236 2
-    * jump *label183 equal *tmp237 false
+  537 jump *label183 greaterThanEq *tmp236 2
   538 set :status1:text "Goal 4: supplying generator"
   539 setaddr :status1*retaddr *label185 (h:*label185)
   540 call *label14 *invalid :status1*retval (m:*label185) (h:*label185)
 
   552 label *label181
   553 label *label182
   554 sensor *tmp239 .core @silicon
-    * op lessThan *tmp240 *tmp239 silicon
-    * jump *label187 equal *tmp240 false
+  555 jump *label187 greaterThanEq *tmp239 silicon
   556 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp243 *tmp242 5
-    * jump *label189 equal *tmp243 false
+  557 jump *label189 greaterThanEq *tmp242 5
   558 set :status1:text "Goal 2: coal for silicon requirement"
   559 setaddr :status1*retaddr *label191 (h:*label191)
   560 call *label14 *invalid :status1*retval (m:*label191) (h:*label191)
 
   568 jump *label190 always
   569 label *label189
   570 sensor *tmp245 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp246 *tmp245 5
-    * jump *label193 equal *tmp246 false
+  571 jump *label193 greaterThanEq *tmp245 5
   572 jump *label195 equal .scrap false
   573 sensor *tmp249 AXPRJe-pulverizer27 @scrap
-    * op lessThan *tmp250 *tmp249 10
-    * jump *label197 equal *tmp250 false
+  574 jump *label197 greaterThanEq *tmp249 10
   575 set :status1:text "Goal 3a: scrap for silicon requirement"
   576 setaddr :status1*retaddr *label199 (h:*label199)
   577 call *label14 *invalid :status1*retval (m:*label199) (h:*label199)
 
   609 label *label173
   610 label *label174
   611 sensor *tmp252 .core @titanium
-    * op lessThan *tmp253 *tmp252 titanium
-    * jump *label203 equal *tmp253 false
+  612 jump *label203 greaterThanEq *tmp252 titanium
   613 sensor *tmp255 .core @titanium
   614 op sub *tmp256 titanium *tmp255
   615 op min *tmp254 5 *tmp256
 
   619 label *label204
   620 set :supplyBase0:titaniumTrigger *tmp254
   621 sensor *tmp258 .titaniumDrill @titanium
-    * op lessThan *tmp259 *tmp258 :supplyBase0:titaniumTrigger
-    * jump *label205 equal *tmp259 false
-    * op equal *tmp261 :supplyBase0:supplied false
-    * jump *label207 equal *tmp261 false
+  622 jump *label205 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  623 jump *label207 notEqual :supplyBase0:supplied false
   624 sensor *tmp263 AJTJK-battery1 @totalPower
   625 op mul *tmp264 A©JNJP-unloader6 .powerTarget
-    * op lessThan *tmp265 *tmp263 *tmp264
-    * jump *label209 equal *tmp265 false
+  626 jump *label209 greaterThanEq *tmp263 *tmp264
   627 set :status1:text "Goal 5: supplying generator"
   628 setaddr :status1*retaddr *label211 (h:*label211)
   629 call *label14 *invalid :status1*retval (m:*label211) (h:*label211)
 
   635 jump *label210 always
   636 label *label209
   637 sensor *tmp267 .core @silicon
-    * op lessThan *tmp268 *tmp267 silicon
-    * jump *label213 equal *tmp268 false
+  638 jump *label213 greaterThanEq *tmp267 silicon
   639 jump *label215 equal .scrap false
   640 set :status1:text "Goal 6: silicon requirement"
   641 setaddr :status1*retaddr *label217 (h:*label217)
 
   644 jump *label218 equal A¨SSJi-container31 false
   645 sensor :supplyBase0:coal .core @coal
   646 sensor :supplyBase0:sand A¨SSJi-container31 @sand
-    * op lessThan *tmp274 :supplyBase0:coal :supplyBase0:sand
-    * jump *label220 equal *tmp274 false
+  647 jump *label220 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   648 set *tmp275 @coal
   649 jump *label221 always
   650 label *label220
   651 set *tmp275 @scrap
   652 label *label221
   653 set :supplyBase0:ore *tmp275
-    * op lessThan *tmp276 :supplyBase0:coal :supplyBase0:sand
-    * jump *label222 equal *tmp276 false
+  654 jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   655 set *tmp277 .core
   656 jump *label223 always
   657 label *label222
 
   678 label *label226
   679 sensor :supplyBase0:coal.1 .core @coal
   680 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThan *tmp280 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label227 equal *tmp280 false
+  681 jump *label227 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
   682 set *tmp281 @coal
   683 jump *label228 always
   684 label *label227
 
   693 jump *label214 always
   694 label *label213
   695 sensor *tmp282 .core @copper
-    * op lessThan *tmp283 *tmp282 copper
-    * jump *label230 equal *tmp283 false
+  696 jump *label230 greaterThanEq *tmp282 copper
   697 set :status1:text "Goal 7: copper requirement"
   698 setaddr :status1*retaddr *label232 (h:*label232)
   699 call *label14 *invalid :status1*retval (m:*label232) (h:*label232)
 
   705 jump *label231 always
   706 label *label230
   707 sensor *tmp285 .core @lead
-    * op lessThan *tmp286 *tmp285 lead
-    * jump *label234 equal *tmp286 false
+  708 jump *label234 greaterThanEq *tmp285 lead
   709 set :status1:text "Goal 8: lead requirement"
   710 setaddr :status1*retaddr *label236 (h:*label236)
   711 call *label14 *invalid :status1*retval (m:*label236) (h:*label236)
 
   717 jump *label235 always
   718 label *label234
   719 sensor *tmp288 .core @metaglass
-    * op lessThan *tmp289 *tmp288 metaglass
-    * jump *label238 equal *tmp289 false
+  720 jump *label238 greaterThanEq *tmp288 metaglass
   721 set :status1:text "Goal 9: metaglass requirement"
   722 setaddr :status1*retaddr *label240 (h:*label240)
   723 call *label14 *invalid :status1*retval (m:*label240) (h:*label240)
 
   793 end
   794 label *label39
   795 sensor *tmp298 .core @copper
-    * op lessThan *tmp299 *tmp298 copper
-    * jump *label255 equal *tmp299 false
+  796 jump *label255 greaterThanEq *tmp298 copper
   797 set :targetMet*retval false
   798 jump *label254 always
   799 jump *label256 always
   800 label *label255
   801 label *label256
   802 sensor *tmp301 .core @lead
-    * op lessThan *tmp302 *tmp301 lead
-    * jump *label257 equal *tmp302 false
+  803 jump *label257 greaterThanEq *tmp301 lead
   804 set :targetMet*retval false
   805 jump *label254 always
   806 jump *label258 always
   807 label *label257
   808 label *label258
   809 sensor *tmp304 .core @graphite
-    * op lessThan *tmp305 *tmp304 graphite
-    * jump *label259 equal *tmp305 false
+  810 jump *label259 greaterThanEq *tmp304 graphite
   811 set :targetMet*retval false
   812 jump *label254 always
   813 jump *label260 always
   814 label *label259
   815 label *label260
   816 sensor *tmp307 .core @silicon
-    * op lessThan *tmp308 *tmp307 silicon
-    * jump *label261 equal *tmp308 false
+  817 jump *label261 greaterThanEq *tmp307 silicon
   818 set :targetMet*retval false
   819 jump *label254 always
   820 jump *label262 always
   821 label *label261
   822 label *label262
   823 sensor *tmp310 .core @titanium
-    * op lessThan *tmp311 *tmp310 titanium
-    * jump *label263 equal *tmp311 false
+  824 jump *label263 greaterThanEq *tmp310 titanium
   825 set :targetMet*retval false
   826 jump *label254 always
   827 jump *label264 always
   828 label *label263
   829 label *label264
   830 sensor *tmp313 .core @metaglass
-    * op lessThan *tmp314 *tmp313 metaglass
-    * jump *label265 equal *tmp314 false
+  831 jump *label265 greaterThanEq *tmp313 metaglass
   832 set :targetMet*retval false
   833 jump *label254 always
   834 jump *label266 always
   835 label *label265
   836 label *label266
   837 sensor *tmp316 .core @thorium
-    * op lessThan *tmp317 *tmp316 thorium
-    * jump *label267 equal *tmp317 false
+  838 jump *label267 greaterThanEq *tmp316 thorium
   839 set :targetMet*retval false
   840 jump *label254 always
   841 jump *label268 always
 
   921 setaddr :targetMet*retaddr *label283 (h:*label283)
   922 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   923 label *label283
-    * op equal *tmp333 :targetMet*retval false
-    * jump *label282 equal *tmp333 false
+  924 jump *label282 notEqual :targetMet*retval false
   925 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   926 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
   927 label *label284
 
   939 setaddr :targetMet*retaddr *label291 (h:*label291)
   940 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   941 label *label291
-    * op equal *tmp337 :targetMet*retval false
-    * jump *label290 equal *tmp337 false
+  942 jump *label290 notEqual :targetMet*retval false
   943 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   944 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
   945 label *label292
 
  1035 end
  1036 label *label8
  1037 op add *tmp339 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp340 *tmp339 0
-    * jump *label302 equal *tmp340 false
+ 1038 jump *label302 lessThanEq *tmp339 0
  1039 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1040 setaddr :unpackCfg*retaddr *label304 (h:*label304)
  1041 call *label32 *invalid :unpackCfg*retval (m:*label304) (h:*label304)
 
  1138 label *label314
  1139 label *label313
  1140 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp347
-    * op notEqual *tmp348 :buildBlockAtLocal:building null
-    * jump *label315 equal *tmp348 false
-    * op equal *tmp350 :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * jump *label317 equal *tmp350 false
+ 1141 jump *label315 equal :buildBlockAtLocal:building null
+ 1142 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1143 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1144 jump *label312 always
  1145 jump *label318 always
 
  1186 label *label323
  1187 set :buildBlockAtLocal:success true
  1188 label *label324
-    * op equal *tmp358 :buildBlockAtLocal:block @multiplicative-reconstructor
-    * jump *label326 equal *tmp358 false
+ 1189 jump *label326 notEqual :buildBlockAtLocal:block @multiplicative-reconstructor
  1190 control enabled processor6 false
  1191 ubind @poly
-    * op notEqual *tmp361 @unit .builder
-    * jump *label328 equal *tmp361 false
+ 1192 jump *label328 equal @unit .builder
  1193 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1194 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
  1195 jump *label329 always
 
  1199 label *label326
  1200 label *label327
  1201 label *label321
-    * op notEqual *tmp363 :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * jump *label320 notEqual *tmp363 false
+ 1202 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1203 label *label322
  1204 control enabled processor6 true
  1205 ubind .builder
 
  1215 op add *tmp370 :log:encodedId *tmp369
  1216 write *tmp370 bank1 *tmp367
  1217 label *label331
-    * op greaterThanEq *tmp371 :logBlock:index 0
-    * jump *label332 equal *tmp371 false
+ 1218 jump *label332 lessThan :logBlock:index 0
  1219 op shl *tmp373 1 :logBlock:index
  1220 read *tmp6 processor2 ".blocksBuilt"
  1221 op or *tmp374 *tmp6 *tmp373
 
  1299 return :titaniumDrillScore*retaddr
  1300 end
  1301 label *label45
-    * op lessThan *tmp384 :buildTitaniumDrill:count 6
-    * jump *label347 equal *tmp384 false
-    * op lessThan *tmp386 :buildTitaniumDrill:tiles 10
-    * jump *label349 equal *tmp386 false
+ 1302 jump *label347 greaterThanEq :buildTitaniumDrill:count 6
+ 1303 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
  1304 set :moveTo.2:x :buildTitaniumDrill:x
  1305 set :moveTo.2:y :buildTitaniumDrill:y
  1306 set *tmp388 :moveTo.2:x
 
  1372 call *label43 *invalid :buildBlockAtLocal*retval (m:*label359) (h:*label359)
  1373 label *label359
  1374 set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
-    * op notEqual *tmp406 :buildTitaniumDrill:drill null
-    * jump *label360 equal *tmp406 false
+ 1375 jump *label360 equal :buildTitaniumDrill:drill null
  1376 write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
  1377 write false processor8 ":addTitaniumDrill*finished"
  1378 write 1 processor8 "@counter"
 
  1413 wait 0.0001
  1414 label *label365
  1415 read *tmp51 processor3 ".searchFinished"
-    * op equal *tmp412 *tmp51 false
-    * jump *label367 equal *tmp412 false
+ 1416 jump *label367 notEqual *tmp51 false
  1417 label *label368
  1418 read *tmp50 processor3 ".locations"
-    * op lessThan *tmp413 :buildTitaniumDrills:current *tmp50
-    * jump *label370 equal *tmp413 false
+ 1419 jump *label370 greaterThanEq :buildTitaniumDrills:current *tmp50
  1420 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1421 op add *tmp416 :buildTitaniumDrills:index 1
  1422 read :buildTitaniumDrills:size bank1 *tmp416
-    * op greaterThanEq *tmp418 :buildTitaniumDrills:size 3
-    * jump *label371 equal *tmp418 false
+ 1423 jump *label371 lessThan :buildTitaniumDrills:size 3
  1424 op add *tmp420 :buildTitaniumDrills:index 2
  1425 read :buildTitaniumDrills:x bank1 *tmp420
  1426 op add *tmp423 :buildTitaniumDrills:index 3
 
  1473 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1474 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1475 op add :buildTitaniumDrills:built *tmp436 :buildTitaniumDrill*retval
-    * op equal *tmp441 :buildTitaniumDrills:built 0
-    * jump *label377 equal *tmp441 false
+ 1476 jump *label377 notEqual :buildTitaniumDrills:built 0
  1477 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1478 set :buildTitaniumDrill:y :buildTitaniumDrills:y
  1479 set :buildTitaniumDrill:count :buildTitaniumDrills:count
 
  1494 label *label369
  1495 jump *label368 always
  1496 label *label370
-    * op greaterThanEq *tmp445 :buildTitaniumDrills:tiles 10
-    * jump *label380 equal *tmp445 false
+ 1497 jump *label380 lessThan :buildTitaniumDrills:tiles 10
  1498 jump *label367 always
  1499 jump *label381 always
  1500 label *label380
  1501 label *label381
-    * op greaterThanEq *tmp447 :buildTitaniumDrills:count 6
-    * jump *label382 equal *tmp447 false
+ 1502 jump *label382 lessThan :buildTitaniumDrills:count 6
  1503 jump *label367 always
  1504 jump *label383 always
  1505 label *label382

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-45 instructions):
 
    94 sensor *tmp108 @unit @firstItem
    95 jump *label70 equal *tmp108 null
    96 ucontrol itemDrop @air 1000
-    * jump *label71 always
    97 label *label70
    98 label *label71
    99 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   173 setaddr :error*retaddr *label93 (h:*label93)
   174 call *label18 *invalid :error*retval (m:*label93) (h:*label93)
   175 label *label93
-    * jump *label92 always
   176 label *label91
   177 label *label92
   178 label *label90
 
   201 setaddr :dropAll*retaddr *label100 (h:*label100)
   202 call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
   203 label *label100
-    * jump *label99 always
   204 label *label98
   205 label *label99
   206 set :status3:text "Mining..."
 
   215 op land *tmp139 *tmp137 *tmp138
   216 jump *label105 equal *tmp139 false
   217 jump *label104 always
-    * jump *label106 always
   218 label *label105
   219 label *label106
   220 ucontrol mine :mineOre:x :mineOre:y
   221 jump *label107 lessThanEq @second :mineOre:stop
   222 jump *label104 always
-    * jump *label108 always
   223 label *label107
   224 label *label108
   225 jump *label109 notEqual .noTarget false
 
   228 label *label111
   229 jump *label112 equal :targetMet*retval false
   230 jump *label104 always
-    * jump *label113 always
   231 label *label112
   232 label *label113
-    * jump *label110 always
   233 label *label109
   234 label *label110
   235 label *label103
 
   310 op land *tmp158 *tmp156 *tmp157
   311 jump *label129 equal *tmp158 false
   312 ucontrol itemDrop @air 1000
-    * jump *label130 always
   313 label *label129
   314 label *label130
   315 label *label127
 
   344 setaddr :mineOre*retaddr *label136 (h:*label136)
   345 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   346 label *label136
-    * jump *label135 always
   347 label *label134
   348 label *label135
   349 label *label132
 
   379 op land *tmp174 *tmp172 *tmp173
   380 jump *label145 equal *tmp174 false
   381 ucontrol itemDrop @air 1000
-    * jump *label146 always
   382 label *label145
   383 label *label146
   384 label *label143
 
   461 call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
   462 label *label161
   463 label *label159
-    * jump *label157 always
   464 label *label156
   465 label *label157
-    * jump *label155 always
   466 label *label154
   467 label *label155
   468 set :fetchBlock:block .thoriumContainer
 
   478 set :setPolyTarget:target 4
   479 write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
   480 label *label166
-    * jump *label164 always
   481 label *label163
   482 label *label164
   483 label *label152
 
   512 call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
   513 label *label180
   514 set :supplyBase0:supplied true
-    * jump *label178 always
   515 label *label177
   516 label *label178
-    * jump *label176 always
   517 label *label175
   518 label *label176
   519 sensor *tmp233 AJTJK-battery1 @totalPower
 
   530 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   531 label *label186
   532 jump *label172 always
-    * jump *label184 always
   533 label *label183
   534 label *label184
-    * jump *label182 always
   535 label *label181
   536 label *label182
   537 sensor *tmp239 .core @silicon
 
   565 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   566 label *label200
   567 set :supplyBase0:supplied true
-    * jump *label198 always
   568 label *label197
   569 label *label198
   570 jump *label196 always
 
   580 label *label202
   581 set :supplyBase0:supplied true
   582 label *label196
-    * jump *label194 always
   583 label *label193
   584 label *label194
   585 label *label190
-    * jump *label188 always
   586 label *label187
   587 label *label188
-    * jump *label174 always
   588 label *label173
   589 label *label174
   590 sensor *tmp252 .core @titanium
 
   749 label *label231
   750 label *label214
   751 label *label210
-    * jump *label208 always
   752 label *label207
   753 label *label208
   754 jump *label206 always
 
   774 jump *label255 greaterThanEq *tmp298 copper
   775 set :targetMet*retval false
   776 jump *label254 always
-    * jump *label256 always
   777 label *label255
   778 label *label256
   779 sensor *tmp301 .core @lead
   780 jump *label257 greaterThanEq *tmp301 lead
   781 set :targetMet*retval false
   782 jump *label254 always
-    * jump *label258 always
   783 label *label257
   784 label *label258
   785 sensor *tmp304 .core @graphite
   786 jump *label259 greaterThanEq *tmp304 graphite
   787 set :targetMet*retval false
   788 jump *label254 always
-    * jump *label260 always
   789 label *label259
   790 label *label260
   791 sensor *tmp307 .core @silicon
   792 jump *label261 greaterThanEq *tmp307 silicon
   793 set :targetMet*retval false
   794 jump *label254 always
-    * jump *label262 always
   795 label *label261
   796 label *label262
   797 sensor *tmp310 .core @titanium
   798 jump *label263 greaterThanEq *tmp310 titanium
   799 set :targetMet*retval false
   800 jump *label254 always
-    * jump *label264 always
   801 label *label263
   802 label *label264
   803 sensor *tmp313 .core @metaglass
   804 jump *label265 greaterThanEq *tmp313 metaglass
   805 set :targetMet*retval false
   806 jump *label254 always
-    * jump *label266 always
   807 label *label265
   808 label *label266
   809 sensor *tmp316 .core @thorium
   810 jump *label267 greaterThanEq *tmp316 thorium
   811 set :targetMet*retval false
   812 jump *label254 always
-    * jump *label268 always
   813 label *label267
   814 label *label268
   815 set :targetMet*retval true
 
   917 label *label289
   918 jump *label288 always
   919 label *label290
-    * jump *label286 always
   920 label *label285
   921 label *label286
   922 label *label269
 
  1038 label *label305
  1039 set :buildRemoteBlock*retval :buildBlock*retval
  1040 jump *label301 always
-    * jump *label303 always
  1041 label *label302
  1042 label *label303
  1043 set :buildRemoteBlock*retval false
 
  1111 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
  1112 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1113 jump *label312 always
-    * jump *label318 always
  1114 label *label317
  1115 label *label318
  1116 set :buildError:text "Cannot build at position"
 
  1125 set .ERROR_Y :buildError:y
  1126 stop
  1127 label *label319
-    * jump *label316 always
  1128 label *label315
  1129 label *label316
  1130 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
 
  1159 jump *label328 equal @unit .builder
  1160 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
  1161 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * jump *label329 always
  1162 label *label328
  1163 label *label329
-    * jump *label327 always
  1164 label *label326
  1165 label *label327
  1166 label *label321
 
  1186 op or *tmp374 *tmp6 *tmp373
  1187 write *tmp374 processor2 ".blocksBuilt"
  1188 write :logBlock:index processor2 ".recentBuildIndex"
-    * jump *label333 always
  1189 label *label332
  1190 label *label333
  1191 label *label330
 
  1256 jump *label344 notEqual *tmp378 @ore-coal
  1257 label *label345
  1258 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * jump *label340 always
  1259 label *label344
  1260 label *label340
  1261 label *label339
 
  1351 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1352 set :buildTitaniumDrill*retval .positive
  1353 jump *label346 always
-    * jump *label361 always
  1354 label *label360
  1355 label *label361
-    * jump *label358 always
  1356 label *label357
  1357 label *label358
-    * jump *label350 always
  1358 label *label349
  1359 label *label350
-    * jump *label348 always
  1360 label *label347
  1361 label *label348
  1362 set :buildTitaniumDrill*retval 0
 
  1443 set :buildTitaniumDrills:count :buildTitaniumDrill:count
  1444 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1445 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
-    * jump *label378 always
  1446 label *label377
  1447 label *label378
-    * jump *label372 always
  1448 label *label371
  1449 label *label372
  1450 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
 
  1453 label *label370
  1454 jump *label380 lessThan :buildTitaniumDrills:tiles 10
  1455 jump *label367 always
-    * jump *label381 always
  1456 label *label380
  1457 label *label381
  1458 jump *label382 lessThan :buildTitaniumDrills:count 6
  1459 jump *label367 always
-    * jump *label383 always
  1460 label *label382
  1461 label *label383
  1462 label *label366

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
   191 label *label96
   192 set :mineOre:x :locateOre:x
   193 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  194 set :moveToEmpty:x :locateOre:x
+  195 set :moveToEmpty:y :locateOre:y
   196 setaddr :moveToEmpty*retaddr *label97 (h:*label97)
   197 call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
   198 label *label97
 
   254 label *label116
   255 set *tmp148 :mineOre.1:ore
   256 set *tmp149 :mineOre.1:block
-    * set :mineOre:ore *tmp148
+  257 set :mineOre:ore :mineOre.1:ore
   258 set :mineOre:amount 28
-    * set :mineOre:block *tmp149
+  259 set :mineOre:block :mineOre.1:block
   260 setaddr :mineOre*retaddr *label117 (h:*label117)
   261 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   262 label *label117
 
   398 end
   399 label *label32
   400 set :unpackCfg:index 1
-    * set *tmp180 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  401 set *tmp180 1
+  402 op add :unpackCfg:index 1 1
   403 read *tmp181 :unpackCfg:cfg *tmp180
   404 op sub *tmp182 *tmp181 74
   405 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  406 set *tmp184 2
+  407 op add :unpackCfg:index 2 1
   408 read *tmp185 :unpackCfg:cfg *tmp184
   409 op sub *tmp186 *tmp185 74
   410 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  411 set *tmp188 3
+  412 op add :unpackCfg:index 3 1
   413 read *tmp189 :unpackCfg:cfg *tmp188
   414 op sub *tmp190 *tmp189 74
   415 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  416 set *tmp192 4
+  417 op add :unpackCfg:index 4 1
   418 read *tmp193 :unpackCfg:cfg *tmp192
   419 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  420 set *tmp195 5
+  421 op add :unpackCfg:index 5 1
   422 read *tmp196 :unpackCfg:cfg *tmp195
   423 op sub :unpackCfg:ind *tmp196 74
   424 sensor :unpackCfg:cu :unpackCfg:type @copper
 
   473 sensor *tmp220 .core @thorium
   474 jump *label163 lessThanEq *tmp220 400
   475 set :setMonoTarget:target 0
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  476 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   477 label *label165
   478 set :setPolyTarget:target 4
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  479 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   480 label *label166
   481 label *label163
   482 label *label164
 
   598 label *label204
   599 set :supplyBase0:titaniumTrigger *tmp254
   600 sensor *tmp258 .titaniumDrill @titanium
-    * jump *label205 greaterThanEq *tmp258 :supplyBase0:titaniumTrigger
+  601 jump *label205 greaterThanEq *tmp258 *tmp254
   602 jump *label207 notEqual :supplyBase0:supplied false
   603 sensor *tmp263 AJTJK-battery1 @totalPower
   604 op mul *tmp264 A©JNJP-unloader6 .powerTarget
 
   637 set *tmp277 A¨SSJi-container31
   638 label *label223
   639 set :supplyBase0:block *tmp277
-    * set :mineOre.1:ore :supplyBase0:ore
-    * set :mineOre.1:block :supplyBase0:block
+  640 set :mineOre.1:ore *tmp275
+  641 set :mineOre.1:block *tmp277
   642 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   643 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   644 label *label224
 
   664 set *tmp281 @sand
   665 label *label228
   666 set :supplyBase0:ore.1 *tmp281
-    * set :mineOre.2:ore :supplyBase0:ore.1
+  667 set :mineOre.2:ore *tmp281
   668 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   669 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   670 label *label229
 
   739 set *tmp297 @sand
   740 label *label250
   741 set :supplyBase0:ore.2 *tmp297
-    * set :mineOre.2:ore :supplyBase0:ore.2
+  742 set :mineOre.2:ore *tmp297
   743 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   744 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   745 label *label251
 
   814 label *label268
   815 set :targetMet*retval true
   816 jump *label254 always
-    * set :targetMet*retval null
   817 label *label254
   818 return :targetMet*retaddr
   819 end
 
   886 op add *tmp331 :meetTargetLocal:graphite *tmp330
   887 write *tmp331 AÕFFJS-micro-processor9 ".graphiteReserve"
   888 write lead processor7 ".leadTarget"
-    * write copper processor7 ".copperTarget"
+  889 write :meetTargetLocal:copper processor7 ".copperTarget"
   890 label *label280
   891 setaddr :targetMet*retaddr *label283 (h:*label283)
   892 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
 
   952 set :meetTargetCfg:ti :unpackCfg:ti
   953 set :meetTargetCfg:mg :unpackCfg:mg
   954 set :meetTargetCfg:th :unpackCfg:th
-    * set :meetTargetLocal:block :meetTargetCfg:type
-    * set :meetTargetLocal:copper :meetTargetCfg:cu
-    * set :meetTargetLocal:lead :meetTargetCfg:pb
-    * set :meetTargetLocal:graphite :meetTargetCfg:gr
-    * set :meetTargetLocal:silicon :meetTargetCfg:si
-    * set :meetTargetLocal:titanium :meetTargetCfg:ti
-    * set :meetTargetLocal:metaglass :meetTargetCfg:mg
-    * set :meetTargetLocal:thorium :meetTargetCfg:th
+  955 set :meetTargetLocal:block :unpackCfg:type
+  956 set :meetTargetLocal:copper :unpackCfg:cu
+  957 set :meetTargetLocal:lead :unpackCfg:pb
+  958 set :meetTargetLocal:graphite :unpackCfg:gr
+  959 set :meetTargetLocal:silicon :unpackCfg:si
+  960 set :meetTargetLocal:titanium :unpackCfg:ti
+  961 set :meetTargetLocal:metaglass :unpackCfg:mg
+  962 set :meetTargetLocal:thorium :unpackCfg:th
   963 set :meetTargetLocal:forBuild false
   964 set :meetTargetLocal:isNoTarget false
   965 setaddr :meetTargetLocal*retaddr *label297 (h:*label297)
 
   996 set :buildBlock:built :buildBlockAtLocal*retval
   997 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   998 write 2 AÕFFJS-micro-processor9 "@counter"
-    * set :buildBlock*retval :buildBlock:built
+  999 set :buildBlock*retval :buildBlockAtLocal*retval
  1000 jump *label298 always
-    * set :buildBlock*retval null
  1001 label *label298
  1002 return :buildBlock*retaddr
  1003 end
 
  1018 set :buildRemoteBlock:th :unpackCfg:th
  1019 set :buildRemoteBlock:rotation :unpackCfg:rotation
  1020 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1021 set :buildBlock:block :unpackCfg:type
  1022 set :buildBlock:x :buildRemoteBlock:x
  1023 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1024 set :buildBlock:copper :unpackCfg:cu
+ 1025 set :buildBlock:lead :unpackCfg:pb
+ 1026 set :buildBlock:graphite :unpackCfg:gr
+ 1027 set :buildBlock:silicon :unpackCfg:si
+ 1028 set :buildBlock:titanium :unpackCfg:ti
+ 1029 set :buildBlock:metaglass :unpackCfg:mg
+ 1030 set :buildBlock:thorium :unpackCfg:th
+ 1031 set :buildBlock:rotation :unpackCfg:rotation
  1032 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+ 1033 set :buildBlock:index :unpackCfg:ind
  1034 setaddr :buildBlock*retaddr *label305 (h:*label305)
  1035 call *label41 *invalid :buildBlock*retval (m:*label305) (h:*label305)
  1036 label *label305
 
  1040 label *label303
  1041 set :buildRemoteBlock*retval false
  1042 jump *label301 always
-    * set :buildRemoteBlock*retval null
  1043 label *label301
  1044 set :buildRemoteBlock*finished true
  1045 jump *label54 always
 
  1061 set :buildBlockFromCfg:th :unpackCfg:th
  1062 set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1063 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp342 .coreX :buildBlockFromCfg:x
-    * op add *tmp343 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1064 op add *tmp342 .coreX :unpackCfg:x
+ 1065 op add *tmp343 .coreY :unpackCfg:y
+ 1066 set :buildBlock:block :unpackCfg:type
  1067 set :buildBlock:x *tmp342
  1068 set :buildBlock:y *tmp343
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1069 set :buildBlock:copper :unpackCfg:cu
+ 1070 set :buildBlock:lead :unpackCfg:pb
+ 1071 set :buildBlock:graphite :unpackCfg:gr
+ 1072 set :buildBlock:silicon :unpackCfg:si
+ 1073 set :buildBlock:titanium :unpackCfg:ti
+ 1074 set :buildBlock:metaglass :unpackCfg:mg
+ 1075 set :buildBlock:thorium :unpackCfg:th
+ 1076 set :buildBlock:rotation :unpackCfg:rotation
  1077 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+ 1078 set :buildBlock:index :unpackCfg:ind
  1079 setaddr :buildBlock*retaddr *label308 (h:*label308)
  1080 call *label41 *invalid :buildBlock*retval (m:*label308) (h:*label308)
  1081 label *label308
  1082 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor2 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor9 :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+ 1083 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+ 1084 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
+ 1085 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
+ 1086 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
+ 1087 set :buildBlockFromCfg*retval :buildBlock*retval
  1088 jump *label306 always
-    * set :buildBlockFromCfg*retval null
  1089 label *label306
  1090 set :buildBlockFromCfg*finished true
  1091 jump *label54 always
 
  1093 label *label43
  1094 set :moveTo.1:x :buildBlockAtLocal:x
  1095 set :moveTo.1:y :buildBlockAtLocal:y
-    * set *tmp344 :moveTo.1:x
-    * set *tmp345 :moveTo.1:y
-    * set :moveTo:x *tmp344
-    * set :moveTo:y *tmp345
+ 1096 set *tmp344 :buildBlockAtLocal:x
+ 1097 set *tmp345 :buildBlockAtLocal:y
+ 1098 set :moveTo:x :moveTo.1:x
+ 1099 set :moveTo:y :moveTo.1:y
  1100 set :moveTo:radius 6
  1101 setaddr :moveTo*retaddr *label314 (h:*label314)
  1102 call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
 
  1114 set :buildError:type :buildBlockAtLocal:type
  1115 set :buildError:x :buildBlockAtLocal:x
  1116 set :buildError:y :buildBlockAtLocal:y
-    * set .ERROR :buildError:text
-    * set .ERROR_FOUND_BLOCK :buildError:block
-    * set .ERROR_FOUND_TYPE :buildError:type
-    * set .ERROR_X :buildError:x
-    * set .ERROR_Y :buildError:y
+ 1117 set .ERROR "Cannot build at position"
+ 1118 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
+ 1119 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
+ 1120 set .ERROR_X :buildBlockAtLocal:x
+ 1121 set .ERROR_Y :buildBlockAtLocal:y
  1122 stop
  1123 label *label319
  1124 label *label315
 
  1138 set :buildError.1:type :buildBlockAtLocal:type
  1139 set :buildError.1:x :buildBlockAtLocal:x
  1140 set :buildError.1:y :buildBlockAtLocal:y
-    * set .ERROR :buildError.1:text
-    * set .ERROR_FOUND_BLOCK :buildError.1:block
-    * set .ERROR_FOUND_TYPE :buildError.1:type
-    * set .ERROR_X :buildError.1:x
-    * set .ERROR_Y :buildError.1:y
+ 1141 set .ERROR "Error while building"
+ 1142 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
+ 1143 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
+ 1144 set .ERROR_X :buildBlockAtLocal:x
+ 1145 set .ERROR_Y :buildBlockAtLocal:y
  1146 stop
  1147 label *label325
  1148 jump *label324 always
 
  1166 ubind .builder
  1167 set :logBlock:block :buildBlockAtLocal:block
  1168 set :logBlock:index :buildBlockAtLocal:index
-    * sensor :log:encodedId :logBlock:block @id
+ 1169 sensor :log:encodedId :buildBlockAtLocal:block @id
  1170 read *tmp100 bank1 511
  1171 op sub *tmp366 *tmp100 1
  1172 write *tmp366 bank1 511
 
  1174 read *tmp0 processor1 "time"
  1175 op mul *tmp369 *tmp0 1000
  1176 op add *tmp370 :log:encodedId *tmp369
-    * write *tmp370 bank1 *tmp367
+ 1177 write *tmp370 bank1 *tmp366
  1178 label *label331
-    * jump *label332 lessThan :logBlock:index 0
-    * op shl *tmp373 1 :logBlock:index
+ 1179 jump *label332 lessThan :buildBlockAtLocal:index 0
+ 1180 op shl *tmp373 1 :buildBlockAtLocal:index
  1181 read *tmp6 processor2 ".blocksBuilt"
  1182 op or *tmp374 *tmp6 *tmp373
  1183 write *tmp374 processor2 ".blocksBuilt"
-    * write :logBlock:index processor2 ".recentBuildIndex"
+ 1184 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
  1185 label *label332
  1186 label *label333
  1187 label *label330
  1188 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
  1189 jump *label312 always
-    * set :buildBlockAtLocal*retval null
  1190 label *label312
  1191 return :buildBlockAtLocal*retaddr
  1192 end
 
  1202 label *label335
  1203 set :buildBlockAt*retval :buildBlockAtLocal*retval
  1204 jump *label334 always
-    * set :buildBlockAt*retval null
  1205 label *label334
  1206 set :buildBlockAt*finished true
  1207 jump *label54 always
 
  1217 call *label43 *invalid :buildBlockAtLocal*retval (m:*label337) (h:*label337)
  1218 label *label337
  1219 set :buildFirstTitaniumDrillAt:drill :buildBlockAtLocal*retval
-    * write :buildFirstTitaniumDrillAt:drill processor8 ":addTitaniumDrill:drill"
+ 1220 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1221 write false processor8 ":addTitaniumDrill*finished"
  1222 write 1 processor8 "@counter"
  1223 label *label338
  1224 wait 1e-15
  1225 read *tmp376 processor8 ":addTitaniumDrill*finished"
  1226 jump *label338 equal *tmp376 false
-    * set :buildFirstTitaniumDrillAt*retval :buildFirstTitaniumDrillAt:drill
+ 1227 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
  1228 jump *label336 always
-    * set :buildFirstTitaniumDrillAt*retval null
  1229 label *label336
  1230 set :buildFirstTitaniumDrillAt*finished true
  1231 jump *label54 always
 
  1233 label *label44
  1234 set :getFloor:x :titaniumDrillScore:x
  1235 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y *tmp380 *tmp379 :getFloor:floor
+ 1236 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
  1237 set *tmp378 :getFloor:floor
  1238 jump *label341 always
-    * set *tmp378 null
  1239 label *label341
-    * jump *label342 notEqual *tmp378 @ore-titanium
+ 1240 jump *label342 notEqual :getFloor:floor @ore-titanium
  1241 label *label343
  1242 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1243 jump *label340 always
  1244 label *label342
-    * jump *label345 equal *tmp378 @ore-copper
-    * jump *label345 equal *tmp378 @ore-lead
-    * jump *label345 equal *tmp378 @ore-scrap
-    * jump *label344 notEqual *tmp378 @ore-coal
+ 1245 jump *label345 equal :getFloor:floor @ore-copper
+ 1246 jump *label345 equal :getFloor:floor @ore-lead
+ 1247 jump *label345 equal :getFloor:floor @ore-scrap
+ 1248 jump *label344 notEqual :getFloor:floor @ore-coal
  1249 label *label345
  1250 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1251 label *label344
 
  1258 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
  1259 set :moveTo.2:x :buildTitaniumDrill:x
  1260 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp388 :moveTo.2:x
-    * set *tmp389 :moveTo.2:y
-    * set :moveTo:x *tmp388
-    * set :moveTo:y *tmp389
+ 1261 set *tmp388 :buildTitaniumDrill:x
+ 1262 set *tmp389 :buildTitaniumDrill:y
+ 1263 set :moveTo:x :moveTo.2:x
+ 1264 set :moveTo:y :moveTo.2:y
  1265 set :moveTo:radius 6
  1266 setaddr :moveTo*retaddr *label352 (h:*label352)
  1267 call *label19 *invalid :moveTo*retval (m:*label352) (h:*label352)
 
  1327 call *label43 *invalid :buildBlockAtLocal*retval (m:*label359) (h:*label359)
  1328 label *label359
  1329 set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
-    * jump *label360 equal :buildTitaniumDrill:drill null
-    * write :buildTitaniumDrill:drill processor8 ":addTitaniumDrill:drill"
+ 1330 jump *label360 equal :buildBlockAtLocal*retval null
+ 1331 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1332 write false processor8 ":addTitaniumDrill*finished"
  1333 write 1 processor8 "@counter"
  1334 label *label362
 
  1337 jump *label362 equal *tmp409 false
  1338 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1339 set :setFlareTarget:target :buildTitaniumDrill:count
-    * op min *tmp410 :setFlareTarget:target 8
+ 1340 op min *tmp410 :buildTitaniumDrill:count 8
  1341 write *tmp410 AÕFFJS-micro-processor9 ".flareTarget"
  1342 label *label363
  1343 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
 
  1353 label *label348
  1354 set :buildTitaniumDrill*retval 0
  1355 jump *label346 always
-    * set :buildTitaniumDrill*retval null
  1356 label *label346
  1357 return :buildTitaniumDrill*retaddr
  1358 end
 
  1391 op sub *tmp430 :buildTitaniumDrills:y 1
  1392 set :buildTitaniumDrill:x *tmp429
  1393 set :buildTitaniumDrill:y *tmp430
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1394 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1395 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1396 setaddr :buildTitaniumDrill*retaddr *label374 (h:*label374)
  1397 call *label45 *invalid :buildTitaniumDrill*retval (m:*label374) (h:*label374)
  1398 label *label374
 
  1403 op add *tmp434 :buildTitaniumDrills:y 1
  1404 set :buildTitaniumDrill:x *tmp433
  1405 set :buildTitaniumDrill:y *tmp434
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1406 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1407 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1408 setaddr :buildTitaniumDrill*retaddr *label375 (h:*label375)
  1409 call *label45 *invalid :buildTitaniumDrill*retval (m:*label375) (h:*label375)
  1410 label *label375
 
  1415 op add *tmp438 :buildTitaniumDrills:y 1
  1416 set :buildTitaniumDrill:x *tmp437
  1417 set :buildTitaniumDrill:y *tmp438
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1418 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1419 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1420 setaddr :buildTitaniumDrill*retaddr *label376 (h:*label376)
  1421 call *label45 *invalid :buildTitaniumDrill*retval (m:*label376) (h:*label376)
  1422 label *label376
 
  1426 jump *label377 notEqual :buildTitaniumDrills:built 0
  1427 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1428 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles
+ 1429 set :buildTitaniumDrill:count :buildTitaniumDrill:count
+ 1430 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1431 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1432 call *label45 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
  1433 label *label379

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-70 instructions):
 
   252 setaddr :status2*retaddr *label116 (h:*label116)
   253 call *label15 *invalid :status2*retval (m:*label116) (h:*label116)
   254 label *label116
-    * set *tmp148 :mineOre.1:ore
-    * set *tmp149 :mineOre.1:block
   255 set :mineOre:ore :mineOre.1:ore
   256 set :mineOre:amount 28
   257 set :mineOre:block :mineOre.1:block
 
   395 return :supplyBlockFromCore*retaddr
   396 end
   397 label *label32
-    * set :unpackCfg:index 1
   398 set *tmp180 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp181 :unpackCfg:cfg *tmp180
+  399 read *tmp181 :unpackCfg:cfg 1
   400 op sub *tmp182 *tmp181 74
   401 lookup block :unpackCfg:type *tmp182
   402 set *tmp184 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp185 :unpackCfg:cfg *tmp184
+  403 read *tmp185 :unpackCfg:cfg 2
   404 op sub *tmp186 *tmp185 74
   405 op div :unpackCfg:x *tmp186 2
   406 set *tmp188 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp189 :unpackCfg:cfg *tmp188
+  407 read *tmp189 :unpackCfg:cfg 3
   408 op sub *tmp190 *tmp189 74
   409 op div :unpackCfg:y *tmp190 2
   410 set *tmp192 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp193 :unpackCfg:cfg *tmp192
+  411 read *tmp193 :unpackCfg:cfg 4
   412 op sub :unpackCfg:rotation *tmp193 74
   413 set *tmp195 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp196 :unpackCfg:cfg *tmp195
+  414 read *tmp196 :unpackCfg:cfg 5
   415 op sub :unpackCfg:ind *tmp196 74
   416 sensor :unpackCfg:cu :unpackCfg:type @copper
   417 sensor :unpackCfg:pb :unpackCfg:type @lead
 
   464 label *label162
   465 sensor *tmp220 .core @thorium
   466 jump *label163 lessThanEq *tmp220 400
-    * set :setMonoTarget:target 0
   467 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   468 label *label165
-    * set :setPolyTarget:target 4
   469 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   470 label *label166
   471 label *label163
 
   586 label *label203
   587 set *tmp254 100
   588 label *label204
-    * set :supplyBase0:titaniumTrigger *tmp254
   589 sensor *tmp258 .titaniumDrill @titanium
   590 jump *label205 greaterThanEq *tmp258 *tmp254
   591 jump *label207 notEqual :supplyBase0:supplied false
 
   618 label *label220
   619 set *tmp275 @scrap
   620 label *label221
-    * set :supplyBase0:ore *tmp275
   621 jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   622 set *tmp277 .core
   623 jump *label223 always
   624 label *label222
   625 set *tmp277 A¨SSJi-container31
   626 label *label223
-    * set :supplyBase0:block *tmp277
   627 set :mineOre.1:ore *tmp275
   628 set :mineOre.1:block *tmp277
   629 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   650 label *label227
   651 set *tmp281 @sand
   652 label *label228
-    * set :supplyBase0:ore.1 *tmp281
   653 set :mineOre.2:ore *tmp281
   654 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   655 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
 
   724 label *label249
   725 set *tmp297 @sand
   726 label *label250
-    * set :supplyBase0:ore.2 *tmp297
   727 set :mineOre.2:ore *tmp297
   728 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   729 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
 
   929 setaddr :unpackCfg*retaddr *label296 (h:*label296)
   930 call *label32 *invalid :unpackCfg*retval (m:*label296) (h:*label296)
   931 label *label296
-    * set :meetTargetCfg:type :unpackCfg:type
-    * set :meetTargetCfg:cu :unpackCfg:cu
-    * set :meetTargetCfg:pb :unpackCfg:pb
-    * set :meetTargetCfg:gr :unpackCfg:gr
-    * set :meetTargetCfg:si :unpackCfg:si
-    * set :meetTargetCfg:ti :unpackCfg:ti
-    * set :meetTargetCfg:mg :unpackCfg:mg
-    * set :meetTargetCfg:th :unpackCfg:th
   932 set :meetTargetLocal:block :unpackCfg:type
   933 set :meetTargetLocal:copper :unpackCfg:cu
   934 set :meetTargetLocal:lead :unpackCfg:pb
 
   970 setaddr :buildBlockAtLocal*retaddr *label300 (h:*label300)
   971 call *label43 *invalid :buildBlockAtLocal*retval (m:*label300) (h:*label300)
   972 label *label300
-    * set :buildBlock:built :buildBlockAtLocal*retval
   973 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   974 write 2 AÕFFJS-micro-processor9 "@counter"
   975 set :buildBlock*retval :buildBlockAtLocal*retval
 
   984 setaddr :unpackCfg*retaddr *label304 (h:*label304)
   985 call *label32 *invalid :unpackCfg*retval (m:*label304) (h:*label304)
   986 label *label304
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   987 set :buildBlock:block :unpackCfg:type
   988 set :buildBlock:x :buildRemoteBlock:x
   989 set :buildBlock:y :buildRemoteBlock:y
 
  1015 setaddr :unpackCfg*retaddr *label307 (h:*label307)
  1016 call *label32 *invalid :unpackCfg*retval (m:*label307) (h:*label307)
  1017 label *label307
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
  1018 op add *tmp342 .coreX :unpackCfg:x
  1019 op add *tmp343 .coreY :unpackCfg:y
  1020 set :buildBlock:block :unpackCfg:type
 
  1033 setaddr :buildBlock*retaddr *label308 (h:*label308)
  1034 call *label41 *invalid :buildBlock*retval (m:*label308) (h:*label308)
  1035 label *label308
-    * set :buildBlockFromCfg:building :buildBlock*retval
  1036 write :buildBlock*retval @this :buildBlockFromCfg:cfg
  1037 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
  1038 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
 
  1046 label *label43
  1047 set :moveTo.1:x :buildBlockAtLocal:x
  1048 set :moveTo.1:y :buildBlockAtLocal:y
-    * set *tmp344 :buildBlockAtLocal:x
-    * set *tmp345 :buildBlockAtLocal:y
-    * set :moveTo:x :moveTo.1:x
-    * set :moveTo:y :moveTo.1:y
+ 1049 set :moveTo:x :buildBlockAtLocal:x
+ 1050 set :moveTo:y :buildBlockAtLocal:y
  1051 set :moveTo:radius 6
  1052 setaddr :moveTo*retaddr *label314 (h:*label314)
  1053 call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
 
  1060 jump *label312 always
  1061 label *label317
  1062 label *label318
-    * set :buildError:text "Cannot build at position"
-    * set :buildError:block :buildBlockAtLocal:block
-    * set :buildError:type :buildBlockAtLocal:type
-    * set :buildError:x :buildBlockAtLocal:x
-    * set :buildError:y :buildBlockAtLocal:y
  1063 set .ERROR "Cannot build at position"
  1064 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
  1065 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
 
  1079 op equal *tmp355 :buildBlockAtLocal:success false
  1080 op land *tmp356 *tmp354 *tmp355
  1081 jump *label323 equal *tmp356 false
-    * set :buildError.1:text "Error while building"
-    * set :buildError.1:block :buildBlockAtLocal:block
-    * set :buildError.1:type :buildBlockAtLocal:type
-    * set :buildError.1:x :buildBlockAtLocal:x
-    * set :buildError.1:y :buildBlockAtLocal:y
  1082 set .ERROR "Error while building"
  1083 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
  1084 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
 
  1105 label *label322
  1106 control enabled processor6 true
  1107 ubind .builder
-    * set :logBlock:block :buildBlockAtLocal:block
-    * set :logBlock:index :buildBlockAtLocal:index
  1108 sensor :log:encodedId :buildBlockAtLocal:block @id
  1109 read *tmp100 bank1 511
  1110 op sub *tmp366 *tmp100 1
  1111 write *tmp366 bank1 511
-    * set *tmp367 *tmp366
  1112 read *tmp0 processor1 "time"
  1113 op mul *tmp369 *tmp0 1000
  1114 op add *tmp370 :log:encodedId *tmp369
 
  1154 setaddr :buildBlockAtLocal*retaddr *label337 (h:*label337)
  1155 call *label43 *invalid :buildBlockAtLocal*retval (m:*label337) (h:*label337)
  1156 label *label337
-    * set :buildFirstTitaniumDrillAt:drill :buildBlockAtLocal*retval
  1157 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1158 write false processor8 ":addTitaniumDrill*finished"
  1159 write 1 processor8 "@counter"
 
  1168 jump *label54 always
  1169 end
  1170 label *label44
-    * set :getFloor:x :titaniumDrillScore:x
-    * set :getFloor:y :titaniumDrillScore:y
  1171 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
-    * set *tmp378 :getFloor:floor
  1172 jump *label341 always
  1173 label *label341
  1174 jump *label342 notEqual :getFloor:floor @ore-titanium
 
  1192 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
  1193 set :moveTo.2:x :buildTitaniumDrill:x
  1194 set :moveTo.2:y :buildTitaniumDrill:y
-    * set *tmp388 :buildTitaniumDrill:x
-    * set *tmp389 :buildTitaniumDrill:y
-    * set :moveTo:x :moveTo.2:x
-    * set :moveTo:y :moveTo.2:y
+ 1195 set :moveTo:x :buildTitaniumDrill:x
+ 1196 set :moveTo:y :buildTitaniumDrill:y
  1197 set :moveTo:radius 6
  1198 setaddr :moveTo*retaddr *label352 (h:*label352)
  1199 call *label19 *invalid :moveTo*retval (m:*label352) (h:*label352)
 
  1258 setaddr :buildBlockAtLocal*retaddr *label359 (h:*label359)
  1259 call *label43 *invalid :buildBlockAtLocal*retval (m:*label359) (h:*label359)
  1260 label *label359
-    * set :buildTitaniumDrill:drill :buildBlockAtLocal*retval
  1261 jump *label360 equal :buildBlockAtLocal*retval null
  1262 write :buildBlockAtLocal*retval processor8 ":addTitaniumDrill:drill"
  1263 write false processor8 ":addTitaniumDrill*finished"
 
  1267 read *tmp409 processor8 ":addTitaniumDrill*finished"
  1268 jump *label362 equal *tmp409 false
  1269 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
-    * set :setFlareTarget:target :buildTitaniumDrill:count
  1270 op min *tmp410 :buildTitaniumDrill:count 8
  1271 write *tmp410 AÕFFJS-micro-processor9 ".flareTarget"
  1272 label *label363

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-9 instructions):
 
   395 return :supplyBlockFromCore*retaddr
   396 end
   397 label *label32
-    * set *tmp180 1
   398 read *tmp181 :unpackCfg:cfg 1
   399 op sub *tmp182 *tmp181 74
   400 lookup block :unpackCfg:type *tmp182
-    * set *tmp184 2
   401 read *tmp185 :unpackCfg:cfg 2
   402 op sub *tmp186 *tmp185 74
   403 op div :unpackCfg:x *tmp186 2
-    * set *tmp188 3
   404 read *tmp189 :unpackCfg:cfg 3
   405 op sub *tmp190 *tmp189 74
   406 op div :unpackCfg:y *tmp190 2
-    * set *tmp192 4
   407 read *tmp193 :unpackCfg:cfg 4
   408 op sub :unpackCfg:rotation *tmp193 74
-    * set *tmp195 5
   409 read *tmp196 :unpackCfg:cfg 5
   410 op sub :unpackCfg:ind *tmp196 74
   411 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1039 jump *label54 always
  1040 end
  1041 label *label43
-    * set :moveTo.1:x :buildBlockAtLocal:x
-    * set :moveTo.1:y :buildBlockAtLocal:y
  1042 set :moveTo:x :buildBlockAtLocal:x
  1043 set :moveTo:y :buildBlockAtLocal:y
  1044 set :moveTo:radius 6
 
  1183 label *label45
  1184 jump *label347 greaterThanEq :buildTitaniumDrill:count 6
  1185 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
-    * set :moveTo.2:x :buildTitaniumDrill:x
-    * set :moveTo.2:y :buildTitaniumDrill:y
  1186 set :moveTo:x :buildTitaniumDrill:x
  1187 set :moveTo:y :buildTitaniumDrill:y
  1188 set :moveTo:radius 6

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    74 setaddr :status3*retaddr *label61 (h:*label61)
    75 call *label16 *invalid :status3*retval (m:*label61) (h:*label61)
    76 label *label61
+   77 op sub *tmp107 :moveTo:radius 0.5
    78 label *label62
    79 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    80 jump *label64 notEqual *tmp105 false
-    * op sub *tmp107 :moveTo:radius 0.5
    81 ucontrol approach :moveTo:x :moveTo:y *tmp107
    82 label *label63
    83 jump *label62 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-12 instructions):
 
   607 jump *label218 equal A¨SSJi-container31 false
   608 sensor :supplyBase0:coal .core @coal
   609 sensor :supplyBase0:sand A¨SSJi-container31 @sand
-    * jump *label220 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp275 @coal
-    * jump *label221 always
-    * label *label220
-    * set *tmp275 @scrap
-    * label *label221
-    * jump *label222 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp277 .core
-    * jump *label223 always
-    * label *label222
-    * set *tmp277 A¨SSJi-container31
-    * label *label223
+  610 select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  611 select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand .core A¨SSJi-container31
   612 set :mineOre.1:ore *tmp275
   613 set :mineOre.1:block *tmp277
   614 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   629 label *label226
   630 sensor :supplyBase0:coal.1 .core @coal
   631 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label227 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp281 @coal
-    * jump *label228 always
-    * label *label227
-    * set *tmp281 @sand
-    * label *label228
+  632 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   633 set :mineOre.2:ore *tmp281
   634 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   635 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
 
   694 label *label248
   695 jump *label247 always
   696 label *label246
-    * sensor *tmp293 .core @coal
-    * sensor *tmp294 .core @sand
-    * op lessThanEq *tmp295 *tmp293 *tmp294
-    * op or *tmp296 .scrap *tmp295
-    * jump *label249 equal *tmp296 false
-    * set *tmp297 @coal
-    * jump *label250 always
-    * label *label249
-    * set *tmp297 @sand
-    * label *label250
+  697 sensor *tmp293 .core @coal
+  698 sensor *tmp294 .core @sand
+  699 op lessThanEq *tmp295 *tmp293 *tmp294
+  700 op or *tmp296 .scrap *tmp295
+  701 select *tmp297 notEqual *tmp296 false @coal @sand
   702 set :mineOre.2:ore *tmp297
   703 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   704 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   572 label *label188
   573 label *label173
   574 label *label174
+  575 set *tmp254 100
   576 sensor *tmp252 .core @titanium
-    * jump *label203 greaterThanEq *tmp252 titanium
+  577 jump *label204 greaterThanEq *tmp252 titanium
   578 sensor *tmp255 .core @titanium
   579 op sub *tmp256 titanium *tmp255
   580 op min *tmp254 5 *tmp256
   581 jump *label204 always
-    * label *label203
-    * set *tmp254 100
   582 label *label204
   583 sensor *tmp258 .titaniumDrill @titanium
   584 jump *label205 greaterThanEq *tmp258 *tmp254

Modifications by Unroll iteration loop at BlockBuilder.mnd:202:5 (-2 instructions):
 
   778 end
   779 label *label40
   780 set :meetTargetLocal:count 0
-    * set :meetTargetLocal:t :meetTargetLocal:copper
-    * setaddr *tmp319 *label273
-    * jump *label270 always
-    * multilabel *label273 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:lead
-    * setaddr *tmp319 *label274
-    * jump *label270 always
-    * multilabel *label274 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:graphite
-    * setaddr *tmp319 *label275
-    * jump *label270 always
-    * multilabel *label275 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:silicon
-    * setaddr *tmp319 *label276
-    * jump *label270 always
-    * multilabel *label276 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:titanium
-    * setaddr *tmp319 *label277
-    * jump *label270 always
-    * multilabel *label277 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:metaglass
-    * setaddr *tmp319 *label278
-    * jump *label270 always
-    * multilabel *label278 (m:marker0)
-    * set :meetTargetLocal:t :meetTargetLocal:thorium
-    * setaddr *tmp319 *label279
-    * label *label270
-    * op sign *tmp320 :meetTargetLocal:t
-    * op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label271
-    * multijump *tmp319 0 0 (m:marker0)
-    * multilabel *label279 (m:marker0)
-    * label *label272
+  781 set :meetTargetLocal:t :meetTargetLocal:copper
+  782 label *label386
+  783 op sign *tmp320 :meetTargetLocal:t
+  784 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  785 label *label387
+  786 set :meetTargetLocal:t :meetTargetLocal:lead
+  787 label *label390
+  788 op sign *tmp320 :meetTargetLocal:t
+  789 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  790 label *label391
+  791 set :meetTargetLocal:t :meetTargetLocal:graphite
+  792 label *label394
+  793 op sign *tmp320 :meetTargetLocal:t
+  794 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  795 label *label395
+  796 set :meetTargetLocal:t :meetTargetLocal:silicon
+  797 label *label398
+  798 op sign *tmp320 :meetTargetLocal:t
+  799 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  800 label *label399
+  801 set :meetTargetLocal:t :meetTargetLocal:titanium
+  802 label *label402
+  803 op sign *tmp320 :meetTargetLocal:t
+  804 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  805 label *label403
+  806 set :meetTargetLocal:t :meetTargetLocal:metaglass
+  807 label *label406
+  808 op sign *tmp320 :meetTargetLocal:t
+  809 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  810 label *label407
+  811 set :meetTargetLocal:t :meetTargetLocal:thorium
+  812 label *label410
+  813 op sign *tmp320 :meetTargetLocal:t
+  814 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  815 label *label411
+  816 label *label272
   817 write :meetTargetLocal:count processor2 ".totalTargets"
   818 write :meetTargetLocal:block processor2 ".nextBlock"
   819 write :meetTargetLocal:copper processor2 ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   780 set :meetTargetLocal:count 0
   781 set :meetTargetLocal:t :meetTargetLocal:copper
   782 label *label386
-    * op sign *tmp320 :meetTargetLocal:t
-    * op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
+  783 op sign *tmp320 :meetTargetLocal:copper
+  784 op add :meetTargetLocal:count 0 *tmp320
   785 label *label387
   786 set :meetTargetLocal:t :meetTargetLocal:lead
   787 label *label390
-    * op sign *tmp320 :meetTargetLocal:t
+  788 op sign *tmp320 :meetTargetLocal:lead
   789 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   790 label *label391
   791 set :meetTargetLocal:t :meetTargetLocal:graphite
   792 label *label394
-    * op sign *tmp320 :meetTargetLocal:t
+  793 op sign *tmp320 :meetTargetLocal:graphite
   794 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   795 label *label395
   796 set :meetTargetLocal:t :meetTargetLocal:silicon
   797 label *label398
-    * op sign *tmp320 :meetTargetLocal:t
+  798 op sign *tmp320 :meetTargetLocal:silicon
   799 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   800 label *label399
   801 set :meetTargetLocal:t :meetTargetLocal:titanium
   802 label *label402
-    * op sign *tmp320 :meetTargetLocal:t
+  803 op sign *tmp320 :meetTargetLocal:titanium
   804 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   805 label *label403
   806 set :meetTargetLocal:t :meetTargetLocal:metaglass
   807 label *label406
-    * op sign *tmp320 :meetTargetLocal:t
+  808 op sign *tmp320 :meetTargetLocal:metaglass
   809 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   810 label *label407
   811 set :meetTargetLocal:t :meetTargetLocal:thorium
   812 label *label410
-    * op sign *tmp320 :meetTargetLocal:t
+  813 op sign *tmp320 :meetTargetLocal:thorium
   814 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   815 label *label411
   816 label *label272

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   777 return :targetMet*retaddr
   778 end
   779 label *label40
-    * set :meetTargetLocal:count 0
-    * set :meetTargetLocal:t :meetTargetLocal:copper
   780 label *label386
   781 op sign *tmp320 :meetTargetLocal:copper
   782 op add :meetTargetLocal:count 0 *tmp320
   783 label *label387
-    * set :meetTargetLocal:t :meetTargetLocal:lead
   784 label *label390
   785 op sign *tmp320 :meetTargetLocal:lead
   786 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   787 label *label391
-    * set :meetTargetLocal:t :meetTargetLocal:graphite
   788 label *label394
   789 op sign *tmp320 :meetTargetLocal:graphite
   790 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   791 label *label395
-    * set :meetTargetLocal:t :meetTargetLocal:silicon
   792 label *label398
   793 op sign *tmp320 :meetTargetLocal:silicon
   794 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   795 label *label399
-    * set :meetTargetLocal:t :meetTargetLocal:titanium
   796 label *label402
   797 op sign *tmp320 :meetTargetLocal:titanium
   798 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   799 label *label403
-    * set :meetTargetLocal:t :meetTargetLocal:metaglass
   800 label *label406
   801 op sign *tmp320 :meetTargetLocal:metaglass
   802 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
   803 label *label407
-    * set :meetTargetLocal:t :meetTargetLocal:thorium
   804 label *label410
   805 op sign *tmp320 :meetTargetLocal:thorium
   806 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-18 instructions):
 
    40 wait 1e12
    41 jump *label54 always
    42 end
-    * label *label14
-    * write :status1:text processor2 ".status1"
-    * label *label55
-    * return :status1*retaddr
-    * end
    43 label *label15
    44 write :status2:text processor2 ".status2"
    45 write :status2:item processor2 ".item2"
 
   421 write *tmp209 processor7 ".sandTarget"
   422 jump *label150 equal .thoriumContainer false
   423 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label153 (h:*label153)
-    * call *label14 *invalid :status1*retval (m:*label153) (h:*label153)
-    * label *label153
+  424 label *label415
+  425 write :status1:text processor2 ".status1"
+  426 label *label416
   427 sensor *tmp211 .thoriumBattery @totalPower
   428 jump *label154 greaterThanEq *tmp211 2000
   429 sensor *tmp214 .thoriumGenerator @coal
 
   466 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   467 jump *label167 lessThanEq *tmp81 1
   468 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label170 (h:*label170)
-    * call *label14 *invalid :status1*retval (m:*label170) (h:*label170)
-    * label *label170
+  469 label *label417
+  470 write :status1:text processor2 ".status1"
+  471 label *label418
   472 set :mineOre.2:ore @coal
   473 setaddr :mineOre.2*retaddr *label171 (h:*label171)
   474 call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
 
   483 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   484 jump *label177 greaterThanEq *tmp230 5
   485 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label179 (h:*label179)
-    * call *label14 *invalid :status1*retval (m:*label179) (h:*label179)
-    * label *label179
+  486 label *label419
+  487 write :status1:text processor2 ".status1"
+  488 label *label420
   489 set :supplyBlock:block AJEMJJ-graphite-press0
   490 set :supplyBlock:ore @coal
   491 setaddr :supplyBlock*retaddr *label180 (h:*label180)
 
   501 sensor *tmp236 AJRJM-combustion-generator3 @coal
   502 jump *label183 greaterThanEq *tmp236 2
   503 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label185 (h:*label185)
-    * call *label14 *invalid :status1*retval (m:*label185) (h:*label185)
-    * label *label185
+  504 label *label421
+  505 write :status1:text processor2 ".status1"
+  506 label *label422
   507 set :supplyBlock:block AJRJM-combustion-generator3
   508 set :supplyBlock:ore @coal
   509 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   519 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   520 jump *label189 greaterThanEq *tmp242 5
   521 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label191 (h:*label191)
-    * call *label14 *invalid :status1*retval (m:*label191) (h:*label191)
-    * label *label191
+  522 label *label423
+  523 write :status1:text processor2 ".status1"
+  524 label *label424
   525 set :supplyBlock:block ALMQJN-silicon-smelter4
   526 set :supplyBlock:ore @coal
   527 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   536 sensor *tmp249 AXPRJe-pulverizer27 @scrap
   537 jump *label197 greaterThanEq *tmp249 10
   538 set :status1:text "Goal 3a: scrap for silicon requirement"
-    * setaddr :status1*retaddr *label199 (h:*label199)
-    * call *label14 *invalid :status1*retval (m:*label199) (h:*label199)
-    * label *label199
+  539 label *label425
+  540 write :status1:text processor2 ".status1"
+  541 label *label426
   542 set :supplyBlock:block AXPRJe-pulverizer27
   543 set :supplyBlock:ore @scrap
   544 setaddr :supplyBlock*retaddr *label200 (h:*label200)
 
   550 jump *label196 always
   551 label *label195
   552 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label201 (h:*label201)
-    * call *label14 *invalid :status1*retval (m:*label201) (h:*label201)
-    * label *label201
+  553 label *label427
+  554 write :status1:text processor2 ".status1"
+  555 label *label428
   556 set :supplyBlock:block ALMQJN-silicon-smelter4
   557 set :supplyBlock:ore @sand
   558 setaddr :supplyBlock*retaddr *label202 (h:*label202)
 
   582 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   583 jump *label209 greaterThanEq *tmp263 *tmp264
   584 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label211 (h:*label211)
-    * call *label14 *invalid :status1*retval (m:*label211) (h:*label211)
-    * label *label211
+  585 label *label429
+  586 write :status1:text processor2 ".status1"
+  587 label *label430
   588 set :mineOre.2:ore @coal
   589 setaddr :mineOre.2*retaddr *label212 (h:*label212)
   590 call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
 
   595 jump *label213 greaterThanEq *tmp267 silicon
   596 jump *label215 equal .scrap false
   597 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label217 (h:*label217)
-    * call *label14 *invalid :status1*retval (m:*label217) (h:*label217)
-    * label *label217
+  598 label *label431
+  599 write :status1:text processor2 ".status1"
+  600 label *label432
   601 jump *label218 equal A¨SSJi-container31 false
   602 sensor :supplyBase0:coal .core @coal
   603 sensor :supplyBase0:sand A¨SSJi-container31 @sand
 
   618 jump *label216 always
   619 label *label215
   620 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label226 (h:*label226)
-    * call *label14 *invalid :status1*retval (m:*label226) (h:*label226)
-    * label *label226
+  621 label *label433
+  622 write :status1:text processor2 ".status1"
+  623 label *label434
   624 sensor :supplyBase0:coal.1 .core @coal
   625 sensor :supplyBase0:sand.1 .core @sand
   626 select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   634 sensor *tmp282 .core @copper
   635 jump *label230 greaterThanEq *tmp282 copper
   636 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label232 (h:*label232)
-    * call *label14 *invalid :status1*retval (m:*label232) (h:*label232)
-    * label *label232
+  637 label *label435
+  638 write :status1:text processor2 ".status1"
+  639 label *label436
   640 set :mineOre.2:ore @copper
   641 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   642 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
 
   646 sensor *tmp285 .core @lead
   647 jump *label234 greaterThanEq *tmp285 lead
   648 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label236 (h:*label236)
-    * call *label14 *invalid :status1*retval (m:*label236) (h:*label236)
-    * label *label236
+  649 label *label437
+  650 write :status1:text processor2 ".status1"
+  651 label *label438
   652 set :mineOre.2:ore @lead
   653 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   654 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
 
   658 sensor *tmp288 .core @metaglass
   659 jump *label238 greaterThanEq *tmp288 metaglass
   660 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label240 (h:*label240)
-    * call *label14 *invalid :status1*retval (m:*label240) (h:*label240)
-    * label *label240
+  661 label *label439
+  662 write :status1:text processor2 ".status1"
+  663 label *label440
   664 jump *label241 equal .scrap false
   665 set :mineOre.1:ore @scrap
   666 set :mineOre.1:block .sandContainer
 
   677 jump *label239 always
   678 label *label238
   679 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label245 (h:*label245)
-    * call *label14 *invalid :status1*retval (m:*label245) (h:*label245)
-    * label *label245
+  680 label *label441
+  681 write :status1:text processor2 ".status1"
+  682 label *label442
   683 jump *label246 equal A¨SSJi-container31 false
   684 set :mineOre.1:ore @scrap
   685 set :mineOre.1:block A¨SSJi-container31
 
   708 jump *label206 always
   709 label *label205
   710 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label252 (h:*label252)
-    * call *label14 *invalid :status1*retval (m:*label252) (h:*label252)
-    * label *label252
+  711 label *label443
+  712 write :status1:text processor2 ".status1"
+  713 label *label444
   714 set :fetchBlock:block .titaniumDrill
   715 set :fetchBlock:item @titanium
   716 setaddr :fetchBlock*retaddr *label253 (h:*label253)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   422 jump *label150 equal .thoriumContainer false
   423 set :status1:text "Phase 2: servicing thorium drill"
   424 label *label415
-    * write :status1:text processor2 ".status1"
+  425 write "Phase 2: servicing thorium drill" processor2 ".status1"
   426 label *label416
   427 sensor *tmp211 .thoriumBattery @totalPower
   428 jump *label154 greaterThanEq *tmp211 2000
 
   467 jump *label167 lessThanEq *tmp81 1
   468 set :status1:text "Phase 1: supplying base"
   469 label *label417
-    * write :status1:text processor2 ".status1"
+  470 write "Phase 1: supplying base" processor2 ".status1"
   471 label *label418
   472 set :mineOre.2:ore @coal
   473 setaddr :mineOre.2*retaddr *label171 (h:*label171)
 
   484 jump *label177 greaterThanEq *tmp230 5
   485 set :status1:text "Goal 1: graphite requirement"
   486 label *label419
-    * write :status1:text processor2 ".status1"
+  487 write "Goal 1: graphite requirement" processor2 ".status1"
   488 label *label420
   489 set :supplyBlock:block AJEMJJ-graphite-press0
   490 set :supplyBlock:ore @coal
 
   502 jump *label183 greaterThanEq *tmp236 2
   503 set :status1:text "Goal 4: supplying generator"
   504 label *label421
-    * write :status1:text processor2 ".status1"
+  505 write "Goal 4: supplying generator" processor2 ".status1"
   506 label *label422
   507 set :supplyBlock:block AJRJM-combustion-generator3
   508 set :supplyBlock:ore @coal
 
   520 jump *label189 greaterThanEq *tmp242 5
   521 set :status1:text "Goal 2: coal for silicon requirement"
   522 label *label423
-    * write :status1:text processor2 ".status1"
+  523 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   524 label *label424
   525 set :supplyBlock:block ALMQJN-silicon-smelter4
   526 set :supplyBlock:ore @coal
 
   537 jump *label197 greaterThanEq *tmp249 10
   538 set :status1:text "Goal 3a: scrap for silicon requirement"
   539 label *label425
-    * write :status1:text processor2 ".status1"
+  540 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   541 label *label426
   542 set :supplyBlock:block AXPRJe-pulverizer27
   543 set :supplyBlock:ore @scrap
 
   551 label *label195
   552 set :status1:text "Goal 3: sand for silicon requirement"
   553 label *label427
-    * write :status1:text processor2 ".status1"
+  554 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   555 label *label428
   556 set :supplyBlock:block ALMQJN-silicon-smelter4
   557 set :supplyBlock:ore @sand
 
   583 jump *label209 greaterThanEq *tmp263 *tmp264
   584 set :status1:text "Goal 5: supplying generator"
   585 label *label429
-    * write :status1:text processor2 ".status1"
+  586 write "Goal 5: supplying generator" processor2 ".status1"
   587 label *label430
   588 set :mineOre.2:ore @coal
   589 setaddr :mineOre.2*retaddr *label212 (h:*label212)
 
   596 jump *label215 equal .scrap false
   597 set :status1:text "Goal 6: silicon requirement"
   598 label *label431
-    * write :status1:text processor2 ".status1"
+  599 write "Goal 6: silicon requirement" processor2 ".status1"
   600 label *label432
   601 jump *label218 equal A¨SSJi-container31 false
   602 sensor :supplyBase0:coal .core @coal
 
   619 label *label215
   620 set :status1:text "Goal 6: silicon requirement"
   621 label *label433
-    * write :status1:text processor2 ".status1"
+  622 write "Goal 6: silicon requirement" processor2 ".status1"
   623 label *label434
   624 sensor :supplyBase0:coal.1 .core @coal
   625 sensor :supplyBase0:sand.1 .core @sand
 
   635 jump *label230 greaterThanEq *tmp282 copper
   636 set :status1:text "Goal 7: copper requirement"
   637 label *label435
-    * write :status1:text processor2 ".status1"
+  638 write "Goal 7: copper requirement" processor2 ".status1"
   639 label *label436
   640 set :mineOre.2:ore @copper
   641 setaddr :mineOre.2*retaddr *label233 (h:*label233)
 
   647 jump *label234 greaterThanEq *tmp285 lead
   648 set :status1:text "Goal 8: lead requirement"
   649 label *label437
-    * write :status1:text processor2 ".status1"
+  650 write "Goal 8: lead requirement" processor2 ".status1"
   651 label *label438
   652 set :mineOre.2:ore @lead
   653 setaddr :mineOre.2*retaddr *label237 (h:*label237)
 
   659 jump *label238 greaterThanEq *tmp288 metaglass
   660 set :status1:text "Goal 9: metaglass requirement"
   661 label *label439
-    * write :status1:text processor2 ".status1"
+  662 write "Goal 9: metaglass requirement" processor2 ".status1"
   663 label *label440
   664 jump *label241 equal .scrap false
   665 set :mineOre.1:ore @scrap
 
   678 label *label238
   679 set :status1:text "Goal 10: supplying base"
   680 label *label441
-    * write :status1:text processor2 ".status1"
+  681 write "Goal 10: supplying base" processor2 ".status1"
   682 label *label442
   683 jump *label246 equal A¨SSJi-container31 false
   684 set :mineOre.1:ore @scrap
 
   709 label *label205
   710 set :status1:text "Goal 11: Fetching titanium"
   711 label *label443
-    * write :status1:text processor2 ".status1"
+  712 write "Goal 11: Fetching titanium" processor2 ".status1"
   713 label *label444
   714 set :fetchBlock:block .titaniumDrill
   715 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
   420 op max *tmp209 0 *tmp208
   421 write *tmp209 processor7 ".sandTarget"
   422 jump *label150 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   423 label *label415
   424 write "Phase 2: servicing thorium drill" processor2 ".status1"
   425 label *label416
 
   464 label *label150
   465 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   466 jump *label167 lessThanEq *tmp81 1
-    * set :status1:text "Phase 1: supplying base"
   467 label *label417
   468 write "Phase 1: supplying base" processor2 ".status1"
   469 label *label418
 
   480 jump *label175 greaterThanEq *tmp227 graphite
   481 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   482 jump *label177 greaterThanEq *tmp230 5
-    * set :status1:text "Goal 1: graphite requirement"
   483 label *label419
   484 write "Goal 1: graphite requirement" processor2 ".status1"
   485 label *label420
 
   497 jump *label181 greaterThanEq *tmp233 .powerTarget
   498 sensor *tmp236 AJRJM-combustion-generator3 @coal
   499 jump *label183 greaterThanEq *tmp236 2
-    * set :status1:text "Goal 4: supplying generator"
   500 label *label421
   501 write "Goal 4: supplying generator" processor2 ".status1"
   502 label *label422
 
   514 jump *label187 greaterThanEq *tmp239 silicon
   515 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   516 jump *label189 greaterThanEq *tmp242 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   517 label *label423
   518 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   519 label *label424
 
   530 jump *label195 equal .scrap false
   531 sensor *tmp249 AXPRJe-pulverizer27 @scrap
   532 jump *label197 greaterThanEq *tmp249 10
-    * set :status1:text "Goal 3a: scrap for silicon requirement"
   533 label *label425
   534 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   535 label *label426
 
   543 label *label198
   544 jump *label196 always
   545 label *label195
-    * set :status1:text "Goal 3: sand for silicon requirement"
   546 label *label427
   547 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   548 label *label428
 
   574 sensor *tmp263 AJTJK-battery1 @totalPower
   575 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   576 jump *label209 greaterThanEq *tmp263 *tmp264
-    * set :status1:text "Goal 5: supplying generator"
   577 label *label429
   578 write "Goal 5: supplying generator" processor2 ".status1"
   579 label *label430
 
   586 sensor *tmp267 .core @silicon
   587 jump *label213 greaterThanEq *tmp267 silicon
   588 jump *label215 equal .scrap false
-    * set :status1:text "Goal 6: silicon requirement"
   589 label *label431
   590 write "Goal 6: silicon requirement" processor2 ".status1"
   591 label *label432
 
   608 label *label219
   609 jump *label216 always
   610 label *label215
-    * set :status1:text "Goal 6: silicon requirement"
   611 label *label433
   612 write "Goal 6: silicon requirement" processor2 ".status1"
   613 label *label434
 
   623 label *label213
   624 sensor *tmp282 .core @copper
   625 jump *label230 greaterThanEq *tmp282 copper
-    * set :status1:text "Goal 7: copper requirement"
   626 label *label435
   627 write "Goal 7: copper requirement" processor2 ".status1"
   628 label *label436
 
   634 label *label230
   635 sensor *tmp285 .core @lead
   636 jump *label234 greaterThanEq *tmp285 lead
-    * set :status1:text "Goal 8: lead requirement"
   637 label *label437
   638 write "Goal 8: lead requirement" processor2 ".status1"
   639 label *label438
 
   645 label *label234
   646 sensor *tmp288 .core @metaglass
   647 jump *label238 greaterThanEq *tmp288 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   648 label *label439
   649 write "Goal 9: metaglass requirement" processor2 ".status1"
   650 label *label440
 
   663 label *label242
   664 jump *label239 always
   665 label *label238
-    * set :status1:text "Goal 10: supplying base"
   666 label *label441
   667 write "Goal 10: supplying base" processor2 ".status1"
   668 label *label442
 
   693 label *label208
   694 jump *label206 always
   695 label *label205
-    * set :status1:text "Goal 11: Fetching titanium"
   696 label *label443
   697 write "Goal 11: Fetching titanium" processor2 ".status1"
   698 label *label444

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
    47 label *label56
    48 return :status2*retaddr
    49 end
-    * label *label16
-    * write :status3:text processor2 ".status3"
-    * label *label57
-    * return :status3*retaddr
-    * end
    50 label *label17
    51 write :transportStatus:target processor2 ".transportTarget"
    52 write :transportStatus:item processor2 ".transportItem"
 
    61 end
    62 label *label19
    63 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label61 (h:*label61)
-    * call *label16 *invalid :status3*retval (m:*label61) (h:*label61)
-    * label *label61
+   64 label *label445
+   65 write :status3:text processor2 ".status3"
+   66 label *label446
    67 op sub *tmp107 :moveTo:radius 0.5
    68 label *label62
    69 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
 
    77 end
    78 label *label20
    79 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label66 (h:*label66)
-    * call *label16 *invalid :status3*retval (m:*label66) (h:*label66)
-    * label *label66
+   80 label *label447
+   81 write :status3:text processor2 ".status3"
+   82 label *label448
    83 label *label67
    84 sensor *tmp108 @unit @firstItem
    85 jump *label70 equal *tmp108 null
 
   119 end
   120 label *label23
   121 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label79 (h:*label79)
-    * call *label16 *invalid :status3*retval (m:*label79) (h:*label79)
-    * label *label79
+  122 label *label449
+  123 write :status3:text processor2 ".status3"
+  124 label *label450
   125 sensor *tmp117 @unit @firstItem
   126 jump *label80 notEqual *tmp117 :depositItems:item
   127 set :moveToBlock:block :depositItems:block
 
   194 label *label98
   195 label *label99
   196 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label101 (h:*label101)
-    * call *label16 *invalid :status3*retval (m:*label101) (h:*label101)
-    * label *label101
+  197 label *label451
+  198 write :status3:text processor2 ".status3"
+  199 label *label452
   200 op add :mineOre:stop @second 10
   201 label *label102
   202 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    62 label *label19
    63 set :status3:text "Moving..."
    64 label *label445
-    * write :status3:text processor2 ".status3"
+   65 write "Moving..." processor2 ".status3"
    66 label *label446
    67 op sub *tmp107 :moveTo:radius 0.5
    68 label *label62
 
    78 label *label20
    79 set :status3:text "Moving..."
    80 label *label447
-    * write :status3:text processor2 ".status3"
+   81 write "Moving..." processor2 ".status3"
    82 label *label448
    83 label *label67
    84 sensor *tmp108 @unit @firstItem
 
   120 label *label23
   121 set :status3:text "Depositing..."
   122 label *label449
-    * write :status3:text processor2 ".status3"
+  123 write "Depositing..." processor2 ".status3"
   124 label *label450
   125 sensor *tmp117 @unit @firstItem
   126 jump *label80 notEqual *tmp117 :depositItems:item
 
   195 label *label99
   196 set :status3:text "Mining..."
   197 label *label451
-    * write :status3:text processor2 ".status3"
+  198 write "Mining..." processor2 ".status3"
   199 label *label452
   200 op add :mineOre:stop @second 10
   201 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    60 return :error*retaddr
    61 end
    62 label *label19
-    * set :status3:text "Moving..."
    63 label *label445
    64 write "Moving..." processor2 ".status3"
    65 label *label446
 
    75 return :moveTo*retaddr
    76 end
    77 label *label20
-    * set :status3:text "Moving..."
    78 label *label447
    79 write "Moving..." processor2 ".status3"
    80 label *label448
 
   116 return :moveToBlock*retaddr
   117 end
   118 label *label23
-    * set :status3:text "Depositing..."
   119 label *label449
   120 write "Depositing..." processor2 ".status3"
   121 label *label450
 
   190 label *label100
   191 label *label98
   192 label *label99
-    * set :status3:text "Mining..."
   193 label *label451
   194 write "Mining..." processor2 ".status3"
   195 label *label452

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    53 label *label58
    54 return :transportStatus*retaddr
    55 end
-    * label *label18
-    * set .ERROR :error:error
-    * stop
-    * label *label59
-    * return :error*retaddr
-    * end
    56 label *label19
    57 label *label445
    58 write "Moving..." processor2 ".status3"
 
   151 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   152 jump *label91 notEqual *tmp127 false
   153 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label93 (h:*label93)
-    * call *label18 *invalid :error*retval (m:*label93) (h:*label93)
-    * label *label93
+  154 label *label453
+  155 set .ERROR :error:error
+  156 stop
+  157 label *label454
   158 label *label91
   159 label *label92
   160 label *label90

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   152 jump *label91 notEqual *tmp127 false
   153 set :error:error "Cannot locate ore"
   154 label *label453
-    * set .ERROR :error:error
+  155 set .ERROR "Cannot locate ore"
   156 stop
   157 label *label454
   158 label *label91

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   150 label *label24
   151 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   152 jump *label91 notEqual *tmp127 false
-    * set :error:error "Cannot locate ore"
   153 label *label453
   154 set .ERROR "Cannot locate ore"
   155 stop

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
    97 label *label72
    98 return :dropAll*retaddr
    99 end
-    * label *label22
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label77 (h:*label77)
-    * call *label19 *invalid :moveTo*retval (m:*label77) (h:*label77)
-    * label *label77
-    * label *label76
-    * return :moveToBlock*retaddr
-    * end
   100 label *label23
   101 label *label449
   102 write "Depositing..." processor2 ".status3"
 
   105 jump *label80 notEqual *tmp117 :depositItems:item
   106 set :moveToBlock:block :depositItems:block
   107 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label82 (h:*label82)
-    * call *label22 *invalid :moveToBlock*retval (m:*label82) (h:*label82)
-    * label *label82
+  108 label *label455
+  109 sensor *tmp115 :moveToBlock:block @x
+  110 sensor *tmp116 :moveToBlock:block @y
+  111 set :moveTo:x *tmp115
+  112 set :moveTo:y *tmp116
+  113 set :moveTo:radius :moveToBlock:radius
+  114 setaddr :moveTo*retaddr *label456 (h:*label456)
+  115 call *label19 *invalid :moveTo*retval (m:*label456) (h:*label456)
+  116 label *label456
+  117 label *label457
   118 sensor :depositItems:cap :depositItems:block @itemCapacity
   119 label *label83
   120 ucontrol itemDrop :depositItems:block 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   106 set :moveToBlock:block :depositItems:block
   107 set :moveToBlock:radius 6
   108 label *label455
-    * sensor *tmp115 :moveToBlock:block @x
-    * sensor *tmp116 :moveToBlock:block @y
+  109 sensor *tmp115 :depositItems:block @x
+  110 sensor *tmp116 :depositItems:block @y
   111 set :moveTo:x *tmp115
   112 set :moveTo:y *tmp116
-    * set :moveTo:radius :moveToBlock:radius
+  113 set :moveTo:radius 6
   114 setaddr :moveTo*retaddr *label456 (h:*label456)
   115 call *label19 *invalid :moveTo*retval (m:*label456) (h:*label456)
   116 label *label456

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   103 label *label450
   104 sensor *tmp117 @unit @firstItem
   105 jump *label80 notEqual *tmp117 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   106 label *label455
   107 sensor *tmp115 :depositItems:block @x
   108 sensor *tmp116 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   140 label *label78
   141 return :depositItems*retaddr
   142 end
-    * label *label24
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
-    * jump *label91 notEqual *tmp127 false
-    * label *label453
-    * set .ERROR "Cannot locate ore"
-    * stop
-    * label *label454
-    * label *label91
-    * label *label92
-    * label *label90
-    * return :locateOre*retaddr
-    * end
   143 label *label25
   144 op min :mineOre:amount :mineOre:amount 28
   145 set :transportStatus:target :mineOre:amount
 
   148 call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
   149 label *label95
   150 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label96 (h:*label96)
-    * call *label24 *invalid :locateOre*retval (m:*label96) (h:*label96)
-    * label *label96
+  151 label *label458
+  152 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  153 jump *label461 notEqual *tmp127 false
+  154 label *label459
+  155 set .ERROR "Cannot locate ore"
+  156 stop
+  157 label *label460
+  158 label *label461
+  159 label *label462
+  160 label *label463
   161 set :mineOre:x :locateOre:x
   162 set :mineOre:y :locateOre:y
   163 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   149 label *label95
   150 set :locateOre:ore :mineOre:ore
   151 label *label458
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+  152 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   153 jump *label461 notEqual *tmp127 false
   154 label *label459
   155 set .ERROR "Cannot locate ore"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   147 setaddr :transportStatus*retaddr *label95 (h:*label95)
   148 call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
   149 label *label95
-    * set :locateOre:ore :mineOre:ore
   150 label *label458
   151 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   152 jump *label461 notEqual *tmp127 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 (-4 instructions):
 
   314 label *label132
   315 return :supplyBlock*retaddr
   316 end
-    * label *label30
-    * sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
-    * op min :supplyBlockFromCore:cap *tmp169 28
-    * set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label138 (h:*label138)
-    * call *label17 *invalid :transportStatus*retval (m:*label138) (h:*label138)
-    * label *label138
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label139 (h:*label139)
-    * call *label15 *invalid :status2*retval (m:*label139) (h:*label139)
-    * label *label139
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label140 (h:*label140)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label140) (h:*label140)
-    * label *label140
-    * setaddr :dropAll*retaddr *label141 (h:*label141)
-    * call *label21 *invalid :dropAll*retval (m:*label141) (h:*label141)
-    * label *label141
-    * label *label142
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp174 *tmp172 *tmp173
-    * jump *label145 equal *tmp174 false
-    * ucontrol itemDrop @air 1000
-    * label *label145
-    * label *label146
-    * label *label143
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
-    * op land *tmp179 *tmp177 *tmp178
-    * jump *label142 notEqual *tmp179 false
-    * label *label144
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label147 (h:*label147)
-    * call *label23 *invalid :depositItems*retval (m:*label147) (h:*label147)
-    * label *label147
-    * label *label137
-    * return :supplyBlockFromCore*retaddr
-    * end
   317 label *label32
   318 read *tmp181 :unpackCfg:cfg 1
   319 op sub *tmp182 *tmp181 74
 
   363 label *label158
   364 set :supplyBlockFromCore:target .thoriumGenerator
   365 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label161 (h:*label161)
-    * call *label30 *invalid :supplyBlockFromCore*retval (m:*label161) (h:*label161)
-    * label *label161
+  366 label *label464
+  367 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
+  368 op min :supplyBlockFromCore:cap *tmp169 28
+  369 set :transportStatus:target :supplyBlockFromCore:cap
+  370 set :transportStatus:item :supplyBlockFromCore:item
+  371 setaddr :transportStatus*retaddr *label465 (h:*label465)
+  372 call *label17 *invalid :transportStatus*retval (m:*label465) (h:*label465)
+  373 label *label465
+  374 set :status2:text "Transferring "
+  375 set :status2:item :supplyBlockFromCore:item
+  376 set :status2:block :supplyBlockFromCore:target
+  377 setaddr :status2*retaddr *label466 (h:*label466)
+  378 call *label15 *invalid :status2*retval (m:*label466) (h:*label466)
+  379 label *label466
+  380 set :moveToEmpty:x .coreX
+  381 set :moveToEmpty:y .coreY
+  382 setaddr :moveToEmpty*retaddr *label467 (h:*label467)
+  383 call *label20 *invalid :moveToEmpty*retval (m:*label467) (h:*label467)
+  384 label *label467
+  385 setaddr :dropAll*retaddr *label468 (h:*label468)
+  386 call *label21 *invalid :dropAll*retval (m:*label468) (h:*label468)
+  387 label *label468
+  388 label *label469
+  389 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  390 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  391 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
+  392 op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  393 op land *tmp174 *tmp172 *tmp173
+  394 jump *label470 equal *tmp174 false
+  395 ucontrol itemDrop @air 1000
+  396 label *label470
+  397 label *label471
+  398 label *label472
+  399 sensor *tmp176 @unit :supplyBlockFromCore:item
+  400 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
+  401 sensor *tmp178 .core :supplyBlockFromCore:item
+  402 op land *tmp179 *tmp177 *tmp178
+  403 jump *label469 notEqual *tmp179 false
+  404 label *label473
+  405 set :depositItems:block :supplyBlockFromCore:target
+  406 set :depositItems:item :supplyBlockFromCore:item
+  407 setaddr :depositItems*retaddr *label474 (h:*label474)
+  408 call *label23 *invalid :depositItems*retval (m:*label474) (h:*label474)
+  409 label *label474
+  410 label *label475
   411 label *label159
   412 label *label156
   413 label *label157

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   367 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   368 op min :supplyBlockFromCore:cap *tmp169 28
   369 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
+  370 set :transportStatus:item @coal
   371 setaddr :transportStatus*retaddr *label465 (h:*label465)
   372 call *label17 *invalid :transportStatus*retval (m:*label465) (h:*label465)
   373 label *label465

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
    61 label *label62
    62 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
    63 jump *label64 notEqual *tmp105 false
+   64 label *label476
    65 ucontrol approach :moveTo:x :moveTo:y *tmp107
    66 label *label63
-    * jump *label62 always
+   67 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+   68 jump *label476 equal *tmp105 false
    69 label *label64
    70 label *label60
    71 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
    92 label *label73
    93 sensor *tmp113 @unit @firstItem
    94 jump *label75 equal *tmp113 null
+   95 label *label477
    96 ucontrol itemDrop @air 1000
    97 label *label74
-    * jump *label73 always
+   98 sensor *tmp113 @unit @firstItem
+   99 jump *label477 notEqual *tmp113 null
   100 label *label75
   101 label *label72
   102 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   131 label *label86
   132 sensor *tmp125 @unit @firstItem
   133 jump *label88 equal *tmp125 null
+  134 label *label478
   135 ucontrol itemDrop @air 1000
   136 label *label87
-    * jump *label86 always
+  137 sensor *tmp125 @unit @firstItem
+  138 jump *label478 notEqual *tmp125 null
   139 label *label88
   140 label *label81
   141 set :transportStatus:target 0

Modifications by Replicate loop condition at BlockBuilder.mnd:425:9 (+1 instructions):
 
  1215 label *label368
  1216 read *tmp50 processor3 ".locations"
  1217 jump *label370 greaterThanEq :buildTitaniumDrills:current *tmp50
+ 1218 label *label479
  1219 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
  1220 op add *tmp416 :buildTitaniumDrills:index 1
  1221 read :buildTitaniumDrills:size bank1 *tmp416
 
  1289 label *label372
  1290 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
  1291 label *label369
-    * jump *label368 always
+ 1292 read *tmp50 processor3 ".locations"
+ 1293 jump *label479 lessThan :buildTitaniumDrills:current *tmp50
  1294 label *label370
  1295 jump *label380 lessThan :buildTitaniumDrills:tiles 10
  1296 jump *label367 always

Modifications by Inline function call at Actions.mnd:88:5:
 
   140 label *label81
   141 set :transportStatus:target 0
   142 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label89 (h:*label89)
-    * call *label17 *invalid :transportStatus*retval (m:*label89) (h:*label89)
-    * label *label89
+  143 label *label480
+  144 write :transportStatus:target processor2 ".transportTarget"
+  145 write :transportStatus:item processor2 ".transportItem"
+  146 label *label481
   147 label *label78
   148 return :depositItems*retaddr
   149 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   141 set :transportStatus:target 0
   142 set :transportStatus:item null
   143 label *label480
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  144 write 0 processor2 ".transportTarget"
+  145 write null processor2 ".transportItem"
   146 label *label481
   147 label *label78
   148 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   138 jump *label478 notEqual *tmp125 null
   139 label *label88
   140 label *label81
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   141 label *label480
   142 write 0 processor2 ".transportTarget"
   143 write null processor2 ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
    47 label *label56
    48 return :status2*retaddr
    49 end
-    * label *label17
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
-    * label *label58
-    * return :transportStatus*retaddr
-    * end
    50 label *label19
    51 label *label445
    52 write "Moving..." processor2 ".status3"
 
   143 op min :mineOre:amount :mineOre:amount 28
   144 set :transportStatus:target :mineOre:amount
   145 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label95 (h:*label95)
-    * call *label17 *invalid :transportStatus*retval (m:*label95) (h:*label95)
-    * label *label95
+  146 label *label482
+  147 write :transportStatus:target processor2 ".transportTarget"
+  148 write :transportStatus:item processor2 ".transportItem"
+  149 label *label483
   150 label *label458
   151 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
   152 jump *label461 notEqual *tmp127 false
 
   248 sensor *tmp151 :fetchBlock:block @itemCapacity
   249 op min :transportStatus:target *tmp151 28
   250 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label122 (h:*label122)
-    * call *label17 *invalid :transportStatus*retval (m:*label122) (h:*label122)
-    * label *label122
+  251 label *label484
+  252 write :transportStatus:target processor2 ".transportTarget"
+  253 write :transportStatus:item processor2 ".transportItem"
+  254 label *label485
   255 set :status2:text "Fetching "
   256 set :status2:item :fetchBlock:item
   257 set :status2:block :fetchBlock:block
 
   369 op min :supplyBlockFromCore:cap *tmp169 28
   370 set :transportStatus:target :supplyBlockFromCore:cap
   371 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label465 (h:*label465)
-    * call *label17 *invalid :transportStatus*retval (m:*label465) (h:*label465)
-    * label *label465
+  372 label *label486
+  373 write :transportStatus:target processor2 ".transportTarget"
+  374 write :transportStatus:item processor2 ".transportItem"
+  375 label *label487
   376 set :status2:text "Transferring "
   377 set :status2:item :supplyBlockFromCore:item
   378 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   144 set :transportStatus:target :mineOre:amount
   145 set :transportStatus:item :mineOre:ore
   146 label *label482
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  147 write :mineOre:amount processor2 ".transportTarget"
+  148 write :mineOre:ore processor2 ".transportItem"
   149 label *label483
   150 label *label458
   151 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
 
   250 set :transportStatus:item :fetchBlock:item
   251 label *label484
   252 write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  253 write :fetchBlock:item processor2 ".transportItem"
   254 label *label485
   255 set :status2:text "Fetching "
   256 set :status2:item :fetchBlock:item
 
   370 set :transportStatus:target :supplyBlockFromCore:cap
   371 set :transportStatus:item @coal
   372 label *label486
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  373 write :supplyBlockFromCore:cap processor2 ".transportTarget"
+  374 write @coal processor2 ".transportItem"
   375 label *label487
   376 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
+  377 set :status2:item @coal
   378 set :status2:block :supplyBlockFromCore:target
   379 setaddr :status2*retaddr *label466 (h:*label466)
   380 call *label15 *invalid :status2*retval (m:*label466) (h:*label466)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   142 label *label25
   143 op min :mineOre:amount :mineOre:amount 28
   144 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   145 label *label482
   146 write :mineOre:amount processor2 ".transportTarget"
   147 write :mineOre:ore processor2 ".transportItem"
 
   246 label *label28
   247 sensor *tmp151 :fetchBlock:block @itemCapacity
   248 op min :transportStatus:target *tmp151 28
-    * set :transportStatus:item :fetchBlock:item
   249 label *label484
   250 write :transportStatus:target processor2 ".transportTarget"
   251 write :fetchBlock:item processor2 ".transportItem"
 
   366 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   367 op min :supplyBlockFromCore:cap *tmp169 28
   368 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item @coal
   369 label *label486
   370 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   371 write @coal processor2 ".transportItem"

Modifications by Inline function 'titaniumDrillScore' defined at BlockBuilder.mnd:373:1 (+20 instructions):
 
  1080 set :buildFirstTitaniumDrillAt*finished true
  1081 jump *label54 always
  1082 end
-    * label *label44
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
-    * jump *label341 always
-    * label *label341
-    * jump *label342 notEqual :getFloor:floor @ore-titanium
-    * label *label343
-    * op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * jump *label340 always
-    * label *label342
-    * jump *label345 equal :getFloor:floor @ore-copper
-    * jump *label345 equal :getFloor:floor @ore-lead
-    * jump *label345 equal :getFloor:floor @ore-scrap
-    * jump *label344 notEqual :getFloor:floor @ore-coal
-    * label *label345
-    * op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * label *label344
-    * label *label340
-    * label *label339
-    * return :titaniumDrillScore*retaddr
-    * end
  1083 label *label45
  1084 jump *label347 greaterThanEq :buildTitaniumDrill:count 6
  1085 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
 
  1098 set :titaniumDrillScore:y *tmp391
  1099 set :titaniumDrillScore:positive .positive
  1100 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label353 (h:*label353)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label353) (h:*label353)
-    * label *label353
+ 1101 label *label488
+ 1102 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1103 jump *label489 always
+ 1104 label *label489
+ 1105 jump *label491 notEqual :getFloor:floor @ore-titanium
+ 1106 label *label490
+ 1107 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1108 jump *label494 always
+ 1109 label *label491
+ 1110 jump *label492 equal :getFloor:floor @ore-copper
+ 1111 jump *label492 equal :getFloor:floor @ore-lead
+ 1112 jump *label492 equal :getFloor:floor @ore-scrap
+ 1113 jump *label493 notEqual :getFloor:floor @ore-coal
+ 1114 label *label492
+ 1115 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1116 label *label493
+ 1117 label *label494
+ 1118 label *label495
  1119 set .positive :titaniumDrillScore:positive
  1120 set .negative :titaniumDrillScore:negative
  1121 op sub *tmp393 :buildTitaniumDrill:x 0.5
 
  1124 set :titaniumDrillScore:y *tmp394
  1125 set :titaniumDrillScore:positive .positive
  1126 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label354 (h:*label354)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label354) (h:*label354)
-    * label *label354
+ 1127 label *label496
+ 1128 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1129 jump *label497 always
+ 1130 label *label497
+ 1131 jump *label499 notEqual :getFloor:floor @ore-titanium
+ 1132 label *label498
+ 1133 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1134 jump *label502 always
+ 1135 label *label499
+ 1136 jump *label500 equal :getFloor:floor @ore-copper
+ 1137 jump *label500 equal :getFloor:floor @ore-lead
+ 1138 jump *label500 equal :getFloor:floor @ore-scrap
+ 1139 jump *label501 notEqual :getFloor:floor @ore-coal
+ 1140 label *label500
+ 1141 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1142 label *label501
+ 1143 label *label502
+ 1144 label *label503
  1145 set .positive :titaniumDrillScore:positive
  1146 set .negative :titaniumDrillScore:negative
  1147 op add *tmp396 :buildTitaniumDrill:x 0.5
 
  1150 set :titaniumDrillScore:y *tmp397
  1151 set :titaniumDrillScore:positive .positive
  1152 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label355 (h:*label355)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label355) (h:*label355)
-    * label *label355
+ 1153 label *label504
+ 1154 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1155 jump *label505 always
+ 1156 label *label505
+ 1157 jump *label507 notEqual :getFloor:floor @ore-titanium
+ 1158 label *label506
+ 1159 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1160 jump *label510 always
+ 1161 label *label507
+ 1162 jump *label508 equal :getFloor:floor @ore-copper
+ 1163 jump *label508 equal :getFloor:floor @ore-lead
+ 1164 jump *label508 equal :getFloor:floor @ore-scrap
+ 1165 jump *label509 notEqual :getFloor:floor @ore-coal
+ 1166 label *label508
+ 1167 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1168 label *label509
+ 1169 label *label510
+ 1170 label *label511
  1171 set .positive :titaniumDrillScore:positive
  1172 set .negative :titaniumDrillScore:negative
  1173 op add *tmp399 :buildTitaniumDrill:x 0.5
 
  1176 set :titaniumDrillScore:y *tmp400
  1177 set :titaniumDrillScore:positive .positive
  1178 set :titaniumDrillScore:negative .negative
-    * setaddr :titaniumDrillScore*retaddr *label356 (h:*label356)
-    * call *label44 *invalid :titaniumDrillScore*retval (m:*label356) (h:*label356)
-    * label *label356
+ 1179 label *label512
+ 1180 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1181 jump *label513 always
+ 1182 label *label513
+ 1183 jump *label515 notEqual :getFloor:floor @ore-titanium
+ 1184 label *label514
+ 1185 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
+ 1186 jump *label518 always
+ 1187 label *label515
+ 1188 jump *label516 equal :getFloor:floor @ore-copper
+ 1189 jump *label516 equal :getFloor:floor @ore-lead
+ 1190 jump *label516 equal :getFloor:floor @ore-scrap
+ 1191 jump *label517 notEqual :getFloor:floor @ore-coal
+ 1192 label *label516
+ 1193 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
+ 1194 label *label517
+ 1195 label *label518
+ 1196 label *label519
  1197 set .positive :titaniumDrillScore:positive
  1198 set .negative :titaniumDrillScore:negative
  1199 op greaterThan *tmp402 .positive .negative

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1099 set :titaniumDrillScore:positive .positive
  1100 set :titaniumDrillScore:negative .negative
  1101 label *label488
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1102 ucontrol getBlock *tmp390 *tmp391 *tmp380 *tmp379 :getFloor:floor
  1103 jump *label489 always
  1104 label *label489
  1105 jump *label491 notEqual :getFloor:floor @ore-titanium
 
  1120 set .negative :titaniumDrillScore:negative
  1121 op sub *tmp393 :buildTitaniumDrill:x 0.5
  1122 op add *tmp394 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp393
+ 1123 set :titaniumDrillScore:x *tmp390
  1124 set :titaniumDrillScore:y *tmp394
  1125 set :titaniumDrillScore:positive .positive
  1126 set :titaniumDrillScore:negative .negative
  1127 label *label496
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1128 ucontrol getBlock *tmp393 *tmp394 *tmp380 *tmp379 :getFloor:floor
  1129 jump *label497 always
  1130 label *label497
  1131 jump *label499 notEqual :getFloor:floor @ore-titanium
 
  1147 op add *tmp396 :buildTitaniumDrill:x 0.5
  1148 op sub *tmp397 :buildTitaniumDrill:y 0.5
  1149 set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp397
+ 1150 set :titaniumDrillScore:y *tmp391
  1151 set :titaniumDrillScore:positive .positive
  1152 set :titaniumDrillScore:negative .negative
  1153 label *label504
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1154 ucontrol getBlock *tmp396 *tmp397 *tmp380 *tmp379 :getFloor:floor
  1155 jump *label505 always
  1156 label *label505
  1157 jump *label507 notEqual :getFloor:floor @ore-titanium
 
  1172 set .negative :titaniumDrillScore:negative
  1173 op add *tmp399 :buildTitaniumDrill:x 0.5
  1174 op add *tmp400 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp399
-    * set :titaniumDrillScore:y *tmp400
+ 1175 set :titaniumDrillScore:x *tmp396
+ 1176 set :titaniumDrillScore:y *tmp394
  1177 set :titaniumDrillScore:positive .positive
  1178 set :titaniumDrillScore:negative .negative
  1179 label *label512
-    * ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y *tmp380 *tmp379 :getFloor:floor
+ 1180 ucontrol getBlock *tmp399 *tmp400 *tmp380 *tmp379 :getFloor:floor
  1181 jump *label513 always
  1182 label *label513
  1183 jump *label515 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1094 set .negative 0
  1095 op sub *tmp390 :buildTitaniumDrill:x 0.5
  1096 op sub *tmp391 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp390
-    * set :titaniumDrillScore:y *tmp391
  1097 set :titaniumDrillScore:positive .positive
  1098 set :titaniumDrillScore:negative .negative
  1099 label *label488
 
  1118 set .negative :titaniumDrillScore:negative
  1119 op sub *tmp393 :buildTitaniumDrill:x 0.5
  1120 op add *tmp394 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp390
-    * set :titaniumDrillScore:y *tmp394
  1121 set :titaniumDrillScore:positive .positive
  1122 set :titaniumDrillScore:negative .negative
  1123 label *label496
-    * ucontrol getBlock *tmp393 *tmp394 *tmp380 *tmp379 :getFloor:floor
+ 1124 ucontrol getBlock *tmp390 *tmp394 *tmp380 *tmp379 :getFloor:floor
  1125 jump *label497 always
  1126 label *label497
  1127 jump *label499 notEqual :getFloor:floor @ore-titanium
 
  1142 set .negative :titaniumDrillScore:negative
  1143 op add *tmp396 :buildTitaniumDrill:x 0.5
  1144 op sub *tmp397 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp391
  1145 set :titaniumDrillScore:positive .positive
  1146 set :titaniumDrillScore:negative .negative
  1147 label *label504
-    * ucontrol getBlock *tmp396 *tmp397 *tmp380 *tmp379 :getFloor:floor
+ 1148 ucontrol getBlock *tmp396 *tmp391 *tmp380 *tmp379 :getFloor:floor
  1149 jump *label505 always
  1150 label *label505
  1151 jump *label507 notEqual :getFloor:floor @ore-titanium
 
  1166 set .negative :titaniumDrillScore:negative
  1167 op add *tmp399 :buildTitaniumDrill:x 0.5
  1168 op add *tmp400 :buildTitaniumDrill:y 0.5
-    * set :titaniumDrillScore:x *tmp396
-    * set :titaniumDrillScore:y *tmp394
  1169 set :titaniumDrillScore:positive .positive
  1170 set :titaniumDrillScore:negative .negative
  1171 label *label512
-    * ucontrol getBlock *tmp399 *tmp400 *tmp380 *tmp379 :getFloor:floor
+ 1172 ucontrol getBlock *tmp396 *tmp394 *tmp380 *tmp379 :getFloor:floor
  1173 jump *label513 always
  1174 label *label513
  1175 jump *label515 notEqual :getFloor:floor @ore-titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-4 instructions):
 
  1116 label *label495
  1117 set .positive :titaniumDrillScore:positive
  1118 set .negative :titaniumDrillScore:negative
-    * op sub *tmp393 :buildTitaniumDrill:x 0.5
  1119 op add *tmp394 :buildTitaniumDrill:y 0.5
  1120 set :titaniumDrillScore:positive .positive
  1121 set :titaniumDrillScore:negative .negative
 
  1140 set .positive :titaniumDrillScore:positive
  1141 set .negative :titaniumDrillScore:negative
  1142 op add *tmp396 :buildTitaniumDrill:x 0.5
-    * op sub *tmp397 :buildTitaniumDrill:y 0.5
  1143 set :titaniumDrillScore:positive .positive
  1144 set :titaniumDrillScore:negative .negative
  1145 label *label504
 
  1162 label *label511
  1163 set .positive :titaniumDrillScore:positive
  1164 set .negative :titaniumDrillScore:negative
-    * op add *tmp399 :buildTitaniumDrill:x 0.5
-    * op add *tmp400 :buildTitaniumDrill:y 0.5
  1165 set :titaniumDrillScore:positive .positive
  1166 set :titaniumDrillScore:negative .negative
  1167 label *label512

Modifications by Inline function call at Actions.mnd:46:5 (+5 instructions):
 
  1086 set :moveTo:x :buildTitaniumDrill:x
  1087 set :moveTo:y :buildTitaniumDrill:y
  1088 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label352 (h:*label352)
-    * call *label19 *invalid :moveTo*retval (m:*label352) (h:*label352)
-    * label *label352
+ 1089 label *label520
+ 1090 label *label521
+ 1091 write "Moving..." processor2 ".status3"
+ 1092 label *label522
+ 1093 op sub *tmp107 :moveTo:radius 0.5
+ 1094 label *label523
+ 1095 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1096 jump *label526 notEqual *tmp105 false
+ 1097 label *label524
+ 1098 ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1099 label *label525
+ 1100 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1101 jump *label524 equal *tmp105 false
+ 1102 label *label526
+ 1103 label *label527
  1104 label *label351
  1105 set .positive 0
  1106 set .negative 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1090 label *label521
  1091 write "Moving..." processor2 ".status3"
  1092 label *label522
-    * op sub *tmp107 :moveTo:radius 0.5
+ 1093 op sub *tmp107 6 0.5
  1094 label *label523
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1095 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1096 jump *label526 notEqual *tmp105 false
  1097 label *label524
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+ 1098 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
  1099 label *label525
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+ 1100 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1101 jump *label524 equal *tmp105 false
  1102 label *label526
  1103 label *label527

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1083 label *label45
  1084 jump *label347 greaterThanEq :buildTitaniumDrill:count 6
  1085 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
-    * set :moveTo:x :buildTitaniumDrill:x
-    * set :moveTo:y :buildTitaniumDrill:y
-    * set :moveTo:radius 6
  1086 label *label520
  1087 label *label521
  1088 write "Moving..." processor2 ".status3"
  1089 label *label522
-    * op sub *tmp107 6 0.5
  1090 label *label523
  1091 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1092 jump *label526 notEqual *tmp105 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (+1 instructions):
 
    47 label *label56
    48 return :status2*retaddr
    49 end
-    * label *label19
-    * label *label445
-    * write "Moving..." processor2 ".status3"
-    * label *label446
-    * op sub *tmp107 :moveTo:radius 0.5
-    * label *label62
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label64 notEqual *tmp105 false
-    * label *label476
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
-    * label *label63
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
-    * jump *label476 equal *tmp105 false
-    * label *label64
-    * label *label60
-    * return :moveTo*retaddr
-    * end
    50 label *label20
    51 label *label447
    52 write "Moving..." processor2 ".status3"
 
    90 set :moveTo:x *tmp115
    91 set :moveTo:y *tmp116
    92 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label456 (h:*label456)
-    * call *label19 *invalid :moveTo*retval (m:*label456) (h:*label456)
-    * label *label456
+   93 label *label528
+   94 label *label529
+   95 write "Moving..." processor2 ".status3"
+   96 label *label530
+   97 op sub *tmp107 :moveTo:radius 0.5
+   98 label *label531
+   99 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  100 jump *label534 notEqual *tmp105 false
+  101 label *label532
+  102 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  103 label *label533
+  104 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  105 jump *label532 equal *tmp105 false
+  106 label *label534
+  107 label *label535
   108 label *label457
   109 sensor :depositItems:cap :depositItems:block @itemCapacity
   110 label *label83
 
   957 set :moveTo:x :buildBlockAtLocal:x
   958 set :moveTo:y :buildBlockAtLocal:y
   959 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label314 (h:*label314)
-    * call *label19 *invalid :moveTo*retval (m:*label314) (h:*label314)
-    * label *label314
+  960 label *label536
+  961 label *label537
+  962 write "Moving..." processor2 ".status3"
+  963 label *label538
+  964 op sub *tmp107 :moveTo:radius 0.5
+  965 label *label539
+  966 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  967 jump *label542 notEqual *tmp105 false
+  968 label *label540
+  969 ucontrol approach :moveTo:x :moveTo:y *tmp107
+  970 label *label541
+  971 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  972 jump *label540 equal *tmp105 false
+  973 label *label542
+  974 label *label543
   975 label *label313
   976 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp347
   977 jump *label315 equal :buildBlockAtLocal:building null

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    94 label *label529
    95 write "Moving..." processor2 ".status3"
    96 label *label530
-    * op sub *tmp107 :moveTo:radius 0.5
+   97 op sub *tmp107 6 0.5
    98 label *label531
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+   99 ucontrol within *tmp115 *tmp116 6 *tmp105
   100 jump *label534 notEqual *tmp105 false
   101 label *label532
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  102 ucontrol approach *tmp115 *tmp116 5.5
   103 label *label533
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  104 ucontrol within *tmp115 *tmp116 6 *tmp105
   105 jump *label532 equal *tmp105 false
   106 label *label534
   107 label *label535
 
   961 label *label537
   962 write "Moving..." processor2 ".status3"
   963 label *label538
-    * op sub *tmp107 :moveTo:radius 0.5
+  964 op sub *tmp107 6 0.5
   965 label *label539
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  966 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   967 jump *label542 notEqual *tmp105 false
   968 label *label540
-    * ucontrol approach :moveTo:x :moveTo:y *tmp107
+  969 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 5.5
   970 label *label541
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp105
+  971 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   972 jump *label540 equal *tmp105 false
   973 label *label542
   974 label *label543

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
    87 label *label455
    88 sensor *tmp115 :depositItems:block @x
    89 sensor *tmp116 :depositItems:block @y
-    * set :moveTo:x *tmp115
-    * set :moveTo:y *tmp116
-    * set :moveTo:radius 6
    90 label *label528
    91 label *label529
    92 write "Moving..." processor2 ".status3"
    93 label *label530
-    * op sub *tmp107 6 0.5
    94 label *label531
    95 ucontrol within *tmp115 *tmp116 6 *tmp105
    96 jump *label534 notEqual *tmp105 false
 
   950 jump *label54 always
   951 end
   952 label *label43
-    * set :moveTo:x :buildBlockAtLocal:x
-    * set :moveTo:y :buildBlockAtLocal:y
-    * set :moveTo:radius 6
   953 label *label536
   954 label *label537
   955 write "Moving..." processor2 ".status3"
   956 label *label538
-    * op sub *tmp107 6 0.5
   957 label *label539
   958 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   959 jump *label542 notEqual *tmp105 false

Modifications by Inline function call at Actions.mnd:145:5 (+1 instructions):
 
   244 set :status2:text "Fetching "
   245 set :status2:item :fetchBlock:item
   246 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label123 (h:*label123)
-    * call *label15 *invalid :status2*retval (m:*label123) (h:*label123)
-    * label *label123
+  247 label *label544
+  248 write :status2:text processor2 ".status2"
+  249 write :status2:item processor2 ".item2"
+  250 write :status2:block processor2 ".block2"
+  251 label *label545
   252 sensor *tmp153 :fetchBlock:block @x
   253 sensor *tmp154 :fetchBlock:block @y
   254 set :moveToEmpty:x *tmp153

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   245 set :status2:item :fetchBlock:item
   246 set :status2:block :fetchBlock:block
   247 label *label544
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  248 write "Fetching " processor2 ".status2"
+  249 write :fetchBlock:item processor2 ".item2"
+  250 write :fetchBlock:block processor2 ".block2"
   251 label *label545
   252 sensor *tmp153 :fetchBlock:block @x
   253 sensor *tmp154 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   241 write :transportStatus:target processor2 ".transportTarget"
   242 write :fetchBlock:item processor2 ".transportItem"
   243 label *label485
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   244 label *label544
   245 write "Fetching " processor2 ".status2"
   246 write :fetchBlock:item processor2 ".item2"

Modifications by Inline function call at Actions.mnd:139:5 (+1 instructions):
 
   222 set :status2:text "Mining "
   223 set :status2:item :mineOre.2:ore
   224 set :status2:block "core"
-    * setaddr :status2*retaddr *label119 (h:*label119)
-    * call *label15 *invalid :status2*retval (m:*label119) (h:*label119)
-    * label *label119
+  225 label *label546
+  226 write :status2:text processor2 ".status2"
+  227 write :status2:item processor2 ".item2"
+  228 write :status2:block processor2 ".block2"
+  229 label *label547
   230 set :mineOre:ore :mineOre.2:ore
   231 set :mineOre:amount 28
   232 set :mineOre:block .core

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   223 set :status2:item :mineOre.2:ore
   224 set :status2:block "core"
   225 label *label546
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  226 write "Mining " processor2 ".status2"
+  227 write :mineOre.2:ore processor2 ".item2"
+  228 write "core" processor2 ".block2"
   229 label *label547
   230 set :mineOre:ore :mineOre.2:ore
   231 set :mineOre:amount 28

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   219 return :mineOre.1*retaddr
   220 end
   221 label *label27
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.2:ore
-    * set :status2:block "core"
   222 label *label546
   223 write "Mining " processor2 ".status2"
   224 write :mineOre.2:ore processor2 ".item2"

Modifications by Inline function call at Actions.mnd:119:16 (+28 instructions):
 
   180 label *label107
   181 label *label108
   182 jump *label109 notEqual .noTarget false
-    * setaddr :targetMet*retaddr *label111 (h:*label111)
-    * call *label39 *invalid :targetMet*retval (m:*label111) (h:*label111)
-    * label *label111
+  183 label *label548
+  184 sensor *tmp298 .core @copper
+  185 jump *label549 greaterThanEq *tmp298 copper
+  186 set :targetMet*retval false
+  187 jump *label563 always
+  188 label *label549
+  189 label *label550
+  190 sensor *tmp301 .core @lead
+  191 jump *label551 greaterThanEq *tmp301 lead
+  192 set :targetMet*retval false
+  193 jump *label563 always
+  194 label *label551
+  195 label *label552
+  196 sensor *tmp304 .core @graphite
+  197 jump *label553 greaterThanEq *tmp304 graphite
+  198 set :targetMet*retval false
+  199 jump *label563 always
+  200 label *label553
+  201 label *label554
+  202 sensor *tmp307 .core @silicon
+  203 jump *label555 greaterThanEq *tmp307 silicon
+  204 set :targetMet*retval false
+  205 jump *label563 always
+  206 label *label555
+  207 label *label556
+  208 sensor *tmp310 .core @titanium
+  209 jump *label557 greaterThanEq *tmp310 titanium
+  210 set :targetMet*retval false
+  211 jump *label563 always
+  212 label *label557
+  213 label *label558
+  214 sensor *tmp313 .core @metaglass
+  215 jump *label559 greaterThanEq *tmp313 metaglass
+  216 set :targetMet*retval false
+  217 jump *label563 always
+  218 label *label559
+  219 label *label560
+  220 sensor *tmp316 .core @thorium
+  221 jump *label561 greaterThanEq *tmp316 thorium
+  222 set :targetMet*retval false
+  223 jump *label563 always
+  224 label *label561
+  225 label *label562
+  226 set :targetMet*retval true
+  227 jump *label563 always
+  228 label *label563
   229 jump *label112 equal :targetMet*retval false
   230 jump *label104 always
   231 label *label112

Modifications by Inline function call at Actions.mnd:147:5 (+3 instructions):
 
   295 setaddr :moveToEmpty*retaddr *label124 (h:*label124)
   296 call *label20 *invalid :moveToEmpty*retval (m:*label124) (h:*label124)
   297 label *label124
-    * setaddr :dropAll*retaddr *label125 (h:*label125)
-    * call *label21 *invalid :dropAll*retval (m:*label125) (h:*label125)
-    * label *label125
+  298 label *label564
+  299 label *label565
+  300 sensor *tmp113 @unit @firstItem
+  301 jump *label568 equal *tmp113 null
+  302 label *label566
+  303 ucontrol itemDrop @air 1000
+  304 label *label567
+  305 sensor *tmp113 @unit @firstItem
+  306 jump *label566 notEqual *tmp113 null
+  307 label *label568
+  308 label *label569
   309 label *label126
   310 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   311 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function call at Actions.mnd:146:5 (+5 instructions):
 
   292 sensor *tmp154 :fetchBlock:block @y
   293 set :moveToEmpty:x *tmp153
   294 set :moveToEmpty:y *tmp154
-    * setaddr :moveToEmpty*retaddr *label124 (h:*label124)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label124) (h:*label124)
-    * label *label124
+  295 label *label570
+  296 label *label571
+  297 write "Moving..." processor2 ".status3"
+  298 label *label572
+  299 label *label573
+  300 sensor *tmp108 @unit @firstItem
+  301 jump *label574 equal *tmp108 null
+  302 ucontrol itemDrop @air 1000
+  303 label *label574
+  304 label *label575
+  305 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  306 label *label576
+  307 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  308 jump *label573 equal *tmp111 false
+  309 label *label577
+  310 label *label578
   311 label *label564
   312 label *label565
   313 sensor *tmp113 @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   302 ucontrol itemDrop @air 1000
   303 label *label574
   304 label *label575
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  305 ucontrol approach *tmp153 *tmp154 5.5
   306 label *label576
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  307 ucontrol within *tmp153 *tmp154 6 *tmp111
   308 jump *label573 equal *tmp111 false
   309 label *label577
   310 label *label578

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   290 label *label545
   291 sensor *tmp153 :fetchBlock:block @x
   292 sensor *tmp154 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp153
-    * set :moveToEmpty:y *tmp154
   293 label *label570
   294 label *label571
   295 write "Moving..." processor2 ".status3"

Modifications by Inline function call at Actions.mnd:162:5 (+1 instructions):
 
   346 set :status2:text "Supplying "
   347 set :status2:item :supplyBlock:ore
   348 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label133 (h:*label133)
-    * call *label15 *invalid :status2*retval (m:*label133) (h:*label133)
-    * label *label133
+  349 label *label579
+  350 write :status2:text processor2 ".status2"
+  351 write :status2:item processor2 ".item2"
+  352 write :status2:block processor2 ".block2"
+  353 label *label580
   354 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   355 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   356 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   347 set :status2:item :supplyBlock:ore
   348 set :status2:block :supplyBlock:block
   349 label *label579
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  350 write "Supplying " processor2 ".status2"
+  351 write :supplyBlock:ore processor2 ".item2"
+  352 write :supplyBlock:block processor2 ".block2"
   353 label *label580
   354 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   355 sensor *tmp165 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   343 return :fetchBlock*retaddr
   344 end
   345 label *label29
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   346 label *label579
   347 write "Supplying " processor2 ".status2"
   348 write :supplyBlock:ore processor2 ".item2"

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+1 instructions):
 
    47 label *label56
    48 return :status2*retaddr
    49 end
-    * label *label20
-    * label *label447
-    * write "Moving..." processor2 ".status3"
-    * label *label448
-    * label *label67
-    * sensor *tmp108 @unit @firstItem
-    * jump *label70 equal *tmp108 null
-    * ucontrol itemDrop @air 1000
-    * label *label70
-    * label *label71
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label68
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
-    * jump *label67 equal *tmp111 false
-    * label *label69
-    * label *label65
-    * return :moveToEmpty*retaddr
-    * end
    50 label *label21
    51 label *label73
    52 sensor *tmp113 @unit @firstItem
 
   133 set :mineOre:y :locateOre:y
   134 set :moveToEmpty:x :locateOre:x
   135 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label97 (h:*label97)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label97) (h:*label97)
-    * label *label97
+  136 label *label581
+  137 label *label582
+  138 write "Moving..." processor2 ".status3"
+  139 label *label583
+  140 label *label584
+  141 sensor *tmp108 @unit @firstItem
+  142 jump *label585 equal *tmp108 null
+  143 ucontrol itemDrop @air 1000
+  144 label *label585
+  145 label *label586
+  146 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  147 label *label587
+  148 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  149 jump *label584 equal *tmp111 false
+  150 label *label588
+  151 label *label589
   152 sensor *tmp132 @unit @firstItem
   153 jump *label98 equal *tmp132 :mineOre:ore
   154 setaddr :dropAll*retaddr *label100 (h:*label100)
 
   423 label *label466
   424 set :moveToEmpty:x .coreX
   425 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label467 (h:*label467)
-    * call *label20 *invalid :moveToEmpty*retval (m:*label467) (h:*label467)
-    * label *label467
+  426 label *label590
+  427 label *label591
+  428 write "Moving..." processor2 ".status3"
+  429 label *label592
+  430 label *label593
+  431 sensor *tmp108 @unit @firstItem
+  432 jump *label594 equal *tmp108 null
+  433 ucontrol itemDrop @air 1000
+  434 label *label594
+  435 label *label595
+  436 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  437 label *label596
+  438 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  439 jump *label593 equal *tmp111 false
+  440 label *label597
+  441 label *label598
   442 setaddr :dropAll*retaddr *label468 (h:*label468)
   443 call *label21 *invalid :dropAll*retval (m:*label468) (h:*label468)
   444 label *label468

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   143 ucontrol itemDrop @air 1000
   144 label *label585
   145 label *label586
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  146 ucontrol approach :locateOre:x :locateOre:y 5.5
   147 label *label587
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  148 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
   149 jump *label584 equal *tmp111 false
   150 label *label588
   151 label *label589
 
   433 ucontrol itemDrop @air 1000
   434 label *label594
   435 label *label595
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  436 ucontrol approach .coreX .coreY 5.5
   437 label *label596
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp111
+  438 ucontrol within .coreX .coreY 6 *tmp111
   439 jump *label593 equal *tmp111 false
   440 label *label597
   441 label *label598

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   131 label *label463
   132 set :mineOre:x :locateOre:x
   133 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   134 label *label581
   135 label *label582
   136 write "Moving..." processor2 ".status3"
 
   419 setaddr :status2*retaddr *label466 (h:*label466)
   420 call *label15 *invalid :status2*retval (m:*label466) (h:*label466)
   421 label *label466
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   422 label *label590
   423 label *label591
   424 write "Moving..." processor2 ".status3"

Modifications by Replicate loop condition at BlockBuilder.mnd:232:5 (+2 instructions):
 
   846 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   847 label *label283
   848 jump *label282 notEqual :targetMet*retval false
+  849 label *label599
   850 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   851 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
   852 label *label284
   853 label *label281
-    * jump *label280 always
+  854 setaddr :targetMet*retaddr *label600 (h:*label600)
+  855 call *label39 *invalid :targetMet*retval (m:*label600) (h:*label600)
+  856 label *label600
+  857 jump *label599 equal :targetMet*retval false
   858 label *label282
   859 jump *label285 equal :meetTargetLocal:forBuild false
   860 write false AÕFFJS-micro-processor9 ":buildStart*finished"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-3 instructions):
 
    40 wait 1e12
    41 jump *label54 always
    42 end
-    * label *label15
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
-    * label *label56
-    * return :status2*retaddr
-    * end
    43 label *label21
    44 label *label73
    45 sensor *tmp113 @unit @firstItem
 
   235 set :status2:text "Mining "
   236 set :status2:item :mineOre.1:ore
   237 set :status2:block :mineOre.1:block
-    * setaddr :status2*retaddr *label116 (h:*label116)
-    * call *label15 *invalid :status2*retval (m:*label116) (h:*label116)
-    * label *label116
+  238 label *label601
+  239 write :status2:text processor2 ".status2"
+  240 write :status2:item processor2 ".item2"
+  241 write :status2:block processor2 ".block2"
+  242 label *label602
   243 set :mineOre:ore :mineOre.1:ore
   244 set :mineOre:amount 28
   245 set :mineOre:block :mineOre.1:block
 
   411 set :status2:text "Transferring "
   412 set :status2:item @coal
   413 set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label466 (h:*label466)
-    * call *label15 *invalid :status2*retval (m:*label466) (h:*label466)
-    * label *label466
+  414 label *label603
+  415 write :status2:text processor2 ".status2"
+  416 write :status2:item processor2 ".item2"
+  417 write :status2:block processor2 ".block2"
+  418 label *label604
   419 label *label590
   420 label *label591
   421 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   236 set :status2:item :mineOre.1:ore
   237 set :status2:block :mineOre.1:block
   238 label *label601
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  239 write "Mining " processor2 ".status2"
+  240 write :mineOre.1:ore processor2 ".item2"
+  241 write :mineOre.1:block processor2 ".block2"
   242 label *label602
   243 set :mineOre:ore :mineOre.1:ore
   244 set :mineOre:amount 28
 
   412 set :status2:item @coal
   413 set :status2:block :supplyBlockFromCore:target
   414 label *label603
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  415 write "Transferring " processor2 ".status2"
+  416 write @coal processor2 ".item2"
+  417 write :supplyBlockFromCore:target processor2 ".block2"
   418 label *label604
   419 label *label590
   420 label *label591

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   232 return :mineOre*retaddr
   233 end
   234 label *label26
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block :mineOre.1:block
   235 label *label601
   236 write "Mining " processor2 ".status2"
   237 write :mineOre.1:ore processor2 ".item2"
 
   405 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   406 write @coal processor2 ".transportItem"
   407 label *label487
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block :supplyBlockFromCore:target
   408 label *label603
   409 write "Transferring " processor2 ".status2"
   410 write @coal processor2 ".item2"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
    40 wait 1e12
    41 jump *label54 always
    42 end
-    * label *label21
-    * label *label73
-    * sensor *tmp113 @unit @firstItem
-    * jump *label75 equal *tmp113 null
-    * label *label477
-    * ucontrol itemDrop @air 1000
-    * label *label74
-    * sensor *tmp113 @unit @firstItem
-    * jump *label477 notEqual *tmp113 null
-    * label *label75
-    * label *label72
-    * return :dropAll*retaddr
-    * end
    43 label *label23
    44 label *label449
    45 write "Depositing..." processor2 ".status3"
 
   129 label *label589
   130 sensor *tmp132 @unit @firstItem
   131 jump *label98 equal *tmp132 :mineOre:ore
-    * setaddr :dropAll*retaddr *label100 (h:*label100)
-    * call *label21 *invalid :dropAll*retval (m:*label100) (h:*label100)
-    * label *label100
+  132 label *label605
+  133 label *label606
+  134 sensor *tmp113 @unit @firstItem
+  135 jump *label609 equal *tmp113 null
+  136 label *label607
+  137 ucontrol itemDrop @air 1000
+  138 label *label608
+  139 sensor *tmp113 @unit @firstItem
+  140 jump *label607 notEqual *tmp113 null
+  141 label *label609
+  142 label *label610
   143 label *label98
   144 label *label99
   145 label *label451
 
   421 jump *label593 equal *tmp111 false
   422 label *label597
   423 label *label598
-    * setaddr :dropAll*retaddr *label468 (h:*label468)
-    * call *label21 *invalid :dropAll*retval (m:*label468) (h:*label468)
-    * label *label468
+  424 label *label611
+  425 label *label612
+  426 sensor *tmp113 @unit @firstItem
+  427 jump *label615 equal *tmp113 null
+  428 label *label613
+  429 ucontrol itemDrop @air 1000
+  430 label *label614
+  431 sensor *tmp113 @unit @firstItem
+  432 jump *label613 notEqual *tmp113 null
+  433 label *label615
+  434 label *label616
   435 label *label469
   436 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
   437 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   155 jump *label104 always
   156 label *label105
   157 label *label106
-    * ucontrol mine :mineOre:x :mineOre:y
+  158 ucontrol mine :locateOre:x :locateOre:y
   159 jump *label107 lessThanEq @second :mineOre:stop
   160 jump *label104 always
   161 label *label107
 
   433 label *label615
   434 label *label616
   435 label *label469
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  436 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   437 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   438 op notEqual *tmp172 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp173 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  439 op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal
   440 op land *tmp174 *tmp172 *tmp173
   441 jump *label470 equal *tmp174 false
   442 ucontrol itemDrop @air 1000
   443 label *label470
   444 label *label471
   445 label *label472
-    * sensor *tmp176 @unit :supplyBlockFromCore:item
+  446 sensor *tmp176 @unit @coal
   447 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
-    * sensor *tmp178 .core :supplyBlockFromCore:item
+  448 sensor *tmp178 .core @coal
   449 op land *tmp179 *tmp177 *tmp178
   450 jump *label469 notEqual *tmp179 false
   451 label *label473
   452 set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  453 set :depositItems:item @coal
   454 setaddr :depositItems*retaddr *label474 (h:*label474)
   455 call *label23 *invalid :depositItems*retval (m:*label474) (h:*label474)
   456 label *label474

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   109 label *label461
   110 label *label462
   111 label *label463
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   112 label *label581
   113 label *label582
   114 write "Moving..." processor2 ".status3"
 
   389 jump *label159 always
   390 label *label158
   391 set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   392 label *label464
   393 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   394 op min :supplyBlockFromCore:cap *tmp169 28

Modifications by Replicate loop condition at BlockBuilder.mnd:424:5 (+1 instructions):
 
  1298 label *label365
  1299 read *tmp51 processor3 ".searchFinished"
  1300 jump *label367 notEqual *tmp51 false
+ 1301 label *label617
  1302 label *label368
  1303 read *tmp50 processor3 ".locations"
  1304 jump *label370 greaterThanEq :buildTitaniumDrills:current *tmp50
 
  1388 label *label382
  1389 label *label383
  1390 label *label366
-    * jump *label365 always
+ 1391 read *tmp51 processor3 ".searchFinished"
+ 1392 jump *label617 equal *tmp51 false
  1393 label *label367
  1394 label *label364
  1395 set :buildTitaniumDrills*finished true

Modifications by Replicate loop condition at BlockBuilder.mnd:238:9 (+2 instructions):
 
   859 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   860 label *label291
   861 jump *label290 notEqual :targetMet*retval false
+  862 label *label618
   863 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   864 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
   865 label *label292
   866 label *label289
-    * jump *label288 always
+  867 setaddr :targetMet*retaddr *label619 (h:*label619)
+  868 call *label39 *invalid :targetMet*retval (m:*label619) (h:*label619)
+  869 label *label619
+  870 jump *label618 equal :targetMet*retval false
   871 label *label290
   872 label *label285
   873 label *label286

Modifications by Inline function call at BlockBuilder.mnd:152:5 (+6 instructions):
 
   479 write "Phase 1: supplying base" processor2 ".status1"
   480 label *label418
   481 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label171 (h:*label171)
-    * call *label27 *invalid :mineOre.2*retval (m:*label171) (h:*label171)
-    * label *label171
+  482 label *label620
+  483 label *label621
+  484 write "Mining " processor2 ".status2"
+  485 write :mineOre.2:ore processor2 ".item2"
+  486 write "core" processor2 ".block2"
+  487 label *label622
+  488 set :mineOre:ore :mineOre.2:ore
+  489 set :mineOre:amount 28
+  490 set :mineOre:block .core
+  491 setaddr :mineOre*retaddr *label623 (h:*label623)
+  492 call *label25 *invalid :mineOre*retval (m:*label623) (h:*label623)
+  493 label *label623
+  494 label *label624
   495 label *label169
   496 jump *label168 always
   497 label *label167

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   482 label *label620
   483 label *label621
   484 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  485 write @coal processor2 ".item2"
   486 write "core" processor2 ".block2"
   487 label *label622
-    * set :mineOre:ore :mineOre.2:ore
+  488 set :mineOre:ore @coal
   489 set :mineOre:amount 28
   490 set :mineOre:block .core
   491 setaddr :mineOre*retaddr *label623 (h:*label623)

Modifications by Inline function call at Actions.mnd:157:5 (+23 instructions):
 
   314 label *label128
   315 set :depositItems:block .core
   316 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label131 (h:*label131)
-    * call *label23 *invalid :depositItems*retval (m:*label131) (h:*label131)
-    * label *label131
+  317 label *label625
+  318 label *label626
+  319 write "Depositing..." processor2 ".status3"
+  320 label *label627
+  321 sensor *tmp117 @unit @firstItem
+  322 jump *label641 notEqual *tmp117 :depositItems:item
+  323 label *label628
+  324 sensor *tmp115 :depositItems:block @x
+  325 sensor *tmp116 :depositItems:block @y
+  326 label *label629
+  327 label *label630
+  328 write "Moving..." processor2 ".status3"
+  329 label *label631
+  330 label *label632
+  331 ucontrol within *tmp115 *tmp116 6 *tmp105
+  332 jump *label635 notEqual *tmp105 false
+  333 label *label633
+  334 ucontrol approach *tmp115 *tmp116 5.5
+  335 label *label634
+  336 ucontrol within *tmp115 *tmp116 6 *tmp105
+  337 jump *label633 equal *tmp105 false
+  338 label *label635
+  339 label *label636
+  340 label *label637
+  341 sensor :depositItems:cap :depositItems:block @itemCapacity
+  342 label *label638
+  343 ucontrol itemDrop :depositItems:block 28
+  344 label *label639
+  345 sensor *tmp121 @unit @firstItem
+  346 op mul *tmp122 *tmp121 :depositItems:cap
+  347 sensor *tmp123 :depositItems:block :depositItems:item
+  348 jump *label638 greaterThan *tmp122 *tmp123
+  349 label *label640
+  350 jump *label646 always
+  351 label *label641
+  352 label *label642
+  353 sensor *tmp125 @unit @firstItem
+  354 jump *label645 equal *tmp125 null
+  355 label *label643
+  356 ucontrol itemDrop @air 1000
+  357 label *label644
+  358 sensor *tmp125 @unit @firstItem
+  359 jump *label643 notEqual *tmp125 null
+  360 label *label645
+  361 label *label646
+  362 label *label647
+  363 write 0 processor2 ".transportTarget"
+  364 write null processor2 ".transportItem"
+  365 label *label648
+  366 label *label649
   367 label *label121
   368 return :fetchBlock*retaddr
   369 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   319 write "Depositing..." processor2 ".status3"
   320 label *label627
   321 sensor *tmp117 @unit @firstItem
-    * jump *label641 notEqual *tmp117 :depositItems:item
+  322 jump *label641 notEqual *tmp117 :fetchBlock:item
   323 label *label628
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  324 sensor *tmp115 .core @x
+  325 sensor *tmp116 .core @y
   326 label *label629
   327 label *label630
   328 write "Moving..." processor2 ".status3"
 
   338 label *label635
   339 label *label636
   340 label *label637
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  341 sensor :depositItems:cap .core @itemCapacity
   342 label *label638
-    * ucontrol itemDrop :depositItems:block 28
+  343 ucontrol itemDrop .core 28
   344 label *label639
   345 sensor *tmp121 @unit @firstItem
   346 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  347 sensor *tmp123 .core :fetchBlock:item
   348 jump *label638 greaterThan *tmp122 *tmp123
   349 label *label640
   350 jump *label646 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   312 op land *tmp163 *tmp161 *tmp162
   313 jump *label126 notEqual *tmp163 false
   314 label *label128
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   315 label *label625
   316 label *label626
   317 write "Depositing..." processor2 ".status3"

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+19 instructions):
 
    40 wait 1e12
    41 jump *label54 always
    42 end
-    * label *label23
-    * label *label449
-    * write "Depositing..." processor2 ".status3"
-    * label *label450
-    * sensor *tmp117 @unit @firstItem
-    * jump *label80 notEqual *tmp117 :depositItems:item
-    * label *label455
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
-    * label *label528
-    * label *label529
-    * write "Moving..." processor2 ".status3"
-    * label *label530
-    * label *label531
-    * ucontrol within *tmp115 *tmp116 6 *tmp105
-    * jump *label534 notEqual *tmp105 false
-    * label *label532
-    * ucontrol approach *tmp115 *tmp116 5.5
-    * label *label533
-    * ucontrol within *tmp115 *tmp116 6 *tmp105
-    * jump *label532 equal *tmp105 false
-    * label *label534
-    * label *label535
-    * label *label457
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label83
-    * ucontrol itemDrop :depositItems:block 28
-    * label *label84
-    * sensor *tmp121 @unit @firstItem
-    * op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
-    * jump *label83 greaterThan *tmp122 *tmp123
-    * label *label85
-    * jump *label81 always
-    * label *label80
-    * label *label86
-    * sensor *tmp125 @unit @firstItem
-    * jump *label88 equal *tmp125 null
-    * label *label478
-    * ucontrol itemDrop @air 1000
-    * label *label87
-    * sensor *tmp125 @unit @firstItem
-    * jump *label478 notEqual *tmp125 null
-    * label *label88
-    * label *label81
-    * label *label480
-    * write 0 processor2 ".transportTarget"
-    * write null processor2 ".transportItem"
-    * label *label481
-    * label *label78
-    * return :depositItems*retaddr
-    * end
    43 label *label25
    44 op min :mineOre:amount :mineOre:amount 28
    45 set :transportStatus:target :mineOre:amount
 
   166 ucontrol unbind
   167 set :depositItems:block :mineOre:block
   168 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label114 (h:*label114)
-    * call *label23 *invalid :depositItems*retval (m:*label114) (h:*label114)
-    * label *label114
+  169 label *label650
+  170 label *label651
+  171 write "Depositing..." processor2 ".status3"
+  172 label *label652
+  173 sensor *tmp117 @unit @firstItem
+  174 jump *label666 notEqual *tmp117 :depositItems:item
+  175 label *label653
+  176 sensor *tmp115 :depositItems:block @x
+  177 sensor *tmp116 :depositItems:block @y
+  178 label *label654
+  179 label *label655
+  180 write "Moving..." processor2 ".status3"
+  181 label *label656
+  182 label *label657
+  183 ucontrol within *tmp115 *tmp116 6 *tmp105
+  184 jump *label660 notEqual *tmp105 false
+  185 label *label658
+  186 ucontrol approach *tmp115 *tmp116 5.5
+  187 label *label659
+  188 ucontrol within *tmp115 *tmp116 6 *tmp105
+  189 jump *label658 equal *tmp105 false
+  190 label *label660
+  191 label *label661
+  192 label *label662
+  193 sensor :depositItems:cap :depositItems:block @itemCapacity
+  194 label *label663
+  195 ucontrol itemDrop :depositItems:block 28
+  196 label *label664
+  197 sensor *tmp121 @unit @firstItem
+  198 op mul *tmp122 *tmp121 :depositItems:cap
+  199 sensor *tmp123 :depositItems:block :depositItems:item
+  200 jump *label663 greaterThan *tmp122 *tmp123
+  201 label *label665
+  202 jump *label671 always
+  203 label *label666
+  204 label *label667
+  205 sensor *tmp125 @unit @firstItem
+  206 jump *label670 equal *tmp125 null
+  207 label *label668
+  208 ucontrol itemDrop @air 1000
+  209 label *label669
+  210 sensor *tmp125 @unit @firstItem
+  211 jump *label668 notEqual *tmp125 null
+  212 label *label670
+  213 label *label671
+  214 label *label672
+  215 write 0 processor2 ".transportTarget"
+  216 write null processor2 ".transportItem"
+  217 label *label673
+  218 label *label674
   219 label *label94
   220 return :mineOre*retaddr
   221 end
 
   488 label *label473
   489 set :depositItems:block :supplyBlockFromCore:target
   490 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label474 (h:*label474)
-    * call *label23 *invalid :depositItems*retval (m:*label474) (h:*label474)
-    * label *label474
+  491 label *label675
+  492 label *label676
+  493 write "Depositing..." processor2 ".status3"
+  494 label *label677
+  495 sensor *tmp117 @unit @firstItem
+  496 jump *label691 notEqual *tmp117 :depositItems:item
+  497 label *label678
+  498 sensor *tmp115 :depositItems:block @x
+  499 sensor *tmp116 :depositItems:block @y
+  500 label *label679
+  501 label *label680
+  502 write "Moving..." processor2 ".status3"
+  503 label *label681
+  504 label *label682
+  505 ucontrol within *tmp115 *tmp116 6 *tmp105
+  506 jump *label685 notEqual *tmp105 false
+  507 label *label683
+  508 ucontrol approach *tmp115 *tmp116 5.5
+  509 label *label684
+  510 ucontrol within *tmp115 *tmp116 6 *tmp105
+  511 jump *label683 equal *tmp105 false
+  512 label *label685
+  513 label *label686
+  514 label *label687
+  515 sensor :depositItems:cap :depositItems:block @itemCapacity
+  516 label *label688
+  517 ucontrol itemDrop :depositItems:block 28
+  518 label *label689
+  519 sensor *tmp121 @unit @firstItem
+  520 op mul *tmp122 *tmp121 :depositItems:cap
+  521 sensor *tmp123 :depositItems:block :depositItems:item
+  522 jump *label688 greaterThan *tmp122 *tmp123
+  523 label *label690
+  524 jump *label696 always
+  525 label *label691
+  526 label *label692
+  527 sensor *tmp125 @unit @firstItem
+  528 jump *label695 equal *tmp125 null
+  529 label *label693
+  530 ucontrol itemDrop @air 1000
+  531 label *label694
+  532 sensor *tmp125 @unit @firstItem
+  533 jump *label693 notEqual *tmp125 null
+  534 label *label695
+  535 label *label696
+  536 label *label697
+  537 write 0 processor2 ".transportTarget"
+  538 write null processor2 ".transportItem"
+  539 label *label698
+  540 label *label699
   541 label *label475
   542 label *label159
   543 label *label156

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    42 end
    43 label *label25
    44 op min :mineOre:amount :mineOre:amount 28
-    * set :transportStatus:target :mineOre:amount
    45 label *label482
    46 write :mineOre:amount processor2 ".transportTarget"
    47 write :mineOre:ore processor2 ".transportItem"
 
   170 write "Depositing..." processor2 ".status3"
   171 label *label652
   172 sensor *tmp117 @unit @firstItem
-    * jump *label666 notEqual *tmp117 :depositItems:item
+  173 jump *label666 notEqual *tmp117 :mineOre:ore
   174 label *label653
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  175 sensor *tmp115 :mineOre:block @x
+  176 sensor *tmp116 :mineOre:block @y
   177 label *label654
   178 label *label655
   179 write "Moving..." processor2 ".status3"
 
   189 label *label660
   190 label *label661
   191 label *label662
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  192 sensor :depositItems:cap :mineOre:block @itemCapacity
   193 label *label663
-    * ucontrol itemDrop :depositItems:block 28
+  194 ucontrol itemDrop :mineOre:block 28
   195 label *label664
   196 sensor *tmp121 @unit @firstItem
   197 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  198 sensor *tmp123 :mineOre:block :mineOre:ore
   199 jump *label663 greaterThan *tmp122 *tmp123
   200 label *label665
   201 jump *label671 always
 
   492 write "Depositing..." processor2 ".status3"
   493 label *label677
   494 sensor *tmp117 @unit @firstItem
-    * jump *label691 notEqual *tmp117 :depositItems:item
+  495 jump *label691 notEqual *tmp117 @coal
   496 label *label678
-    * sensor *tmp115 :depositItems:block @x
-    * sensor *tmp116 :depositItems:block @y
+  497 sensor *tmp115 :supplyBlockFromCore:target @x
+  498 sensor *tmp116 :supplyBlockFromCore:target @y
   499 label *label679
   500 label *label680
   501 write "Moving..." processor2 ".status3"
 
   511 label *label685
   512 label *label686
   513 label *label687
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  514 sensor :depositItems:cap :supplyBlockFromCore:target @itemCapacity
   515 label *label688
-    * ucontrol itemDrop :depositItems:block 28
+  516 ucontrol itemDrop :supplyBlockFromCore:target 28
   517 label *label689
   518 sensor *tmp121 @unit @firstItem
   519 op mul *tmp122 *tmp121 :depositItems:cap
-    * sensor *tmp123 :depositItems:block :depositItems:item
+  520 sensor *tmp123 :supplyBlockFromCore:target @coal
   521 jump *label688 greaterThan *tmp122 *tmp123
   522 label *label690
   523 jump *label696 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   163 jump *label102 lessThan *tmp146 :mineOre:amount
   164 label *label104
   165 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
   166 label *label650
   167 label *label651
   168 write "Depositing..." processor2 ".status3"
 
   483 op land *tmp179 *tmp177 *tmp178
   484 jump *label469 notEqual *tmp179 false
   485 label *label473
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item @coal
   486 label *label675
   487 label *label676
   488 write "Depositing..." processor2 ".status3"

Modifications by Inline function call at BlockBuilder.mnd:161:17 (+10 instructions):
 
   420 jump *label158 greaterThanEq *tmp217 50
   421 set :supplyBlock:block .thoriumGenerator
   422 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label160 (h:*label160)
-    * call *label29 *invalid :supplyBlock*retval (m:*label160) (h:*label160)
-    * label *label160
+  423 label *label700
+  424 label *label701
+  425 write "Supplying " processor2 ".status2"
+  426 write :supplyBlock:ore processor2 ".item2"
+  427 write :supplyBlock:block processor2 ".block2"
+  428 label *label702
+  429 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  430 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  431 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  432 jump *label704 lessThanEq :supplyBlock:missing 0
+  433 set :mineOre:ore :supplyBlock:ore
+  434 set :mineOre:amount :supplyBlock:blockCapacity
+  435 set :mineOre:block :supplyBlock:block
+  436 setaddr :mineOre*retaddr *label703 (h:*label703)
+  437 call *label25 *invalid :mineOre*retval (m:*label703) (h:*label703)
+  438 label *label703
+  439 label *label704
+  440 label *label705
+  441 label *label706
   442 jump *label159 always
   443 label *label158
   444 set :supplyBlockFromCore:target .thoriumGenerator

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   423 label *label700
   424 label *label701
   425 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  426 write @coal processor2 ".item2"
   427 write :supplyBlock:block processor2 ".block2"
   428 label *label702
   429 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  430 sensor *tmp165 :supplyBlock:block @coal
   431 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   432 jump *label704 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  433 set :mineOre:ore @coal
   434 set :mineOre:amount :supplyBlock:blockCapacity
   435 set :mineOre:block :supplyBlock:block
   436 setaddr :mineOre*retaddr *label703 (h:*label703)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-10 instructions):
 
   685 sensor *tmp255 .core @titanium
   686 op sub *tmp256 titanium *tmp255
   687 op min *tmp254 5 *tmp256
-    * jump *label204 always
   688 label *label204
   689 sensor *tmp258 .titaniumDrill @titanium
   690 jump *label205 greaterThanEq *tmp258 *tmp254
 
  1048 write false AÕFFJS-micro-processor9 ":buildStop*finished"
  1049 write 2 AÕFFJS-micro-processor9 "@counter"
  1050 set :buildBlock*retval :buildBlockAtLocal*retval
-    * jump *label298 always
  1051 label *label298
  1052 return :buildBlock*retaddr
  1053 end
 
  1112 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
  1113 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
  1114 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label306 always
  1115 label *label306
  1116 set :buildBlockFromCfg*finished true
  1117 jump *label54 always
 
  1203 label *label333
  1204 label *label330
  1205 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * jump *label312 always
  1206 label *label312
  1207 return :buildBlockAtLocal*retaddr
  1208 end
 
  1217 call *label43 *invalid :buildBlockAtLocal*retval (m:*label335) (h:*label335)
  1218 label *label335
  1219 set :buildBlockAt*retval :buildBlockAtLocal*retval
-    * jump *label334 always
  1220 label *label334
  1221 set :buildBlockAt*finished true
  1222 jump *label54 always
 
  1239 read *tmp376 processor8 ":addTitaniumDrill*finished"
  1240 jump *label338 equal *tmp376 false
  1241 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
-    * jump *label336 always
  1242 label *label336
  1243 set :buildFirstTitaniumDrillAt*finished true
  1244 jump *label54 always
 
  1269 set :titaniumDrillScore:negative .negative
  1270 label *label488
  1271 ucontrol getBlock *tmp390 *tmp391 *tmp380 *tmp379 :getFloor:floor
-    * jump *label489 always
  1272 label *label489
  1273 jump *label491 notEqual :getFloor:floor @ore-titanium
  1274 label *label490
 
  1291 set :titaniumDrillScore:negative .negative
  1292 label *label496
  1293 ucontrol getBlock *tmp390 *tmp394 *tmp380 *tmp379 :getFloor:floor
-    * jump *label497 always
  1294 label *label497
  1295 jump *label499 notEqual :getFloor:floor @ore-titanium
  1296 label *label498
 
  1313 set :titaniumDrillScore:negative .negative
  1314 label *label504
  1315 ucontrol getBlock *tmp396 *tmp391 *tmp380 *tmp379 :getFloor:floor
-    * jump *label505 always
  1316 label *label505
  1317 jump *label507 notEqual :getFloor:floor @ore-titanium
  1318 label *label506
 
  1334 set :titaniumDrillScore:negative .negative
  1335 label *label512
  1336 ucontrol getBlock *tmp396 *tmp394 *tmp380 *tmp379 :getFloor:floor
-    * jump *label513 always
  1337 label *label513
  1338 jump *label515 notEqual :getFloor:floor @ore-titanium
  1339 label *label514

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-4 instructions):
 
   877 label *label40
   878 label *label386
   879 op sign *tmp320 :meetTargetLocal:copper
-    * op add :meetTargetLocal:count 0 *tmp320
+  880 set :meetTargetLocal:count *tmp320
   881 label *label387
   882 label *label390
   883 op sign *tmp320 :meetTargetLocal:lead
 
  1429 op sub *tmp430 :buildTitaniumDrills:y 1
  1430 set :buildTitaniumDrill:x *tmp429
  1431 set :buildTitaniumDrill:y *tmp430
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1432 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1433 setaddr :buildTitaniumDrill*retaddr *label374 (h:*label374)
  1434 call *label45 *invalid :buildTitaniumDrill*retval (m:*label374) (h:*label374)
 
  1440 op add *tmp434 :buildTitaniumDrills:y 1
  1441 set :buildTitaniumDrill:x *tmp433
  1442 set :buildTitaniumDrill:y *tmp434
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1443 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1444 setaddr :buildTitaniumDrill*retaddr *label375 (h:*label375)
  1445 call *label45 *invalid :buildTitaniumDrill*retval (m:*label375) (h:*label375)
 
  1451 op add *tmp438 :buildTitaniumDrills:y 1
  1452 set :buildTitaniumDrill:x *tmp437
  1453 set :buildTitaniumDrill:y *tmp438
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1454 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1455 setaddr :buildTitaniumDrill*retaddr *label376 (h:*label376)
  1456 call *label45 *invalid :buildTitaniumDrill*retval (m:*label376) (h:*label376)
 
  1461 jump *label377 notEqual :buildTitaniumDrills:built 0
  1462 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1463 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
  1464 set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1465 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1466 call *label45 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   876 end
   877 label *label40
   878 label *label386
-    * op sign *tmp320 :meetTargetLocal:copper
-    * set :meetTargetLocal:count *tmp320
+  879 op sign :meetTargetLocal:count :meetTargetLocal:copper
   880 label *label387
   881 label *label390
   882 op sign *tmp320 :meetTargetLocal:lead

Modifications by Iterated phase, Temp Variables Elimination, pass 2, iteration 1 (-2 instructions):
 
   731 label *label434
   732 sensor :supplyBase0:coal.1 .core @coal
   733 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp281 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.2:ore *tmp281
+  734 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   735 setaddr :mineOre.2*retaddr *label229 (h:*label229)
   736 call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
   737 label *label229
 
   795 sensor *tmp294 .core @sand
   796 op lessThanEq *tmp295 *tmp293 *tmp294
   797 op or *tmp296 .scrap *tmp295
-    * select *tmp297 notEqual *tmp296 false @coal @sand
-    * set :mineOre.2:ore *tmp297
+  798 select :mineOre.2:ore notEqual *tmp296 false @coal @sand
   799 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   800 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   801 label *label251

Modifications by Inline function call at BlockBuilder.mnd:101:17 (+6 instructions):
 
   696 write "Goal 5: supplying generator" processor2 ".status1"
   697 label *label430
   698 set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label212 (h:*label212)
-    * call *label27 *invalid :mineOre.2*retval (m:*label212) (h:*label212)
-    * label *label212
+  699 label *label707
+  700 label *label708
+  701 write "Mining " processor2 ".status2"
+  702 write :mineOre.2:ore processor2 ".item2"
+  703 write "core" processor2 ".block2"
+  704 label *label709
+  705 set :mineOre:ore :mineOre.2:ore
+  706 set :mineOre:amount 28
+  707 set :mineOre:block .core
+  708 setaddr :mineOre*retaddr *label710 (h:*label710)
+  709 call *label25 *invalid :mineOre*retval (m:*label710) (h:*label710)
+  710 label *label710
+  711 label *label711
   712 jump *label210 always
   713 label *label209
   714 sensor *tmp267 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   699 label *label707
   700 label *label708
   701 write "Mining " processor2 ".status2"
-    * write :mineOre.2:ore processor2 ".item2"
+  702 write @coal processor2 ".item2"
   703 write "core" processor2 ".block2"
   704 label *label709
-    * set :mineOre:ore :mineOre.2:ore
+  705 set :mineOre:ore @coal
   706 set :mineOre:amount 28
   707 set :mineOre:block .core
   708 setaddr :mineOre*retaddr *label710 (h:*label710)

Modifications by Inline function call at BlockBuilder.mnd:62:17 (+10 instructions):
 
   604 label *label420
   605 set :supplyBlock:block AJEMJJ-graphite-press0
   606 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label180 (h:*label180)
-    * call *label29 *invalid :supplyBlock*retval (m:*label180) (h:*label180)
-    * label *label180
+  607 label *label712
+  608 label *label713
+  609 write "Supplying " processor2 ".status2"
+  610 write :supplyBlock:ore processor2 ".item2"
+  611 write :supplyBlock:block processor2 ".block2"
+  612 label *label714
+  613 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  614 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  615 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
+  616 jump *label716 lessThanEq :supplyBlock:missing 0
+  617 set :mineOre:ore :supplyBlock:ore
+  618 set :mineOre:amount :supplyBlock:blockCapacity
+  619 set :mineOre:block :supplyBlock:block
+  620 setaddr :mineOre*retaddr *label715 (h:*label715)
+  621 call *label25 *invalid :mineOre*retval (m:*label715) (h:*label715)
+  622 label *label715
+  623 label *label716
+  624 label *label717
+  625 label *label718
   626 set :supplyBase0:supplied true
   627 label *label177
   628 label *label178

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   607 label *label712
   608 label *label713
   609 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
+  610 write @coal processor2 ".item2"
   611 write :supplyBlock:block processor2 ".block2"
   612 label *label714
   613 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp165 :supplyBlock:block :supplyBlock:ore
+  614 sensor *tmp165 :supplyBlock:block @coal
   615 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
   616 jump *label716 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  617 set :mineOre:ore @coal
   618 set :mineOre:amount :supplyBlock:blockCapacity
   619 set :mineOre:block :supplyBlock:block
   620 setaddr :mineOre*retaddr *label715 (h:*label715)

Modifications by Iterated phase, Expression Optimization, pass 3, iteration 1 (-4 instructions):
 
  1452 op sub *tmp430 :buildTitaniumDrills:y 1
  1453 set :buildTitaniumDrill:x *tmp429
  1454 set :buildTitaniumDrill:y *tmp430
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1455 setaddr :buildTitaniumDrill*retaddr *label374 (h:*label374)
  1456 call *label45 *invalid :buildTitaniumDrill*retval (m:*label374) (h:*label374)
  1457 label *label374
 
  1462 op add *tmp434 :buildTitaniumDrills:y 1
  1463 set :buildTitaniumDrill:x *tmp433
  1464 set :buildTitaniumDrill:y *tmp434
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1465 setaddr :buildTitaniumDrill*retaddr *label375 (h:*label375)
  1466 call *label45 *invalid :buildTitaniumDrill*retval (m:*label375) (h:*label375)
  1467 label *label375
 
  1472 op add *tmp438 :buildTitaniumDrills:y 1
  1473 set :buildTitaniumDrill:x *tmp437
  1474 set :buildTitaniumDrill:y *tmp438
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1475 setaddr :buildTitaniumDrill*retaddr *label376 (h:*label376)
  1476 call *label45 *invalid :buildTitaniumDrill*retval (m:*label376) (h:*label376)
  1477 label *label376
 
  1481 jump *label377 notEqual :buildTitaniumDrills:built 0
  1482 set :buildTitaniumDrill:x :buildTitaniumDrills:x
  1483 set :buildTitaniumDrill:y :buildTitaniumDrills:y
-    * set :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles
  1484 setaddr :buildTitaniumDrill*retaddr *label379 (h:*label379)
  1485 call *label45 *invalid :buildTitaniumDrill*retval (m:*label379) (h:*label379)
  1486 label *label379

Modifications by Inline function call at BlockBuilder.mnd:119:21 (+6 instructions):
 
   758 sensor :supplyBase0:coal.1 .core @coal
   759 sensor :supplyBase0:sand.1 .core @sand
   760 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * setaddr :mineOre.2*retaddr *label229 (h:*label229)
-    * call *label27 *invalid :mineOre.2*retval (m:*label229) (h:*label229)
-    * label *label229
+  761 label *label719
+  762 label *label720
+  763 write "Mining " processor2 ".status2"
+  764 write :mineOre.2:ore processor2 ".item2"
+  765 write "core" processor2 ".block2"
+  766 label *label721
+  767 set :mineOre:ore :mineOre.2:ore
+  768 set :mineOre:amount 28
+  769 set :mineOre:block .core
+  770 setaddr :mineOre*retaddr *label722 (h:*label722)
+  771 call *label25 *invalid :mineOre*retval (m:*label722) (h:*label722)
+  772 label *label722
+  773 label *label723
   774 label *label216
   775 jump *label214 always
   776 label *label213

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    32 ubind @poly
    33 set .builder @unit
    34 ulocate building core false @copper .coreX .coreY *tmp103 .core
-    * label *label52
    35 jump *label51 equal .core null
-    * label *label53
    36 set *signature "77658b7b93afc77c:v1"
    37 label *label54
    38 wait 1e12
 
    40 end
    41 label *label25
    42 op min :mineOre:amount :mineOre:amount 28
-    * label *label482
    43 write :mineOre:amount processor2 ".transportTarget"
    44 write :mineOre:ore processor2 ".transportItem"
-    * label *label483
-    * label *label458
    45 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
    46 jump *label461 notEqual *tmp127 false
-    * label *label459
    47 set .ERROR "Cannot locate ore"
    48 stop
-    * label *label460
    49 label *label461
-    * label *label462
-    * label *label463
-    * label *label581
-    * label *label582
    50 write "Moving..." processor2 ".status3"
-    * label *label583
    51 label *label584
    52 sensor *tmp108 @unit @firstItem
    53 jump *label585 equal *tmp108 null
    54 ucontrol itemDrop @air 1000
    55 label *label585
-    * label *label586
    56 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label587
    57 ucontrol within :locateOre:x :locateOre:y 6 *tmp111
    58 jump *label584 equal *tmp111 false
-    * label *label588
-    * label *label589
    59 sensor *tmp132 @unit @firstItem
    60 jump *label98 equal *tmp132 :mineOre:ore
-    * label *label605
-    * label *label606
    61 sensor *tmp113 @unit @firstItem
    62 jump *label609 equal *tmp113 null
    63 label *label607
    64 ucontrol itemDrop @air 1000
-    * label *label608
    65 sensor *tmp113 @unit @firstItem
    66 jump *label607 notEqual *tmp113 null
    67 label *label609
-    * label *label610
    68 label *label98
-    * label *label99
-    * label *label451
    69 write "Mining..." processor2 ".status3"
-    * label *label452
    70 op add :mineOre:stop @second 10
    71 label *label102
    72 sensor :mineOre:item @unit @firstItem
 
    76 jump *label105 equal *tmp139 false
    77 jump *label104 always
    78 label *label105
-    * label *label106
    79 ucontrol mine :locateOre:x :locateOre:y
    80 jump *label107 lessThanEq @second :mineOre:stop
    81 jump *label104 always
    82 label *label107
-    * label *label108
    83 jump *label109 notEqual .noTarget false
-    * label *label548
    84 sensor *tmp298 .core @copper
    85 jump *label549 greaterThanEq *tmp298 copper
    86 set :targetMet*retval false
    87 jump *label563 always
    88 label *label549
-    * label *label550
    89 sensor *tmp301 .core @lead
    90 jump *label551 greaterThanEq *tmp301 lead
    91 set :targetMet*retval false
    92 jump *label563 always
    93 label *label551
-    * label *label552
    94 sensor *tmp304 .core @graphite
    95 jump *label553 greaterThanEq *tmp304 graphite
    96 set :targetMet*retval false
    97 jump *label563 always
    98 label *label553
-    * label *label554
    99 sensor *tmp307 .core @silicon
   100 jump *label555 greaterThanEq *tmp307 silicon
   101 set :targetMet*retval false
   102 jump *label563 always
   103 label *label555
-    * label *label556
   104 sensor *tmp310 .core @titanium
   105 jump *label557 greaterThanEq *tmp310 titanium
   106 set :targetMet*retval false
   107 jump *label563 always
   108 label *label557
-    * label *label558
   109 sensor *tmp313 .core @metaglass
   110 jump *label559 greaterThanEq *tmp313 metaglass
   111 set :targetMet*retval false
   112 jump *label563 always
   113 label *label559
-    * label *label560
   114 sensor *tmp316 .core @thorium
   115 jump *label561 greaterThanEq *tmp316 thorium
   116 set :targetMet*retval false
   117 jump *label563 always
   118 label *label561
-    * label *label562
   119 set :targetMet*retval true
   120 jump *label563 always
   121 label *label563
   122 jump *label112 equal :targetMet*retval false
   123 jump *label104 always
   124 label *label112
-    * label *label113
   125 label *label109
-    * label *label110
-    * label *label103
   126 sensor *tmp146 @unit @totalItems
   127 jump *label102 lessThan *tmp146 :mineOre:amount
   128 label *label104
   129 ucontrol unbind
-    * label *label650
-    * label *label651
   130 write "Depositing..." processor2 ".status3"
-    * label *label652
   131 sensor *tmp117 @unit @firstItem
   132 jump *label666 notEqual *tmp117 :mineOre:ore
-    * label *label653
   133 sensor *tmp115 :mineOre:block @x
   134 sensor *tmp116 :mineOre:block @y
-    * label *label654
-    * label *label655
   135 write "Moving..." processor2 ".status3"
-    * label *label656
-    * label *label657
   136 ucontrol within *tmp115 *tmp116 6 *tmp105
   137 jump *label660 notEqual *tmp105 false
   138 label *label658
   139 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label659
   140 ucontrol within *tmp115 *tmp116 6 *tmp105
   141 jump *label658 equal *tmp105 false
   142 label *label660
-    * label *label661
-    * label *label662
   143 sensor :depositItems:cap :mineOre:block @itemCapacity
   144 label *label663
   145 ucontrol itemDrop :mineOre:block 28
-    * label *label664
   146 sensor *tmp121 @unit @firstItem
   147 op mul *tmp122 *tmp121 :depositItems:cap
   148 sensor *tmp123 :mineOre:block :mineOre:ore
   149 jump *label663 greaterThan *tmp122 *tmp123
-    * label *label665
   150 jump *label671 always
   151 label *label666
-    * label *label667
   152 sensor *tmp125 @unit @firstItem
   153 jump *label670 equal *tmp125 null
   154 label *label668
   155 ucontrol itemDrop @air 1000
-    * label *label669
   156 sensor *tmp125 @unit @firstItem
   157 jump *label668 notEqual *tmp125 null
   158 label *label670
   159 label *label671
-    * label *label672
   160 write 0 processor2 ".transportTarget"
   161 write null processor2 ".transportItem"
-    * label *label673
-    * label *label674
-    * label *label94
   162 return :mineOre*retaddr
   163 end
   164 label *label26
-    * label *label601
   165 write "Mining " processor2 ".status2"
   166 write :mineOre.1:ore processor2 ".item2"
   167 write :mineOre.1:block processor2 ".block2"
-    * label *label602
   168 set :mineOre:ore :mineOre.1:ore
   169 set :mineOre:amount 28
   170 set :mineOre:block :mineOre.1:block
   171 setaddr :mineOre*retaddr *label117 (h:*label117)
   172 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   173 label *label117
-    * label *label115
   174 return :mineOre.1*retaddr
   175 end
   176 label *label27
-    * label *label546
   177 write "Mining " processor2 ".status2"
   178 write :mineOre.2:ore processor2 ".item2"
   179 write "core" processor2 ".block2"
-    * label *label547
   180 set :mineOre:ore :mineOre.2:ore
   181 set :mineOre:amount 28
   182 set :mineOre:block .core
   183 setaddr :mineOre*retaddr *label120 (h:*label120)
   184 call *label25 *invalid :mineOre*retval (m:*label120) (h:*label120)
   185 label *label120
-    * label *label118
   186 return :mineOre.2*retaddr
   187 end
   188 label *label28
   189 sensor *tmp151 :fetchBlock:block @itemCapacity
   190 op min :transportStatus:target *tmp151 28
-    * label *label484
   191 write :transportStatus:target processor2 ".transportTarget"
   192 write :fetchBlock:item processor2 ".transportItem"
-    * label *label485
-    * label *label544
   193 write "Fetching " processor2 ".status2"
   194 write :fetchBlock:item processor2 ".item2"
   195 write :fetchBlock:block processor2 ".block2"
-    * label *label545
   196 sensor *tmp153 :fetchBlock:block @x
   197 sensor *tmp154 :fetchBlock:block @y
-    * label *label570
-    * label *label571
   198 write "Moving..." processor2 ".status3"
-    * label *label572
   199 label *label573
   200 sensor *tmp108 @unit @firstItem
   201 jump *label574 equal *tmp108 null
   202 ucontrol itemDrop @air 1000
   203 label *label574
-    * label *label575
   204 ucontrol approach *tmp153 *tmp154 5.5
-    * label *label576
   205 ucontrol within *tmp153 *tmp154 6 *tmp111
   206 jump *label573 equal *tmp111 false
-    * label *label577
-    * label *label578
-    * label *label564
-    * label *label565
   207 sensor *tmp113 @unit @firstItem
   208 jump *label568 equal *tmp113 null
   209 label *label566
   210 ucontrol itemDrop @air 1000
-    * label *label567
   211 sensor *tmp113 @unit @firstItem
   212 jump *label566 notEqual *tmp113 null
   213 label *label568
-    * label *label569
   214 label *label126
   215 ucontrol itemTake :fetchBlock:block :fetchBlock:item 28
   216 sensor :fetchBlock:unitItem @unit @firstItem
 
   220 jump *label129 equal *tmp158 false
   221 ucontrol itemDrop @air 1000
   222 label *label129
-    * label *label130
-    * label *label127
   223 sensor *tmp160 @unit :fetchBlock:item
   224 op lessThan *tmp161 *tmp160 28
   225 sensor *tmp162 :fetchBlock:block :fetchBlock:item
   226 op land *tmp163 *tmp161 *tmp162
   227 jump *label126 notEqual *tmp163 false
-    * label *label128
-    * label *label625
-    * label *label626
   228 write "Depositing..." processor2 ".status3"
-    * label *label627
   229 sensor *tmp117 @unit @firstItem
   230 jump *label641 notEqual *tmp117 :fetchBlock:item
-    * label *label628
   231 sensor *tmp115 .core @x
   232 sensor *tmp116 .core @y
-    * label *label629
-    * label *label630
   233 write "Moving..." processor2 ".status3"
-    * label *label631
-    * label *label632
   234 ucontrol within *tmp115 *tmp116 6 *tmp105
   235 jump *label635 notEqual *tmp105 false
   236 label *label633
   237 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label634
   238 ucontrol within *tmp115 *tmp116 6 *tmp105
   239 jump *label633 equal *tmp105 false
   240 label *label635
-    * label *label636
-    * label *label637
   241 sensor :depositItems:cap .core @itemCapacity
   242 label *label638
   243 ucontrol itemDrop .core 28
-    * label *label639
   244 sensor *tmp121 @unit @firstItem
   245 op mul *tmp122 *tmp121 :depositItems:cap
   246 sensor *tmp123 .core :fetchBlock:item
   247 jump *label638 greaterThan *tmp122 *tmp123
-    * label *label640
   248 jump *label646 always
   249 label *label641
-    * label *label642
   250 sensor *tmp125 @unit @firstItem
   251 jump *label645 equal *tmp125 null
   252 label *label643
   253 ucontrol itemDrop @air 1000
-    * label *label644
   254 sensor *tmp125 @unit @firstItem
   255 jump *label643 notEqual *tmp125 null
   256 label *label645
   257 label *label646
-    * label *label647
   258 write 0 processor2 ".transportTarget"
   259 write null processor2 ".transportItem"
-    * label *label648
-    * label *label649
-    * label *label121
   260 return :fetchBlock*retaddr
   261 end
   262 label *label29
-    * label *label579
   263 write "Supplying " processor2 ".status2"
   264 write :supplyBlock:ore processor2 ".item2"
   265 write :supplyBlock:block processor2 ".block2"
-    * label *label580
   266 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   267 sensor *tmp165 :supplyBlock:block :supplyBlock:ore
   268 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   274 call *label25 *invalid :mineOre*retval (m:*label136) (h:*label136)
   275 label *label136
   276 label *label134
-    * label *label135
-    * label *label132
   277 return :supplyBlock*retaddr
   278 end
   279 label *label32
 
   297 sensor :unpackCfg:ti :unpackCfg:type @titanium
   298 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   299 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label148
   300 return :unpackCfg*retaddr
   301 end
   302 label *label38
 
   306 op max *tmp209 0 *tmp208
   307 write *tmp209 processor7 ".sandTarget"
   308 jump *label150 equal .thoriumContainer false
-    * label *label415
   309 write "Phase 2: servicing thorium drill" processor2 ".status1"
-    * label *label416
   310 sensor *tmp211 .thoriumBattery @totalPower
   311 jump *label154 greaterThanEq *tmp211 2000
   312 sensor *tmp214 .thoriumGenerator @coal
 
   315 jump *label158 greaterThanEq *tmp217 50
   316 set :supplyBlock:block .thoriumGenerator
   317 set :supplyBlock:ore @coal
-    * label *label700
-    * label *label701
   318 write "Supplying " processor2 ".status2"
   319 write @coal processor2 ".item2"
   320 write :supplyBlock:block processor2 ".block2"
-    * label *label702
   321 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   322 sensor *tmp165 :supplyBlock:block @coal
   323 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   329 call *label25 *invalid :mineOre*retval (m:*label703) (h:*label703)
   330 label *label703
   331 label *label704
-    * label *label705
-    * label *label706
   332 jump *label159 always
   333 label *label158
   334 set :supplyBlockFromCore:target .thoriumGenerator
-    * label *label464
   335 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
   336 op min :supplyBlockFromCore:cap *tmp169 28
   337 set :transportStatus:target :supplyBlockFromCore:cap
-    * label *label486
   338 write :supplyBlockFromCore:cap processor2 ".transportTarget"
   339 write @coal processor2 ".transportItem"
-    * label *label487
-    * label *label603
   340 write "Transferring " processor2 ".status2"
   341 write @coal processor2 ".item2"
   342 write :supplyBlockFromCore:target processor2 ".block2"
-    * label *label604
-    * label *label590
-    * label *label591
   343 write "Moving..." processor2 ".status3"
-    * label *label592
   344 label *label593
   345 sensor *tmp108 @unit @firstItem
   346 jump *label594 equal *tmp108 null
   347 ucontrol itemDrop @air 1000
   348 label *label594
-    * label *label595
   349 ucontrol approach .coreX .coreY 5.5
-    * label *label596
   350 ucontrol within .coreX .coreY 6 *tmp111
   351 jump *label593 equal *tmp111 false
-    * label *label597
-    * label *label598
-    * label *label611
-    * label *label612
   352 sensor *tmp113 @unit @firstItem
   353 jump *label615 equal *tmp113 null
   354 label *label613
   355 ucontrol itemDrop @air 1000
-    * label *label614
   356 sensor *tmp113 @unit @firstItem
   357 jump *label613 notEqual *tmp113 null
   358 label *label615
-    * label *label616
   359 label *label469
   360 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   361 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   365 jump *label470 equal *tmp174 false
   366 ucontrol itemDrop @air 1000
   367 label *label470
-    * label *label471
-    * label *label472
   368 sensor *tmp176 @unit @coal
   369 op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap
   370 sensor *tmp178 .core @coal
   371 op land *tmp179 *tmp177 *tmp178
   372 jump *label469 notEqual *tmp179 false
-    * label *label473
-    * label *label675
-    * label *label676
   373 write "Depositing..." processor2 ".status3"
-    * label *label677
   374 sensor *tmp117 @unit @firstItem
   375 jump *label691 notEqual *tmp117 @coal
-    * label *label678
   376 sensor *tmp115 :supplyBlockFromCore:target @x
   377 sensor *tmp116 :supplyBlockFromCore:target @y
-    * label *label679
-    * label *label680
   378 write "Moving..." processor2 ".status3"
-    * label *label681
-    * label *label682
   379 ucontrol within *tmp115 *tmp116 6 *tmp105
   380 jump *label685 notEqual *tmp105 false
   381 label *label683
   382 ucontrol approach *tmp115 *tmp116 5.5
-    * label *label684
   383 ucontrol within *tmp115 *tmp116 6 *tmp105
   384 jump *label683 equal *tmp105 false
   385 label *label685
-    * label *label686
-    * label *label687
   386 sensor :depositItems:cap :supplyBlockFromCore:target @itemCapacity
   387 label *label688
   388 ucontrol itemDrop :supplyBlockFromCore:target 28
-    * label *label689
   389 sensor *tmp121 @unit @firstItem
   390 op mul *tmp122 *tmp121 :depositItems:cap
   391 sensor *tmp123 :supplyBlockFromCore:target @coal
   392 jump *label688 greaterThan *tmp122 *tmp123
-    * label *label690
   393 jump *label696 always
   394 label *label691
-    * label *label692
   395 sensor *tmp125 @unit @firstItem
   396 jump *label695 equal *tmp125 null
   397 label *label693
   398 ucontrol itemDrop @air 1000
-    * label *label694
   399 sensor *tmp125 @unit @firstItem
   400 jump *label693 notEqual *tmp125 null
   401 label *label695
   402 label *label696
-    * label *label697
   403 write 0 processor2 ".transportTarget"
   404 write null processor2 ".transportItem"
-    * label *label698
-    * label *label699
-    * label *label475
   405 label *label159
   406 label *label156
-    * label *label157
   407 label *label154
-    * label *label155
   408 set :fetchBlock:block .thoriumContainer
   409 set :fetchBlock:item @thorium
   410 setaddr :fetchBlock*retaddr *label162 (h:*label162)
 
   413 sensor *tmp220 .core @thorium
   414 jump *label163 lessThanEq *tmp220 400
   415 write 0 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label165
   416 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label166
   417 label *label163
-    * label *label164
-    * label *label152
   418 jump *label151 always
   419 label *label150
   420 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   421 jump *label167 lessThanEq *tmp81 1
-    * label *label417
   422 write "Phase 1: supplying base" processor2 ".status1"
-    * label *label418
   423 set :mineOre.2:ore @coal
-    * label *label620
-    * label *label621
   424 write "Mining " processor2 ".status2"
   425 write @coal processor2 ".item2"
   426 write "core" processor2 ".block2"
-    * label *label622
   427 set :mineOre:ore @coal
   428 set :mineOre:amount 28
   429 set :mineOre:block .core
   430 setaddr :mineOre*retaddr *label623 (h:*label623)
   431 call *label25 *invalid :mineOre*retval (m:*label623) (h:*label623)
   432 label *label623
-    * label *label624
-    * label *label169
   433 jump *label168 always
   434 label *label167
   435 set :supplyBase0:supplied false
 
   438 jump *label175 greaterThanEq *tmp227 graphite
   439 sensor *tmp230 AJEMJJ-graphite-press0 @coal
   440 jump *label177 greaterThanEq *tmp230 5
-    * label *label419
   441 write "Goal 1: graphite requirement" processor2 ".status1"
-    * label *label420
   442 set :supplyBlock:block AJEMJJ-graphite-press0
   443 set :supplyBlock:ore @coal
-    * label *label712
-    * label *label713
   444 write "Supplying " processor2 ".status2"
   445 write @coal processor2 ".item2"
   446 write :supplyBlock:block processor2 ".block2"
-    * label *label714
   447 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   448 sensor *tmp165 :supplyBlock:block @coal
   449 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
 
   455 call *label25 *invalid :mineOre*retval (m:*label715) (h:*label715)
   456 label *label715
   457 label *label716
-    * label *label717
-    * label *label718
   458 set :supplyBase0:supplied true
   459 label *label177
-    * label *label178
   460 label *label175
-    * label *label176
   461 sensor *tmp233 AJTJK-battery1 @totalPower
   462 jump *label181 greaterThanEq *tmp233 .powerTarget
   463 sensor *tmp236 AJRJM-combustion-generator3 @coal
   464 jump *label183 greaterThanEq *tmp236 2
-    * label *label421
   465 write "Goal 4: supplying generator" processor2 ".status1"
-    * label *label422
   466 set :supplyBlock:block AJRJM-combustion-generator3
   467 set :supplyBlock:ore @coal
   468 setaddr :supplyBlock*retaddr *label186 (h:*label186)
 
   470 label *label186
   471 jump *label172 always
   472 label *label183
-    * label *label184
   473 label *label181
-    * label *label182
   474 sensor *tmp239 .core @silicon
   475 jump *label187 greaterThanEq *tmp239 silicon
   476 sensor *tmp242 ALMQJN-silicon-smelter4 @coal
   477 jump *label189 greaterThanEq *tmp242 5
-    * label *label423
   478 write "Goal 2: coal for silicon requirement" processor2 ".status1"
-    * label *label424
   479 set :supplyBlock:block ALMQJN-silicon-smelter4
   480 set :supplyBlock:ore @coal
   481 setaddr :supplyBlock*retaddr *label192 (h:*label192)
 
   489 jump *label195 equal .scrap false
   490 sensor *tmp249 AXPRJe-pulverizer27 @scrap
   491 jump *label197 greaterThanEq *tmp249 10
-    * label *label425
   492 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
-    * label *label426
   493 set :supplyBlock:block AXPRJe-pulverizer27
   494 set :supplyBlock:ore @scrap
   495 setaddr :supplyBlock*retaddr *label200 (h:*label200)
 
   497 label *label200
   498 set :supplyBase0:supplied true
   499 label *label197
-    * label *label198
   500 jump *label196 always
   501 label *label195
-    * label *label427
   502 write "Goal 3: sand for silicon requirement" processor2 ".status1"
-    * label *label428
   503 set :supplyBlock:block ALMQJN-silicon-smelter4
   504 set :supplyBlock:ore @sand
   505 setaddr :supplyBlock*retaddr *label202 (h:*label202)
 
   508 set :supplyBase0:supplied true
   509 label *label196
   510 label *label193
-    * label *label194
   511 label *label190
   512 label *label187
-    * label *label188
   513 label *label173
-    * label *label174
   514 set *tmp254 100
   515 sensor *tmp252 .core @titanium
   516 jump *label204 greaterThanEq *tmp252 titanium
 
   524 sensor *tmp263 AJTJK-battery1 @totalPower
   525 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   526 jump *label209 greaterThanEq *tmp263 *tmp264
-    * label *label429
   527 write "Goal 5: supplying generator" processor2 ".status1"
-    * label *label430
   528 set :mineOre.2:ore @coal
-    * label *label707
-    * label *label708
   529 write "Mining " processor2 ".status2"
   530 write @coal processor2 ".item2"
   531 write "core" processor2 ".block2"
-    * label *label709
   532 set :mineOre:ore @coal
   533 set :mineOre:amount 28
   534 set :mineOre:block .core
   535 setaddr :mineOre*retaddr *label710 (h:*label710)
   536 call *label25 *invalid :mineOre*retval (m:*label710) (h:*label710)
   537 label *label710
-    * label *label711
   538 jump *label210 always
   539 label *label209
   540 sensor *tmp267 .core @silicon
   541 jump *label213 greaterThanEq *tmp267 silicon
   542 jump *label215 equal .scrap false
-    * label *label431
   543 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label432
   544 jump *label218 equal A¨SSJi-container31 false
   545 sensor :supplyBase0:coal .core @coal
   546 sensor :supplyBase0:sand A¨SSJi-container31 @sand
 
   560 label *label219
   561 jump *label216 always
   562 label *label215
-    * label *label433
   563 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label434
   564 sensor :supplyBase0:coal.1 .core @coal
   565 sensor :supplyBase0:sand.1 .core @sand
   566 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * label *label719
-    * label *label720
   567 write "Mining " processor2 ".status2"
   568 write :mineOre.2:ore processor2 ".item2"
   569 write "core" processor2 ".block2"
-    * label *label721
   570 set :mineOre:ore :mineOre.2:ore
   571 set :mineOre:amount 28
   572 set :mineOre:block .core
   573 setaddr :mineOre*retaddr *label722 (h:*label722)
   574 call *label25 *invalid :mineOre*retval (m:*label722) (h:*label722)
   575 label *label722
-    * label *label723
   576 label *label216
   577 jump *label214 always
   578 label *label213
   579 sensor *tmp282 .core @copper
   580 jump *label230 greaterThanEq *tmp282 copper
-    * label *label435
   581 write "Goal 7: copper requirement" processor2 ".status1"
-    * label *label436
   582 set :mineOre.2:ore @copper
   583 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   584 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
 
   587 label *label230
   588 sensor *tmp285 .core @lead
   589 jump *label234 greaterThanEq *tmp285 lead
-    * label *label437
   590 write "Goal 8: lead requirement" processor2 ".status1"
-    * label *label438
   591 set :mineOre.2:ore @lead
   592 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   593 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
 
   596 label *label234
   597 sensor *tmp288 .core @metaglass
   598 jump *label238 greaterThanEq *tmp288 metaglass
-    * label *label439
   599 write "Goal 9: metaglass requirement" processor2 ".status1"
-    * label *label440
   600 jump *label241 equal .scrap false
   601 set :mineOre.1:ore @scrap
   602 set :mineOre.1:block .sandContainer
 
   612 label *label242
   613 jump *label239 always
   614 label *label238
-    * label *label441
   615 write "Goal 10: supplying base" processor2 ".status1"
-    * label *label442
   616 jump *label246 equal A¨SSJi-container31 false
   617 set :mineOre.1:ore @scrap
   618 set :mineOre.1:block A¨SSJi-container31
 
   636 label *label214
   637 label *label210
   638 label *label207
-    * label *label208
   639 jump *label206 always
   640 label *label205
-    * label *label443
   641 write "Goal 11: Fetching titanium" processor2 ".status1"
-    * label *label444
   642 set :fetchBlock:block .titaniumDrill
   643 set :fetchBlock:item @titanium
   644 setaddr :fetchBlock*retaddr *label253 (h:*label253)
 
   648 label *label172
   649 label *label168
   650 label *label151
-    * label *label149
   651 return :supplyBaseLocal*retaddr
   652 end
   653 label *label39
 
   656 set :targetMet*retval false
   657 jump *label254 always
   658 label *label255
-    * label *label256
   659 sensor *tmp301 .core @lead
   660 jump *label257 greaterThanEq *tmp301 lead
   661 set :targetMet*retval false
   662 jump *label254 always
   663 label *label257
-    * label *label258
   664 sensor *tmp304 .core @graphite
   665 jump *label259 greaterThanEq *tmp304 graphite
   666 set :targetMet*retval false
   667 jump *label254 always
   668 label *label259
-    * label *label260
   669 sensor *tmp307 .core @silicon
   670 jump *label261 greaterThanEq *tmp307 silicon
   671 set :targetMet*retval false
   672 jump *label254 always
   673 label *label261
-    * label *label262
   674 sensor *tmp310 .core @titanium
   675 jump *label263 greaterThanEq *tmp310 titanium
   676 set :targetMet*retval false
   677 jump *label254 always
   678 label *label263
-    * label *label264
   679 sensor *tmp313 .core @metaglass
   680 jump *label265 greaterThanEq *tmp313 metaglass
   681 set :targetMet*retval false
   682 jump *label254 always
   683 label *label265
-    * label *label266
   684 sensor *tmp316 .core @thorium
   685 jump *label267 greaterThanEq *tmp316 thorium
   686 set :targetMet*retval false
   687 jump *label254 always
   688 label *label267
-    * label *label268
   689 set :targetMet*retval true
   690 jump *label254 always
   691 label *label254
   692 return :targetMet*retaddr
   693 end
   694 label *label40
-    * label *label386
   695 op sign :meetTargetLocal:count :meetTargetLocal:copper
-    * label *label387
-    * label *label390
   696 op sign *tmp320 :meetTargetLocal:lead
   697 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label391
-    * label *label394
   698 op sign *tmp320 :meetTargetLocal:graphite
   699 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label395
-    * label *label398
   700 op sign *tmp320 :meetTargetLocal:silicon
   701 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label399
-    * label *label402
   702 op sign *tmp320 :meetTargetLocal:titanium
   703 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label403
-    * label *label406
   704 op sign *tmp320 :meetTargetLocal:metaglass
   705 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label407
-    * label *label410
   706 op sign *tmp320 :meetTargetLocal:thorium
   707 op add :meetTargetLocal:count :meetTargetLocal:count *tmp320
-    * label *label411
-    * label *label272
   708 write :meetTargetLocal:count processor2 ".totalTargets"
   709 write :meetTargetLocal:block processor2 ".nextBlock"
   710 write :meetTargetLocal:copper processor2 ".targetCopper"
 
   740 write *tmp331 AÕFFJS-micro-processor9 ".graphiteReserve"
   741 write lead processor7 ".leadTarget"
   742 write :meetTargetLocal:copper processor7 ".copperTarget"
-    * label *label280
   743 setaddr :targetMet*retaddr *label283 (h:*label283)
   744 call *label39 *invalid :targetMet*retval (m:*label283) (h:*label283)
   745 label *label283
 
   748 setaddr :supplyBaseLocal*retaddr *label284 (h:*label284)
   749 call *label38 *invalid :supplyBaseLocal*retval (m:*label284) (h:*label284)
   750 label *label284
-    * label *label281
   751 setaddr :targetMet*retaddr *label600 (h:*label600)
   752 call *label39 *invalid :targetMet*retval (m:*label600) (h:*label600)
   753 label *label600
 
   760 wait 1e-15
   761 read *tmp335 AÕFFJS-micro-processor9 ":buildStart*finished"
   762 jump *label287 equal *tmp335 false
-    * label *label288
   763 setaddr :targetMet*retaddr *label291 (h:*label291)
   764 call *label39 *invalid :targetMet*retval (m:*label291) (h:*label291)
   765 label *label291
 
   768 setaddr :supplyBaseLocal*retaddr *label292 (h:*label292)
   769 call *label38 *invalid :supplyBaseLocal*retval (m:*label292) (h:*label292)
   770 label *label292
-    * label *label289
   771 setaddr :targetMet*retaddr *label619 (h:*label619)
   772 call *label39 *invalid :targetMet*retval (m:*label619) (h:*label619)
   773 label *label619
   774 jump *label618 equal :targetMet*retval false
   775 label *label290
   776 label *label285
-    * label *label286
-    * label *label269
   777 return :meetTargetLocal*retaddr
   778 end
   779 label *label6
 
   790 setaddr :meetTargetLocal*retaddr *label294 (h:*label294)
   791 call *label40 *invalid :meetTargetLocal*retval (m:*label294) (h:*label294)
   792 label *label294
-    * label *label293
   793 set :meetTarget*finished true
   794 jump *label54 always
   795 end
 
   811 setaddr :meetTargetLocal*retaddr *label297 (h:*label297)
   812 call *label40 *invalid :meetTargetLocal*retval (m:*label297) (h:*label297)
   813 label *label297
-    * label *label295
   814 set :meetTargetCfg*finished true
   815 jump *label54 always
   816 end
 
   841 write false AÕFFJS-micro-processor9 ":buildStop*finished"
   842 write 2 AÕFFJS-micro-processor9 "@counter"
   843 set :buildBlock*retval :buildBlockAtLocal*retval
-    * label *label298
   844 return :buildBlock*retaddr
   845 end
   846 label *label8
 
   869 set :buildRemoteBlock*retval :buildBlock*retval
   870 jump *label301 always
   871 label *label302
-    * label *label303
   872 set :buildRemoteBlock*retval false
   873 jump *label301 always
   874 label *label301
 
   903 write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlockFromCfg:cfg
   904 write :buildBlock*retval processor9 :buildBlockFromCfg:cfg
   905 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label306
   906 set :buildBlockFromCfg*finished true
   907 jump *label54 always
   908 end
   909 label *label43
-    * label *label536
-    * label *label537
   910 write "Moving..." processor2 ".status3"
-    * label *label538
-    * label *label539
   911 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   912 jump *label542 notEqual *tmp105 false
   913 label *label540
   914 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 5.5
-    * label *label541
   915 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   916 jump *label540 equal *tmp105 false
   917 label *label542
-    * label *label543
-    * label *label313
   918 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp347
   919 jump *label315 equal :buildBlockAtLocal:building null
   920 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   921 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
   922 jump *label312 always
   923 label *label317
-    * label *label318
   924 set .ERROR "Cannot build at position"
   925 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
   926 set .ERROR_FOUND_TYPE :buildBlockAtLocal:type
   927 set .ERROR_X :buildBlockAtLocal:x
   928 set .ERROR_Y :buildBlockAtLocal:y
   929 stop
-    * label *label319
   930 label *label315
-    * label *label316
   931 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
   932 wait 0.25
   933 set :buildBlockAtLocal:success false
 
   944 set .ERROR_X :buildBlockAtLocal:x
   945 set .ERROR_Y :buildBlockAtLocal:y
   946 stop
-    * label *label325
   947 jump *label324 always
   948 label *label323
   949 set :buildBlockAtLocal:success true
 
   955 ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y 6
   956 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
   957 label *label328
-    * label *label329
   958 label *label326
-    * label *label327
-    * label *label321
   959 jump *label320 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
-    * label *label322
   960 control enabled processor6 true
   961 ubind .builder
   962 sensor :log:encodedId :buildBlockAtLocal:block @id
 
   967 op mul *tmp369 *tmp0 1000
   968 op add *tmp370 :log:encodedId *tmp369
   969 write *tmp370 bank1 *tmp366
-    * label *label331
   970 jump *label332 lessThan :buildBlockAtLocal:index 0
   971 op shl *tmp373 1 :buildBlockAtLocal:index
   972 read *tmp6 processor2 ".blocksBuilt"
 
   974 write *tmp374 processor2 ".blocksBuilt"
   975 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
   976 label *label332
-    * label *label333
-    * label *label330
   977 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
   978 label *label312
   979 return :buildBlockAtLocal*retaddr
 
   989 call *label43 *invalid :buildBlockAtLocal*retval (m:*label335) (h:*label335)
   990 label *label335
   991 set :buildBlockAt*retval :buildBlockAtLocal*retval
-    * label *label334
   992 set :buildBlockAt*finished true
   993 jump *label54 always
   994 end
 
  1010 read *tmp376 processor8 ":addTitaniumDrill*finished"
  1011 jump *label338 equal *tmp376 false
  1012 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
-    * label *label336
  1013 set :buildFirstTitaniumDrillAt*finished true
  1014 jump *label54 always
  1015 end
  1016 label *label45
  1017 jump *label347 greaterThanEq :buildTitaniumDrill:count 6
  1018 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
-    * label *label520
-    * label *label521
  1019 write "Moving..." processor2 ".status3"
-    * label *label522
-    * label *label523
  1020 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1021 jump *label526 notEqual *tmp105 false
  1022 label *label524
  1023 ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill:y 5.5
-    * label *label525
  1024 ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y 6 *tmp105
  1025 jump *label524 equal *tmp105 false
  1026 label *label526
-    * label *label527
-    * label *label351
  1027 set .positive 0
  1028 set .negative 0
  1029 op sub *tmp390 :buildTitaniumDrill:x 0.5
  1030 op sub *tmp391 :buildTitaniumDrill:y 0.5
  1031 set :titaniumDrillScore:positive .positive
  1032 set :titaniumDrillScore:negative .negative
-    * label *label488
  1033 ucontrol getBlock *tmp390 *tmp391 *tmp380 *tmp379 :getFloor:floor
-    * label *label489
  1034 jump *label491 notEqual :getFloor:floor @ore-titanium
-    * label *label490
  1035 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1036 jump *label494 always
  1037 label *label491
 
  1043 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1044 label *label493
  1045 label *label494
-    * label *label495
  1046 set .positive :titaniumDrillScore:positive
  1047 set .negative :titaniumDrillScore:negative
  1048 op add *tmp394 :buildTitaniumDrill:y 0.5
  1049 set :titaniumDrillScore:positive .positive
  1050 set :titaniumDrillScore:negative .negative
-    * label *label496
  1051 ucontrol getBlock *tmp390 *tmp394 *tmp380 *tmp379 :getFloor:floor
-    * label *label497
  1052 jump *label499 notEqual :getFloor:floor @ore-titanium
-    * label *label498
  1053 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1054 jump *label502 always
  1055 label *label499
 
  1061 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1062 label *label501
  1063 label *label502
-    * label *label503
  1064 set .positive :titaniumDrillScore:positive
  1065 set .negative :titaniumDrillScore:negative
  1066 op add *tmp396 :buildTitaniumDrill:x 0.5
  1067 set :titaniumDrillScore:positive .positive
  1068 set :titaniumDrillScore:negative .negative
-    * label *label504
  1069 ucontrol getBlock *tmp396 *tmp391 *tmp380 *tmp379 :getFloor:floor
-    * label *label505
  1070 jump *label507 notEqual :getFloor:floor @ore-titanium
-    * label *label506
  1071 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1072 jump *label510 always
  1073 label *label507
 
  1079 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1080 label *label509
  1081 label *label510
-    * label *label511
  1082 set .positive :titaniumDrillScore:positive
  1083 set .negative :titaniumDrillScore:negative
  1084 set :titaniumDrillScore:positive .positive
  1085 set :titaniumDrillScore:negative .negative
-    * label *label512
  1086 ucontrol getBlock *tmp396 *tmp394 *tmp380 *tmp379 :getFloor:floor
-    * label *label513
  1087 jump *label515 notEqual :getFloor:floor @ore-titanium
-    * label *label514
  1088 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1089 jump *label518 always
  1090 label *label515
 
  1096 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1097 label *label517
  1098 label *label518
-    * label *label519
  1099 set .positive :titaniumDrillScore:positive
  1100 set .negative :titaniumDrillScore:negative
  1101 op greaterThan *tmp402 .positive .negative
 
  1122 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1123 op min *tmp410 :buildTitaniumDrill:count 8
  1124 write *tmp410 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label363
  1125 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1126 set :buildTitaniumDrill*retval .positive
  1127 jump *label346 always
  1128 label *label360
-    * label *label361
  1129 label *label357
-    * label *label358
  1130 label *label349
-    * label *label350
  1131 label *label347
-    * label *label348
  1132 set :buildTitaniumDrill*retval 0
  1133 jump *label346 always
  1134 label *label346
 
  1139 set :buildTitaniumDrills:tiles 0
  1140 wait 0.0001
  1141 wait 0.0001
-    * label *label365
  1142 read *tmp51 processor3 ".searchFinished"
  1143 jump *label367 notEqual *tmp51 false
  1144 label *label617
-    * label *label368
  1145 read *tmp50 processor3 ".locations"
  1146 jump *label370 greaterThanEq :buildTitaniumDrills:current *tmp50
  1147 label *label479
 
  1205 set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles
  1206 set :buildTitaniumDrills:built :buildTitaniumDrill*retval
  1207 label *label377
-    * label *label378
  1208 label *label371
-    * label *label372
  1209 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
-    * label *label369
  1210 read *tmp50 processor3 ".locations"
  1211 jump *label479 lessThan :buildTitaniumDrills:current *tmp50
  1212 label *label370
  1213 jump *label380 lessThan :buildTitaniumDrills:tiles 10
  1214 jump *label367 always
  1215 label *label380
-    * label *label381
  1216 jump *label382 lessThan :buildTitaniumDrills:count 6
  1217 jump *label367 always
  1218 label *label382
-    * label *label383
-    * label *label366
  1219 read *tmp51 processor3 ".searchFinished"
  1220 jump *label617 equal *tmp51 false
  1221 label *label367
-    * label *label364
  1222 set :buildTitaniumDrills*finished true
  1223 jump *label54 always
  1224 end
 
  1226 setaddr :supplyBaseLocal*retaddr *label385 (h:*label385)
  1227 call *label38 *invalid :supplyBaseLocal*retval (m:*label385) (h:*label385)
  1228 label *label385
-    * label *label384
  1229 set :supplyBase*finished true
  1230 jump *label54 always
  1231 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-5 instructions):
 
    73 op notEqual *tmp137 :mineOre:item null
    74 op notEqual *tmp138 :mineOre:item :mineOre:ore
    75 op land *tmp139 *tmp137 *tmp138
-    * jump *label105 equal *tmp139 false
-    * jump *label104 always
+   76 jump *label104 notEqual *tmp139 false
    77 label *label105
    78 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label107 lessThanEq @second :mineOre:stop
-    * jump *label104 always
+   79 jump *label104 greaterThan @second :mineOre:stop
    80 label *label107
    81 jump *label109 notEqual .noTarget false
    82 sensor *tmp298 .core @copper
 
   117 set :targetMet*retval true
   118 jump *label563 always
   119 label *label563
-    * jump *label112 equal :targetMet*retval false
-    * jump *label104 always
+  120 jump *label104 notEqual :targetMet*retval false
   121 label *label112
   122 label *label109
   123 sensor *tmp146 @unit @totalItems
 
  1207 read *tmp50 processor3 ".locations"
  1208 jump *label479 lessThan :buildTitaniumDrills:current *tmp50
  1209 label *label370
-    * jump *label380 lessThan :buildTitaniumDrills:tiles 10
-    * jump *label367 always
+ 1210 jump *label367 greaterThanEq :buildTitaniumDrills:tiles 10
  1211 label *label380
-    * jump *label382 lessThan :buildTitaniumDrills:count 6
-    * jump *label367 always
+ 1212 jump *label367 greaterThanEq :buildTitaniumDrills:count 6
  1213 label *label382
  1214 read *tmp51 processor3 ".searchFinished"
  1215 jump *label617 equal *tmp51 false

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
    74 op notEqual *tmp138 :mineOre:item :mineOre:ore
    75 op land *tmp139 *tmp137 *tmp138
    76 jump *label104 notEqual *tmp139 false
-    * label *label105
    77 ucontrol mine :locateOre:x :locateOre:y
    78 jump *label104 greaterThan @second :mineOre:stop
-    * label *label107
    79 jump *label109 notEqual .noTarget false
    80 sensor *tmp298 .core @copper
    81 jump *label549 greaterThanEq *tmp298 copper
 
   116 jump *label563 always
   117 label *label563
   118 jump *label104 notEqual :targetMet*retval false
-    * label *label112
   119 label *label109
   120 sensor *tmp146 @unit @totalItems
   121 jump *label102 lessThan *tmp146 :mineOre:amount
 
  1205 jump *label479 lessThan :buildTitaniumDrills:current *tmp50
  1206 label *label370
  1207 jump *label367 greaterThanEq :buildTitaniumDrills:tiles 10
-    * label *label380
  1208 jump *label367 greaterThanEq :buildTitaniumDrills:count 6
-    * label *label382
  1209 read *tmp51 processor3 ".searchFinished"
  1210 jump *label617 equal *tmp51 false
  1211 label *label367

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
   315 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   316 sensor *tmp165 :supplyBlock:block @coal
   317 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp165
-    * jump *label704 lessThanEq :supplyBlock:missing 0
+  318 jump *label159 lessThanEq :supplyBlock:missing 0
   319 set :mineOre:ore @coal
   320 set :mineOre:amount :supplyBlock:blockCapacity
   321 set :mineOre:block :supplyBlock:block
-    * setaddr :mineOre*retaddr *label703 (h:*label703)
+  322 setaddr :mineOre*retaddr *label159 (h:*label703)
   323 call *label25 *invalid :mineOre*retval (m:*label703) (h:*label703)
   324 label *label703
   325 label *label704
 
   405 call *label28 *invalid :fetchBlock*retval (m:*label162) (h:*label162)
   406 label *label162
   407 sensor *tmp220 .core @thorium
-    * jump *label163 lessThanEq *tmp220 400
+  408 jump *label151 lessThanEq *tmp220 400
   409 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   410 write 4 AÕFFJS-micro-processor9 ".polyTarget"
   411 label *label163
-    * jump *label151 always
+  412 return :supplyBaseLocal*retaddr
   413 label *label150
   414 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   415 jump *label167 lessThanEq *tmp81 1
 
   424 setaddr :mineOre*retaddr *label623 (h:*label623)
   425 call *label25 *invalid :mineOre*retval (m:*label623) (h:*label623)
   426 label *label623
-    * jump *label168 always
+  427 return :supplyBaseLocal*retaddr
   428 label *label167
   429 set :supplyBase0:supplied false
   430 jump *label173 notEqual A©JNJP-unloader6 null
 
   462 setaddr :supplyBlock*retaddr *label186 (h:*label186)
   463 call *label29 *invalid :supplyBlock*retval (m:*label186) (h:*label186)
   464 label *label186
-    * jump *label172 always
+  465 return :supplyBaseLocal*retaddr
   466 label *label183
   467 label *label181
   468 sensor *tmp239 .core @silicon
 
   482 jump *label193 greaterThanEq *tmp245 5
   483 jump *label195 equal .scrap false
   484 sensor *tmp249 AXPRJe-pulverizer27 @scrap
-    * jump *label197 greaterThanEq *tmp249 10
+  485 jump *label196 greaterThanEq *tmp249 10
   486 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   487 set :supplyBlock:block AXPRJe-pulverizer27
   488 set :supplyBlock:ore @scrap
 
   514 label *label204
   515 sensor *tmp258 .titaniumDrill @titanium
   516 jump *label205 greaterThanEq *tmp258 *tmp254
-    * jump *label207 notEqual :supplyBase0:supplied false
+  517 jump *label206 notEqual :supplyBase0:supplied false
   518 sensor *tmp263 AJTJK-battery1 @totalPower
   519 op mul *tmp264 A©JNJP-unloader6 .powerTarget
   520 jump *label209 greaterThanEq *tmp263 *tmp264
 
   529 setaddr :mineOre*retaddr *label710 (h:*label710)
   530 call *label25 *invalid :mineOre*retval (m:*label710) (h:*label710)
   531 label *label710
-    * jump *label210 always
+  532 return :supplyBaseLocal*retaddr
   533 label *label209
   534 sensor *tmp267 .core @silicon
   535 jump *label213 greaterThanEq *tmp267 silicon
 
   545 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   546 call *label26 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   547 label *label224
-    * jump *label219 always
+  548 return :supplyBaseLocal*retaddr
   549 label *label218
   550 set :mineOre.2:ore @coal
   551 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   552 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   553 label *label225
   554 label *label219
-    * jump *label216 always
+  555 return :supplyBaseLocal*retaddr
   556 label *label215
   557 write "Goal 6: silicon requirement" processor2 ".status1"
   558 sensor :supplyBase0:coal.1 .core @coal
 
   568 call *label25 *invalid :mineOre*retval (m:*label722) (h:*label722)
   569 label *label722
   570 label *label216
-    * jump *label214 always
+  571 return :supplyBaseLocal*retaddr
   572 label *label213
   573 sensor *tmp282 .core @copper
   574 jump *label230 greaterThanEq *tmp282 copper
 
   577 setaddr :mineOre.2*retaddr *label233 (h:*label233)
   578 call *label27 *invalid :mineOre.2*retval (m:*label233) (h:*label233)
   579 label *label233
-    * jump *label231 always
+  580 return :supplyBaseLocal*retaddr
   581 label *label230
   582 sensor *tmp285 .core @lead
   583 jump *label234 greaterThanEq *tmp285 lead
 
   586 setaddr :mineOre.2*retaddr *label237 (h:*label237)
   587 call *label27 *invalid :mineOre.2*retval (m:*label237) (h:*label237)
   588 label *label237
-    * jump *label235 always
+  589 return :supplyBaseLocal*retaddr
   590 label *label234
   591 sensor *tmp288 .core @metaglass
   592 jump *label238 greaterThanEq *tmp288 metaglass
 
   597 setaddr :mineOre.1*retaddr *label243 (h:*label243)
   598 call *label26 *invalid :mineOre.1*retval (m:*label243) (h:*label243)
   599 label *label243
-    * jump *label242 always
+  600 return :supplyBaseLocal*retaddr
   601 label *label241
   602 set :mineOre.2:ore @sand
   603 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   604 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   605 label *label244
   606 label *label242
-    * jump *label239 always
+  607 return :supplyBaseLocal*retaddr
   608 label *label238
   609 write "Goal 10: supplying base" processor2 ".status1"
   610 jump *label246 equal A¨SSJi-container31 false
 
   613 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   614 call *label26 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   615 label *label248
-    * jump *label247 always
+  616 return :supplyBaseLocal*retaddr
   617 label *label246
   618 sensor *tmp293 .core @coal
   619 sensor *tmp294 .core @sand
 
   630 label *label214
   631 label *label210
   632 label *label207
-    * jump *label206 always
+  633 return :supplyBaseLocal*retaddr
   634 label *label205
   635 write "Goal 11: Fetching titanium" processor2 ".status1"
   636 set :fetchBlock:block .titaniumDrill
 
   648 sensor *tmp298 .core @copper
   649 jump *label255 greaterThanEq *tmp298 copper
   650 set :targetMet*retval false
-    * jump *label254 always
+  651 return :targetMet*retaddr
   652 label *label255
   653 sensor *tmp301 .core @lead
   654 jump *label257 greaterThanEq *tmp301 lead
   655 set :targetMet*retval false
-    * jump *label254 always
+  656 return :targetMet*retaddr
   657 label *label257
   658 sensor *tmp304 .core @graphite
   659 jump *label259 greaterThanEq *tmp304 graphite
   660 set :targetMet*retval false
-    * jump *label254 always
+  661 return :targetMet*retaddr
   662 label *label259
   663 sensor *tmp307 .core @silicon
   664 jump *label261 greaterThanEq *tmp307 silicon
   665 set :targetMet*retval false
-    * jump *label254 always
+  666 return :targetMet*retaddr
   667 label *label261
   668 sensor *tmp310 .core @titanium
   669 jump *label263 greaterThanEq *tmp310 titanium
   670 set :targetMet*retval false
-    * jump *label254 always
+  671 return :targetMet*retaddr
   672 label *label263
   673 sensor *tmp313 .core @metaglass
   674 jump *label265 greaterThanEq *tmp313 metaglass
   675 set :targetMet*retval false
-    * jump *label254 always
+  676 return :targetMet*retaddr
   677 label *label265
   678 sensor *tmp316 .core @thorium
   679 jump *label267 greaterThanEq *tmp316 thorium
   680 set :targetMet*retval false
-    * jump *label254 always
+  681 return :targetMet*retaddr
   682 label *label267
   683 set :targetMet*retval true
-    * jump *label254 always
+  684 return :targetMet*retaddr
   685 label *label254
   686 return :targetMet*retaddr
   687 end
 
   913 jump *label315 equal :buildBlockAtLocal:building null
   914 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   915 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * jump *label312 always
+  916 return :buildBlockAtLocal*retaddr
   917 label *label317
   918 set .ERROR "Cannot build at position"
   919 set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block
 
  1118 write *tmp410 AÕFFJS-micro-processor9 ".flareTarget"
  1119 op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles .positive
  1120 set :buildTitaniumDrill*retval .positive
-    * jump *label346 always
+ 1121 return :buildTitaniumDrill*retaddr
  1122 label *label360
  1123 label *label357
  1124 label *label349
  1125 label *label347
  1126 set :buildTitaniumDrill*retval 0
-    * jump *label346 always
+ 1127 return :buildTitaniumDrill*retaddr
  1128 label *label346
  1129 return :buildTitaniumDrill*retaddr
  1130 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-24 instructions):
 
    37 label *label54
    38 wait 1e12
    39 jump *label54 always
-    * end
    40 label *label25
    41 op min :mineOre:amount :mineOre:amount 28
    42 write :mineOre:amount processor2 ".transportTarget"
 
   153 write 0 processor2 ".transportTarget"
   154 write null processor2 ".transportItem"
   155 return :mineOre*retaddr
-    * end
   156 label *label26
   157 write "Mining " processor2 ".status2"
   158 write :mineOre.1:ore processor2 ".item2"
 
   164 call *label25 *invalid :mineOre*retval (m:*label117) (h:*label117)
   165 label *label117
   166 return :mineOre.1*retaddr
-    * end
   167 label *label27
   168 write "Mining " processor2 ".status2"
   169 write :mineOre.2:ore processor2 ".item2"
 
   175 call *label25 *invalid :mineOre*retval (m:*label120) (h:*label120)
   176 label *label120
   177 return :mineOre.2*retaddr
-    * end
   178 label *label28
   179 sensor *tmp151 :fetchBlock:block @itemCapacity
   180 op min :transportStatus:target *tmp151 28
 
   248 write 0 processor2 ".transportTarget"
   249 write null processor2 ".transportItem"
   250 return :fetchBlock*retaddr
-    * end
   251 label *label29
   252 write "Supplying " processor2 ".status2"
   253 write :supplyBlock:ore processor2 ".item2"
 
   264 label *label136
   265 label *label134
   266 return :supplyBlock*retaddr
-    * end
   267 label *label32
   268 read *tmp181 :unpackCfg:cfg 1
   269 op sub *tmp182 *tmp181 74
 
   286 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   287 sensor :unpackCfg:th :unpackCfg:type @thorium
   288 return :unpackCfg*retaddr
-    * end
   289 label *label38
   290 op add *tmp206 .siliconMonoSurplus silicon
   291 sensor *tmp207 .core @silicon
 
   314 set :mineOre:block :supplyBlock:block
   315 setaddr :mineOre*retaddr *label159 (h:*label703)
   316 call *label25 *invalid :mineOre*retval (m:*label703) (h:*label703)
-    * label *label703
-    * label *label704
-    * jump *label159 always
   317 label *label158
   318 set :supplyBlockFromCore:target .thoriumGenerator
   319 sensor *tmp169 :supplyBlockFromCore:target @itemCapacity
 
   398 jump *label151 lessThanEq *tmp220 400
   399 write 0 AÕFFJS-micro-processor9 ".monoTarget"
   400 write 4 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label163
   401 return :supplyBaseLocal*retaddr
   402 label *label150
   403 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   479 call *label29 *invalid :supplyBlock*retval (m:*label200) (h:*label200)
   480 label *label200
   481 set :supplyBase0:supplied true
-    * label *label197
   482 jump *label196 always
   483 label *label195
   484 write "Goal 3: sand for silicon requirement" processor2 ".status1"
 
   539 setaddr :mineOre.2*retaddr *label225 (h:*label225)
   540 call *label27 *invalid :mineOre.2*retval (m:*label225) (h:*label225)
   541 label *label225
-    * label *label219
   542 return :supplyBaseLocal*retaddr
   543 label *label215
   544 write "Goal 6: silicon requirement" processor2 ".status1"
 
   554 setaddr :mineOre*retaddr *label722 (h:*label722)
   555 call *label25 *invalid :mineOre*retval (m:*label722) (h:*label722)
   556 label *label722
-    * label *label216
   557 return :supplyBaseLocal*retaddr
   558 label *label213
   559 sensor *tmp282 .core @copper
 
   589 setaddr :mineOre.2*retaddr *label244 (h:*label244)
   590 call *label27 *invalid :mineOre.2*retval (m:*label244) (h:*label244)
   591 label *label244
-    * label *label242
   592 return :supplyBaseLocal*retaddr
   593 label *label238
   594 write "Goal 10: supplying base" processor2 ".status1"
 
   608 setaddr :mineOre.2*retaddr *label251 (h:*label251)
   609 call *label27 *invalid :mineOre.2*retval (m:*label251) (h:*label251)
   610 label *label251
-    * label *label247
-    * label *label239
-    * label *label235
-    * label *label231
-    * label *label214
-    * label *label210
-    * label *label207
   611 return :supplyBaseLocal*retaddr
   612 label *label205
   613 write "Goal 11: Fetching titanium" processor2 ".status1"
 
   617 call *label28 *invalid :fetchBlock*retval (m:*label253) (h:*label253)
   618 label *label253
   619 label *label206
-    * label *label172
-    * label *label168
   620 label *label151
   621 return :supplyBaseLocal*retaddr
-    * end
   622 label *label39
   623 sensor *tmp298 .core @copper
   624 jump *label255 greaterThanEq *tmp298 copper
 
   657 label *label267
   658 set :targetMet*retval true
   659 return :targetMet*retaddr
-    * label *label254
-    * return :targetMet*retaddr
-    * end
   660 label *label40
   661 op sign :meetTargetLocal:count :meetTargetLocal:copper
   662 op sign *tmp320 :meetTargetLocal:lead
 
   741 label *label290
   742 label *label285
   743 return :meetTargetLocal*retaddr
-    * end
   744 label *label6
   745 set :meetTargetLocal:block :meetTarget:block
   746 set :meetTargetLocal:copper :meetTarget:copper
 
   757 label *label294
   758 set :meetTarget*finished true
   759 jump *label54 always
-    * end
   760 label *label7
   761 set :unpackCfg:cfg :meetTargetCfg:cfg
   762 setaddr :unpackCfg*retaddr *label296 (h:*label296)
 
   777 label *label297
   778 set :meetTargetCfg*finished true
   779 jump *label54 always
-    * end
   780 label *label41
   781 op notEqual *tmp338 AÕFFJS-micro-processor9 null
   782 set :meetTargetLocal:block :buildBlock:block
 
   805 write 2 AÕFFJS-micro-processor9 "@counter"
   806 set :buildBlock*retval :buildBlockAtLocal*retval
   807 return :buildBlock*retaddr
-    * end
   808 label *label8
   809 op add *tmp339 :buildRemoteBlock:x :buildRemoteBlock:y
   810 jump *label302 lessThanEq *tmp339 0
 
   836 label *label301
   837 set :buildRemoteBlock*finished true
   838 jump *label54 always
-    * end
   839 label *label9
   840 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   841 setaddr :unpackCfg*retaddr *label307 (h:*label307)
 
   866 set :buildBlockFromCfg*retval :buildBlock*retval
   867 set :buildBlockFromCfg*finished true
   868 jump *label54 always
-    * end
   869 label *label43
   870 write "Moving..." processor2 ".status3"
   871 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
 
   935 write :buildBlockAtLocal:index processor2 ".recentBuildIndex"
   936 label *label332
   937 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
-    * label *label312
   938 return :buildBlockAtLocal*retaddr
-    * end
   939 label *label10
   940 set :buildBlockAtLocal:block :buildBlockAt:block
   941 set :buildBlockAtLocal:x :buildBlockAt:x
 
   949 set :buildBlockAt*retval :buildBlockAtLocal*retval
   950 set :buildBlockAt*finished true
   951 jump *label54 always
-    * end
   952 label *label11
   953 set :buildBlockAtLocal:block @pneumatic-drill
   954 set :buildBlockAtLocal:x :buildFirstTitaniumDrillAt:x
 
   969 set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*retval
   970 set :buildFirstTitaniumDrillAt*finished true
   971 jump *label54 always
-    * end
   972 label *label45
   973 jump *label347 greaterThanEq :buildTitaniumDrill:count 6
   974 jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10
 
  1087 label *label347
  1088 set :buildTitaniumDrill*retval 0
  1089 return :buildTitaniumDrill*retaddr
-    * label *label346
-    * return :buildTitaniumDrill*retaddr
-    * end
  1090 label *label12
  1091 set :buildTitaniumDrills:count 1
  1092 set :buildTitaniumDrills:tiles 0
 
  1170 label *label367
  1171 set :buildTitaniumDrills*finished true
  1172 jump *label54 always
-    * end
  1173 label *label13
  1174 setaddr :supplyBaseLocal*retaddr *label385 (h:*label385)
  1175 call *label38 *invalid :supplyBaseLocal*retval (m:*label385) (h:*label385)
  1176 label *label385
  1177 set :supplyBase*finished true
  1178 jump *label54 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    31 label *label51
    32 ubind @poly
    33 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp103 .core
+   34 ulocate building core false @copper .coreX .coreY 0 .core
    35 jump *label51 equal .core null
    36 set *signature "77658b7b93afc77c:v1"
    37 label *label54
 
    41 op min :mineOre:amount :mineOre:amount 28
    42 write :mineOre:amount processor2 ".transportTarget"
    43 write :mineOre:ore processor2 ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 *tmp128
+   44 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp127 0
    45 jump *label461 notEqual *tmp127 false
    46 set .ERROR "Cannot locate ore"
    47 stop
 
   875 ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6 *tmp105
   876 jump *label540 equal *tmp105 false
   877 label *label542
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp347
+  878 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building 0
   879 jump *label315 equal :buildBlockAtLocal:building null
   880 jump *label317 notEqual :buildBlockAtLocal:type :buildBlockAtLocal:block
   881 set :buildBlockAtLocal*retval :buildBlockAtLocal:building
 
   893 set :buildBlockAtLocal:success false
   894 label *label320
   895 ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:block :buildBlockAtLocal:rotation :buildBlockAtLocal:config
-    * ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building *tmp353
+  896 ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y :buildBlockAtLocal:type :buildBlockAtLocal:building 0
   897 op equal *tmp354 :buildBlockAtLocal:building null
   898 op equal *tmp355 :buildBlockAtLocal:success false
   899 op land *tmp356 *tmp354 *tmp355
 
   986 op sub *tmp391 :buildTitaniumDrill:y 0.5
   987 set :titaniumDrillScore:positive .positive
   988 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp390 *tmp391 *tmp380 *tmp379 :getFloor:floor
+  989 ucontrol getBlock *tmp390 *tmp391 0 0 :getFloor:floor
   990 jump *label491 notEqual :getFloor:floor @ore-titanium
   991 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
   992 jump *label494 always
 
  1004 op add *tmp394 :buildTitaniumDrill:y 0.5
  1005 set :titaniumDrillScore:positive .positive
  1006 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp390 *tmp394 *tmp380 *tmp379 :getFloor:floor
+ 1007 ucontrol getBlock *tmp390 *tmp394 0 0 :getFloor:floor
  1008 jump *label499 notEqual :getFloor:floor @ore-titanium
  1009 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1010 jump *label502 always
 
  1022 op add *tmp396 :buildTitaniumDrill:x 0.5
  1023 set :titaniumDrillScore:positive .positive
  1024 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp396 *tmp391 *tmp380 *tmp379 :getFloor:floor
+ 1025 ucontrol getBlock *tmp396 *tmp391 0 0 :getFloor:floor
  1026 jump *label507 notEqual :getFloor:floor @ore-titanium
  1027 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1028 jump *label510 always
 
  1039 set .negative :titaniumDrillScore:negative
  1040 set :titaniumDrillScore:positive .positive
  1041 set :titaniumDrillScore:negative .negative
-    * ucontrol getBlock *tmp396 *tmp394 *tmp380 *tmp379 :getFloor:floor
+ 1042 ucontrol getBlock *tmp396 *tmp394 0 0 :getFloor:floor
  1043 jump *label515 notEqual :getFloor:floor @ore-titanium
  1044 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1045 jump *label518 always

Final code before resolving virtual instructions:

    0:  jump *label46 always 0 0                                     BlockBuilder.mnd: #set target = 8;
    1:  jump *label10 always 0 0                                     ...
    2:  jump *label9 always 0 0                                      ...
    3:  jump *label11 always 0 0                                     ...
    4:  jump *label8 always 0 0                                      ...
    5:  jump *label12 always 0 0                                     ...
    6:  jump *label6 always 0 0                                      ...
    7:  jump *label7 always 0 0                                      ...
    8:  jump *label13 always 0 0                                     ...
        label *label46                                               ...
    9:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
        label *label47                                               BlockBuilder.mnd: require "Display.mnd" remote display;
   10:  read *tmp31 processor2 "*signature"                          ...
   11:  jump *label47 notEqual *tmp31 "0:v1"                         ...
        label *label48                                               BlockBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
   12:  read *tmp70 processor3 "*signature"                          ...
   13:  jump *label48 notEqual *tmp70 "3290b8c661787058:v1"          ...
        label *label49                                               BlockBuilder.mnd: require "FlareController.mnd" remote flareController;
   14:  read *tmp93 processor8 "*signature"                          ...
   15:  jump *label49 notEqual *tmp93 "881dde114374c003:v1"          ...
        label *label50                                               BlockBuilder.mnd: require "MonoController.mnd" remote monoController;
   16:  read *tmp99 processor7 "*signature"                          ...
   17:  jump *label50 notEqual *tmp99 "0:v1"                         ...
   18:  set .leadSurplus 0                                           BlockBuilder.mnd: remote var
   19:  set .graphiteSurplus 20                                      ...
   20:  set .siliconSurplus 20                                       ...
   21:  set .siliconMonoSurplus 0                                    ...
   22:  set .metaglassSurplus 20                                     ...
   23:  write 511 bank1 511                                          BlockBuilder.mnd: external bank1[511] logPosition = 511;
   24:  set .positive 0                                              BlockBuilder.mnd: volatile var positive = 0, negative = 0;
   25:  set .negative 0                                              ...
        label *label51                                               BlockBuilder.mnd: do
   26:  ubind @poly                                                  BlockBuilder.mnd: builder = ubind(@poly);
   27:  set .builder @unit                                           ...
   28:  ulocate building core false @copper .coreX .coreY 0 .core    BlockBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   29:  jump *label51 equal .core null                               BlockBuilder.mnd: do
   30:  set *signature "77658b7b93afc77c:v1"                         BlockBuilder.mnd: #set target = 8;
        label *label54                                               ...
   31:  wait 1e12                                                    ...
   32:  jump *label54 always 0 0                                     ...
        label *label25                                               Actions.mnd: void mineOre(ore, amount, block)
   33:  op min :mineOre:amount :mineOre:amount 28                    Actions.mnd: amount = min(amount, capacity);
   34:  write :mineOre:amount processor2 ".transportTarget"          Actions.mnd: display.transportTarget = target;
   35:  write :mineOre:ore processor2 ".transportItem"               Actions.mnd: display.transportItem = item;
   36:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   37:  jump *label461 notEqual *tmp127 false                        ...
   38:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
   39:  stop                                                         Actions.mnd: stopProcessor();
        label *label461                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
   40:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label584                                              Actions.mnd: do
   41:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
   42:  jump *label585 equal *tmp108 null                            ...
   43:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label585                                              ...
   44:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
   45:  ucontrol within :locateOre:x :locateOre:y 6 *tmp111 0        Actions.mnd: while !within(x, y, RADIUS);
   46:  jump *label584 equal *tmp111 false                           Actions.mnd: do
   47:  sensor *tmp132 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   48:  jump *label98 equal *tmp132 :mineOre:ore                     ...
   49:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   50:  jump *label609 equal *tmp113 null                            ...
        label *label607                                              ...
   51:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
   52:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
   53:  jump *label607 notEqual *tmp113 null                         ...
        label *label609                                              ...
        label *label98                                               Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
   54:  write "Mining..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
   55:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label102                                              Actions.mnd: do
   56:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
   57:  op notEqual *tmp137 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
   58:  op notEqual *tmp138 :mineOre:item :mineOre:ore               ...
   59:  op land *tmp139 *tmp137 *tmp138                              ...
   60:  jump *label104 notEqual *tmp139 false                        ...
   61:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
   62:  jump *label104 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
   63:  jump *label109 notEqual .noTarget false                      Actions.mnd: if not noTarget then
   64:  sensor *tmp298 .core @copper                                 BlockBuilder.mnd: if core.@copper < targetCopper then return false; end;
   65:  jump *label549 greaterThanEq *tmp298 copper                  ...
   66:  set :targetMet*retval false                                  ...
   67:  jump *label563 always 0 0                                    ...
        label *label549                                              ...
   68:  sensor *tmp301 .core @lead                                   BlockBuilder.mnd: if core.@lead < targetLead then return false; end;
   69:  jump *label551 greaterThanEq *tmp301 lead                    ...
   70:  set :targetMet*retval false                                  ...
   71:  jump *label563 always 0 0                                    ...
        label *label551                                              ...
   72:  sensor *tmp304 .core @graphite                               BlockBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
   73:  jump *label553 greaterThanEq *tmp304 graphite                ...
   74:  set :targetMet*retval false                                  ...
   75:  jump *label563 always 0 0                                    ...
        label *label553                                              ...
   76:  sensor *tmp307 .core @silicon                                BlockBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
   77:  jump *label555 greaterThanEq *tmp307 silicon                 ...
   78:  set :targetMet*retval false                                  ...
   79:  jump *label563 always 0 0                                    ...
        label *label555                                              ...
   80:  sensor *tmp310 .core @titanium                               BlockBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
   81:  jump *label557 greaterThanEq *tmp310 titanium                ...
   82:  set :targetMet*retval false                                  ...
   83:  jump *label563 always 0 0                                    ...
        label *label557                                              ...
   84:  sensor *tmp313 .core @metaglass                              BlockBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
   85:  jump *label559 greaterThanEq *tmp313 metaglass               ...
   86:  set :targetMet*retval false                                  ...
   87:  jump *label563 always 0 0                                    ...
        label *label559                                              ...
   88:  sensor *tmp316 .core @thorium                                BlockBuilder.mnd: if core.@thorium < targetThorium then return false; end;
   89:  jump *label561 greaterThanEq *tmp316 thorium                 ...
   90:  set :targetMet*retval false                                  ...
   91:  jump *label563 always 0 0                                    ...
        label *label561                                              ...
   92:  set :targetMet*retval true                                   BlockBuilder.mnd: return true;
   93:  jump *label563 always 0 0                                    ...
        label *label563                                              Actions.mnd: if targetMet() then
   94:  jump *label104 notEqual :targetMet*retval false              ...
        label *label109                                              Actions.mnd: if not noTarget then
   95:  sensor *tmp146 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
   96:  jump *label102 lessThan *tmp146 :mineOre:amount              Actions.mnd: do
        label *label104                                              ...
   97:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
   98:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
   99:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  100:  jump *label666 notEqual *tmp117 :mineOre:ore                 ...
  101:  sensor *tmp115 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  102:  sensor *tmp116 :mineOre:block @y                             ...
  103:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  104:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  105:  jump *label660 notEqual *tmp105 false                        ...
        label *label658                                              ...
  106:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  107:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  108:  jump *label658 equal *tmp105 false                           ...
        label *label660                                              ...
  109:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label663                                              Actions.mnd: do
  110:  ucontrol itemDrop :mineOre:block 28 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  111:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  112:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  113:  sensor *tmp123 :mineOre:block :mineOre:ore                   ...
  114:  jump *label663 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  115:  jump *label671 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label666                                              ...
  116:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  117:  jump *label670 equal *tmp125 null                            ...
        label *label668                                              ...
  118:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  119:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  120:  jump *label668 notEqual *tmp125 null                         ...
        label *label670                                              ...
        label *label671                                              Actions.mnd: if @unit.@firstItem == item then
  121:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  122:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  123:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label26                                               Actions.mnd: void mineOre(ore, block)
  124:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  125:  write :mineOre.1:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  126:  write :mineOre.1:block processor2 ".block2"                  Actions.mnd: display.block2 = block;
  127:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, block);
  128:  set :mineOre:amount 28                                       ...
  129:  set :mineOre:block :mineOre.1:block                          ...
  130:  setaddr :mineOre*retaddr *label117                           ...
  131:  call *label25 *invalid :mineOre*retval                       ...
        label *label117                                              ...
  132:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore, block)
        label *label27                                               Actions.mnd: void mineOre(ore)
  133:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  134:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  135:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  136:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  137:  set :mineOre:amount 28                                       ...
  138:  set :mineOre:block .core                                     ...
  139:  setaddr :mineOre*retaddr *label120                           ...
  140:  call *label25 *invalid :mineOre*retval                       ...
        label *label120                                              ...
  141:  return :mineOre.2*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label28                                               Actions.mnd: void fetchBlock(block, item)
  142:  sensor *tmp151 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  143:  op min :transportStatus:target *tmp151 28                    ...
  144:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  145:  write :fetchBlock:item processor2 ".transportItem"           Actions.mnd: display.transportItem = item;
  146:  write "Fetching " processor2 ".status2"                      Actions.mnd: display.status2 = text;
  147:  write :fetchBlock:item processor2 ".item2"                   Actions.mnd: display.item2 = item;
  148:  write :fetchBlock:block processor2 ".block2"                 Actions.mnd: display.block2 = block;
  149:  sensor *tmp153 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  150:  sensor *tmp154 :fetchBlock:block @y                          ...
  151:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label573                                              Actions.mnd: do
  152:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  153:  jump *label574 equal *tmp108 null                            ...
  154:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label574                                              ...
  155:  ucontrol approach *tmp153 *tmp154 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  156:  ucontrol within *tmp153 *tmp154 6 *tmp111 0                  Actions.mnd: while !within(x, y, RADIUS);
  157:  jump *label573 equal *tmp111 false                           Actions.mnd: do
  158:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  159:  jump *label568 equal *tmp113 null                            ...
        label *label566                                              ...
  160:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  161:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  162:  jump *label566 notEqual *tmp113 null                         ...
        label *label568                                              ...
        label *label126                                              Actions.mnd: do
  163:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 28 0 0  Actions.mnd: itemTake(block, item, capacity);
  164:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  165:  op notEqual *tmp156 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  166:  op notEqual *tmp157 :fetchBlock:unitItem :fetchBlock:item    ...
  167:  op land *tmp158 *tmp156 *tmp157                              ...
  168:  jump *label129 equal *tmp158 false                           ...
  169:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label129                                              Actions.mnd: if unitItem != null and unitItem != item then
  170:  sensor *tmp160 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  171:  op lessThan *tmp161 *tmp160 28                               ...
  172:  sensor *tmp162 :fetchBlock:block :fetchBlock:item            ...
  173:  op land *tmp163 *tmp161 *tmp162                              ...
  174:  jump *label126 notEqual *tmp163 false                        Actions.mnd: do
  175:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  176:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  177:  jump *label641 notEqual *tmp117 :fetchBlock:item             ...
  178:  sensor *tmp115 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  179:  sensor *tmp116 .core @y                                      ...
  180:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  181:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  182:  jump *label635 notEqual *tmp105 false                        ...
        label *label633                                              ...
  183:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  184:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  185:  jump *label633 equal *tmp105 false                           ...
        label *label635                                              ...
  186:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label638                                              Actions.mnd: do
  187:  ucontrol itemDrop .core 28 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  188:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  189:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  190:  sensor *tmp123 .core :fetchBlock:item                        ...
  191:  jump *label638 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  192:  jump *label646 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label641                                              ...
  193:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  194:  jump *label645 equal *tmp125 null                            ...
        label *label643                                              ...
  195:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  196:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  197:  jump *label643 notEqual *tmp125 null                         ...
        label *label645                                              ...
        label *label646                                              Actions.mnd: if @unit.@firstItem == item then
  198:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  199:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  200:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label29                                               Actions.mnd: void supplyBlock(block, ore)
  201:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  202:  write :supplyBlock:ore processor2 ".item2"                   Actions.mnd: display.item2 = item;
  203:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  204:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  205:  sensor *tmp165 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  206:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  207:  jump *label134 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  208:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  209:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  210:  set :mineOre:block :supplyBlock:block                        ...
  211:  setaddr :mineOre*retaddr *label136                           ...
  212:  call *label25 *invalid :mineOre*retval                       ...
        label *label136                                              ...
        label *label134                                              Actions.mnd: if missing > 0 then
  213:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label32                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  214:  read *tmp181 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  215:  op sub *tmp182 *tmp181 74                                    ...
  216:  lookup block :unpackCfg:type *tmp182                         ...
  217:  read *tmp185 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  218:  op sub *tmp186 *tmp185 74                                    ...
  219:  op div :unpackCfg:x *tmp186 2                                ...
  220:  read *tmp189 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  221:  op sub *tmp190 *tmp189 74                                    ...
  222:  op div :unpackCfg:y *tmp190 2                                ...
  223:  read *tmp193 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  224:  op sub :unpackCfg:rotation *tmp193 74                        ...
  225:  read *tmp196 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  226:  op sub :unpackCfg:ind *tmp196 74                             ...
  227:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  228:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  229:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  230:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  231:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  232:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  233:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  234:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label38                                               BlockBuilder.mnd: void supplyBaseLocal()
  235:  op add *tmp206 .siliconMonoSurplus silicon                   BlockBuilder.mnd: monoController.sandTarget = max(0, siliconMonoSurplus + targetSilicon - core.@silicon);
  236:  sensor *tmp207 .core @silicon                                ...
  237:  op sub *tmp208 *tmp206 *tmp207                               ...
  238:  op max *tmp209 0 *tmp208                                     ...
  239:  write *tmp209 processor7 ".sandTarget"                       ...
  240:  jump *label150 equal .thoriumContainer false                 BlockBuilder.mnd: if thoriumContainer then
  241:  write "Phase 2: servicing thorium drill" processor2 ".status Actions.mnd: display.status1 = text;
  242:  sensor *tmp211 .thoriumBattery @totalPower                   BlockBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  243:  jump *label154 greaterThanEq *tmp211 2000                    ...
  244:  sensor *tmp214 .thoriumGenerator @coal                       BlockBuilder.mnd: if thoriumGenerator.@coal == 0 then
  245:  jump *label156 notEqual *tmp214 0                            ...
  246:  sensor *tmp217 .core @coal                                   BlockBuilder.mnd: if core.@coal < 50 then
  247:  jump *label158 greaterThanEq *tmp217 50                      ...
  248:  set :supplyBlock:block .thoriumGenerator                     BlockBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  249:  set :supplyBlock:ore @coal                                   ...
  250:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  251:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  252:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  253:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  254:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  255:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  256:  jump *label159 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  257:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  258:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  259:  set :mineOre:block :supplyBlock:block                        ...
  260:  setaddr :mineOre*retaddr *label159                           ...
  261:  call *label25 *invalid :mineOre*retval                       ...
        label *label158                                              BlockBuilder.mnd: if core.@coal < 50 then
  262:  set :supplyBlockFromCore:target .thoriumGenerator            BlockBuilder.mnd: supplyBlockFromCore(thoriumGenerator, @coal);
  263:  sensor *tmp169 :supplyBlockFromCore:target @itemCapacity     Actions.mnd: var cap = min(target.@itemCapacity, capacity);
  264:  op min :supplyBlockFromCore:cap *tmp169 28                   ...
  265:  set :transportStatus:target :supplyBlockFromCore:cap         Actions.mnd: transportStatus(cap, item);
  266:  write :supplyBlockFromCore:cap processor2 ".transportTarget" Actions.mnd: display.transportTarget = target;
  267:  write @coal processor2 ".transportItem"                      Actions.mnd: display.transportItem = item;
  268:  write "Transferring " processor2 ".status2"                  Actions.mnd: display.status2 = text;
  269:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  270:  write :supplyBlockFromCore:target processor2 ".block2"       Actions.mnd: display.block2 = block;
  271:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label593                                              Actions.mnd: do
  272:  sensor *tmp108 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  273:  jump *label594 equal *tmp108 null                            ...
  274:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label594                                              ...
  275:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  276:  ucontrol within .coreX .coreY 6 *tmp111 0                    Actions.mnd: while !within(x, y, RADIUS);
  277:  jump *label593 equal *tmp111 false                           Actions.mnd: do
  278:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  279:  jump *label615 equal *tmp113 null                            ...
        label *label613                                              ...
  280:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  281:  sensor *tmp113 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  282:  jump *label613 notEqual *tmp113 null                         ...
        label *label615                                              ...
        label *label469                                              Actions.mnd: do
  283:  ucontrol itemTake .core @coal :supplyBlockFromCore:cap 0 0   Actions.mnd: itemTake(core, item, cap);
  284:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  285:  op notEqual *tmp172 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  286:  op notEqual *tmp173 :supplyBlockFromCore:unitItem @coal      ...
  287:  op land *tmp174 *tmp172 *tmp173                              ...
  288:  jump *label470 equal *tmp174 false                           ...
  289:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label470                                              Actions.mnd: if unitItem != null and unitItem != item then
  290:  sensor *tmp176 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < cap and core.sensor(item);
  291:  op lessThan *tmp177 *tmp176 :supplyBlockFromCore:cap         ...
  292:  sensor *tmp178 .core @coal                                   ...
  293:  op land *tmp179 *tmp177 *tmp178                              ...
  294:  jump *label469 notEqual *tmp179 false                        Actions.mnd: do
  295:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  296:  sensor *tmp117 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  297:  jump *label691 notEqual *tmp117 @coal                        ...
  298:  sensor *tmp115 :supplyBlockFromCore:target @x                Actions.mnd: moveTo(block.@x, block.@y, radius);
  299:  sensor *tmp116 :supplyBlockFromCore:target @y                ...
  300:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  301:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  302:  jump *label685 notEqual *tmp105 false                        ...
        label *label683                                              ...
  303:  ucontrol approach *tmp115 *tmp116 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  304:  ucontrol within *tmp115 *tmp116 6 *tmp105 0                  Actions.mnd: while !within(x, y, radius) do
  305:  jump *label683 equal *tmp105 false                           ...
        label *label685                                              ...
  306:  sensor :depositItems:cap :supplyBlockFromCore:target @itemCa Actions.mnd: var cap = block.@itemCapacity;
        label *label688                                              Actions.mnd: do
  307:  ucontrol itemDrop :supplyBlockFromCore:target 28 0 0 0       Actions.mnd: itemDrop(block, capacity);
  308:  sensor *tmp121 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  309:  op mul *tmp122 *tmp121 :depositItems:cap                     ...
  310:  sensor *tmp123 :supplyBlockFromCore:target @coal             ...
  311:  jump *label688 greaterThan *tmp122 *tmp123                   Actions.mnd: do
  312:  jump *label696 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label691                                              ...
  313:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  314:  jump *label695 equal *tmp125 null                            ...
        label *label693                                              ...
  315:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  316:  sensor *tmp125 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  317:  jump *label693 notEqual *tmp125 null                         ...
        label *label695                                              ...
        label *label696                                              Actions.mnd: if @unit.@firstItem == item then
  318:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  319:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
        label *label159                                              BlockBuilder.mnd: if core.@coal < 50 then
        label *label156                                              BlockBuilder.mnd: if thoriumGenerator.@coal == 0 then
        label *label154                                              BlockBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  320:  set :fetchBlock:block .thoriumContainer                      BlockBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  321:  set :fetchBlock:item @thorium                                ...
  322:  setaddr :fetchBlock*retaddr *label162                        ...
  323:  call *label28 *invalid :fetchBlock*retval                    ...
        label *label162                                              ...
  324:  sensor *tmp220 .core @thorium                                BlockBuilder.mnd: if core.@thorium > 400 then
  325:  jump *label151 lessThanEq *tmp220 400                        ...
  326:  write 0 AÕFFJS-micro-processor9 ".monoTarget"                BlockBuilder.mnd: processor.monoTarget = target;
  327:  write 4 AÕFFJS-micro-processor9 ".polyTarget"                BlockBuilder.mnd: processor.polyTarget = target;
  328:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if thoriumContainer then
        label *label150                                              ...
  329:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 BlockBuilder.mnd: elsif processor.monos > 1 then
  330:  jump *label167 lessThanEq *tmp81 1                           ...
  331:  write "Phase 1: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  332:  set :mineOre.2:ore @coal                                     BlockBuilder.mnd: mineOre(@coal);
  333:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  334:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  335:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  336:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  337:  set :mineOre:amount 28                                       ...
  338:  set :mineOre:block .core                                     ...
  339:  setaddr :mineOre*retaddr *label623                           ...
  340:  call *label25 *invalid :mineOre*retval                       ...
        label *label623                                              ...
  341:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: elsif processor.monos > 1 then
        label *label167                                              ...
  342:  set :supplyBase0:supplied false                              BlockBuilder.mnd: var supplied = false;
  343:  jump *label173 notEqual A©JNJP-unloader6 null                BlockBuilder.mnd: if unloader1 == null then
  344:  sensor *tmp227 .core @graphite                               BlockBuilder.mnd: if core.@graphite < targetGraphite then
  345:  jump *label175 greaterThanEq *tmp227 graphite                ...
  346:  sensor *tmp230 AJEMJJ-graphite-press0 @coal                  BlockBuilder.mnd: if press.@coal < 5 then
  347:  jump *label177 greaterThanEq *tmp230 5                       ...
  348:  write "Goal 1: graphite requirement" processor2 ".status1"   Actions.mnd: display.status1 = text;
  349:  set :supplyBlock:block AJEMJJ-graphite-press0                BlockBuilder.mnd: supplyBlock(press, @coal);
  350:  set :supplyBlock:ore @coal                                   ...
  351:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  352:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  353:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  354:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  355:  sensor *tmp165 :supplyBlock:block @coal                      Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  356:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp1 ...
  357:  jump *label716 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  358:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  359:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  360:  set :mineOre:block :supplyBlock:block                        ...
  361:  setaddr :mineOre*retaddr *label715                           ...
  362:  call *label25 *invalid :mineOre*retval                       ...
        label *label715                                              ...
        label *label716                                              Actions.mnd: if missing > 0 then
  363:  set :supplyBase0:supplied true                               BlockBuilder.mnd: supplied = true;
        label *label177                                              BlockBuilder.mnd: if press.@coal < 5 then
        label *label175                                              BlockBuilder.mnd: if core.@graphite < targetGraphite then
  364:  sensor *tmp233 AJTJK-battery1 @totalPower                   BlockBuilder.mnd: if battery1.@totalPower < powerTarget then
  365:  jump *label181 greaterThanEq *tmp233 .powerTarget            ...
  366:  sensor *tmp236 AJRJM-combustion-generator3 @coal            BlockBuilder.mnd: if generator.@coal < 2 then
  367:  jump *label183 greaterThanEq *tmp236 2                       ...
  368:  write "Goal 4: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  369:  set :supplyBlock:block AJRJM-combustion-generator3          BlockBuilder.mnd: supplyBlock(generator, @coal);
  370:  set :supplyBlock:ore @coal                                   ...
  371:  setaddr :supplyBlock*retaddr *label186                       ...
  372:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label186                                              ...
  373:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: return;
        label *label183                                              BlockBuilder.mnd: if generator.@coal < 2 then
        label *label181                                              BlockBuilder.mnd: if battery1.@totalPower < powerTarget then
  374:  sensor *tmp239 .core @silicon                                BlockBuilder.mnd: if core.@silicon < targetSilicon then
  375:  jump *label187 greaterThanEq *tmp239 silicon                 ...
  376:  sensor *tmp242 ALMQJN-silicon-smelter4 @coal                 BlockBuilder.mnd: if smelter.@coal < 5 then
  377:  jump *label189 greaterThanEq *tmp242 5                       ...
  378:  write "Goal 2: coal for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  379:  set :supplyBlock:block ALMQJN-silicon-smelter4               BlockBuilder.mnd: supplyBlock(smelter, @coal);
  380:  set :supplyBlock:ore @coal                                   ...
  381:  setaddr :supplyBlock*retaddr *label192                       ...
  382:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label192                                              ...
  383:  set :supplyBase0:supplied true                               BlockBuilder.mnd: supplied = true;
  384:  jump *label190 always 0 0                                    BlockBuilder.mnd: if smelter.@coal < 5 then
        label *label189                                              ...
  385:  sensor *tmp245 ALMQJN-silicon-smelter4 @sand                 BlockBuilder.mnd: elsif smelter.@sand < 5 then
  386:  jump *label193 greaterThanEq *tmp245 5                       ...
  387:  jump *label195 equal .scrap false                            BlockBuilder.mnd: if scrap then
  388:  sensor *tmp249 AXPRJe-pulverizer27 @scrap                    BlockBuilder.mnd: if pulverizer1.@scrap < 10 then
  389:  jump *label196 greaterThanEq *tmp249 10                      ...
  390:  write "Goal 3a: scrap for silicon requirement" processor2 ". Actions.mnd: display.status1 = text;
  391:  set :supplyBlock:block AXPRJe-pulverizer27                   BlockBuilder.mnd: supplyBlock(pulverizer1, @scrap);
  392:  set :supplyBlock:ore @scrap                                  ...
  393:  setaddr :supplyBlock*retaddr *label200                       ...
  394:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label200                                              ...
  395:  set :supplyBase0:supplied true                               BlockBuilder.mnd: supplied = true;
  396:  jump *label196 always 0 0                                    BlockBuilder.mnd: if scrap then
        label *label195                                              ...
  397:  write "Goal 3: sand for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  398:  set :supplyBlock:block ALMQJN-silicon-smelter4               BlockBuilder.mnd: supplyBlock(smelter, @sand);
  399:  set :supplyBlock:ore @sand                                   ...
  400:  setaddr :supplyBlock*retaddr *label202                       ...
  401:  call *label29 *invalid :supplyBlock*retval                   ...
        label *label202                                              ...
  402:  set :supplyBase0:supplied true                               BlockBuilder.mnd: supplied = true;
        label *label196                                              BlockBuilder.mnd: if scrap then
        label *label193                                              BlockBuilder.mnd: elsif smelter.@sand < 5 then
        label *label190                                              BlockBuilder.mnd: if smelter.@coal < 5 then
        label *label187                                              BlockBuilder.mnd: if core.@silicon < targetSilicon then
        label *label173                                              BlockBuilder.mnd: if unloader1 == null then
  403:  set *tmp254 100                                              BlockBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(5, targetTitanium - core.@titanium) : 100;
  404:  sensor *tmp252 .core @titanium                               ...
  405:  jump *label204 greaterThanEq *tmp252 titanium                ...
  406:  sensor *tmp255 .core @titanium                               ...
  407:  op sub *tmp256 titanium *tmp255                              ...
  408:  op min *tmp254 5 *tmp256                                     ...
        label *label204                                              ...
  409:  sensor *tmp258 .titaniumDrill @titanium                      BlockBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  410:  jump *label205 greaterThanEq *tmp258 *tmp254                 ...
  411:  jump *label206 notEqual :supplyBase0:supplied false          BlockBuilder.mnd: if !supplied then
  412:  sensor *tmp263 AJTJK-battery1 @totalPower                   BlockBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  413:  op mul *tmp264 A©JNJP-unloader6 .powerTarget                 ...
  414:  jump *label209 greaterThanEq *tmp263 *tmp264                 ...
  415:  write "Goal 5: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  416:  set :mineOre.2:ore @coal                                     BlockBuilder.mnd: mineOre(@coal);
  417:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  418:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  419:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  420:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  421:  set :mineOre:amount 28                                       ...
  422:  set :mineOre:block .core                                     ...
  423:  setaddr :mineOre*retaddr *label710                           ...
  424:  call *label25 *invalid :mineOre*retval                       ...
        label *label710                                              ...
  425:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label209                                              ...
  426:  sensor *tmp267 .core @silicon                                BlockBuilder.mnd: elsif core.@silicon < targetSilicon then
  427:  jump *label213 greaterThanEq *tmp267 silicon                 ...
  428:  jump *label215 equal .scrap false                            BlockBuilder.mnd: if scrap then
  429:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  430:  jump *label218 equal A¨SSJi-container31 false                BlockBuilder.mnd: if container_a then
  431:  sensor :supplyBase0:coal .core @coal                         BlockBuilder.mnd: var coal = core.@coal;
  432:  sensor :supplyBase0:sand A¨SSJi-container31 @sand            BlockBuilder.mnd: var sand = container_a.@sand;
  433:  select *tmp275 lessThan :supplyBase0:coal :supplyBase0:sand  BlockBuilder.mnd: var ore = coal < sand ? @coal : @scrap;
  434:  select *tmp277 lessThan :supplyBase0:coal :supplyBase0:sand  BlockBuilder.mnd: var block = coal < sand ? core : container_a;
  435:  set :mineOre.1:ore *tmp275                                   BlockBuilder.mnd: mineOre(ore, block);
  436:  set :mineOre.1:block *tmp277                                 ...
  437:  setaddr :mineOre.1*retaddr *label224                         ...
  438:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label224                                              ...
  439:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if container_a then
        label *label218                                              ...
  440:  set :mineOre.2:ore @coal                                     BlockBuilder.mnd: mineOre(@coal);
  441:  setaddr :mineOre.2*retaddr *label225                         ...
  442:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label225                                              ...
  443:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if scrap then
        label *label215                                              ...
  444:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  445:  sensor :supplyBase0:coal.1 .core @coal                       BlockBuilder.mnd: var coal = core.@coal;
  446:  sensor :supplyBase0:sand.1 .core @sand                       BlockBuilder.mnd: var sand = core.@sand;
  447:  select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBa BlockBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  448:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  449:  write :mineOre.2:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  450:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  451:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  452:  set :mineOre:amount 28                                       ...
  453:  set :mineOre:block .core                                     ...
  454:  setaddr :mineOre*retaddr *label722                           ...
  455:  call *label25 *invalid :mineOre*retval                       ...
        label *label722                                              ...
  456:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label213                                              ...
  457:  sensor *tmp282 .core @copper                                 BlockBuilder.mnd: elsif core.@copper < targetCopper then
  458:  jump *label230 greaterThanEq *tmp282 copper                  ...
  459:  write "Goal 7: copper requirement" processor2 ".status1"     Actions.mnd: display.status1 = text;
  460:  set :mineOre.2:ore @copper                                   BlockBuilder.mnd: mineOre(@copper);
  461:  setaddr :mineOre.2*retaddr *label233                         ...
  462:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label233                                              ...
  463:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: elsif core.@copper < targetCopper then
        label *label230                                              ...
  464:  sensor *tmp285 .core @lead                                   BlockBuilder.mnd: elsif core.@lead < targetLead then
  465:  jump *label234 greaterThanEq *tmp285 lead                    ...
  466:  write "Goal 8: lead requirement" processor2 ".status1"       Actions.mnd: display.status1 = text;
  467:  set :mineOre.2:ore @lead                                     BlockBuilder.mnd: mineOre(@lead);
  468:  setaddr :mineOre.2*retaddr *label237                         ...
  469:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label237                                              ...
  470:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: elsif core.@lead < targetLead then
        label *label234                                              ...
  471:  sensor *tmp288 .core @metaglass                              BlockBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  472:  jump *label238 greaterThanEq *tmp288 metaglass               ...
  473:  write "Goal 9: metaglass requirement" processor2 ".status1"  Actions.mnd: display.status1 = text;
  474:  jump *label241 equal .scrap false                            BlockBuilder.mnd: if scrap then
  475:  set :mineOre.1:ore @scrap                                    BlockBuilder.mnd: mineOre(@scrap, sandContainer);
  476:  set :mineOre.1:block .sandContainer                          ...
  477:  setaddr :mineOre.1*retaddr *label243                         ...
  478:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label243                                              ...
  479:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if scrap then
        label *label241                                              ...
  480:  set :mineOre.2:ore @sand                                     BlockBuilder.mnd: mineOre(@sand);
  481:  setaddr :mineOre.2*retaddr *label244                         ...
  482:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label244                                              ...
  483:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label238                                              ...
  484:  write "Goal 10: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  485:  jump *label246 equal A¨SSJi-container31 false                BlockBuilder.mnd: if container_a then
  486:  set :mineOre.1:ore @scrap                                    BlockBuilder.mnd: mineOre(@scrap, container_a);
  487:  set :mineOre.1:block A¨SSJi-container31                      ...
  488:  setaddr :mineOre.1*retaddr *label248                         ...
  489:  call *label26 *invalid :mineOre.1*retval                     ...
        label *label248                                              ...
  490:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if container_a then
        label *label246                                              ...
  491:  sensor *tmp293 .core @coal                                   BlockBuilder.mnd: var ore = scrap or core.@coal <= core.@sand ? @coal : @sand;
  492:  sensor *tmp294 .core @sand                                   ...
  493:  op lessThanEq *tmp295 *tmp293 *tmp294                        ...
  494:  op or *tmp296 .scrap *tmp295                                 ...
  495:  select :mineOre.2:ore notEqual *tmp296 false @coal @sand     ...
  496:  setaddr :mineOre.2*retaddr *label251                         BlockBuilder.mnd: mineOre(ore);
  497:  call *label27 *invalid :mineOre.2*retval                     ...
        label *label251                                              ...
  498:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label205                                              ...
  499:  write "Goal 11: Fetching titanium" processor2 ".status1"     Actions.mnd: display.status1 = text;
  500:  set :fetchBlock:block .titaniumDrill                         BlockBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  501:  set :fetchBlock:item @titanium                               ...
  502:  setaddr :fetchBlock*retaddr *label253                        ...
  503:  call *label28 *invalid :fetchBlock*retval                    ...
        label *label253                                              ...
        label *label206                                              BlockBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label151                                              BlockBuilder.mnd: if thoriumContainer then
  504:  return :supplyBaseLocal*retaddr                              BlockBuilder.mnd: void supplyBaseLocal()
        label *label39                                               BlockBuilder.mnd: def targetMet()
  505:  sensor *tmp298 .core @copper                                 BlockBuilder.mnd: if core.@copper < targetCopper then return false; end;
  506:  jump *label255 greaterThanEq *tmp298 copper                  ...
  507:  set :targetMet*retval false                                  ...
  508:  return :targetMet*retaddr                                    ...
        label *label255                                              ...
  509:  sensor *tmp301 .core @lead                                   BlockBuilder.mnd: if core.@lead < targetLead then return false; end;
  510:  jump *label257 greaterThanEq *tmp301 lead                    ...
  511:  set :targetMet*retval false                                  ...
  512:  return :targetMet*retaddr                                    ...
        label *label257                                              ...
  513:  sensor *tmp304 .core @graphite                               BlockBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  514:  jump *label259 greaterThanEq *tmp304 graphite                ...
  515:  set :targetMet*retval false                                  ...
  516:  return :targetMet*retaddr                                    ...
        label *label259                                              ...
  517:  sensor *tmp307 .core @silicon                                BlockBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  518:  jump *label261 greaterThanEq *tmp307 silicon                 ...
  519:  set :targetMet*retval false                                  ...
  520:  return :targetMet*retaddr                                    ...
        label *label261                                              ...
  521:  sensor *tmp310 .core @titanium                               BlockBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  522:  jump *label263 greaterThanEq *tmp310 titanium                ...
  523:  set :targetMet*retval false                                  ...
  524:  return :targetMet*retaddr                                    ...
        label *label263                                              ...
  525:  sensor *tmp313 .core @metaglass                              BlockBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  526:  jump *label265 greaterThanEq *tmp313 metaglass               ...
  527:  set :targetMet*retval false                                  ...
  528:  return :targetMet*retaddr                                    ...
        label *label265                                              ...
  529:  sensor *tmp316 .core @thorium                                BlockBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  530:  jump *label267 greaterThanEq *tmp316 thorium                 ...
  531:  set :targetMet*retval false                                  ...
  532:  return :targetMet*retaddr                                    ...
        label *label267                                              ...
  533:  set :targetMet*retval true                                   BlockBuilder.mnd: return true;
  534:  return :targetMet*retaddr                                    ...
        label *label40                                               BlockBuilder.mnd: void meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  535:  op sign :meetTargetLocal:count :meetTargetLocal:copper 0     BlockBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  536:  op sign *tmp320 :meetTargetLocal:lead 0                      ...
  537:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  538:  op sign *tmp320 :meetTargetLocal:graphite 0                  ...
  539:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  540:  op sign *tmp320 :meetTargetLocal:silicon 0                   ...
  541:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  542:  op sign *tmp320 :meetTargetLocal:titanium 0                  ...
  543:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  544:  op sign *tmp320 :meetTargetLocal:metaglass 0                 ...
  545:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  546:  op sign *tmp320 :meetTargetLocal:thorium 0                   ...
  547:  op add :meetTargetLocal:count :meetTargetLocal:count *tmp320 ...
  548:  write :meetTargetLocal:count processor2 ".totalTargets"      BlockBuilder.mnd: display.totalTargets = count;
  549:  write :meetTargetLocal:block processor2 ".nextBlock"         BlockBuilder.mnd: display.nextBlock = block;
  550:  write :meetTargetLocal:copper processor2 ".targetCopper"     BlockBuilder.mnd: display.targetCopper = copper;
  551:  write :meetTargetLocal:lead processor2 ".targetLead"         BlockBuilder.mnd: display.targetLead = lead;
  552:  write :meetTargetLocal:graphite processor2 ".targetGraphite" BlockBuilder.mnd: display.targetGraphite = graphite;
  553:  write :meetTargetLocal:silicon processor2 ".targetSilicon"   BlockBuilder.mnd: display.targetSilicon = silicon;
  554:  write :meetTargetLocal:titanium processor2 ".targetTitanium" BlockBuilder.mnd: display.targetTitanium = titanium;
  555:  write :meetTargetLocal:metaglass processor2 ".targetMetaglas BlockBuilder.mnd: display.targetMetaglass = metaglass;
  556:  write :meetTargetLocal:thorium processor2 ".targetThorium"   BlockBuilder.mnd: display.targetThorium = thorium;
  557:  set copper :meetTargetLocal:copper                           BlockBuilder.mnd: targetCopper = copper;
  558:  op add lead :meetTargetLocal:lead .leadSurplus               BlockBuilder.mnd: targetLead = lead + leadSurplus;
  559:  set graphite :meetTargetLocal:graphite                       BlockBuilder.mnd: targetGraphite = graphite;
  560:  set silicon :meetTargetLocal:silicon                         BlockBuilder.mnd: targetSilicon = silicon;
  561:  set titanium :meetTargetLocal:titanium                       BlockBuilder.mnd: targetTitanium = titanium;
  562:  set metaglass :meetTargetLocal:metaglass                     BlockBuilder.mnd: targetMetaglass = metaglass;
  563:  set thorium :meetTargetLocal:thorium                         BlockBuilder.mnd: targetThorium = thorium;
  564:  set .noTarget :meetTargetLocal:isNoTarget                    BlockBuilder.mnd: noTarget = isNoTarget;
  565:  op add *tmp322 :meetTargetLocal:graphite .graphiteSurplus    BlockBuilder.mnd: processor.pressTarget = graphite + graphiteSurplus;
  566:  write *tmp322 AÕFFJS-micro-processor9 ".pressTarget"         ...
  567:  op add *tmp323 :meetTargetLocal:silicon .siliconSurplus      BlockBuilder.mnd: processor.smelterTarget = silicon + siliconSurplus;
  568:  write *tmp323 AÕFFJS-micro-processor9 ".smelterTarget"       ...
  569:  op add *tmp324 :meetTargetLocal:metaglass .metaglassSurplus  BlockBuilder.mnd: processor.kilnTarget = metaglass + metaglassSurplus;
  570:  write *tmp324 AÕFFJS-micro-processor9 ".kilnTarget"          ...
  571:  op add *tmp325 :meetTargetLocal:lead .leadSurplus            BlockBuilder.mnd: processor.leadReserve = lead + leadSurplus;
  572:  write *tmp325 AÕFFJS-micro-processor9 ".leadReserve"         ...
  573:  op sign *tmp326 :meetTargetLocal:silicon 0                   BlockBuilder.mnd: processor.siliconReserve = silicon + sign(silicon) * 20;
  574:  op mul *tmp327 *tmp326 20                                    ...
  575:  op add *tmp328 :meetTargetLocal:silicon *tmp327              ...
  576:  write *tmp328 AÕFFJS-micro-processor9 ".siliconReserve"      ...
  577:  op sign *tmp329 :meetTargetLocal:graphite 0                  BlockBuilder.mnd: processor.graphiteReserve = graphite + sign(graphite) * 20;
  578:  op mul *tmp330 *tmp329 20                                    ...
  579:  op add *tmp331 :meetTargetLocal:graphite *tmp330             ...
  580:  write *tmp331 AÕFFJS-micro-processor9 ".graphiteReserve"     ...
  581:  write lead processor7 ".leadTarget"                          BlockBuilder.mnd: monoController.leadTarget = targetLead;
  582:  write :meetTargetLocal:copper processor7 ".copperTarget"     BlockBuilder.mnd: monoController.copperTarget = targetCopper;
  583:  setaddr :targetMet*retaddr *label283                         BlockBuilder.mnd: while !targetMet() do
  584:  call *label39 *invalid :targetMet*retval                     ...
        label *label283                                              ...
  585:  jump *label282 notEqual :targetMet*retval false              ...
        label *label599                                              ...
  586:  setaddr :supplyBaseLocal*retaddr *label284                   BlockBuilder.mnd: supplyBaseLocal();
  587:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label284                                              ...
  588:  setaddr :targetMet*retaddr *label600                         BlockBuilder.mnd: while !targetMet() do
  589:  call *label39 *invalid :targetMet*retval                     ...
        label *label600                                              ...
  590:  jump *label599 equal :targetMet*retval false                 ...
        label *label282                                              ...
  591:  jump *label285 equal :meetTargetLocal:forBuild false         BlockBuilder.mnd: if forBuild then
  592:  write false AÕFFJS-micro-processor9 ":buildStart*finished"   BlockBuilder.mnd: processor.buildStart();
  593:  write 1 AÕFFJS-micro-processor9 "@counter"                   ...
        label *label287                                              ...
  594:  wait 1e-15                                                   ...
  595:  read *tmp335 AÕFFJS-micro-processor9 ":buildStart*finished"  ...
  596:  jump *label287 equal *tmp335 false                           ...
  597:  setaddr :targetMet*retaddr *label291                         BlockBuilder.mnd: while !targetMet() do
  598:  call *label39 *invalid :targetMet*retval                     ...
        label *label291                                              ...
  599:  jump *label290 notEqual :targetMet*retval false              ...
        label *label618                                              ...
  600:  setaddr :supplyBaseLocal*retaddr *label292                   BlockBuilder.mnd: supplyBaseLocal();
  601:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label292                                              ...
  602:  setaddr :targetMet*retaddr *label619                         BlockBuilder.mnd: while !targetMet() do
  603:  call *label39 *invalid :targetMet*retval                     ...
        label *label619                                              ...
  604:  jump *label618 equal :targetMet*retval false                 ...
        label *label290                                              ...
        label *label285                                              BlockBuilder.mnd: if forBuild then
  605:  return :meetTargetLocal*retaddr                              BlockBuilder.mnd: void meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
        label *label6                                                BlockBuilder.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  606:  set :meetTargetLocal:block :meetTarget:block                 BlockBuilder.mnd: meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget);
  607:  set :meetTargetLocal:copper :meetTarget:copper               ...
  608:  set :meetTargetLocal:lead :meetTarget:lead                   ...
  609:  set :meetTargetLocal:graphite :meetTarget:graphite           ...
  610:  set :meetTargetLocal:silicon :meetTarget:silicon             ...
  611:  set :meetTargetLocal:titanium :meetTarget:titanium           ...
  612:  set :meetTargetLocal:metaglass :meetTarget:metaglass         ...
  613:  set :meetTargetLocal:thorium :meetTarget:thorium             ...
  614:  set :meetTargetLocal:forBuild :meetTarget:forBuild           ...
  615:  set :meetTargetLocal:isNoTarget :meetTarget:isNoTarget       ...
  616:  setaddr :meetTargetLocal*retaddr *label294                   ...
  617:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label294                                              ...
  618:  set :meetTarget*finished true                                BlockBuilder.mnd: remote void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  619:  jump *label54 always 0 0                                     ...
        label *label7                                                BlockBuilder.mnd: remote void meetTargetCfg(cfg)
  620:  set :unpackCfg:cfg :meetTargetCfg:cfg                        BlockBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  621:  setaddr :unpackCfg*retaddr *label296                         ...
  622:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label296                                              ...
  623:  set :meetTargetLocal:block :unpackCfg:type                   BlockBuilder.mnd: meetTargetLocal(type, cu, pb, gr, si, ti, mg, th, false, false);
  624:  set :meetTargetLocal:copper :unpackCfg:cu                    ...
  625:  set :meetTargetLocal:lead :unpackCfg:pb                      ...
  626:  set :meetTargetLocal:graphite :unpackCfg:gr                  ...
  627:  set :meetTargetLocal:silicon :unpackCfg:si                   ...
  628:  set :meetTargetLocal:titanium :unpackCfg:ti                  ...
  629:  set :meetTargetLocal:metaglass :unpackCfg:mg                 ...
  630:  set :meetTargetLocal:thorium :unpackCfg:th                   ...
  631:  set :meetTargetLocal:forBuild false                          ...
  632:  set :meetTargetLocal:isNoTarget false                        ...
  633:  setaddr :meetTargetLocal*retaddr *label297                   ...
  634:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label297                                              ...
  635:  set :meetTargetCfg*finished true                             BlockBuilder.mnd: remote void meetTargetCfg(cfg)
  636:  jump *label54 always 0 0                                     ...
        label *label41                                               BlockBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  637:  op notEqual *tmp338 AÕFFJS-micro-processor9 null             BlockBuilder.mnd: meetTargetLocal(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, processor != null, false);
  638:  set :meetTargetLocal:block :buildBlock:block                 ...
  639:  set :meetTargetLocal:copper :buildBlock:copper               ...
  640:  set :meetTargetLocal:lead :buildBlock:lead                   ...
  641:  set :meetTargetLocal:graphite :buildBlock:graphite           ...
  642:  set :meetTargetLocal:silicon :buildBlock:silicon             ...
  643:  set :meetTargetLocal:titanium :buildBlock:titanium           ...
  644:  set :meetTargetLocal:metaglass :buildBlock:metaglass         ...
  645:  set :meetTargetLocal:thorium :buildBlock:thorium             ...
  646:  set :meetTargetLocal:forBuild *tmp338                        ...
  647:  set :meetTargetLocal:isNoTarget false                        ...
  648:  setaddr :meetTargetLocal*retaddr *label299                   ...
  649:  call *label40 *invalid :meetTargetLocal*retval               ...
        label *label299                                              ...
  650:  set :buildBlockAtLocal:block :buildBlock:block               BlockBuilder.mnd: var built = buildBlockAtLocal(block, x, y, rotation, config, index);
  651:  set :buildBlockAtLocal:x :buildBlock:x                       ...
  652:  set :buildBlockAtLocal:y :buildBlock:y                       ...
  653:  set :buildBlockAtLocal:rotation :buildBlock:rotation         ...
  654:  set :buildBlockAtLocal:config :buildBlock:config             ...
  655:  set :buildBlockAtLocal:index :buildBlock:index               ...
  656:  setaddr :buildBlockAtLocal*retaddr *label300                 ...
  657:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label300                                              ...
  658:  write false AÕFFJS-micro-processor9 ":buildStop*finished"    BlockBuilder.mnd: async(processor.buildStop());
  659:  write 2 AÕFFJS-micro-processor9 "@counter"                   ...
  660:  set :buildBlock*retval :buildBlockAtLocal*retval             BlockBuilder.mnd: return built;
  661:  return :buildBlock*retaddr                                   BlockBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label8                                                BlockBuilder.mnd: remote def buildRemoteBlock(cfg, x, y)
  662:  op add *tmp339 :buildRemoteBlock:x :buildRemoteBlock:y       BlockBuilder.mnd: if x + y > 0 then
  663:  jump *label302 lessThanEq *tmp339 0                          ...
  664:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     BlockBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  665:  setaddr :unpackCfg*retaddr *label304                         ...
  666:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label304                                              ...
  667:  set :buildBlock:block :unpackCfg:type                        BlockBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  668:  set :buildBlock:x :buildRemoteBlock:x                        ...
  669:  set :buildBlock:y :buildRemoteBlock:y                        ...
  670:  set :buildBlock:copper :unpackCfg:cu                         ...
  671:  set :buildBlock:lead :unpackCfg:pb                           ...
  672:  set :buildBlock:graphite :unpackCfg:gr                       ...
  673:  set :buildBlock:silicon :unpackCfg:si                        ...
  674:  set :buildBlock:titanium :unpackCfg:ti                       ...
  675:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  676:  set :buildBlock:thorium :unpackCfg:th                        ...
  677:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  678:  set :buildBlock:config null                                  ...
  679:  set :buildBlock:index :unpackCfg:ind                         ...
  680:  setaddr :buildBlock*retaddr *label305                        ...
  681:  call *label41 *invalid :buildBlock*retval                    ...
        label *label305                                              ...
  682:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  683:  jump *label301 always 0 0                                    ...
        label *label302                                              BlockBuilder.mnd: if x + y > 0 then
  684:  set :buildRemoteBlock*retval false                           BlockBuilder.mnd: return false;
  685:  jump *label301 always 0 0                                    ...
        label *label301                                              BlockBuilder.mnd: remote def buildRemoteBlock(cfg, x, y)
  686:  set :buildRemoteBlock*finished true                          ...
  687:  jump *label54 always 0 0                                     ...
        label *label9                                                BlockBuilder.mnd: remote def buildBlockFromCfg(cfg, config)
  688:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    BlockBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  689:  setaddr :unpackCfg*retaddr *label307                         ...
  690:  call *label32 *invalid :unpackCfg*retval                     ...
        label *label307                                              ...
  691:  op add *tmp342 .coreX :unpackCfg:x                           BlockBuilder.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  692:  op add *tmp343 .coreY :unpackCfg:y                           ...
  693:  set :buildBlock:block :unpackCfg:type                        ...
  694:  set :buildBlock:x *tmp342                                    ...
  695:  set :buildBlock:y *tmp343                                    ...
  696:  set :buildBlock:copper :unpackCfg:cu                         ...
  697:  set :buildBlock:lead :unpackCfg:pb                           ...
  698:  set :buildBlock:graphite :unpackCfg:gr                       ...
  699:  set :buildBlock:silicon :unpackCfg:si                        ...
  700:  set :buildBlock:titanium :unpackCfg:ti                       ...
  701:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  702:  set :buildBlock:thorium :unpackCfg:th                        ...
  703:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  704:  set :buildBlock:config :buildBlockFromCfg:config             ...
  705:  set :buildBlock:index :unpackCfg:ind                         ...
  706:  setaddr :buildBlock*retaddr *label308                        ...
  707:  call *label41 *invalid :buildBlock*retval                    ...
        label *label308                                              ...
  708:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        BlockBuilder.mnd: @this.write(building, cfg);
  709:  write :buildBlock*retval processor2 :buildBlockFromCfg:cfg   BlockBuilder.mnd: display.write(building, cfg);
  710:  write :buildBlock*retval AÕFFJS-micro-processor9 :buildBlock BlockBuilder.mnd: processor.write(building, cfg);
  711:  write :buildBlock*retval processor9 :buildBlockFromCfg:cfg   BlockBuilder.mnd: coreBuilder.write(building, cfg);
  712:  set :buildBlockFromCfg*retval :buildBlock*retval             BlockBuilder.mnd: return building;
  713:  set :buildBlockFromCfg*finished true                         BlockBuilder.mnd: remote def buildBlockFromCfg(cfg, config)
  714:  jump *label54 always 0 0                                     ...
        label *label43                                               BlockBuilder.mnd: def buildBlockAtLocal(block, x, y, rotation, config, index)
  715:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  716:  ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6  Actions.mnd: while !within(x, y, radius) do
  717:  jump *label542 notEqual *tmp105 false                        ...
        label *label540                                              ...
  718:  ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y  Actions.mnd: approach(x, y, radius - 0.5);
  719:  ucontrol within :buildBlockAtLocal:x :buildBlockAtLocal:y 6  Actions.mnd: while !within(x, y, radius) do
  720:  jump *label540 equal *tmp105 false                           ...
        label *label542                                              ...
  721:  ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y  BlockBuilder.mnd: var building = getBlock(x, y, out type);
  722:  jump *label315 equal :buildBlockAtLocal:building null        BlockBuilder.mnd: if building != null then
  723:  jump *label317 notEqual :buildBlockAtLocal:type :buildBlockA BlockBuilder.mnd: if type == block then return building; end;
  724:  set :buildBlockAtLocal*retval :buildBlockAtLocal:building    ...
  725:  return :buildBlockAtLocal*retaddr                            ...
        label *label317                                              ...
  726:  set .ERROR "Cannot build at position"                        BlockBuilder.mnd: ERROR = text;
  727:  set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block              BlockBuilder.mnd: ERROR_FOUND_BLOCK = block;
  728:  set .ERROR_FOUND_TYPE :buildBlockAtLocal:type                BlockBuilder.mnd: ERROR_FOUND_TYPE = type;
  729:  set .ERROR_X :buildBlockAtLocal:x                            BlockBuilder.mnd: ERROR_X = x;
  730:  set .ERROR_Y :buildBlockAtLocal:y                            BlockBuilder.mnd: ERROR_Y = y;
  731:  stop                                                         BlockBuilder.mnd: stopProcessor();
        label *label315                                              BlockBuilder.mnd: if building != null then
  732:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BlockBuilder.mnd: build(x, y, block, rotation, config);
  733:  wait 0.25                                                    BlockBuilder.mnd: wait(0.25);
  734:  set :buildBlockAtLocal:success false                         BlockBuilder.mnd: var success = false;
        label *label320                                              BlockBuilder.mnd: do
  735:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BlockBuilder.mnd: build(x, y, block, rotation, config);
  736:  ucontrol getBlock :buildBlockAtLocal:x :buildBlockAtLocal:y  BlockBuilder.mnd: building = getBlock(x, y, out type);
  737:  op equal *tmp354 :buildBlockAtLocal:building null            BlockBuilder.mnd: if building == null and !success then
  738:  op equal *tmp355 :buildBlockAtLocal:success false            ...
  739:  op land *tmp356 *tmp354 *tmp355                              ...
  740:  jump *label323 equal *tmp356 false                           ...
  741:  set .ERROR "Error while building"                            BlockBuilder.mnd: ERROR = text;
  742:  set .ERROR_FOUND_BLOCK :buildBlockAtLocal:block              BlockBuilder.mnd: ERROR_FOUND_BLOCK = block;
  743:  set .ERROR_FOUND_TYPE :buildBlockAtLocal:type                BlockBuilder.mnd: ERROR_FOUND_TYPE = type;
  744:  set .ERROR_X :buildBlockAtLocal:x                            BlockBuilder.mnd: ERROR_X = x;
  745:  set .ERROR_Y :buildBlockAtLocal:y                            BlockBuilder.mnd: ERROR_Y = y;
  746:  stop                                                         BlockBuilder.mnd: stopProcessor();
  747:  jump *label324 always 0 0                                    BlockBuilder.mnd: if building == null and !success then
        label *label323                                              ...
  748:  set :buildBlockAtLocal:success true                          BlockBuilder.mnd: success = true;
        label *label324                                              BlockBuilder.mnd: if building == null and !success then
  749:  jump *label326 notEqual :buildBlockAtLocal:block @multiplica BlockBuilder.mnd: if block == @multiplicative-reconstructor then
  750:  control enabled processor6 false 0 0 0                       BlockBuilder.mnd: polyController.enabled = false;     // Brutal, but effective :)
  751:  ubind @poly                                                  BlockBuilder.mnd: ubind(@poly);
  752:  jump *label328 equal @unit .builder                          BlockBuilder.mnd: if @unit != builder then
  753:  ucontrol approach :buildBlockAtLocal:x :buildBlockAtLocal:y  BlockBuilder.mnd: approach(x, y, RADIUS);
  754:  ucontrol build :buildBlockAtLocal:x :buildBlockAtLocal:y :bu BlockBuilder.mnd: build(x, y, block, rotation, config);
        label *label328                                              BlockBuilder.mnd: if @unit != builder then
        label *label326                                              BlockBuilder.mnd: if block == @multiplicative-reconstructor then
  755:  jump *label320 notEqual :buildBlockAtLocal:type :buildBlockA BlockBuilder.mnd: do
  756:  control enabled processor6 true 0 0 0                        BlockBuilder.mnd: polyController.enabled = true;
  757:  ubind .builder                                               BlockBuilder.mnd: ubind(builder);
  758:  sensor :log:encodedId :buildBlockAtLocal:block @id           BlockBuilder.mnd: log(block.@id);
  759:  read *tmp100 bank1 511                                       BlockBuilder.mnd: bank1[--logPosition] = encodedId + TIME * 1000;
  760:  op sub *tmp366 *tmp100 1                                     ...
  761:  write *tmp366 bank1 511                                      ...
  762:  read *tmp0 processor1 "time"                                 ...
  763:  op mul *tmp369 *tmp0 1000                                    ...
  764:  op add *tmp370 :log:encodedId *tmp369                        ...
  765:  write *tmp370 bank1 *tmp366                                  ...
  766:  jump *label332 lessThan :buildBlockAtLocal:index 0           BlockBuilder.mnd: if index >= 0 then
  767:  op shl *tmp373 1 :buildBlockAtLocal:index                    BlockBuilder.mnd: display.blocksBuilt |= (1 << index);
  768:  read *tmp6 processor2 ".blocksBuilt"                         ...
  769:  op or *tmp374 *tmp6 *tmp373                                  ...
  770:  write *tmp374 processor2 ".blocksBuilt"                      ...
  771:  write :buildBlockAtLocal:index processor2 ".recentBuildIndex BlockBuilder.mnd: display.recentBuildIndex = index;
        label *label332                                              BlockBuilder.mnd: if index >= 0 then
  772:  set :buildBlockAtLocal*retval :buildBlockAtLocal:building    BlockBuilder.mnd: return building;
  773:  return :buildBlockAtLocal*retaddr                            BlockBuilder.mnd: def buildBlockAtLocal(block, x, y, rotation, config, index)
        label *label10                                               BlockBuilder.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  774:  set :buildBlockAtLocal:block :buildBlockAt:block             BlockBuilder.mnd: return buildBlockAtLocal(block, x, y, rotation, config, index);
  775:  set :buildBlockAtLocal:x :buildBlockAt:x                     ...
  776:  set :buildBlockAtLocal:y :buildBlockAt:y                     ...
  777:  set :buildBlockAtLocal:rotation :buildBlockAt:rotation       ...
  778:  set :buildBlockAtLocal:config :buildBlockAt:config           ...
  779:  set :buildBlockAtLocal:index :buildBlockAt:index             ...
  780:  setaddr :buildBlockAtLocal*retaddr *label335                 ...
  781:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label335                                              ...
  782:  set :buildBlockAt*retval :buildBlockAtLocal*retval           ...
  783:  set :buildBlockAt*finished true                              BlockBuilder.mnd: remote def buildBlockAt(block, x, y, rotation, config, index)
  784:  jump *label54 always 0 0                                     ...
        label *label11                                               BlockBuilder.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  785:  set :buildBlockAtLocal:block @pneumatic-drill                BlockBuilder.mnd: var drill = buildBlockAtLocal(@pneumatic-drill, x, y, 0, null, -1);
  786:  set :buildBlockAtLocal:x :buildFirstTitaniumDrillAt:x        ...
  787:  set :buildBlockAtLocal:y :buildFirstTitaniumDrillAt:y        ...
  788:  set :buildBlockAtLocal:rotation 0                            ...
  789:  set :buildBlockAtLocal:config null                           ...
  790:  set :buildBlockAtLocal:index -1                              ...
  791:  setaddr :buildBlockAtLocal*retaddr *label337                 ...
  792:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label337                                              ...
  793:  write :buildBlockAtLocal*retval processor8 ":addTitaniumDril BlockBuilder.mnd: flareController.addTitaniumDrill(drill);
  794:  write false processor8 ":addTitaniumDrill*finished"          ...
  795:  write 1 processor8 "@counter"                                ...
        label *label338                                              ...
  796:  wait 1e-15                                                   ...
  797:  read *tmp376 processor8 ":addTitaniumDrill*finished"         ...
  798:  jump *label338 equal *tmp376 false                           ...
  799:  set :buildFirstTitaniumDrillAt*retval :buildBlockAtLocal*ret BlockBuilder.mnd: return drill;
  800:  set :buildFirstTitaniumDrillAt*finished true                 BlockBuilder.mnd: remote def buildFirstTitaniumDrillAt(x, y)
  801:  jump *label54 always 0 0                                     ...
        label *label45                                               BlockBuilder.mnd: def buildTitaniumDrill(x, y, in out count, in out tiles)
  802:  jump *label347 greaterThanEq :buildTitaniumDrill:count 6     BlockBuilder.mnd: if count < MAX_COUNT then
  803:  jump *label349 greaterThanEq :buildTitaniumDrill:tiles 10    BlockBuilder.mnd: if tiles < MAX_TILES then
  804:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  805:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  806:  jump *label526 notEqual *tmp105 false                        ...
        label *label524                                              ...
  807:  ucontrol approach :buildTitaniumDrill:x :buildTitaniumDrill: Actions.mnd: approach(x, y, radius - 0.5);
  808:  ucontrol within :buildTitaniumDrill:x :buildTitaniumDrill:y  Actions.mnd: while !within(x, y, radius) do
  809:  jump *label524 equal *tmp105 false                           ...
        label *label526                                              ...
  810:  set .positive 0                                              BlockBuilder.mnd: positive = 0; negative = 0;
  811:  set .negative 0                                              ...
  812:  op sub *tmp390 :buildTitaniumDrill:x 0.5                     BlockBuilder.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  813:  op sub *tmp391 :buildTitaniumDrill:y 0.5                     ...
  814:  set :titaniumDrillScore:positive .positive                   ...
  815:  set :titaniumDrillScore:negative .negative                   ...
  816:  ucontrol getBlock *tmp390 *tmp391 0 0 :getFloor:floor        BlockBuilder.mnd: getBlock(x, y, , out floor);
  817:  jump *label491 notEqual :getFloor:floor @ore-titanium        BlockBuilder.mnd: case getFloor(x, y)
  818:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  819:  jump *label494 always 0 0                                    ...
        label *label491                                              ...
  820:  jump *label492 equal :getFloor:floor @ore-copper             ...
  821:  jump *label492 equal :getFloor:floor @ore-lead               ...
  822:  jump *label492 equal :getFloor:floor @ore-scrap              ...
  823:  jump *label493 notEqual :getFloor:floor @ore-coal            ...
        label *label492                                              ...
  824:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label493                                              ...
        label *label494                                              ...
  825:  set .positive :titaniumDrillScore:positive                   BlockBuilder.mnd: titaniumDrillScore(x - 0.5, y - 0.5, in out positive, in out negative);
  826:  set .negative :titaniumDrillScore:negative                   ...
  827:  op add *tmp394 :buildTitaniumDrill:y 0.5                     BlockBuilder.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  828:  set :titaniumDrillScore:positive .positive                   ...
  829:  set :titaniumDrillScore:negative .negative                   ...
  830:  ucontrol getBlock *tmp390 *tmp394 0 0 :getFloor:floor        BlockBuilder.mnd: getBlock(x, y, , out floor);
  831:  jump *label499 notEqual :getFloor:floor @ore-titanium        BlockBuilder.mnd: case getFloor(x, y)
  832:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  833:  jump *label502 always 0 0                                    ...
        label *label499                                              ...
  834:  jump *label500 equal :getFloor:floor @ore-copper             ...
  835:  jump *label500 equal :getFloor:floor @ore-lead               ...
  836:  jump *label500 equal :getFloor:floor @ore-scrap              ...
  837:  jump *label501 notEqual :getFloor:floor @ore-coal            ...
        label *label500                                              ...
  838:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label501                                              ...
        label *label502                                              ...
  839:  set .positive :titaniumDrillScore:positive                   BlockBuilder.mnd: titaniumDrillScore(x - 0.5, y + 0.5, in out positive, in out negative);
  840:  set .negative :titaniumDrillScore:negative                   ...
  841:  op add *tmp396 :buildTitaniumDrill:x 0.5                     BlockBuilder.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  842:  set :titaniumDrillScore:positive .positive                   ...
  843:  set :titaniumDrillScore:negative .negative                   ...
  844:  ucontrol getBlock *tmp396 *tmp391 0 0 :getFloor:floor        BlockBuilder.mnd: getBlock(x, y, , out floor);
  845:  jump *label507 notEqual :getFloor:floor @ore-titanium        BlockBuilder.mnd: case getFloor(x, y)
  846:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  847:  jump *label510 always 0 0                                    ...
        label *label507                                              ...
  848:  jump *label508 equal :getFloor:floor @ore-copper             ...
  849:  jump *label508 equal :getFloor:floor @ore-lead               ...
  850:  jump *label508 equal :getFloor:floor @ore-scrap              ...
  851:  jump *label509 notEqual :getFloor:floor @ore-coal            ...
        label *label508                                              ...
  852:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label509                                              ...
        label *label510                                              ...
  853:  set .positive :titaniumDrillScore:positive                   BlockBuilder.mnd: titaniumDrillScore(x + 0.5, y - 0.5, in out positive, in out negative);
  854:  set .negative :titaniumDrillScore:negative                   ...
  855:  set :titaniumDrillScore:positive .positive                   BlockBuilder.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  856:  set :titaniumDrillScore:negative .negative                   ...
  857:  ucontrol getBlock *tmp396 *tmp394 0 0 :getFloor:floor        BlockBuilder.mnd: getBlock(x, y, , out floor);
  858:  jump *label515 notEqual :getFloor:floor @ore-titanium        BlockBuilder.mnd: case getFloor(x, y)
  859:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  860:  jump *label518 always 0 0                                    ...
        label *label515                                              ...
  861:  jump *label516 equal :getFloor:floor @ore-copper             ...
  862:  jump *label516 equal :getFloor:floor @ore-lead               ...
  863:  jump *label516 equal :getFloor:floor @ore-scrap              ...
  864:  jump *label517 notEqual :getFloor:floor @ore-coal            ...
        label *label516                                              ...
  865:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label517                                              ...
        label *label518                                              ...
  866:  set .positive :titaniumDrillScore:positive                   BlockBuilder.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  867:  set .negative :titaniumDrillScore:negative                   ...
  868:  op greaterThan *tmp402 .positive .negative                   BlockBuilder.mnd: if positive > negative && positive >= 2 then
  869:  op greaterThanEq *tmp403 .positive 2                         ...
  870:  op land *tmp404 *tmp402 *tmp403                              ...
  871:  jump *label357 equal *tmp404 false                           ...
  872:  set :buildBlockAtLocal:block @pneumatic-drill                BlockBuilder.mnd: var drill = buildBlockAtLocal(@pneumatic-drill, x, y, null, 0, -1);
  873:  set :buildBlockAtLocal:x :buildTitaniumDrill:x               ...
  874:  set :buildBlockAtLocal:y :buildTitaniumDrill:y               ...
  875:  set :buildBlockAtLocal:rotation null                         ...
  876:  set :buildBlockAtLocal:config 0                              ...
  877:  set :buildBlockAtLocal:index -1                              ...
  878:  setaddr :buildBlockAtLocal*retaddr *label359                 ...
  879:  call *label43 *invalid :buildBlockAtLocal*retval             ...
        label *label359                                              ...
  880:  jump *label360 equal :buildBlockAtLocal*retval null          BlockBuilder.mnd: if drill != null then
  881:  write :buildBlockAtLocal*retval processor8 ":addTitaniumDril BlockBuilder.mnd: flareController.addTitaniumDrill(drill);
  882:  write false processor8 ":addTitaniumDrill*finished"          ...
  883:  write 1 processor8 "@counter"                                ...
        label *label362                                              ...
  884:  wait 1e-15                                                   ...
  885:  read *tmp409 processor8 ":addTitaniumDrill*finished"         ...
  886:  jump *label362 equal *tmp409 false                           ...
  887:  op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1 BlockBuilder.mnd: setFlareTarget(++count);
  888:  op min *tmp410 :buildTitaniumDrill:count 8                   BlockBuilder.mnd: processor.flareTarget = min(target, 8);
  889:  write *tmp410 AÕFFJS-micro-processor9 ".flareTarget"         ...
  890:  op add :buildTitaniumDrill:tiles :buildTitaniumDrill:tiles . BlockBuilder.mnd: tiles += positive;
  891:  set :buildTitaniumDrill*retval .positive                     BlockBuilder.mnd: return positive;
  892:  return :buildTitaniumDrill*retaddr                           ...
        label *label360                                              BlockBuilder.mnd: if drill != null then
        label *label357                                              BlockBuilder.mnd: if positive > negative && positive >= 2 then
        label *label349                                              BlockBuilder.mnd: if tiles < MAX_TILES then
        label *label347                                              BlockBuilder.mnd: if count < MAX_COUNT then
  893:  set :buildTitaniumDrill*retval 0                             BlockBuilder.mnd: return 0;
  894:  return :buildTitaniumDrill*retaddr                           ...
        label *label12                                               BlockBuilder.mnd: remote void buildTitaniumDrills(current)
  895:  set :buildTitaniumDrills:count 1                             BlockBuilder.mnd: var count = 1;
  896:  set :buildTitaniumDrills:tiles 0                             BlockBuilder.mnd: var tiles = 0;
  897:  wait 0.0001                                                  BlockBuilder.mnd: wait(1e-4);
  898:  wait 0.0001                                                  BlockBuilder.mnd: wait(1e-4);
  899:  read *tmp51 processor3 ".searchFinished"                     BlockBuilder.mnd: while !oreLocator.searchFinished do
  900:  jump *label367 notEqual *tmp51 false                         ...
        label *label617                                              ...
  901:  read *tmp50 processor3 ".locations"                          BlockBuilder.mnd: while current < oreLocator.locations do
  902:  jump *label370 greaterThanEq :buildTitaniumDrills:current *t ...
        label *label479                                              ...
  903:  op mul :buildTitaniumDrills:index :buildTitaniumDrills:curre BlockBuilder.mnd: var index = current * 4;
  904:  op add *tmp416 :buildTitaniumDrills:index 1                  BlockBuilder.mnd: var size = bank1[index + 1];
  905:  read :buildTitaniumDrills:size bank1 *tmp416                 ...
  906:  jump *label371 lessThan :buildTitaniumDrills:size 3          BlockBuilder.mnd: if size >= 3 then
  907:  op add *tmp420 :buildTitaniumDrills:index 2                  BlockBuilder.mnd: var x = bank1[index + 2];
  908:  read :buildTitaniumDrills:x bank1 *tmp420                    ...
  909:  op add *tmp423 :buildTitaniumDrills:index 3                  BlockBuilder.mnd: var y = bank1[index + 3];
  910:  read :buildTitaniumDrills:y bank1 *tmp423                    ...
  911:  op sub *tmp426 :buildTitaniumDrills:x 1                      BlockBuilder.mnd: var built = buildTitaniumDrill(x - 1, y - 1, in out count, in out tiles)
  912:  op sub *tmp427 :buildTitaniumDrills:y 1                      ...
  913:  set :buildTitaniumDrill:x *tmp426                            ...
  914:  set :buildTitaniumDrill:y *tmp427                            ...
  915:  set :buildTitaniumDrill:count :buildTitaniumDrills:count     ...
  916:  set :buildTitaniumDrill:tiles :buildTitaniumDrills:tiles     ...
  917:  setaddr :buildTitaniumDrill*retaddr *label373                ...
  918:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label373                                              ...
  919:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  920:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  921:  set *tmp428 :buildTitaniumDrill*retval                       ...
  922:  op add *tmp429 :buildTitaniumDrills:x 1                      BlockBuilder.mnd: + buildTitaniumDrill(x + 1, y - 1, in out count, in out tiles)
  923:  op sub *tmp430 :buildTitaniumDrills:y 1                      ...
  924:  set :buildTitaniumDrill:x *tmp429                            ...
  925:  set :buildTitaniumDrill:y *tmp430                            ...
  926:  setaddr :buildTitaniumDrill*retaddr *label374                ...
  927:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label374                                              ...
  928:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  929:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  930:  op add *tmp432 *tmp428 :buildTitaniumDrill*retval            ...
  931:  op sub *tmp433 :buildTitaniumDrills:x 1                      BlockBuilder.mnd: + buildTitaniumDrill(x - 1, y + 1, in out count, in out tiles)
  932:  op add *tmp434 :buildTitaniumDrills:y 1                      ...
  933:  set :buildTitaniumDrill:x *tmp433                            ...
  934:  set :buildTitaniumDrill:y *tmp434                            ...
  935:  setaddr :buildTitaniumDrill*retaddr *label375                ...
  936:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label375                                              ...
  937:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  938:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  939:  op add *tmp436 *tmp432 :buildTitaniumDrill*retval            ...
  940:  op add *tmp437 :buildTitaniumDrills:x 1                      BlockBuilder.mnd: + buildTitaniumDrill(x + 1, y + 1, in out count, in out tiles);
  941:  op add *tmp438 :buildTitaniumDrills:y 1                      ...
  942:  set :buildTitaniumDrill:x *tmp437                            ...
  943:  set :buildTitaniumDrill:y *tmp438                            ...
  944:  setaddr :buildTitaniumDrill*retaddr *label376                ...
  945:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label376                                              ...
  946:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  947:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  948:  op add :buildTitaniumDrills:built *tmp436 :buildTitaniumDril ...
  949:  jump *label377 notEqual :buildTitaniumDrills:built 0         BlockBuilder.mnd: if built == 0 then
  950:  set :buildTitaniumDrill:x :buildTitaniumDrills:x             BlockBuilder.mnd: built = buildTitaniumDrill(x, y, in out count, in out tiles);
  951:  set :buildTitaniumDrill:y :buildTitaniumDrills:y             ...
  952:  setaddr :buildTitaniumDrill*retaddr *label379                ...
  953:  call *label45 *invalid :buildTitaniumDrill*retval            ...
        label *label379                                              ...
  954:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
  955:  set :buildTitaniumDrills:tiles :buildTitaniumDrill:tiles     ...
  956:  set :buildTitaniumDrills:built :buildTitaniumDrill*retval    ...
        label *label377                                              BlockBuilder.mnd: if built == 0 then
        label *label371                                              BlockBuilder.mnd: if size >= 3 then
  957:  op add :buildTitaniumDrills:current :buildTitaniumDrills:cur BlockBuilder.mnd: while current < oreLocator.locations do
  958:  read *tmp50 processor3 ".locations"                          ...
  959:  jump *label479 lessThan :buildTitaniumDrills:current *tmp50  ...
        label *label370                                              ...
  960:  jump *label367 greaterThanEq :buildTitaniumDrills:tiles 10   BlockBuilder.mnd: if tiles >= MAX_TILES then break; end;
  961:  jump *label367 greaterThanEq :buildTitaniumDrills:count 6    BlockBuilder.mnd: if count >= MAX_COUNT then break; end;
  962:  read *tmp51 processor3 ".searchFinished"                     BlockBuilder.mnd: while !oreLocator.searchFinished do
  963:  jump *label617 equal *tmp51 false                            ...
        label *label367                                              ...
  964:  set :buildTitaniumDrills*finished true                       BlockBuilder.mnd: remote void buildTitaniumDrills(current)
  965:  jump *label54 always 0 0                                     ...
        label *label13                                               BlockBuilder.mnd: remote void supplyBase()
  966:  setaddr :supplyBaseLocal*retaddr *label385                   BlockBuilder.mnd: supplyBaseLocal();
  967:  call *label38 *invalid :supplyBaseLocal*retval               ...
        label *label385                                              ...
  968:  set :supplyBase*finished true                                BlockBuilder.mnd: remote void supplyBase()
  969:  jump *label54 always 0 0                                     ...


Performance: parsed in 917 ms, compiled in 511 ms, optimized in 4,911 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (3 steps):
The program didn't generate any output.
Execution exception at instruction 10: read *tmp31 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
