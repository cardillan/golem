  2440 instructions before optimizations.
   195 instructions eliminated by Temp Variables Elimination (2 passes, 7 iterations).
   154 instructions eliminated by Dead Code Elimination (7 iterations).
    10 instructions eliminated by Jump Normalization (2 passes, 6 iterations).
    62 instructions eliminated by Jump Optimization (6 iterations).
    53 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     7 instructions eliminated by Expression Optimization (2 passes, 4 iterations).
    21 instructions eliminated by If Expression Optimization (5 iterations).
   918 instructions eliminated by Data Flow Optimization (4 passes, 18 iterations).
     1 instructions eliminated by Loop Optimization (4 iterations).
     2 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (7 iterations).
     3 loops unrolled by Loop Unrolling.
    11 instructions eliminated by Jump Straightening (6 iterations).
     8 instructions updated by Jump Threading.
     5 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   988 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  * Unroll iteration loop at Display.mnd:574:9                   size   -17, benefit       54.7, efficiency   Infinity (-21 instructions)
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
    Unroll iteration loop at Display.mnd:154:17                  size    -2, benefit       20.9, efficiency   Infinity
    Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +51, benefit      239.3, efficiency      4.691
  ! Inline function call at Display.mnd:113:24                   size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:580:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:513:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +156, benefit       58.6, efficiency      0.376
  ! Inline function call at Display.mnd:541:9                    size   +26, benefit      136.7, efficiency      5.258
  ! Inline function call at Display.mnd:546:13                   size   +26, benefit       68.4, efficiency      2.629
  ! Inline function call at Display.mnd:549:17                   size   +26, benefit       34.2, efficiency      1.315
  ! Inline function call at Display.mnd:439:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline read jump table of array 'BLOCKS'                     size   +66, benefit       58.6, efficiency      0.888
  ! Inline 'BLOCKS' read access at Display.mnd:546:23            size   +69, benefit       39.1, efficiency      0.566
  ! Inline 'BLOCKS' read access at Display.mnd:549:27            size   +69, benefit       19.5, efficiency      0.283

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
  * Unroll iteration loop at Display.mnd:154:17                  size    -2, benefit       20.9, efficiency   Infinity (-1 instructions)
    Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +51, benefit      239.3, efficiency      4.691
  ! Inline function call at Display.mnd:113:24                   size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:580:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:513:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +156, benefit       58.6, efficiency      0.376
  ! Inline function call at Display.mnd:541:9                    size   +26, benefit      136.7, efficiency      5.258
  ! Inline function call at Display.mnd:546:13                   size   +26, benefit       68.4, efficiency      2.629
  ! Inline function call at Display.mnd:549:17                   size   +26, benefit       34.2, efficiency      1.315
  ! Inline function call at Display.mnd:439:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline read jump table of array 'BLOCKS'                     size   +66, benefit       58.6, efficiency      0.888
  ! Inline 'BLOCKS' read access at Display.mnd:546:23            size   +69, benefit       39.1, efficiency      0.566
  ! Inline 'BLOCKS' read access at Display.mnd:549:27            size   +69, benefit       19.5, efficiency      0.283

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
  * Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity (+0 instructions)
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +51, benefit      239.3, efficiency      4.691
  ! Inline function call at Display.mnd:113:24                   size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:580:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:513:5                    size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +155, benefit       58.6, efficiency      0.378
  ! Inline function call at Display.mnd:541:9                    size   +26, benefit      136.7, efficiency      5.258
  ! Inline function call at Display.mnd:546:13                   size   +26, benefit       68.4, efficiency      2.629
  ! Inline function call at Display.mnd:549:17                   size   +26, benefit       34.2, efficiency      1.315
  ! Inline function call at Display.mnd:439:5                    size  +155, benefit        4.7, efficiency      0.030
  ! Inline read jump table of array 'BLOCKS'                     size   +66, benefit       58.6, efficiency      0.888
  ! Inline 'BLOCKS' read access at Display.mnd:546:23            size   +69, benefit       39.1, efficiency      0.566
  ! Inline 'BLOCKS' read access at Display.mnd:549:27            size   +69, benefit       19.5, efficiency      0.283

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +51, benefit      239.3, efficiency      4.691
  ! Inline function call at Display.mnd:113:24                   size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:580:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:513:5                    size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +155, benefit       58.6, efficiency      0.378
  ! Inline function call at Display.mnd:541:9                    size   +26, benefit      136.7, efficiency      5.258
  ! Inline function call at Display.mnd:546:13                   size   +26, benefit       68.4, efficiency      2.629
  ! Inline function call at Display.mnd:549:17                   size   +26, benefit       34.2, efficiency      1.315
  ! Inline function call at Display.mnd:439:5                    size  +155, benefit        4.7, efficiency      0.030
  ! Inline read jump table of array 'BLOCKS'                     size   +66, benefit       58.6, efficiency      0.888
  ! Inline 'BLOCKS' read access at Display.mnd:546:23            size   +69, benefit       39.1, efficiency      0.566
  ! Inline 'BLOCKS' read access at Display.mnd:549:27            size   +69, benefit       19.5, efficiency      0.283

Pass 2: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +47, benefit      239.3, efficiency      5.091
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:580:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:513:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:541:9                    size   +24, benefit      136.7, efficiency      5.697
  ! Inline function call at Display.mnd:546:13                   size   +24, benefit       68.4, efficiency      2.848
  ! Inline function call at Display.mnd:549:17                   size   +24, benefit       34.2, efficiency      1.424
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline read jump table of array 'BLOCKS'                     size   +66, benefit       58.6, efficiency      0.888
  ! Inline 'BLOCKS' read access at Display.mnd:546:23            size   +69, benefit       39.1, efficiency      0.566
  ! Inline 'BLOCKS' read access at Display.mnd:549:27            size   +69, benefit       19.5, efficiency      0.283

Pass 3: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +47, benefit      239.3, efficiency      5.091
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:580:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:513:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:541:9                    size   +24, benefit      136.7, efficiency      5.697
  ! Inline function call at Display.mnd:546:13                   size   +24, benefit       68.4, efficiency      2.848
  ! Inline function call at Display.mnd:549:17                   size   +24, benefit       34.2, efficiency      1.424
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline read jump table of array 'BLOCKS'                     size   +66, benefit       58.6, efficiency      0.888
  ! Inline 'BLOCKS' read access at Display.mnd:546:23            size   +69, benefit       39.1, efficiency      0.566
  ! Inline 'BLOCKS' read access at Display.mnd:549:27            size   +69, benefit       19.5, efficiency      0.283

Pass 4: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:589:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +47, benefit      239.3, efficiency      5.091
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:580:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:513:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:536:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:541:9                    size   +24, benefit      136.7, efficiency      5.697
  ! Inline function call at Display.mnd:546:13                   size   +24, benefit       68.4, efficiency      2.848
  ! Inline function call at Display.mnd:549:17                   size   +24, benefit       34.2, efficiency      1.424
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-121 instructions):
 
    34 jump *label26 equal *tmp52 false
    35 draw color 0 0 32 80
    36 draw rect 0 0 176 176
-    * set *tmp53 null
    37 jump *label27 always
    38 label *label26
    39 draw reset
    40 draw clear 0 0 32
-    * set *tmp53 null
    41 label *label27
    42 draw col %[white]
    43 op div *tmp54 .animation 30
 
    80 setaddr :drawHeader*retaddr *label33 (h:*label33)
    81 call *label7 *invalid :drawHeader*retval (m:*label33) (h:*label33)
    82 label *label33
-    * set *tmp73 null
    83 jump *label32 always
    84 label *label31
-    * set *tmp73 null
    85 label *label32
    86 drawflush display1
-    * set *tmp74 .animation
    87 op add .animation .animation 1
    88 label *label25
    89 set *tmp51 null
 
   189 jump *label47 equal *tmp101 false
   190 set :drawItemColor:col 0
   191 op sub :drawItemColor:y :drawItemColor:y 15
-    * set *tmp102 :drawItemColor:y
   192 jump *label48 always
   193 label *label47
-    * set *tmp102 null
   194 label *label48
   195 label *label43
   196 set :drawItem:col :drawItemColor:col
 
   198 label *label42
   199 set :updateDisplay:y :drawItem:y
   200 op sub :updateDisplay:y :updateDisplay:y 35
-    * set *tmp78 :updateDisplay:y
   201 jump *label38 always
   202 label *label37
   203 op notEqual *tmp103 .nextBlock null
 
   327 jump *label73 equal *tmp131 false
   328 set :drawItemColor.1:col 0
   329 op sub :drawItemColor.1:y :drawItemColor.1:y 15
-    * set *tmp132 :drawItemColor.1:y
   330 jump *label74 always
   331 label *label73
-    * set *tmp132 null
   332 label *label74
   333 label *label69
   334 set :drawItem.1:col :drawItemColor.1:col
 
   345 label *label75
   346 set *tmp134 null
   347 label *label76
-    * set *tmp109 *tmp134
   348 jump *label67 always
   349 label *label66
-    * set *tmp109 null
   350 label *label67
   351 label *label57
   352 multijump *tmp107 0 0 (m:marker0)
   353 multilabel *label65 (m:marker0)
   354 label *label58
-    * set *tmp106 null
   355 jump *label55 always
   356 label *label54
-    * set *tmp106 null
   357 label *label55
   358 op lessThan *tmp135 .totalTargets 3
   359 jump *label77 equal *tmp135 false
   360 op sub *tmp137 3 .totalTargets
   361 op mul *tmp138 *tmp137 15
   362 op sub :updateDisplay:y :updateDisplay:y *tmp138
-    * set *tmp136 :updateDisplay:y
   363 jump *label78 always
   364 label *label77
-    * set *tmp136 null
   365 label *label78
   366 op sub :updateDisplay:y :updateDisplay:y 5
   367 set *tmp104 :updateDisplay:y
 
   369 label *label49
   370 set *tmp104 null
   371 label *label50
-    * set *tmp78 *tmp104
   372 label *label38
   373 label *label36
   374 op equal *tmp139 .nextFactory null
   375 jump *label80 equal *tmp139 false
   376 jump *label79 always
-    * set *tmp140 null
   377 jump *label81 always
   378 label *label80
-    * set *tmp140 null
   379 label *label81
   380 draw col %[white]
   381 set :drawTitleRow.2:y :updateDisplay:y
 
   469 jump *label94 equal *tmp167 false
   470 set :drawItemColor.2:col 0
   471 op sub :drawItemColor.2:y :drawItemColor.2:y 15
-    * set *tmp168 :drawItemColor.2:y
   472 jump *label95 always
   473 label *label94
-    * set *tmp168 null
   474 label *label95
   475 label *label90
   476 set :drawItem.2:col :drawItemColor.2:col
 
   549 jump *label101 equal *tmp190 false
   550 set :drawItemColor.3:col 0
   551 op sub :drawItemColor.3:y :drawItemColor.3:y 15
-    * set *tmp191 :drawItemColor.3:y
   552 jump *label102 always
   553 label *label101
-    * set *tmp191 null
   554 label *label102
   555 label *label97
   556 set :drawItem.3:col :drawItemColor.3:col
 
   625 jump *label108 equal *tmp213 false
   626 set :drawItemColor.4:col 0
   627 op sub :drawItemColor.4:y :drawItemColor.4:y 15
-    * set *tmp214 :drawItemColor.4:y
   628 jump *label109 always
   629 label *label108
-    * set *tmp214 null
   630 label *label109
   631 label *label104
   632 set :drawItem.4:col :drawItemColor.4:col
 
   635 set :updateDisplay:y :drawItem.4:y
   636 set *tmp145 null
   637 label *label88
-    * set *tmp143 *tmp145
   638 jump *label86 always
   639 label *label85
   640 op mul *tmp215 100 :drawAirFactory:progress
 
   708 jump *label115 equal *tmp237 false
   709 set :drawItemColor.5:col 0
   710 op sub :drawItemColor.5:y :drawItemColor.5:y 15
-    * set *tmp238 :drawItemColor.5:y
   711 jump *label116 always
   712 label *label115
-    * set *tmp238 null
   713 label *label116
   714 label *label111
   715 set :drawItem.5:col :drawItemColor.5:col
 
   717 label *label110
   718 set :updateDisplay:y :drawItem.5:y
   719 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp143 :updateDisplay:y
   720 label *label86
   721 op sub :updateDisplay:y :updateDisplay:y 5
   722 label *label79
   723 op equal *tmp239 .nextAddReco null
   724 jump *label118 equal *tmp239 false
   725 jump *label117 always
-    * set *tmp240 null
   726 jump *label119 always
   727 label *label118
-    * set *tmp240 null
   728 label *label119
   729 draw col %[white]
   730 set :drawTitleRow.3:y :updateDisplay:y
 
   816 jump *label130 equal *tmp265 false
   817 set :drawItemColor.6:col 0
   818 op sub :drawItemColor.6:y :drawItemColor.6:y 15
-    * set *tmp266 :drawItemColor.6:y
   819 jump *label131 always
   820 label *label130
-    * set *tmp266 null
   821 label *label131
   822 label *label126
   823 set :drawItem.6:col :drawItemColor.6:col
 
   892 jump *label137 equal *tmp288 false
   893 set :drawItemColor.7:col 0
   894 op sub :drawItemColor.7:y :drawItemColor.7:y 15
-    * set *tmp289 :drawItemColor.7:y
   895 jump *label138 always
   896 label *label137
-    * set *tmp289 null
   897 label *label138
   898 label *label133
   899 set :drawItem.7:col :drawItemColor.7:col
   900 set :drawItem.7:y :drawItemColor.7:y
   901 label *label132
   902 set :updateDisplay:y :drawItem.7:y
-    * set *tmp243 null
   903 jump *label124 always
   904 label *label123
   905 op mul *tmp290 100 :drawAddReco:progress
 
   973 jump *label144 equal *tmp312 false
   974 set :drawItemColor.8:col 0
   975 op sub :drawItemColor.8:y :drawItemColor.8:y 15
-    * set *tmp313 :drawItemColor.8:y
   976 jump *label145 always
   977 label *label144
-    * set *tmp313 null
   978 label *label145
   979 label *label140
   980 set :drawItem.8:col :drawItemColor.8:col
 
   982 label *label139
   983 set :updateDisplay:y :drawItem.8:y
   984 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp243 :updateDisplay:y
   985 label *label124
   986 op sub :updateDisplay:y :updateDisplay:y 5
   987 label *label117
   988 op equal *tmp314 .nextMultiReco null
   989 jump *label147 equal *tmp314 false
   990 jump *label146 always
-    * set *tmp315 null
   991 jump *label148 always
   992 label *label147
-    * set *tmp315 null
   993 label *label148
   994 draw col %[white]
   995 op min *tmp316 :updateDisplay:y 142
 
  1083 jump *label159 equal *tmp341 false
  1084 set :drawItemColor.9:col 0
  1085 op sub :drawItemColor.9:y :drawItemColor.9:y 15
-    * set *tmp342 :drawItemColor.9:y
  1086 jump *label160 always
  1087 label *label159
-    * set *tmp342 null
  1088 label *label160
  1089 label *label155
  1090 set :drawItem.9:col :drawItemColor.9:col
 
  1159 jump *label166 equal *tmp364 false
  1160 set :drawItemColor.10:col 0
  1161 op sub :drawItemColor.10:y :drawItemColor.10:y 15
-    * set *tmp365 :drawItemColor.10:y
  1162 jump *label167 always
  1163 label *label166
-    * set *tmp365 null
  1164 label *label167
  1165 label *label162
  1166 set :drawItem.10:col :drawItemColor.10:col
 
  1235 jump *label173 equal *tmp387 false
  1236 set :drawItemColor.11:col 0
  1237 op sub :drawItemColor.11:y :drawItemColor.11:y 15
-    * set *tmp388 :drawItemColor.11:y
  1238 jump *label174 always
  1239 label *label173
-    * set *tmp388 null
  1240 label *label174
  1241 label *label169
  1242 set :drawItem.11:col :drawItemColor.11:col
  1243 set :drawItem.11:y :drawItemColor.11:y
  1244 label *label168
  1245 set :updateDisplay:y :drawItem.11:y
-    * set *tmp319 null
  1246 jump *label153 always
  1247 label *label152
  1248 op mul *tmp389 100 :drawMultiReco:progress
 
  1316 jump *label180 equal *tmp411 false
  1317 set :drawItemColor.12:col 0
  1318 op sub :drawItemColor.12:y :drawItemColor.12:y 15
-    * set *tmp412 :drawItemColor.12:y
  1319 jump *label181 always
  1320 label *label180
-    * set *tmp412 null
  1321 label *label181
  1322 label *label176
  1323 set :drawItem.12:col :drawItemColor.12:col
 
  1325 label *label175
  1326 set :updateDisplay:y :drawItem.12:y
  1327 op sub :updateDisplay:y :updateDisplay:y 30
-    * set *tmp319 :updateDisplay:y
  1328 label *label153
  1329 op sub :updateDisplay:y :updateDisplay:y 5
  1330 label *label146
  1331 sensor *tmp413 @unit @dead
  1332 jump *label183 equal *tmp413 false
  1333 jump *label182 always
-    * set *tmp414 null
  1334 jump *label184 always
  1335 label *label183
-    * set *tmp414 null
  1336 label *label184
  1337 draw col %[white]
  1338 set :drawTitleRow.5:y :updateDisplay:y
 
  1426 jump *label196 equal *tmp439 false
  1427 set :drawItemColor.13:col 0
  1428 op sub :drawItemColor.13:y :drawItemColor.13:y 15
-    * set *tmp440 :drawItemColor.13:y
  1429 jump *label197 always
  1430 label *label196
-    * set *tmp440 null
  1431 label *label197
  1432 label *label192
  1433 set :drawItem.13:col :drawItemColor.13:col
 
  1436 set :drawUnit:y :drawItem.13:y
  1437 label *label190
  1438 set :updateDisplay:y :drawUnit:y
-    * set *tmp416 null
  1439 jump *label189 always
  1440 label *label188
  1441 sensor *tmp441 @unit @firstItem
 
  1515 jump *label204 equal *tmp467 false
  1516 set :drawItemColor.14:col 0
  1517 op sub :drawItemColor.14:y :drawItemColor.14:y 15
-    * set *tmp468 :drawItemColor.14:y
  1518 jump *label205 always
  1519 label *label204
-    * set *tmp468 null
  1520 label *label205
  1521 label *label200
  1522 set :drawItem.14:col :drawItemColor.14:col
 
  1525 set :drawUnit.1:y :drawItem.14:y
  1526 label *label198
  1527 set :updateDisplay:y :drawUnit.1:y
-    * set *tmp416 null
  1528 label *label189
  1529 label *label182
  1530 op lessThan *tmp469 :updateDisplay:y 20
  1531 jump *label207 equal *tmp469 false
  1532 jump *label206 always
-    * set *tmp470 null
  1533 jump *label208 always
  1534 label *label207
-    * set *tmp470 null
  1535 label *label208
  1536 op equal *tmp471 AJTJK-battery1 null
  1537 jump *label209 equal *tmp471 false
  1538 jump *label206 always
-    * set *tmp472 null
  1539 jump *label210 always
  1540 label *label209
-    * set *tmp472 null
  1541 label *label210
  1542 set :updateDisplay:y 20
  1543 draw col %[white]
 
  1626 jump *label218 equal *tmp497 false
  1627 set :drawItemColor.15:col 0
  1628 op sub :drawItemColor.15:y :drawItemColor.15:y 15
-    * set *tmp498 :drawItemColor.15:y
  1629 jump *label219 always
  1630 label *label218
-    * set *tmp498 null
  1631 label *label219
  1632 label *label214
  1633 set :updateDisplay:y :drawItemColor.15:y
 
  1709 multijump *tmp506 0 0 (m:marker1)
  1710 multilabel *label239 (m:marker1)
  1711 label *label230
-    * set *tmp502 null
  1712 jump *label224 always
  1713 label *label223
-    * set *tmp502 null
  1714 label *label224
  1715 setaddr :drawHeader*retaddr *label240 (h:*label240)
  1716 call *label7 *invalid :drawHeader*retval (m:*label240) (h:*label240)
 
  1719 op greaterThan *tmp507 .lastTail :displayStorage:tail
  1720 jump *label241 equal *tmp507 false
  1721 jump *label222 always
-    * set *tmp508 null
  1722 jump *label242 always
  1723 label *label241
-    * set *tmp508 null
  1724 label *label242
  1725 set *tmp509 .lastTail
  1726 read *tmp510 bank2 *tmp509
 
  1751 jump *label243 always
  1752 label *label245
  1753 drawflush display1
-    * set *tmp517 .lastTail
  1754 op add .lastTail .lastTail 1
  1755 label *label222
  1756 set *tmp500 null
 
  1804 draw col %[white]
  1805 drawflush display1
  1806 set :displayBaseMap:limit 5
-    * set *tmp524 :displayBaseMap:limit
  1807 jump *label254 always
  1808 label *label253
-    * set *tmp524 null
  1809 label *label254
  1810 set :displayBaseMap:counter 0
  1811 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
 
  1961 label *label300
  1962 set *tmp534 null
  1963 label *label301
-    * set *tmp532 *tmp534
  1964 jump *label299 always
  1965 label *label298
-    * set *tmp532 null
  1966 label *label299
  1967 op add :displayBaseMap:counter :displayBaseMap:counter 1
  1968 op greaterThan *tmp535 :displayBaseMap:counter :displayBaseMap:limit
 
  1980 draw scale *tmp538 *tmp540
  1981 label *label305
  1982 set :displayBaseMap:counter 0
-    * set *tmp536 :displayBaseMap:counter
  1983 jump *label303 always
  1984 label *label302
-    * set *tmp536 null
  1985 label *label303
  1986 set :drawBlock:cfg :displayBaseMap:cfg
  1987 setaddr :drawBlock*retaddr *label306 (h:*label306)
 
  2012 label *label310
  2013 set *tmp547 null
  2014 label *label311
-    * set *tmp542 *tmp547
  2015 jump *label308 always
  2016 label *label307
-    * set *tmp542 null
  2017 label *label308
  2018 sensor *tmp550 switch1 @enabled
  2019 jump *label313 equal *tmp550 false
  2020 draw clear 0 0 32
  2021 drawflush display1
  2022 jump *label261 always
-    * set *tmp551 null
  2023 jump *label314 always
  2024 label *label313
-    * set *tmp551 null
  2025 label *label314
  2026 drawflush display1
  2027 label *label260
 
  2080 draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
  2081 label *label321
  2082 set .lastRecord :displayLog:start
-    * set *tmp564 .lastRecord
  2083 jump *label317 always
  2084 label *label316
-    * set *tmp564 null
  2085 label *label317
  2086 setaddr :drawHeader*retaddr *label322 (h:*label322)
  2087 call *label7 *invalid :drawHeader*retval (m:*label322) (h:*label322)
 
  2153 sensor *tmp594 switch1 @enabled
  2154 jump *label332 equal *tmp594 false
  2155 jump *label325 always
-    * set *tmp595 null
  2156 jump *label333 always
  2157 label *label332
-    * set *tmp595 null
  2158 label *label333
  2159 label *label324
  2160 op sub :displayLog:position :displayLog:position 1
 
  2170 label *label221
  2171 set *tmp49 *tmp500
  2172 label *label22
-    * set *tmp47 *tmp49
  2173 jump *label20 always
  2174 label *label19
-    * set *tmp47 null
  2175 label *label20
  2176 op greaterThan *tmp597 .megas 0
  2177 jump *label334 equal *tmp597 false
  2178 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  2179 print "\n"
  2180 printflush message1
-    * set *tmp598 null
  2181 jump *label335 always
  2182 label *label334
  2183 print "[gold]Building "
 
  2200 print "\n"
  2201 printflush message1
  2202 label *label336
-    * set *tmp598 null
  2203 label *label335
  2204 sensor *tmp601 switch1 @enabled
  2205 set .pageSwitched *tmp601
 
  2211 drawflush null
  2212 draw reset
  2213 draw clear 0 0 32
-    * set *tmp602 null
  2214 jump *label338 always
  2215 label *label337
-    * set *tmp602 null
  2216 label *label338
  2217 label *label17
  2218 jump *label16 always
 
  2270 label *label344
  2271 draw col %[white]
  2272 draw reset
-    * set *tmp607 null
  2273 jump *label341 always
  2274 label *label340
  2275 draw col %[gold]
 
  2294 jump *label350 equal .missing false
  2295 draw image 16 264 .missing 12 0
  2296 set .missing false
-    * set *tmp616 false
  2297 jump *label351 always
  2298 label *label350
-    * set *tmp616 null
  2299 label *label351
  2300 jump *label352 equal .nextMultiReco false
  2301 draw image 42 237 .nextMultiReco 32 0
-    * set *tmp617 null
  2302 jump *label353 always
  2303 label *label352
  2304 op add *tmp618 .nextBlock .nextFactory
 
  2330 jump *label364 equal *tmp625 false
  2331 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2332 op add :drawHeader:x :drawHeader:x 30
-    * set *tmp626 :drawHeader:x
  2333 jump *label365 always
  2334 label *label364
-    * set *tmp626 null
  2335 label *label365
  2336 label *label359
  2337 multijump *tmp624 0 0 (m:marker3)
 
  2357 jump *label374 equal *tmp630 false
  2358 draw image 42 237 :drawHeader:goal.1 32 0
  2359 jump *label370 always
-    * set *tmp631 null
  2360 jump *label375 always
  2361 label *label374
-    * set *tmp631 null
  2362 label *label375
  2363 label *label369
  2364 multijump *tmp629 0 0 (m:marker4)
 
  2373 label *label357
  2374 set *tmp621 *tmp623
  2375 label *label355
-    * set *tmp617 *tmp621
  2376 label *label353
  2377 set :drawHeader:tt @second
  2378 read *tmp0 processor1 "time"
 
  2446 op mul *tmp655 7 :drawHeader:len
  2447 op sub *tmp656 *tmp654 *tmp655
  2448 draw image *tmp656 246 @sand 12 0
-    * set *tmp644 null
  2449 jump *label380 always
  2450 label *label379
  2451 jump *label383 equal .titaniumDrill false
 
  2467 op mul *tmp663 7 :drawHeader:len.1
  2468 op sub *tmp664 *tmp662 *tmp663
  2469 draw image *tmp664 246 @titanium 12 0
-    * set *tmp657 null
  2470 jump *label384 always
  2471 label *label383
-    * set *tmp657 null
  2472 label *label384
  2473 jump *label386 equal .thoriumContainer false
  2474 sensor *tmp666 .thoriumContainer @thorium
 
  2493 label *label386
  2494 set *tmp665 null
  2495 label *label387
-    * set *tmp644 *tmp665
  2496 label *label380
  2497 set :drawHeader:x.4 174
  2498 draw col %[white]
 
  2510 draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
  2511 label *label392
  2512 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp673 :drawHeader:x.4
  2513 jump *label391 always
  2514 label *label390
-    * set *tmp673 null
  2515 label *label391
  2516 label *label389
  2517 set :drawUnitCount.1:type @mono
 
  2528 draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
  2529 label *label396
  2530 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp676 :drawHeader:x.4
  2531 jump *label395 always
  2532 label *label394
-    * set *tmp676 null
  2533 label *label395
  2534 label *label393
  2535 set :drawUnitCount.2:type @flare
 
  2546 draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
  2547 label *label400
  2548 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp679 :drawHeader:x.4
  2549 jump *label399 always
  2550 label *label398
-    * set *tmp679 null
  2551 label *label399
  2552 label *label397
-    * set *tmp607 null
  2553 label *label341
  2554 label *label339
  2555 return :drawHeader*retaddr
 
  2587 op sub *tmp698 *tmp697 74
  2588 set :unpackCfg:ind *tmp698
  2589 sensor *tmp699 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp699
  2590 sensor *tmp700 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp700
  2591 sensor *tmp701 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp701
  2592 sensor *tmp702 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp702
  2593 sensor *tmp703 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp703
  2594 sensor *tmp704 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp704
  2595 sensor *tmp705 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp705
  2596 sensor *tmp706 :unpackCfg:type @size
  2597 set :unpackCfg:size *tmp706
  2598 label *label403
 
  2612 op equal *tmp707 :drawBlock:index .nextBuildIndex
  2613 jump *label404 equal *tmp707 false
  2614 draw col %80ffffff
-    * set *tmp708 null
  2615 jump *label405 always
  2616 label *label404
  2617 op shl *tmp709 1 :drawBlock:index
 
  2621 op equal *tmp712 *tmp711 0
  2622 jump *label406 equal *tmp712 false
  2623 jump *label401 always
-    * set *tmp713 null
  2624 jump *label407 always
  2625 label *label406
-    * set *tmp713 null
  2626 label *label407
  2627 jump *label408 equal :drawBlock:built false
  2628 set *tmp714 %[white]
 
  2631 set *tmp714 %408040ff
  2632 label *label409
  2633 draw col *tmp714
-    * set *tmp708 null
  2634 label *label405
  2635 op mul *tmp715 2 :drawBlock:x
  2636 op mul *tmp716 2 :drawBlock:y

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-23 instructions):
 
   340 op lessThanEq *tmp133 :drawMaterials:count 0
   341 jump *label75 equal *tmp133 false
   342 jump *label58 always
-    * set *tmp134 null
   343 jump *label76 always
   344 label *label75
-    * set *tmp134 null
   345 label *label76
   346 jump *label67 always
   347 label *label66
 
   362 label *label77
   363 label *label78
   364 op sub :updateDisplay:y :updateDisplay:y 5
-    * set *tmp104 :updateDisplay:y
   365 jump *label50 always
   366 label *label49
-    * set *tmp104 null
   367 label *label50
   368 label *label38
   369 label *label36
 
   474 label *label89
   475 set :updateDisplay:y :drawItem.2:y
   476 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp145 :updateDisplay:y
   477 jump *label88 always
   478 label *label87
   479 sensor *tmp169 A¾BFLW-air-factory13 @lead
 
   628 set :drawItem.4:y :drawItemColor.4:y
   629 label *label103
   630 set :updateDisplay:y :drawItem.4:y
-    * set *tmp145 null
   631 label *label88
   632 jump *label86 always
   633 label *label85
 
  1630 label *label34
  1631 set *tmp51 null
  1632 label *label24
-    * set *tmp49 *tmp51
  1633 jump *label22 always
  1634 label *label21
  1635 op equal *tmp499 .page 1
 
  1949 op equal *tmp533 .scrap false
  1950 jump *label300 equal *tmp533 false
  1951 jump *label261 always
-    * set *tmp534 null
  1952 jump *label301 always
  1953 label *label300
-    * set *tmp534 null
  1954 label *label301
  1955 jump *label299 always
  1956 label *label298
 
  1998 setaddr :drawBlock*retaddr *label312 (h:*label312)
  1999 call *label8 *invalid :drawBlock*retval (m:*label312) (h:*label312)
  2000 label *label312
-    * set *tmp547 null
  2001 jump *label311 always
  2002 label *label310
-    * set *tmp547 null
  2003 label *label311
  2004 jump *label308 always
  2005 label *label307
 
  2157 label *label249
  2158 set *tmp500 *tmp519
  2159 label *label221
-    * set *tmp49 *tmp500
  2160 label *label22
  2161 jump *label20 always
  2162 label *label19
 
  2297 draw image 22 244 .nextBlock 18 0
  2298 draw image 42 244 .nextFactory 18 0
  2299 draw image 62 244 .nextAddReco 18 0
-    * set *tmp621 null
  2300 jump *label355 always
  2301 label *label354
  2302 op equal *tmp622 :drawHeader:count 2
 
  2358 label *label367
  2359 set *tmp623 *tmp628
  2360 label *label357
-    * set *tmp621 *tmp623
  2361 label *label355
  2362 label *label353
  2363 set :drawHeader:tt @second
 
  2474 op mul *tmp670 7 :drawHeader:len.2
  2475 op sub *tmp671 *tmp669 *tmp670
  2476 draw image *tmp671 246 @thorium 12 0
-    * set *tmp665 null
  2477 jump *label387 always
  2478 label *label386
-    * set *tmp665 null
  2479 label *label387
  2480 label *label380
  2481 set :drawHeader:x.4 174
 
  2570 read *tmp697 :unpackCfg:cfg *tmp696
  2571 op sub *tmp698 *tmp697 74
  2572 set :unpackCfg:ind *tmp698
-    * sensor *tmp699 :unpackCfg:type @copper
-    * sensor *tmp700 :unpackCfg:type @lead
-    * sensor *tmp701 :unpackCfg:type @graphite
-    * sensor *tmp702 :unpackCfg:type @silicon
-    * sensor *tmp703 :unpackCfg:type @titanium
-    * sensor *tmp704 :unpackCfg:type @metaglass
-    * sensor *tmp705 :unpackCfg:type @thorium
  2573 sensor *tmp706 :unpackCfg:type @size
  2574 set :unpackCfg:size *tmp706
  2575 label *label403

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
    86 drawflush display1
    87 op add .animation .animation 1
    88 label *label25
-    * set *tmp51 null
    89 jump *label24 always
    90 label *label23
    91 draw clear 0 0 32
 
  1627 label *label206
  1628 drawflush display1
  1629 label *label34
-    * set *tmp51 null
  1630 label *label24
  1631 jump *label22 always
  1632 label *label21
 
  1744 drawflush display1
  1745 op add .lastTail .lastTail 1
  1746 label *label222
-    * set *tmp500 null
  1747 jump *label221 always
  1748 label *label220
  1749 op equal *tmp518 .page 2
 
  2152 label *label315
  2153 set *tmp519 null
  2154 label *label249
-    * set *tmp500 *tmp519
  2155 label *label221
  2156 label *label22
  2157 jump *label20 always
 
  2320 multijump *tmp624 0 0 (m:marker3)
  2321 multilabel *label363 (m:marker3)
  2322 label *label360
-    * set *tmp623 null
  2323 jump *label357 always
  2324 label *label356
  2325 op equal *tmp627 :drawHeader:count 1
 
  2351 label *label366
  2352 set *tmp628 null
  2353 label *label367
-    * set *tmp623 *tmp628
  2354 label *label357
  2355 label *label355
  2356 label *label353

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  2015 multilabel *label297 (m:marker2)
  2016 label *label261
  2017 label *label250
-    * set *tmp519 null
  2018 jump *label249 always
  2019 label *label248
  2020 op sub *tmp552 .page 3
 
  2149 set .lastRecord *tmp596
  2150 drawflush display1
  2151 label *label315
-    * set *tmp519 null
  2152 label *label249
  2153 label *label221
  2154 label *label22
 
  2344 multijump *tmp629 0 0 (m:marker4)
  2345 multilabel *label373 (m:marker4)
  2346 label *label370
-    * set *tmp628 null
  2347 jump *label367 always
  2348 label *label366
-    * set *tmp628 null
  2349 label *label367
  2350 label *label357
  2351 label *label355

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-195 instructions):
 
    15 label *label11
    16 label *label13
    17 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 *tmp40
-    * set .core *tmp40
+   18 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    19 label *label14
    20 op equal *tmp44 .core null
    21 jump *label13 notEqual *tmp44 false
 
    41 draw col %[white]
    42 op div *tmp54 .animation 30
    43 op min *tmp55 *tmp54 1
-    * op max *tmp56 0 *tmp55
-    * set :animate:ratio *tmp56
+   44 op max :animate:ratio 0 *tmp55
    45 set :lerp:from 42
    46 set :lerp:to 90
    47 set :lerp:ratio :animate:ratio
    48 op sub *tmp58 1 :lerp:ratio
    49 op mul *tmp59 *tmp58 :lerp:from
    50 op mul *tmp60 :lerp:ratio :lerp:to
-    * op add *tmp61 *tmp59 *tmp60
-    * set *tmp57 *tmp61
+   51 op add *tmp57 *tmp59 *tmp60
    52 label *label28
    53 set :animate:x *tmp57
    54 set :lerp.1:from 237
 
    57 op sub *tmp63 1 :lerp.1:ratio
    58 op mul *tmp64 *tmp63 :lerp.1:from
    59 op mul *tmp65 :lerp.1:ratio :lerp.1:to
-    * op add *tmp66 *tmp64 *tmp65
-    * set *tmp62 *tmp66
+   60 op add *tmp62 *tmp64 *tmp65
    61 label *label29
    62 set :animate:y *tmp62
    63 set :lerp.2:from 32
 
    66 op sub *tmp68 1 :lerp.2:ratio
    67 op mul *tmp69 *tmp68 :lerp.2:from
    68 op mul *tmp70 :lerp.2:ratio :lerp.2:to
-    * op add *tmp71 *tmp69 *tmp70
-    * set *tmp67 *tmp71
+   69 op add *tmp67 *tmp69 *tmp70
    70 label *label30
    71 set :animate:size *tmp67
    72 draw image :animate:x :animate:y @mega :animate:size 0
 
   114 set :drawItem:y :updateDisplay:y
   115 set :drawItem:columns 1
   116 set :drawItem:item .nextBlock
-    * read *tmp16 processor3 ".mapProgress"
-    * set :drawItem:current *tmp16
-    * read *tmp17 processor3 ".mapTotal"
-    * set :drawItem:target *tmp17
+  117 read :drawItem:current processor3 ".mapProgress"
+  118 read :drawItem:target processor3 ".mapTotal"
   119 set :drawItemColor:color1 %008000FF
   120 set :drawItemColor:color2 %00FF00FF
   121 set :drawItemColor:col :drawItem:col
 
   126 set :drawItemColor:target :drawItem:target
   127 op mul *tmp79 :drawItemColor:columns 176
   128 op div *tmp80 *tmp79 2
-    * op sub *tmp81 214 *tmp80
-    * set :drawItemColor:barLength *tmp81
-    * op add *tmp82 48 :drawItemColor:barLength
-    * set :drawItemColor:textEnd *tmp82
+  129 op sub :drawItemColor:barLength 214 *tmp80
+  130 op add :drawItemColor:textEnd 48 :drawItemColor:barLength
   131 op mul *tmp83 :drawItemColor:barLength :drawItemColor:current
   132 op div *tmp84 *tmp83 :drawItemColor:target
-    * op min *tmp85 :drawItemColor:barLength *tmp84
-    * set :drawItemColor:length *tmp85
+  133 op min :drawItemColor:length :drawItemColor:barLength *tmp84
   134 op mul *tmp86 :drawItemColor:col 176
   135 op div *tmp87 *tmp86 2
-    * op add *tmp88 11 *tmp87
-    * set :drawItemColor:iconX *tmp88
+  136 op add :drawItemColor:iconX 11 *tmp87
   137 op mul *tmp89 :drawItemColor:col 176
   138 op div *tmp90 *tmp89 2
-    * op add *tmp91 22 *tmp90
-    * set :drawItemColor:barX *tmp91
+  139 op add :drawItemColor:barX 22 *tmp90
   140 op mul *tmp92 :drawItemColor:col 176
   141 op div *tmp93 *tmp92 2
-    * op add *tmp94 :drawItemColor:textEnd *tmp93
-    * set :drawItemColor:textX *tmp94
+  142 op add :drawItemColor:textX :drawItemColor:textEnd *tmp93
   143 draw col %[white]
   144 op add *tmp95 :drawItemColor:y 5
   145 draw image :drawItemColor:iconX *tmp95 :drawItemColor:item 16 0
 
   160 print *tmp98
   161 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   162 label *label45
-    * op add *tmp99 :drawBold:x 1
-    * set :drawText.3:x *tmp99
+  163 op add :drawText.3:x :drawBold:x 1
   164 set :drawText.3:y :drawBold:y
   165 set :drawText.3:alignment :drawBold:alignment
   166 print "x"
 
   187 label *label37
   188 op notEqual *tmp103 .nextBlock null
   189 jump *label49 equal *tmp103 false
-    * set *tmp105 .totalTargets
-    * set :drawMaterials:count *tmp105
+  190 set :drawMaterials:count .totalTargets
   191 set :drawTitleRow.1:y :updateDisplay:y
   192 set :drawTitleRow.1:alignment @bottomLeft
   193 set :drawText.4:x 22
 
   260 set :drawItemColor.1:target :drawItem.1:target
   261 op mul *tmp111 :drawItemColor.1:columns 176
   262 op div *tmp112 *tmp111 2
-    * op sub *tmp113 214 *tmp112
-    * set :drawItemColor.1:barLength *tmp113
-    * op add *tmp114 48 :drawItemColor.1:barLength
-    * set :drawItemColor.1:textEnd *tmp114
+  263 op sub :drawItemColor.1:barLength 214 *tmp112
+  264 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
   265 op mul *tmp115 :drawItemColor.1:barLength :drawItemColor.1:current
   266 op div *tmp116 *tmp115 :drawItemColor.1:target
-    * op min *tmp117 :drawItemColor.1:barLength *tmp116
-    * set :drawItemColor.1:length *tmp117
+  267 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
   268 op mul *tmp118 :drawItemColor.1:col 176
   269 op div *tmp119 *tmp118 2
-    * op add *tmp120 11 *tmp119
-    * set :drawItemColor.1:iconX *tmp120
+  270 op add :drawItemColor.1:iconX 11 *tmp119
   271 op mul *tmp121 :drawItemColor.1:col 176
   272 op div *tmp122 *tmp121 2
-    * op add *tmp123 22 *tmp122
-    * set :drawItemColor.1:barX *tmp123
+  273 op add :drawItemColor.1:barX 22 *tmp122
   274 op mul *tmp124 :drawItemColor.1:col 176
   275 op div *tmp125 *tmp124 2
-    * op add *tmp126 :drawItemColor.1:textEnd *tmp125
-    * set :drawItemColor.1:textX *tmp126
+  276 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp125
   277 draw col %[white]
   278 op add *tmp127 :drawItemColor.1:y 5
   279 draw image :drawItemColor.1:iconX *tmp127 :drawItemColor.1:item 16 0
 
   292 print :drawMaterials:target
   293 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   294 label *label71
-    * op add *tmp130 :drawBold.1:x 1
-    * set :drawText.7:x *tmp130
+  295 op add :drawText.7:x :drawBold.1:x 1
   296 set :drawText.7:y :drawBold.1:y
   297 set :drawText.7:alignment :drawBold.1:alignment
   298 print :drawMaterials:target
 
   368 op sub :drawTitleRow.2:y :drawTitleRow.2:y 15
   369 label *label82
   370 set :updateDisplay:y :drawTitleRow.2:y
-    * sensor *tmp141 A¾BFLW-air-factory13 @progress
-    * set :drawAirFactory:progress *tmp141
+  371 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   372 op equal *tmp142 :drawAirFactory:progress 0
   373 jump *label85 equal *tmp142 false
   374 op equal *tmp144 .nextFactory @flare
 
   390 set :drawItemColor.2:target :drawItem.2:target
   391 op mul *tmp147 :drawItemColor.2:columns 176
   392 op div *tmp148 *tmp147 2
-    * op sub *tmp149 214 *tmp148
-    * set :drawItemColor.2:barLength *tmp149
-    * op add *tmp150 48 :drawItemColor.2:barLength
-    * set :drawItemColor.2:textEnd *tmp150
+  393 op sub :drawItemColor.2:barLength 214 *tmp148
+  394 op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
   395 op mul *tmp151 :drawItemColor.2:barLength :drawItemColor.2:current
   396 op div *tmp152 *tmp151 :drawItemColor.2:target
-    * op min *tmp153 :drawItemColor.2:barLength *tmp152
-    * set :drawItemColor.2:length *tmp153
+  397 op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
   398 op mul *tmp154 :drawItemColor.2:col 176
   399 op div *tmp155 *tmp154 2
-    * op add *tmp156 11 *tmp155
-    * set :drawItemColor.2:iconX *tmp156
+  400 op add :drawItemColor.2:iconX 11 *tmp155
   401 op mul *tmp157 :drawItemColor.2:col 176
   402 op div *tmp158 *tmp157 2
-    * op add *tmp159 22 *tmp158
-    * set :drawItemColor.2:barX *tmp159
+  403 op add :drawItemColor.2:barX 22 *tmp158
   404 op mul *tmp160 :drawItemColor.2:col 176
   405 op div *tmp161 *tmp160 2
-    * op add *tmp162 :drawItemColor.2:textEnd *tmp161
-    * set :drawItemColor.2:textX *tmp162
+  406 op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp161
   407 draw col %[white]
   408 op add *tmp163 :drawItemColor.2:y 5
   409 draw image :drawItemColor.2:iconX *tmp163 :drawItemColor.2:item 16 0
 
   422 print 15
   423 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   424 label *label92
-    * op add *tmp166 :drawBold.2:x 1
-    * set :drawText.11:x *tmp166
+  425 op add :drawText.11:x :drawBold.2:x 1
   426 set :drawText.11:y :drawBold.2:y
   427 set :drawText.11:alignment :drawBold.2:alignment
   428 print 15
 
   462 set :drawItemColor.3:target :drawItem.3:target
   463 op mul *tmp170 :drawItemColor.3:columns 176
   464 op div *tmp171 *tmp170 2
-    * op sub *tmp172 214 *tmp171
-    * set :drawItemColor.3:barLength *tmp172
-    * op add *tmp173 48 :drawItemColor.3:barLength
-    * set :drawItemColor.3:textEnd *tmp173
+  465 op sub :drawItemColor.3:barLength 214 *tmp171
+  466 op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
   467 op mul *tmp174 :drawItemColor.3:barLength :drawItemColor.3:current
   468 op div *tmp175 *tmp174 :drawItemColor.3:target
-    * op min *tmp176 :drawItemColor.3:barLength *tmp175
-    * set :drawItemColor.3:length *tmp176
+  469 op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
   470 op mul *tmp177 :drawItemColor.3:col 176
   471 op div *tmp178 *tmp177 2
-    * op add *tmp179 11 *tmp178
-    * set :drawItemColor.3:iconX *tmp179
+  472 op add :drawItemColor.3:iconX 11 *tmp178
   473 op mul *tmp180 :drawItemColor.3:col 176
   474 op div *tmp181 *tmp180 2
-    * op add *tmp182 22 *tmp181
-    * set :drawItemColor.3:barX *tmp182
+  475 op add :drawItemColor.3:barX 22 *tmp181
   476 op mul *tmp183 :drawItemColor.3:col 176
   477 op div *tmp184 *tmp183 2
-    * op add *tmp185 :drawItemColor.3:textEnd *tmp184
-    * set :drawItemColor.3:textX *tmp185
+  478 op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp184
   479 draw col %[white]
   480 op add *tmp186 :drawItemColor.3:y 5
   481 draw image :drawItemColor.3:iconX *tmp186 :drawItemColor.3:item 16 0
 
   494 print 15
   495 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   496 label *label99
-    * op add *tmp189 :drawBold.3:x 1
-    * set :drawText.13:x *tmp189
+  497 op add :drawText.13:x :drawBold.3:x 1
   498 set :drawText.13:y :drawBold.3:y
   499 set :drawText.13:alignment :drawBold.3:alignment
   500 print 15
 
   531 set :drawItemColor.4:target :drawItem.4:target
   532 op mul *tmp193 :drawItemColor.4:columns 176
   533 op div *tmp194 *tmp193 2
-    * op sub *tmp195 214 *tmp194
-    * set :drawItemColor.4:barLength *tmp195
-    * op add *tmp196 48 :drawItemColor.4:barLength
-    * set :drawItemColor.4:textEnd *tmp196
+  534 op sub :drawItemColor.4:barLength 214 *tmp194
+  535 op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
   536 op mul *tmp197 :drawItemColor.4:barLength :drawItemColor.4:current
   537 op div *tmp198 *tmp197 :drawItemColor.4:target
-    * op min *tmp199 :drawItemColor.4:barLength *tmp198
-    * set :drawItemColor.4:length *tmp199
+  538 op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
   539 op mul *tmp200 :drawItemColor.4:col 176
   540 op div *tmp201 *tmp200 2
-    * op add *tmp202 11 *tmp201
-    * set :drawItemColor.4:iconX *tmp202
+  541 op add :drawItemColor.4:iconX 11 *tmp201
   542 op mul *tmp203 :drawItemColor.4:col 176
   543 op div *tmp204 *tmp203 2
-    * op add *tmp205 22 *tmp204
-    * set :drawItemColor.4:barX *tmp205
+  544 op add :drawItemColor.4:barX 22 *tmp204
   545 op mul *tmp206 :drawItemColor.4:col 176
   546 op div *tmp207 *tmp206 2
-    * op add *tmp208 :drawItemColor.4:textEnd *tmp207
-    * set :drawItemColor.4:textX *tmp208
+  547 op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp207
   548 draw col %[white]
   549 op add *tmp209 :drawItemColor.4:y 5
   550 draw image :drawItemColor.4:iconX *tmp209 :drawItemColor.4:item 16 0
 
   563 print 30
   564 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   565 label *label106
-    * op add *tmp212 :drawBold.4:x 1
-    * set :drawText.15:x *tmp212
+  566 op add :drawText.15:x :drawBold.4:x 1
   567 set :drawText.15:y :drawBold.4:y
   568 set :drawText.15:alignment :drawBold.4:alignment
   569 print 30
 
   604 set :drawItemColor.5:target :drawItem.5:target
   605 op mul *tmp217 :drawItemColor.5:columns 176
   606 op div *tmp218 *tmp217 2
-    * op sub *tmp219 214 *tmp218
-    * set :drawItemColor.5:barLength *tmp219
-    * op add *tmp220 48 :drawItemColor.5:barLength
-    * set :drawItemColor.5:textEnd *tmp220
+  607 op sub :drawItemColor.5:barLength 214 *tmp218
+  608 op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
   609 op mul *tmp221 :drawItemColor.5:barLength :drawItemColor.5:current
   610 op div *tmp222 *tmp221 :drawItemColor.5:target
-    * op min *tmp223 :drawItemColor.5:barLength *tmp222
-    * set :drawItemColor.5:length *tmp223
+  611 op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
   612 op mul *tmp224 :drawItemColor.5:col 176
   613 op div *tmp225 *tmp224 2
-    * op add *tmp226 11 *tmp225
-    * set :drawItemColor.5:iconX *tmp226
+  614 op add :drawItemColor.5:iconX 11 *tmp225
   615 op mul *tmp227 :drawItemColor.5:col 176
   616 op div *tmp228 *tmp227 2
-    * op add *tmp229 22 *tmp228
-    * set :drawItemColor.5:barX *tmp229
+  617 op add :drawItemColor.5:barX 22 *tmp228
   618 op mul *tmp230 :drawItemColor.5:col 176
   619 op div *tmp231 *tmp230 2
-    * op add *tmp232 :drawItemColor.5:textEnd *tmp231
-    * set :drawItemColor.5:textX *tmp232
+  620 op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp231
   621 draw col %[white]
   622 op add *tmp233 :drawItemColor.5:y 5
   623 draw image :drawItemColor.5:iconX *tmp233 :drawItemColor.5:item 16 0
 
   637 print "%"
   638 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   639 label *label113
-    * op add *tmp236 :drawBold.5:x 1
-    * set :drawText.17:x *tmp236
+  640 op add :drawText.17:x :drawBold.5:x 1
   641 set :drawText.17:y :drawBold.5:y
   642 set :drawText.17:alignment :drawBold.5:alignment
   643 print *tmp216
 
   686 op sub :drawTitleRow.3:y :drawTitleRow.3:y 15
   687 label *label120
   688 set :updateDisplay:y :drawTitleRow.3:y
-    * sensor *tmp241 AÀF@Lb-additive-reconstructor24 @progress
-    * set :drawAddReco:progress *tmp241
+  689 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   690 op equal *tmp242 :drawAddReco:progress 0
   691 jump *label123 equal *tmp242 false
   692 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
 
   706 set :drawItemColor.6:target :drawItem.6:target
   707 op mul *tmp245 :drawItemColor.6:columns 176
   708 op div *tmp246 *tmp245 2
-    * op sub *tmp247 214 *tmp246
-    * set :drawItemColor.6:barLength *tmp247
-    * op add *tmp248 48 :drawItemColor.6:barLength
-    * set :drawItemColor.6:textEnd *tmp248
+  709 op sub :drawItemColor.6:barLength 214 *tmp246
+  710 op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
   711 op mul *tmp249 :drawItemColor.6:barLength :drawItemColor.6:current
   712 op div *tmp250 *tmp249 :drawItemColor.6:target
-    * op min *tmp251 :drawItemColor.6:barLength *tmp250
-    * set :drawItemColor.6:length *tmp251
+  713 op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
   714 op mul *tmp252 :drawItemColor.6:col 176
   715 op div *tmp253 *tmp252 2
-    * op add *tmp254 11 *tmp253
-    * set :drawItemColor.6:iconX *tmp254
+  716 op add :drawItemColor.6:iconX 11 *tmp253
   717 op mul *tmp255 :drawItemColor.6:col 176
   718 op div *tmp256 *tmp255 2
-    * op add *tmp257 22 *tmp256
-    * set :drawItemColor.6:barX *tmp257
+  719 op add :drawItemColor.6:barX 22 *tmp256
   720 op mul *tmp258 :drawItemColor.6:col 176
   721 op div *tmp259 *tmp258 2
-    * op add *tmp260 :drawItemColor.6:textEnd *tmp259
-    * set :drawItemColor.6:textX *tmp260
+  722 op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp259
   723 draw col %[white]
   724 op add *tmp261 :drawItemColor.6:y 5
   725 draw image :drawItemColor.6:iconX *tmp261 :drawItemColor.6:item 16 0
 
   738 print 40
   739 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   740 label *label128
-    * op add *tmp264 :drawBold.6:x 1
-    * set :drawText.21:x *tmp264
+  741 op add :drawText.21:x :drawBold.6:x 1
   742 set :drawText.21:y :drawBold.6:y
   743 set :drawText.21:alignment :drawBold.6:alignment
   744 print 40
 
   775 set :drawItemColor.7:target :drawItem.7:target
   776 op mul *tmp268 :drawItemColor.7:columns 176
   777 op div *tmp269 *tmp268 2
-    * op sub *tmp270 214 *tmp269
-    * set :drawItemColor.7:barLength *tmp270
-    * op add *tmp271 48 :drawItemColor.7:barLength
-    * set :drawItemColor.7:textEnd *tmp271
+  778 op sub :drawItemColor.7:barLength 214 *tmp269
+  779 op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
   780 op mul *tmp272 :drawItemColor.7:barLength :drawItemColor.7:current
   781 op div *tmp273 *tmp272 :drawItemColor.7:target
-    * op min *tmp274 :drawItemColor.7:barLength *tmp273
-    * set :drawItemColor.7:length *tmp274
+  782 op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
   783 op mul *tmp275 :drawItemColor.7:col 176
   784 op div *tmp276 *tmp275 2
-    * op add *tmp277 11 *tmp276
-    * set :drawItemColor.7:iconX *tmp277
+  785 op add :drawItemColor.7:iconX 11 *tmp276
   786 op mul *tmp278 :drawItemColor.7:col 176
   787 op div *tmp279 *tmp278 2
-    * op add *tmp280 22 *tmp279
-    * set :drawItemColor.7:barX *tmp280
+  788 op add :drawItemColor.7:barX 22 *tmp279
   789 op mul *tmp281 :drawItemColor.7:col 176
   790 op div *tmp282 *tmp281 2
-    * op add *tmp283 :drawItemColor.7:textEnd *tmp282
-    * set :drawItemColor.7:textX *tmp283
+  791 op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp282
   792 draw col %[white]
   793 op add *tmp284 :drawItemColor.7:y 5
   794 draw image :drawItemColor.7:iconX *tmp284 :drawItemColor.7:item 16 0
 
   807 print 40
   808 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   809 label *label135
-    * op add *tmp287 :drawBold.7:x 1
-    * set :drawText.23:x *tmp287
+  810 op add :drawText.23:x :drawBold.7:x 1
   811 set :drawText.23:y :drawBold.7:y
   812 set :drawText.23:alignment :drawBold.7:alignment
   813 print 40
 
   847 set :drawItemColor.8:target :drawItem.8:target
   848 op mul *tmp292 :drawItemColor.8:columns 176
   849 op div *tmp293 *tmp292 2
-    * op sub *tmp294 214 *tmp293
-    * set :drawItemColor.8:barLength *tmp294
-    * op add *tmp295 48 :drawItemColor.8:barLength
-    * set :drawItemColor.8:textEnd *tmp295
+  850 op sub :drawItemColor.8:barLength 214 *tmp293
+  851 op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
   852 op mul *tmp296 :drawItemColor.8:barLength :drawItemColor.8:current
   853 op div *tmp297 *tmp296 :drawItemColor.8:target
-    * op min *tmp298 :drawItemColor.8:barLength *tmp297
-    * set :drawItemColor.8:length *tmp298
+  854 op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
   855 op mul *tmp299 :drawItemColor.8:col 176
   856 op div *tmp300 *tmp299 2
-    * op add *tmp301 11 *tmp300
-    * set :drawItemColor.8:iconX *tmp301
+  857 op add :drawItemColor.8:iconX 11 *tmp300
   858 op mul *tmp302 :drawItemColor.8:col 176
   859 op div *tmp303 *tmp302 2
-    * op add *tmp304 22 *tmp303
-    * set :drawItemColor.8:barX *tmp304
+  860 op add :drawItemColor.8:barX 22 *tmp303
   861 op mul *tmp305 :drawItemColor.8:col 176
   862 op div *tmp306 *tmp305 2
-    * op add *tmp307 :drawItemColor.8:textEnd *tmp306
-    * set :drawItemColor.8:textX *tmp307
+  863 op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp306
   864 draw col %[white]
   865 op add *tmp308 :drawItemColor.8:y 5
   866 draw image :drawItemColor.8:iconX *tmp308 :drawItemColor.8:item 16 0
 
   880 print "%"
   881 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   882 label *label142
-    * op add *tmp311 :drawBold.8:x 1
-    * set :drawText.25:x *tmp311
+  883 op add :drawText.25:x :drawBold.8:x 1
   884 set :drawText.25:y :drawBold.8:y
   885 set :drawText.25:alignment :drawBold.8:alignment
   886 print *tmp291
 
   912 label *label147
   913 label *label148
   914 draw col %[white]
-    * op min *tmp316 :updateDisplay:y 142
-    * set :updateDisplay:y *tmp316
+  915 op min :updateDisplay:y :updateDisplay:y 142
   916 set :drawTitleRow.4:y :updateDisplay:y
   917 set :drawTitleRow.4:alignment @bottomLeft
   918 set :drawText.26:x 22
 
   930 op sub :drawTitleRow.4:y :drawTitleRow.4:y 15
   931 label *label149
   932 set :updateDisplay:y :drawTitleRow.4:y
-    * sensor *tmp317 AÁNBJc-multiplicative-reconstructor25 @progress
-    * set :drawMultiReco:progress *tmp317
+  933 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   934 op equal *tmp318 :drawMultiReco:progress 0
   935 jump *label152 equal *tmp318 false
   936 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
 
   950 set :drawItemColor.9:target :drawItem.9:target
   951 op mul *tmp321 :drawItemColor.9:columns 176
   952 op div *tmp322 *tmp321 2
-    * op sub *tmp323 214 *tmp322
-    * set :drawItemColor.9:barLength *tmp323
-    * op add *tmp324 48 :drawItemColor.9:barLength
-    * set :drawItemColor.9:textEnd *tmp324
+  953 op sub :drawItemColor.9:barLength 214 *tmp322
+  954 op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
   955 op mul *tmp325 :drawItemColor.9:barLength :drawItemColor.9:current
   956 op div *tmp326 *tmp325 :drawItemColor.9:target
-    * op min *tmp327 :drawItemColor.9:barLength *tmp326
-    * set :drawItemColor.9:length *tmp327
+  957 op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
   958 op mul *tmp328 :drawItemColor.9:col 176
   959 op div *tmp329 *tmp328 2
-    * op add *tmp330 11 *tmp329
-    * set :drawItemColor.9:iconX *tmp330
+  960 op add :drawItemColor.9:iconX 11 *tmp329
   961 op mul *tmp331 :drawItemColor.9:col 176
   962 op div *tmp332 *tmp331 2
-    * op add *tmp333 22 *tmp332
-    * set :drawItemColor.9:barX *tmp333
+  963 op add :drawItemColor.9:barX 22 *tmp332
   964 op mul *tmp334 :drawItemColor.9:col 176
   965 op div *tmp335 *tmp334 2
-    * op add *tmp336 :drawItemColor.9:textEnd *tmp335
-    * set :drawItemColor.9:textX *tmp336
+  966 op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp335
   967 draw col %[white]
   968 op add *tmp337 :drawItemColor.9:y 5
   969 draw image :drawItemColor.9:iconX *tmp337 :drawItemColor.9:item 16 0
 
   982 print 40
   983 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   984 label *label157
-    * op add *tmp340 :drawBold.9:x 1
-    * set :drawText.29:x *tmp340
+  985 op add :drawText.29:x :drawBold.9:x 1
   986 set :drawText.29:y :drawBold.9:y
   987 set :drawText.29:alignment :drawBold.9:alignment
   988 print 40
 
  1019 set :drawItemColor.10:target :drawItem.10:target
  1020 op mul *tmp344 :drawItemColor.10:columns 176
  1021 op div *tmp345 *tmp344 2
-    * op sub *tmp346 214 *tmp345
-    * set :drawItemColor.10:barLength *tmp346
-    * op add *tmp347 48 :drawItemColor.10:barLength
-    * set :drawItemColor.10:textEnd *tmp347
+ 1022 op sub :drawItemColor.10:barLength 214 *tmp345
+ 1023 op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
  1024 op mul *tmp348 :drawItemColor.10:barLength :drawItemColor.10:current
  1025 op div *tmp349 *tmp348 :drawItemColor.10:target
-    * op min *tmp350 :drawItemColor.10:barLength *tmp349
-    * set :drawItemColor.10:length *tmp350
+ 1026 op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
  1027 op mul *tmp351 :drawItemColor.10:col 176
  1028 op div *tmp352 *tmp351 2
-    * op add *tmp353 11 *tmp352
-    * set :drawItemColor.10:iconX *tmp353
+ 1029 op add :drawItemColor.10:iconX 11 *tmp352
  1030 op mul *tmp354 :drawItemColor.10:col 176
  1031 op div *tmp355 *tmp354 2
-    * op add *tmp356 22 *tmp355
-    * set :drawItemColor.10:barX *tmp356
+ 1032 op add :drawItemColor.10:barX 22 *tmp355
  1033 op mul *tmp357 :drawItemColor.10:col 176
  1034 op div *tmp358 *tmp357 2
-    * op add *tmp359 :drawItemColor.10:textEnd *tmp358
-    * set :drawItemColor.10:textX *tmp359
+ 1035 op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp358
  1036 draw col %[white]
  1037 op add *tmp360 :drawItemColor.10:y 5
  1038 draw image :drawItemColor.10:iconX *tmp360 :drawItemColor.10:item 16 0
 
  1051 print 80
  1052 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1053 label *label164
-    * op add *tmp363 :drawBold.10:x 1
-    * set :drawText.31:x *tmp363
+ 1054 op add :drawText.31:x :drawBold.10:x 1
  1055 set :drawText.31:y :drawBold.10:y
  1056 set :drawText.31:alignment :drawBold.10:alignment
  1057 print 80
 
  1088 set :drawItemColor.11:target :drawItem.11:target
  1089 op mul *tmp367 :drawItemColor.11:columns 176
  1090 op div *tmp368 *tmp367 2
-    * op sub *tmp369 214 *tmp368
-    * set :drawItemColor.11:barLength *tmp369
-    * op add *tmp370 48 :drawItemColor.11:barLength
-    * set :drawItemColor.11:textEnd *tmp370
+ 1091 op sub :drawItemColor.11:barLength 214 *tmp368
+ 1092 op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
  1093 op mul *tmp371 :drawItemColor.11:barLength :drawItemColor.11:current
  1094 op div *tmp372 *tmp371 :drawItemColor.11:target
-    * op min *tmp373 :drawItemColor.11:barLength *tmp372
-    * set :drawItemColor.11:length *tmp373
+ 1095 op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
  1096 op mul *tmp374 :drawItemColor.11:col 176
  1097 op div *tmp375 *tmp374 2
-    * op add *tmp376 11 *tmp375
-    * set :drawItemColor.11:iconX *tmp376
+ 1098 op add :drawItemColor.11:iconX 11 *tmp375
  1099 op mul *tmp377 :drawItemColor.11:col 176
  1100 op div *tmp378 *tmp377 2
-    * op add *tmp379 22 *tmp378
-    * set :drawItemColor.11:barX *tmp379
+ 1101 op add :drawItemColor.11:barX 22 *tmp378
  1102 op mul *tmp380 :drawItemColor.11:col 176
  1103 op div *tmp381 *tmp380 2
-    * op add *tmp382 :drawItemColor.11:textEnd *tmp381
-    * set :drawItemColor.11:textX *tmp382
+ 1104 op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp381
  1105 draw col %[white]
  1106 op add *tmp383 :drawItemColor.11:y 5
  1107 draw image :drawItemColor.11:iconX *tmp383 :drawItemColor.11:item 16 0
 
  1120 print 130
  1121 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1122 label *label171
-    * op add *tmp386 :drawBold.11:x 1
-    * set :drawText.33:x *tmp386
+ 1123 op add :drawText.33:x :drawBold.11:x 1
  1124 set :drawText.33:y :drawBold.11:y
  1125 set :drawText.33:alignment :drawBold.11:alignment
  1126 print 130
 
  1160 set :drawItemColor.12:target :drawItem.12:target
  1161 op mul *tmp391 :drawItemColor.12:columns 176
  1162 op div *tmp392 *tmp391 2
-    * op sub *tmp393 214 *tmp392
-    * set :drawItemColor.12:barLength *tmp393
-    * op add *tmp394 48 :drawItemColor.12:barLength
-    * set :drawItemColor.12:textEnd *tmp394
+ 1163 op sub :drawItemColor.12:barLength 214 *tmp392
+ 1164 op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
  1165 op mul *tmp395 :drawItemColor.12:barLength :drawItemColor.12:current
  1166 op div *tmp396 *tmp395 :drawItemColor.12:target
-    * op min *tmp397 :drawItemColor.12:barLength *tmp396
-    * set :drawItemColor.12:length *tmp397
+ 1167 op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
  1168 op mul *tmp398 :drawItemColor.12:col 176
  1169 op div *tmp399 *tmp398 2
-    * op add *tmp400 11 *tmp399
-    * set :drawItemColor.12:iconX *tmp400
+ 1170 op add :drawItemColor.12:iconX 11 *tmp399
  1171 op mul *tmp401 :drawItemColor.12:col 176
  1172 op div *tmp402 *tmp401 2
-    * op add *tmp403 22 *tmp402
-    * set :drawItemColor.12:barX *tmp403
+ 1173 op add :drawItemColor.12:barX 22 *tmp402
  1174 op mul *tmp404 :drawItemColor.12:col 176
  1175 op div *tmp405 *tmp404 2
-    * op add *tmp406 :drawItemColor.12:textEnd *tmp405
-    * set :drawItemColor.12:textX *tmp406
+ 1176 op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp405
  1177 draw col %[white]
  1178 op add *tmp407 :drawItemColor.12:y 5
  1179 draw image :drawItemColor.12:iconX *tmp407 :drawItemColor.12:item 16 0
 
  1193 print "%"
  1194 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1195 label *label178
-    * op add *tmp410 :drawBold.12:x 1
-    * set :drawText.35:x *tmp410
+ 1196 op add :drawText.35:x :drawBold.12:x 1
  1197 set :drawText.35:y :drawBold.12:y
  1198 set :drawText.35:alignment :drawBold.12:alignment
  1199 print *tmp390
 
  1263 set :drawItemColor.13:target :drawItem.13:target
  1264 op mul *tmp417 :drawItemColor.13:columns 176
  1265 op div *tmp418 *tmp417 2
-    * op sub *tmp419 214 *tmp418
-    * set :drawItemColor.13:barLength *tmp419
-    * op add *tmp420 48 :drawItemColor.13:barLength
-    * set :drawItemColor.13:textEnd *tmp420
+ 1266 op sub :drawItemColor.13:barLength 214 *tmp418
+ 1267 op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
  1268 op mul *tmp421 :drawItemColor.13:barLength :drawItemColor.13:current
  1269 op div *tmp422 *tmp421 :drawItemColor.13:target
-    * op min *tmp423 :drawItemColor.13:barLength *tmp422
-    * set :drawItemColor.13:length *tmp423
+ 1270 op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
  1271 op mul *tmp424 :drawItemColor.13:col 176
  1272 op div *tmp425 *tmp424 2
-    * op add *tmp426 11 *tmp425
-    * set :drawItemColor.13:iconX *tmp426
+ 1273 op add :drawItemColor.13:iconX 11 *tmp425
  1274 op mul *tmp427 :drawItemColor.13:col 176
  1275 op div *tmp428 *tmp427 2
-    * op add *tmp429 22 *tmp428
-    * set :drawItemColor.13:barX *tmp429
+ 1276 op add :drawItemColor.13:barX 22 *tmp428
  1277 op mul *tmp430 :drawItemColor.13:col 176
  1278 op div *tmp431 *tmp430 2
-    * op add *tmp432 :drawItemColor.13:textEnd *tmp431
-    * set :drawItemColor.13:textX *tmp432
+ 1279 op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp431
  1280 draw col %[white]
  1281 op add *tmp433 :drawItemColor.13:y 5
  1282 draw image :drawItemColor.13:iconX *tmp433 :drawItemColor.13:item 16 0
 
  1292 set :drawText.38:x :drawBold.13:x
  1293 set :drawText.38:y :drawBold.13:y
  1294 set :drawText.38:alignment :drawBold.13:alignment
-    * set *tmp436 .transportTarget
-    * print *tmp436
+ 1295 print .transportTarget
  1296 draw print :drawText.38:x :drawText.38:y :drawText.38:alignment
  1297 label *label194
-    * op add *tmp437 :drawBold.13:x 1
-    * set :drawText.39:x *tmp437
+ 1298 op add :drawText.39:x :drawBold.13:x 1
  1299 set :drawText.39:y :drawBold.13:y
  1300 set :drawText.39:alignment :drawBold.13:alignment
-    * set *tmp438 .transportTarget
-    * print *tmp438
+ 1301 print .transportTarget
  1302 draw print :drawText.39:x :drawText.39:y :drawText.39:alignment
  1303 label *label195
  1304 label *label193
 
  1319 set :updateDisplay:y :drawUnit:y
  1320 jump *label189 always
  1321 label *label188
-    * sensor *tmp441 @unit @firstItem
-    * set :drawBuilder:unitItem *tmp441
+ 1322 sensor :drawBuilder:unitItem @unit @firstItem
  1323 sensor *tmp442 @unit @totalItems
  1324 op equal *tmp443 :drawBuilder:unitItem .transportItem
  1325 op mul *tmp444 *tmp442 *tmp443
 
  1342 set :drawItemColor.14:target :drawItem.14:target
  1343 op mul *tmp445 :drawItemColor.14:columns 176
  1344 op div *tmp446 *tmp445 2
-    * op sub *tmp447 214 *tmp446
-    * set :drawItemColor.14:barLength *tmp447
-    * op add *tmp448 48 :drawItemColor.14:barLength
-    * set :drawItemColor.14:textEnd *tmp448
+ 1345 op sub :drawItemColor.14:barLength 214 *tmp446
+ 1346 op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
  1347 op mul *tmp449 :drawItemColor.14:barLength :drawItemColor.14:current
  1348 op div *tmp450 *tmp449 :drawItemColor.14:target
-    * op min *tmp451 :drawItemColor.14:barLength *tmp450
-    * set :drawItemColor.14:length *tmp451
+ 1349 op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
  1350 op mul *tmp452 :drawItemColor.14:col 176
  1351 op div *tmp453 *tmp452 2
-    * op add *tmp454 11 *tmp453
-    * set :drawItemColor.14:iconX *tmp454
+ 1352 op add :drawItemColor.14:iconX 11 *tmp453
  1353 op mul *tmp455 :drawItemColor.14:col 176
  1354 op div *tmp456 *tmp455 2
-    * op add *tmp457 22 *tmp456
-    * set :drawItemColor.14:barX *tmp457
+ 1355 op add :drawItemColor.14:barX 22 *tmp456
  1356 op mul *tmp458 :drawItemColor.14:col 176
  1357 op div *tmp459 *tmp458 2
-    * op add *tmp460 :drawItemColor.14:textEnd *tmp459
-    * set :drawItemColor.14:textX *tmp460
+ 1358 op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp459
  1359 draw col %[white]
  1360 op add *tmp461 :drawItemColor.14:y 5
  1361 draw image :drawItemColor.14:iconX *tmp461 :drawItemColor.14:item 16 0
 
  1371 set :drawText.40:x :drawBold.14:x
  1372 set :drawText.40:y :drawBold.14:y
  1373 set :drawText.40:alignment :drawBold.14:alignment
-    * set *tmp464 .transportTarget
-    * print *tmp464
+ 1374 print .transportTarget
  1375 draw print :drawText.40:x :drawText.40:y :drawText.40:alignment
  1376 label *label202
-    * op add *tmp465 :drawBold.14:x 1
-    * set :drawText.41:x *tmp465
+ 1377 op add :drawText.41:x :drawBold.14:x 1
  1378 set :drawText.41:y :drawBold.14:y
  1379 set :drawText.41:alignment :drawBold.14:alignment
-    * set *tmp466 .transportTarget
-    * print *tmp466
+ 1380 print .transportTarget
  1381 draw print :drawText.41:x :drawText.41:y :drawText.41:alignment
  1382 label *label203
  1383 label *label201
 
  1429 op sub :drawTitleRow.6:y :drawTitleRow.6:y 15
  1430 label *label211
  1431 set :updateDisplay:y :drawTitleRow.6:y
-    * sensor *tmp473 AJTJK-battery1 @totalPower
-    * set :drawPower:power *tmp473
+ 1432 sensor :drawPower:power AJTJK-battery1 @totalPower
  1433 op mul *tmp474 :drawPower:power 100
  1434 op div *tmp475 *tmp474 4000
  1435 op floor *tmp476 *tmp475
 
  1443 set :drawItemColor.15:target 4000
  1444 op mul *tmp477 :drawItemColor.15:columns 176
  1445 op div *tmp478 *tmp477 2
-    * op sub *tmp479 214 *tmp478
-    * set :drawItemColor.15:barLength *tmp479
-    * op add *tmp480 48 :drawItemColor.15:barLength
-    * set :drawItemColor.15:textEnd *tmp480
+ 1446 op sub :drawItemColor.15:barLength 214 *tmp478
+ 1447 op add :drawItemColor.15:textEnd 48 :drawItemColor.15:barLength
  1448 op mul *tmp481 :drawItemColor.15:barLength :drawItemColor.15:current
  1449 op div *tmp482 *tmp481 :drawItemColor.15:target
-    * op min *tmp483 :drawItemColor.15:barLength *tmp482
-    * set :drawItemColor.15:length *tmp483
+ 1450 op min :drawItemColor.15:length :drawItemColor.15:barLength *tmp482
  1451 op mul *tmp484 :drawItemColor.15:col 176
  1452 op div *tmp485 *tmp484 2
-    * op add *tmp486 11 *tmp485
-    * set :drawItemColor.15:iconX *tmp486
+ 1453 op add :drawItemColor.15:iconX 11 *tmp485
  1454 op mul *tmp487 :drawItemColor.15:col 176
  1455 op div *tmp488 *tmp487 2
-    * op add *tmp489 22 *tmp488
-    * set :drawItemColor.15:barX *tmp489
+ 1456 op add :drawItemColor.15:barX 22 *tmp488
  1457 op mul *tmp490 :drawItemColor.15:col 176
  1458 op div *tmp491 *tmp490 2
-    * op add *tmp492 :drawItemColor.15:textEnd *tmp491
-    * set :drawItemColor.15:textX *tmp492
+ 1459 op add :drawItemColor.15:textX :drawItemColor.15:textEnd *tmp491
  1460 draw col %[white]
  1461 op add *tmp493 :drawItemColor.15:y 5
  1462 draw image :drawItemColor.15:iconX *tmp493 :drawItemColor.15:item 16 0
 
  1476 print "%"
  1477 draw print :drawText.44:x :drawText.44:y :drawText.44:alignment
  1478 label *label216
-    * op add *tmp496 :drawBold.15:x 1
-    * set :drawText.45:x *tmp496
+ 1479 op add :drawText.45:x :drawBold.15:x 1
  1480 set :drawText.45:y :drawBold.15:y
  1481 set :drawText.45:alignment :drawBold.15:alignment
  1482 print *tmp476
 
  1502 label *label21
  1503 op equal *tmp499 .page 1
  1504 jump *label220 equal *tmp499 false
-    * read *tmp501 bank2 510
-    * set :displayStorage:tail *tmp501
+ 1505 read :displayStorage:tail bank2 510
  1506 set :displayStorage:START 190
  1507 jump *label223 equal .pageSwitched false
-    * read *tmp503 bank2 511
-    * set .lastTail *tmp503
+ 1508 read .lastTail bank2 511
  1509 draw col %[gold]
  1510 set :drawBold.16:x 11
  1511 set :drawBold.16:y 206
 
  1516 print "Resources"
  1517 draw print :drawText.46:x :drawText.46:y :drawText.46:alignment
  1518 label *label226
-    * op add *tmp504 :drawBold.16:x 1
-    * set :drawText.47:x *tmp504
+ 1519 op add :drawText.47:x :drawBold.16:x 1
  1520 set :drawText.47:y :drawBold.16:y
  1521 set :drawText.47:alignment :drawBold.16:alignment
  1522 print "Resources"
 
  1524 label *label227
  1525 label *label225
  1526 draw col %[white]
-    * op sub *tmp505 :displayStorage:START 8
-    * set :displayStorage:y *tmp505
+ 1527 op sub :displayStorage:y :displayStorage:START 8
  1528 set :displayStorage:item @copper
  1529 setaddr *tmp506 *label231
  1530 jump *label228 always
 
  1579 jump *label242 always
  1580 label *label241
  1581 label *label242
-    * set *tmp509 .lastTail
-    * read *tmp510 bank2 *tmp509
-    * set :displayStorage:accumulator *tmp510
-    * op add *tmp511 25 .lastTail
-    * set :displayStorage:x *tmp511
-    * op sub *tmp512 :displayStorage:START 8
-    * set :displayStorage:y.1 *tmp512
+ 1582 read :displayStorage:accumulator bank2 .lastTail
+ 1583 op add :displayStorage:x 25 .lastTail
+ 1584 op sub :displayStorage:y.1 :displayStorage:START 8
  1585 set :displayStorage:i 0
  1586 label *label243
  1587 jump *label245 greaterThanEq :displayStorage:i 9
  1588 op and *tmp513 :displayStorage:accumulator 0b11111
-    * op sub *tmp514 *tmp513 8
-    * set :displayStorage:value *tmp514
+ 1589 op sub :displayStorage:value *tmp513 8
  1590 op greaterThanEq *tmp515 :displayStorage:value 0
  1591 jump *label246 equal *tmp515 false
  1592 set *tmp516 %[green]
 
  1635 print "Base map"
  1636 draw print :drawText.48:x :drawText.48:y :drawText.48:alignment
  1637 label *label256
-    * op add *tmp525 :drawBold.17:x 1
-    * set :drawText.49:x *tmp525
+ 1638 op add :drawText.49:x :drawBold.17:x 1
  1639 set :drawText.49:y :drawBold.17:y
  1640 set :drawText.49:alignment :drawBold.17:alignment
  1641 print "Base map"
 
  1839 op greaterThanEq *tmp541 :displayBaseMap:index 0
  1840 jump *label307 equal *tmp541 false
  1841 set .recentBuildIndex -1
-    * set *tmp543 :displayBaseMap:index
-    * readarr<regular> *tmp544 .BLOCKS[] *tmp543
-    * set :drawBlock:cfg *tmp544
+ 1842 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1843 setaddr :drawBlock*retaddr *label309 (h:*label309)
  1844 call *label8 *invalid :drawBlock*retval (m:*label309) (h:*label309)
  1845 label *label309
-    * set *tmp545 .nextBuildIndex
-    * set :displayBaseMap:index *tmp545
+ 1846 set :displayBaseMap:index .nextBuildIndex
  1847 op lessThan *tmp546 :displayBaseMap:index 36
  1848 jump *label310 equal *tmp546 false
-    * set *tmp548 :displayBaseMap:index
-    * readarr<regular> *tmp549 .BLOCKS[] *tmp548
-    * set :drawBlock:cfg *tmp549
+ 1849 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1850 setaddr :drawBlock*retaddr *label312 (h:*label312)
  1851 call *label8 *invalid :drawBlock*retval (m:*label312) (h:*label312)
  1852 label *label312
 
  1872 label *label250
  1873 jump *label249 always
  1874 label *label248
-    * op sub *tmp552 .page 3
-    * set :displayLog:page *tmp552
-    * read *tmp553 bank1 511
-    * set :displayLog:logPosition *tmp553
-    * op sub *tmp554 511 :displayLog:logPosition
-    * set :displayLog:records *tmp554
+ 1875 op sub :displayLog:page .page 3
+ 1876 read :displayLog:logPosition bank1 511
+ 1877 op sub :displayLog:records 511 :displayLog:logPosition
  1878 op sub *tmp555 :displayLog:records 1
  1879 op idiv *tmp556 *tmp555 39
  1880 op add *tmp557 *tmp556 1
-    * op max *tmp558 1 *tmp557
-    * set :displayLog:pages *tmp558
-    * op add *tmp559 :displayLog:pages 3
-    * set .numPages *tmp559
+ 1881 op max :displayLog:pages 1 *tmp557
+ 1882 op add .numPages :displayLog:pages 3
  1883 op mul *tmp560 39 :displayLog:page
-    * op sub *tmp561 511 *tmp560
-    * set :displayLog:start *tmp561
+ 1884 op sub :displayLog:start 511 *tmp560
  1885 op sub *tmp562 :displayLog:start 39
-    * op max *tmp563 :displayLog:logPosition *tmp562
-    * set :displayLog:stop *tmp563
+ 1886 op max :displayLog:stop :displayLog:logPosition *tmp562
  1887 jump *label316 equal .pageSwitched false
  1888 draw col %[gold]
  1889 set :drawBold.18:x 4
 
  1895 print "Build records"
  1896 draw print :drawText.50:x :drawText.50:y :drawText.50:alignment
  1897 label *label319
-    * op add *tmp565 :drawBold.18:x 1
-    * set :drawText.51:x *tmp565
+ 1898 op add :drawText.51:x :drawBold.18:x 1
  1899 set :drawText.51:y :drawBold.18:y
  1900 set :drawText.51:alignment :drawBold.18:alignment
  1901 print "Build records"
 
  1922 op sub :displayLog:position .lastRecord 1
  1923 label *label323
  1924 jump *label325 lessThan :displayLog:position *tmp567
-    * set *tmp568 :displayLog:position
-    * read *tmp569 bank1 *tmp568
-    * set :displayLog:record *tmp569
+ 1925 read :displayLog:record bank1 :displayLog:position
  1926 op sub *tmp570 :displayLog:start :displayLog:position
  1927 op sub *tmp571 *tmp570 1
  1928 set :displayRecord:record :displayLog:record
  1929 set :displayRecord:index *tmp571
-    * op idiv *tmp572 :displayRecord:index 13
-    * set :displayRecord:col *tmp572
-    * op mod *tmp573 :displayRecord:index 13
-    * set :displayRecord:row *tmp573
+ 1930 op idiv :displayRecord:col :displayRecord:index 13
+ 1931 op mod :displayRecord:row :displayRecord:index 13
  1932 op mul *tmp574 58 :displayRecord:col
-    * op add *tmp575 11 *tmp574
-    * set :displayRecord:x *tmp575
+ 1933 op add :displayRecord:x 11 *tmp574
  1934 op mul *tmp576 15 :displayRecord:row
-    * op sub *tmp577 189 *tmp576
-    * set :displayRecord:y *tmp577
-    * op mod *tmp578 :displayRecord:record 1000
-    * set :displayRecord:id *tmp578
+ 1935 op sub :displayRecord:y 189 *tmp576
+ 1936 op mod :displayRecord:id :displayRecord:record 1000
  1937 op greaterThan *tmp579 :displayRecord:id @blockCount
  1938 jump *label327 equal *tmp579 false
  1939 op sub *tmp581 :displayRecord:id @blockCount
-    * lookup unit *tmp582 *tmp581
-    * set *tmp580 *tmp582
+ 1940 lookup unit *tmp580 *tmp581
  1941 jump *label328 always
  1942 label *label327
-    * lookup block *tmp583 :displayRecord:id
-    * set *tmp580 *tmp583
+ 1943 lookup block *tmp580 :displayRecord:id
  1944 label *label328
  1945 set :displayRecord:icon *tmp580
  1946 op div *tmp584 :displayRecord:record 1000
  1947 op div *tmp585 *tmp584 120
-    * op floor *tmp586 *tmp585
-    * set :displayRecord:t *tmp586
-    * op idiv *tmp587 :displayRecord:t 60
-    * set :displayRecord:m *tmp587
-    * op mod *tmp588 :displayRecord:t 60
-    * set :displayRecord:s *tmp588
+ 1948 op floor :displayRecord:t *tmp585
+ 1949 op idiv :displayRecord:m :displayRecord:t 60
+ 1950 op mod :displayRecord:s :displayRecord:t 60
  1951 op lessThan *tmp589 :displayRecord:s 10
  1952 jump *label329 equal *tmp589 false
  1953 set *tmp590 "0"
 
  1980 op sub :displayLog:position :displayLog:position 1
  1981 jump *label323 always
  1982 label *label325
-    * op add *tmp596 :displayLog:stop 1
-    * set .lastRecord *tmp596
+ 1983 op add .lastRecord :displayLog:stop 1
  1984 drawflush display1
  1985 label *label315
  1986 label *label249
 
  2001 print "\n"
  2002 print "==================================[]"
  2003 print "\n"
-    * set *tmp599 .status1
-    * print *tmp599
+ 2004 print .status1
  2005 print "\n"
  2006 print .status2
  2007 print .item2
 
  2010 print .block2
  2011 print ")"
  2012 print "\n"
-    * set *tmp600 .status3
-    * print *tmp600
+ 2013 print .status3
  2014 print "\n"
  2015 printflush message1
  2016 label *label336
  2017 label *label335
-    * sensor *tmp601 switch1 @enabled
-    * set .pageSwitched *tmp601
+ 2018 sensor .pageSwitched switch1 @enabled
  2019 jump *label337 equal .pageSwitched false
  2020 control enabled switch1 false
  2021 op add *tmp604 .page 1
-    * op mod *tmp605 *tmp604 .numPages
-    * set .page *tmp605
+ 2022 op mod .page *tmp604 .numPages
  2023 drawflush null
  2024 draw reset
  2025 draw clear 0 0 32
 
  2043 draw scale 3.5 3.5
  2044 read *tmp0 processor1 "time"
  2045 op div *tmp608 *tmp0 120
-    * op floor *tmp609 *tmp608
-    * set :drawHeader:t *tmp609
-    * op idiv *tmp610 :drawHeader:t 60
-    * set :drawHeader:m *tmp610
-    * op mod *tmp611 :drawHeader:t 60
-    * set :drawHeader:s *tmp611
+ 2046 op floor :drawHeader:t *tmp608
+ 2047 op idiv :drawHeader:m :drawHeader:t 60
+ 2048 op mod :drawHeader:s :drawHeader:t 60
  2049 op lessThan *tmp612 :drawHeader:s 10
  2050 jump *label342 equal *tmp612 false
  2051 set *tmp613 "0"
 
  2066 print :drawHeader:s
  2067 draw print :drawText.54:x :drawText.54:y :drawText.54:alignment
  2068 label *label345
-    * op add *tmp614 :drawBold.19:x 1
-    * set :drawText.55:x *tmp614
+ 2069 op add :drawText.55:x :drawBold.19:x 1
  2070 set :drawText.55:y :drawBold.19:y
  2071 set :drawText.55:alignment :drawBold.19:alignment
  2072 print :drawHeader:m
 
  2090 print "Goal"
  2091 draw print :drawText.56:x :drawText.56:y :drawText.56:alignment
  2092 label *label348
-    * op add *tmp615 :drawBold.20:x 1
-    * set :drawText.57:x *tmp615
+ 2093 op add :drawText.57:x :drawBold.20:x 1
  2094 set :drawText.57:y :drawBold.20:y
  2095 set :drawText.57:alignment :drawBold.20:alignment
  2096 print "Goal"
 
  2109 jump *label353 always
  2110 label *label352
  2111 op add *tmp618 .nextBlock .nextFactory
-    * op add *tmp619 *tmp618 .nextAddReco
-    * set :drawHeader:count *tmp619
+ 2112 op add :drawHeader:count *tmp618 .nextAddReco
  2113 op equal *tmp620 :drawHeader:count 3
  2114 jump *label354 equal *tmp620 false
  2115 draw image 22 244 .nextBlock 18 0
 
  2177 set :drawHeader:tt @second
  2178 read *tmp0 processor1 "time"
  2179 op div *tmp632 *tmp0 120
-    * op floor *tmp633 *tmp632
-    * set :drawHeader:t.1 *tmp633
-    * op idiv *tmp634 :drawHeader:t.1 60
-    * set :drawHeader:m.1 *tmp634
-    * op mod *tmp635 :drawHeader:t.1 60
-    * set :drawHeader:s.1 *tmp635
+ 2180 op floor :drawHeader:t.1 *tmp632
+ 2181 op idiv :drawHeader:m.1 :drawHeader:t.1 60
+ 2182 op mod :drawHeader:s.1 :drawHeader:t.1 60
  2183 op lessThan *tmp636 :drawHeader:s.1 10
  2184 jump *label376 equal *tmp636 false
  2185 set *tmp637 "0"
 
  2193 print :drawHeader:s.1
  2194 op mul *tmp638 10 :drawHeader:t.1
  2195 op div *tmp639 *tmp638 :drawHeader:tt
-    * op round *tmp640 *tmp639
-    * set :drawHeader:ratio *tmp640
+ 2196 op round :drawHeader:ratio *tmp639
  2197 op idiv *tmp641 :drawHeader:ratio 10
  2198 op mod *tmp642 :drawHeader:ratio 10
  2199 print " (x"
 
  2208 label *label378
  2209 op notEqual *tmp643 A¨SSJh-container30 null
  2210 jump *label379 equal *tmp643 false
-    * sensor *tmp645 A¨SSJh-container30 @scrap
-    * set :drawHeader:count.1 *tmp645
+ 2211 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  2212 set :drawHeader:x.1 174
  2213 op log10 *tmp646 :drawHeader:count.1
-    * op floor *tmp647 *tmp646
-    * set :drawHeader:len *tmp647
+ 2214 op floor :drawHeader:len *tmp646
  2215 set :drawText.59:x :drawHeader:x.1
  2216 set :drawText.59:y 255
  2217 set :drawText.59:alignment @topRight
 
  2223 op mul *tmp649 7 :drawHeader:len
  2224 op sub *tmp650 *tmp648 *tmp649
  2225 draw image *tmp650 246 @scrap 12 0
-    * sensor *tmp651 A¨SSJh-container30 @sand
-    * set :drawHeader:count.1 *tmp651
+ 2226 sensor :drawHeader:count.1 A¨SSJh-container30 @sand
  2227 set :drawHeader:x.1 124
  2228 op log10 *tmp652 :drawHeader:count.1
-    * op floor *tmp653 *tmp652
-    * set :drawHeader:len *tmp653
+ 2229 op floor :drawHeader:len *tmp652
  2230 set :drawText.60:x :drawHeader:x.1
  2231 set :drawText.60:y 255
  2232 set :drawText.60:alignment @topRight
 
  2242 label *label379
  2243 jump *label383 equal .titaniumDrill false
  2244 sensor *tmp658 .titaniumDrill @titanium
-    * op max *tmp659 .titaniumDrillCount *tmp658
-    * set :drawHeader:count.2 *tmp659
+ 2245 op max :drawHeader:count.2 .titaniumDrillCount *tmp658
  2246 set :drawHeader:x.2 174
  2247 op log10 *tmp660 :drawHeader:count.2
-    * op floor *tmp661 *tmp660
-    * set :drawHeader:len.1 *tmp661
+ 2248 op floor :drawHeader:len.1 *tmp660
  2249 set :drawText.61:x :drawHeader:x.2
  2250 set :drawText.61:y 255
  2251 set :drawText.61:alignment @topRight
 
  2261 label *label383
  2262 label *label384
  2263 jump *label386 equal .thoriumContainer false
-    * sensor *tmp666 .thoriumContainer @thorium
-    * set :drawHeader:count.3 *tmp666
+ 2264 sensor :drawHeader:count.3 .thoriumContainer @thorium
  2265 set :drawHeader:x.3 124
  2266 op log10 *tmp667 :drawHeader:count.3
-    * op floor *tmp668 *tmp667
-    * set :drawHeader:len.2 *tmp668
+ 2267 op floor :drawHeader:len.2 *tmp667
  2268 set :drawText.62:x :drawHeader:x.3
  2269 set :drawText.62:y 255
  2270 set :drawText.62:alignment @topRight
 
  2348 op add :unpackCfg:index :unpackCfg:index 1
  2349 read *tmp682 :unpackCfg:cfg *tmp681
  2350 op sub *tmp683 *tmp682 74
-    * lookup block *tmp684 *tmp683
-    * set :unpackCfg:type *tmp684
+ 2351 lookup block :unpackCfg:type *tmp683
  2352 set *tmp685 :unpackCfg:index
  2353 op add :unpackCfg:index :unpackCfg:index 1
  2354 read *tmp686 :unpackCfg:cfg *tmp685
  2355 op sub *tmp687 *tmp686 74
-    * op div *tmp688 *tmp687 2
-    * set :unpackCfg:x *tmp688
+ 2356 op div :unpackCfg:x *tmp687 2
  2357 set *tmp689 :unpackCfg:index
  2358 op add :unpackCfg:index :unpackCfg:index 1
  2359 read *tmp690 :unpackCfg:cfg *tmp689
  2360 op sub *tmp691 *tmp690 74
-    * op div *tmp692 *tmp691 2
-    * set :unpackCfg:y *tmp692
+ 2361 op div :unpackCfg:y *tmp691 2
  2362 set *tmp693 :unpackCfg:index
  2363 op add :unpackCfg:index :unpackCfg:index 1
  2364 read *tmp694 :unpackCfg:cfg *tmp693
-    * op sub *tmp695 *tmp694 74
-    * set :unpackCfg:rotation *tmp695
+ 2365 op sub :unpackCfg:rotation *tmp694 74
  2366 set *tmp696 :unpackCfg:index
  2367 op add :unpackCfg:index :unpackCfg:index 1
  2368 read *tmp697 :unpackCfg:cfg *tmp696
-    * op sub *tmp698 *tmp697 74
-    * set :unpackCfg:ind *tmp698
-    * sensor *tmp706 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp706
+ 2369 op sub :unpackCfg:ind *tmp697 74
+ 2370 sensor :unpackCfg:size :unpackCfg:type @size
  2371 label *label403
  2372 set :unpackCfg2:type :unpackCfg:type
  2373 set :unpackCfg2:x :unpackCfg:x
 
  2388 jump *label405 always
  2389 label *label404
  2390 op shl *tmp709 1 :drawBlock:index
-    * op and *tmp710 .blocksBuilt *tmp709
-    * set :drawBlock:built *tmp710
+ 2391 op and :drawBlock:built .blocksBuilt *tmp709
  2392 op add *tmp711 :drawBlock:built .pageSwitched
  2393 op equal *tmp712 *tmp711 0
  2394 jump *label406 equal *tmp712 false

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    21 jump *label13 notEqual *tmp44 false
    22 label *label15
    23 label *label16
-    * jump *label18 equal true false
    24 sensor *tmp45 processor2 @bufferSize
    25 op lessThan *tmp46 *tmp45 200
    26 jump *label19 equal *tmp46 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-62 instructions):
 
    17 ubind @poly
    18 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    19 label *label14
-    * op equal *tmp44 .core null
-    * jump *label13 notEqual *tmp44 false
+   20 jump *label13 equal .core null
    21 label *label15
    22 label *label16
    23 sensor *tmp45 processor2 @bufferSize
-    * op lessThan *tmp46 *tmp45 200
-    * jump *label19 equal *tmp46 false
-    * op equal *tmp48 .page 0
-    * jump *label21 equal *tmp48 false
-    * op greaterThan *tmp50 .megas 0
-    * jump *label23 equal *tmp50 false
-    * op lessThan *tmp52 .animation 0
-    * jump *label26 equal *tmp52 false
+   24 jump *label19 greaterThanEq *tmp45 200
+   25 jump *label21 notEqual .page 0
+   26 jump *label23 lessThanEq .megas 0
+   27 jump *label26 greaterThanEq .animation 0
    28 draw color 0 0 32 80
    29 draw rect 0 0 176 176
    30 jump *label27 always
 
    64 label *label30
    65 set :animate:size *tmp67
    66 draw image :animate:x :animate:y @mega :animate:size 0
-    * op equal *tmp72 :animate:ratio 1
-    * jump *label31 equal *tmp72 false
+   67 jump *label31 notEqual :animate:ratio 1
    68 setaddr :drawHeader*retaddr *label33 (h:*label33)
    69 call *label7 *invalid :drawHeader*retval (m:*label33) (h:*label33)
    70 label *label33
 
   163 label *label46
   164 label *label44
   165 op add :drawItemColor:col :drawItemColor:col 1
-    * op greaterThanEq *tmp101 :drawItemColor:col :drawItemColor:columns
-    * jump *label47 equal *tmp101 false
+  166 jump *label47 lessThan :drawItemColor:col :drawItemColor:columns
   167 set :drawItemColor:col 0
   168 op sub :drawItemColor:y :drawItemColor:y 15
   169 jump *label48 always
 
   177 op sub :updateDisplay:y :updateDisplay:y 35
   178 jump *label38 always
   179 label *label37
-    * op notEqual *tmp103 .nextBlock null
-    * jump *label49 equal *tmp103 false
+  180 jump *label49 equal .nextBlock null
   181 set :drawMaterials:count .totalTargets
   182 set :drawTitleRow.1:y :updateDisplay:y
   183 set :drawTitleRow.1:alignment @bottomLeft
 
   232 set :drawMaterials:target .targetThorium
   233 setaddr *tmp107 *label65
   234 label *label56
-    * op greaterThan *tmp108 :drawMaterials:target 0
-    * jump *label66 equal *tmp108 false
+  235 jump *label66 lessThanEq :drawMaterials:target 0
   236 sensor *tmp110 .core :drawMaterials:item
   237 set :drawItem.1:col :drawMaterials:col
   238 set :drawItem.1:y :updateDisplay:y
 
   290 label *label72
   291 label *label70
   292 op add :drawItemColor.1:col :drawItemColor.1:col 1
-    * op greaterThanEq *tmp131 :drawItemColor.1:col :drawItemColor.1:columns
-    * jump *label73 equal *tmp131 false
+  293 jump *label73 lessThan :drawItemColor.1:col :drawItemColor.1:columns
   294 set :drawItemColor.1:col 0
   295 op sub :drawItemColor.1:y :drawItemColor.1:y 15
   296 jump *label74 always
 
   303 set :drawMaterials:col :drawItem.1:col
   304 set :updateDisplay:y :drawItem.1:y
   305 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp133 :drawMaterials:count 0
-    * jump *label75 equal *tmp133 false
+  306 jump *label75 greaterThan :drawMaterials:count 0
   307 jump *label58 always
   308 jump *label76 always
   309 label *label75
 
   318 jump *label55 always
   319 label *label54
   320 label *label55
-    * op lessThan *tmp135 .totalTargets 3
-    * jump *label77 equal *tmp135 false
+  321 jump *label77 greaterThanEq .totalTargets 3
   322 op sub *tmp137 3 .totalTargets
   323 op mul *tmp138 *tmp137 15
   324 op sub :updateDisplay:y :updateDisplay:y *tmp138
 
   331 label *label50
   332 label *label38
   333 label *label36
-    * op equal *tmp139 .nextFactory null
-    * jump *label80 equal *tmp139 false
+  334 jump *label80 notEqual .nextFactory null
   335 jump *label79 always
   336 jump *label81 always
   337 label *label80
 
   355 label *label82
   356 set :updateDisplay:y :drawTitleRow.2:y
   357 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
-    * op equal *tmp142 :drawAirFactory:progress 0
-    * jump *label85 equal *tmp142 false
-    * op equal *tmp144 .nextFactory @flare
-    * jump *label87 equal *tmp144 false
+  358 jump *label85 notEqual :drawAirFactory:progress 0
+  359 jump *label87 notEqual .nextFactory @flare
   360 sensor *tmp146 A¾BFLW-air-factory13 @silicon
   361 set :drawItem.2:col 0
   362 set :drawItem.2:y :updateDisplay:y
 
   414 label *label93
   415 label *label91
   416 op add :drawItemColor.2:col :drawItemColor.2:col 1
-    * op greaterThanEq *tmp167 :drawItemColor.2:col :drawItemColor.2:columns
-    * jump *label94 equal *tmp167 false
+  417 jump *label94 lessThan :drawItemColor.2:col :drawItemColor.2:columns
   418 set :drawItemColor.2:col 0
   419 op sub :drawItemColor.2:y :drawItemColor.2:y 15
   420 jump *label95 always
 
   485 label *label100
   486 label *label98
   487 op add :drawItemColor.3:col :drawItemColor.3:col 1
-    * op greaterThanEq *tmp190 :drawItemColor.3:col :drawItemColor.3:columns
-    * jump *label101 equal *tmp190 false
+  488 jump *label101 lessThan :drawItemColor.3:col :drawItemColor.3:columns
   489 set :drawItemColor.3:col 0
   490 op sub :drawItemColor.3:y :drawItemColor.3:y 15
   491 jump *label102 always
 
   553 label *label107
   554 label *label105
   555 op add :drawItemColor.4:col :drawItemColor.4:col 1
-    * op greaterThanEq *tmp213 :drawItemColor.4:col :drawItemColor.4:columns
-    * jump *label108 equal *tmp213 false
+  556 jump *label108 lessThan :drawItemColor.4:col :drawItemColor.4:columns
   557 set :drawItemColor.4:col 0
   558 op sub :drawItemColor.4:y :drawItemColor.4:y 15
   559 jump *label109 always
 
   627 label *label114
   628 label *label112
   629 op add :drawItemColor.5:col :drawItemColor.5:col 1
-    * op greaterThanEq *tmp237 :drawItemColor.5:col :drawItemColor.5:columns
-    * jump *label115 equal *tmp237 false
+  630 jump *label115 lessThan :drawItemColor.5:col :drawItemColor.5:columns
   631 set :drawItemColor.5:col 0
   632 op sub :drawItemColor.5:y :drawItemColor.5:y 15
   633 jump *label116 always
 
   642 label *label86
   643 op sub :updateDisplay:y :updateDisplay:y 5
   644 label *label79
-    * op equal *tmp239 .nextAddReco null
-    * jump *label118 equal *tmp239 false
+  645 jump *label118 notEqual .nextAddReco null
   646 jump *label117 always
   647 jump *label119 always
   648 label *label118
 
   666 label *label120
   667 set :updateDisplay:y :drawTitleRow.3:y
   668 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
-    * op equal *tmp242 :drawAddReco:progress 0
-    * jump *label123 equal *tmp242 false
+  669 jump *label123 notEqual :drawAddReco:progress 0
   670 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
   671 set :drawItem.6:col 0
   672 set :drawItem.6:y :updateDisplay:y
 
   724 label *label129
   725 label *label127
   726 op add :drawItemColor.6:col :drawItemColor.6:col 1
-    * op greaterThanEq *tmp265 :drawItemColor.6:col :drawItemColor.6:columns
-    * jump *label130 equal *tmp265 false
+  727 jump *label130 lessThan :drawItemColor.6:col :drawItemColor.6:columns
   728 set :drawItemColor.6:col 0
   729 op sub :drawItemColor.6:y :drawItemColor.6:y 15
   730 jump *label131 always
 
   792 label *label136
   793 label *label134
   794 op add :drawItemColor.7:col :drawItemColor.7:col 1
-    * op greaterThanEq *tmp288 :drawItemColor.7:col :drawItemColor.7:columns
-    * jump *label137 equal *tmp288 false
+  795 jump *label137 lessThan :drawItemColor.7:col :drawItemColor.7:columns
   796 set :drawItemColor.7:col 0
   797 op sub :drawItemColor.7:y :drawItemColor.7:y 15
   798 jump *label138 always
 
   865 label *label143
   866 label *label141
   867 op add :drawItemColor.8:col :drawItemColor.8:col 1
-    * op greaterThanEq *tmp312 :drawItemColor.8:col :drawItemColor.8:columns
-    * jump *label144 equal *tmp312 false
+  868 jump *label144 lessThan :drawItemColor.8:col :drawItemColor.8:columns
   869 set :drawItemColor.8:col 0
   870 op sub :drawItemColor.8:y :drawItemColor.8:y 15
   871 jump *label145 always
 
   880 label *label124
   881 op sub :updateDisplay:y :updateDisplay:y 5
   882 label *label117
-    * op equal *tmp314 .nextMultiReco null
-    * jump *label147 equal *tmp314 false
+  883 jump *label147 notEqual .nextMultiReco null
   884 jump *label146 always
   885 jump *label148 always
   886 label *label147
 
   905 label *label149
   906 set :updateDisplay:y :drawTitleRow.4:y
   907 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
-    * op equal *tmp318 :drawMultiReco:progress 0
-    * jump *label152 equal *tmp318 false
+  908 jump *label152 notEqual :drawMultiReco:progress 0
   909 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
   910 set :drawItem.9:col 0
   911 set :drawItem.9:y :updateDisplay:y
 
   963 label *label158
   964 label *label156
   965 op add :drawItemColor.9:col :drawItemColor.9:col 1
-    * op greaterThanEq *tmp341 :drawItemColor.9:col :drawItemColor.9:columns
-    * jump *label159 equal *tmp341 false
+  966 jump *label159 lessThan :drawItemColor.9:col :drawItemColor.9:columns
   967 set :drawItemColor.9:col 0
   968 op sub :drawItemColor.9:y :drawItemColor.9:y 15
   969 jump *label160 always
 
  1031 label *label165
  1032 label *label163
  1033 op add :drawItemColor.10:col :drawItemColor.10:col 1
-    * op greaterThanEq *tmp364 :drawItemColor.10:col :drawItemColor.10:columns
-    * jump *label166 equal *tmp364 false
+ 1034 jump *label166 lessThan :drawItemColor.10:col :drawItemColor.10:columns
  1035 set :drawItemColor.10:col 0
  1036 op sub :drawItemColor.10:y :drawItemColor.10:y 15
  1037 jump *label167 always
 
  1099 label *label172
  1100 label *label170
  1101 op add :drawItemColor.11:col :drawItemColor.11:col 1
-    * op greaterThanEq *tmp387 :drawItemColor.11:col :drawItemColor.11:columns
-    * jump *label173 equal *tmp387 false
+ 1102 jump *label173 lessThan :drawItemColor.11:col :drawItemColor.11:columns
  1103 set :drawItemColor.11:col 0
  1104 op sub :drawItemColor.11:y :drawItemColor.11:y 15
  1105 jump *label174 always
 
  1172 label *label179
  1173 label *label177
  1174 op add :drawItemColor.12:col :drawItemColor.12:col 1
-    * op greaterThanEq *tmp411 :drawItemColor.12:col :drawItemColor.12:columns
-    * jump *label180 equal *tmp411 false
+ 1175 jump *label180 lessThan :drawItemColor.12:col :drawItemColor.12:columns
  1176 set :drawItemColor.12:col 0
  1177 op sub :drawItemColor.12:y :drawItemColor.12:y 15
  1178 jump *label181 always
 
  1211 op sub :drawTitleRow.5:y :drawTitleRow.5:y 15
  1212 label *label185
  1213 set :updateDisplay:y :drawTitleRow.5:y
-    * op equal *tmp415 .transportItem null
-    * jump *label188 equal *tmp415 false
+ 1214 jump *label188 notEqual .transportItem null
  1215 set :drawUnit:item @poly
  1216 set :drawUnit:items 0
  1217 set :drawUnit:y :updateDisplay:y
 
  1271 label *label195
  1272 label *label193
  1273 op add :drawItemColor.13:col :drawItemColor.13:col 1
-    * op greaterThanEq *tmp439 :drawItemColor.13:col :drawItemColor.13:columns
-    * jump *label196 equal *tmp439 false
+ 1274 jump *label196 lessThan :drawItemColor.13:col :drawItemColor.13:columns
  1275 set :drawItemColor.13:col 0
  1276 op sub :drawItemColor.13:y :drawItemColor.13:y 15
  1277 jump *label197 always
 
  1349 label *label203
  1350 label *label201
  1351 op add :drawItemColor.14:col :drawItemColor.14:col 1
-    * op greaterThanEq *tmp467 :drawItemColor.14:col :drawItemColor.14:columns
-    * jump *label204 equal *tmp467 false
+ 1352 jump *label204 lessThan :drawItemColor.14:col :drawItemColor.14:columns
  1353 set :drawItemColor.14:col 0
  1354 op sub :drawItemColor.14:y :drawItemColor.14:y 15
  1355 jump *label205 always
 
  1364 set :updateDisplay:y :drawUnit.1:y
  1365 label *label189
  1366 label *label182
-    * op lessThan *tmp469 :updateDisplay:y 20
-    * jump *label207 equal *tmp469 false
+ 1367 jump *label207 greaterThanEq :updateDisplay:y 20
  1368 jump *label206 always
  1369 jump *label208 always
  1370 label *label207
  1371 label *label208
-    * op equal *tmp471 AJTJK-battery1 null
-    * jump *label209 equal *tmp471 false
+ 1372 jump *label209 notEqual AJTJK-battery1 null
  1373 jump *label206 always
  1374 jump *label210 always
  1375 label *label209
 
  1449 label *label217
  1450 label *label215
  1451 op add :drawItemColor.15:col :drawItemColor.15:col 1
-    * op greaterThanEq *tmp497 :drawItemColor.15:col :drawItemColor.15:columns
-    * jump *label218 equal *tmp497 false
+ 1452 jump *label218 lessThan :drawItemColor.15:col :drawItemColor.15:columns
  1453 set :drawItemColor.15:col 0
  1454 op sub :drawItemColor.15:y :drawItemColor.15:y 15
  1455 jump *label219 always
 
  1463 label *label24
  1464 jump *label22 always
  1465 label *label21
-    * op equal *tmp499 .page 1
-    * jump *label220 equal *tmp499 false
+ 1466 jump *label220 notEqual .page 1
  1467 read :displayStorage:tail bank2 510
  1468 set :displayStorage:START 190
  1469 jump *label223 equal .pageSwitched false
 
  1535 call *label7 *invalid :drawHeader*retval (m:*label240) (h:*label240)
  1536 label *label240
  1537 drawflush display1
-    * op greaterThan *tmp507 .lastTail :displayStorage:tail
-    * jump *label241 equal *tmp507 false
+ 1538 jump *label241 lessThanEq .lastTail :displayStorage:tail
  1539 jump *label222 always
  1540 jump *label242 always
  1541 label *label241
 
  1548 jump *label245 greaterThanEq :displayStorage:i 9
  1549 op and *tmp513 :displayStorage:accumulator 0b11111
  1550 op sub :displayStorage:value *tmp513 8
-    * op greaterThanEq *tmp515 :displayStorage:value 0
-    * jump *label246 equal *tmp515 false
+ 1551 jump *label246 lessThan :displayStorage:value 0
  1552 set *tmp516 %[green]
  1553 jump *label247 always
  1554 label *label246
 
  1567 label *label222
  1568 jump *label221 always
  1569 label *label220
-    * op equal *tmp518 .page 2
-    * jump *label248 equal *tmp518 false
+ 1570 jump *label248 notEqual .page 2
  1571 setaddr :drawHeader*retaddr *label251 (h:*label251)
  1572 call *label7 *invalid :drawHeader*retval (m:*label251) (h:*label251)
  1573 label *label251
 
  1760 set :displayBaseMap:cfg "AXTLJm-pulverizer35"
  1761 setaddr *tmp530 *label297
  1762 label *label259
-    * op equal *tmp531 :displayBaseMap:cfg "AXPRJd-pulverizer26"
-    * jump *label298 equal *tmp531 false
-    * op equal *tmp533 .scrap false
-    * jump *label300 equal *tmp533 false
+ 1763 jump *label298 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
+ 1764 jump *label300 notEqual .scrap false
  1765 jump *label261 always
  1766 jump *label301 always
  1767 label *label300
 
  1770 label *label298
  1771 label *label299
  1772 op add :displayBaseMap:counter :displayBaseMap:counter 1
-    * op greaterThan *tmp535 :displayBaseMap:counter :displayBaseMap:limit
-    * jump *label302 equal *tmp535 false
+ 1773 jump *label302 lessThanEq :displayBaseMap:counter :displayBaseMap:limit
  1774 setaddr :drawHeader*retaddr *label304 (h:*label304)
  1775 call *label7 *invalid :drawHeader*retval (m:*label304) (h:*label304)
  1776 label *label304
 
  1792 call *label8 *invalid :drawBlock*retval (m:*label306) (h:*label306)
  1793 label *label306
  1794 set :displayBaseMap:index .recentBuildIndex
-    * op greaterThanEq *tmp541 :displayBaseMap:index 0
-    * jump *label307 equal *tmp541 false
+ 1795 jump *label307 lessThan :displayBaseMap:index 0
  1796 set .recentBuildIndex -1
  1797 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1798 setaddr :drawBlock*retaddr *label309 (h:*label309)
  1799 call *label8 *invalid :drawBlock*retval (m:*label309) (h:*label309)
  1800 label *label309
  1801 set :displayBaseMap:index .nextBuildIndex
-    * op lessThan *tmp546 :displayBaseMap:index 36
-    * jump *label310 equal *tmp546 false
+ 1802 jump *label310 greaterThanEq :displayBaseMap:index 36
  1803 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1804 setaddr :drawBlock*retaddr *label312 (h:*label312)
  1805 call *label8 *invalid :drawBlock*retval (m:*label312) (h:*label312)
 
  1888 op mul *tmp576 15 :displayRecord:row
  1889 op sub :displayRecord:y 189 *tmp576
  1890 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp579 :displayRecord:id @blockCount
-    * jump *label327 equal *tmp579 false
+ 1891 jump *label327 lessThanEq :displayRecord:id @blockCount
  1892 op sub *tmp581 :displayRecord:id @blockCount
  1893 lookup unit *tmp580 *tmp581
  1894 jump *label328 always
 
  1901 op floor :displayRecord:t *tmp585
  1902 op idiv :displayRecord:m :displayRecord:t 60
  1903 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp589 :displayRecord:s 10
-    * jump *label329 equal *tmp589 false
+ 1904 jump *label329 greaterThanEq :displayRecord:s 10
  1905 set *tmp590 "0"
  1906 jump *label330 always
  1907 label *label329
 
  1941 jump *label20 always
  1942 label *label19
  1943 label *label20
-    * op greaterThan *tmp597 .megas 0
-    * jump *label334 equal *tmp597 false
+ 1944 jump *label334 lessThanEq .megas 0
  1945 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1946 print "\n"
  1947 printflush message1
 
  1988 draw reset
  1989 draw color 0 0 32 255
  1990 draw rect 0 217 200 300
-    * op greaterThan *tmp606 .megas 0
-    * jump *label340 equal *tmp606 false
+ 1991 jump *label340 lessThanEq .megas 0
  1992 draw col %[gold]
  1993 draw scale 3.5 3.5
  1994 read *tmp0 processor1 "time"
 
  1996 op floor :drawHeader:t *tmp608
  1997 op idiv :drawHeader:m :drawHeader:t 60
  1998 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp612 :drawHeader:s 10
-    * jump *label342 equal *tmp612 false
+ 1999 jump *label342 greaterThanEq :drawHeader:s 10
  2000 set *tmp613 "0"
  2001 jump *label343 always
  2002 label *label342
 
  2059 label *label352
  2060 op add *tmp618 .nextBlock .nextFactory
  2061 op add :drawHeader:count *tmp618 .nextAddReco
-    * op equal *tmp620 :drawHeader:count 3
-    * jump *label354 equal *tmp620 false
+ 2062 jump *label354 notEqual :drawHeader:count 3
  2063 draw image 22 244 .nextBlock 18 0
  2064 draw image 42 244 .nextFactory 18 0
  2065 draw image 62 244 .nextAddReco 18 0
  2066 jump *label355 always
  2067 label *label354
-    * op equal *tmp622 :drawHeader:count 2
-    * jump *label356 equal *tmp622 false
+ 2068 jump *label356 notEqual :drawHeader:count 2
  2069 set :drawHeader:x 27
  2070 set :drawHeader:goal .nextBlock
  2071 setaddr *tmp624 *label361
 
  2078 set :drawHeader:goal .nextAddReco
  2079 setaddr *tmp624 *label363
  2080 label *label358
-    * op notEqual *tmp625 :drawHeader:goal null
-    * jump *label364 equal *tmp625 false
+ 2081 jump *label364 equal :drawHeader:goal null
  2082 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2083 op add :drawHeader:x :drawHeader:x 30
  2084 jump *label365 always
 
  2090 label *label360
  2091 jump *label357 always
  2092 label *label356
-    * op equal *tmp627 :drawHeader:count 1
-    * jump *label366 equal *tmp627 false
+ 2093 jump *label366 notEqual :drawHeader:count 1
  2094 set :drawHeader:goal.1 .nextBlock
  2095 setaddr *tmp629 *label371
  2096 jump *label368 always
 
  2102 set :drawHeader:goal.1 .nextAddReco
  2103 setaddr *tmp629 *label373
  2104 label *label368
-    * op notEqual *tmp630 :drawHeader:goal.1 null
-    * jump *label374 equal *tmp630 false
+ 2105 jump *label374 equal :drawHeader:goal.1 null
  2106 draw image 42 237 :drawHeader:goal.1 32 0
  2107 jump *label370 always
  2108 jump *label375 always
 
  2124 op floor :drawHeader:t.1 *tmp632
  2125 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  2126 op mod :drawHeader:s.1 :drawHeader:t.1 60
-    * op lessThan *tmp636 :drawHeader:s.1 10
-    * jump *label376 equal *tmp636 false
+ 2127 jump *label376 greaterThanEq :drawHeader:s.1 10
  2128 set *tmp637 "0"
  2129 jump *label377 always
  2130 label *label376
 
  2149 print ")"
  2150 draw print :drawText.58:x :drawText.58:y :drawText.58:alignment
  2151 label *label378
-    * op notEqual *tmp643 A¨SSJh-container30 null
-    * jump *label379 equal *tmp643 false
+ 2152 jump *label379 equal A¨SSJh-container30 null
  2153 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  2154 set :drawHeader:x.1 174
  2155 op log10 *tmp646 :drawHeader:count.1
 
  2226 draw col %[white]
  2227 set :drawUnitCount:type @poly
  2228 set :drawUnitCount:count .polys
-    * op greaterThan *tmp672 :drawUnitCount:count 0
-    * jump *label390 equal *tmp672 false
+ 2229 jump *label390 lessThanEq :drawUnitCount:count 0
  2230 op sub *tmp674 :drawHeader:x.4 20
  2231 draw image *tmp674 227 :drawUnitCount:type 12 0
  2232 set :drawText.63:x :drawHeader:x.4
 
  2243 label *label389
  2244 set :drawUnitCount.1:type @mono
  2245 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp675 :drawUnitCount.1:count 0
-    * jump *label394 equal *tmp675 false
+ 2246 jump *label394 lessThanEq :drawUnitCount.1:count 0
  2247 op sub *tmp677 :drawHeader:x.4 20
  2248 draw image *tmp677 227 :drawUnitCount.1:type 12 0
  2249 set :drawText.64:x :drawHeader:x.4
 
  2260 label *label393
  2261 set :drawUnitCount.2:type @flare
  2262 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp678 :drawUnitCount.2:count 0
-    * jump *label398 equal *tmp678 false
+ 2263 jump *label398 lessThanEq :drawUnitCount.2:count 0
  2264 op sub *tmp680 :drawHeader:x.4 20
  2265 draw image *tmp680 227 :drawUnitCount.2:type 12 0
  2266 set :drawText.65:x :drawHeader:x.4
 
  2321 set :drawBlock:rotation :unpackCfg2:rotation
  2322 set :drawBlock:size :unpackCfg2:size
  2323 set :drawBlock:index :unpackCfg2:index
-    * op equal *tmp707 :drawBlock:index .nextBuildIndex
-    * jump *label404 equal *tmp707 false
+ 2324 jump *label404 notEqual :drawBlock:index .nextBuildIndex
  2325 draw col %80ffffff
  2326 jump *label405 always
  2327 label *label404
  2328 op shl *tmp709 1 :drawBlock:index
  2329 op and :drawBlock:built .blocksBuilt *tmp709
  2330 op add *tmp711 :drawBlock:built .pageSwitched
-    * op equal *tmp712 *tmp711 0
-    * jump *label406 equal *tmp712 false
+ 2331 jump *label406 notEqual *tmp711 0
  2332 jump *label401 always
  2333 jump *label407 always
  2334 label *label406

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-51 instructions):
 
    68 setaddr :drawHeader*retaddr *label33 (h:*label33)
    69 call *label7 *invalid :drawHeader*retval (m:*label33) (h:*label33)
    70 label *label33
-    * jump *label32 always
    71 label *label31
    72 label *label32
    73 drawflush display1
 
   165 jump *label47 lessThan :drawItemColor:col :drawItemColor:columns
   166 set :drawItemColor:col 0
   167 op sub :drawItemColor:y :drawItemColor:y 15
-    * jump *label48 always
   168 label *label47
   169 label *label48
   170 label *label43
 
   291 jump *label73 lessThan :drawItemColor.1:col :drawItemColor.1:columns
   292 set :drawItemColor.1:col 0
   293 op sub :drawItemColor.1:y :drawItemColor.1:y 15
-    * jump *label74 always
   294 label *label73
   295 label *label74
   296 label *label69
 
   302 op sub :drawMaterials:count :drawMaterials:count 1
   303 jump *label75 greaterThan :drawMaterials:count 0
   304 jump *label58 always
-    * jump *label76 always
   305 label *label75
   306 label *label76
-    * jump *label67 always
   307 label *label66
   308 label *label67
   309 label *label57
   310 multijump *tmp107 0 0 (m:marker0)
   311 multilabel *label65 (m:marker0)
   312 label *label58
-    * jump *label55 always
   313 label *label54
   314 label *label55
   315 jump *label77 greaterThanEq .totalTargets 3
   316 op sub *tmp137 3 .totalTargets
   317 op mul *tmp138 *tmp137 15
   318 op sub :updateDisplay:y :updateDisplay:y *tmp138
-    * jump *label78 always
   319 label *label77
   320 label *label78
   321 op sub :updateDisplay:y :updateDisplay:y 5
-    * jump *label50 always
   322 label *label49
   323 label *label50
   324 label *label38
   325 label *label36
   326 jump *label80 notEqual .nextFactory null
   327 jump *label79 always
-    * jump *label81 always
   328 label *label80
   329 label *label81
   330 draw col %[white]
 
   408 jump *label94 lessThan :drawItemColor.2:col :drawItemColor.2:columns
   409 set :drawItemColor.2:col 0
   410 op sub :drawItemColor.2:y :drawItemColor.2:y 15
-    * jump *label95 always
   411 label *label94
   412 label *label95
   413 label *label90
 
   478 jump *label101 lessThan :drawItemColor.3:col :drawItemColor.3:columns
   479 set :drawItemColor.3:col 0
   480 op sub :drawItemColor.3:y :drawItemColor.3:y 15
-    * jump *label102 always
   481 label *label101
   482 label *label102
   483 label *label97
 
   545 jump *label108 lessThan :drawItemColor.4:col :drawItemColor.4:columns
   546 set :drawItemColor.4:col 0
   547 op sub :drawItemColor.4:y :drawItemColor.4:y 15
-    * jump *label109 always
   548 label *label108
   549 label *label109
   550 label *label104
 
   618 jump *label115 lessThan :drawItemColor.5:col :drawItemColor.5:columns
   619 set :drawItemColor.5:col 0
   620 op sub :drawItemColor.5:y :drawItemColor.5:y 15
-    * jump *label116 always
   621 label *label115
   622 label *label116
   623 label *label111
 
   631 label *label79
   632 jump *label118 notEqual .nextAddReco null
   633 jump *label117 always
-    * jump *label119 always
   634 label *label118
   635 label *label119
   636 draw col %[white]
 
   713 jump *label130 lessThan :drawItemColor.6:col :drawItemColor.6:columns
   714 set :drawItemColor.6:col 0
   715 op sub :drawItemColor.6:y :drawItemColor.6:y 15
-    * jump *label131 always
   716 label *label130
   717 label *label131
   718 label *label126
 
   780 jump *label137 lessThan :drawItemColor.7:col :drawItemColor.7:columns
   781 set :drawItemColor.7:col 0
   782 op sub :drawItemColor.7:y :drawItemColor.7:y 15
-    * jump *label138 always
   783 label *label137
   784 label *label138
   785 label *label133
 
   852 jump *label144 lessThan :drawItemColor.8:col :drawItemColor.8:columns
   853 set :drawItemColor.8:col 0
   854 op sub :drawItemColor.8:y :drawItemColor.8:y 15
-    * jump *label145 always
   855 label *label144
   856 label *label145
   857 label *label140
 
   865 label *label117
   866 jump *label147 notEqual .nextMultiReco null
   867 jump *label146 always
-    * jump *label148 always
   868 label *label147
   869 label *label148
   870 draw col %[white]
 
   948 jump *label159 lessThan :drawItemColor.9:col :drawItemColor.9:columns
   949 set :drawItemColor.9:col 0
   950 op sub :drawItemColor.9:y :drawItemColor.9:y 15
-    * jump *label160 always
   951 label *label159
   952 label *label160
   953 label *label155
 
  1015 jump *label166 lessThan :drawItemColor.10:col :drawItemColor.10:columns
  1016 set :drawItemColor.10:col 0
  1017 op sub :drawItemColor.10:y :drawItemColor.10:y 15
-    * jump *label167 always
  1018 label *label166
  1019 label *label167
  1020 label *label162
 
  1082 jump *label173 lessThan :drawItemColor.11:col :drawItemColor.11:columns
  1083 set :drawItemColor.11:col 0
  1084 op sub :drawItemColor.11:y :drawItemColor.11:y 15
-    * jump *label174 always
  1085 label *label173
  1086 label *label174
  1087 label *label169
 
  1154 jump *label180 lessThan :drawItemColor.12:col :drawItemColor.12:columns
  1155 set :drawItemColor.12:col 0
  1156 op sub :drawItemColor.12:y :drawItemColor.12:y 15
-    * jump *label181 always
  1157 label *label180
  1158 label *label181
  1159 label *label176
 
  1168 sensor *tmp413 @unit @dead
  1169 jump *label183 equal *tmp413 false
  1170 jump *label182 always
-    * jump *label184 always
  1171 label *label183
  1172 label *label184
  1173 draw col %[white]
 
  1251 jump *label196 lessThan :drawItemColor.13:col :drawItemColor.13:columns
  1252 set :drawItemColor.13:col 0
  1253 op sub :drawItemColor.13:y :drawItemColor.13:y 15
-    * jump *label197 always
  1254 label *label196
  1255 label *label197
  1256 label *label192
 
  1328 jump *label204 lessThan :drawItemColor.14:col :drawItemColor.14:columns
  1329 set :drawItemColor.14:col 0
  1330 op sub :drawItemColor.14:y :drawItemColor.14:y 15
-    * jump *label205 always
  1331 label *label204
  1332 label *label205
  1333 label *label200
 
  1341 label *label182
  1342 jump *label207 greaterThanEq :updateDisplay:y 20
  1343 jump *label206 always
-    * jump *label208 always
  1344 label *label207
  1345 label *label208
  1346 jump *label209 notEqual AJTJK-battery1 null
  1347 jump *label206 always
-    * jump *label210 always
  1348 label *label209
  1349 label *label210
  1350 set :updateDisplay:y 20
 
  1425 jump *label218 lessThan :drawItemColor.15:col :drawItemColor.15:columns
  1426 set :drawItemColor.15:col 0
  1427 op sub :drawItemColor.15:y :drawItemColor.15:y 15
-    * jump *label219 always
  1428 label *label218
  1429 label *label219
  1430 label *label214
 
  1500 multijump *tmp506 0 0 (m:marker1)
  1501 multilabel *label239 (m:marker1)
  1502 label *label230
-    * jump *label224 always
  1503 label *label223
  1504 label *label224
  1505 setaddr :drawHeader*retaddr *label240 (h:*label240)
 
  1508 drawflush display1
  1509 jump *label241 lessThanEq .lastTail :displayStorage:tail
  1510 jump *label222 always
-    * jump *label242 always
  1511 label *label241
  1512 label *label242
  1513 read :displayStorage:accumulator bank2 .lastTail
 
  1583 draw col %[white]
  1584 drawflush display1
  1585 set :displayBaseMap:limit 5
-    * jump *label254 always
  1586 label *label253
  1587 label *label254
  1588 set :displayBaseMap:counter 0
 
  1732 jump *label298 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
  1733 jump *label300 notEqual .scrap false
  1734 jump *label261 always
-    * jump *label301 always
  1735 label *label300
  1736 label *label301
-    * jump *label299 always
  1737 label *label298
  1738 label *label299
  1739 op add :displayBaseMap:counter :displayBaseMap:counter 1
 
  1751 draw scale *tmp538 *tmp540
  1752 label *label305
  1753 set :displayBaseMap:counter 0
-    * jump *label303 always
  1754 label *label302
  1755 label *label303
  1756 set :drawBlock:cfg :displayBaseMap:cfg
 
  1770 setaddr :drawBlock*retaddr *label312 (h:*label312)
  1771 call *label8 *invalid :drawBlock*retval (m:*label312) (h:*label312)
  1772 label *label312
-    * jump *label311 always
  1773 label *label310
  1774 label *label311
-    * jump *label308 always
  1775 label *label307
  1776 label *label308
  1777 sensor *tmp550 switch1 @enabled
 
  1779 draw clear 0 0 32
  1780 drawflush display1
  1781 jump *label261 always
-    * jump *label314 always
  1782 label *label313
  1783 label *label314
  1784 drawflush display1
 
  1829 draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
  1830 label *label321
  1831 set .lastRecord :displayLog:start
-    * jump *label317 always
  1832 label *label316
  1833 label *label317
  1834 setaddr :drawHeader*retaddr *label322 (h:*label322)
 
  1887 sensor *tmp594 switch1 @enabled
  1888 jump *label332 equal *tmp594 false
  1889 jump *label325 always
-    * jump *label333 always
  1890 label *label332
  1891 label *label333
  1892 label *label324
 
  1899 label *label249
  1900 label *label221
  1901 label *label22
-    * jump *label20 always
  1902 label *label19
  1903 label *label20
  1904 jump *label334 lessThanEq .megas 0
 
  1934 drawflush null
  1935 draw reset
  1936 draw clear 0 0 32
-    * jump *label338 always
  1937 label *label337
  1938 label *label338
  1939 label *label17
 
  2009 jump *label350 equal .missing false
  2010 draw image 16 264 .missing 12 0
  2011 set .missing false
-    * jump *label351 always
  2012 label *label350
  2013 label *label351
  2014 jump *label352 equal .nextMultiReco false
 
  2039 jump *label364 equal :drawHeader:goal null
  2040 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2041 op add :drawHeader:x :drawHeader:x 30
-    * jump *label365 always
  2042 label *label364
  2043 label *label365
  2044 label *label359
 
  2062 jump *label374 equal :drawHeader:goal.1 null
  2063 draw image 42 237 :drawHeader:goal.1 32 0
  2064 jump *label370 always
-    * jump *label375 always
  2065 label *label374
  2066 label *label375
  2067 label *label369
  2068 multijump *tmp629 0 0 (m:marker4)
  2069 multilabel *label373 (m:marker4)
  2070 label *label370
-    * jump *label367 always
  2071 label *label366
  2072 label *label367
  2073 label *label357
 
  2154 op mul *tmp663 7 :drawHeader:len.1
  2155 op sub *tmp664 *tmp662 *tmp663
  2156 draw image *tmp664 246 @titanium 12 0
-    * jump *label384 always
  2157 label *label383
  2158 label *label384
  2159 jump *label386 equal .thoriumContainer false
 
  2172 op mul *tmp670 7 :drawHeader:len.2
  2173 op sub *tmp671 *tmp669 *tmp670
  2174 draw image *tmp671 246 @thorium 12 0
-    * jump *label387 always
  2175 label *label386
  2176 label *label387
  2177 label *label380
 
  2190 draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
  2191 label *label392
  2192 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label391 always
  2193 label *label390
  2194 label *label391
  2195 label *label389
 
  2206 draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
  2207 label *label396
  2208 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label395 always
  2209 label *label394
  2210 label *label395
  2211 label *label393
 
  2222 draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
  2223 label *label400
  2224 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label399 always
  2225 label *label398
  2226 label *label399
  2227 label *label397
 
  2280 op add *tmp711 :drawBlock:built .pageSwitched
  2281 jump *label406 notEqual *tmp711 0
  2282 jump *label401 always
-    * jump *label407 always
  2283 label *label406
  2284 label *label407
  2285 jump *label408 equal :drawBlock:built false

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   555 label *label88
   556 jump *label86 always
   557 label *label85
-    * op mul *tmp215 100 :drawAirFactory:progress
-    * op floor *tmp216 *tmp215
+  558 op idiv *tmp216 :drawAirFactory:progress 0.01
   559 set :drawItem.5:col 0
   560 set :drawItem.5:y :updateDisplay:y
   561 set :drawItem.5:columns 1
 
   788 set :updateDisplay:y :drawItem.7:y
   789 jump *label124 always
   790 label *label123
-    * op mul *tmp290 100 :drawAddReco:progress
-    * op floor *tmp291 *tmp290
+  791 op idiv *tmp291 :drawAddReco:progress 0.01
   792 set :drawItem.8:col 0
   793 set :drawItem.8:y :updateDisplay:y
   794 set :drawItem.8:columns 1
 
  1089 set :updateDisplay:y :drawItem.11:y
  1090 jump *label153 always
  1091 label *label152
-    * op mul *tmp389 100 :drawMultiReco:progress
-    * op floor *tmp390 *tmp389
+ 1092 op idiv *tmp390 :drawMultiReco:progress 0.01
  1093 set :drawItem.12:col 0
  1094 set :drawItem.12:y :updateDisplay:y
  1095 set :drawItem.12:columns 1
 
  1365 set :updateDisplay:y :drawTitleRow.6:y
  1366 sensor :drawPower:power AJTJK-battery1 @totalPower
  1367 op mul *tmp474 :drawPower:power 100
-    * op div *tmp475 *tmp474 4000
-    * op floor *tmp476 *tmp475
+ 1368 op idiv *tmp476 *tmp474 4000
  1369 set :drawItemColor.15:color1 %808000FF
  1370 set :drawItemColor.15:color2 %FFFF00FF
  1371 set :drawItemColor.15:col 0
 
  1855 label *label328
  1856 set :displayRecord:icon *tmp580
  1857 op div *tmp584 :displayRecord:record 1000
-    * op div *tmp585 *tmp584 120
-    * op floor :displayRecord:t *tmp585
+ 1858 op idiv :displayRecord:t *tmp584 120
  1859 op idiv :displayRecord:m :displayRecord:t 60
  1860 op mod :displayRecord:s :displayRecord:t 60
  1861 jump *label329 greaterThanEq :displayRecord:s 10
 
  1946 draw col %[gold]
  1947 draw scale 3.5 3.5
  1948 read *tmp0 processor1 "time"
-    * op div *tmp608 *tmp0 120
-    * op floor :drawHeader:t *tmp608
+ 1949 op idiv :drawHeader:t *tmp0 120
  1950 op idiv :drawHeader:m :drawHeader:t 60
  1951 op mod :drawHeader:s :drawHeader:t 60
  1952 jump *label342 greaterThanEq :drawHeader:s 10
 
  2069 label *label353
  2070 set :drawHeader:tt @second
  2071 read *tmp0 processor1 "time"
-    * op div *tmp632 *tmp0 120
-    * op floor :drawHeader:t.1 *tmp632
+ 2072 op idiv :drawHeader:t.1 *tmp0 120
  2073 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  2074 op mod :drawHeader:s.1 :drawHeader:t.1 60
  2075 jump *label376 greaterThanEq :drawHeader:s.1 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-17 instructions):
 
    39 set :lerp:from 42
    40 set :lerp:to 90
    41 set :lerp:ratio :animate:ratio
-    * op sub *tmp58 1 :lerp:ratio
-    * op mul *tmp59 *tmp58 :lerp:from
-    * op mul *tmp60 :lerp:ratio :lerp:to
+   42 op sub *tmp58 1 :animate:ratio
+   43 op mul *tmp59 *tmp58 42
+   44 op mul *tmp60 :animate:ratio 90
    45 op add *tmp57 *tmp59 *tmp60
    46 label *label28
    47 set :animate:x *tmp57
    48 set :lerp.1:from 237
    49 set :lerp.1:to 120
    50 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :lerp.1:ratio
-    * op mul *tmp64 *tmp63 :lerp.1:from
-    * op mul *tmp65 :lerp.1:ratio :lerp.1:to
+   51 op sub *tmp63 1 :animate:ratio
+   52 op mul *tmp64 *tmp58 237
+   53 op mul *tmp65 :animate:ratio 120
    54 op add *tmp62 *tmp64 *tmp65
    55 label *label29
    56 set :animate:y *tmp62
    57 set :lerp.2:from 32
    58 set :lerp.2:to 168
    59 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :lerp.2:ratio
-    * op mul *tmp69 *tmp68 :lerp.2:from
-    * op mul *tmp70 :lerp.2:ratio :lerp.2:to
+   60 op sub *tmp68 1 :animate:ratio
+   61 op mul *tmp69 *tmp58 32
+   62 op mul *tmp70 :animate:ratio 168
    63 op add *tmp67 *tmp69 *tmp70
    64 label *label30
    65 set :animate:size *tmp67
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   66 draw image *tmp57 *tmp62 @mega *tmp67 0
    67 jump *label31 notEqual :animate:ratio 1
    68 setaddr :drawHeader*retaddr *label33 (h:*label33)
    69 call *label7 *invalid :drawHeader*retval (m:*label33) (h:*label33)
 
    85 op equal *tmp76 .nextBlock @ore-titanium
    86 op or *tmp77 *tmp75 *tmp76
    87 jump *label37 equal *tmp77 false
-    * set :drawTitleRow:y :updateDisplay:y
+   88 set :drawTitleRow:y 201
    89 set :drawTitleRow:alignment @bottomLeft
    90 set :drawText:x 22
-    * set :drawText:y :drawTitleRow:y
-    * set :drawText:alignment :drawTitleRow:alignment
+   91 set :drawText:y :updateDisplay:y
+   92 set :drawText:alignment @bottomLeft
    93 print "Locating ore..."
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   94 draw print 22 :drawTitleRow:y :drawTitleRow:alignment
    95 label *label40
    96 set :drawText.1:x 23
-    * set :drawText.1:y :drawTitleRow:y
-    * set :drawText.1:alignment :drawTitleRow:alignment
+   97 set :drawText.1:y :updateDisplay:y
+   98 set :drawText.1:alignment @bottomLeft
    99 print "Locating ore..."
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+  100 draw print 23 :drawTitleRow:y :drawTitleRow:alignment
   101 label *label41
-    * op sub :drawTitleRow:y :drawTitleRow:y 15
+  102 op sub :drawTitleRow:y :updateDisplay:y 15
   103 label *label39
   104 set :updateDisplay:y :drawTitleRow:y
   105 set :drawItem:col 0
-    * set :drawItem:y :updateDisplay:y
+  106 set :drawItem:y :drawTitleRow:y
   107 set :drawItem:columns 1
   108 set :drawItem:item .nextBlock
   109 read :drawItem:current processor3 ".mapProgress"
   110 read :drawItem:target processor3 ".mapTotal"
   111 set :drawItemColor:color1 %008000FF
   112 set :drawItemColor:color2 %00FF00FF
-    * set :drawItemColor:col :drawItem:col
-    * set :drawItemColor:y :drawItem:y
-    * set :drawItemColor:columns :drawItem:columns
+  113 set :drawItemColor:col 0
+  114 set :drawItemColor:y :updateDisplay:y
+  115 set :drawItemColor:columns 1
   116 set :drawItemColor:item :drawItem:item
   117 set :drawItemColor:current :drawItem:current
   118 set :drawItemColor:target :drawItem:target
-    * op mul *tmp79 :drawItemColor:columns 176
-    * op div *tmp80 *tmp79 2
+  119 op mul *tmp79 :drawItem:columns 176
+  120 op mul *tmp80 :drawItemColor:columns 88
   121 op sub :drawItemColor:barLength 214 *tmp80
   122 op add :drawItemColor:textEnd 48 :drawItemColor:barLength
-    * op mul *tmp83 :drawItemColor:barLength :drawItemColor:current
-    * op div *tmp84 *tmp83 :drawItemColor:target
+  123 op mul *tmp83 :drawItemColor:barLength :drawItem:current
+  124 op div *tmp84 *tmp83 :drawItem:target
   125 op min :drawItemColor:length :drawItemColor:barLength *tmp84
-    * op mul *tmp86 :drawItemColor:col 176
-    * op div *tmp87 *tmp86 2
+  126 op mul *tmp86 :drawItem:col 176
+  127 op mul *tmp87 :drawItemColor:col 88
   128 op add :drawItemColor:iconX 11 *tmp87
-    * op mul *tmp89 :drawItemColor:col 176
-    * op div *tmp90 *tmp89 2
-    * op add :drawItemColor:barX 22 *tmp90
-    * op mul *tmp92 :drawItemColor:col 176
-    * op div *tmp93 *tmp92 2
-    * op add :drawItemColor:textX :drawItemColor:textEnd *tmp93
+  129 op mul *tmp89 :drawItem:col 176
+  130 op div *tmp90 *tmp86 2
+  131 op add :drawItemColor:barX 22 *tmp87
+  132 op mul *tmp92 :drawItem:col 176
+  133 op div *tmp93 *tmp86 2
+  134 op add :drawItemColor:textX :drawItemColor:textEnd *tmp87
   135 draw col %[white]
-    * op add *tmp95 :drawItemColor:y 5
-    * draw image :drawItemColor:iconX *tmp95 :drawItemColor:item 16 0
-    * draw col :drawItemColor:color1
-    * draw rect :drawItemColor:barX :drawItemColor:y :drawItemColor:length 10
-    * draw col :drawItemColor:color2
-    * draw lineRect :drawItemColor:barX :drawItemColor:y :drawItemColor:barLength 10
-    * op add *tmp96 :drawItemColor:y 5
-    * op add *tmp97 *tmp96 2
+  136 op add *tmp95 :drawItem:y 5
+  137 draw image :drawItemColor:iconX *tmp95 :drawItem:item 16 0
+  138 draw col %008000FF
+  139 draw rect :drawItemColor:barX :drawItem:y :drawItemColor:length 10
+  140 draw col %00FF00FF
+  141 draw lineRect :drawItemColor:barX :drawItem:y :drawItemColor:barLength 10
+  142 op add *tmp96 :drawItem:y 5
+  143 op add *tmp97 *tmp95 2
   144 set :drawBold:x :drawItemColor:textX
   145 set :drawBold:y *tmp97
   146 set :drawBold:alignment @right
-    * set :drawText.2:x :drawBold:x
-    * set :drawText.2:y :drawBold:y
-    * set :drawText.2:alignment :drawBold:alignment
+  147 set :drawText.2:x :drawItemColor:textX
+  148 set :drawText.2:y *tmp97
+  149 set :drawText.2:alignment @right
   150 print "x"
   151 read *tmp98 processor3 ".mapSpots"
   152 print *tmp98
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  153 draw print :drawBold:x :drawBold:y :drawBold:alignment
   154 label *label45
-    * op add :drawText.3:x :drawBold:x 1
-    * set :drawText.3:y :drawBold:y
-    * set :drawText.3:alignment :drawBold:alignment
+  155 op add :drawText.3:x :drawItemColor:textX 1
+  156 set :drawText.3:y *tmp97
+  157 set :drawText.3:alignment @right
   158 print "x"
   159 read *tmp100 processor3 ".mapSpots"
   160 print *tmp100
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  161 draw print :drawText.3:x :drawBold:y :drawBold:alignment
   162 label *label46
   163 label *label44
-    * op add :drawItemColor:col :drawItemColor:col 1
-    * jump *label47 lessThan :drawItemColor:col :drawItemColor:columns
+  164 op add :drawItemColor:col :drawItem:col 1
+  165 jump *label47 lessThan :drawItemColor:col :drawItem:columns
   166 set :drawItemColor:col 0
-    * op sub :drawItemColor:y :drawItemColor:y 15
+  167 op sub :drawItemColor:y :drawItem:y 15
   168 label *label47
   169 label *label48
   170 label *label43
-    * set :drawItem:col :drawItemColor:col
   171 set :drawItem:y :drawItemColor:y
   172 label *label42
-    * set :updateDisplay:y :drawItem:y
-    * op sub :updateDisplay:y :updateDisplay:y 35
+  173 set :updateDisplay:y :drawItemColor:y
+  174 op sub :updateDisplay:y :drawItem:y 35
   175 jump *label38 always
   176 label *label37
   177 jump *label49 equal .nextBlock null
   178 set :drawMaterials:count .totalTargets
-    * set :drawTitleRow.1:y :updateDisplay:y
+  179 set :drawTitleRow.1:y 201
   180 set :drawTitleRow.1:alignment @bottomLeft
   181 set :drawText.4:x 22
-    * set :drawText.4:y :drawTitleRow.1:y
-    * set :drawText.4:alignment :drawTitleRow.1:alignment
+  182 set :drawText.4:y :updateDisplay:y
+  183 set :drawText.4:alignment @bottomLeft
   184 print "Materials"
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  185 draw print 22 :drawTitleRow.1:y :drawTitleRow.1:alignment
   186 label *label52
   187 set :drawText.5:x 23
-    * set :drawText.5:y :drawTitleRow.1:y
-    * set :drawText.5:alignment :drawTitleRow.1:alignment
+  188 set :drawText.5:y :updateDisplay:y
+  189 set :drawText.5:alignment @bottomLeft
   190 print "Materials"
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  191 draw print 23 :drawTitleRow.1:y :drawTitleRow.1:alignment
   192 label *label53
-    * op sub :drawTitleRow.1:y :drawTitleRow.1:y 15
+  193 op sub :drawTitleRow.1:y :updateDisplay:y 15
   194 label *label51
   195 set :updateDisplay:y :drawTitleRow.1:y
   196 set :drawMaterials:columns 1
 
   233 sensor *tmp110 .core :drawMaterials:item
   234 set :drawItem.1:col :drawMaterials:col
   235 set :drawItem.1:y :updateDisplay:y
-    * set :drawItem.1:columns :drawMaterials:columns
+  236 set :drawItem.1:columns 1
   237 set :drawItem.1:item :drawMaterials:item
   238 set :drawItem.1:current *tmp110
   239 set :drawItem.1:target :drawMaterials:target
   240 set :drawItemColor.1:color1 %008000FF
   241 set :drawItemColor.1:color2 %00FF00FF
-    * set :drawItemColor.1:col :drawItem.1:col
-    * set :drawItemColor.1:y :drawItem.1:y
-    * set :drawItemColor.1:columns :drawItem.1:columns
-    * set :drawItemColor.1:item :drawItem.1:item
-    * set :drawItemColor.1:current :drawItem.1:current
-    * set :drawItemColor.1:target :drawItem.1:target
-    * op mul *tmp111 :drawItemColor.1:columns 176
-    * op div *tmp112 *tmp111 2
+  242 set :drawItemColor.1:col :drawMaterials:col
+  243 set :drawItemColor.1:y :updateDisplay:y
+  244 set :drawItemColor.1:columns :drawMaterials:columns
+  245 set :drawItemColor.1:item :drawMaterials:item
+  246 set :drawItemColor.1:current *tmp110
+  247 set :drawItemColor.1:target :drawMaterials:target
+  248 op mul *tmp111 :drawItem.1:columns 176
+  249 op mul *tmp112 :drawItemColor.1:columns 88
   250 op sub :drawItemColor.1:barLength 214 *tmp112
   251 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength :drawItemColor.1:current
-    * op div *tmp116 *tmp115 :drawItemColor.1:target
+  252 op mul *tmp115 :drawItemColor.1:barLength :drawItem.1:current
+  253 op div *tmp116 *tmp115 :drawItem.1:target
   254 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawItemColor.1:col 176
-    * op div *tmp119 *tmp118 2
+  255 op mul *tmp118 :drawItem.1:col 176
+  256 op mul *tmp119 :drawItemColor.1:col 88
   257 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawItemColor.1:col 176
-    * op div *tmp122 *tmp121 2
-    * op add :drawItemColor.1:barX 22 *tmp122
-    * op mul *tmp124 :drawItemColor.1:col 176
-    * op div *tmp125 *tmp124 2
-    * op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp125
+  258 op mul *tmp121 :drawItem.1:col 176
+  259 op div *tmp122 *tmp118 2
+  260 op add :drawItemColor.1:barX 22 *tmp119
+  261 op mul *tmp124 :drawItem.1:col 176
+  262 op div *tmp125 *tmp118 2
+  263 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
   264 draw col %[white]
-    * op add *tmp127 :drawItemColor.1:y 5
-    * draw image :drawItemColor.1:iconX *tmp127 :drawItemColor.1:item 16 0
-    * draw col :drawItemColor.1:color1
-    * draw rect :drawItemColor.1:barX :drawItemColor.1:y :drawItemColor.1:length 10
-    * draw col :drawItemColor.1:color2
-    * draw lineRect :drawItemColor.1:barX :drawItemColor.1:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :drawItemColor.1:y 5
-    * op add *tmp129 *tmp128 2
+  265 op add *tmp127 :drawItem.1:y 5
+  266 draw image :drawItemColor.1:iconX *tmp127 :drawItem.1:item 16 0
+  267 draw col %008000FF
+  268 draw rect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:length 10
+  269 draw col %00FF00FF
+  270 draw lineRect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:barLength 10
+  271 op add *tmp128 :drawItem.1:y 5
+  272 op add *tmp129 *tmp127 2
   273 set :drawBold.1:x :drawItemColor.1:textX
   274 set :drawBold.1:y *tmp129
   275 set :drawBold.1:alignment @right
-    * set :drawText.6:x :drawBold.1:x
-    * set :drawText.6:y :drawBold.1:y
-    * set :drawText.6:alignment :drawBold.1:alignment
+  276 set :drawText.6:x :drawItemColor.1:textX
+  277 set :drawText.6:y *tmp129
+  278 set :drawText.6:alignment @right
   279 print :drawMaterials:target
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  280 draw print :drawBold.1:x :drawBold.1:y :drawBold.1:alignment
   281 label *label71
-    * op add :drawText.7:x :drawBold.1:x 1
-    * set :drawText.7:y :drawBold.1:y
-    * set :drawText.7:alignment :drawBold.1:alignment
+  282 op add :drawText.7:x :drawItemColor.1:textX 1
+  283 set :drawText.7:y *tmp129
+  284 set :drawText.7:alignment @right
   285 print :drawMaterials:target
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  286 draw print :drawText.7:x :drawBold.1:y :drawBold.1:alignment
   287 label *label72
   288 label *label70
-    * op add :drawItemColor.1:col :drawItemColor.1:col 1
-    * jump *label73 lessThan :drawItemColor.1:col :drawItemColor.1:columns
+  289 op add :drawItemColor.1:col :drawItem.1:col 1
+  290 jump *label73 lessThan :drawItemColor.1:col :drawItem.1:columns
   291 set :drawItemColor.1:col 0
-    * op sub :drawItemColor.1:y :drawItemColor.1:y 15
+  292 op sub :drawItemColor.1:y :drawItem.1:y 15
   293 label *label73
   294 label *label74
   295 label *label69
   296 set :drawItem.1:col :drawItemColor.1:col
   297 set :drawItem.1:y :drawItemColor.1:y
   298 label *label68
-    * set :drawMaterials:col :drawItem.1:col
-    * set :updateDisplay:y :drawItem.1:y
+  299 set :drawMaterials:col :drawItemColor.1:col
+  300 set :updateDisplay:y :drawItemColor.1:y
   301 op sub :drawMaterials:count :drawMaterials:count 1
   302 jump *label75 greaterThan :drawMaterials:count 0
   303 jump *label58 always
 
   330 set :drawTitleRow.2:y :updateDisplay:y
   331 set :drawTitleRow.2:alignment @bottomLeft
   332 set :drawText.8:x 22
-    * set :drawText.8:y :drawTitleRow.2:y
-    * set :drawText.8:alignment :drawTitleRow.2:alignment
+  333 set :drawText.8:y :updateDisplay:y
+  334 set :drawText.8:alignment @bottomLeft
   335 print "Air Factory"
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  336 draw print 22 :drawTitleRow.2:y :drawTitleRow.2:alignment
   337 label *label83
   338 set :drawText.9:x 23
-    * set :drawText.9:y :drawTitleRow.2:y
-    * set :drawText.9:alignment :drawTitleRow.2:alignment
+  339 set :drawText.9:y :updateDisplay:y
+  340 set :drawText.9:alignment @bottomLeft
   341 print "Air Factory"
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  342 draw print 23 :drawTitleRow.2:y :drawTitleRow.2:alignment
   343 label *label84
-    * op sub :drawTitleRow.2:y :drawTitleRow.2:y 15
+  344 op sub :drawTitleRow.2:y :updateDisplay:y 15
   345 label *label82
   346 set :updateDisplay:y :drawTitleRow.2:y
   347 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
 
   349 jump *label87 notEqual .nextFactory @flare
   350 sensor *tmp146 A¾BFLW-air-factory13 @silicon
   351 set :drawItem.2:col 0
-    * set :drawItem.2:y :updateDisplay:y
+  352 set :drawItem.2:y :drawTitleRow.2:y
   353 set :drawItem.2:columns 1
   354 set :drawItem.2:item @silicon
   355 set :drawItem.2:current *tmp146
   356 set :drawItem.2:target 15
   357 set :drawItemColor.2:color1 %008000FF
   358 set :drawItemColor.2:color2 %00FF00FF
-    * set :drawItemColor.2:col :drawItem.2:col
-    * set :drawItemColor.2:y :drawItem.2:y
-    * set :drawItemColor.2:columns :drawItem.2:columns
-    * set :drawItemColor.2:item :drawItem.2:item
-    * set :drawItemColor.2:current :drawItem.2:current
-    * set :drawItemColor.2:target :drawItem.2:target
-    * op mul *tmp147 :drawItemColor.2:columns 176
-    * op div *tmp148 *tmp147 2
+  359 set :drawItemColor.2:col 0
+  360 set :drawItemColor.2:y :updateDisplay:y
+  361 set :drawItemColor.2:columns 1
+  362 set :drawItemColor.2:item @silicon
+  363 set :drawItemColor.2:current *tmp146
+  364 set :drawItemColor.2:target 15
+  365 op mul *tmp147 :drawItem.2:columns 176
+  366 op mul *tmp148 :drawItemColor.2:columns 88
   367 op sub :drawItemColor.2:barLength 214 *tmp148
   368 op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
-    * op mul *tmp151 :drawItemColor.2:barLength :drawItemColor.2:current
-    * op div *tmp152 *tmp151 :drawItemColor.2:target
+  369 op mul *tmp151 :drawItemColor.2:barLength :drawItem.2:current
+  370 op div *tmp152 *tmp151 :drawItem.2:target
   371 op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
-    * op mul *tmp154 :drawItemColor.2:col 176
-    * op div *tmp155 *tmp154 2
+  372 op mul *tmp154 :drawItem.2:col 176
+  373 op mul *tmp155 :drawItemColor.2:col 88
   374 op add :drawItemColor.2:iconX 11 *tmp155
-    * op mul *tmp157 :drawItemColor.2:col 176
-    * op div *tmp158 *tmp157 2
-    * op add :drawItemColor.2:barX 22 *tmp158
-    * op mul *tmp160 :drawItemColor.2:col 176
-    * op div *tmp161 *tmp160 2
-    * op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp161
+  375 op mul *tmp157 :drawItem.2:col 176
+  376 op div *tmp158 *tmp154 2
+  377 op add :drawItemColor.2:barX 22 *tmp155
+  378 op mul *tmp160 :drawItem.2:col 176
+  379 op div *tmp161 *tmp154 2
+  380 op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp155
   381 draw col %[white]
-    * op add *tmp163 :drawItemColor.2:y 5
-    * draw image :drawItemColor.2:iconX *tmp163 :drawItemColor.2:item 16 0
-    * draw col :drawItemColor.2:color1
-    * draw rect :drawItemColor.2:barX :drawItemColor.2:y :drawItemColor.2:length 10
-    * draw col :drawItemColor.2:color2
-    * draw lineRect :drawItemColor.2:barX :drawItemColor.2:y :drawItemColor.2:barLength 10
-    * op add *tmp164 :drawItemColor.2:y 5
-    * op add *tmp165 *tmp164 2
+  382 op add *tmp163 :drawItem.2:y 5
+  383 draw image :drawItemColor.2:iconX *tmp163 :drawItem.2:item 16 0
+  384 draw col %008000FF
+  385 draw rect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:length 10
+  386 draw col %00FF00FF
+  387 draw lineRect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:barLength 10
+  388 op add *tmp164 :drawItem.2:y 5
+  389 op add *tmp165 *tmp163 2
   390 set :drawBold.2:x :drawItemColor.2:textX
   391 set :drawBold.2:y *tmp165
   392 set :drawBold.2:alignment @right
-    * set :drawText.10:x :drawBold.2:x
-    * set :drawText.10:y :drawBold.2:y
-    * set :drawText.10:alignment :drawBold.2:alignment
+  393 set :drawText.10:x :drawItemColor.2:textX
+  394 set :drawText.10:y *tmp165
+  395 set :drawText.10:alignment @right
   396 print 15
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  397 draw print :drawBold.2:x :drawBold.2:y :drawBold.2:alignment
   398 label *label92
-    * op add :drawText.11:x :drawBold.2:x 1
-    * set :drawText.11:y :drawBold.2:y
-    * set :drawText.11:alignment :drawBold.2:alignment
+  399 op add :drawText.11:x :drawItemColor.2:textX 1
+  400 set :drawText.11:y *tmp165
+  401 set :drawText.11:alignment @right
   402 print 15
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  403 draw print :drawText.11:x :drawBold.2:y :drawBold.2:alignment
   404 label *label93
   405 label *label91
-    * op add :drawItemColor.2:col :drawItemColor.2:col 1
-    * jump *label94 lessThan :drawItemColor.2:col :drawItemColor.2:columns
+  406 op add :drawItemColor.2:col :drawItem.2:col 1
+  407 jump *label94 lessThan :drawItemColor.2:col :drawItem.2:columns
   408 set :drawItemColor.2:col 0
-    * op sub :drawItemColor.2:y :drawItemColor.2:y 15
+  409 op sub :drawItemColor.2:y :drawItem.2:y 15
   410 label *label94
   411 label *label95
   412 label *label90
-    * set :drawItem.2:col :drawItemColor.2:col
   413 set :drawItem.2:y :drawItemColor.2:y
   414 label *label89
-    * set :updateDisplay:y :drawItem.2:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  415 set :updateDisplay:y :drawItemColor.2:y
+  416 op sub :updateDisplay:y :drawItem.2:y 15
   417 jump *label88 always
   418 label *label87
   419 sensor *tmp169 A¾BFLW-air-factory13 @lead
   420 set :drawItem.3:col 0
-    * set :drawItem.3:y :updateDisplay:y
+  421 set :drawItem.3:y :drawTitleRow.2:y
   422 set :drawItem.3:columns 1
   423 set :drawItem.3:item @lead
   424 set :drawItem.3:current *tmp169
   425 set :drawItem.3:target 15
   426 set :drawItemColor.3:color1 %008000FF
   427 set :drawItemColor.3:color2 %00FF00FF
-    * set :drawItemColor.3:col :drawItem.3:col
-    * set :drawItemColor.3:y :drawItem.3:y
-    * set :drawItemColor.3:columns :drawItem.3:columns
-    * set :drawItemColor.3:item :drawItem.3:item
-    * set :drawItemColor.3:current :drawItem.3:current
-    * set :drawItemColor.3:target :drawItem.3:target
-    * op mul *tmp170 :drawItemColor.3:columns 176
-    * op div *tmp171 *tmp170 2
+  428 set :drawItemColor.3:col 0
+  429 set :drawItemColor.3:y :updateDisplay:y
+  430 set :drawItemColor.3:columns 1
+  431 set :drawItemColor.3:item @lead
+  432 set :drawItemColor.3:current *tmp169
+  433 set :drawItemColor.3:target 15
+  434 op mul *tmp170 :drawItem.3:columns 176
+  435 op mul *tmp171 :drawItemColor.3:columns 88
   436 op sub :drawItemColor.3:barLength 214 *tmp171
   437 op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
-    * op mul *tmp174 :drawItemColor.3:barLength :drawItemColor.3:current
-    * op div *tmp175 *tmp174 :drawItemColor.3:target
+  438 op mul *tmp174 :drawItemColor.3:barLength :drawItem.3:current
+  439 op div *tmp175 *tmp174 :drawItem.3:target
   440 op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
-    * op mul *tmp177 :drawItemColor.3:col 176
-    * op div *tmp178 *tmp177 2
+  441 op mul *tmp177 :drawItem.3:col 176
+  442 op mul *tmp178 :drawItemColor.3:col 88
   443 op add :drawItemColor.3:iconX 11 *tmp178
-    * op mul *tmp180 :drawItemColor.3:col 176
-    * op div *tmp181 *tmp180 2
-    * op add :drawItemColor.3:barX 22 *tmp181
-    * op mul *tmp183 :drawItemColor.3:col 176
-    * op div *tmp184 *tmp183 2
-    * op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp184
+  444 op mul *tmp180 :drawItem.3:col 176
+  445 op div *tmp181 *tmp177 2
+  446 op add :drawItemColor.3:barX 22 *tmp178
+  447 op mul *tmp183 :drawItem.3:col 176
+  448 op div *tmp184 *tmp177 2
+  449 op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp178
   450 draw col %[white]
-    * op add *tmp186 :drawItemColor.3:y 5
-    * draw image :drawItemColor.3:iconX *tmp186 :drawItemColor.3:item 16 0
-    * draw col :drawItemColor.3:color1
-    * draw rect :drawItemColor.3:barX :drawItemColor.3:y :drawItemColor.3:length 10
-    * draw col :drawItemColor.3:color2
-    * draw lineRect :drawItemColor.3:barX :drawItemColor.3:y :drawItemColor.3:barLength 10
-    * op add *tmp187 :drawItemColor.3:y 5
-    * op add *tmp188 *tmp187 2
+  451 op add *tmp186 :drawItem.3:y 5
+  452 draw image :drawItemColor.3:iconX *tmp186 :drawItem.3:item 16 0
+  453 draw col %008000FF
+  454 draw rect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:length 10
+  455 draw col %00FF00FF
+  456 draw lineRect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:barLength 10
+  457 op add *tmp187 :drawItem.3:y 5
+  458 op add *tmp188 *tmp186 2
   459 set :drawBold.3:x :drawItemColor.3:textX
   460 set :drawBold.3:y *tmp188
   461 set :drawBold.3:alignment @right
-    * set :drawText.12:x :drawBold.3:x
-    * set :drawText.12:y :drawBold.3:y
-    * set :drawText.12:alignment :drawBold.3:alignment
+  462 set :drawText.12:x :drawItemColor.3:textX
+  463 set :drawText.12:y *tmp188
+  464 set :drawText.12:alignment @right
   465 print 15
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  466 draw print :drawBold.3:x :drawBold.3:y :drawBold.3:alignment
   467 label *label99
-    * op add :drawText.13:x :drawBold.3:x 1
-    * set :drawText.13:y :drawBold.3:y
-    * set :drawText.13:alignment :drawBold.3:alignment
+  468 op add :drawText.13:x :drawItemColor.3:textX 1
+  469 set :drawText.13:y *tmp188
+  470 set :drawText.13:alignment @right
   471 print 15
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  472 draw print :drawText.13:x :drawBold.3:y :drawBold.3:alignment
   473 label *label100
   474 label *label98
-    * op add :drawItemColor.3:col :drawItemColor.3:col 1
-    * jump *label101 lessThan :drawItemColor.3:col :drawItemColor.3:columns
+  475 op add :drawItemColor.3:col :drawItem.3:col 1
+  476 jump *label101 lessThan :drawItemColor.3:col :drawItem.3:columns
   477 set :drawItemColor.3:col 0
-    * op sub :drawItemColor.3:y :drawItemColor.3:y 15
+  478 op sub :drawItemColor.3:y :drawItem.3:y 15
   479 label *label101
   480 label *label102
   481 label *label97
-    * set :drawItem.3:col :drawItemColor.3:col
   482 set :drawItem.3:y :drawItemColor.3:y
   483 label *label96
-    * set :updateDisplay:y :drawItem.3:y
+  484 set :updateDisplay:y :drawItemColor.3:y
   485 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   486 set :drawItem.4:col 0
-    * set :drawItem.4:y :updateDisplay:y
+  487 set :drawItem.4:y :drawItem.3:y
   488 set :drawItem.4:columns 1
   489 set :drawItem.4:item @silicon
   490 set :drawItem.4:current *tmp192
   491 set :drawItem.4:target 30
   492 set :drawItemColor.4:color1 %008000FF
   493 set :drawItemColor.4:color2 %00FF00FF
-    * set :drawItemColor.4:col :drawItem.4:col
-    * set :drawItemColor.4:y :drawItem.4:y
-    * set :drawItemColor.4:columns :drawItem.4:columns
-    * set :drawItemColor.4:item :drawItem.4:item
-    * set :drawItemColor.4:current :drawItem.4:current
-    * set :drawItemColor.4:target :drawItem.4:target
-    * op mul *tmp193 :drawItemColor.4:columns 176
-    * op div *tmp194 *tmp193 2
+  494 set :drawItemColor.4:col 0
+  495 set :drawItemColor.4:y :updateDisplay:y
+  496 set :drawItemColor.4:columns 1
+  497 set :drawItemColor.4:item @silicon
+  498 set :drawItemColor.4:current *tmp192
+  499 set :drawItemColor.4:target 30
+  500 op mul *tmp193 :drawItem.4:columns 176
+  501 op mul *tmp194 :drawItemColor.4:columns 88
   502 op sub :drawItemColor.4:barLength 214 *tmp194
   503 op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
-    * op mul *tmp197 :drawItemColor.4:barLength :drawItemColor.4:current
-    * op div *tmp198 *tmp197 :drawItemColor.4:target
+  504 op mul *tmp197 :drawItemColor.4:barLength :drawItem.4:current
+  505 op div *tmp198 *tmp197 :drawItem.4:target
   506 op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
-    * op mul *tmp200 :drawItemColor.4:col 176
-    * op div *tmp201 *tmp200 2
+  507 op mul *tmp200 :drawItem.4:col 176
+  508 op mul *tmp201 :drawItemColor.4:col 88
   509 op add :drawItemColor.4:iconX 11 *tmp201
-    * op mul *tmp203 :drawItemColor.4:col 176
-    * op div *tmp204 *tmp203 2
-    * op add :drawItemColor.4:barX 22 *tmp204
-    * op mul *tmp206 :drawItemColor.4:col 176
-    * op div *tmp207 *tmp206 2
-    * op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp207
+  510 op mul *tmp203 :drawItem.4:col 176
+  511 op div *tmp204 *tmp200 2
+  512 op add :drawItemColor.4:barX 22 *tmp201
+  513 op mul *tmp206 :drawItem.4:col 176
+  514 op div *tmp207 *tmp200 2
+  515 op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp201
   516 draw col %[white]
-    * op add *tmp209 :drawItemColor.4:y 5
-    * draw image :drawItemColor.4:iconX *tmp209 :drawItemColor.4:item 16 0
-    * draw col :drawItemColor.4:color1
-    * draw rect :drawItemColor.4:barX :drawItemColor.4:y :drawItemColor.4:length 10
-    * draw col :drawItemColor.4:color2
-    * draw lineRect :drawItemColor.4:barX :drawItemColor.4:y :drawItemColor.4:barLength 10
-    * op add *tmp210 :drawItemColor.4:y 5
-    * op add *tmp211 *tmp210 2
+  517 op add *tmp209 :drawItem.4:y 5
+  518 draw image :drawItemColor.4:iconX *tmp209 :drawItem.4:item 16 0
+  519 draw col %008000FF
+  520 draw rect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:length 10
+  521 draw col %00FF00FF
+  522 draw lineRect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:barLength 10
+  523 op add *tmp210 :drawItem.4:y 5
+  524 op add *tmp211 *tmp209 2
   525 set :drawBold.4:x :drawItemColor.4:textX
   526 set :drawBold.4:y *tmp211
   527 set :drawBold.4:alignment @right
-    * set :drawText.14:x :drawBold.4:x
-    * set :drawText.14:y :drawBold.4:y
-    * set :drawText.14:alignment :drawBold.4:alignment
+  528 set :drawText.14:x :drawItemColor.4:textX
+  529 set :drawText.14:y *tmp211
+  530 set :drawText.14:alignment @right
   531 print 30
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  532 draw print :drawBold.4:x :drawBold.4:y :drawBold.4:alignment
   533 label *label106
-    * op add :drawText.15:x :drawBold.4:x 1
-    * set :drawText.15:y :drawBold.4:y
-    * set :drawText.15:alignment :drawBold.4:alignment
+  534 op add :drawText.15:x :drawItemColor.4:textX 1
+  535 set :drawText.15:y *tmp211
+  536 set :drawText.15:alignment @right
   537 print 30
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  538 draw print :drawText.15:x :drawBold.4:y :drawBold.4:alignment
   539 label *label107
   540 label *label105
-    * op add :drawItemColor.4:col :drawItemColor.4:col 1
-    * jump *label108 lessThan :drawItemColor.4:col :drawItemColor.4:columns
+  541 op add :drawItemColor.4:col :drawItem.4:col 1
+  542 jump *label108 lessThan :drawItemColor.4:col :drawItem.4:columns
   543 set :drawItemColor.4:col 0
-    * op sub :drawItemColor.4:y :drawItemColor.4:y 15
+  544 op sub :drawItemColor.4:y :drawItem.4:y 15
   545 label *label108
   546 label *label109
   547 label *label104
-    * set :drawItem.4:col :drawItemColor.4:col
   548 set :drawItem.4:y :drawItemColor.4:y
   549 label *label103
-    * set :updateDisplay:y :drawItem.4:y
+  550 set :updateDisplay:y :drawItemColor.4:y
   551 label *label88
   552 jump *label86 always
   553 label *label85
   554 op idiv *tmp216 :drawAirFactory:progress 0.01
   555 set :drawItem.5:col 0
-    * set :drawItem.5:y :updateDisplay:y
+  556 set :drawItem.5:y :drawTitleRow.2:y
   557 set :drawItem.5:columns 1
   558 set :drawItem.5:item .nextFactory
   559 set :drawItem.5:current :drawAirFactory:progress
   560 set :drawItem.5:target 1
   561 set :drawItemColor.5:color1 %008000FF
   562 set :drawItemColor.5:color2 %00FF00FF
-    * set :drawItemColor.5:col :drawItem.5:col
-    * set :drawItemColor.5:y :drawItem.5:y
-    * set :drawItemColor.5:columns :drawItem.5:columns
+  563 set :drawItemColor.5:col 0
+  564 set :drawItemColor.5:y :updateDisplay:y
+  565 set :drawItemColor.5:columns 1
   566 set :drawItemColor.5:item :drawItem.5:item
-    * set :drawItemColor.5:current :drawItem.5:current
-    * set :drawItemColor.5:target :drawItem.5:target
-    * op mul *tmp217 :drawItemColor.5:columns 176
-    * op div *tmp218 *tmp217 2
+  567 set :drawItemColor.5:current :drawAirFactory:progress
+  568 set :drawItemColor.5:target 1
+  569 op mul *tmp217 :drawItem.5:columns 176
+  570 op mul *tmp218 :drawItemColor.5:columns 88
   571 op sub :drawItemColor.5:barLength 214 *tmp218
   572 op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
-    * op mul *tmp221 :drawItemColor.5:barLength :drawItemColor.5:current
-    * op div *tmp222 *tmp221 :drawItemColor.5:target
+  573 op mul *tmp221 :drawItemColor.5:barLength :drawItem.5:current
+  574 op div *tmp222 *tmp221 :drawItem.5:target
   575 op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
-    * op mul *tmp224 :drawItemColor.5:col 176
-    * op div *tmp225 *tmp224 2
+  576 op mul *tmp224 :drawItem.5:col 176
+  577 op mul *tmp225 :drawItemColor.5:col 88
   578 op add :drawItemColor.5:iconX 11 *tmp225
-    * op mul *tmp227 :drawItemColor.5:col 176
-    * op div *tmp228 *tmp227 2
-    * op add :drawItemColor.5:barX 22 *tmp228
-    * op mul *tmp230 :drawItemColor.5:col 176
-    * op div *tmp231 *tmp230 2
-    * op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp231
+  579 op mul *tmp227 :drawItem.5:col 176
+  580 op div *tmp228 *tmp224 2
+  581 op add :drawItemColor.5:barX 22 *tmp225
+  582 op mul *tmp230 :drawItem.5:col 176
+  583 op div *tmp231 *tmp224 2
+  584 op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp225
   585 draw col %[white]
-    * op add *tmp233 :drawItemColor.5:y 5
-    * draw image :drawItemColor.5:iconX *tmp233 :drawItemColor.5:item 16 0
-    * draw col :drawItemColor.5:color1
-    * draw rect :drawItemColor.5:barX :drawItemColor.5:y :drawItemColor.5:length 10
-    * draw col :drawItemColor.5:color2
-    * draw lineRect :drawItemColor.5:barX :drawItemColor.5:y :drawItemColor.5:barLength 10
-    * op add *tmp234 :drawItemColor.5:y 5
-    * op add *tmp235 *tmp234 2
+  586 op add *tmp233 :drawItem.5:y 5
+  587 draw image :drawItemColor.5:iconX *tmp233 :drawItem.5:item 16 0
+  588 draw col %008000FF
+  589 draw rect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:length 10
+  590 draw col %00FF00FF
+  591 draw lineRect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:barLength 10
+  592 op add *tmp234 :drawItem.5:y 5
+  593 op add *tmp235 *tmp233 2
   594 set :drawBold.5:x :drawItemColor.5:textX
   595 set :drawBold.5:y *tmp235
   596 set :drawBold.5:alignment @right
-    * set :drawText.16:x :drawBold.5:x
-    * set :drawText.16:y :drawBold.5:y
-    * set :drawText.16:alignment :drawBold.5:alignment
+  597 set :drawText.16:x :drawItemColor.5:textX
+  598 set :drawText.16:y *tmp235
+  599 set :drawText.16:alignment @right
   600 print *tmp216
   601 print "%"
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  602 draw print :drawBold.5:x :drawBold.5:y :drawBold.5:alignment
   603 label *label113
-    * op add :drawText.17:x :drawBold.5:x 1
-    * set :drawText.17:y :drawBold.5:y
-    * set :drawText.17:alignment :drawBold.5:alignment
+  604 op add :drawText.17:x :drawItemColor.5:textX 1
+  605 set :drawText.17:y *tmp235
+  606 set :drawText.17:alignment @right
   607 print *tmp216
   608 print "%"
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  609 draw print :drawText.17:x :drawBold.5:y :drawBold.5:alignment
   610 label *label114
   611 label *label112
-    * op add :drawItemColor.5:col :drawItemColor.5:col 1
-    * jump *label115 lessThan :drawItemColor.5:col :drawItemColor.5:columns
+  612 op add :drawItemColor.5:col :drawItem.5:col 1
+  613 jump *label115 lessThan :drawItemColor.5:col :drawItem.5:columns
   614 set :drawItemColor.5:col 0
-    * op sub :drawItemColor.5:y :drawItemColor.5:y 15
+  615 op sub :drawItemColor.5:y :drawItem.5:y 15
   616 label *label115
   617 label *label116
   618 label *label111
-    * set :drawItem.5:col :drawItemColor.5:col
   619 set :drawItem.5:y :drawItemColor.5:y
   620 label *label110
-    * set :updateDisplay:y :drawItem.5:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  621 set :updateDisplay:y :drawItemColor.5:y
+  622 op sub :updateDisplay:y :drawItem.5:y 15
   623 label *label86
   624 op sub :updateDisplay:y :updateDisplay:y 5
   625 label *label79
 
   631 set :drawTitleRow.3:y :updateDisplay:y
   632 set :drawTitleRow.3:alignment @bottomLeft
   633 set :drawText.18:x 22
-    * set :drawText.18:y :drawTitleRow.3:y
-    * set :drawText.18:alignment :drawTitleRow.3:alignment
+  634 set :drawText.18:y :updateDisplay:y
+  635 set :drawText.18:alignment @bottomLeft
   636 print "Reconstructor"
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  637 draw print 22 :drawTitleRow.3:y :drawTitleRow.3:alignment
   638 label *label121
   639 set :drawText.19:x 23
-    * set :drawText.19:y :drawTitleRow.3:y
-    * set :drawText.19:alignment :drawTitleRow.3:alignment
+  640 set :drawText.19:y :updateDisplay:y
+  641 set :drawText.19:alignment @bottomLeft
   642 print "Reconstructor"
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  643 draw print 23 :drawTitleRow.3:y :drawTitleRow.3:alignment
   644 label *label122
-    * op sub :drawTitleRow.3:y :drawTitleRow.3:y 15
+  645 op sub :drawTitleRow.3:y :updateDisplay:y 15
   646 label *label120
   647 set :updateDisplay:y :drawTitleRow.3:y
   648 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   649 jump *label123 notEqual :drawAddReco:progress 0
   650 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
   651 set :drawItem.6:col 0
-    * set :drawItem.6:y :updateDisplay:y
+  652 set :drawItem.6:y :drawTitleRow.3:y
   653 set :drawItem.6:columns 1
   654 set :drawItem.6:item @graphite
   655 set :drawItem.6:current *tmp244
   656 set :drawItem.6:target 40
   657 set :drawItemColor.6:color1 %008000FF
   658 set :drawItemColor.6:color2 %00FF00FF
-    * set :drawItemColor.6:col :drawItem.6:col
-    * set :drawItemColor.6:y :drawItem.6:y
-    * set :drawItemColor.6:columns :drawItem.6:columns
-    * set :drawItemColor.6:item :drawItem.6:item
-    * set :drawItemColor.6:current :drawItem.6:current
-    * set :drawItemColor.6:target :drawItem.6:target
-    * op mul *tmp245 :drawItemColor.6:columns 176
-    * op div *tmp246 *tmp245 2
+  659 set :drawItemColor.6:col 0
+  660 set :drawItemColor.6:y :updateDisplay:y
+  661 set :drawItemColor.6:columns 1
+  662 set :drawItemColor.6:item @graphite
+  663 set :drawItemColor.6:current *tmp244
+  664 set :drawItemColor.6:target 40
+  665 op mul *tmp245 :drawItem.6:columns 176
+  666 op mul *tmp246 :drawItemColor.6:columns 88
   667 op sub :drawItemColor.6:barLength 214 *tmp246
   668 op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
-    * op mul *tmp249 :drawItemColor.6:barLength :drawItemColor.6:current
-    * op div *tmp250 *tmp249 :drawItemColor.6:target
+  669 op mul *tmp249 :drawItemColor.6:barLength :drawItem.6:current
+  670 op div *tmp250 *tmp249 :drawItem.6:target
   671 op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
-    * op mul *tmp252 :drawItemColor.6:col 176
-    * op div *tmp253 *tmp252 2
+  672 op mul *tmp252 :drawItem.6:col 176
+  673 op mul *tmp253 :drawItemColor.6:col 88
   674 op add :drawItemColor.6:iconX 11 *tmp253
-    * op mul *tmp255 :drawItemColor.6:col 176
-    * op div *tmp256 *tmp255 2
-    * op add :drawItemColor.6:barX 22 *tmp256
-    * op mul *tmp258 :drawItemColor.6:col 176
-    * op div *tmp259 *tmp258 2
-    * op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp259
+  675 op mul *tmp255 :drawItem.6:col 176
+  676 op div *tmp256 *tmp252 2
+  677 op add :drawItemColor.6:barX 22 *tmp253
+  678 op mul *tmp258 :drawItem.6:col 176
+  679 op div *tmp259 *tmp252 2
+  680 op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp253
   681 draw col %[white]
-    * op add *tmp261 :drawItemColor.6:y 5
-    * draw image :drawItemColor.6:iconX *tmp261 :drawItemColor.6:item 16 0
-    * draw col :drawItemColor.6:color1
-    * draw rect :drawItemColor.6:barX :drawItemColor.6:y :drawItemColor.6:length 10
-    * draw col :drawItemColor.6:color2
-    * draw lineRect :drawItemColor.6:barX :drawItemColor.6:y :drawItemColor.6:barLength 10
-    * op add *tmp262 :drawItemColor.6:y 5
-    * op add *tmp263 *tmp262 2
+  682 op add *tmp261 :drawItem.6:y 5
+  683 draw image :drawItemColor.6:iconX *tmp261 :drawItem.6:item 16 0
+  684 draw col %008000FF
+  685 draw rect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:length 10
+  686 draw col %00FF00FF
+  687 draw lineRect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:barLength 10
+  688 op add *tmp262 :drawItem.6:y 5
+  689 op add *tmp263 *tmp261 2
   690 set :drawBold.6:x :drawItemColor.6:textX
   691 set :drawBold.6:y *tmp263
   692 set :drawBold.6:alignment @right
-    * set :drawText.20:x :drawBold.6:x
-    * set :drawText.20:y :drawBold.6:y
-    * set :drawText.20:alignment :drawBold.6:alignment
+  693 set :drawText.20:x :drawItemColor.6:textX
+  694 set :drawText.20:y *tmp263
+  695 set :drawText.20:alignment @right
   696 print 40
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  697 draw print :drawBold.6:x :drawBold.6:y :drawBold.6:alignment
   698 label *label128
-    * op add :drawText.21:x :drawBold.6:x 1
-    * set :drawText.21:y :drawBold.6:y
-    * set :drawText.21:alignment :drawBold.6:alignment
+  699 op add :drawText.21:x :drawItemColor.6:textX 1
+  700 set :drawText.21:y *tmp263
+  701 set :drawText.21:alignment @right
   702 print 40
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  703 draw print :drawText.21:x :drawBold.6:y :drawBold.6:alignment
   704 label *label129
   705 label *label127
-    * op add :drawItemColor.6:col :drawItemColor.6:col 1
-    * jump *label130 lessThan :drawItemColor.6:col :drawItemColor.6:columns
+  706 op add :drawItemColor.6:col :drawItem.6:col 1
+  707 jump *label130 lessThan :drawItemColor.6:col :drawItem.6:columns
   708 set :drawItemColor.6:col 0
-    * op sub :drawItemColor.6:y :drawItemColor.6:y 15
+  709 op sub :drawItemColor.6:y :drawItem.6:y 15
   710 label *label130
   711 label *label131
   712 label *label126
-    * set :drawItem.6:col :drawItemColor.6:col
   713 set :drawItem.6:y :drawItemColor.6:y
   714 label *label125
-    * set :updateDisplay:y :drawItem.6:y
+  715 set :updateDisplay:y :drawItemColor.6:y
   716 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
   717 set :drawItem.7:col 0
-    * set :drawItem.7:y :updateDisplay:y
+  718 set :drawItem.7:y :drawItem.6:y
   719 set :drawItem.7:columns 1
   720 set :drawItem.7:item @silicon
   721 set :drawItem.7:current *tmp267
   722 set :drawItem.7:target 40
   723 set :drawItemColor.7:color1 %008000FF
   724 set :drawItemColor.7:color2 %00FF00FF
-    * set :drawItemColor.7:col :drawItem.7:col
-    * set :drawItemColor.7:y :drawItem.7:y
-    * set :drawItemColor.7:columns :drawItem.7:columns
-    * set :drawItemColor.7:item :drawItem.7:item
-    * set :drawItemColor.7:current :drawItem.7:current
-    * set :drawItemColor.7:target :drawItem.7:target
-    * op mul *tmp268 :drawItemColor.7:columns 176
-    * op div *tmp269 *tmp268 2
+  725 set :drawItemColor.7:col 0
+  726 set :drawItemColor.7:y :updateDisplay:y
+  727 set :drawItemColor.7:columns 1
+  728 set :drawItemColor.7:item @silicon
+  729 set :drawItemColor.7:current *tmp267
+  730 set :drawItemColor.7:target 40
+  731 op mul *tmp268 :drawItem.7:columns 176
+  732 op mul *tmp269 :drawItemColor.7:columns 88
   733 op sub :drawItemColor.7:barLength 214 *tmp269
   734 op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
-    * op mul *tmp272 :drawItemColor.7:barLength :drawItemColor.7:current
-    * op div *tmp273 *tmp272 :drawItemColor.7:target
+  735 op mul *tmp272 :drawItemColor.7:barLength :drawItem.7:current
+  736 op div *tmp273 *tmp272 :drawItem.7:target
   737 op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
-    * op mul *tmp275 :drawItemColor.7:col 176
-    * op div *tmp276 *tmp275 2
+  738 op mul *tmp275 :drawItem.7:col 176
+  739 op mul *tmp276 :drawItemColor.7:col 88
   740 op add :drawItemColor.7:iconX 11 *tmp276
-    * op mul *tmp278 :drawItemColor.7:col 176
-    * op div *tmp279 *tmp278 2
-    * op add :drawItemColor.7:barX 22 *tmp279
-    * op mul *tmp281 :drawItemColor.7:col 176
-    * op div *tmp282 *tmp281 2
-    * op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp282
+  741 op mul *tmp278 :drawItem.7:col 176
+  742 op div *tmp279 *tmp275 2
+  743 op add :drawItemColor.7:barX 22 *tmp276
+  744 op mul *tmp281 :drawItem.7:col 176
+  745 op div *tmp282 *tmp275 2
+  746 op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp276
   747 draw col %[white]
-    * op add *tmp284 :drawItemColor.7:y 5
-    * draw image :drawItemColor.7:iconX *tmp284 :drawItemColor.7:item 16 0
-    * draw col :drawItemColor.7:color1
-    * draw rect :drawItemColor.7:barX :drawItemColor.7:y :drawItemColor.7:length 10
-    * draw col :drawItemColor.7:color2
-    * draw lineRect :drawItemColor.7:barX :drawItemColor.7:y :drawItemColor.7:barLength 10
-    * op add *tmp285 :drawItemColor.7:y 5
-    * op add *tmp286 *tmp285 2
+  748 op add *tmp284 :drawItem.7:y 5
+  749 draw image :drawItemColor.7:iconX *tmp284 :drawItem.7:item 16 0
+  750 draw col %008000FF
+  751 draw rect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:length 10
+  752 draw col %00FF00FF
+  753 draw lineRect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:barLength 10
+  754 op add *tmp285 :drawItem.7:y 5
+  755 op add *tmp286 *tmp284 2
   756 set :drawBold.7:x :drawItemColor.7:textX
   757 set :drawBold.7:y *tmp286
   758 set :drawBold.7:alignment @right
-    * set :drawText.22:x :drawBold.7:x
-    * set :drawText.22:y :drawBold.7:y
-    * set :drawText.22:alignment :drawBold.7:alignment
+  759 set :drawText.22:x :drawItemColor.7:textX
+  760 set :drawText.22:y *tmp286
+  761 set :drawText.22:alignment @right
   762 print 40
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  763 draw print :drawBold.7:x :drawBold.7:y :drawBold.7:alignment
   764 label *label135
-    * op add :drawText.23:x :drawBold.7:x 1
-    * set :drawText.23:y :drawBold.7:y
-    * set :drawText.23:alignment :drawBold.7:alignment
+  765 op add :drawText.23:x :drawItemColor.7:textX 1
+  766 set :drawText.23:y *tmp286
+  767 set :drawText.23:alignment @right
   768 print 40
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  769 draw print :drawText.23:x :drawBold.7:y :drawBold.7:alignment
   770 label *label136
   771 label *label134
-    * op add :drawItemColor.7:col :drawItemColor.7:col 1
-    * jump *label137 lessThan :drawItemColor.7:col :drawItemColor.7:columns
+  772 op add :drawItemColor.7:col :drawItem.7:col 1
+  773 jump *label137 lessThan :drawItemColor.7:col :drawItem.7:columns
   774 set :drawItemColor.7:col 0
-    * op sub :drawItemColor.7:y :drawItemColor.7:y 15
+  775 op sub :drawItemColor.7:y :drawItem.7:y 15
   776 label *label137
   777 label *label138
   778 label *label133
-    * set :drawItem.7:col :drawItemColor.7:col
   779 set :drawItem.7:y :drawItemColor.7:y
   780 label *label132
-    * set :updateDisplay:y :drawItem.7:y
+  781 set :updateDisplay:y :drawItemColor.7:y
   782 jump *label124 always
   783 label *label123
   784 op idiv *tmp291 :drawAddReco:progress 0.01
   785 set :drawItem.8:col 0
-    * set :drawItem.8:y :updateDisplay:y
+  786 set :drawItem.8:y :drawTitleRow.3:y
   787 set :drawItem.8:columns 1
   788 set :drawItem.8:item @poly
   789 set :drawItem.8:current :drawAddReco:progress
   790 set :drawItem.8:target 1
   791 set :drawItemColor.8:color1 %008000FF
   792 set :drawItemColor.8:color2 %00FF00FF
-    * set :drawItemColor.8:col :drawItem.8:col
-    * set :drawItemColor.8:y :drawItem.8:y
-    * set :drawItemColor.8:columns :drawItem.8:columns
-    * set :drawItemColor.8:item :drawItem.8:item
-    * set :drawItemColor.8:current :drawItem.8:current
-    * set :drawItemColor.8:target :drawItem.8:target
-    * op mul *tmp292 :drawItemColor.8:columns 176
-    * op div *tmp293 *tmp292 2
+  793 set :drawItemColor.8:col 0
+  794 set :drawItemColor.8:y :updateDisplay:y
+  795 set :drawItemColor.8:columns 1
+  796 set :drawItemColor.8:item @poly
+  797 set :drawItemColor.8:current :drawAddReco:progress
+  798 set :drawItemColor.8:target 1
+  799 op mul *tmp292 :drawItem.8:columns 176
+  800 op mul *tmp293 :drawItemColor.8:columns 88
   801 op sub :drawItemColor.8:barLength 214 *tmp293
   802 op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
-    * op mul *tmp296 :drawItemColor.8:barLength :drawItemColor.8:current
-    * op div *tmp297 *tmp296 :drawItemColor.8:target
+  803 op mul *tmp296 :drawItemColor.8:barLength :drawItem.8:current
+  804 op div *tmp297 *tmp296 :drawItem.8:target
   805 op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
-    * op mul *tmp299 :drawItemColor.8:col 176
-    * op div *tmp300 *tmp299 2
+  806 op mul *tmp299 :drawItem.8:col 176
+  807 op mul *tmp300 :drawItemColor.8:col 88
   808 op add :drawItemColor.8:iconX 11 *tmp300
-    * op mul *tmp302 :drawItemColor.8:col 176
-    * op div *tmp303 *tmp302 2
-    * op add :drawItemColor.8:barX 22 *tmp303
-    * op mul *tmp305 :drawItemColor.8:col 176
-    * op div *tmp306 *tmp305 2
-    * op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp306
+  809 op mul *tmp302 :drawItem.8:col 176
+  810 op div *tmp303 *tmp299 2
+  811 op add :drawItemColor.8:barX 22 *tmp300
+  812 op mul *tmp305 :drawItem.8:col 176
+  813 op div *tmp306 *tmp299 2
+  814 op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp300
   815 draw col %[white]
-    * op add *tmp308 :drawItemColor.8:y 5
-    * draw image :drawItemColor.8:iconX *tmp308 :drawItemColor.8:item 16 0
-    * draw col :drawItemColor.8:color1
-    * draw rect :drawItemColor.8:barX :drawItemColor.8:y :drawItemColor.8:length 10
-    * draw col :drawItemColor.8:color2
-    * draw lineRect :drawItemColor.8:barX :drawItemColor.8:y :drawItemColor.8:barLength 10
-    * op add *tmp309 :drawItemColor.8:y 5
-    * op add *tmp310 *tmp309 2
+  816 op add *tmp308 :drawItem.8:y 5
+  817 draw image :drawItemColor.8:iconX *tmp308 :drawItem.8:item 16 0
+  818 draw col %008000FF
+  819 draw rect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:length 10
+  820 draw col %00FF00FF
+  821 draw lineRect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:barLength 10
+  822 op add *tmp309 :drawItem.8:y 5
+  823 op add *tmp310 *tmp308 2
   824 set :drawBold.8:x :drawItemColor.8:textX
   825 set :drawBold.8:y *tmp310
   826 set :drawBold.8:alignment @right
-    * set :drawText.24:x :drawBold.8:x
-    * set :drawText.24:y :drawBold.8:y
-    * set :drawText.24:alignment :drawBold.8:alignment
+  827 set :drawText.24:x :drawItemColor.8:textX
+  828 set :drawText.24:y *tmp310
+  829 set :drawText.24:alignment @right
   830 print *tmp291
   831 print "%"
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  832 draw print :drawBold.8:x :drawBold.8:y :drawBold.8:alignment
   833 label *label142
-    * op add :drawText.25:x :drawBold.8:x 1
-    * set :drawText.25:y :drawBold.8:y
-    * set :drawText.25:alignment :drawBold.8:alignment
+  834 op add :drawText.25:x :drawItemColor.8:textX 1
+  835 set :drawText.25:y *tmp310
+  836 set :drawText.25:alignment @right
   837 print *tmp291
   838 print "%"
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  839 draw print :drawText.25:x :drawBold.8:y :drawBold.8:alignment
   840 label *label143
   841 label *label141
-    * op add :drawItemColor.8:col :drawItemColor.8:col 1
-    * jump *label144 lessThan :drawItemColor.8:col :drawItemColor.8:columns
+  842 op add :drawItemColor.8:col :drawItem.8:col 1
+  843 jump *label144 lessThan :drawItemColor.8:col :drawItem.8:columns
   844 set :drawItemColor.8:col 0
-    * op sub :drawItemColor.8:y :drawItemColor.8:y 15
+  845 op sub :drawItemColor.8:y :drawItem.8:y 15
   846 label *label144
   847 label *label145
   848 label *label140
-    * set :drawItem.8:col :drawItemColor.8:col
   849 set :drawItem.8:y :drawItemColor.8:y
   850 label *label139
-    * set :updateDisplay:y :drawItem.8:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  851 set :updateDisplay:y :drawItemColor.8:y
+  852 op sub :updateDisplay:y :drawItem.8:y 15
   853 label *label124
   854 op sub :updateDisplay:y :updateDisplay:y 5
   855 label *label117
 
   862 set :drawTitleRow.4:y :updateDisplay:y
   863 set :drawTitleRow.4:alignment @bottomLeft
   864 set :drawText.26:x 22
-    * set :drawText.26:y :drawTitleRow.4:y
-    * set :drawText.26:alignment :drawTitleRow.4:alignment
+  865 set :drawText.26:y :updateDisplay:y
+  866 set :drawText.26:alignment @bottomLeft
   867 print "Reconstructor"
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  868 draw print 22 :drawTitleRow.4:y :drawTitleRow.4:alignment
   869 label *label150
   870 set :drawText.27:x 23
-    * set :drawText.27:y :drawTitleRow.4:y
-    * set :drawText.27:alignment :drawTitleRow.4:alignment
+  871 set :drawText.27:y :updateDisplay:y
+  872 set :drawText.27:alignment @bottomLeft
   873 print "Reconstructor"
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  874 draw print 23 :drawTitleRow.4:y :drawTitleRow.4:alignment
   875 label *label151
-    * op sub :drawTitleRow.4:y :drawTitleRow.4:y 15
+  876 op sub :drawTitleRow.4:y :updateDisplay:y 15
   877 label *label149
   878 set :updateDisplay:y :drawTitleRow.4:y
   879 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   880 jump *label152 notEqual :drawMultiReco:progress 0
   881 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
   882 set :drawItem.9:col 0
-    * set :drawItem.9:y :updateDisplay:y
+  883 set :drawItem.9:y :drawTitleRow.4:y
   884 set :drawItem.9:columns 1
   885 set :drawItem.9:item @metaglass
   886 set :drawItem.9:current *tmp320
   887 set :drawItem.9:target 40
   888 set :drawItemColor.9:color1 %008000FF
   889 set :drawItemColor.9:color2 %00FF00FF
-    * set :drawItemColor.9:col :drawItem.9:col
-    * set :drawItemColor.9:y :drawItem.9:y
-    * set :drawItemColor.9:columns :drawItem.9:columns
-    * set :drawItemColor.9:item :drawItem.9:item
-    * set :drawItemColor.9:current :drawItem.9:current
-    * set :drawItemColor.9:target :drawItem.9:target
-    * op mul *tmp321 :drawItemColor.9:columns 176
-    * op div *tmp322 *tmp321 2
+  890 set :drawItemColor.9:col 0
+  891 set :drawItemColor.9:y :updateDisplay:y
+  892 set :drawItemColor.9:columns 1
+  893 set :drawItemColor.9:item @metaglass
+  894 set :drawItemColor.9:current *tmp320
+  895 set :drawItemColor.9:target 40
+  896 op mul *tmp321 :drawItem.9:columns 176
+  897 op mul *tmp322 :drawItemColor.9:columns 88
   898 op sub :drawItemColor.9:barLength 214 *tmp322
   899 op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
-    * op mul *tmp325 :drawItemColor.9:barLength :drawItemColor.9:current
-    * op div *tmp326 *tmp325 :drawItemColor.9:target
+  900 op mul *tmp325 :drawItemColor.9:barLength :drawItem.9:current
+  901 op div *tmp326 *tmp325 :drawItem.9:target
   902 op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
-    * op mul *tmp328 :drawItemColor.9:col 176
-    * op div *tmp329 *tmp328 2
+  903 op mul *tmp328 :drawItem.9:col 176
+  904 op mul *tmp329 :drawItemColor.9:col 88
   905 op add :drawItemColor.9:iconX 11 *tmp329
-    * op mul *tmp331 :drawItemColor.9:col 176
-    * op div *tmp332 *tmp331 2
-    * op add :drawItemColor.9:barX 22 *tmp332
-    * op mul *tmp334 :drawItemColor.9:col 176
-    * op div *tmp335 *tmp334 2
-    * op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp335
+  906 op mul *tmp331 :drawItem.9:col 176
+  907 op div *tmp332 *tmp328 2
+  908 op add :drawItemColor.9:barX 22 *tmp329
+  909 op mul *tmp334 :drawItem.9:col 176
+  910 op div *tmp335 *tmp328 2
+  911 op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp329
   912 draw col %[white]
-    * op add *tmp337 :drawItemColor.9:y 5
-    * draw image :drawItemColor.9:iconX *tmp337 :drawItemColor.9:item 16 0
-    * draw col :drawItemColor.9:color1
-    * draw rect :drawItemColor.9:barX :drawItemColor.9:y :drawItemColor.9:length 10
-    * draw col :drawItemColor.9:color2
-    * draw lineRect :drawItemColor.9:barX :drawItemColor.9:y :drawItemColor.9:barLength 10
-    * op add *tmp338 :drawItemColor.9:y 5
-    * op add *tmp339 *tmp338 2
+  913 op add *tmp337 :drawItem.9:y 5
+  914 draw image :drawItemColor.9:iconX *tmp337 :drawItem.9:item 16 0
+  915 draw col %008000FF
+  916 draw rect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:length 10
+  917 draw col %00FF00FF
+  918 draw lineRect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:barLength 10
+  919 op add *tmp338 :drawItem.9:y 5
+  920 op add *tmp339 *tmp337 2
   921 set :drawBold.9:x :drawItemColor.9:textX
   922 set :drawBold.9:y *tmp339
   923 set :drawBold.9:alignment @right
-    * set :drawText.28:x :drawBold.9:x
-    * set :drawText.28:y :drawBold.9:y
-    * set :drawText.28:alignment :drawBold.9:alignment
+  924 set :drawText.28:x :drawItemColor.9:textX
+  925 set :drawText.28:y *tmp339
+  926 set :drawText.28:alignment @right
   927 print 40
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  928 draw print :drawBold.9:x :drawBold.9:y :drawBold.9:alignment
   929 label *label157
-    * op add :drawText.29:x :drawBold.9:x 1
-    * set :drawText.29:y :drawBold.9:y
-    * set :drawText.29:alignment :drawBold.9:alignment
+  930 op add :drawText.29:x :drawItemColor.9:textX 1
+  931 set :drawText.29:y *tmp339
+  932 set :drawText.29:alignment @right
   933 print 40
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  934 draw print :drawText.29:x :drawBold.9:y :drawBold.9:alignment
   935 label *label158
   936 label *label156
-    * op add :drawItemColor.9:col :drawItemColor.9:col 1
-    * jump *label159 lessThan :drawItemColor.9:col :drawItemColor.9:columns
+  937 op add :drawItemColor.9:col :drawItem.9:col 1
+  938 jump *label159 lessThan :drawItemColor.9:col :drawItem.9:columns
   939 set :drawItemColor.9:col 0
-    * op sub :drawItemColor.9:y :drawItemColor.9:y 15
+  940 op sub :drawItemColor.9:y :drawItem.9:y 15
   941 label *label159
   942 label *label160
   943 label *label155
-    * set :drawItem.9:col :drawItemColor.9:col
   944 set :drawItem.9:y :drawItemColor.9:y
   945 label *label154
-    * set :updateDisplay:y :drawItem.9:y
+  946 set :updateDisplay:y :drawItemColor.9:y
   947 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
   948 set :drawItem.10:col 0
-    * set :drawItem.10:y :updateDisplay:y
+  949 set :drawItem.10:y :drawItem.9:y
   950 set :drawItem.10:columns 1
   951 set :drawItem.10:item @titanium
   952 set :drawItem.10:current *tmp343
   953 set :drawItem.10:target 80
   954 set :drawItemColor.10:color1 %008000FF
   955 set :drawItemColor.10:color2 %00FF00FF
-    * set :drawItemColor.10:col :drawItem.10:col
-    * set :drawItemColor.10:y :drawItem.10:y
-    * set :drawItemColor.10:columns :drawItem.10:columns
-    * set :drawItemColor.10:item :drawItem.10:item
-    * set :drawItemColor.10:current :drawItem.10:current
-    * set :drawItemColor.10:target :drawItem.10:target
-    * op mul *tmp344 :drawItemColor.10:columns 176
-    * op div *tmp345 *tmp344 2
+  956 set :drawItemColor.10:col 0
+  957 set :drawItemColor.10:y :updateDisplay:y
+  958 set :drawItemColor.10:columns 1
+  959 set :drawItemColor.10:item @titanium
+  960 set :drawItemColor.10:current *tmp343
+  961 set :drawItemColor.10:target 80
+  962 op mul *tmp344 :drawItem.10:columns 176
+  963 op mul *tmp345 :drawItemColor.10:columns 88
   964 op sub :drawItemColor.10:barLength 214 *tmp345
   965 op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
-    * op mul *tmp348 :drawItemColor.10:barLength :drawItemColor.10:current
-    * op div *tmp349 *tmp348 :drawItemColor.10:target
+  966 op mul *tmp348 :drawItemColor.10:barLength :drawItem.10:current
+  967 op div *tmp349 *tmp348 :drawItem.10:target
   968 op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
-    * op mul *tmp351 :drawItemColor.10:col 176
-    * op div *tmp352 *tmp351 2
+  969 op mul *tmp351 :drawItem.10:col 176
+  970 op mul *tmp352 :drawItemColor.10:col 88
   971 op add :drawItemColor.10:iconX 11 *tmp352
-    * op mul *tmp354 :drawItemColor.10:col 176
-    * op div *tmp355 *tmp354 2
-    * op add :drawItemColor.10:barX 22 *tmp355
-    * op mul *tmp357 :drawItemColor.10:col 176
-    * op div *tmp358 *tmp357 2
-    * op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp358
+  972 op mul *tmp354 :drawItem.10:col 176
+  973 op div *tmp355 *tmp351 2
+  974 op add :drawItemColor.10:barX 22 *tmp352
+  975 op mul *tmp357 :drawItem.10:col 176
+  976 op div *tmp358 *tmp351 2
+  977 op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp352
   978 draw col %[white]
-    * op add *tmp360 :drawItemColor.10:y 5
-    * draw image :drawItemColor.10:iconX *tmp360 :drawItemColor.10:item 16 0
-    * draw col :drawItemColor.10:color1
-    * draw rect :drawItemColor.10:barX :drawItemColor.10:y :drawItemColor.10:length 10
-    * draw col :drawItemColor.10:color2
-    * draw lineRect :drawItemColor.10:barX :drawItemColor.10:y :drawItemColor.10:barLength 10
-    * op add *tmp361 :drawItemColor.10:y 5
-    * op add *tmp362 *tmp361 2
+  979 op add *tmp360 :drawItem.10:y 5
+  980 draw image :drawItemColor.10:iconX *tmp360 :drawItem.10:item 16 0
+  981 draw col %008000FF
+  982 draw rect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:length 10
+  983 draw col %00FF00FF
+  984 draw lineRect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:barLength 10
+  985 op add *tmp361 :drawItem.10:y 5
+  986 op add *tmp362 *tmp360 2
   987 set :drawBold.10:x :drawItemColor.10:textX
   988 set :drawBold.10:y *tmp362
   989 set :drawBold.10:alignment @right
-    * set :drawText.30:x :drawBold.10:x
-    * set :drawText.30:y :drawBold.10:y
-    * set :drawText.30:alignment :drawBold.10:alignment
+  990 set :drawText.30:x :drawItemColor.10:textX
+  991 set :drawText.30:y *tmp362
+  992 set :drawText.30:alignment @right
   993 print 80
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  994 draw print :drawBold.10:x :drawBold.10:y :drawBold.10:alignment
   995 label *label164
-    * op add :drawText.31:x :drawBold.10:x 1
-    * set :drawText.31:y :drawBold.10:y
-    * set :drawText.31:alignment :drawBold.10:alignment
+  996 op add :drawText.31:x :drawItemColor.10:textX 1
+  997 set :drawText.31:y *tmp362
+  998 set :drawText.31:alignment @right
   999 print 80
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+ 1000 draw print :drawText.31:x :drawBold.10:y :drawBold.10:alignment
  1001 label *label165
  1002 label *label163
-    * op add :drawItemColor.10:col :drawItemColor.10:col 1
-    * jump *label166 lessThan :drawItemColor.10:col :drawItemColor.10:columns
+ 1003 op add :drawItemColor.10:col :drawItem.10:col 1
+ 1004 jump *label166 lessThan :drawItemColor.10:col :drawItem.10:columns
  1005 set :drawItemColor.10:col 0
-    * op sub :drawItemColor.10:y :drawItemColor.10:y 15
+ 1006 op sub :drawItemColor.10:y :drawItem.10:y 15
  1007 label *label166
  1008 label *label167
  1009 label *label162
-    * set :drawItem.10:col :drawItemColor.10:col
  1010 set :drawItem.10:y :drawItemColor.10:y
  1011 label *label161
-    * set :updateDisplay:y :drawItem.10:y
+ 1012 set :updateDisplay:y :drawItemColor.10:y
  1013 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
  1014 set :drawItem.11:col 0
-    * set :drawItem.11:y :updateDisplay:y
+ 1015 set :drawItem.11:y :drawItem.10:y
  1016 set :drawItem.11:columns 1
  1017 set :drawItem.11:item @silicon
  1018 set :drawItem.11:current *tmp366
  1019 set :drawItem.11:target 130
  1020 set :drawItemColor.11:color1 %008000FF
  1021 set :drawItemColor.11:color2 %00FF00FF
-    * set :drawItemColor.11:col :drawItem.11:col
-    * set :drawItemColor.11:y :drawItem.11:y
-    * set :drawItemColor.11:columns :drawItem.11:columns
-    * set :drawItemColor.11:item :drawItem.11:item
-    * set :drawItemColor.11:current :drawItem.11:current
-    * set :drawItemColor.11:target :drawItem.11:target
-    * op mul *tmp367 :drawItemColor.11:columns 176
-    * op div *tmp368 *tmp367 2
+ 1022 set :drawItemColor.11:col 0
+ 1023 set :drawItemColor.11:y :updateDisplay:y
+ 1024 set :drawItemColor.11:columns 1
+ 1025 set :drawItemColor.11:item @silicon
+ 1026 set :drawItemColor.11:current *tmp366
+ 1027 set :drawItemColor.11:target 130
+ 1028 op mul *tmp367 :drawItem.11:columns 176
+ 1029 op mul *tmp368 :drawItemColor.11:columns 88
  1030 op sub :drawItemColor.11:barLength 214 *tmp368
  1031 op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
-    * op mul *tmp371 :drawItemColor.11:barLength :drawItemColor.11:current
-    * op div *tmp372 *tmp371 :drawItemColor.11:target
+ 1032 op mul *tmp371 :drawItemColor.11:barLength :drawItem.11:current
+ 1033 op div *tmp372 *tmp371 :drawItem.11:target
  1034 op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
-    * op mul *tmp374 :drawItemColor.11:col 176
-    * op div *tmp375 *tmp374 2
+ 1035 op mul *tmp374 :drawItem.11:col 176
+ 1036 op mul *tmp375 :drawItemColor.11:col 88
  1037 op add :drawItemColor.11:iconX 11 *tmp375
-    * op mul *tmp377 :drawItemColor.11:col 176
-    * op div *tmp378 *tmp377 2
-    * op add :drawItemColor.11:barX 22 *tmp378
-    * op mul *tmp380 :drawItemColor.11:col 176
-    * op div *tmp381 *tmp380 2
-    * op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp381
+ 1038 op mul *tmp377 :drawItem.11:col 176
+ 1039 op div *tmp378 *tmp374 2
+ 1040 op add :drawItemColor.11:barX 22 *tmp375
+ 1041 op mul *tmp380 :drawItem.11:col 176
+ 1042 op div *tmp381 *tmp374 2
+ 1043 op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp375
  1044 draw col %[white]
-    * op add *tmp383 :drawItemColor.11:y 5
-    * draw image :drawItemColor.11:iconX *tmp383 :drawItemColor.11:item 16 0
-    * draw col :drawItemColor.11:color1
-    * draw rect :drawItemColor.11:barX :drawItemColor.11:y :drawItemColor.11:length 10
-    * draw col :drawItemColor.11:color2
-    * draw lineRect :drawItemColor.11:barX :drawItemColor.11:y :drawItemColor.11:barLength 10
-    * op add *tmp384 :drawItemColor.11:y 5
-    * op add *tmp385 *tmp384 2
+ 1045 op add *tmp383 :drawItem.11:y 5
+ 1046 draw image :drawItemColor.11:iconX *tmp383 :drawItem.11:item 16 0
+ 1047 draw col %008000FF
+ 1048 draw rect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:length 10
+ 1049 draw col %00FF00FF
+ 1050 draw lineRect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:barLength 10
+ 1051 op add *tmp384 :drawItem.11:y 5
+ 1052 op add *tmp385 *tmp383 2
  1053 set :drawBold.11:x :drawItemColor.11:textX
  1054 set :drawBold.11:y *tmp385
  1055 set :drawBold.11:alignment @right
-    * set :drawText.32:x :drawBold.11:x
-    * set :drawText.32:y :drawBold.11:y
-    * set :drawText.32:alignment :drawBold.11:alignment
+ 1056 set :drawText.32:x :drawItemColor.11:textX
+ 1057 set :drawText.32:y *tmp385
+ 1058 set :drawText.32:alignment @right
  1059 print 130
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+ 1060 draw print :drawBold.11:x :drawBold.11:y :drawBold.11:alignment
  1061 label *label171
-    * op add :drawText.33:x :drawBold.11:x 1
-    * set :drawText.33:y :drawBold.11:y
-    * set :drawText.33:alignment :drawBold.11:alignment
+ 1062 op add :drawText.33:x :drawItemColor.11:textX 1
+ 1063 set :drawText.33:y *tmp385
+ 1064 set :drawText.33:alignment @right
  1065 print 130
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1066 draw print :drawText.33:x :drawBold.11:y :drawBold.11:alignment
  1067 label *label172
  1068 label *label170
-    * op add :drawItemColor.11:col :drawItemColor.11:col 1
-    * jump *label173 lessThan :drawItemColor.11:col :drawItemColor.11:columns
+ 1069 op add :drawItemColor.11:col :drawItem.11:col 1
+ 1070 jump *label173 lessThan :drawItemColor.11:col :drawItem.11:columns
  1071 set :drawItemColor.11:col 0
-    * op sub :drawItemColor.11:y :drawItemColor.11:y 15
+ 1072 op sub :drawItemColor.11:y :drawItem.11:y 15
  1073 label *label173
  1074 label *label174
  1075 label *label169
-    * set :drawItem.11:col :drawItemColor.11:col
  1076 set :drawItem.11:y :drawItemColor.11:y
  1077 label *label168
-    * set :updateDisplay:y :drawItem.11:y
+ 1078 set :updateDisplay:y :drawItemColor.11:y
  1079 jump *label153 always
  1080 label *label152
  1081 op idiv *tmp390 :drawMultiReco:progress 0.01
  1082 set :drawItem.12:col 0
-    * set :drawItem.12:y :updateDisplay:y
+ 1083 set :drawItem.12:y :drawTitleRow.4:y
  1084 set :drawItem.12:columns 1
  1085 set :drawItem.12:item @mega
  1086 set :drawItem.12:current :drawMultiReco:progress
  1087 set :drawItem.12:target 1
  1088 set :drawItemColor.12:color1 %008000FF
  1089 set :drawItemColor.12:color2 %00FF00FF
-    * set :drawItemColor.12:col :drawItem.12:col
-    * set :drawItemColor.12:y :drawItem.12:y
-    * set :drawItemColor.12:columns :drawItem.12:columns
-    * set :drawItemColor.12:item :drawItem.12:item
-    * set :drawItemColor.12:current :drawItem.12:current
-    * set :drawItemColor.12:target :drawItem.12:target
-    * op mul *tmp391 :drawItemColor.12:columns 176
-    * op div *tmp392 *tmp391 2
+ 1090 set :drawItemColor.12:col 0
+ 1091 set :drawItemColor.12:y :updateDisplay:y
+ 1092 set :drawItemColor.12:columns 1
+ 1093 set :drawItemColor.12:item @mega
+ 1094 set :drawItemColor.12:current :drawMultiReco:progress
+ 1095 set :drawItemColor.12:target 1
+ 1096 op mul *tmp391 :drawItem.12:columns 176
+ 1097 op mul *tmp392 :drawItemColor.12:columns 88
  1098 op sub :drawItemColor.12:barLength 214 *tmp392
  1099 op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
-    * op mul *tmp395 :drawItemColor.12:barLength :drawItemColor.12:current
-    * op div *tmp396 *tmp395 :drawItemColor.12:target
+ 1100 op mul *tmp395 :drawItemColor.12:barLength :drawItem.12:current
+ 1101 op div *tmp396 *tmp395 :drawItem.12:target
  1102 op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
-    * op mul *tmp398 :drawItemColor.12:col 176
-    * op div *tmp399 *tmp398 2
+ 1103 op mul *tmp398 :drawItem.12:col 176
+ 1104 op mul *tmp399 :drawItemColor.12:col 88
  1105 op add :drawItemColor.12:iconX 11 *tmp399
-    * op mul *tmp401 :drawItemColor.12:col 176
-    * op div *tmp402 *tmp401 2
-    * op add :drawItemColor.12:barX 22 *tmp402
-    * op mul *tmp404 :drawItemColor.12:col 176
-    * op div *tmp405 *tmp404 2
-    * op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp405
+ 1106 op mul *tmp401 :drawItem.12:col 176
+ 1107 op div *tmp402 *tmp398 2
+ 1108 op add :drawItemColor.12:barX 22 *tmp399
+ 1109 op mul *tmp404 :drawItem.12:col 176
+ 1110 op div *tmp405 *tmp398 2
+ 1111 op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp399
  1112 draw col %[white]
-    * op add *tmp407 :drawItemColor.12:y 5
-    * draw image :drawItemColor.12:iconX *tmp407 :drawItemColor.12:item 16 0
-    * draw col :drawItemColor.12:color1
-    * draw rect :drawItemColor.12:barX :drawItemColor.12:y :drawItemColor.12:length 10
-    * draw col :drawItemColor.12:color2
-    * draw lineRect :drawItemColor.12:barX :drawItemColor.12:y :drawItemColor.12:barLength 10
-    * op add *tmp408 :drawItemColor.12:y 5
-    * op add *tmp409 *tmp408 2
+ 1113 op add *tmp407 :drawItem.12:y 5
+ 1114 draw image :drawItemColor.12:iconX *tmp407 :drawItem.12:item 16 0
+ 1115 draw col %008000FF
+ 1116 draw rect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:length 10
+ 1117 draw col %00FF00FF
+ 1118 draw lineRect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:barLength 10
+ 1119 op add *tmp408 :drawItem.12:y 5
+ 1120 op add *tmp409 *tmp407 2
  1121 set :drawBold.12:x :drawItemColor.12:textX
  1122 set :drawBold.12:y *tmp409
  1123 set :drawBold.12:alignment @right
-    * set :drawText.34:x :drawBold.12:x
-    * set :drawText.34:y :drawBold.12:y
-    * set :drawText.34:alignment :drawBold.12:alignment
+ 1124 set :drawText.34:x :drawItemColor.12:textX
+ 1125 set :drawText.34:y *tmp409
+ 1126 set :drawText.34:alignment @right
  1127 print *tmp390
  1128 print "%"
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1129 draw print :drawBold.12:x :drawBold.12:y :drawBold.12:alignment
  1130 label *label178
-    * op add :drawText.35:x :drawBold.12:x 1
-    * set :drawText.35:y :drawBold.12:y
-    * set :drawText.35:alignment :drawBold.12:alignment
+ 1131 op add :drawText.35:x :drawItemColor.12:textX 1
+ 1132 set :drawText.35:y *tmp409
+ 1133 set :drawText.35:alignment @right
  1134 print *tmp390
  1135 print "%"
-    * draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
+ 1136 draw print :drawText.35:x :drawBold.12:y :drawBold.12:alignment
  1137 label *label179
  1138 label *label177
-    * op add :drawItemColor.12:col :drawItemColor.12:col 1
-    * jump *label180 lessThan :drawItemColor.12:col :drawItemColor.12:columns
+ 1139 op add :drawItemColor.12:col :drawItem.12:col 1
+ 1140 jump *label180 lessThan :drawItemColor.12:col :drawItem.12:columns
  1141 set :drawItemColor.12:col 0
-    * op sub :drawItemColor.12:y :drawItemColor.12:y 15
+ 1142 op sub :drawItemColor.12:y :drawItem.12:y 15
  1143 label *label180
  1144 label *label181
  1145 label *label176
-    * set :drawItem.12:col :drawItemColor.12:col
  1146 set :drawItem.12:y :drawItemColor.12:y
  1147 label *label175
-    * set :updateDisplay:y :drawItem.12:y
-    * op sub :updateDisplay:y :updateDisplay:y 30
+ 1148 set :updateDisplay:y :drawItemColor.12:y
+ 1149 op sub :updateDisplay:y :drawItem.12:y 30
  1150 label *label153
  1151 op sub :updateDisplay:y :updateDisplay:y 5
  1152 label *label146
 
  1159 set :drawTitleRow.5:y :updateDisplay:y
  1160 set :drawTitleRow.5:alignment @bottomLeft
  1161 set :drawText.36:x 22
-    * set :drawText.36:y :drawTitleRow.5:y
-    * set :drawText.36:alignment :drawTitleRow.5:alignment
+ 1162 set :drawText.36:y :updateDisplay:y
+ 1163 set :drawText.36:alignment @bottomLeft
  1164 print "Builder"
-    * draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
+ 1165 draw print 22 :drawTitleRow.5:y :drawTitleRow.5:alignment
  1166 label *label186
  1167 set :drawText.37:x 23
-    * set :drawText.37:y :drawTitleRow.5:y
-    * set :drawText.37:alignment :drawTitleRow.5:alignment
+ 1168 set :drawText.37:y :updateDisplay:y
+ 1169 set :drawText.37:alignment @bottomLeft
  1170 print "Builder"
-    * draw print :drawText.37:x :drawText.37:y :drawText.37:alignment
+ 1171 draw print 23 :drawTitleRow.5:y :drawTitleRow.5:alignment
  1172 label *label187
-    * op sub :drawTitleRow.5:y :drawTitleRow.5:y 15
+ 1173 op sub :drawTitleRow.5:y :updateDisplay:y 15
  1174 label *label185
  1175 set :updateDisplay:y :drawTitleRow.5:y
  1176 jump *label188 notEqual .transportItem null
  1177 set :drawUnit:item @poly
  1178 set :drawUnit:items 0
-    * set :drawUnit:y :updateDisplay:y
+ 1179 set :drawUnit:y :drawTitleRow.5:y
  1180 set :drawItem.13:col 0
-    * set :drawItem.13:y :drawUnit:y
+ 1181 set :drawItem.13:y :updateDisplay:y
  1182 set :drawItem.13:columns 1
-    * set :drawItem.13:item :drawUnit:item
-    * set :drawItem.13:current :drawUnit:items
+ 1183 set :drawItem.13:item @poly
+ 1184 set :drawItem.13:current 0
  1185 set :drawItem.13:target .transportTarget
  1186 set :drawItemColor.13:color1 %008000FF
  1187 set :drawItemColor.13:color2 %00FF00FF
-    * set :drawItemColor.13:col :drawItem.13:col
-    * set :drawItemColor.13:y :drawItem.13:y
-    * set :drawItemColor.13:columns :drawItem.13:columns
-    * set :drawItemColor.13:item :drawItem.13:item
-    * set :drawItemColor.13:current :drawItem.13:current
+ 1188 set :drawItemColor.13:col 0
+ 1189 set :drawItemColor.13:y :drawUnit:y
+ 1190 set :drawItemColor.13:columns 1
+ 1191 set :drawItemColor.13:item :drawUnit:item
+ 1192 set :drawItemColor.13:current :drawUnit:items
  1193 set :drawItemColor.13:target :drawItem.13:target
-    * op mul *tmp417 :drawItemColor.13:columns 176
-    * op div *tmp418 *tmp417 2
+ 1194 op mul *tmp417 :drawItem.13:columns 176
+ 1195 op mul *tmp418 :drawItemColor.13:columns 88
  1196 op sub :drawItemColor.13:barLength 214 *tmp418
  1197 op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
-    * op mul *tmp421 :drawItemColor.13:barLength :drawItemColor.13:current
-    * op div *tmp422 *tmp421 :drawItemColor.13:target
+ 1198 op mul *tmp421 :drawItemColor.13:barLength :drawItem.13:current
+ 1199 op div *tmp422 *tmp421 :drawItem.13:target
  1200 op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
-    * op mul *tmp424 :drawItemColor.13:col 176
-    * op div *tmp425 *tmp424 2
+ 1201 op mul *tmp424 :drawItem.13:col 176
+ 1202 op mul *tmp425 :drawItemColor.13:col 88
  1203 op add :drawItemColor.13:iconX 11 *tmp425
-    * op mul *tmp427 :drawItemColor.13:col 176
-    * op div *tmp428 *tmp427 2
-    * op add :drawItemColor.13:barX 22 *tmp428
-    * op mul *tmp430 :drawItemColor.13:col 176
-    * op div *tmp431 *tmp430 2
-    * op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp431
+ 1204 op mul *tmp427 :drawItem.13:col 176
+ 1205 op div *tmp428 *tmp424 2
+ 1206 op add :drawItemColor.13:barX 22 *tmp425
+ 1207 op mul *tmp430 :drawItem.13:col 176
+ 1208 op div *tmp431 *tmp424 2
+ 1209 op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp425
  1210 draw col %[white]
-    * op add *tmp433 :drawItemColor.13:y 5
-    * draw image :drawItemColor.13:iconX *tmp433 :drawItemColor.13:item 16 0
-    * draw col :drawItemColor.13:color1
-    * draw rect :drawItemColor.13:barX :drawItemColor.13:y :drawItemColor.13:length 10
-    * draw col :drawItemColor.13:color2
-    * draw lineRect :drawItemColor.13:barX :drawItemColor.13:y :drawItemColor.13:barLength 10
-    * op add *tmp434 :drawItemColor.13:y 5
-    * op add *tmp435 *tmp434 2
+ 1211 op add *tmp433 :drawItem.13:y 5
+ 1212 draw image :drawItemColor.13:iconX *tmp433 :drawItem.13:item 16 0
+ 1213 draw col %008000FF
+ 1214 draw rect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:length 10
+ 1215 draw col %00FF00FF
+ 1216 draw lineRect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:barLength 10
+ 1217 op add *tmp434 :drawItem.13:y 5
+ 1218 op add *tmp435 *tmp433 2
  1219 set :drawBold.13:x :drawItemColor.13:textX
  1220 set :drawBold.13:y *tmp435
  1221 set :drawBold.13:alignment @right
-    * set :drawText.38:x :drawBold.13:x
-    * set :drawText.38:y :drawBold.13:y
-    * set :drawText.38:alignment :drawBold.13:alignment
+ 1222 set :drawText.38:x :drawItemColor.13:textX
+ 1223 set :drawText.38:y *tmp435
+ 1224 set :drawText.38:alignment @right
  1225 print .transportTarget
-    * draw print :drawText.38:x :drawText.38:y :drawText.38:alignment
+ 1226 draw print :drawBold.13:x :drawBold.13:y :drawBold.13:alignment
  1227 label *label194
-    * op add :drawText.39:x :drawBold.13:x 1
-    * set :drawText.39:y :drawBold.13:y
-    * set :drawText.39:alignment :drawBold.13:alignment
+ 1228 op add :drawText.39:x :drawItemColor.13:textX 1
+ 1229 set :drawText.39:y *tmp435
+ 1230 set :drawText.39:alignment @right
  1231 print .transportTarget
-    * draw print :drawText.39:x :drawText.39:y :drawText.39:alignment
+ 1232 draw print :drawText.39:x :drawBold.13:y :drawBold.13:alignment
  1233 label *label195
  1234 label *label193
-    * op add :drawItemColor.13:col :drawItemColor.13:col 1
-    * jump *label196 lessThan :drawItemColor.13:col :drawItemColor.13:columns
+ 1235 op add :drawItemColor.13:col :drawItem.13:col 1
+ 1236 jump *label196 lessThan :drawItemColor.13:col :drawItem.13:columns
  1237 set :drawItemColor.13:col 0
-    * op sub :drawItemColor.13:y :drawItemColor.13:y 15
+ 1238 op sub :drawItemColor.13:y :drawItem.13:y 15
  1239 label *label196
  1240 label *label197
  1241 label *label192
-    * set :drawItem.13:col :drawItemColor.13:col
  1242 set :drawItem.13:y :drawItemColor.13:y
  1243 label *label191
-    * set :drawUnit:y :drawItem.13:y
+ 1244 set :drawUnit:y :drawItemColor.13:y
  1245 label *label190
-    * set :updateDisplay:y :drawUnit:y
+ 1246 set :updateDisplay:y :drawItem.13:y
  1247 jump *label189 always
  1248 label *label188
  1249 sensor :drawBuilder:unitItem @unit @firstItem
 
  1252 op mul *tmp444 *tmp442 *tmp443
  1253 set :drawUnit.1:item .transportItem
  1254 set :drawUnit.1:items *tmp444
-    * set :drawUnit.1:y :updateDisplay:y
+ 1255 set :drawUnit.1:y :drawTitleRow.5:y
  1256 set :drawItem.14:col 0
-    * set :drawItem.14:y :drawUnit.1:y
+ 1257 set :drawItem.14:y :updateDisplay:y
  1258 set :drawItem.14:columns 1
  1259 set :drawItem.14:item :drawUnit.1:item
-    * set :drawItem.14:current :drawUnit.1:items
+ 1260 set :drawItem.14:current *tmp444
  1261 set :drawItem.14:target .transportTarget
  1262 set :drawItemColor.14:color1 %008000FF
  1263 set :drawItemColor.14:color2 %00FF00FF
-    * set :drawItemColor.14:col :drawItem.14:col
-    * set :drawItemColor.14:y :drawItem.14:y
-    * set :drawItemColor.14:columns :drawItem.14:columns
-    * set :drawItemColor.14:item :drawItem.14:item
-    * set :drawItemColor.14:current :drawItem.14:current
+ 1264 set :drawItemColor.14:col 0
+ 1265 set :drawItemColor.14:y :drawUnit.1:y
+ 1266 set :drawItemColor.14:columns 1
+ 1267 set :drawItemColor.14:item :drawUnit.1:item
+ 1268 set :drawItemColor.14:current :drawUnit.1:items
  1269 set :drawItemColor.14:target :drawItem.14:target
-    * op mul *tmp445 :drawItemColor.14:columns 176
-    * op div *tmp446 *tmp445 2
+ 1270 op mul *tmp445 :drawItem.14:columns 176
+ 1271 op mul *tmp446 :drawItemColor.14:columns 88
  1272 op sub :drawItemColor.14:barLength 214 *tmp446
  1273 op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
-    * op mul *tmp449 :drawItemColor.14:barLength :drawItemColor.14:current
-    * op div *tmp450 *tmp449 :drawItemColor.14:target
+ 1274 op mul *tmp449 :drawItemColor.14:barLength :drawItem.14:current
+ 1275 op div *tmp450 *tmp449 :drawItem.14:target
  1276 op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
-    * op mul *tmp452 :drawItemColor.14:col 176
-    * op div *tmp453 *tmp452 2
+ 1277 op mul *tmp452 :drawItem.14:col 176
+ 1278 op mul *tmp453 :drawItemColor.14:col 88
  1279 op add :drawItemColor.14:iconX 11 *tmp453
-    * op mul *tmp455 :drawItemColor.14:col 176
-    * op div *tmp456 *tmp455 2
-    * op add :drawItemColor.14:barX 22 *tmp456
-    * op mul *tmp458 :drawItemColor.14:col 176
-    * op div *tmp459 *tmp458 2
-    * op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp459
+ 1280 op mul *tmp455 :drawItem.14:col 176
+ 1281 op div *tmp456 *tmp452 2
+ 1282 op add :drawItemColor.14:barX 22 *tmp453
+ 1283 op mul *tmp458 :drawItem.14:col 176
+ 1284 op div *tmp459 *tmp452 2
+ 1285 op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp453
  1286 draw col %[white]
-    * op add *tmp461 :drawItemColor.14:y 5
-    * draw image :drawItemColor.14:iconX *tmp461 :drawItemColor.14:item 16 0
-    * draw col :drawItemColor.14:color1
-    * draw rect :drawItemColor.14:barX :drawItemColor.14:y :drawItemColor.14:length 10
-    * draw col :drawItemColor.14:color2
-    * draw lineRect :drawItemColor.14:barX :drawItemColor.14:y :drawItemColor.14:barLength 10
-    * op add *tmp462 :drawItemColor.14:y 5
-    * op add *tmp463 *tmp462 2
+ 1287 op add *tmp461 :drawItem.14:y 5
+ 1288 draw image :drawItemColor.14:iconX *tmp461 :drawItem.14:item 16 0
+ 1289 draw col %008000FF
+ 1290 draw rect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:length 10
+ 1291 draw col %00FF00FF
+ 1292 draw lineRect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:barLength 10
+ 1293 op add *tmp462 :drawItem.14:y 5
+ 1294 op add *tmp463 *tmp461 2
  1295 set :drawBold.14:x :drawItemColor.14:textX
  1296 set :drawBold.14:y *tmp463
  1297 set :drawBold.14:alignment @right
-    * set :drawText.40:x :drawBold.14:x
-    * set :drawText.40:y :drawBold.14:y
-    * set :drawText.40:alignment :drawBold.14:alignment
+ 1298 set :drawText.40:x :drawItemColor.14:textX
+ 1299 set :drawText.40:y *tmp463
+ 1300 set :drawText.40:alignment @right
  1301 print .transportTarget
-    * draw print :drawText.40:x :drawText.40:y :drawText.40:alignment
+ 1302 draw print :drawBold.14:x :drawBold.14:y :drawBold.14:alignment
  1303 label *label202
-    * op add :drawText.41:x :drawBold.14:x 1
-    * set :drawText.41:y :drawBold.14:y
-    * set :drawText.41:alignment :drawBold.14:alignment
+ 1304 op add :drawText.41:x :drawItemColor.14:textX 1
+ 1305 set :drawText.41:y *tmp463
+ 1306 set :drawText.41:alignment @right
  1307 print .transportTarget
-    * draw print :drawText.41:x :drawText.41:y :drawText.41:alignment
+ 1308 draw print :drawText.41:x :drawBold.14:y :drawBold.14:alignment
  1309 label *label203
  1310 label *label201
-    * op add :drawItemColor.14:col :drawItemColor.14:col 1
-    * jump *label204 lessThan :drawItemColor.14:col :drawItemColor.14:columns
+ 1311 op add :drawItemColor.14:col :drawItem.14:col 1
+ 1312 jump *label204 lessThan :drawItemColor.14:col :drawItem.14:columns
  1313 set :drawItemColor.14:col 0
-    * op sub :drawItemColor.14:y :drawItemColor.14:y 15
+ 1314 op sub :drawItemColor.14:y :drawItem.14:y 15
  1315 label *label204
  1316 label *label205
  1317 label *label200
-    * set :drawItem.14:col :drawItemColor.14:col
  1318 set :drawItem.14:y :drawItemColor.14:y
  1319 label *label199
-    * set :drawUnit.1:y :drawItem.14:y
+ 1320 set :drawUnit.1:y :drawItemColor.14:y
  1321 label *label198
-    * set :updateDisplay:y :drawUnit.1:y
+ 1322 set :updateDisplay:y :drawItem.14:y
  1323 label *label189
  1324 label *label182
  1325 jump *label207 greaterThanEq :updateDisplay:y 20
 
  1332 label *label210
  1333 set :updateDisplay:y 20
  1334 draw col %[white]
-    * set :drawTitleRow.6:y :updateDisplay:y
+ 1335 set :drawTitleRow.6:y 20
  1336 set :drawTitleRow.6:alignment @bottomLeft
  1337 set :drawText.42:x 22
-    * set :drawText.42:y :drawTitleRow.6:y
-    * set :drawText.42:alignment :drawTitleRow.6:alignment
+ 1338 set :drawText.42:y :updateDisplay:y
+ 1339 set :drawText.42:alignment @bottomLeft
  1340 print "Power"
-    * draw print :drawText.42:x :drawText.42:y :drawText.42:alignment
+ 1341 draw print 22 :drawTitleRow.6:y :drawTitleRow.6:alignment
  1342 label *label212
  1343 set :drawText.43:x 23
-    * set :drawText.43:y :drawTitleRow.6:y
-    * set :drawText.43:alignment :drawTitleRow.6:alignment
+ 1344 set :drawText.43:y :updateDisplay:y
+ 1345 set :drawText.43:alignment @bottomLeft
  1346 print "Power"
-    * draw print :drawText.43:x :drawText.43:y :drawText.43:alignment
+ 1347 draw print 23 :drawTitleRow.6:y :drawTitleRow.6:alignment
  1348 label *label213
-    * op sub :drawTitleRow.6:y :drawTitleRow.6:y 15
+ 1349 op sub :drawTitleRow.6:y :updateDisplay:y 15
  1350 label *label211
  1351 set :updateDisplay:y :drawTitleRow.6:y
  1352 sensor :drawPower:power AJTJK-battery1 @totalPower
 
  1355 set :drawItemColor.15:color1 %808000FF
  1356 set :drawItemColor.15:color2 %FFFF00FF
  1357 set :drawItemColor.15:col 0
-    * set :drawItemColor.15:y :updateDisplay:y
+ 1358 set :drawItemColor.15:y :drawTitleRow.6:y
  1359 set :drawItemColor.15:columns 1
  1360 set :drawItemColor.15:item @battery
  1361 set :drawItemColor.15:current :drawPower:power
  1362 set :drawItemColor.15:target 4000
-    * op mul *tmp477 :drawItemColor.15:columns 176
-    * op div *tmp478 *tmp477 2
-    * op sub :drawItemColor.15:barLength 214 *tmp478
-    * op add :drawItemColor.15:textEnd 48 :drawItemColor.15:barLength
-    * op mul *tmp481 :drawItemColor.15:barLength :drawItemColor.15:current
-    * op div *tmp482 *tmp481 :drawItemColor.15:target
-    * op min :drawItemColor.15:length :drawItemColor.15:barLength *tmp482
-    * op mul *tmp484 :drawItemColor.15:col 176
-    * op div *tmp485 *tmp484 2
-    * op add :drawItemColor.15:iconX 11 *tmp485
-    * op mul *tmp487 :drawItemColor.15:col 176
-    * op div *tmp488 *tmp487 2
-    * op add :drawItemColor.15:barX 22 *tmp488
-    * op mul *tmp490 :drawItemColor.15:col 176
-    * op div *tmp491 *tmp490 2
-    * op add :drawItemColor.15:textX :drawItemColor.15:textEnd *tmp491
+ 1363 op mul *tmp477 1 176
+ 1364 op div *tmp478 176 2
+ 1365 op sub :drawItemColor.15:barLength 214 88
+ 1366 op add :drawItemColor.15:textEnd 48 126
+ 1367 op mul *tmp481 126 :drawPower:power
+ 1368 op div *tmp482 *tmp481 4000
+ 1369 op min :drawItemColor.15:length 126 *tmp482
+ 1370 op mul *tmp484 0 176
+ 1371 op div *tmp485 0 2
+ 1372 op add :drawItemColor.15:iconX 11 0
+ 1373 op mul *tmp487 0 176
+ 1374 op div *tmp488 0 2
+ 1375 op add :drawItemColor.15:barX 22 0
+ 1376 op mul *tmp490 0 176
+ 1377 op div *tmp491 0 2
+ 1378 op add :drawItemColor.15:textX 174 0
  1379 draw col %[white]
-    * op add *tmp493 :drawItemColor.15:y 5
-    * draw image :drawItemColor.15:iconX *tmp493 :drawItemColor.15:item 16 0
-    * draw col :drawItemColor.15:color1
-    * draw rect :drawItemColor.15:barX :drawItemColor.15:y :drawItemColor.15:length 10
-    * draw col :drawItemColor.15:color2
-    * draw lineRect :drawItemColor.15:barX :drawItemColor.15:y :drawItemColor.15:barLength 10
-    * op add *tmp494 :drawItemColor.15:y 5
-    * op add *tmp495 *tmp494 2
-    * set :drawBold.15:x :drawItemColor.15:textX
+ 1380 op add *tmp493 :updateDisplay:y 5
+ 1381 draw image 11 *tmp493 @battery 16 0
+ 1382 draw col %808000FF
+ 1383 draw rect 22 :updateDisplay:y :drawItemColor.15:length 10
+ 1384 draw col %FFFF00FF
+ 1385 draw lineRect 22 :updateDisplay:y 126 10
+ 1386 op add *tmp494 :updateDisplay:y 5
+ 1387 op add *tmp495 *tmp493 2
+ 1388 set :drawBold.15:x 174
  1389 set :drawBold.15:y *tmp495
  1390 set :drawBold.15:alignment @right
-    * set :drawText.44:x :drawBold.15:x
-    * set :drawText.44:y :drawBold.15:y
-    * set :drawText.44:alignment :drawBold.15:alignment
+ 1391 set :drawText.44:x :drawItemColor.15:textX
+ 1392 set :drawText.44:y *tmp495
+ 1393 set :drawText.44:alignment @right
  1394 print *tmp476
  1395 print "%"
-    * draw print :drawText.44:x :drawText.44:y :drawText.44:alignment
+ 1396 draw print :drawBold.15:x :drawBold.15:y :drawBold.15:alignment
  1397 label *label216
-    * op add :drawText.45:x :drawBold.15:x 1
-    * set :drawText.45:y :drawBold.15:y
-    * set :drawText.45:alignment :drawBold.15:alignment
+ 1398 op add :drawText.45:x :drawItemColor.15:textX 1
+ 1399 set :drawText.45:y *tmp495
+ 1400 set :drawText.45:alignment @right
  1401 print *tmp476
  1402 print "%"
-    * draw print :drawText.45:x :drawText.45:y :drawText.45:alignment
+ 1403 draw print :drawText.45:x :drawBold.15:y :drawBold.15:alignment
  1404 label *label217
  1405 label *label215
-    * op add :drawItemColor.15:col :drawItemColor.15:col 1
-    * jump *label218 lessThan :drawItemColor.15:col :drawItemColor.15:columns
-    * set :drawItemColor.15:col 0
-    * op sub :drawItemColor.15:y :drawItemColor.15:y 15
+ 1406 op add :drawItemColor.15:col 0 1
+ 1407 jump *label218 lessThan 1 1
+ 1408 op sub :drawItemColor.15:y :updateDisplay:y 15
  1409 label *label218
  1410 label *label219
  1411 label *label214
-    * set :updateDisplay:y :drawItemColor.15:y
  1412 label *label206
  1413 drawflush display1
  1414 label *label34
 
  1424 set :drawBold.16:x 11
  1425 set :drawBold.16:y 206
  1426 set :drawBold.16:alignment @left
-    * set :drawText.46:x :drawBold.16:x
-    * set :drawText.46:y :drawBold.16:y
-    * set :drawText.46:alignment :drawBold.16:alignment
+ 1427 set :drawText.46:x 11
+ 1428 set :drawText.46:y 206
+ 1429 set :drawText.46:alignment @left
  1430 print "Resources"
-    * draw print :drawText.46:x :drawText.46:y :drawText.46:alignment
+ 1431 draw print :drawBold.16:x :drawBold.16:y :drawBold.16:alignment
  1432 label *label226
-    * op add :drawText.47:x :drawBold.16:x 1
-    * set :drawText.47:y :drawBold.16:y
-    * set :drawText.47:alignment :drawBold.16:alignment
+ 1433 op add :drawText.47:x 11 1
+ 1434 set :drawText.47:y 206
+ 1435 set :drawText.47:alignment @left
  1436 print "Resources"
-    * draw print :drawText.47:x :drawText.47:y :drawText.47:alignment
+ 1437 draw print 12 :drawBold.16:y :drawBold.16:alignment
  1438 label *label227
  1439 label *label225
  1440 draw col %[white]
-    * op sub :displayStorage:y :displayStorage:START 8
+ 1441 op sub :displayStorage:y 190 8
  1442 set :displayStorage:item @copper
  1443 setaddr *tmp506 *label231
  1444 jump *label228 always
 
  1492 label *label242
  1493 read :displayStorage:accumulator bank2 .lastTail
  1494 op add :displayStorage:x 25 .lastTail
-    * op sub :displayStorage:y.1 :displayStorage:START 8
+ 1495 op sub :displayStorage:y.1 190 8
  1496 set :displayStorage:i 0
  1497 label *label243
  1498 jump *label245 greaterThanEq :displayStorage:i 9
 
  1525 set :setBaseMapScale:size 220
  1526 draw reset
  1527 draw translate 90 105
-    * op div *tmp520 :setBaseMapScale:size 15
-    * op div *tmp521 *tmp520 2
-    * op div *tmp522 :setBaseMapScale:size 15
-    * op div *tmp523 *tmp522 2
-    * draw scale *tmp521 *tmp523
+ 1528 op div *tmp520 220 15
+ 1529 op div *tmp521 14.666666666666666 2
+ 1530 op div *tmp522 220 15
+ 1531 op div *tmp523 14.666666666666666 2
+ 1532 draw scale 7.333333333333333 7.333333333333333
  1533 label *label252
  1534 jump *label253 equal .pageSwitched false
  1535 draw image 0 0 @core-shard 6 0
 
  1538 set :drawBold.17:x 90
  1539 set :drawBold.17:y 206
  1540 set :drawBold.17:alignment @center
-    * set :drawText.48:x :drawBold.17:x
-    * set :drawText.48:y :drawBold.17:y
-    * set :drawText.48:alignment :drawBold.17:alignment
+ 1541 set :drawText.48:x 90
+ 1542 set :drawText.48:y 206
+ 1543 set :drawText.48:alignment @center
  1544 print "Base map"
-    * draw print :drawText.48:x :drawText.48:y :drawText.48:alignment
+ 1545 draw print :drawBold.17:x :drawBold.17:y :drawBold.17:alignment
  1546 label *label256
-    * op add :drawText.49:x :drawBold.17:x 1
-    * set :drawText.49:y :drawBold.17:y
-    * set :drawText.49:alignment :drawBold.17:alignment
+ 1547 op add :drawText.49:x 90 1
+ 1548 set :drawText.49:y 206
+ 1549 set :drawText.49:alignment @center
  1550 print "Base map"
-    * draw print :drawText.49:x :drawText.49:y :drawText.49:alignment
+ 1551 draw print 91 :drawBold.17:y :drawBold.17:alignment
  1552 label *label257
  1553 label *label255
  1554 set :setBaseMapScale.1:size 220
  1555 draw reset
  1556 draw translate 90 105
-    * op div *tmp526 :setBaseMapScale.1:size 15
-    * op div *tmp527 *tmp526 2
-    * op div *tmp528 :setBaseMapScale.1:size 15
-    * op div *tmp529 *tmp528 2
-    * draw scale *tmp527 *tmp529
+ 1557 op div *tmp526 220 15
+ 1558 op div *tmp527 14.666666666666666 2
+ 1559 op div *tmp528 220 15
+ 1560 op div *tmp529 14.666666666666666 2
+ 1561 draw scale 7.333333333333333 7.333333333333333
  1562 label *label258
  1563 draw col %[white]
  1564 drawflush display1
 
  1724 set :setBaseMapScale.2:size 220
  1725 draw reset
  1726 draw translate 90 105
-    * op div *tmp537 :setBaseMapScale.2:size 15
-    * op div *tmp538 *tmp537 2
-    * op div *tmp539 :setBaseMapScale.2:size 15
-    * op div *tmp540 *tmp539 2
-    * draw scale *tmp538 *tmp540
+ 1727 op div *tmp537 220 15
+ 1728 op div *tmp538 14.666666666666666 2
+ 1729 op div *tmp539 220 15
+ 1730 op div *tmp540 14.666666666666666 2
+ 1731 draw scale 7.333333333333333 7.333333333333333
  1732 label *label305
  1733 set :displayBaseMap:counter 0
  1734 label *label302
 
  1772 op sub :displayLog:page .page 3
  1773 read :displayLog:logPosition bank1 511
  1774 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp555 :displayLog:records 1
+ 1775 op sub *tmp555 510 :displayLog:logPosition
  1776 op idiv *tmp556 *tmp555 39
  1777 op add *tmp557 *tmp556 1
  1778 op max :displayLog:pages 1 *tmp557
 
  1786 set :drawBold.18:x 4
  1787 set :drawBold.18:y 206
  1788 set :drawBold.18:alignment @left
-    * set :drawText.50:x :drawBold.18:x
-    * set :drawText.50:y :drawBold.18:y
-    * set :drawText.50:alignment :drawBold.18:alignment
+ 1789 set :drawText.50:x 4
+ 1790 set :drawText.50:y 206
+ 1791 set :drawText.50:alignment @left
  1792 print "Build records"
-    * draw print :drawText.50:x :drawText.50:y :drawText.50:alignment
+ 1793 draw print :drawBold.18:x :drawBold.18:y :drawBold.18:alignment
  1794 label *label319
-    * op add :drawText.51:x :drawBold.18:x 1
-    * set :drawText.51:y :drawBold.18:y
-    * set :drawText.51:alignment :drawBold.18:alignment
+ 1795 op add :drawText.51:x 4 1
+ 1796 set :drawText.51:y 206
+ 1797 set :drawText.51:alignment @left
  1798 print "Build records"
-    * draw print :drawText.51:x :drawText.51:y :drawText.51:alignment
+ 1799 draw print 5 :drawBold.18:y :drawBold.18:alignment
  1800 label *label320
  1801 label *label318
-    * op add *tmp566 :displayLog:page 1
+ 1802 op sub *tmp566 .page 2
  1803 print *tmp566
  1804 print "/"
  1805 set :drawText.52:x 172
  1806 set :drawText.52:y 206
  1807 set :drawText.52:alignment @right
  1808 print :displayLog:pages
-    * draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
+ 1809 draw print 172 206 @right
  1810 label *label321
  1811 set .lastRecord :displayLog:start
  1812 label *label316
 
  1817 set *tmp567 :displayLog:stop
  1818 op sub :displayLog:position .lastRecord 1
  1819 label *label323
-    * jump *label325 lessThan :displayLog:position *tmp567
+ 1820 jump *label325 lessThan :displayLog:position :displayLog:stop
  1821 read :displayLog:record bank1 :displayLog:position
  1822 op sub *tmp570 :displayLog:start :displayLog:position
  1823 op sub *tmp571 *tmp570 1
  1824 set :displayRecord:record :displayLog:record
  1825 set :displayRecord:index *tmp571
-    * op idiv :displayRecord:col :displayRecord:index 13
-    * op mod :displayRecord:row :displayRecord:index 13
+ 1826 op idiv :displayRecord:col *tmp571 13
+ 1827 op mod :displayRecord:row *tmp571 13
  1828 op mul *tmp574 58 :displayRecord:col
  1829 op add :displayRecord:x 11 *tmp574
  1830 op mul *tmp576 15 :displayRecord:row
  1831 op sub :displayRecord:y 189 *tmp576
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1832 op mod :displayRecord:id :displayLog:record 1000
  1833 jump *label327 lessThanEq :displayRecord:id @blockCount
  1834 op sub *tmp581 :displayRecord:id @blockCount
  1835 lookup unit *tmp580 *tmp581
 
  1838 lookup block *tmp580 :displayRecord:id
  1839 label *label328
  1840 set :displayRecord:icon *tmp580
-    * op div *tmp584 :displayRecord:record 1000
+ 1841 op div *tmp584 :displayLog:record 1000
  1842 op idiv :displayRecord:t *tmp584 120
  1843 op idiv :displayRecord:m :displayRecord:t 60
  1844 op mod :displayRecord:s :displayRecord:t 60
 
  1851 print :displayRecord:m
  1852 print ":"
  1853 print *tmp590
-    * draw image :displayRecord:x :displayRecord:y :displayRecord:icon 14 0
+ 1854 draw image :displayRecord:x :displayRecord:y *tmp580 14 0
  1855 op add *tmp591 :displayRecord:x 56
-    * op sub *tmp592 *tmp591 12
+ 1856 op add *tmp592 :displayRecord:x 44
  1857 op add *tmp593 :displayRecord:y 2
  1858 set :drawText.53:x *tmp592
  1859 set :drawText.53:y *tmp593
  1860 set :drawText.53:alignment @right
  1861 print :displayRecord:s
-    * draw print :drawText.53:x :drawText.53:y :drawText.53:alignment
+ 1862 draw print *tmp592 *tmp593 @right
  1863 label *label331
  1864 label *label326
  1865 drawflush display1
 
  1943 set :drawBold.19:x 25
  1944 set :drawBold.19:y 71
  1945 set :drawBold.19:alignment @center
-    * set :drawText.54:x :drawBold.19:x
-    * set :drawText.54:y :drawBold.19:y
-    * set :drawText.54:alignment :drawBold.19:alignment
+ 1946 set :drawText.54:x 25
+ 1947 set :drawText.54:y 71
+ 1948 set :drawText.54:alignment @center
  1949 print :drawHeader:m
  1950 print ":"
-    * print :drawHeader:zero
+ 1951 print *tmp613
  1952 print :drawHeader:s
-    * draw print :drawText.54:x :drawText.54:y :drawText.54:alignment
+ 1953 draw print :drawBold.19:x :drawBold.19:y :drawBold.19:alignment
  1954 label *label345
-    * op add :drawText.55:x :drawBold.19:x 1
-    * set :drawText.55:y :drawBold.19:y
-    * set :drawText.55:alignment :drawBold.19:alignment
+ 1955 op add :drawText.55:x 25 1
+ 1956 set :drawText.55:y 71
+ 1957 set :drawText.55:alignment @center
  1958 print :drawHeader:m
  1959 print ":"
-    * print :drawHeader:zero
+ 1960 print *tmp613
  1961 print :drawHeader:s
-    * draw print :drawText.55:x :drawText.55:y :drawText.55:alignment
+ 1962 draw print 26 :drawBold.19:y :drawBold.19:alignment
  1963 label *label346
  1964 label *label344
  1965 draw col %[white]
 
  1970 set :drawBold.20:x 42
  1971 set :drawBold.20:y 261
  1972 set :drawBold.20:alignment @bottom
-    * set :drawText.56:x :drawBold.20:x
-    * set :drawText.56:y :drawBold.20:y
-    * set :drawText.56:alignment :drawBold.20:alignment
+ 1973 set :drawText.56:x 42
+ 1974 set :drawText.56:y 261
+ 1975 set :drawText.56:alignment @bottom
  1976 print "Goal"
-    * draw print :drawText.56:x :drawText.56:y :drawText.56:alignment
+ 1977 draw print :drawBold.20:x :drawBold.20:y :drawBold.20:alignment
  1978 label *label348
-    * op add :drawText.57:x :drawBold.20:x 1
-    * set :drawText.57:y :drawBold.20:y
-    * set :drawText.57:alignment :drawBold.20:alignment
+ 1979 op add :drawText.57:x 42 1
+ 1980 set :drawText.57:y 261
+ 1981 set :drawText.57:alignment @bottom
  1982 print "Goal"
-    * draw print :drawText.57:x :drawText.57:y :drawText.57:alignment
+ 1983 draw print 43 :drawBold.20:y :drawBold.20:alignment
  1984 label *label349
  1985 label *label347
  1986 draw col %[white]
 
  2079 set :drawText.58:y 272
  2080 set :drawText.58:alignment @topRight
  2081 print ")"
-    * draw print :drawText.58:x :drawText.58:y :drawText.58:alignment
+ 2082 draw print 174 272 @topRight
  2083 label *label378
  2084 jump *label379 equal A¨SSJh-container30 null
  2085 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  2086 set :drawHeader:x.1 174
  2087 op log10 *tmp646 :drawHeader:count.1
  2088 op floor :drawHeader:len *tmp646
-    * set :drawText.59:x :drawHeader:x.1
+ 2089 set :drawText.59:x 174
  2090 set :drawText.59:y 255
  2091 set :drawText.59:alignment @topRight
  2092 print "x"
  2093 print :drawHeader:count.1
-    * draw print :drawText.59:x :drawText.59:y :drawText.59:alignment
+ 2094 draw print :drawHeader:x.1 255 @topRight
  2095 label *label381
-    * op sub *tmp648 :drawHeader:x.1 20
+ 2096 op sub *tmp648 174 20
  2097 op mul *tmp649 7 :drawHeader:len
-    * op sub *tmp650 *tmp648 *tmp649
+ 2098 op sub *tmp650 154 *tmp649
  2099 draw image *tmp650 246 @scrap 12 0
  2100 sensor :drawHeader:count.1 A¨SSJh-container30 @sand
  2101 set :drawHeader:x.1 124
  2102 op log10 *tmp652 :drawHeader:count.1
  2103 op floor :drawHeader:len *tmp652
-    * set :drawText.60:x :drawHeader:x.1
+ 2104 set :drawText.60:x 124
  2105 set :drawText.60:y 255
  2106 set :drawText.60:alignment @topRight
  2107 print "x"
  2108 print :drawHeader:count.1
-    * draw print :drawText.60:x :drawText.60:y :drawText.60:alignment
+ 2109 draw print :drawHeader:x.1 255 @topRight
  2110 label *label382
-    * op sub *tmp654 :drawHeader:x.1 20
+ 2111 op sub *tmp654 124 20
  2112 op mul *tmp655 7 :drawHeader:len
-    * op sub *tmp656 *tmp654 *tmp655
+ 2113 op sub *tmp656 104 *tmp655
  2114 draw image *tmp656 246 @sand 12 0
  2115 jump *label380 always
  2116 label *label379
 
  2120 set :drawHeader:x.2 174
  2121 op log10 *tmp660 :drawHeader:count.2
  2122 op floor :drawHeader:len.1 *tmp660
-    * set :drawText.61:x :drawHeader:x.2
+ 2123 set :drawText.61:x 174
  2124 set :drawText.61:y 255
  2125 set :drawText.61:alignment @topRight
  2126 print "x"
  2127 print :drawHeader:count.2
-    * draw print :drawText.61:x :drawText.61:y :drawText.61:alignment
+ 2128 draw print :drawHeader:x.2 255 @topRight
  2129 label *label385
-    * op sub *tmp662 :drawHeader:x.2 20
+ 2130 op sub *tmp662 174 20
  2131 op mul *tmp663 7 :drawHeader:len.1
-    * op sub *tmp664 *tmp662 *tmp663
+ 2132 op sub *tmp664 154 *tmp663
  2133 draw image *tmp664 246 @titanium 12 0
  2134 label *label383
  2135 label *label384
 
  2138 set :drawHeader:x.3 124
  2139 op log10 *tmp667 :drawHeader:count.3
  2140 op floor :drawHeader:len.2 *tmp667
-    * set :drawText.62:x :drawHeader:x.3
+ 2141 set :drawText.62:x 124
  2142 set :drawText.62:y 255
  2143 set :drawText.62:alignment @topRight
  2144 print "x"
  2145 print :drawHeader:count.3
-    * draw print :drawText.62:x :drawText.62:y :drawText.62:alignment
+ 2146 draw print :drawHeader:x.3 255 @topRight
  2147 label *label388
-    * op sub *tmp669 :drawHeader:x.3 20
+ 2148 op sub *tmp669 124 20
  2149 op mul *tmp670 7 :drawHeader:len.2
-    * op sub *tmp671 *tmp669 *tmp670
+ 2150 op sub *tmp671 104 *tmp670
  2151 draw image *tmp671 246 @thorium 12 0
  2152 label *label386
  2153 label *label387
 
  2157 set :drawUnitCount:type @poly
  2158 set :drawUnitCount:count .polys
  2159 jump *label390 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp674 :drawHeader:x.4 20
-    * draw image *tmp674 227 :drawUnitCount:type 12 0
-    * set :drawText.63:x :drawHeader:x.4
+ 2160 op sub *tmp674 174 20
+ 2161 draw image 154 227 @poly 12 0
+ 2162 set :drawText.63:x 174
  2163 set :drawText.63:y 229
  2164 set :drawText.63:alignment @right
  2165 print "x"
  2166 print :drawUnitCount:count
-    * draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
+ 2167 draw print :drawHeader:x.4 229 @right
  2168 label *label392
-    * op sub :drawHeader:x.4 :drawHeader:x.4 30
+ 2169 op sub :drawHeader:x.4 174 30
  2170 label *label390
  2171 label *label391
  2172 label *label389
 
  2174 set :drawUnitCount.1:count .monos
  2175 jump *label394 lessThanEq :drawUnitCount.1:count 0
  2176 op sub *tmp677 :drawHeader:x.4 20
-    * draw image *tmp677 227 :drawUnitCount.1:type 12 0
+ 2177 draw image *tmp677 227 @mono 12 0
  2178 set :drawText.64:x :drawHeader:x.4
  2179 set :drawText.64:y 229
  2180 set :drawText.64:alignment @right
  2181 print "x"
  2182 print :drawUnitCount.1:count
-    * draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
+ 2183 draw print :drawHeader:x.4 229 @right
  2184 label *label396
  2185 op sub :drawHeader:x.4 :drawHeader:x.4 30
  2186 label *label394
 
  2190 set :drawUnitCount.2:count .flares
  2191 jump *label398 lessThanEq :drawUnitCount.2:count 0
  2192 op sub *tmp680 :drawHeader:x.4 20
-    * draw image *tmp680 227 :drawUnitCount.2:type 12 0
+ 2193 draw image *tmp680 227 @flare 12 0
  2194 set :drawText.65:x :drawHeader:x.4
  2195 set :drawText.65:y 229
  2196 set :drawText.65:alignment @right
  2197 print "x"
  2198 print :drawUnitCount.2:count
-    * draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
+ 2199 draw print :drawHeader:x.4 229 @right
  2200 label *label400
-    * op sub :drawHeader:x.4 :drawHeader:x.4 30
  2201 label *label398
  2202 label *label399
  2203 label *label397
 
  2207 end
  2208 label *label8
  2209 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :unpackCfg2:cfg
+ 2210 set :unpackCfg:cfg :drawBlock:cfg
  2211 set :unpackCfg:index 1
-    * set *tmp681 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp682 :unpackCfg:cfg *tmp681
+ 2212 set *tmp681 1
+ 2213 op add :unpackCfg:index 1 1
+ 2214 read *tmp682 :unpackCfg2:cfg *tmp681
  2215 op sub *tmp683 *tmp682 74
  2216 lookup block :unpackCfg:type *tmp683
-    * set *tmp685 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp686 :unpackCfg:cfg *tmp685
+ 2217 set *tmp685 2
+ 2218 op add :unpackCfg:index 2 1
+ 2219 read *tmp686 :unpackCfg2:cfg *tmp685
  2220 op sub *tmp687 *tmp686 74
  2221 op div :unpackCfg:x *tmp687 2
-    * set *tmp689 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp690 :unpackCfg:cfg *tmp689
+ 2222 set *tmp689 3
+ 2223 op add :unpackCfg:index 3 1
+ 2224 read *tmp690 :unpackCfg2:cfg *tmp689
  2225 op sub *tmp691 *tmp690 74
  2226 op div :unpackCfg:y *tmp691 2
-    * set *tmp693 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp694 :unpackCfg:cfg *tmp693
+ 2227 set *tmp693 4
+ 2228 op add :unpackCfg:index 4 1
+ 2229 read *tmp694 :unpackCfg2:cfg *tmp693
  2230 op sub :unpackCfg:rotation *tmp694 74
-    * set *tmp696 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp697 :unpackCfg:cfg *tmp696
+ 2231 set *tmp696 5
+ 2232 op add :unpackCfg:index 5 1
+ 2233 read *tmp697 :unpackCfg2:cfg *tmp696
  2234 op sub :unpackCfg:ind *tmp697 74
  2235 sensor :unpackCfg:size :unpackCfg:type @size
  2236 label *label403
 
  2241 set :unpackCfg2:size :unpackCfg:size
  2242 set :unpackCfg2:index :unpackCfg:ind
  2243 label *label402
-    * set :drawBlock:type :unpackCfg2:type
-    * set :drawBlock:x :unpackCfg2:x
-    * set :drawBlock:y :unpackCfg2:y
-    * set :drawBlock:rotation :unpackCfg2:rotation
-    * set :drawBlock:size :unpackCfg2:size
-    * set :drawBlock:index :unpackCfg2:index
-    * jump *label404 notEqual :drawBlock:index .nextBuildIndex
+ 2244 set :drawBlock:type :unpackCfg:type
+ 2245 set :drawBlock:x :unpackCfg:x
+ 2246 set :drawBlock:y :unpackCfg:y
+ 2247 set :drawBlock:rotation :unpackCfg:rotation
+ 2248 set :drawBlock:size :unpackCfg:size
+ 2249 set :drawBlock:index :unpackCfg:ind
+ 2250 jump *label404 notEqual :unpackCfg2:index .nextBuildIndex
  2251 draw col %80ffffff
  2252 jump *label405 always
  2253 label *label404
-    * op shl *tmp709 1 :drawBlock:index
+ 2254 op shl *tmp709 1 :unpackCfg2:index
  2255 op and :drawBlock:built .blocksBuilt *tmp709
  2256 op add *tmp711 :drawBlock:built .pageSwitched
  2257 jump *label406 notEqual *tmp711 0
 
  2266 label *label409
  2267 draw col *tmp714
  2268 label *label405
-    * op mul *tmp715 2 :drawBlock:x
-    * op mul *tmp716 2 :drawBlock:y
-    * op mul *tmp717 2 :drawBlock:size
-    * op mul *tmp718 90 :drawBlock:rotation
-    * draw image *tmp715 *tmp716 :drawBlock:type *tmp717 *tmp718
+ 2269 op mul *tmp715 2 :unpackCfg2:x
+ 2270 op mul *tmp716 2 :unpackCfg2:y
+ 2271 op mul *tmp717 2 :unpackCfg2:size
+ 2272 op mul *tmp718 90 :unpackCfg2:rotation
+ 2273 draw image *tmp715 *tmp716 :unpackCfg2:type *tmp717 *tmp718
  2274 label *label401
  2275 return :drawBlock*retaddr
  2276 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-337 instructions):
 
    36 op div *tmp54 .animation 30
    37 op min *tmp55 *tmp54 1
    38 op max :animate:ratio 0 *tmp55
-    * set :lerp:from 42
-    * set :lerp:to 90
-    * set :lerp:ratio :animate:ratio
    39 op sub *tmp58 1 :animate:ratio
    40 op mul *tmp59 *tmp58 42
    41 op mul *tmp60 :animate:ratio 90
    42 op add *tmp57 *tmp59 *tmp60
    43 label *label28
-    * set :animate:x *tmp57
-    * set :lerp.1:from 237
-    * set :lerp.1:to 120
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :animate:ratio
    44 op mul *tmp64 *tmp58 237
    45 op mul *tmp65 :animate:ratio 120
    46 op add *tmp62 *tmp64 *tmp65
    47 label *label29
-    * set :animate:y *tmp62
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :animate:ratio
    48 op mul *tmp69 *tmp58 32
    49 op mul *tmp70 :animate:ratio 168
    50 op add *tmp67 *tmp69 *tmp70
    51 label *label30
-    * set :animate:size *tmp67
    52 draw image *tmp57 *tmp62 @mega *tmp67 0
    53 jump *label31 notEqual :animate:ratio 1
    54 setaddr :drawHeader*retaddr *label33 (h:*label33)
 
    73 jump *label37 equal *tmp77 false
    74 set :drawTitleRow:y 201
    75 set :drawTitleRow:alignment @bottomLeft
-    * set :drawText:x 22
-    * set :drawText:y :updateDisplay:y
-    * set :drawText:alignment @bottomLeft
+   76 set :drawText:y 201
    77 print "Locating ore..."
-    * draw print 22 :drawTitleRow:y :drawTitleRow:alignment
+   78 draw print 22 201 @bottomLeft
    79 label *label40
-    * set :drawText.1:x 23
-    * set :drawText.1:y :updateDisplay:y
-    * set :drawText.1:alignment @bottomLeft
+   80 set :drawText.1:y 201
    81 print "Locating ore..."
-    * draw print 23 :drawTitleRow:y :drawTitleRow:alignment
+   82 draw print 23 201 @bottomLeft
    83 label *label41
-    * op sub :drawTitleRow:y :updateDisplay:y 15
+   84 op sub :drawTitleRow:y 201 15
    85 label *label39
-    * set :updateDisplay:y :drawTitleRow:y
+   86 set :updateDisplay:y 186
    87 set :drawItem:col 0
-    * set :drawItem:y :drawTitleRow:y
+   88 set :drawItem:y 186
    89 set :drawItem:columns 1
    90 set :drawItem:item .nextBlock
    91 read :drawItem:current processor3 ".mapProgress"
    92 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:color1 %008000FF
-    * set :drawItemColor:color2 %00FF00FF
    93 set :drawItemColor:col 0
-    * set :drawItemColor:y :updateDisplay:y
+   94 set :drawItemColor:y :drawTitleRow:y
    95 set :drawItemColor:columns 1
-    * set :drawItemColor:item :drawItem:item
-    * set :drawItemColor:current :drawItem:current
-    * set :drawItemColor:target :drawItem:target
-    * op mul *tmp79 :drawItem:columns 176
-    * op mul *tmp80 :drawItemColor:columns 88
-    * op sub :drawItemColor:barLength 214 *tmp80
-    * op add :drawItemColor:textEnd 48 :drawItemColor:barLength
-    * op mul *tmp83 :drawItemColor:barLength :drawItem:current
+   96 op mul *tmp79 1 176
+   97 op mul *tmp80 1 88
+   98 op sub :drawItemColor:barLength 214 88
+   99 op add :drawItemColor:textEnd 48 126
+  100 op mul *tmp83 126 :drawItem:current
   101 op div *tmp84 *tmp83 :drawItem:target
-    * op min :drawItemColor:length :drawItemColor:barLength *tmp84
-    * op mul *tmp86 :drawItem:col 176
-    * op mul *tmp87 :drawItemColor:col 88
-    * op add :drawItemColor:iconX 11 *tmp87
-    * op mul *tmp89 :drawItem:col 176
-    * op div *tmp90 *tmp86 2
-    * op add :drawItemColor:barX 22 *tmp87
-    * op mul *tmp92 :drawItem:col 176
-    * op div *tmp93 *tmp86 2
-    * op add :drawItemColor:textX :drawItemColor:textEnd *tmp87
+  102 op min :drawItemColor:length 126 *tmp84
+  103 op mul *tmp86 0 176
+  104 op mul *tmp87 0 88
+  105 op add :drawItemColor:iconX 11 0
+  106 op mul *tmp89 0 176
+  107 op div *tmp90 0 2
+  108 op add :drawItemColor:barX 22 0
+  109 op mul *tmp92 0 176
+  110 op div *tmp93 0 2
+  111 op add :drawItemColor:textX 174 0
   112 draw col %[white]
-    * op add *tmp95 :drawItem:y 5
-    * draw image :drawItemColor:iconX *tmp95 :drawItem:item 16 0
+  113 op add *tmp95 :drawTitleRow:y 5
+  114 draw image 11 *tmp95 :drawItem:item 16 0
   115 draw col %008000FF
-    * draw rect :drawItemColor:barX :drawItem:y :drawItemColor:length 10
+  116 draw rect 22 :drawTitleRow:y :drawItemColor:length 10
   117 draw col %00FF00FF
-    * draw lineRect :drawItemColor:barX :drawItem:y :drawItemColor:barLength 10
-    * op add *tmp96 :drawItem:y 5
-    * op add *tmp97 *tmp95 2
-    * set :drawBold:x :drawItemColor:textX
+  118 draw lineRect 22 :drawTitleRow:y 126 10
+  119 op add *tmp96 :drawTitleRow:y 5
+  120 op add *tmp97 :drawItem:y 7
+  121 set :drawBold:x 174
   122 set :drawBold:y *tmp97
   123 set :drawBold:alignment @right
-    * set :drawText.2:x :drawItemColor:textX
-    * set :drawText.2:y *tmp97
-    * set :drawText.2:alignment @right
+  124 set :drawText.2:x 174
   125 print "x"
   126 read *tmp98 processor3 ".mapSpots"
   127 print *tmp98
-    * draw print :drawBold:x :drawBold:y :drawBold:alignment
+  128 draw print :drawItemColor:textX *tmp97 @right
   129 label *label45
-    * op add :drawText.3:x :drawItemColor:textX 1
-    * set :drawText.3:y *tmp97
-    * set :drawText.3:alignment @right
+  130 op add :drawText.3:x 174 1
   131 print "x"
   132 read *tmp100 processor3 ".mapSpots"
   133 print *tmp100
-    * draw print :drawText.3:x :drawBold:y :drawBold:alignment
+  134 draw print 175 *tmp97 @right
   135 label *label46
   136 label *label44
-    * op add :drawItemColor:col :drawItem:col 1
-    * jump *label47 lessThan :drawItemColor:col :drawItem:columns
-    * set :drawItemColor:col 0
-    * op sub :drawItemColor:y :drawItem:y 15
+  137 op add :drawItemColor:col 0 1
+  138 jump *label47 lessThan 1 1
+  139 op sub :drawItemColor:y :drawTitleRow:y 15
   140 label *label47
   141 label *label48
   142 label *label43
   143 set :drawItem:y :drawItemColor:y
   144 label *label42
-    * set :updateDisplay:y :drawItemColor:y
-    * op sub :updateDisplay:y :drawItem:y 35
+  145 op sub :updateDisplay:y :drawItemColor:y 35
   146 jump *label38 always
   147 label *label37
   148 jump *label49 equal .nextBlock null
   149 set :drawMaterials:count .totalTargets
   150 set :drawTitleRow.1:y 201
   151 set :drawTitleRow.1:alignment @bottomLeft
-    * set :drawText.4:x 22
-    * set :drawText.4:y :updateDisplay:y
-    * set :drawText.4:alignment @bottomLeft
+  152 set :drawText.4:y 201
   153 print "Materials"
-    * draw print 22 :drawTitleRow.1:y :drawTitleRow.1:alignment
+  154 draw print 22 201 @bottomLeft
   155 label *label52
-    * set :drawText.5:x 23
-    * set :drawText.5:y :updateDisplay:y
-    * set :drawText.5:alignment @bottomLeft
+  156 set :drawText.5:y 201
   157 print "Materials"
-    * draw print 23 :drawTitleRow.1:y :drawTitleRow.1:alignment
+  158 draw print 23 201 @bottomLeft
   159 label *label53
-    * op sub :drawTitleRow.1:y :updateDisplay:y 15
+  160 op sub :drawTitleRow.1:y 201 15
   161 label *label51
-    * set :updateDisplay:y :drawTitleRow.1:y
+  162 set :updateDisplay:y 186
   163 set :drawMaterials:columns 1
   164 jump *label54 equal :drawMaterials:count false
   165 set :drawMaterials:item @copper
 
   204 set :drawItem.1:item :drawMaterials:item
   205 set :drawItem.1:current *tmp110
   206 set :drawItem.1:target :drawMaterials:target
-    * set :drawItemColor.1:color1 %008000FF
-    * set :drawItemColor.1:color2 %00FF00FF
   207 set :drawItemColor.1:col :drawMaterials:col
   208 set :drawItemColor.1:y :updateDisplay:y
-    * set :drawItemColor.1:columns :drawMaterials:columns
-    * set :drawItemColor.1:item :drawMaterials:item
-    * set :drawItemColor.1:current *tmp110
-    * set :drawItemColor.1:target :drawMaterials:target
-    * op mul *tmp111 :drawItem.1:columns 176
-    * op mul *tmp112 :drawItemColor.1:columns 88
+  209 set :drawItemColor.1:columns 1
+  210 op mul *tmp111 1 176
+  211 op mul *tmp112 :drawMaterials:columns 88
   212 op sub :drawItemColor.1:barLength 214 *tmp112
   213 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength :drawItem.1:current
-    * op div *tmp116 *tmp115 :drawItem.1:target
+  214 op mul *tmp115 :drawItemColor.1:barLength *tmp110
+  215 op div *tmp116 *tmp115 :drawMaterials:target
   216 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawItem.1:col 176
-    * op mul *tmp119 :drawItemColor.1:col 88
+  217 op mul *tmp118 :drawMaterials:col 176
+  218 op mul *tmp119 :drawMaterials:col 88
   219 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawItem.1:col 176
-    * op div *tmp122 *tmp118 2
+  220 op mul *tmp121 :drawMaterials:col 176
+  221 op mul *tmp122 :drawItem.1:col 88
   222 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp124 :drawItem.1:col 176
-    * op div *tmp125 *tmp118 2
+  223 op mul *tmp124 :drawMaterials:col 176
+  224 op mul *tmp125 :drawItem.1:col 88
   225 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
   226 draw col %[white]
-    * op add *tmp127 :drawItem.1:y 5
-    * draw image :drawItemColor.1:iconX *tmp127 :drawItem.1:item 16 0
+  227 op add *tmp127 :updateDisplay:y 5
+  228 draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0
   229 draw col %008000FF
-    * draw rect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:length 10
+  230 draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10
   231 draw col %00FF00FF
-    * draw lineRect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :drawItem.1:y 5
-    * op add *tmp129 *tmp127 2
+  232 draw lineRect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:barLength 10
+  233 op add *tmp128 :updateDisplay:y 5
+  234 op add *tmp129 :drawItem.1:y 7
   235 set :drawBold.1:x :drawItemColor.1:textX
   236 set :drawBold.1:y *tmp129
   237 set :drawBold.1:alignment @right
-    * set :drawText.6:x :drawItemColor.1:textX
-    * set :drawText.6:y *tmp129
-    * set :drawText.6:alignment @right
   238 print :drawMaterials:target
-    * draw print :drawBold.1:x :drawBold.1:y :drawBold.1:alignment
+  239 draw print :drawItemColor.1:textX *tmp129 @right
   240 label *label71
   241 op add :drawText.7:x :drawItemColor.1:textX 1
-    * set :drawText.7:y *tmp129
-    * set :drawText.7:alignment @right
   242 print :drawMaterials:target
-    * draw print :drawText.7:x :drawBold.1:y :drawBold.1:alignment
+  243 draw print :drawText.7:x *tmp129 @right
   244 label *label72
   245 label *label70
-    * op add :drawItemColor.1:col :drawItem.1:col 1
-    * jump *label73 lessThan :drawItemColor.1:col :drawItem.1:columns
+  246 op add :drawItemColor.1:col :drawMaterials:col 1
+  247 jump *label73 lessThan :drawItemColor.1:col 1
   248 set :drawItemColor.1:col 0
-    * op sub :drawItemColor.1:y :drawItem.1:y 15
+  249 op sub :drawItemColor.1:y :updateDisplay:y 15
   250 label *label73
   251 label *label74
   252 label *label69
-    * set :drawItem.1:col :drawItemColor.1:col
-    * set :drawItem.1:y :drawItemColor.1:y
   253 label *label68
   254 set :drawMaterials:col :drawItemColor.1:col
   255 set :updateDisplay:y :drawItemColor.1:y
 
   284 draw col %[white]
   285 set :drawTitleRow.2:y :updateDisplay:y
   286 set :drawTitleRow.2:alignment @bottomLeft
-    * set :drawText.8:x 22
-    * set :drawText.8:y :updateDisplay:y
-    * set :drawText.8:alignment @bottomLeft
   287 print "Air Factory"
-    * draw print 22 :drawTitleRow.2:y :drawTitleRow.2:alignment
+  288 draw print 22 :updateDisplay:y @bottomLeft
   289 label *label83
-    * set :drawText.9:x 23
-    * set :drawText.9:y :updateDisplay:y
-    * set :drawText.9:alignment @bottomLeft
   290 print "Air Factory"
-    * draw print 23 :drawTitleRow.2:y :drawTitleRow.2:alignment
+  291 draw print 23 :updateDisplay:y @bottomLeft
   292 label *label84
   293 op sub :drawTitleRow.2:y :updateDisplay:y 15
   294 label *label82
 
   303 set :drawItem.2:item @silicon
   304 set :drawItem.2:current *tmp146
   305 set :drawItem.2:target 15
-    * set :drawItemColor.2:color1 %008000FF
-    * set :drawItemColor.2:color2 %00FF00FF
   306 set :drawItemColor.2:col 0
-    * set :drawItemColor.2:y :updateDisplay:y
+  307 set :drawItemColor.2:y :drawTitleRow.2:y
   308 set :drawItemColor.2:columns 1
-    * set :drawItemColor.2:item @silicon
-    * set :drawItemColor.2:current *tmp146
-    * set :drawItemColor.2:target 15
-    * op mul *tmp147 :drawItem.2:columns 176
-    * op mul *tmp148 :drawItemColor.2:columns 88
-    * op sub :drawItemColor.2:barLength 214 *tmp148
-    * op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
-    * op mul *tmp151 :drawItemColor.2:barLength :drawItem.2:current
-    * op div *tmp152 *tmp151 :drawItem.2:target
-    * op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
-    * op mul *tmp154 :drawItem.2:col 176
-    * op mul *tmp155 :drawItemColor.2:col 88
-    * op add :drawItemColor.2:iconX 11 *tmp155
-    * op mul *tmp157 :drawItem.2:col 176
-    * op div *tmp158 *tmp154 2
-    * op add :drawItemColor.2:barX 22 *tmp155
-    * op mul *tmp160 :drawItem.2:col 176
-    * op div *tmp161 *tmp154 2
-    * op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp155
+  309 op mul *tmp147 1 176
+  310 op mul *tmp148 1 88
+  311 op sub :drawItemColor.2:barLength 214 88
+  312 op add :drawItemColor.2:textEnd 48 126
+  313 op mul *tmp151 126 *tmp146
+  314 op div *tmp152 *tmp151 15
+  315 op min :drawItemColor.2:length 126 *tmp152
+  316 op mul *tmp154 0 176
+  317 op mul *tmp155 0 88
+  318 op add :drawItemColor.2:iconX 11 0
+  319 op mul *tmp157 0 176
+  320 op div *tmp158 0 2
+  321 op add :drawItemColor.2:barX 22 0
+  322 op mul *tmp160 0 176
+  323 op div *tmp161 0 2
+  324 op add :drawItemColor.2:textX 174 0
   325 draw col %[white]
-    * op add *tmp163 :drawItem.2:y 5
-    * draw image :drawItemColor.2:iconX *tmp163 :drawItem.2:item 16 0
+  326 op add *tmp163 :drawTitleRow.2:y 5
+  327 draw image 11 *tmp163 @silicon 16 0
   328 draw col %008000FF
-    * draw rect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:length 10
+  329 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   330 draw col %00FF00FF
-    * draw lineRect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:barLength 10
-    * op add *tmp164 :drawItem.2:y 5
-    * op add *tmp165 *tmp163 2
-    * set :drawBold.2:x :drawItemColor.2:textX
+  331 draw lineRect 22 :drawTitleRow.2:y 126 10
+  332 op add *tmp164 :drawTitleRow.2:y 5
+  333 op add *tmp165 :drawItem.2:y 7
+  334 set :drawBold.2:x 174
   335 set :drawBold.2:y *tmp165
   336 set :drawBold.2:alignment @right
-    * set :drawText.10:x :drawItemColor.2:textX
-    * set :drawText.10:y *tmp165
-    * set :drawText.10:alignment @right
+  337 set :drawText.10:x 174
   338 print 15
-    * draw print :drawBold.2:x :drawBold.2:y :drawBold.2:alignment
+  339 draw print :drawItemColor.2:textX *tmp165 @right
   340 label *label92
-    * op add :drawText.11:x :drawItemColor.2:textX 1
-    * set :drawText.11:y *tmp165
-    * set :drawText.11:alignment @right
+  341 op add :drawText.11:x 174 1
   342 print 15
-    * draw print :drawText.11:x :drawBold.2:y :drawBold.2:alignment
+  343 draw print 175 *tmp165 @right
   344 label *label93
   345 label *label91
-    * op add :drawItemColor.2:col :drawItem.2:col 1
-    * jump *label94 lessThan :drawItemColor.2:col :drawItem.2:columns
-    * set :drawItemColor.2:col 0
-    * op sub :drawItemColor.2:y :drawItem.2:y 15
+  346 op add :drawItemColor.2:col 0 1
+  347 jump *label94 lessThan 1 1
+  348 op sub :drawItemColor.2:y :drawTitleRow.2:y 15
   349 label *label94
   350 label *label95
   351 label *label90
   352 set :drawItem.2:y :drawItemColor.2:y
   353 label *label89
-    * set :updateDisplay:y :drawItemColor.2:y
-    * op sub :updateDisplay:y :drawItem.2:y 15
+  354 op sub :updateDisplay:y :drawItemColor.2:y 15
   355 jump *label88 always
   356 label *label87
   357 sensor *tmp169 A¾BFLW-air-factory13 @lead
 
   361 set :drawItem.3:item @lead
   362 set :drawItem.3:current *tmp169
   363 set :drawItem.3:target 15
-    * set :drawItemColor.3:color1 %008000FF
-    * set :drawItemColor.3:color2 %00FF00FF
   364 set :drawItemColor.3:col 0
-    * set :drawItemColor.3:y :updateDisplay:y
+  365 set :drawItemColor.3:y :drawTitleRow.2:y
   366 set :drawItemColor.3:columns 1
-    * set :drawItemColor.3:item @lead
-    * set :drawItemColor.3:current *tmp169
-    * set :drawItemColor.3:target 15
-    * op mul *tmp170 :drawItem.3:columns 176
-    * op mul *tmp171 :drawItemColor.3:columns 88
-    * op sub :drawItemColor.3:barLength 214 *tmp171
-    * op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
-    * op mul *tmp174 :drawItemColor.3:barLength :drawItem.3:current
-    * op div *tmp175 *tmp174 :drawItem.3:target
-    * op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
-    * op mul *tmp177 :drawItem.3:col 176
-    * op mul *tmp178 :drawItemColor.3:col 88
-    * op add :drawItemColor.3:iconX 11 *tmp178
-    * op mul *tmp180 :drawItem.3:col 176
-    * op div *tmp181 *tmp177 2
-    * op add :drawItemColor.3:barX 22 *tmp178
-    * op mul *tmp183 :drawItem.3:col 176
-    * op div *tmp184 *tmp177 2
-    * op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp178
+  367 op mul *tmp170 1 176
+  368 op mul *tmp171 1 88
+  369 op sub :drawItemColor.3:barLength 214 88
+  370 op add :drawItemColor.3:textEnd 48 126
+  371 op mul *tmp174 126 *tmp169
+  372 op div *tmp175 *tmp174 15
+  373 op min :drawItemColor.3:length 126 *tmp175
+  374 op mul *tmp177 0 176
+  375 op mul *tmp178 0 88
+  376 op add :drawItemColor.3:iconX 11 0
+  377 op mul *tmp180 0 176
+  378 op div *tmp181 0 2
+  379 op add :drawItemColor.3:barX 22 0
+  380 op mul *tmp183 0 176
+  381 op div *tmp184 0 2
+  382 op add :drawItemColor.3:textX 174 0
   383 draw col %[white]
-    * op add *tmp186 :drawItem.3:y 5
-    * draw image :drawItemColor.3:iconX *tmp186 :drawItem.3:item 16 0
+  384 op add *tmp186 :drawTitleRow.2:y 5
+  385 draw image 11 *tmp186 @lead 16 0
   386 draw col %008000FF
-    * draw rect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:length 10
+  387 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   388 draw col %00FF00FF
-    * draw lineRect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:barLength 10
-    * op add *tmp187 :drawItem.3:y 5
-    * op add *tmp188 *tmp186 2
-    * set :drawBold.3:x :drawItemColor.3:textX
+  389 draw lineRect 22 :drawTitleRow.2:y 126 10
+  390 op add *tmp187 :drawTitleRow.2:y 5
+  391 op add *tmp188 :drawItem.3:y 7
+  392 set :drawBold.3:x 174
   393 set :drawBold.3:y *tmp188
   394 set :drawBold.3:alignment @right
-    * set :drawText.12:x :drawItemColor.3:textX
-    * set :drawText.12:y *tmp188
-    * set :drawText.12:alignment @right
+  395 set :drawText.12:x 174
   396 print 15
-    * draw print :drawBold.3:x :drawBold.3:y :drawBold.3:alignment
+  397 draw print :drawItemColor.3:textX *tmp188 @right
   398 label *label99
-    * op add :drawText.13:x :drawItemColor.3:textX 1
-    * set :drawText.13:y *tmp188
-    * set :drawText.13:alignment @right
+  399 op add :drawText.13:x 174 1
   400 print 15
-    * draw print :drawText.13:x :drawBold.3:y :drawBold.3:alignment
+  401 draw print 175 *tmp188 @right
   402 label *label100
   403 label *label98
-    * op add :drawItemColor.3:col :drawItem.3:col 1
-    * jump *label101 lessThan :drawItemColor.3:col :drawItem.3:columns
-    * set :drawItemColor.3:col 0
-    * op sub :drawItemColor.3:y :drawItem.3:y 15
+  404 op add :drawItemColor.3:col 0 1
+  405 jump *label101 lessThan 1 1
+  406 op sub :drawItemColor.3:y :drawTitleRow.2:y 15
   407 label *label101
   408 label *label102
   409 label *label97
 
   412 set :updateDisplay:y :drawItemColor.3:y
   413 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   414 set :drawItem.4:col 0
-    * set :drawItem.4:y :drawItem.3:y
+  415 set :drawItem.4:y :drawItemColor.3:y
   416 set :drawItem.4:columns 1
   417 set :drawItem.4:item @silicon
   418 set :drawItem.4:current *tmp192
   419 set :drawItem.4:target 30
-    * set :drawItemColor.4:color1 %008000FF
-    * set :drawItemColor.4:color2 %00FF00FF
   420 set :drawItemColor.4:col 0
-    * set :drawItemColor.4:y :updateDisplay:y
+  421 set :drawItemColor.4:y :drawItemColor.3:y
   422 set :drawItemColor.4:columns 1
-    * set :drawItemColor.4:item @silicon
-    * set :drawItemColor.4:current *tmp192
-    * set :drawItemColor.4:target 30
-    * op mul *tmp193 :drawItem.4:columns 176
-    * op mul *tmp194 :drawItemColor.4:columns 88
-    * op sub :drawItemColor.4:barLength 214 *tmp194
-    * op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
-    * op mul *tmp197 :drawItemColor.4:barLength :drawItem.4:current
-    * op div *tmp198 *tmp197 :drawItem.4:target
-    * op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
-    * op mul *tmp200 :drawItem.4:col 176
-    * op mul *tmp201 :drawItemColor.4:col 88
-    * op add :drawItemColor.4:iconX 11 *tmp201
-    * op mul *tmp203 :drawItem.4:col 176
-    * op div *tmp204 *tmp200 2
-    * op add :drawItemColor.4:barX 22 *tmp201
-    * op mul *tmp206 :drawItem.4:col 176
-    * op div *tmp207 *tmp200 2
-    * op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp201
+  423 op mul *tmp193 1 176
+  424 op mul *tmp194 1 88
+  425 op sub :drawItemColor.4:barLength 214 88
+  426 op add :drawItemColor.4:textEnd 48 126
+  427 op mul *tmp197 126 *tmp192
+  428 op div *tmp198 *tmp197 30
+  429 op min :drawItemColor.4:length 126 *tmp198
+  430 op mul *tmp200 0 176
+  431 op mul *tmp201 0 88
+  432 op add :drawItemColor.4:iconX 11 0
+  433 op mul *tmp203 0 176
+  434 op div *tmp204 0 2
+  435 op add :drawItemColor.4:barX 22 0
+  436 op mul *tmp206 0 176
+  437 op div *tmp207 0 2
+  438 op add :drawItemColor.4:textX 174 0
   439 draw col %[white]
-    * op add *tmp209 :drawItem.4:y 5
-    * draw image :drawItemColor.4:iconX *tmp209 :drawItem.4:item 16 0
+  440 op add *tmp209 :drawItem.3:y 5
+  441 draw image 11 *tmp209 @silicon 16 0
   442 draw col %008000FF
-    * draw rect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:length 10
+  443 draw rect 22 :drawItem.3:y :drawItemColor.4:length 10
   444 draw col %00FF00FF
-    * draw lineRect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:barLength 10
-    * op add *tmp210 :drawItem.4:y 5
-    * op add *tmp211 *tmp209 2
-    * set :drawBold.4:x :drawItemColor.4:textX
+  445 draw lineRect 22 :drawItem.3:y 126 10
+  446 op add *tmp210 :drawItem.3:y 5
+  447 op add *tmp211 :drawItem.4:y 7
+  448 set :drawBold.4:x 174
   449 set :drawBold.4:y *tmp211
   450 set :drawBold.4:alignment @right
-    * set :drawText.14:x :drawItemColor.4:textX
-    * set :drawText.14:y *tmp211
-    * set :drawText.14:alignment @right
+  451 set :drawText.14:x 174
   452 print 30
-    * draw print :drawBold.4:x :drawBold.4:y :drawBold.4:alignment
+  453 draw print :drawItemColor.4:textX *tmp211 @right
   454 label *label106
-    * op add :drawText.15:x :drawItemColor.4:textX 1
-    * set :drawText.15:y *tmp211
-    * set :drawText.15:alignment @right
+  455 op add :drawText.15:x 174 1
   456 print 30
-    * draw print :drawText.15:x :drawBold.4:y :drawBold.4:alignment
+  457 draw print 175 *tmp211 @right
   458 label *label107
   459 label *label105
-    * op add :drawItemColor.4:col :drawItem.4:col 1
-    * jump *label108 lessThan :drawItemColor.4:col :drawItem.4:columns
-    * set :drawItemColor.4:col 0
-    * op sub :drawItemColor.4:y :drawItem.4:y 15
+  460 op add :drawItemColor.4:col 0 1
+  461 jump *label108 lessThan 1 1
+  462 op sub :drawItemColor.4:y :drawItem.3:y 15
   463 label *label108
   464 label *label109
   465 label *label104
-    * set :drawItem.4:y :drawItemColor.4:y
   466 label *label103
   467 set :updateDisplay:y :drawItemColor.4:y
   468 label *label88
 
   475 set :drawItem.5:item .nextFactory
   476 set :drawItem.5:current :drawAirFactory:progress
   477 set :drawItem.5:target 1
-    * set :drawItemColor.5:color1 %008000FF
-    * set :drawItemColor.5:color2 %00FF00FF
   478 set :drawItemColor.5:col 0
-    * set :drawItemColor.5:y :updateDisplay:y
+  479 set :drawItemColor.5:y :drawTitleRow.2:y
   480 set :drawItemColor.5:columns 1
-    * set :drawItemColor.5:item :drawItem.5:item
-    * set :drawItemColor.5:current :drawAirFactory:progress
-    * set :drawItemColor.5:target 1
-    * op mul *tmp217 :drawItem.5:columns 176
-    * op mul *tmp218 :drawItemColor.5:columns 88
-    * op sub :drawItemColor.5:barLength 214 *tmp218
-    * op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
-    * op mul *tmp221 :drawItemColor.5:barLength :drawItem.5:current
-    * op div *tmp222 *tmp221 :drawItem.5:target
-    * op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
-    * op mul *tmp224 :drawItem.5:col 176
-    * op mul *tmp225 :drawItemColor.5:col 88
-    * op add :drawItemColor.5:iconX 11 *tmp225
-    * op mul *tmp227 :drawItem.5:col 176
-    * op div *tmp228 *tmp224 2
-    * op add :drawItemColor.5:barX 22 *tmp225
-    * op mul *tmp230 :drawItem.5:col 176
-    * op div *tmp231 *tmp224 2
-    * op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp225
+  481 op mul *tmp217 1 176
+  482 op mul *tmp218 1 88
+  483 op sub :drawItemColor.5:barLength 214 88
+  484 op add :drawItemColor.5:textEnd 48 126
+  485 op mul *tmp221 126 :drawAirFactory:progress
+  486 op div *tmp222 *tmp221 1
+  487 op min :drawItemColor.5:length 126 *tmp222
+  488 op mul *tmp224 0 176
+  489 op mul *tmp225 0 88
+  490 op add :drawItemColor.5:iconX 11 0
+  491 op mul *tmp227 0 176
+  492 op div *tmp228 0 2
+  493 op add :drawItemColor.5:barX 22 0
+  494 op mul *tmp230 0 176
+  495 op div *tmp231 0 2
+  496 op add :drawItemColor.5:textX 174 0
   497 draw col %[white]
-    * op add *tmp233 :drawItem.5:y 5
-    * draw image :drawItemColor.5:iconX *tmp233 :drawItem.5:item 16 0
+  498 op add *tmp233 :drawTitleRow.2:y 5
+  499 draw image 11 *tmp233 :drawItem.5:item 16 0
   500 draw col %008000FF
-    * draw rect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:length 10
+  501 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   502 draw col %00FF00FF
-    * draw lineRect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:barLength 10
-    * op add *tmp234 :drawItem.5:y 5
-    * op add *tmp235 *tmp233 2
-    * set :drawBold.5:x :drawItemColor.5:textX
+  503 draw lineRect 22 :drawTitleRow.2:y 126 10
+  504 op add *tmp234 :drawTitleRow.2:y 5
+  505 op add *tmp235 :drawItem.5:y 7
+  506 set :drawBold.5:x 174
   507 set :drawBold.5:y *tmp235
   508 set :drawBold.5:alignment @right
-    * set :drawText.16:x :drawItemColor.5:textX
-    * set :drawText.16:y *tmp235
-    * set :drawText.16:alignment @right
+  509 set :drawText.16:x 174
   510 print *tmp216
   511 print "%"
-    * draw print :drawBold.5:x :drawBold.5:y :drawBold.5:alignment
+  512 draw print :drawItemColor.5:textX *tmp235 @right
   513 label *label113
-    * op add :drawText.17:x :drawItemColor.5:textX 1
-    * set :drawText.17:y *tmp235
-    * set :drawText.17:alignment @right
+  514 op add :drawText.17:x 174 1
   515 print *tmp216
   516 print "%"
-    * draw print :drawText.17:x :drawBold.5:y :drawBold.5:alignment
+  517 draw print 175 *tmp235 @right
   518 label *label114
   519 label *label112
-    * op add :drawItemColor.5:col :drawItem.5:col 1
-    * jump *label115 lessThan :drawItemColor.5:col :drawItem.5:columns
-    * set :drawItemColor.5:col 0
-    * op sub :drawItemColor.5:y :drawItem.5:y 15
+  520 op add :drawItemColor.5:col 0 1
+  521 jump *label115 lessThan 1 1
+  522 op sub :drawItemColor.5:y :drawTitleRow.2:y 15
   523 label *label115
   524 label *label116
   525 label *label111
   526 set :drawItem.5:y :drawItemColor.5:y
   527 label *label110
-    * set :updateDisplay:y :drawItemColor.5:y
-    * op sub :updateDisplay:y :drawItem.5:y 15
+  528 op sub :updateDisplay:y :drawItemColor.5:y 15
   529 label *label86
   530 op sub :updateDisplay:y :updateDisplay:y 5
   531 label *label79
 
   536 draw col %[white]
   537 set :drawTitleRow.3:y :updateDisplay:y
   538 set :drawTitleRow.3:alignment @bottomLeft
-    * set :drawText.18:x 22
-    * set :drawText.18:y :updateDisplay:y
-    * set :drawText.18:alignment @bottomLeft
   539 print "Reconstructor"
-    * draw print 22 :drawTitleRow.3:y :drawTitleRow.3:alignment
+  540 draw print 22 :updateDisplay:y @bottomLeft
   541 label *label121
-    * set :drawText.19:x 23
-    * set :drawText.19:y :updateDisplay:y
-    * set :drawText.19:alignment @bottomLeft
   542 print "Reconstructor"
-    * draw print 23 :drawTitleRow.3:y :drawTitleRow.3:alignment
+  543 draw print 23 :updateDisplay:y @bottomLeft
   544 label *label122
   545 op sub :drawTitleRow.3:y :updateDisplay:y 15
   546 label *label120
 
   554 set :drawItem.6:item @graphite
   555 set :drawItem.6:current *tmp244
   556 set :drawItem.6:target 40
-    * set :drawItemColor.6:color1 %008000FF
-    * set :drawItemColor.6:color2 %00FF00FF
   557 set :drawItemColor.6:col 0
-    * set :drawItemColor.6:y :updateDisplay:y
+  558 set :drawItemColor.6:y :drawTitleRow.3:y
   559 set :drawItemColor.6:columns 1
-    * set :drawItemColor.6:item @graphite
-    * set :drawItemColor.6:current *tmp244
-    * set :drawItemColor.6:target 40
-    * op mul *tmp245 :drawItem.6:columns 176
-    * op mul *tmp246 :drawItemColor.6:columns 88
-    * op sub :drawItemColor.6:barLength 214 *tmp246
-    * op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
-    * op mul *tmp249 :drawItemColor.6:barLength :drawItem.6:current
-    * op div *tmp250 *tmp249 :drawItem.6:target
-    * op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
-    * op mul *tmp252 :drawItem.6:col 176
-    * op mul *tmp253 :drawItemColor.6:col 88
-    * op add :drawItemColor.6:iconX 11 *tmp253
-    * op mul *tmp255 :drawItem.6:col 176
-    * op div *tmp256 *tmp252 2
-    * op add :drawItemColor.6:barX 22 *tmp253
-    * op mul *tmp258 :drawItem.6:col 176
-    * op div *tmp259 *tmp252 2
-    * op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp253
+  560 op mul *tmp245 1 176
+  561 op mul *tmp246 1 88
+  562 op sub :drawItemColor.6:barLength 214 88
+  563 op add :drawItemColor.6:textEnd 48 126
+  564 op mul *tmp249 126 *tmp244
+  565 op div *tmp250 *tmp249 40
+  566 op min :drawItemColor.6:length 126 *tmp250
+  567 op mul *tmp252 0 176
+  568 op mul *tmp253 0 88
+  569 op add :drawItemColor.6:iconX 11 0
+  570 op mul *tmp255 0 176
+  571 op div *tmp256 0 2
+  572 op add :drawItemColor.6:barX 22 0
+  573 op mul *tmp258 0 176
+  574 op div *tmp259 0 2
+  575 op add :drawItemColor.6:textX 174 0
   576 draw col %[white]
-    * op add *tmp261 :drawItem.6:y 5
-    * draw image :drawItemColor.6:iconX *tmp261 :drawItem.6:item 16 0
+  577 op add *tmp261 :drawTitleRow.3:y 5
+  578 draw image 11 *tmp261 @graphite 16 0
   579 draw col %008000FF
-    * draw rect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:length 10
+  580 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   581 draw col %00FF00FF
-    * draw lineRect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:barLength 10
-    * op add *tmp262 :drawItem.6:y 5
-    * op add *tmp263 *tmp261 2
-    * set :drawBold.6:x :drawItemColor.6:textX
+  582 draw lineRect 22 :drawTitleRow.3:y 126 10
+  583 op add *tmp262 :drawTitleRow.3:y 5
+  584 op add *tmp263 :drawItem.6:y 7
+  585 set :drawBold.6:x 174
   586 set :drawBold.6:y *tmp263
   587 set :drawBold.6:alignment @right
-    * set :drawText.20:x :drawItemColor.6:textX
-    * set :drawText.20:y *tmp263
-    * set :drawText.20:alignment @right
+  588 set :drawText.20:x 174
   589 print 40
-    * draw print :drawBold.6:x :drawBold.6:y :drawBold.6:alignment
+  590 draw print :drawItemColor.6:textX *tmp263 @right
   591 label *label128
-    * op add :drawText.21:x :drawItemColor.6:textX 1
-    * set :drawText.21:y *tmp263
-    * set :drawText.21:alignment @right
+  592 op add :drawText.21:x 174 1
   593 print 40
-    * draw print :drawText.21:x :drawBold.6:y :drawBold.6:alignment
+  594 draw print 175 *tmp263 @right
   595 label *label129
   596 label *label127
-    * op add :drawItemColor.6:col :drawItem.6:col 1
-    * jump *label130 lessThan :drawItemColor.6:col :drawItem.6:columns
-    * set :drawItemColor.6:col 0
-    * op sub :drawItemColor.6:y :drawItem.6:y 15
+  597 op add :drawItemColor.6:col 0 1
+  598 jump *label130 lessThan 1 1
+  599 op sub :drawItemColor.6:y :drawTitleRow.3:y 15
   600 label *label130
   601 label *label131
   602 label *label126
 
   605 set :updateDisplay:y :drawItemColor.6:y
   606 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
   607 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawItem.6:y
+  608 set :drawItem.7:y :drawItemColor.6:y
   609 set :drawItem.7:columns 1
   610 set :drawItem.7:item @silicon
   611 set :drawItem.7:current *tmp267
   612 set :drawItem.7:target 40
-    * set :drawItemColor.7:color1 %008000FF
-    * set :drawItemColor.7:color2 %00FF00FF
   613 set :drawItemColor.7:col 0
-    * set :drawItemColor.7:y :updateDisplay:y
+  614 set :drawItemColor.7:y :drawItemColor.6:y
   615 set :drawItemColor.7:columns 1
-    * set :drawItemColor.7:item @silicon
-    * set :drawItemColor.7:current *tmp267
-    * set :drawItemColor.7:target 40
-    * op mul *tmp268 :drawItem.7:columns 176
-    * op mul *tmp269 :drawItemColor.7:columns 88
-    * op sub :drawItemColor.7:barLength 214 *tmp269
-    * op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
-    * op mul *tmp272 :drawItemColor.7:barLength :drawItem.7:current
-    * op div *tmp273 *tmp272 :drawItem.7:target
-    * op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
-    * op mul *tmp275 :drawItem.7:col 176
-    * op mul *tmp276 :drawItemColor.7:col 88
-    * op add :drawItemColor.7:iconX 11 *tmp276
-    * op mul *tmp278 :drawItem.7:col 176
-    * op div *tmp279 *tmp275 2
-    * op add :drawItemColor.7:barX 22 *tmp276
-    * op mul *tmp281 :drawItem.7:col 176
-    * op div *tmp282 *tmp275 2
-    * op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp276
+  616 op mul *tmp268 1 176
+  617 op mul *tmp269 1 88
+  618 op sub :drawItemColor.7:barLength 214 88
+  619 op add :drawItemColor.7:textEnd 48 126
+  620 op mul *tmp272 126 *tmp267
+  621 op div *tmp273 *tmp272 40
+  622 op min :drawItemColor.7:length 126 *tmp273
+  623 op mul *tmp275 0 176
+  624 op mul *tmp276 0 88
+  625 op add :drawItemColor.7:iconX 11 0
+  626 op mul *tmp278 0 176
+  627 op div *tmp279 0 2
+  628 op add :drawItemColor.7:barX 22 0
+  629 op mul *tmp281 0 176
+  630 op div *tmp282 0 2
+  631 op add :drawItemColor.7:textX 174 0
   632 draw col %[white]
-    * op add *tmp284 :drawItem.7:y 5
-    * draw image :drawItemColor.7:iconX *tmp284 :drawItem.7:item 16 0
+  633 op add *tmp284 :drawItem.6:y 5
+  634 draw image 11 *tmp284 @silicon 16 0
   635 draw col %008000FF
-    * draw rect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:length 10
+  636 draw rect 22 :drawItem.6:y :drawItemColor.7:length 10
   637 draw col %00FF00FF
-    * draw lineRect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:barLength 10
-    * op add *tmp285 :drawItem.7:y 5
-    * op add *tmp286 *tmp284 2
-    * set :drawBold.7:x :drawItemColor.7:textX
+  638 draw lineRect 22 :drawItem.6:y 126 10
+  639 op add *tmp285 :drawItem.6:y 5
+  640 op add *tmp286 :drawItem.7:y 7
+  641 set :drawBold.7:x 174
   642 set :drawBold.7:y *tmp286
   643 set :drawBold.7:alignment @right
-    * set :drawText.22:x :drawItemColor.7:textX
-    * set :drawText.22:y *tmp286
-    * set :drawText.22:alignment @right
+  644 set :drawText.22:x 174
   645 print 40
-    * draw print :drawBold.7:x :drawBold.7:y :drawBold.7:alignment
+  646 draw print :drawItemColor.7:textX *tmp286 @right
   647 label *label135
-    * op add :drawText.23:x :drawItemColor.7:textX 1
-    * set :drawText.23:y *tmp286
-    * set :drawText.23:alignment @right
+  648 op add :drawText.23:x 174 1
   649 print 40
-    * draw print :drawText.23:x :drawBold.7:y :drawBold.7:alignment
+  650 draw print 175 *tmp286 @right
   651 label *label136
   652 label *label134
-    * op add :drawItemColor.7:col :drawItem.7:col 1
-    * jump *label137 lessThan :drawItemColor.7:col :drawItem.7:columns
-    * set :drawItemColor.7:col 0
-    * op sub :drawItemColor.7:y :drawItem.7:y 15
+  653 op add :drawItemColor.7:col 0 1
+  654 jump *label137 lessThan 1 1
+  655 op sub :drawItemColor.7:y :drawItem.6:y 15
   656 label *label137
   657 label *label138
   658 label *label133
-    * set :drawItem.7:y :drawItemColor.7:y
   659 label *label132
   660 set :updateDisplay:y :drawItemColor.7:y
   661 jump *label124 always
 
   667 set :drawItem.8:item @poly
   668 set :drawItem.8:current :drawAddReco:progress
   669 set :drawItem.8:target 1
-    * set :drawItemColor.8:color1 %008000FF
-    * set :drawItemColor.8:color2 %00FF00FF
   670 set :drawItemColor.8:col 0
-    * set :drawItemColor.8:y :updateDisplay:y
+  671 set :drawItemColor.8:y :drawTitleRow.3:y
   672 set :drawItemColor.8:columns 1
-    * set :drawItemColor.8:item @poly
-    * set :drawItemColor.8:current :drawAddReco:progress
-    * set :drawItemColor.8:target 1
-    * op mul *tmp292 :drawItem.8:columns 176
-    * op mul *tmp293 :drawItemColor.8:columns 88
-    * op sub :drawItemColor.8:barLength 214 *tmp293
-    * op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
-    * op mul *tmp296 :drawItemColor.8:barLength :drawItem.8:current
-    * op div *tmp297 *tmp296 :drawItem.8:target
-    * op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
-    * op mul *tmp299 :drawItem.8:col 176
-    * op mul *tmp300 :drawItemColor.8:col 88
-    * op add :drawItemColor.8:iconX 11 *tmp300
-    * op mul *tmp302 :drawItem.8:col 176
-    * op div *tmp303 *tmp299 2
-    * op add :drawItemColor.8:barX 22 *tmp300
-    * op mul *tmp305 :drawItem.8:col 176
-    * op div *tmp306 *tmp299 2
-    * op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp300
+  673 op mul *tmp292 1 176
+  674 op mul *tmp293 1 88
+  675 op sub :drawItemColor.8:barLength 214 88
+  676 op add :drawItemColor.8:textEnd 48 126
+  677 op mul *tmp296 126 :drawAddReco:progress
+  678 op div *tmp297 *tmp296 1
+  679 op min :drawItemColor.8:length 126 *tmp297
+  680 op mul *tmp299 0 176
+  681 op mul *tmp300 0 88
+  682 op add :drawItemColor.8:iconX 11 0
+  683 op mul *tmp302 0 176
+  684 op div *tmp303 0 2
+  685 op add :drawItemColor.8:barX 22 0
+  686 op mul *tmp305 0 176
+  687 op div *tmp306 0 2
+  688 op add :drawItemColor.8:textX 174 0
   689 draw col %[white]
-    * op add *tmp308 :drawItem.8:y 5
-    * draw image :drawItemColor.8:iconX *tmp308 :drawItem.8:item 16 0
+  690 op add *tmp308 :drawTitleRow.3:y 5
+  691 draw image 11 *tmp308 @poly 16 0
   692 draw col %008000FF
-    * draw rect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:length 10
+  693 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   694 draw col %00FF00FF
-    * draw lineRect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:barLength 10
-    * op add *tmp309 :drawItem.8:y 5
-    * op add *tmp310 *tmp308 2
-    * set :drawBold.8:x :drawItemColor.8:textX
+  695 draw lineRect 22 :drawTitleRow.3:y 126 10
+  696 op add *tmp309 :drawTitleRow.3:y 5
+  697 op add *tmp310 :drawItem.8:y 7
+  698 set :drawBold.8:x 174
   699 set :drawBold.8:y *tmp310
   700 set :drawBold.8:alignment @right
-    * set :drawText.24:x :drawItemColor.8:textX
-    * set :drawText.24:y *tmp310
-    * set :drawText.24:alignment @right
+  701 set :drawText.24:x 174
   702 print *tmp291
   703 print "%"
-    * draw print :drawBold.8:x :drawBold.8:y :drawBold.8:alignment
+  704 draw print :drawItemColor.8:textX *tmp310 @right
   705 label *label142
-    * op add :drawText.25:x :drawItemColor.8:textX 1
-    * set :drawText.25:y *tmp310
-    * set :drawText.25:alignment @right
+  706 op add :drawText.25:x 174 1
   707 print *tmp291
   708 print "%"
-    * draw print :drawText.25:x :drawBold.8:y :drawBold.8:alignment
+  709 draw print 175 *tmp310 @right
   710 label *label143
   711 label *label141
-    * op add :drawItemColor.8:col :drawItem.8:col 1
-    * jump *label144 lessThan :drawItemColor.8:col :drawItem.8:columns
-    * set :drawItemColor.8:col 0
-    * op sub :drawItemColor.8:y :drawItem.8:y 15
+  712 op add :drawItemColor.8:col 0 1
+  713 jump *label144 lessThan 1 1
+  714 op sub :drawItemColor.8:y :drawTitleRow.3:y 15
   715 label *label144
   716 label *label145
   717 label *label140
   718 set :drawItem.8:y :drawItemColor.8:y
   719 label *label139
-    * set :updateDisplay:y :drawItemColor.8:y
-    * op sub :updateDisplay:y :drawItem.8:y 15
+  720 op sub :updateDisplay:y :drawItemColor.8:y 15
   721 label *label124
   722 op sub :updateDisplay:y :updateDisplay:y 5
   723 label *label117
 
   729 op min :updateDisplay:y :updateDisplay:y 142
   730 set :drawTitleRow.4:y :updateDisplay:y
   731 set :drawTitleRow.4:alignment @bottomLeft
-    * set :drawText.26:x 22
-    * set :drawText.26:y :updateDisplay:y
-    * set :drawText.26:alignment @bottomLeft
   732 print "Reconstructor"
-    * draw print 22 :drawTitleRow.4:y :drawTitleRow.4:alignment
+  733 draw print 22 :updateDisplay:y @bottomLeft
   734 label *label150
-    * set :drawText.27:x 23
-    * set :drawText.27:y :updateDisplay:y
-    * set :drawText.27:alignment @bottomLeft
   735 print "Reconstructor"
-    * draw print 23 :drawTitleRow.4:y :drawTitleRow.4:alignment
+  736 draw print 23 :updateDisplay:y @bottomLeft
   737 label *label151
   738 op sub :drawTitleRow.4:y :updateDisplay:y 15
   739 label *label149
 
   747 set :drawItem.9:item @metaglass
   748 set :drawItem.9:current *tmp320
   749 set :drawItem.9:target 40
-    * set :drawItemColor.9:color1 %008000FF
-    * set :drawItemColor.9:color2 %00FF00FF
   750 set :drawItemColor.9:col 0
-    * set :drawItemColor.9:y :updateDisplay:y
+  751 set :drawItemColor.9:y :drawTitleRow.4:y
   752 set :drawItemColor.9:columns 1
-    * set :drawItemColor.9:item @metaglass
-    * set :drawItemColor.9:current *tmp320
-    * set :drawItemColor.9:target 40
-    * op mul *tmp321 :drawItem.9:columns 176
-    * op mul *tmp322 :drawItemColor.9:columns 88
-    * op sub :drawItemColor.9:barLength 214 *tmp322
-    * op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
-    * op mul *tmp325 :drawItemColor.9:barLength :drawItem.9:current
-    * op div *tmp326 *tmp325 :drawItem.9:target
-    * op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
-    * op mul *tmp328 :drawItem.9:col 176
-    * op mul *tmp329 :drawItemColor.9:col 88
-    * op add :drawItemColor.9:iconX 11 *tmp329
-    * op mul *tmp331 :drawItem.9:col 176
-    * op div *tmp332 *tmp328 2
-    * op add :drawItemColor.9:barX 22 *tmp329
-    * op mul *tmp334 :drawItem.9:col 176
-    * op div *tmp335 *tmp328 2
-    * op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp329
+  753 op mul *tmp321 1 176
+  754 op mul *tmp322 1 88
+  755 op sub :drawItemColor.9:barLength 214 88
+  756 op add :drawItemColor.9:textEnd 48 126
+  757 op mul *tmp325 126 *tmp320
+  758 op div *tmp326 *tmp325 40
+  759 op min :drawItemColor.9:length 126 *tmp326
+  760 op mul *tmp328 0 176
+  761 op mul *tmp329 0 88
+  762 op add :drawItemColor.9:iconX 11 0
+  763 op mul *tmp331 0 176
+  764 op div *tmp332 0 2
+  765 op add :drawItemColor.9:barX 22 0
+  766 op mul *tmp334 0 176
+  767 op div *tmp335 0 2
+  768 op add :drawItemColor.9:textX 174 0
   769 draw col %[white]
-    * op add *tmp337 :drawItem.9:y 5
-    * draw image :drawItemColor.9:iconX *tmp337 :drawItem.9:item 16 0
+  770 op add *tmp337 :drawTitleRow.4:y 5
+  771 draw image 11 *tmp337 @metaglass 16 0
   772 draw col %008000FF
-    * draw rect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:length 10
+  773 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   774 draw col %00FF00FF
-    * draw lineRect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:barLength 10
-    * op add *tmp338 :drawItem.9:y 5
-    * op add *tmp339 *tmp337 2
-    * set :drawBold.9:x :drawItemColor.9:textX
+  775 draw lineRect 22 :drawTitleRow.4:y 126 10
+  776 op add *tmp338 :drawTitleRow.4:y 5
+  777 op add *tmp339 :drawItem.9:y 7
+  778 set :drawBold.9:x 174
   779 set :drawBold.9:y *tmp339
   780 set :drawBold.9:alignment @right
-    * set :drawText.28:x :drawItemColor.9:textX
-    * set :drawText.28:y *tmp339
-    * set :drawText.28:alignment @right
+  781 set :drawText.28:x 174
   782 print 40
-    * draw print :drawBold.9:x :drawBold.9:y :drawBold.9:alignment
+  783 draw print :drawItemColor.9:textX *tmp339 @right
   784 label *label157
-    * op add :drawText.29:x :drawItemColor.9:textX 1
-    * set :drawText.29:y *tmp339
-    * set :drawText.29:alignment @right
+  785 op add :drawText.29:x 174 1
   786 print 40
-    * draw print :drawText.29:x :drawBold.9:y :drawBold.9:alignment
+  787 draw print 175 *tmp339 @right
   788 label *label158
   789 label *label156
-    * op add :drawItemColor.9:col :drawItem.9:col 1
-    * jump *label159 lessThan :drawItemColor.9:col :drawItem.9:columns
-    * set :drawItemColor.9:col 0
-    * op sub :drawItemColor.9:y :drawItem.9:y 15
+  790 op add :drawItemColor.9:col 0 1
+  791 jump *label159 lessThan 1 1
+  792 op sub :drawItemColor.9:y :drawTitleRow.4:y 15
   793 label *label159
   794 label *label160
   795 label *label155
 
   798 set :updateDisplay:y :drawItemColor.9:y
   799 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
   800 set :drawItem.10:col 0
-    * set :drawItem.10:y :drawItem.9:y
+  801 set :drawItem.10:y :drawItemColor.9:y
   802 set :drawItem.10:columns 1
   803 set :drawItem.10:item @titanium
   804 set :drawItem.10:current *tmp343
   805 set :drawItem.10:target 80
-    * set :drawItemColor.10:color1 %008000FF
-    * set :drawItemColor.10:color2 %00FF00FF
   806 set :drawItemColor.10:col 0
-    * set :drawItemColor.10:y :updateDisplay:y
+  807 set :drawItemColor.10:y :drawItemColor.9:y
   808 set :drawItemColor.10:columns 1
-    * set :drawItemColor.10:item @titanium
-    * set :drawItemColor.10:current *tmp343
-    * set :drawItemColor.10:target 80
-    * op mul *tmp344 :drawItem.10:columns 176
-    * op mul *tmp345 :drawItemColor.10:columns 88
-    * op sub :drawItemColor.10:barLength 214 *tmp345
-    * op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
-    * op mul *tmp348 :drawItemColor.10:barLength :drawItem.10:current
-    * op div *tmp349 *tmp348 :drawItem.10:target
-    * op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
-    * op mul *tmp351 :drawItem.10:col 176
-    * op mul *tmp352 :drawItemColor.10:col 88
-    * op add :drawItemColor.10:iconX 11 *tmp352
-    * op mul *tmp354 :drawItem.10:col 176
-    * op div *tmp355 *tmp351 2
-    * op add :drawItemColor.10:barX 22 *tmp352
-    * op mul *tmp357 :drawItem.10:col 176
-    * op div *tmp358 *tmp351 2
-    * op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp352
+  809 op mul *tmp344 1 176
+  810 op mul *tmp345 1 88
+  811 op sub :drawItemColor.10:barLength 214 88
+  812 op add :drawItemColor.10:textEnd 48 126
+  813 op mul *tmp348 126 *tmp343
+  814 op div *tmp349 *tmp348 80
+  815 op min :drawItemColor.10:length 126 *tmp349
+  816 op mul *tmp351 0 176
+  817 op mul *tmp352 0 88
+  818 op add :drawItemColor.10:iconX 11 0
+  819 op mul *tmp354 0 176
+  820 op div *tmp355 0 2
+  821 op add :drawItemColor.10:barX 22 0
+  822 op mul *tmp357 0 176
+  823 op div *tmp358 0 2
+  824 op add :drawItemColor.10:textX 174 0
   825 draw col %[white]
-    * op add *tmp360 :drawItem.10:y 5
-    * draw image :drawItemColor.10:iconX *tmp360 :drawItem.10:item 16 0
+  826 op add *tmp360 :drawItem.9:y 5
+  827 draw image 11 *tmp360 @titanium 16 0
   828 draw col %008000FF
-    * draw rect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:length 10
+  829 draw rect 22 :drawItem.9:y :drawItemColor.10:length 10
   830 draw col %00FF00FF
-    * draw lineRect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:barLength 10
-    * op add *tmp361 :drawItem.10:y 5
-    * op add *tmp362 *tmp360 2
-    * set :drawBold.10:x :drawItemColor.10:textX
+  831 draw lineRect 22 :drawItem.9:y 126 10
+  832 op add *tmp361 :drawItem.9:y 5
+  833 op add *tmp362 :drawItem.10:y 7
+  834 set :drawBold.10:x 174
   835 set :drawBold.10:y *tmp362
   836 set :drawBold.10:alignment @right
-    * set :drawText.30:x :drawItemColor.10:textX
-    * set :drawText.30:y *tmp362
-    * set :drawText.30:alignment @right
+  837 set :drawText.30:x 174
   838 print 80
-    * draw print :drawBold.10:x :drawBold.10:y :drawBold.10:alignment
+  839 draw print :drawItemColor.10:textX *tmp362 @right
   840 label *label164
-    * op add :drawText.31:x :drawItemColor.10:textX 1
-    * set :drawText.31:y *tmp362
-    * set :drawText.31:alignment @right
+  841 op add :drawText.31:x 174 1
   842 print 80
-    * draw print :drawText.31:x :drawBold.10:y :drawBold.10:alignment
+  843 draw print 175 *tmp362 @right
   844 label *label165
   845 label *label163
-    * op add :drawItemColor.10:col :drawItem.10:col 1
-    * jump *label166 lessThan :drawItemColor.10:col :drawItem.10:columns
-    * set :drawItemColor.10:col 0
-    * op sub :drawItemColor.10:y :drawItem.10:y 15
+  846 op add :drawItemColor.10:col 0 1
+  847 jump *label166 lessThan 1 1
+  848 op sub :drawItemColor.10:y :drawItem.9:y 15
   849 label *label166
   850 label *label167
   851 label *label162
 
   854 set :updateDisplay:y :drawItemColor.10:y
   855 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
   856 set :drawItem.11:col 0
-    * set :drawItem.11:y :drawItem.10:y
+  857 set :drawItem.11:y :drawItemColor.10:y
   858 set :drawItem.11:columns 1
   859 set :drawItem.11:item @silicon
   860 set :drawItem.11:current *tmp366
   861 set :drawItem.11:target 130
-    * set :drawItemColor.11:color1 %008000FF
-    * set :drawItemColor.11:color2 %00FF00FF
   862 set :drawItemColor.11:col 0
-    * set :drawItemColor.11:y :updateDisplay:y
+  863 set :drawItemColor.11:y :drawItemColor.10:y
   864 set :drawItemColor.11:columns 1
-    * set :drawItemColor.11:item @silicon
-    * set :drawItemColor.11:current *tmp366
-    * set :drawItemColor.11:target 130
-    * op mul *tmp367 :drawItem.11:columns 176
-    * op mul *tmp368 :drawItemColor.11:columns 88
-    * op sub :drawItemColor.11:barLength 214 *tmp368
-    * op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
-    * op mul *tmp371 :drawItemColor.11:barLength :drawItem.11:current
-    * op div *tmp372 *tmp371 :drawItem.11:target
-    * op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
-    * op mul *tmp374 :drawItem.11:col 176
-    * op mul *tmp375 :drawItemColor.11:col 88
-    * op add :drawItemColor.11:iconX 11 *tmp375
-    * op mul *tmp377 :drawItem.11:col 176
-    * op div *tmp378 *tmp374 2
-    * op add :drawItemColor.11:barX 22 *tmp375
-    * op mul *tmp380 :drawItem.11:col 176
-    * op div *tmp381 *tmp374 2
-    * op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp375
+  865 op mul *tmp367 1 176
+  866 op mul *tmp368 1 88
+  867 op sub :drawItemColor.11:barLength 214 88
+  868 op add :drawItemColor.11:textEnd 48 126
+  869 op mul *tmp371 126 *tmp366
+  870 op div *tmp372 *tmp371 130
+  871 op min :drawItemColor.11:length 126 *tmp372
+  872 op mul *tmp374 0 176
+  873 op mul *tmp375 0 88
+  874 op add :drawItemColor.11:iconX 11 0
+  875 op mul *tmp377 0 176
+  876 op div *tmp378 0 2
+  877 op add :drawItemColor.11:barX 22 0
+  878 op mul *tmp380 0 176
+  879 op div *tmp381 0 2
+  880 op add :drawItemColor.11:textX 174 0
   881 draw col %[white]
-    * op add *tmp383 :drawItem.11:y 5
-    * draw image :drawItemColor.11:iconX *tmp383 :drawItem.11:item 16 0
+  882 op add *tmp383 :drawItem.10:y 5
+  883 draw image 11 *tmp383 @silicon 16 0
   884 draw col %008000FF
-    * draw rect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:length 10
+  885 draw rect 22 :drawItem.10:y :drawItemColor.11:length 10
   886 draw col %00FF00FF
-    * draw lineRect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:barLength 10
-    * op add *tmp384 :drawItem.11:y 5
-    * op add *tmp385 *tmp383 2
-    * set :drawBold.11:x :drawItemColor.11:textX
+  887 draw lineRect 22 :drawItem.10:y 126 10
+  888 op add *tmp384 :drawItem.10:y 5
+  889 op add *tmp385 :drawItem.11:y 7
+  890 set :drawBold.11:x 174
   891 set :drawBold.11:y *tmp385
   892 set :drawBold.11:alignment @right
-    * set :drawText.32:x :drawItemColor.11:textX
-    * set :drawText.32:y *tmp385
-    * set :drawText.32:alignment @right
+  893 set :drawText.32:x 174
   894 print 130
-    * draw print :drawBold.11:x :drawBold.11:y :drawBold.11:alignment
+  895 draw print :drawItemColor.11:textX *tmp385 @right
   896 label *label171
-    * op add :drawText.33:x :drawItemColor.11:textX 1
-    * set :drawText.33:y *tmp385
-    * set :drawText.33:alignment @right
+  897 op add :drawText.33:x 174 1
   898 print 130
-    * draw print :drawText.33:x :drawBold.11:y :drawBold.11:alignment
+  899 draw print 175 *tmp385 @right
   900 label *label172
   901 label *label170
-    * op add :drawItemColor.11:col :drawItem.11:col 1
-    * jump *label173 lessThan :drawItemColor.11:col :drawItem.11:columns
-    * set :drawItemColor.11:col 0
-    * op sub :drawItemColor.11:y :drawItem.11:y 15
+  902 op add :drawItemColor.11:col 0 1
+  903 jump *label173 lessThan 1 1
+  904 op sub :drawItemColor.11:y :drawItem.10:y 15
   905 label *label173
   906 label *label174
   907 label *label169
-    * set :drawItem.11:y :drawItemColor.11:y
   908 label *label168
   909 set :updateDisplay:y :drawItemColor.11:y
   910 jump *label153 always
 
   916 set :drawItem.12:item @mega
   917 set :drawItem.12:current :drawMultiReco:progress
   918 set :drawItem.12:target 1
-    * set :drawItemColor.12:color1 %008000FF
-    * set :drawItemColor.12:color2 %00FF00FF
   919 set :drawItemColor.12:col 0
-    * set :drawItemColor.12:y :updateDisplay:y
+  920 set :drawItemColor.12:y :drawTitleRow.4:y
   921 set :drawItemColor.12:columns 1
-    * set :drawItemColor.12:item @mega
-    * set :drawItemColor.12:current :drawMultiReco:progress
-    * set :drawItemColor.12:target 1
-    * op mul *tmp391 :drawItem.12:columns 176
-    * op mul *tmp392 :drawItemColor.12:columns 88
-    * op sub :drawItemColor.12:barLength 214 *tmp392
-    * op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
-    * op mul *tmp395 :drawItemColor.12:barLength :drawItem.12:current
-    * op div *tmp396 *tmp395 :drawItem.12:target
-    * op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
-    * op mul *tmp398 :drawItem.12:col 176
-    * op mul *tmp399 :drawItemColor.12:col 88
-    * op add :drawItemColor.12:iconX 11 *tmp399
-    * op mul *tmp401 :drawItem.12:col 176
-    * op div *tmp402 *tmp398 2
-    * op add :drawItemColor.12:barX 22 *tmp399
-    * op mul *tmp404 :drawItem.12:col 176
-    * op div *tmp405 *tmp398 2
-    * op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp399
+  922 op mul *tmp391 1 176
+  923 op mul *tmp392 1 88
+  924 op sub :drawItemColor.12:barLength 214 88
+  925 op add :drawItemColor.12:textEnd 48 126
+  926 op mul *tmp395 126 :drawMultiReco:progress
+  927 op div *tmp396 *tmp395 1
+  928 op min :drawItemColor.12:length 126 *tmp396
+  929 op mul *tmp398 0 176
+  930 op mul *tmp399 0 88
+  931 op add :drawItemColor.12:iconX 11 0
+  932 op mul *tmp401 0 176
+  933 op div *tmp402 0 2
+  934 op add :drawItemColor.12:barX 22 0
+  935 op mul *tmp404 0 176
+  936 op div *tmp405 0 2
+  937 op add :drawItemColor.12:textX 174 0
   938 draw col %[white]
-    * op add *tmp407 :drawItem.12:y 5
-    * draw image :drawItemColor.12:iconX *tmp407 :drawItem.12:item 16 0
+  939 op add *tmp407 :drawTitleRow.4:y 5
+  940 draw image 11 *tmp407 @mega 16 0
   941 draw col %008000FF
-    * draw rect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:length 10
+  942 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   943 draw col %00FF00FF
-    * draw lineRect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:barLength 10
-    * op add *tmp408 :drawItem.12:y 5
-    * op add *tmp409 *tmp407 2
-    * set :drawBold.12:x :drawItemColor.12:textX
+  944 draw lineRect 22 :drawTitleRow.4:y 126 10
+  945 op add *tmp408 :drawTitleRow.4:y 5
+  946 op add *tmp409 :drawItem.12:y 7
+  947 set :drawBold.12:x 174
   948 set :drawBold.12:y *tmp409
   949 set :drawBold.12:alignment @right
-    * set :drawText.34:x :drawItemColor.12:textX
-    * set :drawText.34:y *tmp409
-    * set :drawText.34:alignment @right
+  950 set :drawText.34:x 174
   951 print *tmp390
   952 print "%"
-    * draw print :drawBold.12:x :drawBold.12:y :drawBold.12:alignment
+  953 draw print :drawItemColor.12:textX *tmp409 @right
   954 label *label178
-    * op add :drawText.35:x :drawItemColor.12:textX 1
-    * set :drawText.35:y *tmp409
-    * set :drawText.35:alignment @right
+  955 op add :drawText.35:x 174 1
   956 print *tmp390
   957 print "%"
-    * draw print :drawText.35:x :drawBold.12:y :drawBold.12:alignment
+  958 draw print 175 *tmp409 @right
   959 label *label179
   960 label *label177
-    * op add :drawItemColor.12:col :drawItem.12:col 1
-    * jump *label180 lessThan :drawItemColor.12:col :drawItem.12:columns
-    * set :drawItemColor.12:col 0
-    * op sub :drawItemColor.12:y :drawItem.12:y 15
+  961 op add :drawItemColor.12:col 0 1
+  962 jump *label180 lessThan 1 1
+  963 op sub :drawItemColor.12:y :drawTitleRow.4:y 15
   964 label *label180
   965 label *label181
   966 label *label176
   967 set :drawItem.12:y :drawItemColor.12:y
   968 label *label175
-    * set :updateDisplay:y :drawItemColor.12:y
-    * op sub :updateDisplay:y :drawItem.12:y 30
+  969 op sub :updateDisplay:y :drawItemColor.12:y 30
   970 label *label153
   971 op sub :updateDisplay:y :updateDisplay:y 5
   972 label *label146
 
   978 draw col %[white]
   979 set :drawTitleRow.5:y :updateDisplay:y
   980 set :drawTitleRow.5:alignment @bottomLeft
-    * set :drawText.36:x 22
-    * set :drawText.36:y :updateDisplay:y
-    * set :drawText.36:alignment @bottomLeft
   981 print "Builder"
-    * draw print 22 :drawTitleRow.5:y :drawTitleRow.5:alignment
+  982 draw print 22 :updateDisplay:y @bottomLeft
   983 label *label186
-    * set :drawText.37:x 23
-    * set :drawText.37:y :updateDisplay:y
-    * set :drawText.37:alignment @bottomLeft
   984 print "Builder"
-    * draw print 23 :drawTitleRow.5:y :drawTitleRow.5:alignment
+  985 draw print 23 :updateDisplay:y @bottomLeft
   986 label *label187
   987 op sub :drawTitleRow.5:y :updateDisplay:y 15
   988 label *label185
 
   992 set :drawUnit:items 0
   993 set :drawUnit:y :drawTitleRow.5:y
   994 set :drawItem.13:col 0
-    * set :drawItem.13:y :updateDisplay:y
+  995 set :drawItem.13:y :drawTitleRow.5:y
   996 set :drawItem.13:columns 1
   997 set :drawItem.13:item @poly
   998 set :drawItem.13:current 0
   999 set :drawItem.13:target .transportTarget
-    * set :drawItemColor.13:color1 %008000FF
-    * set :drawItemColor.13:color2 %00FF00FF
  1000 set :drawItemColor.13:col 0
-    * set :drawItemColor.13:y :drawUnit:y
+ 1001 set :drawItemColor.13:y :drawTitleRow.5:y
  1002 set :drawItemColor.13:columns 1
-    * set :drawItemColor.13:item :drawUnit:item
-    * set :drawItemColor.13:current :drawUnit:items
-    * set :drawItemColor.13:target :drawItem.13:target
-    * op mul *tmp417 :drawItem.13:columns 176
-    * op mul *tmp418 :drawItemColor.13:columns 88
-    * op sub :drawItemColor.13:barLength 214 *tmp418
-    * op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
-    * op mul *tmp421 :drawItemColor.13:barLength :drawItem.13:current
-    * op div *tmp422 *tmp421 :drawItem.13:target
-    * op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
-    * op mul *tmp424 :drawItem.13:col 176
-    * op mul *tmp425 :drawItemColor.13:col 88
-    * op add :drawItemColor.13:iconX 11 *tmp425
-    * op mul *tmp427 :drawItem.13:col 176
-    * op div *tmp428 *tmp424 2
-    * op add :drawItemColor.13:barX 22 *tmp425
-    * op mul *tmp430 :drawItem.13:col 176
-    * op div *tmp431 *tmp424 2
-    * op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp425
+ 1003 set :drawItemColor.13:item @poly
+ 1004 set :drawItemColor.13:current 0
+ 1005 op mul *tmp417 1 176
+ 1006 op mul *tmp418 1 88
+ 1007 op sub :drawItemColor.13:barLength 214 88
+ 1008 op add :drawItemColor.13:textEnd 48 126
+ 1009 op mul *tmp421 126 0
+ 1010 op div *tmp422 0 :drawItem.13:target
+ 1011 op min :drawItemColor.13:length 126 *tmp422
+ 1012 op mul *tmp424 0 176
+ 1013 op mul *tmp425 0 88
+ 1014 op add :drawItemColor.13:iconX 11 0
+ 1015 op mul *tmp427 0 176
+ 1016 op div *tmp428 0 2
+ 1017 op add :drawItemColor.13:barX 22 0
+ 1018 op mul *tmp430 0 176
+ 1019 op div *tmp431 0 2
+ 1020 op add :drawItemColor.13:textX 174 0
  1021 draw col %[white]
-    * op add *tmp433 :drawItem.13:y 5
-    * draw image :drawItemColor.13:iconX *tmp433 :drawItem.13:item 16 0
+ 1022 op add *tmp433 :updateDisplay:y 5
+ 1023 draw image 11 *tmp433 @poly 16 0
  1024 draw col %008000FF
-    * draw rect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:length 10
+ 1025 draw rect 22 :updateDisplay:y :drawItemColor.13:length 10
  1026 draw col %00FF00FF
-    * draw lineRect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:barLength 10
-    * op add *tmp434 :drawItem.13:y 5
-    * op add *tmp435 *tmp433 2
-    * set :drawBold.13:x :drawItemColor.13:textX
+ 1027 draw lineRect 22 :updateDisplay:y 126 10
+ 1028 op add *tmp434 :updateDisplay:y 5
+ 1029 op add *tmp435 :drawItem.13:y 7
+ 1030 set :drawBold.13:x 174
  1031 set :drawBold.13:y *tmp435
  1032 set :drawBold.13:alignment @right
-    * set :drawText.38:x :drawItemColor.13:textX
-    * set :drawText.38:y *tmp435
-    * set :drawText.38:alignment @right
+ 1033 set :drawText.38:x 174
  1034 print .transportTarget
-    * draw print :drawBold.13:x :drawBold.13:y :drawBold.13:alignment
+ 1035 draw print :drawItemColor.13:textX *tmp435 @right
  1036 label *label194
-    * op add :drawText.39:x :drawItemColor.13:textX 1
-    * set :drawText.39:y *tmp435
-    * set :drawText.39:alignment @right
+ 1037 op add :drawText.39:x 174 1
  1038 print .transportTarget
-    * draw print :drawText.39:x :drawBold.13:y :drawBold.13:alignment
+ 1039 draw print 175 *tmp435 @right
  1040 label *label195
  1041 label *label193
-    * op add :drawItemColor.13:col :drawItem.13:col 1
-    * jump *label196 lessThan :drawItemColor.13:col :drawItem.13:columns
-    * set :drawItemColor.13:col 0
-    * op sub :drawItemColor.13:y :drawItem.13:y 15
+ 1042 op add :drawItemColor.13:col 0 1
+ 1043 jump *label196 lessThan 1 1
+ 1044 op sub :drawItemColor.13:y :updateDisplay:y 15
  1045 label *label196
  1046 label *label197
  1047 label *label192
  1048 set :drawItem.13:y :drawItemColor.13:y
  1049 label *label191
-    * set :drawUnit:y :drawItemColor.13:y
  1050 label *label190
-    * set :updateDisplay:y :drawItem.13:y
+ 1051 set :updateDisplay:y :drawItemColor.13:y
  1052 jump *label189 always
  1053 label *label188
  1054 sensor :drawBuilder:unitItem @unit @firstItem
 
  1059 set :drawUnit.1:items *tmp444
  1060 set :drawUnit.1:y :drawTitleRow.5:y
  1061 set :drawItem.14:col 0
-    * set :drawItem.14:y :updateDisplay:y
+ 1062 set :drawItem.14:y :drawTitleRow.5:y
  1063 set :drawItem.14:columns 1
  1064 set :drawItem.14:item :drawUnit.1:item
  1065 set :drawItem.14:current *tmp444
  1066 set :drawItem.14:target .transportTarget
-    * set :drawItemColor.14:color1 %008000FF
-    * set :drawItemColor.14:color2 %00FF00FF
  1067 set :drawItemColor.14:col 0
-    * set :drawItemColor.14:y :drawUnit.1:y
+ 1068 set :drawItemColor.14:y :drawTitleRow.5:y
  1069 set :drawItemColor.14:columns 1
-    * set :drawItemColor.14:item :drawUnit.1:item
-    * set :drawItemColor.14:current :drawUnit.1:items
-    * set :drawItemColor.14:target :drawItem.14:target
-    * op mul *tmp445 :drawItem.14:columns 176
-    * op mul *tmp446 :drawItemColor.14:columns 88
-    * op sub :drawItemColor.14:barLength 214 *tmp446
-    * op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
-    * op mul *tmp449 :drawItemColor.14:barLength :drawItem.14:current
+ 1070 set :drawItemColor.14:current *tmp444
+ 1071 op mul *tmp445 1 176
+ 1072 op mul *tmp446 1 88
+ 1073 op sub :drawItemColor.14:barLength 214 88
+ 1074 op add :drawItemColor.14:textEnd 48 126
+ 1075 op mul *tmp449 126 *tmp444
  1076 op div *tmp450 *tmp449 :drawItem.14:target
-    * op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
-    * op mul *tmp452 :drawItem.14:col 176
-    * op mul *tmp453 :drawItemColor.14:col 88
-    * op add :drawItemColor.14:iconX 11 *tmp453
-    * op mul *tmp455 :drawItem.14:col 176
-    * op div *tmp456 *tmp452 2
-    * op add :drawItemColor.14:barX 22 *tmp453
-    * op mul *tmp458 :drawItem.14:col 176
-    * op div *tmp459 *tmp452 2
-    * op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp453
+ 1077 op min :drawItemColor.14:length 126 *tmp450
+ 1078 op mul *tmp452 0 176
+ 1079 op mul *tmp453 0 88
+ 1080 op add :drawItemColor.14:iconX 11 0
+ 1081 op mul *tmp455 0 176
+ 1082 op div *tmp456 0 2
+ 1083 op add :drawItemColor.14:barX 22 0
+ 1084 op mul *tmp458 0 176
+ 1085 op div *tmp459 0 2
+ 1086 op add :drawItemColor.14:textX 174 0
  1087 draw col %[white]
-    * op add *tmp461 :drawItem.14:y 5
-    * draw image :drawItemColor.14:iconX *tmp461 :drawItem.14:item 16 0
+ 1088 op add *tmp461 :updateDisplay:y 5
+ 1089 draw image 11 *tmp461 :drawUnit.1:item 16 0
  1090 draw col %008000FF
-    * draw rect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:length 10
+ 1091 draw rect 22 :updateDisplay:y :drawItemColor.14:length 10
  1092 draw col %00FF00FF
-    * draw lineRect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:barLength 10
-    * op add *tmp462 :drawItem.14:y 5
-    * op add *tmp463 *tmp461 2
-    * set :drawBold.14:x :drawItemColor.14:textX
+ 1093 draw lineRect 22 :updateDisplay:y 126 10
+ 1094 op add *tmp462 :updateDisplay:y 5
+ 1095 op add *tmp463 :drawItem.14:y 7
+ 1096 set :drawBold.14:x 174
  1097 set :drawBold.14:y *tmp463
  1098 set :drawBold.14:alignment @right
-    * set :drawText.40:x :drawItemColor.14:textX
-    * set :drawText.40:y *tmp463
-    * set :drawText.40:alignment @right
+ 1099 set :drawText.40:x 174
  1100 print .transportTarget
-    * draw print :drawBold.14:x :drawBold.14:y :drawBold.14:alignment
+ 1101 draw print :drawItemColor.14:textX *tmp463 @right
  1102 label *label202
-    * op add :drawText.41:x :drawItemColor.14:textX 1
-    * set :drawText.41:y *tmp463
-    * set :drawText.41:alignment @right
+ 1103 op add :drawText.41:x 174 1
  1104 print .transportTarget
-    * draw print :drawText.41:x :drawBold.14:y :drawBold.14:alignment
+ 1105 draw print 175 *tmp463 @right
  1106 label *label203
  1107 label *label201
-    * op add :drawItemColor.14:col :drawItem.14:col 1
-    * jump *label204 lessThan :drawItemColor.14:col :drawItem.14:columns
-    * set :drawItemColor.14:col 0
-    * op sub :drawItemColor.14:y :drawItem.14:y 15
+ 1108 op add :drawItemColor.14:col 0 1
+ 1109 jump *label204 lessThan 1 1
+ 1110 op sub :drawItemColor.14:y :updateDisplay:y 15
  1111 label *label204
  1112 label *label205
  1113 label *label200
  1114 set :drawItem.14:y :drawItemColor.14:y
  1115 label *label199
-    * set :drawUnit.1:y :drawItemColor.14:y
  1116 label *label198
-    * set :updateDisplay:y :drawItem.14:y
+ 1117 set :updateDisplay:y :drawItemColor.14:y
  1118 label *label189
  1119 label *label182
  1120 jump *label207 greaterThanEq :updateDisplay:y 20
 
  1129 draw col %[white]
  1130 set :drawTitleRow.6:y 20
  1131 set :drawTitleRow.6:alignment @bottomLeft
-    * set :drawText.42:x 22
-    * set :drawText.42:y :updateDisplay:y
-    * set :drawText.42:alignment @bottomLeft
+ 1132 set :drawText.42:y 20
  1133 print "Power"
-    * draw print 22 :drawTitleRow.6:y :drawTitleRow.6:alignment
+ 1134 draw print 22 20 @bottomLeft
  1135 label *label212
-    * set :drawText.43:x 23
-    * set :drawText.43:y :updateDisplay:y
-    * set :drawText.43:alignment @bottomLeft
+ 1136 set :drawText.43:y 20
  1137 print "Power"
-    * draw print 23 :drawTitleRow.6:y :drawTitleRow.6:alignment
+ 1138 draw print 23 20 @bottomLeft
  1139 label *label213
-    * op sub :drawTitleRow.6:y :updateDisplay:y 15
+ 1140 op sub :drawTitleRow.6:y 20 15
  1141 label *label211
-    * set :updateDisplay:y :drawTitleRow.6:y
+ 1142 set :updateDisplay:y 5
  1143 sensor :drawPower:power AJTJK-battery1 @totalPower
  1144 op mul *tmp474 :drawPower:power 100
  1145 op idiv *tmp476 *tmp474 4000
-    * set :drawItemColor.15:color1 %808000FF
-    * set :drawItemColor.15:color2 %FFFF00FF
-    * set :drawItemColor.15:col 0
-    * set :drawItemColor.15:y :drawTitleRow.6:y
-    * set :drawItemColor.15:columns 1
-    * set :drawItemColor.15:item @battery
-    * set :drawItemColor.15:current :drawPower:power
-    * set :drawItemColor.15:target 4000
-    * op mul *tmp477 1 176
-    * op div *tmp478 176 2
-    * op sub :drawItemColor.15:barLength 214 88
-    * op add :drawItemColor.15:textEnd 48 126
+ 1146 set :drawItemColor.15:y 5
  1147 op mul *tmp481 126 :drawPower:power
-    * op div *tmp482 *tmp481 4000
+ 1148 op mul *tmp482 :drawPower:power 0.0315
  1149 op min :drawItemColor.15:length 126 *tmp482
-    * op mul *tmp484 0 176
-    * op div *tmp485 0 2
-    * op add :drawItemColor.15:iconX 11 0
-    * op mul *tmp487 0 176
-    * op div *tmp488 0 2
-    * op add :drawItemColor.15:barX 22 0
-    * op mul *tmp490 0 176
-    * op div *tmp491 0 2
  1150 op add :drawItemColor.15:textX 174 0
  1151 draw col %[white]
-    * op add *tmp493 :updateDisplay:y 5
+ 1152 op add *tmp493 :drawTitleRow.6:y 5
  1153 draw image 11 *tmp493 @battery 16 0
  1154 draw col %808000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.15:length 10
+ 1155 draw rect 22 :drawTitleRow.6:y :drawItemColor.15:length 10
  1156 draw col %FFFF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp494 :updateDisplay:y 5
-    * op add *tmp495 *tmp493 2
+ 1157 draw lineRect 22 :drawTitleRow.6:y 126 10
+ 1158 op add *tmp494 :drawTitleRow.6:y 5
+ 1159 op add *tmp495 :updateDisplay:y 7
  1160 set :drawBold.15:x 174
  1161 set :drawBold.15:y *tmp495
  1162 set :drawBold.15:alignment @right
-    * set :drawText.44:x :drawItemColor.15:textX
-    * set :drawText.44:y *tmp495
-    * set :drawText.44:alignment @right
+ 1163 set :drawText.44:x 174
  1164 print *tmp476
  1165 print "%"
-    * draw print :drawBold.15:x :drawBold.15:y :drawBold.15:alignment
+ 1166 draw print 174 *tmp495 @right
  1167 label *label216
-    * op add :drawText.45:x :drawItemColor.15:textX 1
-    * set :drawText.45:y *tmp495
-    * set :drawText.45:alignment @right
+ 1168 op add :drawText.45:x 174 1
  1169 print *tmp476
  1170 print "%"
-    * draw print :drawText.45:x :drawBold.15:y :drawBold.15:alignment
+ 1171 draw print 175 *tmp495 @right
  1172 label *label217
  1173 label *label215
-    * op add :drawItemColor.15:col 0 1
  1174 jump *label218 lessThan 1 1
-    * op sub :drawItemColor.15:y :updateDisplay:y 15
+ 1175 op sub :drawItemColor.15:y :drawTitleRow.6:y 15
  1176 label *label218
  1177 label *label219
  1178 label *label214
 
  1184 label *label21
  1185 jump *label220 notEqual .page 1
  1186 read :displayStorage:tail bank2 510
-    * set :displayStorage:START 190
  1187 jump *label223 equal .pageSwitched false
  1188 read .lastTail bank2 511
  1189 draw col %[gold]
  1190 set :drawBold.16:x 11
  1191 set :drawBold.16:y 206
  1192 set :drawBold.16:alignment @left
-    * set :drawText.46:x 11
-    * set :drawText.46:y 206
-    * set :drawText.46:alignment @left
  1193 print "Resources"
-    * draw print :drawBold.16:x :drawBold.16:y :drawBold.16:alignment
+ 1194 draw print 11 206 @left
  1195 label *label226
-    * op add :drawText.47:x 11 1
-    * set :drawText.47:y 206
-    * set :drawText.47:alignment @left
  1196 print "Resources"
-    * draw print 12 :drawBold.16:y :drawBold.16:alignment
+ 1197 draw print 12 206 @left
  1198 label *label227
  1199 label *label225
  1200 draw col %[white]
 
  1282 call *label7 *invalid :drawHeader*retval (m:*label251) (h:*label251)
  1283 label *label251
  1284 set :displayBaseMap:limit 0
-    * set :setBaseMapScale:size 220
  1285 draw reset
  1286 draw translate 90 105
-    * op div *tmp520 220 15
-    * op div *tmp521 14.666666666666666 2
-    * op div *tmp522 220 15
-    * op div *tmp523 14.666666666666666 2
  1287 draw scale 7.333333333333333 7.333333333333333
  1288 label *label252
  1289 jump *label253 equal .pageSwitched false
 
  1293 set :drawBold.17:x 90
  1294 set :drawBold.17:y 206
  1295 set :drawBold.17:alignment @center
-    * set :drawText.48:x 90
-    * set :drawText.48:y 206
-    * set :drawText.48:alignment @center
  1296 print "Base map"
-    * draw print :drawBold.17:x :drawBold.17:y :drawBold.17:alignment
+ 1297 draw print 90 206 @center
  1298 label *label256
-    * op add :drawText.49:x 90 1
-    * set :drawText.49:y 206
-    * set :drawText.49:alignment @center
  1299 print "Base map"
-    * draw print 91 :drawBold.17:y :drawBold.17:alignment
+ 1300 draw print 91 206 @center
  1301 label *label257
  1302 label *label255
-    * set :setBaseMapScale.1:size 220
  1303 draw reset
  1304 draw translate 90 105
-    * op div *tmp526 220 15
-    * op div *tmp527 14.666666666666666 2
-    * op div *tmp528 220 15
-    * op div *tmp529 14.666666666666666 2
  1305 draw scale 7.333333333333333 7.333333333333333
  1306 label *label258
  1307 draw col %[white]
 
  1465 setaddr :drawHeader*retaddr *label304 (h:*label304)
  1466 call *label7 *invalid :drawHeader*retval (m:*label304) (h:*label304)
  1467 label *label304
-    * set :setBaseMapScale.2:size 220
  1468 draw reset
  1469 draw translate 90 105
-    * op div *tmp537 220 15
-    * op div *tmp538 14.666666666666666 2
-    * op div *tmp539 220 15
-    * op div *tmp540 14.666666666666666 2
  1470 draw scale 7.333333333333333 7.333333333333333
  1471 label *label305
  1472 set :displayBaseMap:counter 0
 
  1510 label *label248
  1511 op sub :displayLog:page .page 3
  1512 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1513 op sub *tmp555 510 :displayLog:logPosition
  1514 op idiv *tmp556 *tmp555 39
  1515 op add *tmp557 *tmp556 1
 
  1524 set :drawBold.18:x 4
  1525 set :drawBold.18:y 206
  1526 set :drawBold.18:alignment @left
-    * set :drawText.50:x 4
-    * set :drawText.50:y 206
-    * set :drawText.50:alignment @left
  1527 print "Build records"
-    * draw print :drawBold.18:x :drawBold.18:y :drawBold.18:alignment
+ 1528 draw print 4 206 @left
  1529 label *label319
-    * op add :drawText.51:x 4 1
-    * set :drawText.51:y 206
-    * set :drawText.51:alignment @left
  1530 print "Build records"
-    * draw print 5 :drawBold.18:y :drawBold.18:alignment
+ 1531 draw print 5 206 @left
  1532 label *label320
  1533 label *label318
  1534 op sub *tmp566 .page 2
  1535 print *tmp566
  1536 print "/"
-    * set :drawText.52:x 172
-    * set :drawText.52:y 206
-    * set :drawText.52:alignment @right
  1537 print :displayLog:pages
  1538 draw print 172 206 @right
  1539 label *label321
 
  1543 setaddr :drawHeader*retaddr *label322 (h:*label322)
  1544 call *label7 *invalid :drawHeader*retval (m:*label322) (h:*label322)
  1545 label *label322
-    * set *tmp567 :displayLog:stop
  1546 op sub :displayLog:position .lastRecord 1
  1547 label *label323
  1548 jump *label325 lessThan :displayLog:position :displayLog:stop
  1549 read :displayLog:record bank1 :displayLog:position
  1550 op sub *tmp570 :displayLog:start :displayLog:position
  1551 op sub *tmp571 *tmp570 1
-    * set :displayRecord:record :displayLog:record
-    * set :displayRecord:index *tmp571
  1552 op idiv :displayRecord:col *tmp571 13
  1553 op mod :displayRecord:row *tmp571 13
  1554 op mul *tmp574 58 :displayRecord:col
 
  1563 label *label327
  1564 lookup block *tmp580 :displayRecord:id
  1565 label *label328
-    * set :displayRecord:icon *tmp580
  1566 op div *tmp584 :displayLog:record 1000
  1567 op idiv :displayRecord:t *tmp584 120
  1568 op idiv :displayRecord:m :displayRecord:t 60
 
  1577 print ":"
  1578 print *tmp590
  1579 draw image :displayRecord:x :displayRecord:y *tmp580 14 0
-    * op add *tmp591 :displayRecord:x 56
  1580 op add *tmp592 :displayRecord:x 44
  1581 op add *tmp593 :displayRecord:y 2
-    * set :drawText.53:x *tmp592
-    * set :drawText.53:y *tmp593
-    * set :drawText.53:alignment @right
  1582 print :displayRecord:s
  1583 draw print *tmp592 *tmp593 @right
  1584 label *label331
 
  1660 label *label342
  1661 set *tmp613 ""
  1662 label *label343
-    * set :drawHeader:zero *tmp613
  1663 set :drawBold.19:x 25
  1664 set :drawBold.19:y 71
  1665 set :drawBold.19:alignment @center
-    * set :drawText.54:x 25
-    * set :drawText.54:y 71
-    * set :drawText.54:alignment @center
  1666 print :drawHeader:m
  1667 print ":"
  1668 print *tmp613
  1669 print :drawHeader:s
-    * draw print :drawBold.19:x :drawBold.19:y :drawBold.19:alignment
+ 1670 draw print 25 71 @center
  1671 label *label345
-    * op add :drawText.55:x 25 1
-    * set :drawText.55:y 71
-    * set :drawText.55:alignment @center
  1672 print :drawHeader:m
  1673 print ":"
  1674 print *tmp613
  1675 print :drawHeader:s
-    * draw print 26 :drawBold.19:y :drawBold.19:alignment
+ 1676 draw print 26 71 @center
  1677 label *label346
  1678 label *label344
  1679 draw col %[white]
 
  1684 set :drawBold.20:x 42
  1685 set :drawBold.20:y 261
  1686 set :drawBold.20:alignment @bottom
-    * set :drawText.56:x 42
-    * set :drawText.56:y 261
-    * set :drawText.56:alignment @bottom
  1687 print "Goal"
-    * draw print :drawBold.20:x :drawBold.20:y :drawBold.20:alignment
+ 1688 draw print 42 261 @bottom
  1689 label *label348
-    * op add :drawText.57:x 42 1
-    * set :drawText.57:y 261
-    * set :drawText.57:alignment @bottom
  1690 print "Goal"
-    * draw print 43 :drawBold.20:y :drawBold.20:alignment
+ 1691 draw print 43 261 @bottom
  1692 label *label349
  1693 label *label347
  1694 draw col %[white]
 
  1783 print *tmp641
  1784 print "."
  1785 print *tmp642
-    * set :drawText.58:x 174
-    * set :drawText.58:y 272
-    * set :drawText.58:alignment @topRight
  1786 print ")"
  1787 draw print 174 272 @topRight
  1788 label *label378
 
  1791 set :drawHeader:x.1 174
  1792 op log10 *tmp646 :drawHeader:count.1
  1793 op floor :drawHeader:len *tmp646
-    * set :drawText.59:x 174
-    * set :drawText.59:y 255
-    * set :drawText.59:alignment @topRight
  1794 print "x"
  1795 print :drawHeader:count.1
-    * draw print :drawHeader:x.1 255 @topRight
+ 1796 draw print 174 255 @topRight
  1797 label *label381
-    * op sub *tmp648 174 20
  1798 op mul *tmp649 7 :drawHeader:len
  1799 op sub *tmp650 154 *tmp649
  1800 draw image *tmp650 246 @scrap 12 0
 
  1802 set :drawHeader:x.1 124
  1803 op log10 *tmp652 :drawHeader:count.1
  1804 op floor :drawHeader:len *tmp652
-    * set :drawText.60:x 124
-    * set :drawText.60:y 255
-    * set :drawText.60:alignment @topRight
  1805 print "x"
  1806 print :drawHeader:count.1
-    * draw print :drawHeader:x.1 255 @topRight
+ 1807 draw print 124 255 @topRight
  1808 label *label382
-    * op sub *tmp654 124 20
  1809 op mul *tmp655 7 :drawHeader:len
  1810 op sub *tmp656 104 *tmp655
  1811 draw image *tmp656 246 @sand 12 0
 
  1817 set :drawHeader:x.2 174
  1818 op log10 *tmp660 :drawHeader:count.2
  1819 op floor :drawHeader:len.1 *tmp660
-    * set :drawText.61:x 174
-    * set :drawText.61:y 255
-    * set :drawText.61:alignment @topRight
  1820 print "x"
  1821 print :drawHeader:count.2
-    * draw print :drawHeader:x.2 255 @topRight
+ 1822 draw print 174 255 @topRight
  1823 label *label385
-    * op sub *tmp662 174 20
  1824 op mul *tmp663 7 :drawHeader:len.1
  1825 op sub *tmp664 154 *tmp663
  1826 draw image *tmp664 246 @titanium 12 0
 
  1831 set :drawHeader:x.3 124
  1832 op log10 *tmp667 :drawHeader:count.3
  1833 op floor :drawHeader:len.2 *tmp667
-    * set :drawText.62:x 124
-    * set :drawText.62:y 255
-    * set :drawText.62:alignment @topRight
  1834 print "x"
  1835 print :drawHeader:count.3
-    * draw print :drawHeader:x.3 255 @topRight
+ 1836 draw print 124 255 @topRight
  1837 label *label388
-    * op sub *tmp669 124 20
  1838 op mul *tmp670 7 :drawHeader:len.2
  1839 op sub *tmp671 104 *tmp670
  1840 draw image *tmp671 246 @thorium 12 0
 
  1843 label *label380
  1844 set :drawHeader:x.4 174
  1845 draw col %[white]
-    * set :drawUnitCount:type @poly
  1846 set :drawUnitCount:count .polys
  1847 jump *label390 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp674 174 20
  1848 draw image 154 227 @poly 12 0
-    * set :drawText.63:x 174
-    * set :drawText.63:y 229
-    * set :drawText.63:alignment @right
  1849 print "x"
  1850 print :drawUnitCount:count
-    * draw print :drawHeader:x.4 229 @right
+ 1851 draw print 174 229 @right
  1852 label *label392
  1853 op sub :drawHeader:x.4 174 30
  1854 label *label390
  1855 label *label391
  1856 label *label389
-    * set :drawUnitCount.1:type @mono
  1857 set :drawUnitCount.1:count .monos
  1858 jump *label394 lessThanEq :drawUnitCount.1:count 0
  1859 op sub *tmp677 :drawHeader:x.4 20
  1860 draw image *tmp677 227 @mono 12 0
-    * set :drawText.64:x :drawHeader:x.4
-    * set :drawText.64:y 229
-    * set :drawText.64:alignment @right
  1861 print "x"
  1862 print :drawUnitCount.1:count
  1863 draw print :drawHeader:x.4 229 @right
 
  1866 label *label394
  1867 label *label395
  1868 label *label393
-    * set :drawUnitCount.2:type @flare
  1869 set :drawUnitCount.2:count .flares
  1870 jump *label398 lessThanEq :drawUnitCount.2:count 0
  1871 op sub *tmp680 :drawHeader:x.4 20
  1872 draw image *tmp680 227 @flare 12 0
-    * set :drawText.65:x :drawHeader:x.4
-    * set :drawText.65:y 229
-    * set :drawText.65:alignment @right
  1873 print "x"
  1874 print :drawUnitCount.2:count
  1875 draw print :drawHeader:x.4 229 @right
 
  1883 end
  1884 label *label8
  1885 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 1
  1886 set *tmp681 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp682 :unpackCfg2:cfg *tmp681
+ 1887 read *tmp682 :drawBlock:cfg 1
  1888 op sub *tmp683 *tmp682 74
  1889 lookup block :unpackCfg:type *tmp683
  1890 set *tmp685 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp686 :unpackCfg2:cfg *tmp685
+ 1891 read *tmp686 :drawBlock:cfg 2
  1892 op sub *tmp687 *tmp686 74
  1893 op div :unpackCfg:x *tmp687 2
  1894 set *tmp689 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp690 :unpackCfg2:cfg *tmp689
+ 1895 read *tmp690 :drawBlock:cfg 3
  1896 op sub *tmp691 *tmp690 74
  1897 op div :unpackCfg:y *tmp691 2
  1898 set *tmp693 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp694 :unpackCfg2:cfg *tmp693
+ 1899 read *tmp694 :drawBlock:cfg 4
  1900 op sub :unpackCfg:rotation *tmp694 74
  1901 set *tmp696 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp697 :unpackCfg2:cfg *tmp696
+ 1902 read *tmp697 :drawBlock:cfg 5
  1903 op sub :unpackCfg:ind *tmp697 74
  1904 sensor :unpackCfg:size :unpackCfg:type @size
  1905 label *label403
 
  1910 set :unpackCfg2:size :unpackCfg:size
  1911 set :unpackCfg2:index :unpackCfg:ind
  1912 label *label402
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
-    * jump *label404 notEqual :unpackCfg2:index .nextBuildIndex
+ 1913 jump *label404 notEqual :unpackCfg:ind .nextBuildIndex
  1914 draw col %80ffffff
  1915 jump *label405 always
  1916 label *label404
-    * op shl *tmp709 1 :unpackCfg2:index
+ 1917 op shl *tmp709 1 :unpackCfg:ind
  1918 op and :drawBlock:built .blocksBuilt *tmp709
  1919 op add *tmp711 :drawBlock:built .pageSwitched
  1920 jump *label406 notEqual *tmp711 0
 
  1929 label *label409
  1930 draw col *tmp714
  1931 label *label405
-    * op mul *tmp715 2 :unpackCfg2:x
-    * op mul *tmp716 2 :unpackCfg2:y
-    * op mul *tmp717 2 :unpackCfg2:size
-    * op mul *tmp718 90 :unpackCfg2:rotation
-    * draw image *tmp715 *tmp716 :unpackCfg2:type *tmp717 *tmp718
+ 1932 op mul *tmp715 2 :unpackCfg:x
+ 1933 op mul *tmp716 2 :unpackCfg:y
+ 1934 op mul *tmp717 2 :unpackCfg:size
+ 1935 op mul *tmp718 90 :unpackCfg:rotation
+ 1936 draw image *tmp715 *tmp716 :unpackCfg:type *tmp717 *tmp718
  1937 label *label401
  1938 return :drawBlock*retaddr
  1939 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-460 instructions):
 
    71 op equal *tmp76 .nextBlock @ore-titanium
    72 op or *tmp77 *tmp75 *tmp76
    73 jump *label37 equal *tmp77 false
-    * set :drawTitleRow:y 201
-    * set :drawTitleRow:alignment @bottomLeft
-    * set :drawText:y 201
    74 print "Locating ore..."
    75 draw print 22 201 @bottomLeft
    76 label *label40
-    * set :drawText.1:y 201
    77 print "Locating ore..."
    78 draw print 23 201 @bottomLeft
    79 label *label41
    80 op sub :drawTitleRow:y 201 15
    81 label *label39
-    * set :updateDisplay:y 186
-    * set :drawItem:col 0
    82 set :drawItem:y 186
-    * set :drawItem:columns 1
    83 set :drawItem:item .nextBlock
    84 read :drawItem:current processor3 ".mapProgress"
    85 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:col 0
-    * set :drawItemColor:y :drawTitleRow:y
-    * set :drawItemColor:columns 1
-    * op mul *tmp79 1 176
-    * op mul *tmp80 1 88
-    * op sub :drawItemColor:barLength 214 88
-    * op add :drawItemColor:textEnd 48 126
+   86 set :drawItemColor:y 186
    87 op mul *tmp83 126 :drawItem:current
    88 op div *tmp84 *tmp83 :drawItem:target
    89 op min :drawItemColor:length 126 *tmp84
-    * op mul *tmp86 0 176
-    * op mul *tmp87 0 88
-    * op add :drawItemColor:iconX 11 0
-    * op mul *tmp89 0 176
-    * op div *tmp90 0 2
-    * op add :drawItemColor:barX 22 0
-    * op mul *tmp92 0 176
-    * op div *tmp93 0 2
    90 op add :drawItemColor:textX 174 0
    91 draw col %[white]
-    * op add *tmp95 :drawTitleRow:y 5
-    * draw image 11 *tmp95 :drawItem:item 16 0
+   92 op add *tmp95 186 5
+   93 draw image 11 191 :drawItem:item 16 0
    94 draw col %008000FF
-    * draw rect 22 :drawTitleRow:y :drawItemColor:length 10
+   95 draw rect 22 186 :drawItemColor:length 10
    96 draw col %00FF00FF
-    * draw lineRect 22 :drawTitleRow:y 126 10
-    * op add *tmp96 :drawTitleRow:y 5
-    * op add *tmp97 :drawItem:y 7
-    * set :drawBold:x 174
-    * set :drawBold:y *tmp97
-    * set :drawBold:alignment @right
-    * set :drawText.2:x 174
+   97 draw lineRect 22 186 126 10
+   98 op add *tmp96 186 5
+   99 op add *tmp97 186 7
+  100 set :drawBold:y 193
   101 print "x"
   102 read *tmp98 processor3 ".mapSpots"
   103 print *tmp98
-    * draw print :drawItemColor:textX *tmp97 @right
+  104 draw print 174 193 @right
   105 label *label45
-    * op add :drawText.3:x 174 1
   106 print "x"
   107 read *tmp100 processor3 ".mapSpots"
   108 print *tmp100
-    * draw print 175 *tmp97 @right
+  109 draw print 175 193 @right
   110 label *label46
   111 label *label44
-    * op add :drawItemColor:col 0 1
   112 jump *label47 lessThan 1 1
-    * op sub :drawItemColor:y :drawTitleRow:y 15
+  113 op sub :drawItemColor:y 186 15
   114 label *label47
   115 label *label48
   116 label *label43
-    * set :drawItem:y :drawItemColor:y
+  117 set :drawItem:y 171
   118 label *label42
-    * op sub :updateDisplay:y :drawItemColor:y 35
+  119 op sub :updateDisplay:y 171 35
   120 jump *label38 always
   121 label *label37
   122 jump *label49 equal .nextBlock null
   123 set :drawMaterials:count .totalTargets
-    * set :drawTitleRow.1:y 201
-    * set :drawTitleRow.1:alignment @bottomLeft
-    * set :drawText.4:y 201
   124 print "Materials"
   125 draw print 22 201 @bottomLeft
   126 label *label52
-    * set :drawText.5:y 201
   127 print "Materials"
   128 draw print 23 201 @bottomLeft
   129 label *label53
-    * op sub :drawTitleRow.1:y 201 15
   130 label *label51
   131 set :updateDisplay:y 186
   132 set :drawMaterials:columns 1
 
   169 sensor *tmp110 .core :drawMaterials:item
   170 set :drawItem.1:col :drawMaterials:col
   171 set :drawItem.1:y :updateDisplay:y
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:item
-    * set :drawItem.1:current *tmp110
-    * set :drawItem.1:target :drawMaterials:target
-    * set :drawItemColor.1:col :drawMaterials:col
   172 set :drawItemColor.1:y :updateDisplay:y
-    * set :drawItemColor.1:columns 1
-    * op mul *tmp111 1 176
-    * op mul *tmp112 :drawMaterials:columns 88
-    * op sub :drawItemColor.1:barLength 214 *tmp112
-    * op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength *tmp110
+  173 op mul *tmp112 1 88
+  174 op sub :drawItemColor.1:barLength 214 88
+  175 op add :drawItemColor.1:textEnd 48 126
+  176 op mul *tmp115 126 *tmp110
   177 op div *tmp116 *tmp115 :drawMaterials:target
-    * op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawMaterials:col 176
+  178 op min :drawItemColor.1:length 126 *tmp116
   179 op mul *tmp119 :drawMaterials:col 88
   180 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawMaterials:col 176
-    * op mul *tmp122 :drawItem.1:col 88
+  181 op mul *tmp122 :drawMaterials:col 88
   182 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp124 :drawMaterials:col 176
-    * op mul *tmp125 :drawItem.1:col 88
-    * op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
+  183 op mul *tmp125 :drawMaterials:col 88
+  184 op add :drawItemColor.1:textX 174 *tmp119
   185 draw col %[white]
   186 op add *tmp127 :updateDisplay:y 5
   187 draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0
   188 draw col %008000FF
   189 draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10
   190 draw col %00FF00FF
-    * draw lineRect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :updateDisplay:y 5
-    * op add *tmp129 :drawItem.1:y 7
-    * set :drawBold.1:x :drawItemColor.1:textX
-    * set :drawBold.1:y *tmp129
-    * set :drawBold.1:alignment @right
+  191 draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10
+  192 op add *tmp129 :updateDisplay:y 7
   193 print :drawMaterials:target
   194 draw print :drawItemColor.1:textX *tmp129 @right
   195 label *label71
 
   237 label *label80
   238 label *label81
   239 draw col %[white]
-    * set :drawTitleRow.2:y :updateDisplay:y
-    * set :drawTitleRow.2:alignment @bottomLeft
   240 print "Air Factory"
   241 draw print 22 :updateDisplay:y @bottomLeft
   242 label *label83
 
   245 label *label84
   246 op sub :drawTitleRow.2:y :updateDisplay:y 15
   247 label *label82
-    * set :updateDisplay:y :drawTitleRow.2:y
   248 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   249 jump *label85 notEqual :drawAirFactory:progress 0
   250 jump *label87 notEqual .nextFactory @flare
   251 sensor *tmp146 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.2:col 0
   252 set :drawItem.2:y :drawTitleRow.2:y
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item @silicon
-    * set :drawItem.2:current *tmp146
-    * set :drawItem.2:target 15
-    * set :drawItemColor.2:col 0
-    * set :drawItemColor.2:y :drawTitleRow.2:y
-    * set :drawItemColor.2:columns 1
-    * op mul *tmp147 1 176
-    * op mul *tmp148 1 88
-    * op sub :drawItemColor.2:barLength 214 88
-    * op add :drawItemColor.2:textEnd 48 126
   253 op mul *tmp151 126 *tmp146
-    * op div *tmp152 *tmp151 15
+  254 op mul *tmp152 *tmp146 8.4
   255 op min :drawItemColor.2:length 126 *tmp152
-    * op mul *tmp154 0 176
-    * op mul *tmp155 0 88
-    * op add :drawItemColor.2:iconX 11 0
-    * op mul *tmp157 0 176
-    * op div *tmp158 0 2
-    * op add :drawItemColor.2:barX 22 0
-    * op mul *tmp160 0 176
-    * op div *tmp161 0 2
   256 op add :drawItemColor.2:textX 174 0
   257 draw col %[white]
   258 op add *tmp163 :drawTitleRow.2:y 5
 
   261 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   262 draw col %00FF00FF
   263 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp164 :drawTitleRow.2:y 5
-    * op add *tmp165 :drawItem.2:y 7
-    * set :drawBold.2:x 174
-    * set :drawBold.2:y *tmp165
-    * set :drawBold.2:alignment @right
-    * set :drawText.10:x 174
+  264 op add *tmp165 :drawTitleRow.2:y 7
   265 print 15
-    * draw print :drawItemColor.2:textX *tmp165 @right
+  266 draw print 174 *tmp165 @right
   267 label *label92
-    * op add :drawText.11:x 174 1
   268 print 15
   269 draw print 175 *tmp165 @right
   270 label *label93
   271 label *label91
-    * op add :drawItemColor.2:col 0 1
   272 jump *label94 lessThan 1 1
   273 op sub :drawItemColor.2:y :drawTitleRow.2:y 15
   274 label *label94
   275 label *label95
   276 label *label90
-    * set :drawItem.2:y :drawItemColor.2:y
   277 label *label89
-    * op sub :updateDisplay:y :drawItemColor.2:y 15
+  278 op sub :updateDisplay:y :drawTitleRow.2:y 30
   279 jump *label88 always
   280 label *label87
   281 sensor *tmp169 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:col 0
   282 set :drawItem.3:y :drawTitleRow.2:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item @lead
-    * set :drawItem.3:current *tmp169
-    * set :drawItem.3:target 15
-    * set :drawItemColor.3:col 0
-    * set :drawItemColor.3:y :drawTitleRow.2:y
-    * set :drawItemColor.3:columns 1
-    * op mul *tmp170 1 176
-    * op mul *tmp171 1 88
-    * op sub :drawItemColor.3:barLength 214 88
-    * op add :drawItemColor.3:textEnd 48 126
   283 op mul *tmp174 126 *tmp169
-    * op div *tmp175 *tmp174 15
+  284 op mul *tmp175 *tmp169 8.4
   285 op min :drawItemColor.3:length 126 *tmp175
-    * op mul *tmp177 0 176
-    * op mul *tmp178 0 88
-    * op add :drawItemColor.3:iconX 11 0
-    * op mul *tmp180 0 176
-    * op div *tmp181 0 2
-    * op add :drawItemColor.3:barX 22 0
-    * op mul *tmp183 0 176
-    * op div *tmp184 0 2
   286 op add :drawItemColor.3:textX 174 0
   287 draw col %[white]
   288 op add *tmp186 :drawTitleRow.2:y 5
 
   291 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   292 draw col %00FF00FF
   293 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp187 :drawTitleRow.2:y 5
-    * op add *tmp188 :drawItem.3:y 7
-    * set :drawBold.3:x 174
-    * set :drawBold.3:y *tmp188
-    * set :drawBold.3:alignment @right
-    * set :drawText.12:x 174
+  294 op add *tmp188 :drawTitleRow.2:y 7
   295 print 15
-    * draw print :drawItemColor.3:textX *tmp188 @right
+  296 draw print 174 *tmp188 @right
   297 label *label99
-    * op add :drawText.13:x 174 1
   298 print 15
   299 draw print 175 *tmp188 @right
   300 label *label100
   301 label *label98
-    * op add :drawItemColor.3:col 0 1
   302 jump *label101 lessThan 1 1
   303 op sub :drawItemColor.3:y :drawTitleRow.2:y 15
   304 label *label101
 
   306 label *label97
   307 set :drawItem.3:y :drawItemColor.3:y
   308 label *label96
-    * set :updateDisplay:y :drawItemColor.3:y
   309 sensor *tmp192 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.4:col 0
   310 set :drawItem.4:y :drawItemColor.3:y
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @silicon
-    * set :drawItem.4:current *tmp192
-    * set :drawItem.4:target 30
-    * set :drawItemColor.4:col 0
-    * set :drawItemColor.4:y :drawItemColor.3:y
-    * set :drawItemColor.4:columns 1
-    * op mul *tmp193 1 176
-    * op mul *tmp194 1 88
-    * op sub :drawItemColor.4:barLength 214 88
-    * op add :drawItemColor.4:textEnd 48 126
   311 op mul *tmp197 126 *tmp192
-    * op div *tmp198 *tmp197 30
+  312 op mul *tmp198 *tmp192 4.2
   313 op min :drawItemColor.4:length 126 *tmp198
-    * op mul *tmp200 0 176
-    * op mul *tmp201 0 88
-    * op add :drawItemColor.4:iconX 11 0
-    * op mul *tmp203 0 176
-    * op div *tmp204 0 2
-    * op add :drawItemColor.4:barX 22 0
-    * op mul *tmp206 0 176
-    * op div *tmp207 0 2
   314 op add :drawItemColor.4:textX 174 0
   315 draw col %[white]
-    * op add *tmp209 :drawItem.3:y 5
+  316 op add *tmp209 :drawItemColor.3:y 5
   317 draw image 11 *tmp209 @silicon 16 0
   318 draw col %008000FF
-    * draw rect 22 :drawItem.3:y :drawItemColor.4:length 10
+  319 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   320 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.3:y 126 10
-    * op add *tmp210 :drawItem.3:y 5
-    * op add *tmp211 :drawItem.4:y 7
-    * set :drawBold.4:x 174
-    * set :drawBold.4:y *tmp211
-    * set :drawBold.4:alignment @right
-    * set :drawText.14:x 174
+  321 draw lineRect 22 :drawItemColor.3:y 126 10
+  322 op add *tmp210 :drawItemColor.3:y 5
+  323 op add *tmp211 :drawItemColor.3:y 7
   324 print 30
-    * draw print :drawItemColor.4:textX *tmp211 @right
+  325 draw print 174 *tmp211 @right
   326 label *label106
-    * op add :drawText.15:x 174 1
   327 print 30
   328 draw print 175 *tmp211 @right
   329 label *label107
   330 label *label105
-    * op add :drawItemColor.4:col 0 1
   331 jump *label108 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawItem.3:y 15
+  332 op sub :drawItemColor.4:y :drawItemColor.3:y 15
   333 label *label108
   334 label *label109
   335 label *label104
 
   339 jump *label86 always
   340 label *label85
   341 op idiv *tmp216 :drawAirFactory:progress 0.01
-    * set :drawItem.5:col 0
   342 set :drawItem.5:y :drawTitleRow.2:y
-    * set :drawItem.5:columns 1
   343 set :drawItem.5:item .nextFactory
-    * set :drawItem.5:current :drawAirFactory:progress
-    * set :drawItem.5:target 1
-    * set :drawItemColor.5:col 0
-    * set :drawItemColor.5:y :drawTitleRow.2:y
-    * set :drawItemColor.5:columns 1
-    * op mul *tmp217 1 176
-    * op mul *tmp218 1 88
-    * op sub :drawItemColor.5:barLength 214 88
-    * op add :drawItemColor.5:textEnd 48 126
   344 op mul *tmp221 126 :drawAirFactory:progress
-    * op div *tmp222 *tmp221 1
+  345 op mul *tmp222 :drawAirFactory:progress 126
   346 op min :drawItemColor.5:length 126 *tmp222
-    * op mul *tmp224 0 176
-    * op mul *tmp225 0 88
-    * op add :drawItemColor.5:iconX 11 0
-    * op mul *tmp227 0 176
-    * op div *tmp228 0 2
-    * op add :drawItemColor.5:barX 22 0
-    * op mul *tmp230 0 176
-    * op div *tmp231 0 2
   347 op add :drawItemColor.5:textX 174 0
   348 draw col %[white]
   349 op add *tmp233 :drawTitleRow.2:y 5
 
   352 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   353 draw col %00FF00FF
   354 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp234 :drawTitleRow.2:y 5
-    * op add *tmp235 :drawItem.5:y 7
-    * set :drawBold.5:x 174
-    * set :drawBold.5:y *tmp235
-    * set :drawBold.5:alignment @right
-    * set :drawText.16:x 174
+  355 op add *tmp235 :drawTitleRow.2:y 7
   356 print *tmp216
   357 print "%"
-    * draw print :drawItemColor.5:textX *tmp235 @right
+  358 draw print 174 *tmp235 @right
   359 label *label113
-    * op add :drawText.17:x 174 1
   360 print *tmp216
   361 print "%"
   362 draw print 175 *tmp235 @right
   363 label *label114
   364 label *label112
-    * op add :drawItemColor.5:col 0 1
   365 jump *label115 lessThan 1 1
   366 op sub :drawItemColor.5:y :drawTitleRow.2:y 15
   367 label *label115
   368 label *label116
   369 label *label111
-    * set :drawItem.5:y :drawItemColor.5:y
   370 label *label110
-    * op sub :updateDisplay:y :drawItemColor.5:y 15
+  371 op sub :updateDisplay:y :drawTitleRow.2:y 30
   372 label *label86
   373 op sub :updateDisplay:y :updateDisplay:y 5
   374 label *label79
 
   377 label *label118
   378 label *label119
   379 draw col %[white]
-    * set :drawTitleRow.3:y :updateDisplay:y
-    * set :drawTitleRow.3:alignment @bottomLeft
   380 print "Reconstructor"
   381 draw print 22 :updateDisplay:y @bottomLeft
   382 label *label121
 
   385 label *label122
   386 op sub :drawTitleRow.3:y :updateDisplay:y 15
   387 label *label120
-    * set :updateDisplay:y :drawTitleRow.3:y
   388 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   389 jump *label123 notEqual :drawAddReco:progress 0
   390 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
-    * set :drawItem.6:col 0
   391 set :drawItem.6:y :drawTitleRow.3:y
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @graphite
-    * set :drawItem.6:current *tmp244
-    * set :drawItem.6:target 40
-    * set :drawItemColor.6:col 0
-    * set :drawItemColor.6:y :drawTitleRow.3:y
-    * set :drawItemColor.6:columns 1
-    * op mul *tmp245 1 176
-    * op mul *tmp246 1 88
-    * op sub :drawItemColor.6:barLength 214 88
-    * op add :drawItemColor.6:textEnd 48 126
   392 op mul *tmp249 126 *tmp244
-    * op div *tmp250 *tmp249 40
+  393 op mul *tmp250 *tmp244 3.1500000000000004
   394 op min :drawItemColor.6:length 126 *tmp250
-    * op mul *tmp252 0 176
-    * op mul *tmp253 0 88
-    * op add :drawItemColor.6:iconX 11 0
-    * op mul *tmp255 0 176
-    * op div *tmp256 0 2
-    * op add :drawItemColor.6:barX 22 0
-    * op mul *tmp258 0 176
-    * op div *tmp259 0 2
   395 op add :drawItemColor.6:textX 174 0
   396 draw col %[white]
   397 op add *tmp261 :drawTitleRow.3:y 5
 
   400 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   401 draw col %00FF00FF
   402 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp262 :drawTitleRow.3:y 5
-    * op add *tmp263 :drawItem.6:y 7
-    * set :drawBold.6:x 174
-    * set :drawBold.6:y *tmp263
-    * set :drawBold.6:alignment @right
-    * set :drawText.20:x 174
+  403 op add *tmp263 :drawTitleRow.3:y 7
   404 print 40
-    * draw print :drawItemColor.6:textX *tmp263 @right
+  405 draw print 174 *tmp263 @right
   406 label *label128
-    * op add :drawText.21:x 174 1
   407 print 40
   408 draw print 175 *tmp263 @right
   409 label *label129
   410 label *label127
-    * op add :drawItemColor.6:col 0 1
   411 jump *label130 lessThan 1 1
   412 op sub :drawItemColor.6:y :drawTitleRow.3:y 15
   413 label *label130
 
   415 label *label126
   416 set :drawItem.6:y :drawItemColor.6:y
   417 label *label125
-    * set :updateDisplay:y :drawItemColor.6:y
   418 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
-    * set :drawItem.7:col 0
   419 set :drawItem.7:y :drawItemColor.6:y
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item @silicon
-    * set :drawItem.7:current *tmp267
-    * set :drawItem.7:target 40
-    * set :drawItemColor.7:col 0
-    * set :drawItemColor.7:y :drawItemColor.6:y
-    * set :drawItemColor.7:columns 1
-    * op mul *tmp268 1 176
-    * op mul *tmp269 1 88
-    * op sub :drawItemColor.7:barLength 214 88
-    * op add :drawItemColor.7:textEnd 48 126
   420 op mul *tmp272 126 *tmp267
-    * op div *tmp273 *tmp272 40
+  421 op mul *tmp273 *tmp267 3.1500000000000004
   422 op min :drawItemColor.7:length 126 *tmp273
-    * op mul *tmp275 0 176
-    * op mul *tmp276 0 88
-    * op add :drawItemColor.7:iconX 11 0
-    * op mul *tmp278 0 176
-    * op div *tmp279 0 2
-    * op add :drawItemColor.7:barX 22 0
-    * op mul *tmp281 0 176
-    * op div *tmp282 0 2
   423 op add :drawItemColor.7:textX 174 0
   424 draw col %[white]
-    * op add *tmp284 :drawItem.6:y 5
+  425 op add *tmp284 :drawItemColor.6:y 5
   426 draw image 11 *tmp284 @silicon 16 0
   427 draw col %008000FF
-    * draw rect 22 :drawItem.6:y :drawItemColor.7:length 10
+  428 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   429 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.6:y 126 10
-    * op add *tmp285 :drawItem.6:y 5
-    * op add *tmp286 :drawItem.7:y 7
-    * set :drawBold.7:x 174
-    * set :drawBold.7:y *tmp286
-    * set :drawBold.7:alignment @right
-    * set :drawText.22:x 174
+  430 draw lineRect 22 :drawItemColor.6:y 126 10
+  431 op add *tmp285 :drawItemColor.6:y 5
+  432 op add *tmp286 :drawItemColor.6:y 7
   433 print 40
-    * draw print :drawItemColor.7:textX *tmp286 @right
+  434 draw print 174 *tmp286 @right
   435 label *label135
-    * op add :drawText.23:x 174 1
   436 print 40
   437 draw print 175 *tmp286 @right
   438 label *label136
   439 label *label134
-    * op add :drawItemColor.7:col 0 1
   440 jump *label137 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawItem.6:y 15
+  441 op sub :drawItemColor.7:y :drawItemColor.6:y 15
   442 label *label137
   443 label *label138
   444 label *label133
 
   447 jump *label124 always
   448 label *label123
   449 op idiv *tmp291 :drawAddReco:progress 0.01
-    * set :drawItem.8:col 0
   450 set :drawItem.8:y :drawTitleRow.3:y
-    * set :drawItem.8:columns 1
-    * set :drawItem.8:item @poly
-    * set :drawItem.8:current :drawAddReco:progress
-    * set :drawItem.8:target 1
-    * set :drawItemColor.8:col 0
-    * set :drawItemColor.8:y :drawTitleRow.3:y
-    * set :drawItemColor.8:columns 1
-    * op mul *tmp292 1 176
-    * op mul *tmp293 1 88
-    * op sub :drawItemColor.8:barLength 214 88
-    * op add :drawItemColor.8:textEnd 48 126
   451 op mul *tmp296 126 :drawAddReco:progress
-    * op div *tmp297 *tmp296 1
+  452 op mul *tmp297 :drawAddReco:progress 126
   453 op min :drawItemColor.8:length 126 *tmp297
-    * op mul *tmp299 0 176
-    * op mul *tmp300 0 88
-    * op add :drawItemColor.8:iconX 11 0
-    * op mul *tmp302 0 176
-    * op div *tmp303 0 2
-    * op add :drawItemColor.8:barX 22 0
-    * op mul *tmp305 0 176
-    * op div *tmp306 0 2
   454 op add :drawItemColor.8:textX 174 0
   455 draw col %[white]
   456 op add *tmp308 :drawTitleRow.3:y 5
 
   459 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   460 draw col %00FF00FF
   461 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp309 :drawTitleRow.3:y 5
-    * op add *tmp310 :drawItem.8:y 7
-    * set :drawBold.8:x 174
-    * set :drawBold.8:y *tmp310
-    * set :drawBold.8:alignment @right
-    * set :drawText.24:x 174
+  462 op add *tmp310 :drawTitleRow.3:y 7
   463 print *tmp291
   464 print "%"
-    * draw print :drawItemColor.8:textX *tmp310 @right
+  465 draw print 174 *tmp310 @right
   466 label *label142
-    * op add :drawText.25:x 174 1
   467 print *tmp291
   468 print "%"
   469 draw print 175 *tmp310 @right
   470 label *label143
   471 label *label141
-    * op add :drawItemColor.8:col 0 1
   472 jump *label144 lessThan 1 1
   473 op sub :drawItemColor.8:y :drawTitleRow.3:y 15
   474 label *label144
   475 label *label145
   476 label *label140
-    * set :drawItem.8:y :drawItemColor.8:y
   477 label *label139
-    * op sub :updateDisplay:y :drawItemColor.8:y 15
+  478 op sub :updateDisplay:y :drawTitleRow.3:y 30
   479 label *label124
   480 op sub :updateDisplay:y :updateDisplay:y 5
   481 label *label117
 
   485 label *label148
   486 draw col %[white]
   487 op min :updateDisplay:y :updateDisplay:y 142
-    * set :drawTitleRow.4:y :updateDisplay:y
-    * set :drawTitleRow.4:alignment @bottomLeft
   488 print "Reconstructor"
   489 draw print 22 :updateDisplay:y @bottomLeft
   490 label *label150
 
   493 label *label151
   494 op sub :drawTitleRow.4:y :updateDisplay:y 15
   495 label *label149
-    * set :updateDisplay:y :drawTitleRow.4:y
   496 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   497 jump *label152 notEqual :drawMultiReco:progress 0
   498 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * set :drawItem.9:col 0
   499 set :drawItem.9:y :drawTitleRow.4:y
-    * set :drawItem.9:columns 1
-    * set :drawItem.9:item @metaglass
-    * set :drawItem.9:current *tmp320
-    * set :drawItem.9:target 40
-    * set :drawItemColor.9:col 0
-    * set :drawItemColor.9:y :drawTitleRow.4:y
-    * set :drawItemColor.9:columns 1
-    * op mul *tmp321 1 176
-    * op mul *tmp322 1 88
-    * op sub :drawItemColor.9:barLength 214 88
-    * op add :drawItemColor.9:textEnd 48 126
   500 op mul *tmp325 126 *tmp320
-    * op div *tmp326 *tmp325 40
+  501 op mul *tmp326 *tmp320 3.1500000000000004
   502 op min :drawItemColor.9:length 126 *tmp326
-    * op mul *tmp328 0 176
-    * op mul *tmp329 0 88
-    * op add :drawItemColor.9:iconX 11 0
-    * op mul *tmp331 0 176
-    * op div *tmp332 0 2
-    * op add :drawItemColor.9:barX 22 0
-    * op mul *tmp334 0 176
-    * op div *tmp335 0 2
   503 op add :drawItemColor.9:textX 174 0
   504 draw col %[white]
   505 op add *tmp337 :drawTitleRow.4:y 5
 
   508 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   509 draw col %00FF00FF
   510 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp338 :drawTitleRow.4:y 5
-    * op add *tmp339 :drawItem.9:y 7
-    * set :drawBold.9:x 174
-    * set :drawBold.9:y *tmp339
-    * set :drawBold.9:alignment @right
-    * set :drawText.28:x 174
+  511 op add *tmp339 :drawTitleRow.4:y 7
   512 print 40
-    * draw print :drawItemColor.9:textX *tmp339 @right
+  513 draw print 174 *tmp339 @right
   514 label *label157
-    * op add :drawText.29:x 174 1
   515 print 40
   516 draw print 175 *tmp339 @right
   517 label *label158
   518 label *label156
-    * op add :drawItemColor.9:col 0 1
   519 jump *label159 lessThan 1 1
   520 op sub :drawItemColor.9:y :drawTitleRow.4:y 15
   521 label *label159
 
   523 label *label155
   524 set :drawItem.9:y :drawItemColor.9:y
   525 label *label154
-    * set :updateDisplay:y :drawItemColor.9:y
   526 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
-    * set :drawItem.10:col 0
   527 set :drawItem.10:y :drawItemColor.9:y
-    * set :drawItem.10:columns 1
-    * set :drawItem.10:item @titanium
-    * set :drawItem.10:current *tmp343
-    * set :drawItem.10:target 80
-    * set :drawItemColor.10:col 0
-    * set :drawItemColor.10:y :drawItemColor.9:y
-    * set :drawItemColor.10:columns 1
-    * op mul *tmp344 1 176
-    * op mul *tmp345 1 88
-    * op sub :drawItemColor.10:barLength 214 88
-    * op add :drawItemColor.10:textEnd 48 126
   528 op mul *tmp348 126 *tmp343
-    * op div *tmp349 *tmp348 80
+  529 op div *tmp349 *tmp343 0.6349206349206349
   530 op min :drawItemColor.10:length 126 *tmp349
-    * op mul *tmp351 0 176
-    * op mul *tmp352 0 88
-    * op add :drawItemColor.10:iconX 11 0
-    * op mul *tmp354 0 176
-    * op div *tmp355 0 2
-    * op add :drawItemColor.10:barX 22 0
-    * op mul *tmp357 0 176
-    * op div *tmp358 0 2
   531 op add :drawItemColor.10:textX 174 0
   532 draw col %[white]
-    * op add *tmp360 :drawItem.9:y 5
+  533 op add *tmp360 :drawItemColor.9:y 5
   534 draw image 11 *tmp360 @titanium 16 0
   535 draw col %008000FF
-    * draw rect 22 :drawItem.9:y :drawItemColor.10:length 10
+  536 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   537 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.9:y 126 10
-    * op add *tmp361 :drawItem.9:y 5
-    * op add *tmp362 :drawItem.10:y 7
-    * set :drawBold.10:x 174
-    * set :drawBold.10:y *tmp362
-    * set :drawBold.10:alignment @right
-    * set :drawText.30:x 174
+  538 draw lineRect 22 :drawItemColor.9:y 126 10
+  539 op add *tmp361 :drawItemColor.9:y 5
+  540 op add *tmp362 :drawItemColor.9:y 7
   541 print 80
-    * draw print :drawItemColor.10:textX *tmp362 @right
+  542 draw print 174 *tmp362 @right
   543 label *label164
-    * op add :drawText.31:x 174 1
   544 print 80
   545 draw print 175 *tmp362 @right
   546 label *label165
   547 label *label163
-    * op add :drawItemColor.10:col 0 1
   548 jump *label166 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawItem.9:y 15
+  549 op sub :drawItemColor.10:y :drawItemColor.9:y 15
   550 label *label166
   551 label *label167
   552 label *label162
   553 set :drawItem.10:y :drawItemColor.10:y
   554 label *label161
-    * set :updateDisplay:y :drawItemColor.10:y
   555 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
-    * set :drawItem.11:col 0
   556 set :drawItem.11:y :drawItemColor.10:y
-    * set :drawItem.11:columns 1
-    * set :drawItem.11:item @silicon
-    * set :drawItem.11:current *tmp366
-    * set :drawItem.11:target 130
-    * set :drawItemColor.11:col 0
-    * set :drawItemColor.11:y :drawItemColor.10:y
-    * set :drawItemColor.11:columns 1
-    * op mul *tmp367 1 176
-    * op mul *tmp368 1 88
-    * op sub :drawItemColor.11:barLength 214 88
-    * op add :drawItemColor.11:textEnd 48 126
   557 op mul *tmp371 126 *tmp366
-    * op div *tmp372 *tmp371 130
+  558 op div *tmp372 *tmp366 1.0317460317460319
   559 op min :drawItemColor.11:length 126 *tmp372
-    * op mul *tmp374 0 176
-    * op mul *tmp375 0 88
-    * op add :drawItemColor.11:iconX 11 0
-    * op mul *tmp377 0 176
-    * op div *tmp378 0 2
-    * op add :drawItemColor.11:barX 22 0
-    * op mul *tmp380 0 176
-    * op div *tmp381 0 2
   560 op add :drawItemColor.11:textX 174 0
   561 draw col %[white]
-    * op add *tmp383 :drawItem.10:y 5
+  562 op add *tmp383 :drawItemColor.10:y 5
   563 draw image 11 *tmp383 @silicon 16 0
   564 draw col %008000FF
-    * draw rect 22 :drawItem.10:y :drawItemColor.11:length 10
+  565 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   566 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.10:y 126 10
-    * op add *tmp384 :drawItem.10:y 5
-    * op add *tmp385 :drawItem.11:y 7
-    * set :drawBold.11:x 174
-    * set :drawBold.11:y *tmp385
-    * set :drawBold.11:alignment @right
-    * set :drawText.32:x 174
+  567 draw lineRect 22 :drawItemColor.10:y 126 10
+  568 op add *tmp384 :drawItemColor.10:y 5
+  569 op add *tmp385 :drawItemColor.10:y 7
   570 print 130
-    * draw print :drawItemColor.11:textX *tmp385 @right
+  571 draw print 174 *tmp385 @right
   572 label *label171
-    * op add :drawText.33:x 174 1
   573 print 130
   574 draw print 175 *tmp385 @right
   575 label *label172
   576 label *label170
-    * op add :drawItemColor.11:col 0 1
   577 jump *label173 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItem.10:y 15
+  578 op sub :drawItemColor.11:y :drawItemColor.10:y 15
   579 label *label173
   580 label *label174
   581 label *label169
 
   584 jump *label153 always
   585 label *label152
   586 op idiv *tmp390 :drawMultiReco:progress 0.01
-    * set :drawItem.12:col 0
   587 set :drawItem.12:y :drawTitleRow.4:y
-    * set :drawItem.12:columns 1
-    * set :drawItem.12:item @mega
-    * set :drawItem.12:current :drawMultiReco:progress
-    * set :drawItem.12:target 1
-    * set :drawItemColor.12:col 0
-    * set :drawItemColor.12:y :drawTitleRow.4:y
-    * set :drawItemColor.12:columns 1
-    * op mul *tmp391 1 176
-    * op mul *tmp392 1 88
-    * op sub :drawItemColor.12:barLength 214 88
-    * op add :drawItemColor.12:textEnd 48 126
   588 op mul *tmp395 126 :drawMultiReco:progress
-    * op div *tmp396 *tmp395 1
+  589 op mul *tmp396 :drawMultiReco:progress 126
   590 op min :drawItemColor.12:length 126 *tmp396
-    * op mul *tmp398 0 176
-    * op mul *tmp399 0 88
-    * op add :drawItemColor.12:iconX 11 0
-    * op mul *tmp401 0 176
-    * op div *tmp402 0 2
-    * op add :drawItemColor.12:barX 22 0
-    * op mul *tmp404 0 176
-    * op div *tmp405 0 2
   591 op add :drawItemColor.12:textX 174 0
   592 draw col %[white]
   593 op add *tmp407 :drawTitleRow.4:y 5
 
   596 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   597 draw col %00FF00FF
   598 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp408 :drawTitleRow.4:y 5
-    * op add *tmp409 :drawItem.12:y 7
-    * set :drawBold.12:x 174
-    * set :drawBold.12:y *tmp409
-    * set :drawBold.12:alignment @right
-    * set :drawText.34:x 174
+  599 op add *tmp409 :drawTitleRow.4:y 7
   600 print *tmp390
   601 print "%"
-    * draw print :drawItemColor.12:textX *tmp409 @right
+  602 draw print 174 *tmp409 @right
   603 label *label178
-    * op add :drawText.35:x 174 1
   604 print *tmp390
   605 print "%"
   606 draw print 175 *tmp409 @right
   607 label *label179
   608 label *label177
-    * op add :drawItemColor.12:col 0 1
   609 jump *label180 lessThan 1 1
   610 op sub :drawItemColor.12:y :drawTitleRow.4:y 15
   611 label *label180
   612 label *label181
   613 label *label176
-    * set :drawItem.12:y :drawItemColor.12:y
   614 label *label175
-    * op sub :updateDisplay:y :drawItemColor.12:y 30
+  615 op sub :updateDisplay:y :drawTitleRow.4:y 45
   616 label *label153
   617 op sub :updateDisplay:y :updateDisplay:y 5
   618 label *label146
 
   622 label *label183
   623 label *label184
   624 draw col %[white]
-    * set :drawTitleRow.5:y :updateDisplay:y
-    * set :drawTitleRow.5:alignment @bottomLeft
   625 print "Builder"
   626 draw print 22 :updateDisplay:y @bottomLeft
   627 label *label186
 
   632 label *label185
   633 set :updateDisplay:y :drawTitleRow.5:y
   634 jump *label188 notEqual .transportItem null
-    * set :drawUnit:item @poly
-    * set :drawUnit:items 0
-    * set :drawUnit:y :drawTitleRow.5:y
-    * set :drawItem.13:col 0
   635 set :drawItem.13:y :drawTitleRow.5:y
-    * set :drawItem.13:columns 1
-    * set :drawItem.13:item @poly
-    * set :drawItem.13:current 0
   636 set :drawItem.13:target .transportTarget
-    * set :drawItemColor.13:col 0
-    * set :drawItemColor.13:y :drawTitleRow.5:y
-    * set :drawItemColor.13:columns 1
-    * set :drawItemColor.13:item @poly
-    * set :drawItemColor.13:current 0
-    * op mul *tmp417 1 176
-    * op mul *tmp418 1 88
-    * op sub :drawItemColor.13:barLength 214 88
-    * op add :drawItemColor.13:textEnd 48 126
-    * op mul *tmp421 126 0
   637 op div *tmp422 0 :drawItem.13:target
   638 op min :drawItemColor.13:length 126 *tmp422
-    * op mul *tmp424 0 176
-    * op mul *tmp425 0 88
-    * op add :drawItemColor.13:iconX 11 0
-    * op mul *tmp427 0 176
-    * op div *tmp428 0 2
-    * op add :drawItemColor.13:barX 22 0
-    * op mul *tmp430 0 176
-    * op div *tmp431 0 2
   639 op add :drawItemColor.13:textX 174 0
   640 draw col %[white]
-    * op add *tmp433 :updateDisplay:y 5
+  641 op add *tmp433 :drawTitleRow.5:y 5
   642 draw image 11 *tmp433 @poly 16 0
   643 draw col %008000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.13:length 10
+  644 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   645 draw col %00FF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp434 :updateDisplay:y 5
-    * op add *tmp435 :drawItem.13:y 7
-    * set :drawBold.13:x 174
-    * set :drawBold.13:y *tmp435
-    * set :drawBold.13:alignment @right
-    * set :drawText.38:x 174
+  646 draw lineRect 22 :drawTitleRow.5:y 126 10
+  647 op add *tmp434 :drawTitleRow.5:y 5
+  648 op add *tmp435 :drawTitleRow.5:y 7
   649 print .transportTarget
-    * draw print :drawItemColor.13:textX *tmp435 @right
+  650 draw print 174 *tmp435 @right
   651 label *label194
-    * op add :drawText.39:x 174 1
   652 print .transportTarget
   653 draw print 175 *tmp435 @right
   654 label *label195
   655 label *label193
-    * op add :drawItemColor.13:col 0 1
   656 jump *label196 lessThan 1 1
-    * op sub :drawItemColor.13:y :updateDisplay:y 15
+  657 op sub :drawItemColor.13:y :drawTitleRow.5:y 15
   658 label *label196
   659 label *label197
   660 label *label192
-    * set :drawItem.13:y :drawItemColor.13:y
   661 label *label191
   662 label *label190
   663 set :updateDisplay:y :drawItemColor.13:y
 
   668 op equal *tmp443 :drawBuilder:unitItem .transportItem
   669 op mul *tmp444 *tmp442 *tmp443
   670 set :drawUnit.1:item .transportItem
-    * set :drawUnit.1:items *tmp444
-    * set :drawUnit.1:y :drawTitleRow.5:y
-    * set :drawItem.14:col 0
   671 set :drawItem.14:y :drawTitleRow.5:y
-    * set :drawItem.14:columns 1
-    * set :drawItem.14:item :drawUnit.1:item
-    * set :drawItem.14:current *tmp444
   672 set :drawItem.14:target .transportTarget
-    * set :drawItemColor.14:col 0
-    * set :drawItemColor.14:y :drawTitleRow.5:y
-    * set :drawItemColor.14:columns 1
-    * set :drawItemColor.14:current *tmp444
-    * op mul *tmp445 1 176
-    * op mul *tmp446 1 88
-    * op sub :drawItemColor.14:barLength 214 88
-    * op add :drawItemColor.14:textEnd 48 126
   673 op mul *tmp449 126 *tmp444
   674 op div *tmp450 *tmp449 :drawItem.14:target
   675 op min :drawItemColor.14:length 126 *tmp450
-    * op mul *tmp452 0 176
-    * op mul *tmp453 0 88
-    * op add :drawItemColor.14:iconX 11 0
-    * op mul *tmp455 0 176
-    * op div *tmp456 0 2
-    * op add :drawItemColor.14:barX 22 0
-    * op mul *tmp458 0 176
-    * op div *tmp459 0 2
   676 op add :drawItemColor.14:textX 174 0
   677 draw col %[white]
-    * op add *tmp461 :updateDisplay:y 5
+  678 op add *tmp461 :drawTitleRow.5:y 5
   679 draw image 11 *tmp461 :drawUnit.1:item 16 0
   680 draw col %008000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.14:length 10
+  681 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   682 draw col %00FF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp462 :updateDisplay:y 5
-    * op add *tmp463 :drawItem.14:y 7
-    * set :drawBold.14:x 174
-    * set :drawBold.14:y *tmp463
-    * set :drawBold.14:alignment @right
-    * set :drawText.40:x 174
+  683 draw lineRect 22 :drawTitleRow.5:y 126 10
+  684 op add *tmp462 :drawTitleRow.5:y 5
+  685 op add *tmp463 :drawTitleRow.5:y 7
   686 print .transportTarget
-    * draw print :drawItemColor.14:textX *tmp463 @right
+  687 draw print 174 *tmp463 @right
   688 label *label202
-    * op add :drawText.41:x 174 1
   689 print .transportTarget
   690 draw print 175 *tmp463 @right
   691 label *label203
   692 label *label201
-    * op add :drawItemColor.14:col 0 1
   693 jump *label204 lessThan 1 1
-    * op sub :drawItemColor.14:y :updateDisplay:y 15
+  694 op sub :drawItemColor.14:y :drawTitleRow.5:y 15
   695 label *label204
   696 label *label205
   697 label *label200
-    * set :drawItem.14:y :drawItemColor.14:y
   698 label *label199
   699 label *label198
   700 set :updateDisplay:y :drawItemColor.14:y
 
   708 jump *label206 always
   709 label *label209
   710 label *label210
-    * set :updateDisplay:y 20
   711 draw col %[white]
-    * set :drawTitleRow.6:y 20
-    * set :drawTitleRow.6:alignment @bottomLeft
-    * set :drawText.42:y 20
   712 print "Power"
   713 draw print 22 20 @bottomLeft
   714 label *label212
-    * set :drawText.43:y 20
   715 print "Power"
   716 draw print 23 20 @bottomLeft
   717 label *label213
 
   721 sensor :drawPower:power AJTJK-battery1 @totalPower
   722 op mul *tmp474 :drawPower:power 100
   723 op idiv *tmp476 *tmp474 4000
-    * set :drawItemColor.15:y 5
-    * op mul *tmp481 126 :drawPower:power
   724 op mul *tmp482 :drawPower:power 0.0315
   725 op min :drawItemColor.15:length 126 *tmp482
-    * op add :drawItemColor.15:textX 174 0
   726 draw col %[white]
-    * op add *tmp493 :drawTitleRow.6:y 5
-    * draw image 11 *tmp493 @battery 16 0
+  727 op add *tmp493 5 5
+  728 draw image 11 10 @battery 16 0
   729 draw col %808000FF
-    * draw rect 22 :drawTitleRow.6:y :drawItemColor.15:length 10
+  730 draw rect 22 5 :drawItemColor.15:length 10
   731 draw col %FFFF00FF
-    * draw lineRect 22 :drawTitleRow.6:y 126 10
-    * op add *tmp494 :drawTitleRow.6:y 5
-    * op add *tmp495 :updateDisplay:y 7
-    * set :drawBold.15:x 174
-    * set :drawBold.15:y *tmp495
-    * set :drawBold.15:alignment @right
-    * set :drawText.44:x 174
+  732 draw lineRect 22 5 126 10
+  733 op add *tmp494 5 5
+  734 op add *tmp495 5 7
+  735 set :drawBold.15:y 12
   736 print *tmp476
   737 print "%"
-    * draw print 174 *tmp495 @right
+  738 draw print 174 12 @right
   739 label *label216
-    * op add :drawText.45:x 174 1
   740 print *tmp476
   741 print "%"
-    * draw print 175 *tmp495 @right
+  742 draw print 175 12 @right
   743 label *label217
   744 label *label215
   745 jump *label218 lessThan 1 1
-    * op sub :drawItemColor.15:y :drawTitleRow.6:y 15
+  746 op sub :drawItemColor.15:y 5 15
   747 label *label218
   748 label *label219
   749 label *label214
 
   758 jump *label223 equal .pageSwitched false
   759 read .lastTail bank2 511
   760 draw col %[gold]
-    * set :drawBold.16:x 11
-    * set :drawBold.16:y 206
-    * set :drawBold.16:alignment @left
   761 print "Resources"
   762 draw print 11 206 @left
   763 label *label226
 
   858 draw image 0 0 @core-shard 6 0
   859 draw reset
   860 draw col %[gold]
-    * set :drawBold.17:x 90
-    * set :drawBold.17:y 206
-    * set :drawBold.17:alignment @center
   861 print "Base map"
   862 draw print 90 206 @center
   863 label *label256
 
  1086 op max :displayLog:stop :displayLog:logPosition *tmp562
  1087 jump *label316 equal .pageSwitched false
  1088 draw col %[gold]
-    * set :drawBold.18:x 4
-    * set :drawBold.18:y 206
-    * set :drawBold.18:alignment @left
  1089 print "Build records"
  1090 draw print 4 206 @left
  1091 label *label319
 
  1222 label *label342
  1223 set *tmp613 ""
  1224 label *label343
-    * set :drawBold.19:x 25
-    * set :drawBold.19:y 71
-    * set :drawBold.19:alignment @center
  1225 print :drawHeader:m
  1226 print ":"
  1227 print *tmp613
 
  1240 jump *label341 always
  1241 label *label340
  1242 draw col %[gold]
-    * set :drawBold.20:x 42
-    * set :drawBold.20:y 261
-    * set :drawBold.20:alignment @bottom
  1243 print "Goal"
  1244 draw print 42 261 @bottom
  1245 label *label348
 
  1344 label *label378
  1345 jump *label379 equal A¨SSJh-container30 null
  1346 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
-    * set :drawHeader:x.1 174
  1347 op log10 *tmp646 :drawHeader:count.1
  1348 op floor :drawHeader:len *tmp646
  1349 print "x"
 
  1354 op sub *tmp650 154 *tmp649
  1355 draw image *tmp650 246 @scrap 12 0
  1356 sensor :drawHeader:count.1 A¨SSJh-container30 @sand
-    * set :drawHeader:x.1 124
  1357 op log10 *tmp652 :drawHeader:count.1
  1358 op floor :drawHeader:len *tmp652
  1359 print "x"
 
  1368 jump *label383 equal .titaniumDrill false
  1369 sensor *tmp658 .titaniumDrill @titanium
  1370 op max :drawHeader:count.2 .titaniumDrillCount *tmp658
-    * set :drawHeader:x.2 174
  1371 op log10 *tmp660 :drawHeader:count.2
  1372 op floor :drawHeader:len.1 *tmp660
  1373 print "x"
 
  1381 label *label384
  1382 jump *label386 equal .thoriumContainer false
  1383 sensor :drawHeader:count.3 .thoriumContainer @thorium
-    * set :drawHeader:x.3 124
  1384 op log10 *tmp667 :drawHeader:count.3
  1385 op floor :drawHeader:len.2 *tmp667
  1386 print "x"
 
  1434 return :drawHeader*retaddr
  1435 end
  1436 label *label8
-    * set :unpackCfg2:cfg :drawBlock:cfg
-    * set *tmp681 1
  1437 read *tmp682 :drawBlock:cfg 1
  1438 op sub *tmp683 *tmp682 74
  1439 lookup block :unpackCfg:type *tmp683
-    * set *tmp685 2
  1440 read *tmp686 :drawBlock:cfg 2
  1441 op sub *tmp687 *tmp686 74
  1442 op div :unpackCfg:x *tmp687 2
-    * set *tmp689 3
  1443 read *tmp690 :drawBlock:cfg 3
  1444 op sub *tmp691 *tmp690 74
  1445 op div :unpackCfg:y *tmp691 2
-    * set *tmp693 4
  1446 read *tmp694 :drawBlock:cfg 4
  1447 op sub :unpackCfg:rotation *tmp694 74
-    * set *tmp696 5
  1448 read *tmp697 :drawBlock:cfg 5
  1449 op sub :unpackCfg:ind *tmp697 74
  1450 sensor :unpackCfg:size :unpackCfg:type @size
  1451 label *label403
-    * set :unpackCfg2:type :unpackCfg:type
-    * set :unpackCfg2:x :unpackCfg:x
-    * set :unpackCfg2:y :unpackCfg:y
-    * set :unpackCfg2:rotation :unpackCfg:rotation
-    * set :unpackCfg2:size :unpackCfg:size
-    * set :unpackCfg2:index :unpackCfg:ind
  1452 label *label402
  1453 jump *label404 notEqual :unpackCfg:ind .nextBuildIndex
  1454 draw col %80ffffff

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-66 instructions):
 
    77 print "Locating ore..."
    78 draw print 23 201 @bottomLeft
    79 label *label41
-    * op sub :drawTitleRow:y 201 15
    80 label *label39
-    * set :drawItem:y 186
    81 set :drawItem:item .nextBlock
    82 read :drawItem:current processor3 ".mapProgress"
    83 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:y 186
    84 op mul *tmp83 126 :drawItem:current
    85 op div *tmp84 *tmp83 :drawItem:target
    86 op min :drawItemColor:length 126 *tmp84
-    * op add :drawItemColor:textX 174 0
    87 draw col %[white]
-    * op add *tmp95 186 5
    88 draw image 11 191 :drawItem:item 16 0
    89 draw col %008000FF
    90 draw rect 22 186 :drawItemColor:length 10
    91 draw col %00FF00FF
    92 draw lineRect 22 186 126 10
-    * op add *tmp96 186 5
-    * op add *tmp97 186 7
-    * set :drawBold:y 193
    93 print "x"
    94 read *tmp98 processor3 ".mapSpots"
    95 print *tmp98
 
   102 label *label46
   103 label *label44
   104 jump *label47 lessThan 1 1
-    * op sub :drawItemColor:y 186 15
   105 label *label47
   106 label *label48
   107 label *label43
-    * set :drawItem:y 171
   108 label *label42
   109 op sub :updateDisplay:y 171 35
   110 jump *label38 always
 
   119 label *label53
   120 label *label51
   121 set :updateDisplay:y 186
-    * set :drawMaterials:columns 1
   122 jump *label54 equal :drawMaterials:count false
   123 set :drawMaterials:item @copper
   124 set :drawMaterials:target .targetCopper
 
   156 label *label56
   157 jump *label66 lessThanEq :drawMaterials:target 0
   158 sensor *tmp110 .core :drawMaterials:item
-    * set :drawItem.1:col :drawMaterials:col
-    * set :drawItem.1:y :updateDisplay:y
   159 set :drawItemColor.1:y :updateDisplay:y
-    * op mul *tmp112 1 88
-    * op sub :drawItemColor.1:barLength 214 88
-    * op add :drawItemColor.1:textEnd 48 126
   160 op mul *tmp115 126 *tmp110
   161 op div *tmp116 *tmp115 :drawMaterials:target
   162 op min :drawItemColor.1:length 126 *tmp116
   163 op mul *tmp119 :drawMaterials:col 88
   164 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp122 :drawMaterials:col 88
   165 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp125 :drawMaterials:col 88
   166 op add :drawItemColor.1:textX 174 *tmp119
   167 draw col %[white]
   168 op add *tmp127 :updateDisplay:y 5
 
   175 print :drawMaterials:target
   176 draw print :drawItemColor.1:textX *tmp129 @right
   177 label *label71
-    * op add :drawText.7:x :drawItemColor.1:textX 1
+  178 op add :drawText.7:x *tmp119 175
   179 print :drawMaterials:target
   180 draw print :drawText.7:x *tmp129 @right
   181 label *label72
 
   231 jump *label85 notEqual :drawAirFactory:progress 0
   232 jump *label87 notEqual .nextFactory @flare
   233 sensor *tmp146 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.2:y :drawTitleRow.2:y
-    * op mul *tmp151 126 *tmp146
   234 op mul *tmp152 *tmp146 8.4
   235 op min :drawItemColor.2:length 126 *tmp152
-    * op add :drawItemColor.2:textX 174 0
   236 draw col %[white]
-    * op add *tmp163 :drawTitleRow.2:y 5
+  237 op sub *tmp163 :updateDisplay:y 10
   238 draw image 11 *tmp163 @silicon 16 0
   239 draw col %008000FF
   240 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   241 draw col %00FF00FF
   242 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp165 :drawTitleRow.2:y 7
+  243 op sub *tmp165 :updateDisplay:y 8
   244 print 15
   245 draw print 174 *tmp165 @right
   246 label *label92
 
   249 label *label93
   250 label *label91
   251 jump *label94 lessThan 1 1
-    * op sub :drawItemColor.2:y :drawTitleRow.2:y 15
+  252 op sub :drawItemColor.2:y :updateDisplay:y 30
   253 label *label94
   254 label *label95
   255 label *label90
 
   258 jump *label88 always
   259 label *label87
   260 sensor *tmp169 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:y :drawTitleRow.2:y
-    * op mul *tmp174 126 *tmp169
   261 op mul *tmp175 *tmp169 8.4
   262 op min :drawItemColor.3:length 126 *tmp175
-    * op add :drawItemColor.3:textX 174 0
   263 draw col %[white]
-    * op add *tmp186 :drawTitleRow.2:y 5
+  264 op sub *tmp186 :updateDisplay:y 10
   265 draw image 11 *tmp186 @lead 16 0
   266 draw col %008000FF
   267 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   268 draw col %00FF00FF
   269 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp188 :drawTitleRow.2:y 7
+  270 op sub *tmp188 :updateDisplay:y 8
   271 print 15
   272 draw print 174 *tmp188 @right
   273 label *label99
 
   276 label *label100
   277 label *label98
   278 jump *label101 lessThan 1 1
-    * op sub :drawItemColor.3:y :drawTitleRow.2:y 15
+  279 op sub :drawItemColor.3:y :updateDisplay:y 30
   280 label *label101
   281 label *label102
   282 label *label97
-    * set :drawItem.3:y :drawItemColor.3:y
   283 label *label96
   284 sensor *tmp192 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.4:y :drawItemColor.3:y
-    * op mul *tmp197 126 *tmp192
   285 op mul *tmp198 *tmp192 4.2
   286 op min :drawItemColor.4:length 126 *tmp198
-    * op add :drawItemColor.4:textX 174 0
   287 draw col %[white]
-    * op add *tmp209 :drawItemColor.3:y 5
+  288 op sub *tmp209 :drawTitleRow.2:y 10
   289 draw image 11 *tmp209 @silicon 16 0
   290 draw col %008000FF
   291 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   292 draw col %00FF00FF
   293 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op add *tmp210 :drawItemColor.3:y 5
-    * op add *tmp211 :drawItemColor.3:y 7
+  294 op sub *tmp210 :drawTitleRow.2:y 10
+  295 op sub *tmp211 :drawTitleRow.2:y 8
   296 print 30
   297 draw print 174 *tmp211 @right
   298 label *label106
 
   301 label *label107
   302 label *label105
   303 jump *label108 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawItemColor.3:y 15
+  304 op sub :drawItemColor.4:y :drawTitleRow.2:y 30
   305 label *label108
   306 label *label109
   307 label *label104
 
   311 jump *label86 always
   312 label *label85
   313 op idiv *tmp216 :drawAirFactory:progress 0.01
-    * set :drawItem.5:y :drawTitleRow.2:y
   314 set :drawItem.5:item .nextFactory
   315 op mul *tmp221 126 :drawAirFactory:progress
   316 op mul *tmp222 :drawAirFactory:progress 126
-    * op min :drawItemColor.5:length 126 *tmp222
-    * op add :drawItemColor.5:textX 174 0
+  317 op min :drawItemColor.5:length 126 *tmp221
   318 draw col %[white]
-    * op add *tmp233 :drawTitleRow.2:y 5
+  319 op sub *tmp233 :updateDisplay:y 10
   320 draw image 11 *tmp233 :drawItem.5:item 16 0
   321 draw col %008000FF
   322 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   323 draw col %00FF00FF
   324 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp235 :drawTitleRow.2:y 7
+  325 op sub *tmp235 :updateDisplay:y 8
   326 print *tmp216
   327 print "%"
   328 draw print 174 *tmp235 @right
 
   333 label *label114
   334 label *label112
   335 jump *label115 lessThan 1 1
-    * op sub :drawItemColor.5:y :drawTitleRow.2:y 15
+  336 op sub :drawItemColor.5:y :updateDisplay:y 30
   337 label *label115
   338 label *label116
   339 label *label111
 
   358 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   359 jump *label123 notEqual :drawAddReco:progress 0
   360 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
-    * set :drawItem.6:y :drawTitleRow.3:y
-    * op mul *tmp249 126 *tmp244
   361 op mul *tmp250 *tmp244 3.1500000000000004
   362 op min :drawItemColor.6:length 126 *tmp250
-    * op add :drawItemColor.6:textX 174 0
   363 draw col %[white]
-    * op add *tmp261 :drawTitleRow.3:y 5
+  364 op sub *tmp261 :updateDisplay:y 10
   365 draw image 11 *tmp261 @graphite 16 0
   366 draw col %008000FF
   367 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   368 draw col %00FF00FF
   369 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp263 :drawTitleRow.3:y 7
+  370 op sub *tmp263 :updateDisplay:y 8
   371 print 40
   372 draw print 174 *tmp263 @right
   373 label *label128
 
   376 label *label129
   377 label *label127
   378 jump *label130 lessThan 1 1
-    * op sub :drawItemColor.6:y :drawTitleRow.3:y 15
+  379 op sub :drawItemColor.6:y :updateDisplay:y 30
   380 label *label130
   381 label *label131
   382 label *label126
-    * set :drawItem.6:y :drawItemColor.6:y
   383 label *label125
   384 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
-    * set :drawItem.7:y :drawItemColor.6:y
-    * op mul *tmp272 126 *tmp267
   385 op mul *tmp273 *tmp267 3.1500000000000004
   386 op min :drawItemColor.7:length 126 *tmp273
-    * op add :drawItemColor.7:textX 174 0
   387 draw col %[white]
-    * op add *tmp284 :drawItemColor.6:y 5
+  388 op sub *tmp284 :drawTitleRow.3:y 10
   389 draw image 11 *tmp284 @silicon 16 0
   390 draw col %008000FF
   391 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   392 draw col %00FF00FF
   393 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op add *tmp285 :drawItemColor.6:y 5
-    * op add *tmp286 :drawItemColor.6:y 7
+  394 op sub *tmp285 :drawTitleRow.3:y 10
+  395 op sub *tmp286 :drawTitleRow.3:y 8
   396 print 40
   397 draw print 174 *tmp286 @right
   398 label *label135
 
   401 label *label136
   402 label *label134
   403 jump *label137 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawItemColor.6:y 15
+  404 op sub :drawItemColor.7:y :drawTitleRow.3:y 30
   405 label *label137
   406 label *label138
   407 label *label133
 
   410 jump *label124 always
   411 label *label123
   412 op idiv *tmp291 :drawAddReco:progress 0.01
-    * set :drawItem.8:y :drawTitleRow.3:y
   413 op mul *tmp296 126 :drawAddReco:progress
   414 op mul *tmp297 :drawAddReco:progress 126
-    * op min :drawItemColor.8:length 126 *tmp297
-    * op add :drawItemColor.8:textX 174 0
+  415 op min :drawItemColor.8:length 126 *tmp296
   416 draw col %[white]
-    * op add *tmp308 :drawTitleRow.3:y 5
+  417 op sub *tmp308 :updateDisplay:y 10
   418 draw image 11 *tmp308 @poly 16 0
   419 draw col %008000FF
   420 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   421 draw col %00FF00FF
   422 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp310 :drawTitleRow.3:y 7
+  423 op sub *tmp310 :updateDisplay:y 8
   424 print *tmp291
   425 print "%"
   426 draw print 174 *tmp310 @right
 
   431 label *label143
   432 label *label141
   433 jump *label144 lessThan 1 1
-    * op sub :drawItemColor.8:y :drawTitleRow.3:y 15
+  434 op sub :drawItemColor.8:y :updateDisplay:y 30
   435 label *label144
   436 label *label145
   437 label *label140
 
   457 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   458 jump *label152 notEqual :drawMultiReco:progress 0
   459 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * set :drawItem.9:y :drawTitleRow.4:y
-    * op mul *tmp325 126 *tmp320
   460 op mul *tmp326 *tmp320 3.1500000000000004
   461 op min :drawItemColor.9:length 126 *tmp326
-    * op add :drawItemColor.9:textX 174 0
   462 draw col %[white]
-    * op add *tmp337 :drawTitleRow.4:y 5
+  463 op sub *tmp337 :updateDisplay:y 10
   464 draw image 11 *tmp337 @metaglass 16 0
   465 draw col %008000FF
   466 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   467 draw col %00FF00FF
   468 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp339 :drawTitleRow.4:y 7
+  469 op sub *tmp339 :updateDisplay:y 8
   470 print 40
   471 draw print 174 *tmp339 @right
   472 label *label157
 
   475 label *label158
   476 label *label156
   477 jump *label159 lessThan 1 1
-    * op sub :drawItemColor.9:y :drawTitleRow.4:y 15
+  478 op sub :drawItemColor.9:y :updateDisplay:y 30
   479 label *label159
   480 label *label160
   481 label *label155
-    * set :drawItem.9:y :drawItemColor.9:y
   482 label *label154
   483 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
-    * set :drawItem.10:y :drawItemColor.9:y
-    * op mul *tmp348 126 *tmp343
   484 op div *tmp349 *tmp343 0.6349206349206349
   485 op min :drawItemColor.10:length 126 *tmp349
-    * op add :drawItemColor.10:textX 174 0
   486 draw col %[white]
-    * op add *tmp360 :drawItemColor.9:y 5
+  487 op sub *tmp360 :drawTitleRow.4:y 10
   488 draw image 11 *tmp360 @titanium 16 0
   489 draw col %008000FF
   490 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   491 draw col %00FF00FF
   492 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op add *tmp361 :drawItemColor.9:y 5
-    * op add *tmp362 :drawItemColor.9:y 7
+  493 op sub *tmp361 :drawTitleRow.4:y 10
+  494 op sub *tmp362 :drawTitleRow.4:y 8
   495 print 80
   496 draw print 174 *tmp362 @right
   497 label *label164
 
   500 label *label165
   501 label *label163
   502 jump *label166 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawItemColor.9:y 15
+  503 op sub :drawItemColor.10:y :drawTitleRow.4:y 30
   504 label *label166
   505 label *label167
   506 label *label162
-    * set :drawItem.10:y :drawItemColor.10:y
   507 label *label161
   508 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
-    * set :drawItem.11:y :drawItemColor.10:y
-    * op mul *tmp371 126 *tmp366
   509 op div *tmp372 *tmp366 1.0317460317460319
   510 op min :drawItemColor.11:length 126 *tmp372
-    * op add :drawItemColor.11:textX 174 0
   511 draw col %[white]
-    * op add *tmp383 :drawItemColor.10:y 5
+  512 op sub *tmp383 :drawItemColor.9:y 10
   513 draw image 11 *tmp383 @silicon 16 0
   514 draw col %008000FF
   515 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   516 draw col %00FF00FF
   517 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op add *tmp384 :drawItemColor.10:y 5
-    * op add *tmp385 :drawItemColor.10:y 7
+  518 op sub *tmp384 :drawItemColor.9:y 10
+  519 op sub *tmp385 :drawItemColor.9:y 8
   520 print 130
   521 draw print 174 *tmp385 @right
   522 label *label171
 
   525 label *label172
   526 label *label170
   527 jump *label173 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItemColor.10:y 15
+  528 op sub :drawItemColor.11:y :drawItemColor.9:y 30
   529 label *label173
   530 label *label174
   531 label *label169
 
   534 jump *label153 always
   535 label *label152
   536 op idiv *tmp390 :drawMultiReco:progress 0.01
-    * set :drawItem.12:y :drawTitleRow.4:y
   537 op mul *tmp395 126 :drawMultiReco:progress
   538 op mul *tmp396 :drawMultiReco:progress 126
-    * op min :drawItemColor.12:length 126 *tmp396
-    * op add :drawItemColor.12:textX 174 0
+  539 op min :drawItemColor.12:length 126 *tmp395
   540 draw col %[white]
-    * op add *tmp407 :drawTitleRow.4:y 5
+  541 op sub *tmp407 :updateDisplay:y 10
   542 draw image 11 *tmp407 @mega 16 0
   543 draw col %008000FF
   544 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   545 draw col %00FF00FF
   546 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp409 :drawTitleRow.4:y 7
+  547 op sub *tmp409 :updateDisplay:y 8
   548 print *tmp390
   549 print "%"
   550 draw print 174 *tmp409 @right
 
   555 label *label179
   556 label *label177
   557 jump *label180 lessThan 1 1
-    * op sub :drawItemColor.12:y :drawTitleRow.4:y 15
+  558 op sub :drawItemColor.12:y :updateDisplay:y 30
   559 label *label180
   560 label *label181
   561 label *label176
 
   578 label *label187
   579 op sub :drawTitleRow.5:y :updateDisplay:y 15
   580 label *label185
-    * set :updateDisplay:y :drawTitleRow.5:y
   581 jump *label188 notEqual .transportItem null
-    * set :drawItem.13:y :drawTitleRow.5:y
   582 set :drawItem.13:target .transportTarget
   583 op div *tmp422 0 :drawItem.13:target
   584 op min :drawItemColor.13:length 126 *tmp422
-    * op add :drawItemColor.13:textX 174 0
   585 draw col %[white]
   586 op add *tmp433 :drawTitleRow.5:y 5
   587 draw image 11 *tmp433 @poly 16 0
 
   589 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   590 draw col %00FF00FF
   591 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp434 :drawTitleRow.5:y 5
   592 op add *tmp435 :drawTitleRow.5:y 7
   593 print .transportTarget
   594 draw print 174 *tmp435 @right
 
   612 op equal *tmp443 :drawBuilder:unitItem .transportItem
   613 op mul *tmp444 *tmp442 *tmp443
   614 set :drawUnit.1:item .transportItem
-    * set :drawItem.14:y :drawTitleRow.5:y
   615 set :drawItem.14:target .transportTarget
   616 op mul *tmp449 126 *tmp444
   617 op div *tmp450 *tmp449 :drawItem.14:target
   618 op min :drawItemColor.14:length 126 *tmp450
-    * op add :drawItemColor.14:textX 174 0
   619 draw col %[white]
   620 op add *tmp461 :drawTitleRow.5:y 5
   621 draw image 11 *tmp461 :drawUnit.1:item 16 0
 
   623 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   624 draw col %00FF00FF
   625 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp462 :drawTitleRow.5:y 5
   626 op add *tmp463 :drawTitleRow.5:y 7
   627 print .transportTarget
   628 draw print 174 *tmp463 @right
 
   656 print "Power"
   657 draw print 23 20 @bottomLeft
   658 label *label213
-    * op sub :drawTitleRow.6:y 20 15
   659 label *label211
-    * set :updateDisplay:y 5
   660 sensor :drawPower:power AJTJK-battery1 @totalPower
   661 op mul *tmp474 :drawPower:power 100
   662 op idiv *tmp476 *tmp474 4000
   663 op mul *tmp482 :drawPower:power 0.0315
   664 op min :drawItemColor.15:length 126 *tmp482
   665 draw col %[white]
-    * op add *tmp493 5 5
   666 draw image 11 10 @battery 16 0
   667 draw col %808000FF
   668 draw rect 22 5 :drawItemColor.15:length 10
   669 draw col %FFFF00FF
   670 draw lineRect 22 5 126 10
-    * op add *tmp494 5 5
-    * op add *tmp495 5 7
-    * set :drawBold.15:y 12
   671 print *tmp476
   672 print "%"
   673 draw print 174 12 @right
 
   678 label *label217
   679 label *label215
   680 jump *label218 lessThan 1 1
-    * op sub :drawItemColor.15:y 5 15
   681 label *label218
   682 label *label219
   683 label *label214
 
  1403 label *label409
  1404 draw col *tmp714
  1405 label *label405
-    * op mul *tmp715 2 :unpackCfg:x
-    * op mul *tmp716 2 :unpackCfg:y
+ 1406 op div *tmp715 *tmp687 1
+ 1407 op div *tmp716 *tmp691 1
  1408 op mul *tmp717 2 :unpackCfg:size
  1409 op mul *tmp718 90 :unpackCfg:rotation
  1410 draw image *tmp715 *tmp716 :unpackCfg:type *tmp717 *tmp718

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-9 instructions):
 
   249 label *label93
   250 label *label91
   251 jump *label94 lessThan 1 1
-    * op sub :drawItemColor.2:y :updateDisplay:y 30
   252 label *label94
   253 label *label95
   254 label *label90
 
   284 op mul *tmp198 *tmp192 4.2
   285 op min :drawItemColor.4:length 126 *tmp198
   286 draw col %[white]
-    * op sub *tmp209 :drawTitleRow.2:y 10
+  287 op sub *tmp209 :updateDisplay:y 25
   288 draw image 11 *tmp209 @silicon 16 0
   289 draw col %008000FF
   290 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   291 draw col %00FF00FF
   292 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op sub *tmp210 :drawTitleRow.2:y 10
-    * op sub *tmp211 :drawTitleRow.2:y 8
+  293 op sub *tmp210 :updateDisplay:y 25
+  294 op sub *tmp211 :updateDisplay:y 23
   295 print 30
   296 draw print 174 *tmp211 @right
   297 label *label106
 
   300 label *label107
   301 label *label105
   302 jump *label108 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawTitleRow.2:y 30
+  303 op sub :drawItemColor.4:y :updateDisplay:y 45
   304 label *label108
   305 label *label109
   306 label *label104
 
   312 op idiv *tmp216 :drawAirFactory:progress 0.01
   313 set :drawItem.5:item .nextFactory
   314 op mul *tmp221 126 :drawAirFactory:progress
-    * op mul *tmp222 :drawAirFactory:progress 126
   315 op min :drawItemColor.5:length 126 *tmp221
   316 draw col %[white]
   317 op sub *tmp233 :updateDisplay:y 10
 
   331 label *label114
   332 label *label112
   333 jump *label115 lessThan 1 1
-    * op sub :drawItemColor.5:y :updateDisplay:y 30
   334 label *label115
   335 label *label116
   336 label *label111
 
   382 op mul *tmp273 *tmp267 3.1500000000000004
   383 op min :drawItemColor.7:length 126 *tmp273
   384 draw col %[white]
-    * op sub *tmp284 :drawTitleRow.3:y 10
+  385 op sub *tmp284 :updateDisplay:y 25
   386 draw image 11 *tmp284 @silicon 16 0
   387 draw col %008000FF
   388 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   389 draw col %00FF00FF
   390 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op sub *tmp285 :drawTitleRow.3:y 10
-    * op sub *tmp286 :drawTitleRow.3:y 8
+  391 op sub *tmp285 :updateDisplay:y 25
+  392 op sub *tmp286 :updateDisplay:y 23
   393 print 40
   394 draw print 174 *tmp286 @right
   395 label *label135
 
   398 label *label136
   399 label *label134
   400 jump *label137 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawTitleRow.3:y 30
+  401 op sub :drawItemColor.7:y :updateDisplay:y 45
   402 label *label137
   403 label *label138
   404 label *label133
 
   408 label *label123
   409 op idiv *tmp291 :drawAddReco:progress 0.01
   410 op mul *tmp296 126 :drawAddReco:progress
-    * op mul *tmp297 :drawAddReco:progress 126
   411 op min :drawItemColor.8:length 126 *tmp296
   412 draw col %[white]
   413 op sub *tmp308 :updateDisplay:y 10
 
   427 label *label143
   428 label *label141
   429 jump *label144 lessThan 1 1
-    * op sub :drawItemColor.8:y :updateDisplay:y 30
   430 label *label144
   431 label *label145
   432 label *label140
 
   479 op div *tmp349 *tmp343 0.6349206349206349
   480 op min :drawItemColor.10:length 126 *tmp349
   481 draw col %[white]
-    * op sub *tmp360 :drawTitleRow.4:y 10
+  482 op sub *tmp360 :updateDisplay:y 25
   483 draw image 11 *tmp360 @titanium 16 0
   484 draw col %008000FF
   485 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   486 draw col %00FF00FF
   487 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op sub *tmp361 :drawTitleRow.4:y 10
-    * op sub *tmp362 :drawTitleRow.4:y 8
+  488 op sub *tmp361 :updateDisplay:y 25
+  489 op sub *tmp362 :updateDisplay:y 23
   490 print 80
   491 draw print 174 *tmp362 @right
   492 label *label164
 
   495 label *label165
   496 label *label163
   497 jump *label166 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawTitleRow.4:y 30
+  498 op sub :drawItemColor.10:y :updateDisplay:y 45
   499 label *label166
   500 label *label167
   501 label *label162
 
   504 op div *tmp372 *tmp366 1.0317460317460319
   505 op min :drawItemColor.11:length 126 *tmp372
   506 draw col %[white]
-    * op sub *tmp383 :drawItemColor.9:y 10
+  507 op sub *tmp383 :updateDisplay:y 40
   508 draw image 11 *tmp383 @silicon 16 0
   509 draw col %008000FF
   510 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   511 draw col %00FF00FF
   512 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op sub *tmp384 :drawItemColor.9:y 10
-    * op sub *tmp385 :drawItemColor.9:y 8
+  513 op sub *tmp384 :updateDisplay:y 40
+  514 op sub *tmp385 :updateDisplay:y 38
   515 print 130
   516 draw print 174 *tmp385 @right
   517 label *label171
 
   520 label *label172
   521 label *label170
   522 jump *label173 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItemColor.9:y 30
+  523 op sub :drawItemColor.11:y :updateDisplay:y 60
   524 label *label173
   525 label *label174
   526 label *label169
 
   530 label *label152
   531 op idiv *tmp390 :drawMultiReco:progress 0.01
   532 op mul *tmp395 126 :drawMultiReco:progress
-    * op mul *tmp396 :drawMultiReco:progress 126
   533 op min :drawItemColor.12:length 126 *tmp395
   534 draw col %[white]
   535 op sub *tmp407 :updateDisplay:y 10
 
   549 label *label179
   550 label *label177
   551 jump *label180 lessThan 1 1
-    * op sub :drawItemColor.12:y :updateDisplay:y 30
   552 label *label180
   553 label *label181
   554 label *label176
 
   576 op div *tmp422 0 :drawItem.13:target
   577 op min :drawItemColor.13:length 126 *tmp422
   578 draw col %[white]
-    * op add *tmp433 :drawTitleRow.5:y 5
+  579 op sub *tmp433 :updateDisplay:y 10
   580 draw image 11 *tmp433 @poly 16 0
   581 draw col %008000FF
   582 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   583 draw col %00FF00FF
   584 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp435 :drawTitleRow.5:y 7
+  585 op sub *tmp435 :updateDisplay:y 8
   586 print .transportTarget
   587 draw print 174 *tmp435 @right
   588 label *label194
 
   591 label *label195
   592 label *label193
   593 jump *label196 lessThan 1 1
-    * op sub :drawItemColor.13:y :drawTitleRow.5:y 15
+  594 op sub :drawItemColor.13:y :updateDisplay:y 30
   595 label *label196
   596 label *label197
   597 label *label192
 
   610 op div *tmp450 *tmp449 :drawItem.14:target
   611 op min :drawItemColor.14:length 126 *tmp450
   612 draw col %[white]
-    * op add *tmp461 :drawTitleRow.5:y 5
+  613 op sub *tmp461 :updateDisplay:y 10
   614 draw image 11 *tmp461 :drawUnit.1:item 16 0
   615 draw col %008000FF
   616 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   617 draw col %00FF00FF
   618 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp463 :drawTitleRow.5:y 7
+  619 op sub *tmp463 :updateDisplay:y 8
   620 print .transportTarget
   621 draw print 174 *tmp463 @right
   622 label *label202
 
   625 label *label203
   626 label *label201
   627 jump *label204 lessThan 1 1
-    * op sub :drawItemColor.14:y :drawTitleRow.5:y 15
+  628 op sub :drawItemColor.14:y :updateDisplay:y 30
   629 label *label204
   630 label *label205
   631 label *label200
 
  1366 lookup block :unpackCfg:type *tmp683
  1367 read *tmp686 :drawBlock:cfg 2
  1368 op sub *tmp687 *tmp686 74
-    * op div :unpackCfg:x *tmp687 2
  1369 read *tmp690 :drawBlock:cfg 3
  1370 op sub *tmp691 *tmp690 74
-    * op div :unpackCfg:y *tmp691 2
  1371 read *tmp694 :drawBlock:cfg 4
  1372 op sub :unpackCfg:rotation *tmp694 74
  1373 read *tmp697 :drawBlock:cfg 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-4 instructions):
 
   290 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   291 draw col %00FF00FF
   292 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op sub *tmp210 :updateDisplay:y 25
   293 op sub *tmp211 :updateDisplay:y 23
   294 print 30
   295 draw print 174 *tmp211 @right
 
   387 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   388 draw col %00FF00FF
   389 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op sub *tmp285 :updateDisplay:y 25
   390 op sub *tmp286 :updateDisplay:y 23
   391 print 40
   392 draw print 174 *tmp286 @right
 
   483 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   484 draw col %00FF00FF
   485 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op sub *tmp361 :updateDisplay:y 25
   486 op sub *tmp362 :updateDisplay:y 23
   487 print 80
   488 draw print 174 *tmp362 @right
 
   507 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   508 draw col %00FF00FF
   509 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op sub *tmp384 :updateDisplay:y 40
   510 op sub *tmp385 :updateDisplay:y 38
   511 print 130
   512 draw print 174 *tmp385 @right

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   746 op sub :displayStorage:y.1 190 8
   747 set :displayStorage:i 0
   748 label *label243
-    * jump *label245 greaterThanEq :displayStorage:i 9
+  749 label *label410
   750 op and *tmp513 :displayStorage:accumulator 0b11111
   751 op sub :displayStorage:value *tmp513 8
   752 jump *label246 lessThan :displayStorage:value 0
 
   761 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   762 label *label244
   763 op add :displayStorage:i :displayStorage:i 1
-    * jump *label243 always
+  764 jump *label410 lessThan :displayStorage:i 9
   765 label *label245
   766 drawflush display1
   767 op add .lastTail .lastTail 1
 
  1031 op sub :displayLog:position .lastRecord 1
  1032 label *label323
  1033 jump *label325 lessThan :displayLog:position :displayLog:stop
+ 1034 label *label411
  1035 read :displayLog:record bank1 :displayLog:position
  1036 op sub *tmp570 :displayLog:start :displayLog:position
  1037 op sub *tmp571 *tmp570 1
 
  1077 label *label333
  1078 label *label324
  1079 op sub :displayLog:position :displayLog:position 1
-    * jump *label323 always
+ 1080 jump *label411 greaterThanEq :displayLog:position :displayLog:stop
  1081 label *label325
  1082 op add .lastRecord :displayLog:stop 1
  1083 drawflush display1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-21 instructions):
 
   101 draw print 175 193 @right
   102 label *label46
   103 label *label44
-    * jump *label47 lessThan 1 1
-    * label *label47
-    * label *label48
   104 label *label43
   105 label *label42
   106 op sub :updateDisplay:y 171 35
 
   245 draw print 175 *tmp165 @right
   246 label *label93
   247 label *label91
-    * jump *label94 lessThan 1 1
-    * label *label94
-    * label *label95
   248 label *label90
   249 label *label89
   250 op sub :updateDisplay:y :drawTitleRow.2:y 30
 
   323 draw print 175 *tmp235 @right
   324 label *label114
   325 label *label112
-    * jump *label115 lessThan 1 1
-    * label *label115
-    * label *label116
   326 label *label111
   327 label *label110
   328 op sub :updateDisplay:y :drawTitleRow.2:y 30
 
   415 draw print 175 *tmp310 @right
   416 label *label143
   417 label *label141
-    * jump *label144 lessThan 1 1
-    * label *label144
-    * label *label145
   418 label *label140
   419 label *label139
   420 op sub :updateDisplay:y :drawTitleRow.3:y 30
 
   532 draw print 175 *tmp409 @right
   533 label *label179
   534 label *label177
-    * jump *label180 lessThan 1 1
-    * label *label180
-    * label *label181
   535 label *label176
   536 label *label175
   537 op sub :updateDisplay:y :drawTitleRow.4:y 45
 
   651 draw print 175 12 @right
   652 label *label217
   653 label *label215
-    * jump *label218 lessThan 1 1
-    * label *label218
-    * label *label219
   654 label *label214
   655 label *label206
   656 drawflush display1
 
   731 label *label410
   732 op and *tmp513 :displayStorage:accumulator 0b11111
   733 op sub :displayStorage:value *tmp513 8
-    * jump *label246 lessThan :displayStorage:value 0
-    * set *tmp516 %[green]
-    * jump *label247 always
-    * label *label246
-    * set *tmp516 %[red]
-    * label *label247
+  734 select *tmp516 greaterThanEq :displayStorage:value 0 %[green] %[red]
   735 draw col *tmp516
   736 draw rect :displayStorage:x :displayStorage:y.1 1 :displayStorage:value
   737 op sub :displayStorage:y.1 :displayStorage:y.1 21
 
  1030 op idiv :displayRecord:t *tmp584 120
  1031 op idiv :displayRecord:m :displayRecord:t 60
  1032 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label329 greaterThanEq :displayRecord:s 10
-    * set *tmp590 "0"
-    * jump *label330 always
-    * label *label329
-    * set *tmp590 ""
-    * label *label330
+ 1033 select *tmp590 lessThan :displayRecord:s 10 "0" ""
  1034 print :displayRecord:m
  1035 print ":"
  1036 print *tmp590
 
  1112 op idiv :drawHeader:t *tmp0 120
  1113 op idiv :drawHeader:m :drawHeader:t 60
  1114 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label342 greaterThanEq :drawHeader:s 10
-    * set *tmp613 "0"
-    * jump *label343 always
-    * label *label342
-    * set *tmp613 ""
-    * label *label343
+ 1115 select *tmp613 lessThan :drawHeader:s 10 "0" ""
  1116 print :drawHeader:m
  1117 print ":"
  1118 print *tmp613
 
  1211 op idiv :drawHeader:t.1 *tmp0 120
  1212 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  1213 op mod :drawHeader:s.1 :drawHeader:t.1 60
-    * jump *label376 greaterThanEq :drawHeader:s.1 10
-    * set *tmp637 "0"
-    * jump *label377 always
-    * label *label376
-    * set *tmp637 ""
-    * label *label377
+ 1214 select *tmp637 lessThan :drawHeader:s.1 10 "0" ""
  1215 print :drawHeader:m.1
  1216 print ":"
  1217 print *tmp637
 
  1345 jump *label401 always
  1346 label *label406
  1347 label *label407
-    * jump *label408 equal :drawBlock:built false
-    * set *tmp714 %[white]
-    * jump *label409 always
-    * label *label408
-    * set *tmp714 %408040ff
-    * label *label409
+ 1348 select *tmp714 notEqual :drawBlock:built false %[white] %408040ff
  1349 draw col *tmp714
  1350 label *label405
  1351 op div *tmp715 *tmp687 1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
  1019 op mul *tmp576 15 :displayRecord:row
  1020 op sub :displayRecord:y 189 *tmp576
  1021 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label327 lessThanEq :displayRecord:id @blockCount
+ 1022 lookup block *tmp580 :displayRecord:id
+ 1023 jump *label328 lessThanEq :displayRecord:id @blockCount
  1024 op sub *tmp581 :displayRecord:id @blockCount
  1025 lookup unit *tmp580 *tmp581
  1026 jump *label328 always
-    * label *label327
-    * lookup block *tmp580 :displayRecord:id
  1027 label *label328
  1028 op div *tmp584 :displayLog:record 1000
  1029 op idiv :displayRecord:t *tmp584 120

Modifications by Unroll iteration loop at Display.mnd:574:9 (-2 instructions):
 
   672 label *label225
   673 draw col %[white]
   674 op sub :displayStorage:y 190 8
-    * set :displayStorage:item @copper
-    * setaddr *tmp506 *label231
-    * jump *label228 always
-    * multilabel *label231 (m:marker1)
-    * set :displayStorage:item @lead
-    * setaddr *tmp506 *label232
-    * jump *label228 always
-    * multilabel *label232 (m:marker1)
-    * set :displayStorage:item @sand
-    * setaddr *tmp506 *label233
-    * jump *label228 always
-    * multilabel *label233 (m:marker1)
-    * set :displayStorage:item @coal
-    * setaddr *tmp506 *label234
-    * jump *label228 always
-    * multilabel *label234 (m:marker1)
-    * set :displayStorage:item @graphite
-    * setaddr *tmp506 *label235
-    * jump *label228 always
-    * multilabel *label235 (m:marker1)
-    * set :displayStorage:item @silicon
-    * setaddr *tmp506 *label236
-    * jump *label228 always
-    * multilabel *label236 (m:marker1)
-    * set :displayStorage:item @titanium
-    * setaddr *tmp506 *label237
-    * jump *label228 always
-    * multilabel *label237 (m:marker1)
-    * set :displayStorage:item @metaglass
-    * setaddr *tmp506 *label238
-    * jump *label228 always
-    * multilabel *label238 (m:marker1)
-    * set :displayStorage:item @thorium
-    * setaddr *tmp506 *label239
-    * label *label228
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
-    * label *label229
-    * multijump *tmp506 0 0 (m:marker1)
-    * multilabel *label239 (m:marker1)
-    * label *label230
+  675 set :displayStorage:item @copper
+  676 label *label412
+  677 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  678 op sub :displayStorage:y :displayStorage:y 21
+  679 label *label413
+  680 set :displayStorage:item @lead
+  681 label *label416
+  682 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  683 op sub :displayStorage:y :displayStorage:y 21
+  684 label *label417
+  685 set :displayStorage:item @sand
+  686 label *label420
+  687 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  688 op sub :displayStorage:y :displayStorage:y 21
+  689 label *label421
+  690 set :displayStorage:item @coal
+  691 label *label424
+  692 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  693 op sub :displayStorage:y :displayStorage:y 21
+  694 label *label425
+  695 set :displayStorage:item @graphite
+  696 label *label428
+  697 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  698 op sub :displayStorage:y :displayStorage:y 21
+  699 label *label429
+  700 set :displayStorage:item @silicon
+  701 label *label432
+  702 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  703 op sub :displayStorage:y :displayStorage:y 21
+  704 label *label433
+  705 set :displayStorage:item @titanium
+  706 label *label436
+  707 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  708 op sub :displayStorage:y :displayStorage:y 21
+  709 label *label437
+  710 set :displayStorage:item @metaglass
+  711 label *label440
+  712 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  713 op sub :displayStorage:y :displayStorage:y 21
+  714 label *label441
+  715 set :displayStorage:item @thorium
+  716 label *label444
+  717 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  718 op sub :displayStorage:y :displayStorage:y 21
+  719 label *label445
+  720 label *label230
   721 label *label223
   722 label *label224
   723 setaddr :drawHeader*retaddr *label240 (h:*label240)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   674 op sub :displayStorage:y 190 8
   675 set :displayStorage:item @copper
   676 label *label412
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  677 draw image 12 182 @copper 15 0
+  678 op sub :displayStorage:y 182 21
   679 label *label413
   680 set :displayStorage:item @lead
   681 label *label416
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  682 draw image 12 161 @lead 15 0
+  683 op sub :displayStorage:y 161 21
   684 label *label417
   685 set :displayStorage:item @sand
   686 label *label420
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  687 draw image 12 140 @sand 15 0
+  688 op sub :displayStorage:y 140 21
   689 label *label421
   690 set :displayStorage:item @coal
   691 label *label424
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  692 draw image 12 119 @coal 15 0
+  693 op sub :displayStorage:y 119 21
   694 label *label425
   695 set :displayStorage:item @graphite
   696 label *label428
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  697 draw image 12 98 @graphite 15 0
+  698 op sub :displayStorage:y 98 21
   699 label *label429
   700 set :displayStorage:item @silicon
   701 label *label432
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  702 draw image 12 77 @silicon 15 0
+  703 op sub :displayStorage:y 77 21
   704 label *label433
   705 set :displayStorage:item @titanium
   706 label *label436
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  707 draw image 12 56 @titanium 15 0
+  708 op sub :displayStorage:y 56 21
   709 label *label437
   710 set :displayStorage:item @metaglass
   711 label *label440
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  712 draw image 12 35 @metaglass 15 0
+  713 op sub :displayStorage:y 35 21
   714 label *label441
   715 set :displayStorage:item @thorium
   716 label *label444
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  717 draw image 12 14 @thorium 15 0
+  718 op sub :displayStorage:y 14 21
   719 label *label445
   720 label *label230
   721 label *label223

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
   671 label *label227
   672 label *label225
   673 draw col %[white]
-    * op sub :displayStorage:y 190 8
-    * set :displayStorage:item @copper
   674 label *label412
   675 draw image 12 182 @copper 15 0
-    * op sub :displayStorage:y 182 21
   676 label *label413
-    * set :displayStorage:item @lead
   677 label *label416
   678 draw image 12 161 @lead 15 0
-    * op sub :displayStorage:y 161 21
   679 label *label417
-    * set :displayStorage:item @sand
   680 label *label420
   681 draw image 12 140 @sand 15 0
-    * op sub :displayStorage:y 140 21
   682 label *label421
-    * set :displayStorage:item @coal
   683 label *label424
   684 draw image 12 119 @coal 15 0
-    * op sub :displayStorage:y 119 21
   685 label *label425
-    * set :displayStorage:item @graphite
   686 label *label428
   687 draw image 12 98 @graphite 15 0
-    * op sub :displayStorage:y 98 21
   688 label *label429
-    * set :displayStorage:item @silicon
   689 label *label432
   690 draw image 12 77 @silicon 15 0
-    * op sub :displayStorage:y 77 21
   691 label *label433
-    * set :displayStorage:item @titanium
   692 label *label436
   693 draw image 12 56 @titanium 15 0
-    * op sub :displayStorage:y 56 21
   694 label *label437
-    * set :displayStorage:item @metaglass
   695 label *label440
   696 draw image 12 35 @metaglass 15 0
-    * op sub :displayStorage:y 35 21
   697 label *label441
-    * set :displayStorage:item @thorium
   698 label *label444
   699 draw image 12 14 @thorium 15 0
-    * op sub :displayStorage:y 14 21
   700 label *label445
   701 label *label230
   702 label *label223

Modifications by Unroll iteration loop at Display.mnd:154:17:
 
  1143 label *label354
  1144 jump *label356 notEqual :drawHeader:count 2
  1145 set :drawHeader:x 27
-    * set :drawHeader:goal .nextBlock
-    * setaddr *tmp624 *label361
-    * jump *label358 always
-    * multilabel *label361 (m:marker3)
-    * set :drawHeader:goal .nextFactory
-    * setaddr *tmp624 *label362
-    * jump *label358 always
-    * multilabel *label362 (m:marker3)
-    * set :drawHeader:goal .nextAddReco
-    * setaddr *tmp624 *label363
-    * label *label358
-    * jump *label364 equal :drawHeader:goal null
-    * draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
-    * label *label364
-    * label *label365
-    * label *label359
-    * multijump *tmp624 0 0 (m:marker3)
-    * multilabel *label363 (m:marker3)
-    * label *label360
+ 1146 set :drawHeader:goal .nextBlock
+ 1147 label *label449
+ 1148 jump *label450 equal :drawHeader:goal null
+ 1149 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1150 op add :drawHeader:x :drawHeader:x 30
+ 1151 label *label450
+ 1152 label *label451
+ 1153 label *label452
+ 1154 set :drawHeader:goal .nextFactory
+ 1155 label *label455
+ 1156 jump *label456 equal :drawHeader:goal null
+ 1157 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1158 op add :drawHeader:x :drawHeader:x 30
+ 1159 label *label456
+ 1160 label *label457
+ 1161 label *label458
+ 1162 set :drawHeader:goal .nextAddReco
+ 1163 label *label461
+ 1164 jump *label462 equal :drawHeader:goal null
+ 1165 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1166 op add :drawHeader:x :drawHeader:x 30
+ 1167 label *label462
+ 1168 label *label463
+ 1169 label *label464
+ 1170 label *label360
  1171 jump *label357 always
  1172 label *label356
  1173 jump *label366 notEqual :drawHeader:count 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
  1146 set :drawHeader:goal .nextBlock
  1147 label *label449
  1148 jump *label450 equal :drawHeader:goal null
-    * draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
+ 1149 draw image 27 240 :drawHeader:goal 25 0
+ 1150 op add :drawHeader:x 27 30
  1151 label *label450
  1152 label *label451
  1153 label *label452
 
  1163 label *label461
  1164 jump *label462 equal :drawHeader:goal null
  1165 draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
  1166 label *label462
  1167 label *label463
  1168 label *label464

Modifications by Unroll iteration loop at Display.mnd:161:17:
 
  1170 jump *label357 always
  1171 label *label356
  1172 jump *label366 notEqual :drawHeader:count 1
-    * set :drawHeader:goal.1 .nextBlock
-    * setaddr *tmp629 *label371
-    * jump *label368 always
-    * multilabel *label371 (m:marker4)
-    * set :drawHeader:goal.1 .nextFactory
-    * setaddr *tmp629 *label372
-    * jump *label368 always
-    * multilabel *label372 (m:marker4)
-    * set :drawHeader:goal.1 .nextAddReco
-    * setaddr *tmp629 *label373
-    * label *label368
-    * jump *label374 equal :drawHeader:goal.1 null
-    * draw image 42 237 :drawHeader:goal.1 32 0
-    * jump *label370 always
-    * label *label374
-    * label *label375
-    * label *label369
-    * multijump *tmp629 0 0 (m:marker4)
-    * multilabel *label373 (m:marker4)
-    * label *label370
+ 1173 set :drawHeader:goal.1 .nextBlock
+ 1174 label *label468
+ 1175 jump *label469 equal :drawHeader:goal.1 null
+ 1176 draw image 42 237 :drawHeader:goal.1 32 0
+ 1177 jump *label370 always
+ 1178 label *label469
+ 1179 label *label470
+ 1180 label *label471
+ 1181 set :drawHeader:goal.1 .nextFactory
+ 1182 label *label474
+ 1183 jump *label475 equal :drawHeader:goal.1 null
+ 1184 draw image 42 237 :drawHeader:goal.1 32 0
+ 1185 jump *label370 always
+ 1186 label *label475
+ 1187 label *label476
+ 1188 label *label477
+ 1189 set :drawHeader:goal.1 .nextAddReco
+ 1190 label *label480
+ 1191 jump *label481 equal :drawHeader:goal.1 null
+ 1192 draw image 42 237 :drawHeader:goal.1 32 0
+ 1193 jump *label370 always
+ 1194 label *label481
+ 1195 label *label482
+ 1196 label *label483
+ 1197 label *label370
  1198 label *label366
  1199 label *label367
  1200 label *label357

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-9 instructions):
 
   268 draw print 175 *tmp188 @right
   269 label *label100
   270 label *label98
-    * jump *label101 lessThan 1 1
   271 op sub :drawItemColor.3:y :updateDisplay:y 30
   272 label *label101
   273 label *label102
 
   291 draw print 175 *tmp211 @right
   292 label *label107
   293 label *label105
-    * jump *label108 lessThan 1 1
   294 op sub :drawItemColor.4:y :updateDisplay:y 45
   295 label *label108
   296 label *label109
 
   360 draw print 175 *tmp263 @right
   361 label *label129
   362 label *label127
-    * jump *label130 lessThan 1 1
   363 op sub :drawItemColor.6:y :updateDisplay:y 30
   364 label *label130
   365 label *label131
 
   383 draw print 175 *tmp286 @right
   384 label *label136
   385 label *label134
-    * jump *label137 lessThan 1 1
   386 op sub :drawItemColor.7:y :updateDisplay:y 45
   387 label *label137
   388 label *label138
 
   451 draw print 175 *tmp339 @right
   452 label *label158
   453 label *label156
-    * jump *label159 lessThan 1 1
   454 op sub :drawItemColor.9:y :updateDisplay:y 30
   455 label *label159
   456 label *label160
 
   474 draw print 175 *tmp362 @right
   475 label *label165
   476 label *label163
-    * jump *label166 lessThan 1 1
   477 op sub :drawItemColor.10:y :updateDisplay:y 45
   478 label *label166
   479 label *label167
 
   497 draw print 175 *tmp385 @right
   498 label *label172
   499 label *label170
-    * jump *label173 lessThan 1 1
   500 op sub :drawItemColor.11:y :updateDisplay:y 60
   501 label *label173
   502 label *label174
 
   564 draw print 175 *tmp435 @right
   565 label *label195
   566 label *label193
-    * jump *label196 lessThan 1 1
   567 op sub :drawItemColor.13:y :updateDisplay:y 30
   568 label *label196
   569 label *label197
 
   597 draw print 175 *tmp463 @right
   598 label *label203
   599 label *label201
-    * jump *label204 lessThan 1 1
   600 op sub :drawItemColor.14:y :updateDisplay:y 30
   601 label *label204
   602 label *label205

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
  1000 jump *label328 lessThanEq :displayRecord:id @blockCount
  1001 op sub *tmp581 :displayRecord:id @blockCount
  1002 lookup unit *tmp580 *tmp581
-    * jump *label328 always
  1003 label *label328
  1004 op div *tmp584 :displayLog:record 1000
  1005 op idiv :displayRecord:t *tmp584 120
 
  1180 label *label480
  1181 jump *label481 equal :drawHeader:goal.1 null
  1182 draw image 42 237 :drawHeader:goal.1 32 0
-    * jump *label370 always
  1183 label *label481
  1184 label *label482
  1185 label *label483

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   547 label *label185
   548 jump *label188 notEqual .transportItem null
   549 set :drawItem.13:target .transportTarget
-    * op div *tmp422 0 :drawItem.13:target
+  550 set *tmp422 0
   551 op min :drawItemColor.13:length 126 *tmp422
   552 draw col %[white]
   553 op sub *tmp433 :updateDisplay:y 10
 
  1331 select *tmp714 notEqual :drawBlock:built false %[white] %408040ff
  1332 draw col *tmp714
  1333 label *label405
-    * op div *tmp715 *tmp687 1
-    * op div *tmp716 *tmp691 1
+ 1334 set *tmp715 *tmp687
+ 1335 set *tmp716 *tmp691
  1336 op mul *tmp717 2 :unpackCfg:size
  1337 op mul *tmp718 90 :unpackCfg:rotation
  1338 draw image *tmp715 *tmp716 :unpackCfg:type *tmp717 *tmp718

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   546 op sub :drawTitleRow.5:y :updateDisplay:y 15
   547 label *label185
   548 jump *label188 notEqual .transportItem null
-    * set :drawItem.13:target .transportTarget
   549 set *tmp422 0
-    * op min :drawItemColor.13:length 126 *tmp422
+  550 op min :drawItemColor.13:length 126 0
   551 draw col %[white]
   552 op sub *tmp433 :updateDisplay:y 10
   553 draw image 11 *tmp433 @poly 16 0
   554 draw col %008000FF
-    * draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
+  555 draw rect 22 :drawTitleRow.5:y 0 10
   556 draw col %00FF00FF
   557 draw lineRect 22 :drawTitleRow.5:y 126 10
   558 op sub *tmp435 :updateDisplay:y 8
 
  1334 set *tmp716 *tmp691
  1335 op mul *tmp717 2 :unpackCfg:size
  1336 op mul *tmp718 90 :unpackCfg:rotation
-    * draw image *tmp715 *tmp716 :unpackCfg:type *tmp717 *tmp718
+ 1337 draw image *tmp687 *tmp691 :unpackCfg:type *tmp717 *tmp718
  1338 label *label401
  1339 return :drawBlock*retaddr
  1340 end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
   546 op sub :drawTitleRow.5:y :updateDisplay:y 15
   547 label *label185
   548 jump *label188 notEqual .transportItem null
-    * set *tmp422 0
-    * op min :drawItemColor.13:length 126 0
   549 draw col %[white]
   550 op sub *tmp433 :updateDisplay:y 10
   551 draw image 11 *tmp433 @poly 16 0
 
  1328 select *tmp714 notEqual :drawBlock:built false %[white] %408040ff
  1329 draw col *tmp714
  1330 label *label405
-    * set *tmp715 *tmp687
-    * set *tmp716 *tmp691
  1331 op mul *tmp717 2 :unpackCfg:size
  1332 op mul *tmp718 90 :unpackCfg:rotation
  1333 draw image *tmp687 *tmp691 :unpackCfg:type *tmp717 *tmp718

Modifications by Virtual Instruction Expansion:
 
   918 set :displayBaseMap:index .recentBuildIndex
   919 jump *label307 lessThan :displayBaseMap:index 0
   920 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
+  921 setaddr .BLOCKS*rret *label524 (h:marker6)
+  922 op mul *tmp1063 :displayBaseMap:index 2
+  923 multicall *label487 *tmp1063 (m:marker5) (h:marker6)
+  924 label *label524
+  925 set :drawBlock:cfg .BLOCKS*r
   926 setaddr :drawBlock*retaddr *label309 (h:*label309)
   927 call *label8 *invalid :drawBlock*retval (m:*label309) (h:*label309)
   928 label *label309
   929 set :displayBaseMap:index .nextBuildIndex
   930 jump *label310 greaterThanEq :displayBaseMap:index 36
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
+  931 setaddr .BLOCKS*rret *label525 (h:marker7)
+  932 op mul *tmp1064 :displayBaseMap:index 2
+  933 multicall *label487 *tmp1064 (m:marker5) (h:marker7)
+  934 label *label525
+  935 set :drawBlock:cfg .BLOCKS*r
   936 setaddr :drawBlock*retaddr *label312 (h:*label312)
   937 call *label8 *invalid :drawBlock*retval (m:*label312) (h:*label312)
   938 label *label312
 
  1342 label *label401
  1343 return :drawBlock*retaddr
  1344 end
+ 1345 multilabel *label487 (m:marker5)
+ 1346 set .BLOCKS*r "AJEMJJ-graphite-press0"
+ 1347 return .BLOCKS*rret
+ 1348 multilabel *label488 (m:marker5)
+ 1349 set .BLOCKS*r "AJTJK-battery1"
+ 1350 return .BLOCKS*rret
+ 1351 multilabel *label489 (m:marker5)
+ 1352 set .BLOCKS*r "ALTJL-battery2"
+ 1353 return .BLOCKS*rret
+ 1354 multilabel *label490 (m:marker5)
+ 1355 set .BLOCKS*r "AJRJM-combustion-generator3"
+ 1356 return .BLOCKS*rret
+ 1357 multilabel *label491 (m:marker5)
+ 1358 set .BLOCKS*r "ALMQJN-silicon-smelter4"
+ 1359 return .BLOCKS*rret
+ 1360 multilabel *label492 (m:marker5)
+ 1361 set .BLOCKS*r "A{LNJO-inverted-sorter5"
+ 1362 return .BLOCKS*rret
+ 1363 multilabel *label493 (m:marker5)
+ 1364 set .BLOCKS*r "A©JNJP-unloader6"
+ 1365 return .BLOCKS*rret
+ 1366 multilabel *label494 (m:marker5)
+ 1367 set .BLOCKS*r "A{HNJQ-inverted-sorter7"
+ 1368 return .BLOCKS*rret
+ 1369 multilabel *label495 (m:marker5)
+ 1370 set .BLOCKS*r "AJPJR-underflow-gate8"
+ 1371 return .BLOCKS*rret
+ 1372 multilabel *label496 (m:marker5)
+ 1373 set .BLOCKS*r "AÕFFJS-micro-processor9"
+ 1374 return .BLOCKS*rret
+ 1375 multilabel *label497 (m:marker5)
+ 1376 set .BLOCKS*r "AFHJT-power-node10"
+ 1377 return .BLOCKS*rret
+ 1378 multilabel *label498 (m:marker5)
+ 1379 set .BLOCKS*r "A©FJJU-unloader11"
+ 1380 return .BLOCKS*rret
+ 1381 multilabel *label499 (m:marker5)
+ 1382 set .BLOCKS*r "A~DJJV-overflow-gate12"
+ 1383 return .BLOCKS*rret
+ 1384 multilabel *label500 (m:marker5)
+ 1385 set .BLOCKS*r "A¾BFLW-air-factory13"
+ 1386 return .BLOCKS*rret
+ 1387 multilabel *label501 (m:marker5)
+ 1388 set .BLOCKS*r "A©NHJX-unloader14"
+ 1389 return .BLOCKS*rret
+ 1390 multilabel *label502 (m:marker5)
+ 1391 set .BLOCKS*r "A{NJJY-inverted-sorter15"
+ 1392 return .BLOCKS*rret
+ 1393 multilabel *label503 (m:marker5)
+ 1394 set .BLOCKS*r "ANOMJZ-kiln16"
+ 1395 return .BLOCKS*rret
+ 1396 multilabel *label504 (m:marker5)
+ 1397 set .BLOCKS*r "AÜAOJ[-liquid-container17"
+ 1398 return .BLOCKS*rret
+ 1399 multilabel *label505 (m:marker5)
+ 1400 set .BLOCKS*r "A¡ASJ\-water-extractor18"
+ 1401 return .BLOCKS*rret
+ 1402 multilabel *label506 (m:marker5)
+ 1403 set .BLOCKS*r "AAKJ]-steam-generator19"
+ 1404 return .BLOCKS*rret
+ 1405 multilabel *label507 (m:marker5)
+ 1406 set .BLOCKS*r "ALQIJ^-silicon-smelter20"
+ 1407 return .BLOCKS*rret
+ 1408 multilabel *label508 (m:marker5)
+ 1409 set .BLOCKS*r "AKFRJ_-multi-press21"
+ 1410 return .BLOCKS*rret
+ 1411 multilabel *label509 (m:marker5)
+ 1412 set .BLOCKS*r "A©HFJ`-unloader22"
+ 1413 return .BLOCKS*rret
+ 1414 multilabel *label510 (m:marker5)
+ 1415 set .BLOCKS*r "A{HDJa-inverted-sorter23"
+ 1416 return .BLOCKS*rret
+ 1417 multilabel *label511 (m:marker5)
+ 1418 set .BLOCKS*r "AÀF@Lb-additive-reconstructor24"
+ 1419 return .BLOCKS*rret
+ 1420 multilabel *label512 (m:marker5)
+ 1421 set .BLOCKS*r "AÁNBJc-multiplicative-reconstructor25"
+ 1422 return .BLOCKS*rret
+ 1423 multilabel *label513 (m:marker5)
+ 1424 set .BLOCKS*r "AXPRJd-pulverizer26"
+ 1425 return .BLOCKS*rret
+ 1426 multilabel *label514 (m:marker5)
+ 1427 set .BLOCKS*r "A~PPJe-overflow-gate27"
+ 1428 return .BLOCKS*rret
+ 1429 multilabel *label515 (m:marker5)
+ 1430 set .BLOCKS*r "APTJf-power-node28"
+ 1431 return .BLOCKS*rret
+ 1432 multilabel *label516 (m:marker5)
+ 1433 set .BLOCKS*r "A©RPJg-unloader29"
+ 1434 return .BLOCKS*rret
+ 1435 multilabel *label517 (m:marker5)
+ 1436 set .BLOCKS*r "A¨SSJh-container30"
+ 1437 return .BLOCKS*rret
+ 1438 multilabel *label518 (m:marker5)
+ 1439 set .BLOCKS*r "AXTPJi-pulverizer31"
+ 1440 return .BLOCKS*rret
+ 1441 multilabel *label519 (m:marker5)
+ 1442 set .BLOCKS*r "A~RNJj-overflow-gate32"
+ 1443 return .BLOCKS*rret
+ 1444 multilabel *label520 (m:marker5)
+ 1445 set .BLOCKS*r "A~RLJk-overflow-gate33"
+ 1446 return .BLOCKS*rret
+ 1447 multilabel *label521 (m:marker5)
+ 1448 set .BLOCKS*r "AXTNJl-pulverizer34"
+ 1449 return .BLOCKS*rret
+ 1450 multilabel *label522 (m:marker5)
+ 1451 set .BLOCKS*r "AXTLJm-pulverizer35"
+ 1452 return .BLOCKS*rret

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    16 label *label13
    17 ubind @poly
    18 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
-    * label *label14
    19 jump *label13 equal .core null
-    * label *label15
    20 label *label16
    21 sensor *tmp45 processor2 @bufferSize
    22 jump *label19 greaterThanEq *tmp45 200
 
    38 op mul *tmp59 *tmp58 42
    39 op mul *tmp60 :animate:ratio 90
    40 op add *tmp57 *tmp59 *tmp60
-    * label *label28
    41 op mul *tmp64 *tmp58 237
    42 op mul *tmp65 :animate:ratio 120
    43 op add *tmp62 *tmp64 *tmp65
-    * label *label29
    44 op mul *tmp69 *tmp58 32
    45 op mul *tmp70 :animate:ratio 168
    46 op add *tmp67 *tmp69 *tmp70
-    * label *label30
    47 draw image *tmp57 *tmp62 @mega *tmp67 0
    48 jump *label31 notEqual :animate:ratio 1
    49 setaddr :drawHeader*retaddr *label33 (h:*label33)
    50 call *label7 *invalid :drawHeader*retval (m:*label33) (h:*label33)
    51 label *label33
    52 label *label31
-    * label *label32
    53 drawflush display1
    54 op add .animation .animation 1
-    * label *label25
    55 jump *label24 always
    56 label *label23
    57 draw clear 0 0 32
 
    66 jump *label37 equal *tmp77 false
    67 print "Locating ore..."
    68 draw print 22 201 @bottomLeft
-    * label *label40
    69 print "Locating ore..."
    70 draw print 23 201 @bottomLeft
-    * label *label41
-    * label *label39
    71 set :drawItem:item .nextBlock
    72 read :drawItem:current processor3 ".mapProgress"
    73 read :drawItem:target processor3 ".mapTotal"
 
    84 read *tmp98 processor3 ".mapSpots"
    85 print *tmp98
    86 draw print 174 193 @right
-    * label *label45
    87 print "x"
    88 read *tmp100 processor3 ".mapSpots"
    89 print *tmp100
    90 draw print 175 193 @right
-    * label *label46
-    * label *label44
-    * label *label43
-    * label *label42
    91 op sub :updateDisplay:y 171 35
    92 jump *label38 always
    93 label *label37
 
    95 set :drawMaterials:count .totalTargets
    96 print "Materials"
    97 draw print 22 201 @bottomLeft
-    * label *label52
    98 print "Materials"
    99 draw print 23 201 @bottomLeft
-    * label *label53
-    * label *label51
   100 set :updateDisplay:y 186
   101 jump *label54 equal :drawMaterials:count false
   102 set :drawMaterials:item @copper
 
   153 op add *tmp129 :updateDisplay:y 7
   154 print :drawMaterials:target
   155 draw print :drawItemColor.1:textX *tmp129 @right
-    * label *label71
   156 op add :drawText.7:x *tmp119 175
   157 print :drawMaterials:target
   158 draw print :drawText.7:x *tmp129 @right
-    * label *label72
-    * label *label70
   159 op add :drawItemColor.1:col :drawMaterials:col 1
   160 jump *label73 lessThan :drawItemColor.1:col 1
   161 set :drawItemColor.1:col 0
   162 op sub :drawItemColor.1:y :updateDisplay:y 15
   163 label *label73
-    * label *label74
-    * label *label69
-    * label *label68
   164 set :drawMaterials:col :drawItemColor.1:col
   165 set :updateDisplay:y :drawItemColor.1:y
   166 op sub :drawMaterials:count :drawMaterials:count 1
   167 jump *label75 greaterThan :drawMaterials:count 0
   168 jump *label58 always
   169 label *label75
-    * label *label76
   170 label *label66
-    * label *label67
-    * label *label57
   171 multijump *tmp107 0 0 (m:marker0)
   172 multilabel *label65 (m:marker0)
   173 label *label58
   174 label *label54
-    * label *label55
   175 jump *label77 greaterThanEq .totalTargets 3
   176 op sub *tmp137 3 .totalTargets
   177 op mul *tmp138 *tmp137 15
   178 op sub :updateDisplay:y :updateDisplay:y *tmp138
   179 label *label77
-    * label *label78
   180 op sub :updateDisplay:y :updateDisplay:y 5
   181 label *label49
-    * label *label50
   182 label *label38
-    * label *label36
   183 jump *label80 notEqual .nextFactory null
   184 jump *label79 always
   185 label *label80
-    * label *label81
   186 draw col %[white]
   187 print "Air Factory"
   188 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label83
   189 print "Air Factory"
   190 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label84
   191 op sub :drawTitleRow.2:y :updateDisplay:y 15
-    * label *label82
   192 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   193 jump *label85 notEqual :drawAirFactory:progress 0
   194 jump *label87 notEqual .nextFactory @flare
 
   205 op sub *tmp165 :updateDisplay:y 8
   206 print 15
   207 draw print 174 *tmp165 @right
-    * label *label92
   208 print 15
   209 draw print 175 *tmp165 @right
-    * label *label93
-    * label *label91
-    * label *label90
-    * label *label89
   210 op sub :updateDisplay:y :drawTitleRow.2:y 30
   211 jump *label88 always
   212 label *label87
 
   223 op sub *tmp188 :updateDisplay:y 8
   224 print 15
   225 draw print 174 *tmp188 @right
-    * label *label99
   226 print 15
   227 draw print 175 *tmp188 @right
-    * label *label100
-    * label *label98
   228 op sub :drawItemColor.3:y :updateDisplay:y 30
-    * label *label101
-    * label *label102
-    * label *label97
-    * label *label96
   229 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   230 op mul *tmp198 *tmp192 4.2
   231 op min :drawItemColor.4:length 126 *tmp198
 
   239 op sub *tmp211 :updateDisplay:y 23
   240 print 30
   241 draw print 174 *tmp211 @right
-    * label *label106
   242 print 30
   243 draw print 175 *tmp211 @right
-    * label *label107
-    * label *label105
   244 op sub :drawItemColor.4:y :updateDisplay:y 45
-    * label *label108
-    * label *label109
-    * label *label104
-    * label *label103
   245 set :updateDisplay:y :drawItemColor.4:y
   246 label *label88
   247 jump *label86 always
 
   261 print *tmp216
   262 print "%"
   263 draw print 174 *tmp235 @right
-    * label *label113
   264 print *tmp216
   265 print "%"
   266 draw print 175 *tmp235 @right
-    * label *label114
-    * label *label112
-    * label *label111
-    * label *label110
   267 op sub :updateDisplay:y :drawTitleRow.2:y 30
   268 label *label86
   269 op sub :updateDisplay:y :updateDisplay:y 5
 
   271 jump *label118 notEqual .nextAddReco null
   272 jump *label117 always
   273 label *label118
-    * label *label119
   274 draw col %[white]
   275 print "Reconstructor"
   276 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label121
   277 print "Reconstructor"
   278 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label122
   279 op sub :drawTitleRow.3:y :updateDisplay:y 15
-    * label *label120
   280 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   281 jump *label123 notEqual :drawAddReco:progress 0
   282 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
 
   292 op sub *tmp263 :updateDisplay:y 8
   293 print 40
   294 draw print 174 *tmp263 @right
-    * label *label128
   295 print 40
   296 draw print 175 *tmp263 @right
-    * label *label129
-    * label *label127
   297 op sub :drawItemColor.6:y :updateDisplay:y 30
-    * label *label130
-    * label *label131
-    * label *label126
-    * label *label125
   298 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
   299 op mul *tmp273 *tmp267 3.1500000000000004
   300 op min :drawItemColor.7:length 126 *tmp273
 
   308 op sub *tmp286 :updateDisplay:y 23
   309 print 40
   310 draw print 174 *tmp286 @right
-    * label *label135
   311 print 40
   312 draw print 175 *tmp286 @right
-    * label *label136
-    * label *label134
   313 op sub :drawItemColor.7:y :updateDisplay:y 45
-    * label *label137
-    * label *label138
-    * label *label133
-    * label *label132
   314 set :updateDisplay:y :drawItemColor.7:y
   315 jump *label124 always
   316 label *label123
 
   328 print *tmp291
   329 print "%"
   330 draw print 174 *tmp310 @right
-    * label *label142
   331 print *tmp291
   332 print "%"
   333 draw print 175 *tmp310 @right
-    * label *label143
-    * label *label141
-    * label *label140
-    * label *label139
   334 op sub :updateDisplay:y :drawTitleRow.3:y 30
   335 label *label124
   336 op sub :updateDisplay:y :updateDisplay:y 5
 
   338 jump *label147 notEqual .nextMultiReco null
   339 jump *label146 always
   340 label *label147
-    * label *label148
   341 draw col %[white]
   342 op min :updateDisplay:y :updateDisplay:y 142
   343 print "Reconstructor"
   344 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label150
   345 print "Reconstructor"
   346 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label151
   347 op sub :drawTitleRow.4:y :updateDisplay:y 15
-    * label *label149
   348 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   349 jump *label152 notEqual :drawMultiReco:progress 0
   350 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
 
   360 op sub *tmp339 :updateDisplay:y 8
   361 print 40
   362 draw print 174 *tmp339 @right
-    * label *label157
   363 print 40
   364 draw print 175 *tmp339 @right
-    * label *label158
-    * label *label156
   365 op sub :drawItemColor.9:y :updateDisplay:y 30
-    * label *label159
-    * label *label160
-    * label *label155
-    * label *label154
   366 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
   367 op div *tmp349 *tmp343 0.6349206349206349
   368 op min :drawItemColor.10:length 126 *tmp349
 
   376 op sub *tmp362 :updateDisplay:y 23
   377 print 80
   378 draw print 174 *tmp362 @right
-    * label *label164
   379 print 80
   380 draw print 175 *tmp362 @right
-    * label *label165
-    * label *label163
   381 op sub :drawItemColor.10:y :updateDisplay:y 45
-    * label *label166
-    * label *label167
-    * label *label162
-    * label *label161
   382 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
   383 op div *tmp372 *tmp366 1.0317460317460319
   384 op min :drawItemColor.11:length 126 *tmp372
 
   392 op sub *tmp385 :updateDisplay:y 38
   393 print 130
   394 draw print 174 *tmp385 @right
-    * label *label171
   395 print 130
   396 draw print 175 *tmp385 @right
-    * label *label172
-    * label *label170
   397 op sub :drawItemColor.11:y :updateDisplay:y 60
-    * label *label173
-    * label *label174
-    * label *label169
-    * label *label168
   398 set :updateDisplay:y :drawItemColor.11:y
   399 jump *label153 always
   400 label *label152
 
   412 print *tmp390
   413 print "%"
   414 draw print 174 *tmp409 @right
-    * label *label178
   415 print *tmp390
   416 print "%"
   417 draw print 175 *tmp409 @right
-    * label *label179
-    * label *label177
-    * label *label176
-    * label *label175
   418 op sub :updateDisplay:y :drawTitleRow.4:y 45
   419 label *label153
   420 op sub :updateDisplay:y :updateDisplay:y 5
 
   423 jump *label183 equal *tmp413 false
   424 jump *label182 always
   425 label *label183
-    * label *label184
   426 draw col %[white]
   427 print "Builder"
   428 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label186
   429 print "Builder"
   430 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label187
   431 op sub :drawTitleRow.5:y :updateDisplay:y 15
-    * label *label185
   432 jump *label188 notEqual .transportItem null
   433 draw col %[white]
   434 op sub *tmp433 :updateDisplay:y 10
 
   440 op sub *tmp435 :updateDisplay:y 8
   441 print .transportTarget
   442 draw print 174 *tmp435 @right
-    * label *label194
   443 print .transportTarget
   444 draw print 175 *tmp435 @right
-    * label *label195
-    * label *label193
   445 op sub :drawItemColor.13:y :updateDisplay:y 30
-    * label *label196
-    * label *label197
-    * label *label192
-    * label *label191
-    * label *label190
   446 set :updateDisplay:y :drawItemColor.13:y
   447 jump *label189 always
   448 label *label188
 
   465 op sub *tmp463 :updateDisplay:y 8
   466 print .transportTarget
   467 draw print 174 *tmp463 @right
-    * label *label202
   468 print .transportTarget
   469 draw print 175 *tmp463 @right
-    * label *label203
-    * label *label201
   470 op sub :drawItemColor.14:y :updateDisplay:y 30
-    * label *label204
-    * label *label205
-    * label *label200
-    * label *label199
-    * label *label198
   471 set :updateDisplay:y :drawItemColor.14:y
   472 label *label189
   473 label *label182
   474 jump *label207 greaterThanEq :updateDisplay:y 20
   475 jump *label206 always
   476 label *label207
-    * label *label208
   477 jump *label209 notEqual AJTJK-battery1 null
   478 jump *label206 always
   479 label *label209
-    * label *label210
   480 draw col %[white]
   481 print "Power"
   482 draw print 22 20 @bottomLeft
-    * label *label212
   483 print "Power"
   484 draw print 23 20 @bottomLeft
-    * label *label213
-    * label *label211
   485 sensor :drawPower:power AJTJK-battery1 @totalPower
   486 op mul *tmp474 :drawPower:power 100
   487 op idiv *tmp476 *tmp474 4000
 
   496 print *tmp476
   497 print "%"
   498 draw print 174 12 @right
-    * label *label216
   499 print *tmp476
   500 print "%"
   501 draw print 175 12 @right
-    * label *label217
-    * label *label215
-    * label *label214
   502 label *label206
   503 drawflush display1
-    * label *label34
   504 label *label24
   505 jump *label22 always
   506 label *label21
 
   511 draw col %[gold]
   512 print "Resources"
   513 draw print 11 206 @left
-    * label *label226
   514 print "Resources"
   515 draw print 12 206 @left
-    * label *label227
-    * label *label225
   516 draw col %[white]
-    * label *label412
   517 draw image 12 182 @copper 15 0
-    * label *label413
-    * label *label416
   518 draw image 12 161 @lead 15 0
-    * label *label417
-    * label *label420
   519 draw image 12 140 @sand 15 0
-    * label *label421
-    * label *label424
   520 draw image 12 119 @coal 15 0
-    * label *label425
-    * label *label428
   521 draw image 12 98 @graphite 15 0
-    * label *label429
-    * label *label432
   522 draw image 12 77 @silicon 15 0
-    * label *label433
-    * label *label436
   523 draw image 12 56 @titanium 15 0
-    * label *label437
-    * label *label440
   524 draw image 12 35 @metaglass 15 0
-    * label *label441
-    * label *label444
   525 draw image 12 14 @thorium 15 0
-    * label *label445
-    * label *label230
   526 label *label223
-    * label *label224
   527 setaddr :drawHeader*retaddr *label240 (h:*label240)
   528 call *label7 *invalid :drawHeader*retval (m:*label240) (h:*label240)
   529 label *label240
 
   531 jump *label241 lessThanEq .lastTail :displayStorage:tail
   532 jump *label222 always
   533 label *label241
-    * label *label242
   534 read :displayStorage:accumulator bank2 .lastTail
   535 op add :displayStorage:x 25 .lastTail
   536 op sub :displayStorage:y.1 190 8
   537 set :displayStorage:i 0
-    * label *label243
   538 label *label410
   539 op and *tmp513 :displayStorage:accumulator 0b11111
   540 op sub :displayStorage:value *tmp513 8
 
   543 draw rect :displayStorage:x :displayStorage:y.1 1 :displayStorage:value
   544 op sub :displayStorage:y.1 :displayStorage:y.1 21
   545 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label244
   546 op add :displayStorage:i :displayStorage:i 1
   547 jump *label410 lessThan :displayStorage:i 9
-    * label *label245
   548 drawflush display1
   549 op add .lastTail .lastTail 1
   550 label *label222
 
   558 draw reset
   559 draw translate 90 105
   560 draw scale 7.333333333333333 7.333333333333333
-    * label *label252
   561 jump *label253 equal .pageSwitched false
   562 draw image 0 0 @core-shard 6 0
   563 draw reset
   564 draw col %[gold]
   565 print "Base map"
   566 draw print 90 206 @center
-    * label *label256
   567 print "Base map"
   568 draw print 91 206 @center
-    * label *label257
-    * label *label255
   569 draw reset
   570 draw translate 90 105
   571 draw scale 7.333333333333333 7.333333333333333
-    * label *label258
   572 draw col %[white]
   573 drawflush display1
   574 set :displayBaseMap:limit 5
   575 label *label253
-    * label *label254
   576 set :displayBaseMap:counter 0
   577 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
   578 setaddr *tmp530 *label262
 
   721 jump *label300 notEqual .scrap false
   722 jump *label261 always
   723 label *label300
-    * label *label301
   724 label *label298
-    * label *label299
   725 op add :displayBaseMap:counter :displayBaseMap:counter 1
   726 jump *label302 lessThanEq :displayBaseMap:counter :displayBaseMap:limit
   727 setaddr :drawHeader*retaddr *label304 (h:*label304)
 
   730 draw reset
   731 draw translate 90 105
   732 draw scale 7.333333333333333 7.333333333333333
-    * label *label305
   733 set :displayBaseMap:counter 0
   734 label *label302
-    * label *label303
   735 set :drawBlock:cfg :displayBaseMap:cfg
   736 setaddr :drawBlock*retaddr *label306 (h:*label306)
   737 call *label8 *invalid :drawBlock*retval (m:*label306) (h:*label306)
 
   758 call *label8 *invalid :drawBlock*retval (m:*label312) (h:*label312)
   759 label *label312
   760 label *label310
-    * label *label311
   761 label *label307
-    * label *label308
   762 sensor *tmp550 switch1 @enabled
   763 jump *label313 equal *tmp550 false
   764 draw clear 0 0 32
   765 drawflush display1
   766 jump *label261 always
   767 label *label313
-    * label *label314
   768 drawflush display1
-    * label *label260
   769 multijump *tmp530 0 0 (m:marker2)
   770 multilabel *label297 (m:marker2)
   771 label *label261
-    * label *label250
   772 jump *label249 always
   773 label *label248
   774 op sub :displayLog:page .page 3
 
   786 draw col %[gold]
   787 print "Build records"
   788 draw print 4 206 @left
-    * label *label319
   789 print "Build records"
   790 draw print 5 206 @left
-    * label *label320
-    * label *label318
   791 op sub *tmp566 .page 2
   792 print *tmp566
   793 print "/"
   794 print :displayLog:pages
   795 draw print 172 206 @right
-    * label *label321
   796 set .lastRecord :displayLog:start
   797 label *label316
-    * label *label317
   798 setaddr :drawHeader*retaddr *label322 (h:*label322)
   799 call *label7 *invalid :drawHeader*retval (m:*label322) (h:*label322)
   800 label *label322
   801 op sub :displayLog:position .lastRecord 1
-    * label *label323
   802 jump *label325 lessThan :displayLog:position :displayLog:stop
   803 label *label411
   804 read :displayLog:record bank1 :displayLog:position
 
   829 op add *tmp593 :displayRecord:y 2
   830 print :displayRecord:s
   831 draw print *tmp592 *tmp593 @right
-    * label *label331
-    * label *label326
   832 drawflush display1
   833 sensor *tmp594 switch1 @enabled
   834 jump *label332 equal *tmp594 false
   835 jump *label325 always
   836 label *label332
-    * label *label333
-    * label *label324
   837 op sub :displayLog:position :displayLog:position 1
   838 jump *label411 greaterThanEq :displayLog:position :displayLog:stop
   839 label *label325
   840 op add .lastRecord :displayLog:stop 1
   841 drawflush display1
-    * label *label315
   842 label *label249
   843 label *label221
   844 label *label22
   845 label *label19
-    * label *label20
   846 jump *label334 lessThanEq .megas 0
   847 print "[gold]All done.[]\nNothing more to see here.\nGo home."
   848 print "\n"
 
   866 print .status3
   867 print "\n"
   868 printflush message1
-    * label *label336
   869 label *label335
   870 sensor .pageSwitched switch1 @enabled
   871 jump *label337 equal .pageSwitched false
 
   876 draw reset
   877 draw clear 0 0 32
   878 label *label337
-    * label *label338
-    * label *label17
   879 jump *label16 always
-    * label *label18
-    * label *label12
   880 wait 1e12
   881 jump *label11 always
   882 end
 
   897 print *tmp613
   898 print :drawHeader:s
   899 draw print 25 71 @center
-    * label *label345
   900 print :drawHeader:m
   901 print ":"
   902 print *tmp613
   903 print :drawHeader:s
   904 draw print 26 71 @center
-    * label *label346
-    * label *label344
   905 draw col %[white]
   906 draw reset
   907 jump *label341 always
 
   909 draw col %[gold]
   910 print "Goal"
   911 draw print 42 261 @bottom
-    * label *label348
   912 print "Goal"
   913 draw print 43 261 @bottom
-    * label *label349
-    * label *label347
   914 draw col %[white]
   915 jump *label350 equal .missing false
   916 draw image 16 264 .missing 12 0
   917 set .missing false
   918 label *label350
-    * label *label351
   919 jump *label352 equal .nextMultiReco false
   920 draw image 42 237 .nextMultiReco 32 0
   921 jump *label353 always
 
   931 jump *label356 notEqual :drawHeader:count 2
   932 set :drawHeader:x 27
   933 set :drawHeader:goal .nextBlock
-    * label *label449
   934 jump *label450 equal :drawHeader:goal null
   935 draw image 27 240 :drawHeader:goal 25 0
   936 op add :drawHeader:x 27 30
   937 label *label450
-    * label *label451
-    * label *label452
   938 set :drawHeader:goal .nextFactory
-    * label *label455
   939 jump *label456 equal :drawHeader:goal null
   940 draw image :drawHeader:x 240 :drawHeader:goal 25 0
   941 op add :drawHeader:x :drawHeader:x 30
   942 label *label456
-    * label *label457
-    * label *label458
   943 set :drawHeader:goal .nextAddReco
-    * label *label461
   944 jump *label462 equal :drawHeader:goal null
   945 draw image :drawHeader:x 240 :drawHeader:goal 25 0
   946 label *label462
-    * label *label463
-    * label *label464
-    * label *label360
   947 jump *label357 always
   948 label *label356
   949 jump *label366 notEqual :drawHeader:count 1
   950 set :drawHeader:goal.1 .nextBlock
-    * label *label468
   951 jump *label469 equal :drawHeader:goal.1 null
   952 draw image 42 237 :drawHeader:goal.1 32 0
   953 jump *label370 always
   954 label *label469
-    * label *label470
-    * label *label471
   955 set :drawHeader:goal.1 .nextFactory
-    * label *label474
   956 jump *label475 equal :drawHeader:goal.1 null
   957 draw image 42 237 :drawHeader:goal.1 32 0
   958 jump *label370 always
   959 label *label475
-    * label *label476
-    * label *label477
   960 set :drawHeader:goal.1 .nextAddReco
-    * label *label480
   961 jump *label481 equal :drawHeader:goal.1 null
   962 draw image 42 237 :drawHeader:goal.1 32 0
   963 label *label481
-    * label *label482
-    * label *label483
   964 label *label370
   965 label *label366
-    * label *label367
   966 label *label357
   967 label *label355
   968 label *label353
 
   987 print *tmp642
   988 print ")"
   989 draw print 174 272 @topRight
-    * label *label378
   990 jump *label379 equal A¨SSJh-container30 null
   991 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
   992 op log10 *tmp646 :drawHeader:count.1
 
   994 print "x"
   995 print :drawHeader:count.1
   996 draw print 174 255 @topRight
-    * label *label381
   997 op mul *tmp649 7 :drawHeader:len
   998 op sub *tmp650 154 *tmp649
   999 draw image *tmp650 246 @scrap 12 0
 
  1003 print "x"
  1004 print :drawHeader:count.1
  1005 draw print 124 255 @topRight
-    * label *label382
  1006 op mul *tmp655 7 :drawHeader:len
  1007 op sub *tmp656 104 *tmp655
  1008 draw image *tmp656 246 @sand 12 0
 
  1016 print "x"
  1017 print :drawHeader:count.2
  1018 draw print 174 255 @topRight
-    * label *label385
  1019 op mul *tmp663 7 :drawHeader:len.1
  1020 op sub *tmp664 154 *tmp663
  1021 draw image *tmp664 246 @titanium 12 0
  1022 label *label383
-    * label *label384
  1023 jump *label386 equal .thoriumContainer false
  1024 sensor :drawHeader:count.3 .thoriumContainer @thorium
  1025 op log10 *tmp667 :drawHeader:count.3
 
  1027 print "x"
  1028 print :drawHeader:count.3
  1029 draw print 124 255 @topRight
-    * label *label388
  1030 op mul *tmp670 7 :drawHeader:len.2
  1031 op sub *tmp671 104 *tmp670
  1032 draw image *tmp671 246 @thorium 12 0
  1033 label *label386
-    * label *label387
  1034 label *label380
  1035 set :drawHeader:x.4 174
  1036 draw col %[white]
 
  1040 print "x"
  1041 print :drawUnitCount:count
  1042 draw print 174 229 @right
-    * label *label392
  1043 op sub :drawHeader:x.4 174 30
  1044 label *label390
-    * label *label391
-    * label *label389
  1045 set :drawUnitCount.1:count .monos
  1046 jump *label394 lessThanEq :drawUnitCount.1:count 0
  1047 op sub *tmp677 :drawHeader:x.4 20
 
  1049 print "x"
  1050 print :drawUnitCount.1:count
  1051 draw print :drawHeader:x.4 229 @right
-    * label *label396
  1052 op sub :drawHeader:x.4 :drawHeader:x.4 30
  1053 label *label394
-    * label *label395
-    * label *label393
  1054 set :drawUnitCount.2:count .flares
  1055 jump *label398 lessThanEq :drawUnitCount.2:count 0
  1056 op sub *tmp680 :drawHeader:x.4 20
 
  1058 print "x"
  1059 print :drawUnitCount.2:count
  1060 draw print :drawHeader:x.4 229 @right
-    * label *label400
  1061 label *label398
-    * label *label399
-    * label *label397
  1062 label *label341
-    * label *label339
  1063 return :drawHeader*retaddr
  1064 end
  1065 label *label8
 
  1075 read *tmp697 :drawBlock:cfg 5
  1076 op sub :unpackCfg:ind *tmp697 74
  1077 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label403
-    * label *label402
  1078 jump *label404 notEqual :unpackCfg:ind .nextBuildIndex
  1079 draw col %80ffffff
  1080 jump *label405 always
 
  1085 jump *label406 notEqual *tmp711 0
  1086 jump *label401 always
  1087 label *label406
-    * label *label407
  1088 select *tmp714 notEqual :drawBlock:built false %[white] %408040ff
  1089 draw col *tmp714
  1090 label *label405

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-11 instructions):
 
   164 set :drawMaterials:col :drawItemColor.1:col
   165 set :updateDisplay:y :drawItemColor.1:y
   166 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label75 greaterThan :drawMaterials:count 0
-    * jump *label58 always
+  167 jump *label58 lessThanEq :drawMaterials:count 0
   168 label *label75
   169 label *label66
   170 multijump *tmp107 0 0 (m:marker0)
 
   179 op sub :updateDisplay:y :updateDisplay:y 5
   180 label *label49
   181 label *label38
-    * jump *label80 notEqual .nextFactory null
-    * jump *label79 always
+  182 jump *label79 equal .nextFactory null
   183 label *label80
   184 draw col %[white]
   185 print "Air Factory"
 
   266 label *label86
   267 op sub :updateDisplay:y :updateDisplay:y 5
   268 label *label79
-    * jump *label118 notEqual .nextAddReco null
-    * jump *label117 always
+  269 jump *label117 equal .nextAddReco null
   270 label *label118
   271 draw col %[white]
   272 print "Reconstructor"
 
   332 label *label124
   333 op sub :updateDisplay:y :updateDisplay:y 5
   334 label *label117
-    * jump *label147 notEqual .nextMultiReco null
-    * jump *label146 always
+  335 jump *label146 equal .nextMultiReco null
   336 label *label147
   337 draw col %[white]
   338 op min :updateDisplay:y :updateDisplay:y 142
 
   416 op sub :updateDisplay:y :updateDisplay:y 5
   417 label *label146
   418 sensor *tmp413 @unit @dead
-    * jump *label183 equal *tmp413 false
-    * jump *label182 always
+  419 jump *label182 notEqual *tmp413 false
   420 label *label183
   421 draw col %[white]
   422 print "Builder"
 
   466 set :updateDisplay:y :drawItemColor.14:y
   467 label *label189
   468 label *label182
-    * jump *label207 greaterThanEq :updateDisplay:y 20
-    * jump *label206 always
+  469 jump *label206 lessThan :updateDisplay:y 20
   470 label *label207
-    * jump *label209 notEqual AJTJK-battery1 null
-    * jump *label206 always
+  471 jump *label206 equal AJTJK-battery1 null
   472 label *label209
   473 draw col %[white]
   474 print "Power"
 
   521 call *label7 *invalid :drawHeader*retval (m:*label240) (h:*label240)
   522 label *label240
   523 drawflush display1
-    * jump *label241 lessThanEq .lastTail :displayStorage:tail
-    * jump *label222 always
+  524 jump *label222 greaterThan .lastTail :displayStorage:tail
   525 label *label241
   526 read :displayStorage:accumulator bank2 .lastTail
   527 op add :displayStorage:x 25 .lastTail
 
   710 setaddr *tmp530 *label297
   711 label *label259
   712 jump *label298 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
-    * jump *label300 notEqual .scrap false
-    * jump *label261 always
+  713 jump *label261 equal .scrap false
   714 label *label300
   715 label *label298
   716 op add :displayBaseMap:counter :displayBaseMap:counter 1
 
   822 draw print *tmp592 *tmp593 @right
   823 drawflush display1
   824 sensor *tmp594 switch1 @enabled
-    * jump *label332 equal *tmp594 false
-    * jump *label325 always
+  825 jump *label325 notEqual *tmp594 false
   826 label *label332
   827 op sub :displayLog:position :displayLog:position 1
   828 jump *label411 greaterThanEq :displayLog:position :displayLog:stop
 
  1072 op shl *tmp709 1 :unpackCfg:ind
  1073 op and :drawBlock:built .blocksBuilt *tmp709
  1074 op add *tmp711 :drawBlock:built .pageSwitched
-    * jump *label406 notEqual *tmp711 0
-    * jump *label401 always
+ 1075 jump *label401 equal *tmp711 0
  1076 label *label406
  1077 select *tmp714 notEqual :drawBlock:built false %[white] %408040ff
  1078 draw col *tmp714

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
   165 set :updateDisplay:y :drawItemColor.1:y
   166 op sub :drawMaterials:count :drawMaterials:count 1
   167 jump *label58 lessThanEq :drawMaterials:count 0
-    * label *label75
   168 label *label66
   169 multijump *tmp107 0 0 (m:marker0)
   170 multilabel *label65 (m:marker0)
 
   179 label *label49
   180 label *label38
   181 jump *label79 equal .nextFactory null
-    * label *label80
   182 draw col %[white]
   183 print "Air Factory"
   184 draw print 22 :updateDisplay:y @bottomLeft
 
   265 op sub :updateDisplay:y :updateDisplay:y 5
   266 label *label79
   267 jump *label117 equal .nextAddReco null
-    * label *label118
   268 draw col %[white]
   269 print "Reconstructor"
   270 draw print 22 :updateDisplay:y @bottomLeft
 
   330 op sub :updateDisplay:y :updateDisplay:y 5
   331 label *label117
   332 jump *label146 equal .nextMultiReco null
-    * label *label147
   333 draw col %[white]
   334 op min :updateDisplay:y :updateDisplay:y 142
   335 print "Reconstructor"
 
   413 label *label146
   414 sensor *tmp413 @unit @dead
   415 jump *label182 notEqual *tmp413 false
-    * label *label183
   416 draw col %[white]
   417 print "Builder"
   418 draw print 22 :updateDisplay:y @bottomLeft
 
   462 label *label189
   463 label *label182
   464 jump *label206 lessThan :updateDisplay:y 20
-    * label *label207
   465 jump *label206 equal AJTJK-battery1 null
-    * label *label209
   466 draw col %[white]
   467 print "Power"
   468 draw print 22 20 @bottomLeft
 
   515 label *label240
   516 drawflush display1
   517 jump *label222 greaterThan .lastTail :displayStorage:tail
-    * label *label241
   518 read :displayStorage:accumulator bank2 .lastTail
   519 op add :displayStorage:x 25 .lastTail
   520 op sub :displayStorage:y.1 190 8
 
   703 label *label259
   704 jump *label298 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
   705 jump *label261 equal .scrap false
-    * label *label300
   706 label *label298
   707 op add :displayBaseMap:counter :displayBaseMap:counter 1
   708 jump *label302 lessThanEq :displayBaseMap:counter :displayBaseMap:limit
 
   814 drawflush display1
   815 sensor *tmp594 switch1 @enabled
   816 jump *label325 notEqual *tmp594 false
-    * label *label332
   817 op sub :displayLog:position :displayLog:position 1
   818 jump *label411 greaterThanEq :displayLog:position :displayLog:stop
   819 label *label325
 
  1063 op and :drawBlock:built .blocksBuilt *tmp709
  1064 op add *tmp711 :drawBlock:built .pageSwitched
  1065 jump *label401 equal *tmp711 0
-    * label *label406
  1066 select *tmp714 notEqual :drawBlock:built false %[white] %408040ff
  1067 draw col *tmp714
  1068 label *label405

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
    52 label *label31
    53 drawflush display1
    54 op add .animation .animation 1
-    * jump *label24 always
+   55 jump *label22 always
    56 label *label23
    57 draw clear 0 0 32
    58 setaddr :drawHeader*retaddr *label35 (h:*label35)
 
   204 print 15
   205 draw print 175 *tmp165 @right
   206 op sub :updateDisplay:y :drawTitleRow.2:y 30
-    * jump *label88 always
+  207 jump *label86 always
   208 label *label87
   209 sensor *tmp169 A¾BFLW-air-factory13 @lead
   210 op mul *tmp175 *tmp169 8.4
 
   514 call *label7 *invalid :drawHeader*retval (m:*label240) (h:*label240)
   515 label *label240
   516 drawflush display1
-    * jump *label222 greaterThan .lastTail :displayStorage:tail
+  517 jump *label221 greaterThan .lastTail :displayStorage:tail
   518 read :displayStorage:accumulator bank2 .lastTail
   519 op add :displayStorage:x 25 .lastTail
   520 op sub :displayStorage:y.1 190 8
 
   702 setaddr *tmp530 *label297
   703 label *label259
   704 jump *label298 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
-    * jump *label261 equal .scrap false
+  705 jump *label249 equal .scrap false
   706 label *label298
   707 op add :displayBaseMap:counter :displayBaseMap:counter 1
   708 jump *label302 lessThanEq :displayBaseMap:counter :displayBaseMap:limit
 
   745 jump *label313 equal *tmp550 false
   746 draw clear 0 0 32
   747 drawflush display1
-    * jump *label261 always
+  748 jump *label249 always
   749 label *label313
   750 drawflush display1
   751 multijump *tmp530 0 0 (m:marker2)
 
   848 printflush message1
   849 label *label335
   850 sensor .pageSwitched switch1 @enabled
-    * jump *label337 equal .pageSwitched false
+  851 jump *label16 equal .pageSwitched false
   852 control enabled switch1 false
   853 op add *tmp604 .page 1
   854 op mod .page *tmp604 .numPages
 
   884 draw print 26 71 @center
   885 draw col %[white]
   886 draw reset
-    * jump *label341 always
+  887 return :drawHeader*retaddr
   888 label *label340
   889 draw col %[gold]
   890 print "Goal"
 
   921 op add :drawHeader:x :drawHeader:x 30
   922 label *label456
   923 set :drawHeader:goal .nextAddReco
-    * jump *label462 equal :drawHeader:goal null
+  924 jump *label357 equal :drawHeader:goal null
   925 draw image :drawHeader:x 240 :drawHeader:goal 25 0
   926 label *label462
   927 jump *label357 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-5 instructions):
 
   239 draw print 175 *tmp211 @right
   240 op sub :drawItemColor.4:y :updateDisplay:y 45
   241 set :updateDisplay:y :drawItemColor.4:y
-    * label *label88
   242 jump *label86 always
   243 label *label85
   244 op idiv *tmp216 :drawAirFactory:progress 0.01
 
   486 draw print 175 12 @right
   487 label *label206
   488 drawflush display1
-    * label *label24
   489 jump *label22 always
   490 label *label21
   491 jump *label220 notEqual .page 1
 
   529 jump *label410 lessThan :displayStorage:i 9
   530 drawflush display1
   531 op add .lastTail .lastTail 1
-    * label *label222
   532 jump *label221 always
   533 label *label220
   534 jump *label248 notEqual .page 2
 
   747 drawflush display1
   748 multijump *tmp530 0 0 (m:marker2)
   749 multilabel *label297 (m:marker2)
-    * label *label261
   750 jump *label249 always
   751 label *label248
   752 op sub :displayLog:page .page 3
 
   851 drawflush null
   852 draw reset
   853 draw clear 0 0 32
-    * label *label337
   854 jump *label16 always
-    * wait 1e12
-    * jump *label11 always
-    * end
   855 label *label7
   856 draw reset
   857 draw color 0 0 32 255
 
   915 set :drawHeader:goal .nextAddReco
   916 jump *label357 equal :drawHeader:goal null
   917 draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * label *label462
   918 jump *label357 always
   919 label *label356
   920 jump *label366 notEqual :drawHeader:count 1
 
  1030 print :drawUnitCount.2:count
  1031 draw print :drawHeader:x.4 229 @right
  1032 label *label398
-    * label *label341
  1033 return :drawHeader*retaddr
-    * end
  1034 label *label8
  1035 read *tmp682 :drawBlock:cfg 1
  1036 op sub *tmp683 *tmp682 74
 
  1060 draw image *tmp687 *tmp691 :unpackCfg:type *tmp717 *tmp718
  1061 label *label401
  1062 return :drawBlock*retaddr
-    * end
  1063 multilabel *label487 (m:marker5)
  1064 set .BLOCKS*r "AJEMJJ-graphite-press0"
  1065 return .BLOCKS*rret

Modifications by Jumps phase, Dead Code Elimination, pass 5, iteration 1:
 
    12 set .animation -15
    13 set .pageSwitched false
    14 set *signature "0:v1"
-    * label *label11
    15 label *label13
    16 ubind @poly
    17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    14 set *signature "0:v1"
    15 label *label13
    16 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
+   17 ulocate building core false @copper 0 0 0 .core
    18 jump *label13 equal .core null
    19 label *label16
    20 sensor *tmp45 processor2 @bufferSize

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
   819 label *label22
   820 label *label19
   821 jump *label334 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  822 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   823 printflush message1
   824 jump *label335 always
   825 label *label334
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  826 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  827 format .nextBlock
+  828 format .status1
+  829 format .status2
+  830 format .item2
+  831 format .block2
+  832 format .status3
   833 printflush message1
   834 label *label335
   835 sensor .pageSwitched switch1 @enabled
 
   933 op mod :drawHeader:s.1 :drawHeader:t.1 60
   934 select *tmp637 lessThan :drawHeader:s.1 10 "0" ""
   935 print :drawHeader:m.1
-    * print ":"
-    * print *tmp637
-    * print :drawHeader:s.1
+  936 print ":{0}{0} (x{0}.{0})"
+  937 format *tmp637
+  938 format :drawHeader:s.1
   939 op mul *tmp638 10 :drawHeader:t.1
   940 op div *tmp639 *tmp638 :drawHeader:tt
   941 op round :drawHeader:ratio *tmp639
   942 op idiv *tmp641 :drawHeader:ratio 10
   943 op mod *tmp642 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp641
-    * print "."
-    * print *tmp642
-    * print ")"
+  944 format *tmp641
+  945 format *tmp642
   946 draw print 174 272 @topRight
   947 jump *label379 equal A¨SSJh-container30 null
   948 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap

Final code before resolving virtual instructions:

        label *label10                                               Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp39 processor3 "*signature"                          ...
    1:  jump *label10 notEqual *tmp39 "3290b8c661787058:v1"          ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 4                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote volatile var
    6:  set .nextBuildIndex 1000                                     ...
    7:  set .monos 0                                                 ...
    8:  set .flares 0                                                ...
    9:  set .polys 1                                                 ...
   10:  set .megas 0                                                 ...
   11:  set .animation -15                                           Display.mnd: var animation = -15;
   12:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   13:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label13                                               Display.mnd: do
   14:  ubind @poly                                                  Display.mnd: ubind(@poly);
   15:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   16:  jump *label13 equal .core null                               Display.mnd: do
        label *label16                                               Display.mnd: while true do
   17:  sensor *tmp45 processor2 @bufferSize                         Display.mnd: if display.@bufferSize < 200 then
   18:  jump *label19 greaterThanEq *tmp45 200                       ...
   19:  jump *label21 notEqual .page 0                               Display.mnd: if page == 0 then
   20:  jump *label23 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   21:  jump *label26 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   22:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   23:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   24:  jump *label27 always 0 0                                     Display.mnd: if animation < 0 then
        label *label26                                               ...
   25:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   26:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label27                                               Display.mnd: if animation < 0 then
   27:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   28:  op div *tmp54 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   29:  op min *tmp55 *tmp54 1                                       ...
   30:  op max :animate:ratio 0 *tmp55                               ...
   31:  op sub *tmp58 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   32:  op mul *tmp59 *tmp58 42                                      ...
   33:  op mul *tmp60 :animate:ratio 90                              ...
   34:  op add *tmp57 *tmp59 *tmp60                                  ...
   35:  op mul *tmp64 *tmp58 237                                     ...
   36:  op mul *tmp65 :animate:ratio 120                             ...
   37:  op add *tmp62 *tmp64 *tmp65                                  ...
   38:  op mul *tmp69 *tmp58 32                                      ...
   39:  op mul *tmp70 :animate:ratio 168                             ...
   40:  op add *tmp67 *tmp69 *tmp70                                  ...
   41:  draw image *tmp57 *tmp62 @mega *tmp67 0 0                    Display.mnd: image(x, y, @mega, size, 0);
   42:  jump *label31 notEqual :animate:ratio 1                      Display.mnd: if ratio == 1 then drawHeader(); end;
   43:  setaddr :drawHeader*retaddr *label33                         ...
   44:  call *label7 *invalid :drawHeader*retval                     ...
        label *label33                                               ...
        label *label31                                               ...
   45:  drawflush display1                                           Display.mnd: drawflush(display1);
   46:  op add .animation .animation 1                               Display.mnd: animate();
   47:  jump *label22 always 0 0                                     Display.mnd: if megas > 0 then
        label *label23                                               ...
   48:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   49:  setaddr :drawHeader*retaddr *label35                         Display.mnd: drawHeader();
   50:  call *label7 *invalid :drawHeader*retval                     ...
        label *label35                                               ...
   51:  set :updateDisplay:y 201                                     Display.mnd: var y = HEADER2_Y;
   52:  set :drawMaterials:col 0                                     Display.mnd: var count, col = 0;
   53:  op equal *tmp75 .nextBlock @ore-thorium                      Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
   54:  op equal *tmp76 .nextBlock @ore-titanium                     ...
   55:  op or *tmp77 *tmp75 *tmp76                                   ...
   56:  jump *label37 equal *tmp77 false                             ...
   57:  print "Locating ore..."                                      Display.mnd: print(text);
   58:  draw print 22 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   59:  print "Locating ore..."                                      Display.mnd: print(text);
   60:  draw print 23 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   61:  set :drawItem:item .nextBlock                                Display.mnd: drawItem(in 0, in out y, 1, nextBlock, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
   62:  read :drawItem:current processor3 ".mapProgress"             ...
   63:  read :drawItem:target processor3 ".mapTotal"                 ...
   64:  op mul *tmp83 126 :drawItem:current                          Display.mnd: var length = min(barLength, barLength * current / target);
   65:  op div *tmp84 *tmp83 :drawItem:target                        ...
   66:  op min :drawItemColor:length 126 *tmp84                      ...
   67:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   68:  draw image 11 191 :drawItem:item 16 0 0                      Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   69:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
   70:  draw rect 22 186 :drawItemColor:length 10 0 0                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   71:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
   72:  draw lineRect 22 186 126 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   73:  print "x"                                                    Display.mnd: print(text);
   74:  read *tmp98 processor3 ".mapSpots"                           ...
   75:  print *tmp98                                                 ...
   76:  draw print 174 193 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
   77:  print "x"                                                    Display.mnd: print(text);
   78:  read *tmp100 processor3 ".mapSpots"                          ...
   79:  print *tmp100                                                ...
   80:  draw print 175 193 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
   81:  op sub :updateDisplay:y 171 35                               Display.mnd: y -= 2 * ROW_HEIGHT + SEPARATOR_Y;
   82:  jump *label38 always 0 0                                     Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
        label *label37                                               ...
   83:  jump *label49 equal .nextBlock null                          Display.mnd: elsif nextBlock != null then
   84:  set :drawMaterials:count .totalTargets                       Display.mnd: count = totalTargets;
   85:  print "Materials"                                            Display.mnd: print(text);
   86:  draw print 22 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   87:  print "Materials"                                            Display.mnd: print(text);
   88:  draw print 23 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   89:  set :updateDisplay:y 186                                     Display.mnd: drawTitleRow(in out y, @bottomLeft, "Materials");
   90:  jump *label54 equal :drawMaterials:count false               Display.mnd: if count then
   91:  set :drawMaterials:item @copper                              Display.mnd: for var item, target in
   92:  set :drawMaterials:target .targetCopper                      ...
   93:  setaddr *tmp107 *label59                                     ...
   94:  jump *label56 always 0 0                                     ...
        multilabel *label59                                          ...
   95:  set :drawMaterials:item @lead                                ...
   96:  set :drawMaterials:target .targetLead                        ...
   97:  setaddr *tmp107 *label60                                     ...
   98:  jump *label56 always 0 0                                     ...
        multilabel *label60                                          ...
   99:  set :drawMaterials:item @graphite                            ...
  100:  set :drawMaterials:target .targetGraphite                    ...
  101:  setaddr *tmp107 *label61                                     ...
  102:  jump *label56 always 0 0                                     ...
        multilabel *label61                                          ...
  103:  set :drawMaterials:item @silicon                             ...
  104:  set :drawMaterials:target .targetSilicon                     ...
  105:  setaddr *tmp107 *label62                                     ...
  106:  jump *label56 always 0 0                                     ...
        multilabel *label62                                          ...
  107:  set :drawMaterials:item @titanium                            ...
  108:  set :drawMaterials:target .targetTitanium                    ...
  109:  setaddr *tmp107 *label63                                     ...
  110:  jump *label56 always 0 0                                     ...
        multilabel *label63                                          ...
  111:  set :drawMaterials:item @metaglass                           ...
  112:  set :drawMaterials:target .targetMetaglass                   ...
  113:  setaddr *tmp107 *label64                                     ...
  114:  jump *label56 always 0 0                                     ...
        multilabel *label64                                          ...
  115:  set :drawMaterials:item @thorium                             ...
  116:  set :drawMaterials:target .targetThorium                     ...
  117:  setaddr *tmp107 *label65                                     ...
        label *label56                                               ...
  118:  jump *label66 lessThanEq :drawMaterials:target 0             Display.mnd: if target > 0 then
  119:  sensor *tmp110 .core :drawMaterials:item                     Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  120:  set :drawItemColor.1:y :updateDisplay:y                      Display.mnd: drawItemColor(%008000FF, %00FF00FF, in out col, in out y, columns, item, current, target, text);
  121:  op mul *tmp115 126 *tmp110                                   Display.mnd: var length = min(barLength, barLength * current / target);
  122:  op div *tmp116 *tmp115 :drawMaterials:target                 ...
  123:  op min :drawItemColor.1:length 126 *tmp116                   ...
  124:  op mul *tmp119 :drawMaterials:col 88                         Display.mnd: var iconX = ICON_X + col * 176 / 2;
  125:  op add :drawItemColor.1:iconX 11 *tmp119                     ...
  126:  op add :drawItemColor.1:barX 22 *tmp119                      Display.mnd: var barX = BAR_X + col * 176 / 2;
  127:  op add :drawItemColor.1:textX 174 *tmp119                    Display.mnd: var textX = textEnd + col * 176 / 2;
  128:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  129:  op add *tmp127 :updateDisplay:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  130:  draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:ite ...
  131:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  132:  draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemCo Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  133:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  134:  draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10  Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  135:  op add *tmp129 :updateDisplay:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  136:  print :drawMaterials:target                                  Display.mnd: print(text);
  137:  draw print :drawItemColor.1:textX *tmp129 @right 0 0 0       Display.mnd: drawPrint(x, y, alignment);
  138:  op add :drawText.7:x *tmp119 175                             Display.mnd: drawText(x + 1, y, alignment, text);
  139:  print :drawMaterials:target                                  Display.mnd: print(text);
  140:  draw print :drawText.7:x *tmp129 @right 0 0 0                Display.mnd: drawPrint(x, y, alignment);
  141:  op add :drawItemColor.1:col :drawMaterials:col 1             Display.mnd: if ++col >= columns then
  142:  jump *label73 lessThan :drawItemColor.1:col 1                ...
  143:  set :drawItemColor.1:col 0                                   Display.mnd: col = 0;
  144:  op sub :drawItemColor.1:y :updateDisplay:y 15                Display.mnd: y -= ROW_HEIGHT;
        label *label73                                               Display.mnd: if ++col >= columns then
  145:  set :drawMaterials:col :drawItemColor.1:col                  Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  146:  set :updateDisplay:y :drawItemColor.1:y                      ...
  147:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  148:  jump *label58 lessThanEq :drawMaterials:count 0              ...
        label *label66                                               Display.mnd: if target > 0 then
  149:  multijump *tmp107 0 0                                        Display.mnd: for var item, target in
        multilabel *label65                                          ...
        label *label58                                               ...
        label *label54                                               Display.mnd: if count then
  150:  jump *label77 greaterThanEq .totalTargets 3                  Display.mnd: if totalTargets < 3 then
  151:  op sub *tmp137 3 .totalTargets                               Display.mnd: y -= (3 - totalTargets) * ROW_HEIGHT;
  152:  op mul *tmp138 *tmp137 15                                    ...
  153:  op sub :updateDisplay:y :updateDisplay:y *tmp138             ...
        label *label77                                               Display.mnd: if totalTargets < 3 then
  154:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label49                                               Display.mnd: elsif nextBlock != null then
        label *label38                                               Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
  155:  jump *label79 equal .nextFactory null                        Display.mnd: if nextFactory == null then return; end;
  156:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  157:  print "Air Factory"                                          Display.mnd: print(text);
  158:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  159:  print "Air Factory"                                          Display.mnd: print(text);
  160:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  161:  op sub :drawTitleRow.2:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  162:  sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progre Display.mnd: var progress = air_factory.@progress;
  163:  jump *label85 notEqual :drawAirFactory:progress 0            Display.mnd: if progress == 0 then
  164:  jump *label87 notEqual .nextFactory @flare                   Display.mnd: if nextFactory == @flare then
  165:  sensor *tmp146 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 15, 15);
  166:  op mul *tmp152 *tmp146 8.4                                   Display.mnd: var length = min(barLength, barLength * current / target);
  167:  op min :drawItemColor.2:length 126 *tmp152                   ...
  168:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  169:  op sub *tmp163 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  170:  draw image 11 *tmp163 @silicon 16 0 0                        ...
  171:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  172:  draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  173:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  174:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  175:  op sub *tmp165 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  176:  print 15                                                     Display.mnd: print(text);
  177:  draw print 174 *tmp165 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  178:  print 15                                                     Display.mnd: print(text);
  179:  draw print 175 *tmp165 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  180:  op sub :updateDisplay:y :drawTitleRow.2:y 30                 Display.mnd: y -= ROW_HEIGHT;
  181:  jump *label86 always 0 0                                     Display.mnd: if nextFactory == @flare then
        label *label87                                               ...
  182:  sensor *tmp169 A¾BFLW-air-factory13 @lead                    Display.mnd: drawItem(in 0, in out y, 1, @lead, air_factory.@lead, 15, 15);
  183:  op mul *tmp175 *tmp169 8.4                                   Display.mnd: var length = min(barLength, barLength * current / target);
  184:  op min :drawItemColor.3:length 126 *tmp175                   ...
  185:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  186:  op sub *tmp186 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  187:  draw image 11 *tmp186 @lead 16 0 0                           ...
  188:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  189:  draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  190:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  191:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  192:  op sub *tmp188 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  193:  print 15                                                     Display.mnd: print(text);
  194:  draw print 174 *tmp188 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  195:  print 15                                                     Display.mnd: print(text);
  196:  draw print 175 *tmp188 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  197:  op sub :drawItemColor.3:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  198:  sensor *tmp192 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 30, 30);
  199:  op mul *tmp198 *tmp192 4.2                                   Display.mnd: var length = min(barLength, barLength * current / target);
  200:  op min :drawItemColor.4:length 126 *tmp198                   ...
  201:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  202:  op sub *tmp209 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  203:  draw image 11 *tmp209 @silicon 16 0 0                        ...
  204:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  205:  draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  206:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  207:  draw lineRect 22 :drawItemColor.3:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  208:  op sub *tmp211 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  209:  print 30                                                     Display.mnd: print(text);
  210:  draw print 174 *tmp211 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  211:  print 30                                                     Display.mnd: print(text);
  212:  draw print 175 *tmp211 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  213:  op sub :drawItemColor.4:y :updateDisplay:y 45                Display.mnd: y -= ROW_HEIGHT;
  214:  set :updateDisplay:y :drawItemColor.4:y                      Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 30, 30);
  215:  jump *label86 always 0 0                                     Display.mnd: if progress == 0 then
        label *label85                                               ...
  216:  op idiv *tmp216 :drawAirFactory:progress 0.01                Display.mnd: drawItem(in 0, in out y, 1, nextFactory, progress, 1.0, floor(100 * progress), "%");
  217:  set :drawItem.5:item .nextFactory                            ...
  218:  op mul *tmp221 126 :drawAirFactory:progress                  Display.mnd: var length = min(barLength, barLength * current / target);
  219:  op min :drawItemColor.5:length 126 *tmp221                   ...
  220:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  221:  op sub *tmp233 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  222:  draw image 11 *tmp233 :drawItem.5:item 16 0 0                ...
  223:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  224:  draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  225:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  226:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  227:  op sub *tmp235 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  228:  print *tmp216                                                Display.mnd: print(text);
  229:  print "%"                                                    ...
  230:  draw print 174 *tmp235 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  231:  print *tmp216                                                Display.mnd: print(text);
  232:  print "%"                                                    ...
  233:  draw print 175 *tmp235 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  234:  op sub :updateDisplay:y :drawTitleRow.2:y 30                 Display.mnd: y -= ROW_HEIGHT;
        label *label86                                               Display.mnd: if progress == 0 then
  235:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label79                                               Display.mnd: drawAirFactory(ref y);
  236:  jump *label117 equal .nextAddReco null                       Display.mnd: if nextAddReco == null then return; end;
  237:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  238:  print "Reconstructor"                                        Display.mnd: print(text);
  239:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  240:  print "Reconstructor"                                        Display.mnd: print(text);
  241:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  242:  op sub :drawTitleRow.3:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  243:  sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 Display.mnd: var progress = additive_rec.@progress;
  244:  jump *label123 notEqual :drawAddReco:progress 0              Display.mnd: if progress == 0 then
  245:  sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite     Display.mnd: drawItem(in 0, in out y, 1, @graphite, additive_rec.@graphite, 40, 40);
  246:  op mul *tmp250 *tmp244 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  247:  op min :drawItemColor.6:length 126 *tmp250                   ...
  248:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  249:  op sub *tmp261 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  250:  draw image 11 *tmp261 @graphite 16 0 0                       ...
  251:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  252:  draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  253:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  254:  draw lineRect 22 :drawTitleRow.3:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  255:  op sub *tmp263 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  256:  print 40                                                     Display.mnd: print(text);
  257:  draw print 174 *tmp263 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  258:  print 40                                                     Display.mnd: print(text);
  259:  draw print 175 *tmp263 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  260:  op sub :drawItemColor.6:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  261:  sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon      Display.mnd: drawItem(in 0, in out y, 1, @silicon, additive_rec.@silicon, 40, 40);
  262:  op mul *tmp273 *tmp267 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  263:  op min :drawItemColor.7:length 126 *tmp273                   ...
  264:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  265:  op sub *tmp284 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  266:  draw image 11 *tmp284 @silicon 16 0 0                        ...
  267:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  268:  draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  269:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  270:  draw lineRect 22 :drawItemColor.6:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  271:  op sub *tmp286 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  272:  print 40                                                     Display.mnd: print(text);
  273:  draw print 174 *tmp286 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  274:  print 40                                                     Display.mnd: print(text);
  275:  draw print 175 *tmp286 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  276:  op sub :drawItemColor.7:y :updateDisplay:y 45                Display.mnd: y -= ROW_HEIGHT;
  277:  set :updateDisplay:y :drawItemColor.7:y                      Display.mnd: drawItem(in 0, in out y, 1, @silicon, additive_rec.@silicon, 40, 40);
  278:  jump *label124 always 0 0                                    Display.mnd: if progress == 0 then
        label *label123                                              ...
  279:  op idiv *tmp291 :drawAddReco:progress 0.01                   Display.mnd: drawItem(in 0, in out y, 1, @poly, progress, 1.0, floor(100 * progress), "%");
  280:  op mul *tmp296 126 :drawAddReco:progress                     Display.mnd: var length = min(barLength, barLength * current / target);
  281:  op min :drawItemColor.8:length 126 *tmp296                   ...
  282:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  283:  op sub *tmp308 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  284:  draw image 11 *tmp308 @poly 16 0 0                           ...
  285:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  286:  draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  287:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  288:  draw lineRect 22 :drawTitleRow.3:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  289:  op sub *tmp310 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  290:  print *tmp291                                                Display.mnd: print(text);
  291:  print "%"                                                    ...
  292:  draw print 174 *tmp310 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  293:  print *tmp291                                                Display.mnd: print(text);
  294:  print "%"                                                    ...
  295:  draw print 175 *tmp310 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  296:  op sub :updateDisplay:y :drawTitleRow.3:y 30                 Display.mnd: y -= ROW_HEIGHT;
        label *label124                                              Display.mnd: if progress == 0 then
  297:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label117                                              Display.mnd: drawAddReco(ref y);
  298:  jump *label146 equal .nextMultiReco null                     Display.mnd: if nextMultiReco == null then return; end;
  299:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  300:  op min :updateDisplay:y :updateDisplay:y 142                 Display.mnd: y = min(y, HEADER1_Y1 - 5 * ROW_HEIGHT);
  301:  print "Reconstructor"                                        Display.mnd: print(text);
  302:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  303:  print "Reconstructor"                                        Display.mnd: print(text);
  304:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  305:  op sub :drawTitleRow.4:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  306:  sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconst Display.mnd: var progress = multiplicative_rec.@progress;
  307:  jump *label152 notEqual :drawMultiReco:progress 0            Display.mnd: if progress == 0 then
  308:  sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metagl Display.mnd: drawItem(in 0, in out y, 1, @metaglass, multiplicative_rec.@metaglass, 40, 40);
  309:  op mul *tmp326 *tmp320 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  310:  op min :drawItemColor.9:length 126 *tmp326                   ...
  311:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  312:  op sub *tmp337 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  313:  draw image 11 *tmp337 @metaglass 16 0 0                      ...
  314:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  315:  draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  316:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  317:  draw lineRect 22 :drawTitleRow.4:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  318:  op sub *tmp339 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  319:  print 40                                                     Display.mnd: print(text);
  320:  draw print 174 *tmp339 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  321:  print 40                                                     Display.mnd: print(text);
  322:  draw print 175 *tmp339 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  323:  op sub :drawItemColor.9:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  324:  sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titani Display.mnd: drawItem(in 0, in out y, 1, @titanium, multiplicative_rec.@titanium, 80, 80);
  325:  op div *tmp349 *tmp343 0.6349206349206349                    Display.mnd: var length = min(barLength, barLength * current / target);
  326:  op min :drawItemColor.10:length 126 *tmp349                  ...
  327:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  328:  op sub *tmp360 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  329:  draw image 11 *tmp360 @titanium 16 0 0                       ...
  330:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  331:  draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  332:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  333:  draw lineRect 22 :drawItemColor.9:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  334:  op sub *tmp362 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  335:  print 80                                                     Display.mnd: print(text);
  336:  draw print 174 *tmp362 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  337:  print 80                                                     Display.mnd: print(text);
  338:  draw print 175 *tmp362 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  339:  op sub :drawItemColor.10:y :updateDisplay:y 45               Display.mnd: y -= ROW_HEIGHT;
  340:  sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silico Display.mnd: drawItem(in 0, in out y, 1, @silicon, multiplicative_rec.@silicon, 130, 130);
  341:  op div *tmp372 *tmp366 1.0317460317460319                    Display.mnd: var length = min(barLength, barLength * current / target);
  342:  op min :drawItemColor.11:length 126 *tmp372                  ...
  343:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  344:  op sub *tmp383 :updateDisplay:y 40                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  345:  draw image 11 *tmp383 @silicon 16 0 0                        ...
  346:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  347:  draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  348:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  349:  draw lineRect 22 :drawItemColor.10:y 126 10 0 0              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  350:  op sub *tmp385 :updateDisplay:y 38                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  351:  print 130                                                    Display.mnd: print(text);
  352:  draw print 174 *tmp385 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  353:  print 130                                                    Display.mnd: print(text);
  354:  draw print 175 *tmp385 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  355:  op sub :drawItemColor.11:y :updateDisplay:y 60               Display.mnd: y -= ROW_HEIGHT;
  356:  set :updateDisplay:y :drawItemColor.11:y                     Display.mnd: drawItem(in 0, in out y, 1, @silicon, multiplicative_rec.@silicon, 130, 130);
  357:  jump *label153 always 0 0                                    Display.mnd: if progress == 0 then
        label *label152                                              ...
  358:  op idiv *tmp390 :drawMultiReco:progress 0.01                 Display.mnd: drawItem(in 0, in out y, 1, @mega, progress, 1.0, floor(100 * progress), "%");
  359:  op mul *tmp395 126 :drawMultiReco:progress                   Display.mnd: var length = min(barLength, barLength * current / target);
  360:  op min :drawItemColor.12:length 126 *tmp395                  ...
  361:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  362:  op sub *tmp407 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  363:  draw image 11 *tmp407 @mega 16 0 0                           ...
  364:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  365:  draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  366:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  367:  draw lineRect 22 :drawTitleRow.4:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  368:  op sub *tmp409 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  369:  print *tmp390                                                Display.mnd: print(text);
  370:  print "%"                                                    ...
  371:  draw print 174 *tmp409 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  372:  print *tmp390                                                Display.mnd: print(text);
  373:  print "%"                                                    ...
  374:  draw print 175 *tmp409 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  375:  op sub :updateDisplay:y :drawTitleRow.4:y 45                 Display.mnd: y -= 2 * ROW_HEIGHT;
        label *label153                                              Display.mnd: if progress == 0 then
  376:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label146                                              Display.mnd: drawMultiReco(ref y);
  377:  sensor *tmp413 @unit @dead                                   Display.mnd: if @unit.@dead then return; end;
  378:  jump *label182 notEqual *tmp413 false                        ...
  379:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  380:  print "Builder"                                              Display.mnd: print(text);
  381:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  382:  print "Builder"                                              Display.mnd: print(text);
  383:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  384:  op sub :drawTitleRow.5:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  385:  jump *label188 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  386:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  387:  op sub *tmp433 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  388:  draw image 11 *tmp433 @poly 16 0 0                           ...
  389:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  390:  draw rect 22 :drawTitleRow.5:y 0 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  391:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  392:  draw lineRect 22 :drawTitleRow.5:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  393:  op sub *tmp435 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  394:  print .transportTarget                                       Display.mnd: print(text);
  395:  draw print 174 *tmp435 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  396:  print .transportTarget                                       Display.mnd: print(text);
  397:  draw print 175 *tmp435 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  398:  op sub :drawItemColor.13:y :updateDisplay:y 30               Display.mnd: y -= ROW_HEIGHT;
  399:  set :updateDisplay:y :drawItemColor.13:y                     Display.mnd: drawUnit(@poly, 0, in out y);
  400:  jump *label189 always 0 0                                    Display.mnd: if transportItem == null then
        label *label188                                              ...
  401:  sensor :drawBuilder:unitItem @unit @firstItem                Display.mnd: var unitItem = @unit.@firstItem;
  402:  sensor *tmp442 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in out y);
  403:  op equal *tmp443 :drawBuilder:unitItem .transportItem        ...
  404:  op mul *tmp444 *tmp442 *tmp443                               ...
  405:  set :drawUnit.1:item .transportItem                          ...
  406:  set :drawItem.14:target .transportTarget                     Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  407:  op mul *tmp449 126 *tmp444                                   Display.mnd: var length = min(barLength, barLength * current / target);
  408:  op div *tmp450 *tmp449 :drawItem.14:target                   ...
  409:  op min :drawItemColor.14:length 126 *tmp450                  ...
  410:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  411:  op sub *tmp461 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  412:  draw image 11 *tmp461 :drawUnit.1:item 16 0 0                ...
  413:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  414:  draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  415:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  416:  draw lineRect 22 :drawTitleRow.5:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  417:  op sub *tmp463 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  418:  print .transportTarget                                       Display.mnd: print(text);
  419:  draw print 174 *tmp463 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  420:  print .transportTarget                                       Display.mnd: print(text);
  421:  draw print 175 *tmp463 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  422:  op sub :drawItemColor.14:y :updateDisplay:y 30               Display.mnd: y -= ROW_HEIGHT;
  423:  set :updateDisplay:y :drawItemColor.14:y                     Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in out y);
        label *label189                                              Display.mnd: if transportItem == null then
        label *label182                                              Display.mnd: drawBuilder(ref y);
  424:  jump *label206 lessThan :updateDisplay:y 20                  Display.mnd: if y < ROW_HEIGHT + SEPARATOR_Y then return; end;
  425:  jump *label206 equal AJTJK-battery1 null                    Display.mnd: if battery1 == null then return; end;
  426:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  427:  print "Power"                                                Display.mnd: print(text);
  428:  draw print 22 20 @bottomLeft 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  429:  print "Power"                                                Display.mnd: print(text);
  430:  draw print 23 20 @bottomLeft 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  431:  sensor :drawPower:power AJTJK-battery1 @totalPower          Display.mnd: var power = battery1.@totalPower;
  432:  op mul *tmp474 :drawPower:power 100                          Display.mnd: drawItemColor(%808000FF, %FFFF00FF, in 0, in out y, 1, @battery, power, 4000, floor(power * 100 / 4000), "%");
  433:  op idiv *tmp476 *tmp474 4000                                 ...
  434:  op mul *tmp482 :drawPower:power 0.0315                       Display.mnd: var length = min(barLength, barLength * current / target);
  435:  op min :drawItemColor.15:length 126 *tmp482                  ...
  436:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  437:  draw image 11 10 @battery 16 0 0                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  438:  draw col %808000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  439:  draw rect 22 5 :drawItemColor.15:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  440:  draw col %FFFF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  441:  draw lineRect 22 5 126 10 0 0                                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  442:  print *tmp476                                                Display.mnd: print(text);
  443:  print "%"                                                    ...
  444:  draw print 174 12 @right 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  445:  print *tmp476                                                Display.mnd: print(text);
  446:  print "%"                                                    ...
  447:  draw print 175 12 @right 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
        label *label206                                              Display.mnd: drawPower(ref y);
  448:  drawflush display1                                           Display.mnd: drawflush(display1);
  449:  jump *label22 always 0 0                                     Display.mnd: if page == 0 then
        label *label21                                               ...
  450:  jump *label220 notEqual .page 1                              Display.mnd: elsif page == 1 then
  451:  read :displayStorage:tail bank2 510                          Display.mnd: var tail = bank2[510];
  452:  jump *label223 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  453:  read .lastTail bank2 511                                     Display.mnd: lastTail = bank2[511];
  454:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  455:  print "Resources"                                            Display.mnd: print(text);
  456:  draw print 11 206 @left 0 0 0                                Display.mnd: drawPrint(x, y, alignment);
  457:  print "Resources"                                            Display.mnd: print(text);
  458:  draw print 12 206 @left 0 0 0                                Display.mnd: drawPrint(x, y, alignment);
  459:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  460:  draw image 12 182 @copper 15 0 0                             Display.mnd: image(12, y, item, 15, 0);
  461:  draw image 12 161 @lead 15 0 0                               ...
  462:  draw image 12 140 @sand 15 0 0                               ...
  463:  draw image 12 119 @coal 15 0 0                               ...
  464:  draw image 12 98 @graphite 15 0 0                            ...
  465:  draw image 12 77 @silicon 15 0 0                             ...
  466:  draw image 12 56 @titanium 15 0 0                            ...
  467:  draw image 12 35 @metaglass 15 0 0                           ...
  468:  draw image 12 14 @thorium 15 0 0                             ...
        label *label223                                              Display.mnd: if pageSwitched then
  469:  setaddr :drawHeader*retaddr *label240                        Display.mnd: drawHeader();
  470:  call *label7 *invalid :drawHeader*retval                     ...
        label *label240                                              ...
  471:  drawflush display1                                           Display.mnd: drawflush(display1);
  472:  jump *label221 greaterThan .lastTail :displayStorage:tail    Display.mnd: if lastTail > tail then return; end;
  473:  read :displayStorage:accumulator bank2 .lastTail             Display.mnd: var accumulator = bank2[lastTail];
  474:  op add :displayStorage:x 25 .lastTail                        Display.mnd: var x = 25 + lastTail;
  475:  op sub :displayStorage:y.1 190 8                             Display.mnd: var y = START - 8;
  476:  set :displayStorage:i 0                                      Display.mnd: for var i in 0 ... 9 do
        label *label410                                              ...
  477:  op and *tmp513 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  478:  op sub :displayStorage:value *tmp513 8                       ...
  479:  select *tmp516 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  480:  draw col *tmp516 0 0 0 0 0                                   ...
  481:  draw rect :displayStorage:x :displayStorage:y.1 1 :displaySt Display.mnd: rect(x, y, 1, value);
  482:  op sub :displayStorage:y.1 :displayStorage:y.1 21            Display.mnd: y -= 21;
  483:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  484:  op add :displayStorage:i :displayStorage:i 1                 Display.mnd: for var i in 0 ... 9 do
  485:  jump *label410 lessThan :displayStorage:i 9                  ...
  486:  drawflush display1                                           Display.mnd: drawflush(display1);
  487:  op add .lastTail .lastTail 1                                 Display.mnd: displayStorage();
  488:  jump *label221 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label220                                              ...
  489:  jump *label248 notEqual .page 2                              Display.mnd: elsif page == 2 then
  490:  setaddr :drawHeader*retaddr *label251                        Display.mnd: drawHeader();
  491:  call *label7 *invalid :drawHeader*retval                     ...
        label *label251                                              ...
  492:  set :displayBaseMap:limit 0                                  Display.mnd: var limit = 0;
  493:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  494:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  495:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  496:  jump *label253 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  497:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  498:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  499:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  500:  print "Base map"                                             Display.mnd: print(text);
  501:  draw print 90 206 @center 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  502:  print "Base map"                                             Display.mnd: print(text);
  503:  draw print 91 206 @center 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  504:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  505:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  506:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  507:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  508:  drawflush display1                                           Display.mnd: drawflush(display1);
  509:  set :displayBaseMap:limit 5                                  Display.mnd: limit = 5;
        label *label253                                              Display.mnd: if pageSwitched then
  510:  set :displayBaseMap:counter 0                                Display.mnd: var counter = 0;
  511:  set :displayBaseMap:cfg "AJEMJJ-graphite-press0"             Display.mnd: for var cfg in BLOCKS do
  512:  setaddr *tmp530 *label262                                    ...
  513:  jump *label259 always 0 0                                    ...
        multilabel *label262                                         ...
  514:  set :displayBaseMap:cfg "AJTJK-battery1"                    ...
  515:  setaddr *tmp530 *label263                                    ...
  516:  jump *label259 always 0 0                                    ...
        multilabel *label263                                         ...
  517:  set :displayBaseMap:cfg "ALTJL-battery2"                    ...
  518:  setaddr *tmp530 *label264                                    ...
  519:  jump *label259 always 0 0                                    ...
        multilabel *label264                                         ...
  520:  set :displayBaseMap:cfg "AJRJM-combustion-generator3"       ...
  521:  setaddr *tmp530 *label265                                    ...
  522:  jump *label259 always 0 0                                    ...
        multilabel *label265                                         ...
  523:  set :displayBaseMap:cfg "ALMQJN-silicon-smelter4"            ...
  524:  setaddr *tmp530 *label266                                    ...
  525:  jump *label259 always 0 0                                    ...
        multilabel *label266                                         ...
  526:  set :displayBaseMap:cfg "A{LNJO-inverted-sorter5"            ...
  527:  setaddr *tmp530 *label267                                    ...
  528:  jump *label259 always 0 0                                    ...
        multilabel *label267                                         ...
  529:  set :displayBaseMap:cfg "A©JNJP-unloader6"                   ...
  530:  setaddr *tmp530 *label268                                    ...
  531:  jump *label259 always 0 0                                    ...
        multilabel *label268                                         ...
  532:  set :displayBaseMap:cfg "A{HNJQ-inverted-sorter7"            ...
  533:  setaddr *tmp530 *label269                                    ...
  534:  jump *label259 always 0 0                                    ...
        multilabel *label269                                         ...
  535:  set :displayBaseMap:cfg "AJPJR-underflow-gate8"             ...
  536:  setaddr *tmp530 *label270                                    ...
  537:  jump *label259 always 0 0                                    ...
        multilabel *label270                                         ...
  538:  set :displayBaseMap:cfg "AÕFFJS-micro-processor9"            ...
  539:  setaddr *tmp530 *label271                                    ...
  540:  jump *label259 always 0 0                                    ...
        multilabel *label271                                         ...
  541:  set :displayBaseMap:cfg "AFHJT-power-node10"                ...
  542:  setaddr *tmp530 *label272                                    ...
  543:  jump *label259 always 0 0                                    ...
        multilabel *label272                                         ...
  544:  set :displayBaseMap:cfg "A©FJJU-unloader11"                  ...
  545:  setaddr *tmp530 *label273                                    ...
  546:  jump *label259 always 0 0                                    ...
        multilabel *label273                                         ...
  547:  set :displayBaseMap:cfg "A~DJJV-overflow-gate12"             ...
  548:  setaddr *tmp530 *label274                                    ...
  549:  jump *label259 always 0 0                                    ...
        multilabel *label274                                         ...
  550:  set :displayBaseMap:cfg "A¾BFLW-air-factory13"               ...
  551:  setaddr *tmp530 *label275                                    ...
  552:  jump *label259 always 0 0                                    ...
        multilabel *label275                                         ...
  553:  set :displayBaseMap:cfg "A©NHJX-unloader14"                  ...
  554:  setaddr *tmp530 *label276                                    ...
  555:  jump *label259 always 0 0                                    ...
        multilabel *label276                                         ...
  556:  set :displayBaseMap:cfg "A{NJJY-inverted-sorter15"           ...
  557:  setaddr *tmp530 *label277                                    ...
  558:  jump *label259 always 0 0                                    ...
        multilabel *label277                                         ...
  559:  set :displayBaseMap:cfg "ANOMJZ-kiln16"                      ...
  560:  setaddr *tmp530 *label278                                    ...
  561:  jump *label259 always 0 0                                    ...
        multilabel *label278                                         ...
  562:  set :displayBaseMap:cfg "AÜAOJ[-liquid-container17"          ...
  563:  setaddr *tmp530 *label279                                    ...
  564:  jump *label259 always 0 0                                    ...
        multilabel *label279                                         ...
  565:  set :displayBaseMap:cfg "A¡ASJ\-water-extractor18"           ...
  566:  setaddr *tmp530 *label280                                    ...
  567:  jump *label259 always 0 0                                    ...
        multilabel *label280                                         ...
  568:  set :displayBaseMap:cfg "AAKJ]-steam-generator19"           ...
  569:  setaddr *tmp530 *label281                                    ...
  570:  jump *label259 always 0 0                                    ...
        multilabel *label281                                         ...
  571:  set :displayBaseMap:cfg "ALQIJ^-silicon-smelter20"           ...
  572:  setaddr *tmp530 *label282                                    ...
  573:  jump *label259 always 0 0                                    ...
        multilabel *label282                                         ...
  574:  set :displayBaseMap:cfg "AKFRJ_-multi-press21"               ...
  575:  setaddr *tmp530 *label283                                    ...
  576:  jump *label259 always 0 0                                    ...
        multilabel *label283                                         ...
  577:  set :displayBaseMap:cfg "A©HFJ`-unloader22"                  ...
  578:  setaddr *tmp530 *label284                                    ...
  579:  jump *label259 always 0 0                                    ...
        multilabel *label284                                         ...
  580:  set :displayBaseMap:cfg "A{HDJa-inverted-sorter23"           ...
  581:  setaddr *tmp530 *label285                                    ...
  582:  jump *label259 always 0 0                                    ...
        multilabel *label285                                         ...
  583:  set :displayBaseMap:cfg "AÀF@Lb-additive-reconstructor24"    ...
  584:  setaddr *tmp530 *label286                                    ...
  585:  jump *label259 always 0 0                                    ...
        multilabel *label286                                         ...
  586:  set :displayBaseMap:cfg "AÁNBJc-multiplicative-reconstructor ...
  587:  setaddr *tmp530 *label287                                    ...
  588:  jump *label259 always 0 0                                    ...
        multilabel *label287                                         ...
  589:  set :displayBaseMap:cfg "AXPRJd-pulverizer26"                ...
  590:  setaddr *tmp530 *label288                                    ...
  591:  jump *label259 always 0 0                                    ...
        multilabel *label288                                         ...
  592:  set :displayBaseMap:cfg "A~PPJe-overflow-gate27"             ...
  593:  setaddr *tmp530 *label289                                    ...
  594:  jump *label259 always 0 0                                    ...
        multilabel *label289                                         ...
  595:  set :displayBaseMap:cfg "APTJf-power-node28"                ...
  596:  setaddr *tmp530 *label290                                    ...
  597:  jump *label259 always 0 0                                    ...
        multilabel *label290                                         ...
  598:  set :displayBaseMap:cfg "A©RPJg-unloader29"                  ...
  599:  setaddr *tmp530 *label291                                    ...
  600:  jump *label259 always 0 0                                    ...
        multilabel *label291                                         ...
  601:  set :displayBaseMap:cfg "A¨SSJh-container30"                 ...
  602:  setaddr *tmp530 *label292                                    ...
  603:  jump *label259 always 0 0                                    ...
        multilabel *label292                                         ...
  604:  set :displayBaseMap:cfg "AXTPJi-pulverizer31"                ...
  605:  setaddr *tmp530 *label293                                    ...
  606:  jump *label259 always 0 0                                    ...
        multilabel *label293                                         ...
  607:  set :displayBaseMap:cfg "A~RNJj-overflow-gate32"             ...
  608:  setaddr *tmp530 *label294                                    ...
  609:  jump *label259 always 0 0                                    ...
        multilabel *label294                                         ...
  610:  set :displayBaseMap:cfg "A~RLJk-overflow-gate33"             ...
  611:  setaddr *tmp530 *label295                                    ...
  612:  jump *label259 always 0 0                                    ...
        multilabel *label295                                         ...
  613:  set :displayBaseMap:cfg "AXTNJl-pulverizer34"                ...
  614:  setaddr *tmp530 *label296                                    ...
  615:  jump *label259 always 0 0                                    ...
        multilabel *label296                                         ...
  616:  set :displayBaseMap:cfg "AXTLJm-pulverizer35"                ...
  617:  setaddr *tmp530 *label297                                    ...
        label *label259                                              ...
  618:  jump *label298 notEqual :displayBaseMap:cfg "AXPRJd-pulveriz Display.mnd: if cfg == PULVERIZER1 then
  619:  jump *label249 equal .scrap false                            Display.mnd: if not scrap then break; end;
        label *label298                                              Display.mnd: if cfg == PULVERIZER1 then
  620:  op add :displayBaseMap:counter :displayBaseMap:counter 1     Display.mnd: if ++counter > limit then
  621:  jump *label302 lessThanEq :displayBaseMap:counter :displayBa ...
  622:  setaddr :drawHeader*retaddr *label304                        Display.mnd: drawHeader();
  623:  call *label7 *invalid :drawHeader*retval                     ...
        label *label304                                              ...
  624:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  625:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  626:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  627:  set :displayBaseMap:counter 0                                Display.mnd: counter = 0;
        label *label302                                              Display.mnd: if ++counter > limit then
  628:  set :drawBlock:cfg :displayBaseMap:cfg                       Display.mnd: drawBlock(cfg);
  629:  setaddr :drawBlock*retaddr *label306                         ...
  630:  call *label8 *invalid :drawBlock*retval                      ...
        label *label306                                              ...
  631:  set :displayBaseMap:index .recentBuildIndex                  Display.mnd: var index = recentBuildIndex;
  632:  jump *label307 lessThan :displayBaseMap:index 0              Display.mnd: if index >= 0 then
  633:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  634:  setaddr .BLOCKS*rret *label524                               Display.mnd: drawBlock(BLOCKS[index]);
  635:  op mul *tmp1063 :displayBaseMap:index 2                      ...
  636:  multicall *label487 *tmp1063                                 ...
        label *label524                                              ...
  637:  set :drawBlock:cfg .BLOCKS*r                                 ...
  638:  setaddr :drawBlock*retaddr *label309                         ...
  639:  call *label8 *invalid :drawBlock*retval                      ...
        label *label309                                              ...
  640:  set :displayBaseMap:index .nextBuildIndex                    Display.mnd: index = nextBuildIndex;
  641:  jump *label310 greaterThanEq :displayBaseMap:index 36        Display.mnd: if index < length(BLOCKS) then
  642:  setaddr .BLOCKS*rret *label525                               Display.mnd: drawBlock(BLOCKS[index]);
  643:  op mul *tmp1064 :displayBaseMap:index 2                      ...
  644:  multicall *label487 *tmp1064                                 ...
        label *label525                                              ...
  645:  set :drawBlock:cfg .BLOCKS*r                                 ...
  646:  setaddr :drawBlock*retaddr *label312                         ...
  647:  call *label8 *invalid :drawBlock*retval                      ...
        label *label312                                              ...
        label *label310                                              Display.mnd: if index < length(BLOCKS) then
        label *label307                                              Display.mnd: if index >= 0 then
  648:  sensor *tmp550 switch1 @enabled                              Display.mnd: if switch1.enabled then
  649:  jump *label313 equal *tmp550 false                           ...
  650:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  651:  drawflush display1                                           Display.mnd: drawflush(display1);
  652:  jump *label249 always 0 0                                    Display.mnd: break;
        label *label313                                              Display.mnd: if switch1.enabled then
  653:  drawflush display1                                           Display.mnd: drawflush(display1);
  654:  multijump *tmp530 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label297                                         ...
  655:  jump *label249 always 0 0                                    Display.mnd: elsif page == 2 then
        label *label248                                              ...
  656:  op sub :displayLog:page .page 3                              Display.mnd: displayLog(page - 3);
  657:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  658:  op sub *tmp555 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ RECORDS_PER_PAGE + 1);
  659:  op idiv *tmp556 *tmp555 39                                   ...
  660:  op add *tmp557 *tmp556 1                                     ...
  661:  op max :displayLog:pages 1 *tmp557                           ...
  662:  op add .numPages :displayLog:pages 3                         Display.mnd: numPages = pages + 3;
  663:  op mul *tmp560 39 :displayLog:page                           Display.mnd: var start = 511 - RECORDS_PER_PAGE * page;
  664:  op sub :displayLog:start 511 *tmp560                         ...
  665:  op sub *tmp562 :displayLog:start 39                          Display.mnd: var stop = max(logPosition, start - RECORDS_PER_PAGE);
  666:  op max :displayLog:stop :displayLog:logPosition *tmp562      ...
  667:  jump *label316 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  668:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  669:  print "Build records"                                        Display.mnd: print(text);
  670:  draw print 4 206 @left 0 0 0                                 Display.mnd: drawPrint(x, y, alignment);
  671:  print "Build records"                                        Display.mnd: print(text);
  672:  draw print 5 206 @left 0 0 0                                 Display.mnd: drawPrint(x, y, alignment);
  673:  op sub *tmp566 .page 2                                       Display.mnd: print(page + 1, "/");
  674:  print *tmp566                                                ...
  675:  print "/"                                                    ...
  676:  print :displayLog:pages                                      Display.mnd: print(text);
  677:  draw print 172 206 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  678:  set .lastRecord :displayLog:start                            Display.mnd: lastRecord = start;
        label *label316                                              Display.mnd: if pageSwitched then
  679:  setaddr :drawHeader*retaddr *label322                        Display.mnd: drawHeader();
  680:  call *label7 *invalid :drawHeader*retval                     ...
        label *label322                                              ...
  681:  op sub :displayLog:position .lastRecord 1                    Display.mnd: for var position in stop ... lastRecord descending do
  682:  jump *label325 lessThan :displayLog:position :displayLog:sto ...
        label *label411                                              ...
  683:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  684:  op sub *tmp570 :displayLog:start :displayLog:position        Display.mnd: displayRecord(record, start - position - 1);
  685:  op sub *tmp571 *tmp570 1                                     ...
  686:  op idiv :displayRecord:col *tmp571 13                        Display.mnd: var col = index \ RECORDS_PER_COLUMN;
  687:  op mod :displayRecord:row *tmp571 13                         Display.mnd: var row = index % RECORDS_PER_COLUMN;
  688:  op mul *tmp574 58 :displayRecord:col                         Display.mnd: var x = 11 + 58 * col;
  689:  op add :displayRecord:x 11 *tmp574                           ...
  690:  op mul *tmp576 15 :displayRecord:row                         Display.mnd: var y = HEADER1_Y1 - 13 - 15 - 15 * row;
  691:  op sub :displayRecord:y 189 *tmp576                          ...
  692:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  693:  lookup block *tmp580 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  694:  jump *label328 lessThanEq :displayRecord:id @blockCount      ...
  695:  op sub *tmp581 :displayRecord:id @blockCount                 ...
  696:  lookup unit *tmp580 *tmp581                                  ...
        label *label328                                              ...
  697:  op div *tmp584 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  698:  op idiv :displayRecord:t *tmp584 120                         ...
  699:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  700:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  701:  select *tmp590 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  702:  print :displayRecord:m                                       ...
  703:  print ":"                                                    ...
  704:  print *tmp590                                                ...
  705:  draw image :displayRecord:x :displayRecord:y *tmp580 14 0 0  Display.mnd: image(x, y, icon, 14, 0);
  706:  op add *tmp592 :displayRecord:x 44                           Display.mnd: drawText(x + 56 - 12, y + 2, @right, s);
  707:  op add *tmp593 :displayRecord:y 2                            ...
  708:  print :displayRecord:s                                       Display.mnd: print(text);
  709:  draw print *tmp592 *tmp593 @right 0 0 0                      Display.mnd: drawPrint(x, y, alignment);
  710:  drawflush display1                                           Display.mnd: drawflush(display1);
  711:  sensor *tmp594 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  712:  jump *label325 notEqual *tmp594 false                        ...
  713:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... lastRecord descending do
  714:  jump *label411 greaterThanEq :displayLog:position :displayLo ...
        label *label325                                              ...
  715:  op add .lastRecord :displayLog:stop 1                        Display.mnd: lastRecord = stop + 1;
  716:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label249                                              Display.mnd: elsif page == 2 then
        label *label221                                              Display.mnd: elsif page == 1 then
        label *label22                                               Display.mnd: if page == 0 then
        label *label19                                               Display.mnd: if display.@bufferSize < 200 then
  717:  jump *label334 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  718:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  719:  printflush message1                                          Display.mnd: printflush(message1);
  720:  jump *label335 always 0 0                                    Display.mnd: if megas > 0 then
        label *label334                                              ...
  721:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  722:  format .nextBlock                                            ...
  723:  format .status1                                              Display.mnd: println(status1);
  724:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  725:  format .item2                                                ...
  726:  format .block2                                               ...
  727:  format .status3                                              Display.mnd: println(status3);
  728:  printflush message1                                          Display.mnd: printflush(message1);
        label *label335                                              Display.mnd: if megas > 0 then
  729:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  730:  jump *label16 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  731:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  732:  op add *tmp604 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  733:  op mod .page *tmp604 .numPages                               ...
  734:  drawflush null                                               Display.mnd: drawflush(null);
  735:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  736:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  737:  jump *label16 always 0 0                                     Display.mnd: while true do
        label *label7                                                Display.mnd: void drawHeader()
  738:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  739:  draw color 0 0 32 255 0 0                                    Display.mnd: color(0, 0, 32, 255);
  740:  draw rect 0 217 200 300 0 0                                  Display.mnd: rect(0, HEADER1_Y1, 200, 300);
  741:  jump *label340 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  742:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  743:  draw scale 3.5 3.5 0 0 0 0                                   Display.mnd: scale(3.5, 3.5);
  744:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  745:  op idiv :drawHeader:t *tmp0 120                              ...
  746:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
  747:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
  748:  select *tmp613 lessThan :drawHeader:s 10 "0" ""              Display.mnd: var zero = s < 10 ? "0" : "";
  749:  print :drawHeader:m                                          Display.mnd: print(text);
  750:  print ":"                                                    ...
  751:  print *tmp613                                                ...
  752:  print :drawHeader:s                                          ...
  753:  draw print 25 71 @center 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  754:  print :drawHeader:m                                          Display.mnd: print(text);
  755:  print ":"                                                    ...
  756:  print *tmp613                                                ...
  757:  print :drawHeader:s                                          ...
  758:  draw print 26 71 @center 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  759:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  760:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  761:  return :drawHeader*retaddr                                   Display.mnd: if megas > 0 then
        label *label340                                              ...
  762:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  763:  print "Goal"                                                 Display.mnd: print(text);
  764:  draw print 42 261 @bottom 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  765:  print "Goal"                                                 Display.mnd: print(text);
  766:  draw print 43 261 @bottom 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  767:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  768:  jump *label350 equal .missing false                          Display.mnd: if missing then
  769:  draw image 16 264 .missing 12 0 0                            Display.mnd: image(16, 264, missing, 12, 0);
  770:  set .missing false                                           Display.mnd: missing = false;
        label *label350                                              Display.mnd: if missing then
  771:  jump *label352 equal .nextMultiReco false                    Display.mnd: if nextMultiReco then
  772:  draw image 42 237 .nextMultiReco 32 0 0                      Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextMultiReco, 32, 0);
  773:  jump *label353 always 0 0                                    Display.mnd: if nextMultiReco then
        label *label352                                              ...
  774:  op add *tmp618 .nextBlock .nextFactory                       Display.mnd: var count = nextBlock + nextFactory + nextAddReco;
  775:  op add :drawHeader:count *tmp618 .nextAddReco                ...
  776:  jump *label354 notEqual :drawHeader:count 3                  Display.mnd: if count == 3 then
  777:  draw image 22 244 .nextBlock 18 0 0                          Display.mnd: image(HEADER_X - 20, HEADER1_Y - 17, nextBlock, 18, 0);
  778:  draw image 42 244 .nextFactory 18 0 0                        Display.mnd: image(HEADER_X +  0, HEADER1_Y - 17, nextFactory, 18, 0);
  779:  draw image 62 244 .nextAddReco 18 0 0                        Display.mnd: image(HEADER_X + 20, HEADER1_Y - 17, nextAddReco, 18, 0);
  780:  jump *label355 always 0 0                                    Display.mnd: if count == 3 then
        label *label354                                              ...
  781:  jump *label356 notEqual :drawHeader:count 2                  Display.mnd: elsif count == 2 then
  782:  set :drawHeader:x 27                                         Display.mnd: var x = HEADER_X - 15;
  783:  set :drawHeader:goal .nextBlock                              Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  784:  jump *label450 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  785:  draw image 27 240 :drawHeader:goal 25 0 0                    Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  786:  op add :drawHeader:x 27 30                                   Display.mnd: x += 30;
        label *label450                                              Display.mnd: if goal != null then
  787:  set :drawHeader:goal .nextFactory                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  788:  jump *label456 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  789:  draw image :drawHeader:x 240 :drawHeader:goal 25 0 0         Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  790:  op add :drawHeader:x :drawHeader:x 30                        Display.mnd: x += 30;
        label *label456                                              Display.mnd: if goal != null then
  791:  set :drawHeader:goal .nextAddReco                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  792:  jump *label357 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  793:  draw image :drawHeader:x 240 :drawHeader:goal 25 0 0         Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  794:  jump *label357 always 0 0                                    Display.mnd: elsif count == 2 then
        label *label356                                              ...
  795:  jump *label366 notEqual :drawHeader:count 1                  Display.mnd: elsif count == 1 then
  796:  set :drawHeader:goal.1 .nextBlock                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  797:  jump *label469 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  798:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
  799:  jump *label370 always 0 0                                    Display.mnd: break;
        label *label469                                              Display.mnd: if goal != null then
  800:  set :drawHeader:goal.1 .nextFactory                          Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  801:  jump *label475 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  802:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
  803:  jump *label370 always 0 0                                    Display.mnd: break;
        label *label475                                              Display.mnd: if goal != null then
  804:  set :drawHeader:goal.1 .nextAddReco                          Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  805:  jump *label481 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  806:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
        label *label481                                              Display.mnd: if goal != null then
        label *label370                                              Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
        label *label366                                              Display.mnd: elsif count == 1 then
        label *label357                                              Display.mnd: elsif count == 2 then
        label *label355                                              Display.mnd: if count == 3 then
        label *label353                                              Display.mnd: if nextMultiReco then
  807:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
  808:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  809:  op idiv :drawHeader:t.1 *tmp0 120                            ...
  810:  op idiv :drawHeader:m.1 :drawHeader:t.1 60                   Display.mnd: var m = t \ 60;
  811:  op mod :drawHeader:s.1 :drawHeader:t.1 60                    Display.mnd: var s = t % 60;
  812:  select *tmp637 lessThan :drawHeader:s.1 10 "0" ""            Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
  813:  print :drawHeader:m.1                                        ...
  814:  print ":{0}{0} (x{0}.{0})"                                   ...
  815:  format *tmp637                                               ...
  816:  format :drawHeader:s.1                                       ...
  817:  op mul *tmp638 10 :drawHeader:t.1                            Display.mnd: var ratio = round(10 * t / tt);
  818:  op div *tmp639 *tmp638 :drawHeader:tt                        ...
  819:  op round :drawHeader:ratio *tmp639 0                         ...
  820:  op idiv *tmp641 :drawHeader:ratio 10                         Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
  821:  op mod *tmp642 :drawHeader:ratio 10                          ...
  822:  format *tmp641                                               ...
  823:  format *tmp642                                               ...
  824:  draw print 174 272 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  825:  jump *label379 equal A¨SSJh-container30 null                 Display.mnd: if container_a != null then
  826:  sensor :drawHeader:count.1 A¨SSJh-container30 @scrap         Display.mnd: var count = container_a.@scrap;
  827:  op log10 *tmp646 :drawHeader:count.1 0                       Display.mnd: var len = floor(log10(count));
  828:  op floor :drawHeader:len *tmp646 0                           ...
  829:  print "x"                                                    Display.mnd: print(text);
  830:  print :drawHeader:count.1                                    ...
  831:  draw print 174 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  832:  op mul *tmp649 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @scrap, 12, 0);
  833:  op sub *tmp650 154 *tmp649                                   ...
  834:  draw image *tmp650 246 @scrap 12 0 0                         ...
  835:  sensor :drawHeader:count.1 A¨SSJh-container30 @sand          Display.mnd: count = container_a.@sand;
  836:  op log10 *tmp652 :drawHeader:count.1 0                       Display.mnd: len = floor(log10(count));
  837:  op floor :drawHeader:len *tmp652 0                           ...
  838:  print "x"                                                    Display.mnd: print(text);
  839:  print :drawHeader:count.1                                    ...
  840:  draw print 124 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  841:  op mul *tmp655 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @sand, 12, 0);
  842:  op sub *tmp656 104 *tmp655                                   ...
  843:  draw image *tmp656 246 @sand 12 0 0                          ...
  844:  jump *label380 always 0 0                                    Display.mnd: if container_a != null then
        label *label379                                              ...
  845:  jump *label383 equal .titaniumDrill false                    Display.mnd: if titaniumDrill then
  846:  sensor *tmp658 .titaniumDrill @titanium                      Display.mnd: var count = max(titaniumDrillCount, titaniumDrill.@titanium);
  847:  op max :drawHeader:count.2 .titaniumDrillCount *tmp658       ...
  848:  op log10 *tmp660 :drawHeader:count.2 0                       Display.mnd: var len = floor(log10(count));
  849:  op floor :drawHeader:len.1 *tmp660 0                         ...
  850:  print "x"                                                    Display.mnd: print(text);
  851:  print :drawHeader:count.2                                    ...
  852:  draw print 174 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  853:  op mul *tmp663 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 246, @titanium, 12, 0);
  854:  op sub *tmp664 154 *tmp663                                   ...
  855:  draw image *tmp664 246 @titanium 12 0 0                      ...
        label *label383                                              Display.mnd: if titaniumDrill then
  856:  jump *label386 equal .thoriumContainer false                 Display.mnd: if thoriumContainer then
  857:  sensor :drawHeader:count.3 .thoriumContainer @thorium        Display.mnd: var count = thoriumContainer.@thorium;
  858:  op log10 *tmp667 :drawHeader:count.3 0                       Display.mnd: var len = floor(log10(count));
  859:  op floor :drawHeader:len.2 *tmp667 0                         ...
  860:  print "x"                                                    Display.mnd: print(text);
  861:  print :drawHeader:count.3                                    ...
  862:  draw print 124 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  863:  op mul *tmp670 7 :drawHeader:len.2                           Display.mnd: image(x - 20 - 7 * len, 246, @thorium, 12, 0);
  864:  op sub *tmp671 104 *tmp670                                   ...
  865:  draw image *tmp671 246 @thorium 12 0 0                       ...
        label *label386                                              Display.mnd: if thoriumContainer then
        label *label380                                              Display.mnd: if container_a != null then
  866:  set :drawHeader:x.4 174                                      Display.mnd: var x = 174;
  867:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  868:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  869:  jump *label390 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  870:  draw image 154 227 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  871:  print "x"                                                    Display.mnd: print(text);
  872:  print :drawUnitCount:count                                   ...
  873:  draw print 174 229 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  874:  op sub :drawHeader:x.4 174 30                                Display.mnd: x -= 30;
        label *label390                                              Display.mnd: if count > 0 then
  875:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  876:  jump *label394 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  877:  op sub *tmp677 :drawHeader:x.4 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  878:  draw image *tmp677 227 @mono 12 0 0                          ...
  879:  print "x"                                                    Display.mnd: print(text);
  880:  print :drawUnitCount.1:count                                 ...
  881:  draw print :drawHeader:x.4 229 @right 0 0 0                  Display.mnd: drawPrint(x, y, alignment);
  882:  op sub :drawHeader:x.4 :drawHeader:x.4 30                    Display.mnd: x -= 30;
        label *label394                                              Display.mnd: if count > 0 then
  883:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  884:  jump *label398 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  885:  op sub *tmp680 :drawHeader:x.4 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  886:  draw image *tmp680 227 @flare 12 0 0                         ...
  887:  print "x"                                                    Display.mnd: print(text);
  888:  print :drawUnitCount.2:count                                 ...
  889:  draw print :drawHeader:x.4 229 @right 0 0 0                  Display.mnd: drawPrint(x, y, alignment);
        label *label398                                              Display.mnd: if count > 0 then
  890:  return :drawHeader*retaddr                                   Display.mnd: void drawHeader()
        label *label8                                                Display.mnd: void drawBlock(cfg)
  891:  read *tmp682 :drawBlock:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  892:  op sub *tmp683 *tmp682 74                                    ...
  893:  lookup block :unpackCfg:type *tmp683                         ...
  894:  read *tmp686 :drawBlock:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  895:  op sub *tmp687 *tmp686 74                                    ...
  896:  read *tmp690 :drawBlock:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  897:  op sub *tmp691 *tmp690 74                                    ...
  898:  read *tmp694 :drawBlock:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  899:  op sub :unpackCfg:rotation *tmp694 74                        ...
  900:  read *tmp697 :drawBlock:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  901:  op sub :unpackCfg:ind *tmp697 74                             ...
  902:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  903:  jump *label404 notEqual :unpackCfg:ind .nextBuildIndex       Display.mnd: if index == nextBuildIndex then
  904:  draw col %80ffffff 0 0 0 0 0                                 Display.mnd: col(%80ffffff);
  905:  jump *label405 always 0 0                                    Display.mnd: if index == nextBuildIndex then
        label *label404                                              ...
  906:  op shl *tmp709 1 :unpackCfg:ind                              Display.mnd: var built = blocksBuilt & (1 << index);
  907:  op and :drawBlock:built .blocksBuilt *tmp709                 ...
  908:  op add *tmp711 :drawBlock:built .pageSwitched                Display.mnd: if built + pageSwitched == 0 then return; end;
  909:  jump *label401 equal *tmp711 0                               ...
  910:  select *tmp714 notEqual :drawBlock:built false %[white] %408 Display.mnd: col(built ? %[white] : %408040ff);
  911:  draw col *tmp714 0 0 0 0 0                                   ...
        label *label405                                              Display.mnd: if index == nextBuildIndex then
  912:  op mul *tmp717 2 :unpackCfg:size                             Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  913:  op mul *tmp718 90 :unpackCfg:rotation                        ...
  914:  draw image *tmp687 *tmp691 :unpackCfg:type *tmp717 *tmp718 0 ...
        label *label401                                              Display.mnd: void drawBlock(cfg)
  915:  return :drawBlock*retaddr                                    ...
        multilabel *label487
  916:  set .BLOCKS*r "AJEMJJ-graphite-press0"
  917:  return .BLOCKS*rret
        multilabel *label488
  918:  set .BLOCKS*r "AJTJK-battery1"
  919:  return .BLOCKS*rret
        multilabel *label489
  920:  set .BLOCKS*r "ALTJL-battery2"
  921:  return .BLOCKS*rret
        multilabel *label490
  922:  set .BLOCKS*r "AJRJM-combustion-generator3"
  923:  return .BLOCKS*rret
        multilabel *label491
  924:  set .BLOCKS*r "ALMQJN-silicon-smelter4"
  925:  return .BLOCKS*rret
        multilabel *label492
  926:  set .BLOCKS*r "A{LNJO-inverted-sorter5"
  927:  return .BLOCKS*rret
        multilabel *label493
  928:  set .BLOCKS*r "A©JNJP-unloader6"
  929:  return .BLOCKS*rret
        multilabel *label494
  930:  set .BLOCKS*r "A{HNJQ-inverted-sorter7"
  931:  return .BLOCKS*rret
        multilabel *label495
  932:  set .BLOCKS*r "AJPJR-underflow-gate8"
  933:  return .BLOCKS*rret
        multilabel *label496
  934:  set .BLOCKS*r "AÕFFJS-micro-processor9"
  935:  return .BLOCKS*rret
        multilabel *label497
  936:  set .BLOCKS*r "AFHJT-power-node10"
  937:  return .BLOCKS*rret
        multilabel *label498
  938:  set .BLOCKS*r "A©FJJU-unloader11"
  939:  return .BLOCKS*rret
        multilabel *label499
  940:  set .BLOCKS*r "A~DJJV-overflow-gate12"
  941:  return .BLOCKS*rret
        multilabel *label500
  942:  set .BLOCKS*r "A¾BFLW-air-factory13"
  943:  return .BLOCKS*rret
        multilabel *label501
  944:  set .BLOCKS*r "A©NHJX-unloader14"
  945:  return .BLOCKS*rret
        multilabel *label502
  946:  set .BLOCKS*r "A{NJJY-inverted-sorter15"
  947:  return .BLOCKS*rret
        multilabel *label503
  948:  set .BLOCKS*r "ANOMJZ-kiln16"
  949:  return .BLOCKS*rret
        multilabel *label504
  950:  set .BLOCKS*r "AÜAOJ[-liquid-container17"
  951:  return .BLOCKS*rret
        multilabel *label505
  952:  set .BLOCKS*r "A¡ASJ\-water-extractor18"
  953:  return .BLOCKS*rret
        multilabel *label506
  954:  set .BLOCKS*r "AAKJ]-steam-generator19"
  955:  return .BLOCKS*rret
        multilabel *label507
  956:  set .BLOCKS*r "ALQIJ^-silicon-smelter20"
  957:  return .BLOCKS*rret
        multilabel *label508
  958:  set .BLOCKS*r "AKFRJ_-multi-press21"
  959:  return .BLOCKS*rret
        multilabel *label509
  960:  set .BLOCKS*r "A©HFJ`-unloader22"
  961:  return .BLOCKS*rret
        multilabel *label510
  962:  set .BLOCKS*r "A{HDJa-inverted-sorter23"
  963:  return .BLOCKS*rret
        multilabel *label511
  964:  set .BLOCKS*r "AÀF@Lb-additive-reconstructor24"
  965:  return .BLOCKS*rret
        multilabel *label512
  966:  set .BLOCKS*r "AÁNBJc-multiplicative-reconstructor25"
  967:  return .BLOCKS*rret
        multilabel *label513
  968:  set .BLOCKS*r "AXPRJd-pulverizer26"
  969:  return .BLOCKS*rret
        multilabel *label514
  970:  set .BLOCKS*r "A~PPJe-overflow-gate27"
  971:  return .BLOCKS*rret
        multilabel *label515
  972:  set .BLOCKS*r "APTJf-power-node28"
  973:  return .BLOCKS*rret
        multilabel *label516
  974:  set .BLOCKS*r "A©RPJg-unloader29"
  975:  return .BLOCKS*rret
        multilabel *label517
  976:  set .BLOCKS*r "A¨SSJh-container30"
  977:  return .BLOCKS*rret
        multilabel *label518
  978:  set .BLOCKS*r "AXTPJi-pulverizer31"
  979:  return .BLOCKS*rret
        multilabel *label519
  980:  set .BLOCKS*r "A~RNJj-overflow-gate32"
  981:  return .BLOCKS*rret
        multilabel *label520
  982:  set .BLOCKS*r "A~RLJk-overflow-gate33"
  983:  return .BLOCKS*rret
        multilabel *label521
  984:  set .BLOCKS*r "AXTNJl-pulverizer34"
  985:  return .BLOCKS*rret
        multilabel *label522
  986:  set .BLOCKS*r "AXTLJm-pulverizer35"
  987:  return .BLOCKS*rret


Performance: parsed in 719 ms, compiled in 466 ms, optimized in 2,923 ms, run in 9 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp39 processor3 "*signature":
Variable 'processor3' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
