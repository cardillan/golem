  2402 instructions before optimizations.
   191 instructions eliminated by Temp Variables Elimination (2 passes, 8 iterations).
   151 instructions eliminated by Dead Code Elimination (7 iterations).
    10 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    59 instructions eliminated by Jump Optimization (7 iterations).
    51 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     7 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
    18 instructions eliminated by If Expression Optimization (6 iterations).
   899 instructions eliminated by Data Flow Optimization (4 passes, 20 iterations).
     1 instructions eliminated by Loop Optimization (5 iterations).
     2 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (9 iterations).
     3 loops unrolled by Loop Unrolling.
     1 jump tables inlined by Array Optimization.
    10 instructions eliminated by Jump Straightening (7 iterations).
     9 instructions updated by Jump Threading.
     6 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   982 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  * Unroll iteration loop at Display.mnd:566:9                   size   -17, benefit       54.7, efficiency   Infinity (-21 instructions)
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
    Unroll iteration loop at Display.mnd:150:17                  size    -2, benefit       20.9, efficiency   Infinity
    Unroll iteration loop at Display.mnd:157:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +153, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:572:5                    size  +153, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +153, benefit       58.6, efficiency      0.383
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973
    Inline read jump table of array 'BLOCKS'                     size    -3, benefit       39.1, efficiency   Infinity
  ! Inline 'BLOCKS' read access at Display.mnd:542:23            size   +67, benefit       39.1, efficiency      0.583

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
    Unroll iteration loop at Display.mnd:150:17                  size    -2, benefit       20.9, efficiency   Infinity
    Unroll iteration loop at Display.mnd:157:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +153, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:572:5                    size  +153, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +153, benefit       58.6, efficiency      0.383
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit       39.1, efficiency   Infinity (-3 instructions)
  ! Inline 'BLOCKS' read access at Display.mnd:542:23            size   +67, benefit       39.1, efficiency      0.583

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  * Unroll iteration loop at Display.mnd:150:17                  size    -2, benefit       20.9, efficiency   Infinity (-1 instructions)
    Unroll iteration loop at Display.mnd:157:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +153, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:572:5                    size  +153, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +153, benefit       58.6, efficiency      0.383
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +153, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  * Unroll iteration loop at Display.mnd:157:17                  size    -2, benefit       10.5, efficiency   Infinity (+0 instructions)
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +152, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +152, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:572:5                    size  +152, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:509:5                    size  +152, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +152, benefit       58.6, efficiency      0.385
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +152, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +152, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +152, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:572:5                    size  +152, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:509:5                    size  +152, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +152, benefit       58.6, efficiency      0.385
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +152, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Pass 2: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:572:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:509:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +151, benefit       58.6, efficiency      0.388
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Pass 3: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:572:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:509:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +151, benefit       58.6, efficiency      0.388
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Pass 4: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:572:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:509:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +151, benefit       58.6, efficiency      0.388
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Pass 5: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:250:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:581:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'setupScale' defined at Display.mnd:486:1    size    +3, benefit      134.2, efficiency     44.727
  ! Inline function 'drawBlock' defined at Display.mnd:493:1     size   +38, benefit      205.1, efficiency      5.397
  ! Inline function call at Display.mnd:113:24                   size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:225:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:572:5                    size  +151, benefit        9.4, efficiency      0.062
  ! Inline function call at Display.mnd:509:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:517:9                    size    +2, benefit        2.3, efficiency      1.172
  ! Inline function call at Display.mnd:531:13                   size  +151, benefit       58.6, efficiency      0.388
  ! Inline function call at Display.mnd:537:9                    size   +39, benefit      136.7, efficiency      3.506
  ! Inline function call at Display.mnd:542:13                   size   +39, benefit       68.4, efficiency      1.753
  ! Inline function call at Display.mnd:435:5                    size  +151, benefit        4.7, efficiency      0.031
  ! Inline function call at Display.mnd:498:9                    size    +2, benefit       87.9, efficiency     43.945
  ! Inline function call at Display.mnd:502:9                    size    +2, benefit       43.9, efficiency     21.973

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-117 instructions):
 
    35 jump *label25 equal *tmp52 false
    36 draw color 0 0 32 80
    37 draw rect 0 0 176 176
-    * set *tmp53 null
    38 jump *label26 always
    39 label *label25
    40 draw reset
    41 draw clear 0 0 32
-    * set *tmp53 null
    42 label *label26
    43 draw col %[white]
    44 op div *tmp54 .animation 30
 
    81 setaddr :drawHeader*retaddr *label32 (h:*label32)
    82 call *label4 *invalid :drawHeader*retval (m:*label32) (h:*label32)
    83 label *label32
-    * set *tmp73 null
    84 jump *label31 always
    85 label *label30
-    * set *tmp73 null
    86 label *label31
    87 drawflush display1
-    * set *tmp74 .animation
    88 op add .animation .animation 1
    89 label *label24
    90 set *tmp51 null
 
   190 jump *label46 equal *tmp101 false
   191 set :drawItemColor:col 0
   192 op sub :drawItemColor:y :drawItemColor:y 15
-    * set *tmp102 :drawItemColor:y
   193 jump *label47 always
   194 label *label46
-    * set *tmp102 null
   195 label *label47
   196 label *label42
   197 set :drawItem:col :drawItemColor:col
 
   199 label *label41
   200 set :updateDisplay:y :drawItem:y
   201 op sub :updateDisplay:y :updateDisplay:y 35
-    * set *tmp78 :updateDisplay:y
   202 jump *label37 always
   203 label *label36
   204 op notEqual *tmp103 .nextBlock null
 
   328 jump *label72 equal *tmp131 false
   329 set :drawItemColor.1:col 0
   330 op sub :drawItemColor.1:y :drawItemColor.1:y 15
-    * set *tmp132 :drawItemColor.1:y
   331 jump *label73 always
   332 label *label72
-    * set *tmp132 null
   333 label *label73
   334 label *label68
   335 set :drawItem.1:col :drawItemColor.1:col
 
   346 label *label74
   347 set *tmp134 null
   348 label *label75
-    * set *tmp109 *tmp134
   349 jump *label66 always
   350 label *label65
-    * set *tmp109 null
   351 label *label66
   352 label *label56
   353 multijump *tmp107 0 0 (m:marker0)
   354 multilabel *label64 (m:marker0)
   355 label *label57
-    * set *tmp106 null
   356 jump *label54 always
   357 label *label53
-    * set *tmp106 null
   358 label *label54
   359 op lessThan *tmp135 .totalTargets 3
   360 jump *label76 equal *tmp135 false
   361 op sub *tmp137 3 .totalTargets
   362 op mul *tmp138 *tmp137 15
   363 op sub :updateDisplay:y :updateDisplay:y *tmp138
-    * set *tmp136 :updateDisplay:y
   364 jump *label77 always
   365 label *label76
-    * set *tmp136 null
   366 label *label77
   367 op sub :updateDisplay:y :updateDisplay:y 5
   368 set *tmp104 :updateDisplay:y
 
   370 label *label48
   371 set *tmp104 null
   372 label *label49
-    * set *tmp78 *tmp104
   373 label *label37
   374 label *label35
   375 op equal *tmp139 .nextFactory null
   376 jump *label79 equal *tmp139 false
   377 jump *label78 always
-    * set *tmp140 null
   378 jump *label80 always
   379 label *label79
-    * set *tmp140 null
   380 label *label80
   381 draw col %[white]
   382 set :drawTitleRow.2:y :updateDisplay:y
 
   470 jump *label93 equal *tmp167 false
   471 set :drawItemColor.2:col 0
   472 op sub :drawItemColor.2:y :drawItemColor.2:y 15
-    * set *tmp168 :drawItemColor.2:y
   473 jump *label94 always
   474 label *label93
-    * set *tmp168 null
   475 label *label94
   476 label *label89
   477 set :drawItem.2:col :drawItemColor.2:col
 
   550 jump *label100 equal *tmp190 false
   551 set :drawItemColor.3:col 0
   552 op sub :drawItemColor.3:y :drawItemColor.3:y 15
-    * set *tmp191 :drawItemColor.3:y
   553 jump *label101 always
   554 label *label100
-    * set *tmp191 null
   555 label *label101
   556 label *label96
   557 set :drawItem.3:col :drawItemColor.3:col
 
   626 jump *label107 equal *tmp213 false
   627 set :drawItemColor.4:col 0
   628 op sub :drawItemColor.4:y :drawItemColor.4:y 15
-    * set *tmp214 :drawItemColor.4:y
   629 jump *label108 always
   630 label *label107
-    * set *tmp214 null
   631 label *label108
   632 label *label103
   633 set :drawItem.4:col :drawItemColor.4:col
 
   636 set :updateDisplay:y :drawItem.4:y
   637 set *tmp145 null
   638 label *label87
-    * set *tmp143 *tmp145
   639 jump *label85 always
   640 label *label84
   641 op mul *tmp215 100 :drawAirFactory:progress
 
   709 jump *label114 equal *tmp237 false
   710 set :drawItemColor.5:col 0
   711 op sub :drawItemColor.5:y :drawItemColor.5:y 15
-    * set *tmp238 :drawItemColor.5:y
   712 jump *label115 always
   713 label *label114
-    * set *tmp238 null
   714 label *label115
   715 label *label110
   716 set :drawItem.5:col :drawItemColor.5:col
 
   718 label *label109
   719 set :updateDisplay:y :drawItem.5:y
   720 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp143 :updateDisplay:y
   721 label *label85
   722 op sub :updateDisplay:y :updateDisplay:y 5
   723 label *label78
   724 op equal *tmp239 .nextAddReco null
   725 jump *label117 equal *tmp239 false
   726 jump *label116 always
-    * set *tmp240 null
   727 jump *label118 always
   728 label *label117
-    * set *tmp240 null
   729 label *label118
   730 draw col %[white]
   731 set :drawTitleRow.3:y :updateDisplay:y
 
   817 jump *label129 equal *tmp265 false
   818 set :drawItemColor.6:col 0
   819 op sub :drawItemColor.6:y :drawItemColor.6:y 15
-    * set *tmp266 :drawItemColor.6:y
   820 jump *label130 always
   821 label *label129
-    * set *tmp266 null
   822 label *label130
   823 label *label125
   824 set :drawItem.6:col :drawItemColor.6:col
 
   893 jump *label136 equal *tmp288 false
   894 set :drawItemColor.7:col 0
   895 op sub :drawItemColor.7:y :drawItemColor.7:y 15
-    * set *tmp289 :drawItemColor.7:y
   896 jump *label137 always
   897 label *label136
-    * set *tmp289 null
   898 label *label137
   899 label *label132
   900 set :drawItem.7:col :drawItemColor.7:col
   901 set :drawItem.7:y :drawItemColor.7:y
   902 label *label131
   903 set :updateDisplay:y :drawItem.7:y
-    * set *tmp243 null
   904 jump *label123 always
   905 label *label122
   906 op mul *tmp290 100 :drawAddReco:progress
 
   974 jump *label143 equal *tmp312 false
   975 set :drawItemColor.8:col 0
   976 op sub :drawItemColor.8:y :drawItemColor.8:y 15
-    * set *tmp313 :drawItemColor.8:y
   977 jump *label144 always
   978 label *label143
-    * set *tmp313 null
   979 label *label144
   980 label *label139
   981 set :drawItem.8:col :drawItemColor.8:col
 
   983 label *label138
   984 set :updateDisplay:y :drawItem.8:y
   985 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp243 :updateDisplay:y
   986 label *label123
   987 op sub :updateDisplay:y :updateDisplay:y 5
   988 label *label116
   989 op equal *tmp314 .nextMultiReco null
   990 jump *label146 equal *tmp314 false
   991 jump *label145 always
-    * set *tmp315 null
   992 jump *label147 always
   993 label *label146
-    * set *tmp315 null
   994 label *label147
   995 draw col %[white]
   996 op min *tmp316 :updateDisplay:y 142
 
  1084 jump *label158 equal *tmp341 false
  1085 set :drawItemColor.9:col 0
  1086 op sub :drawItemColor.9:y :drawItemColor.9:y 15
-    * set *tmp342 :drawItemColor.9:y
  1087 jump *label159 always
  1088 label *label158
-    * set *tmp342 null
  1089 label *label159
  1090 label *label154
  1091 set :drawItem.9:col :drawItemColor.9:col
 
  1160 jump *label165 equal *tmp364 false
  1161 set :drawItemColor.10:col 0
  1162 op sub :drawItemColor.10:y :drawItemColor.10:y 15
-    * set *tmp365 :drawItemColor.10:y
  1163 jump *label166 always
  1164 label *label165
-    * set *tmp365 null
  1165 label *label166
  1166 label *label161
  1167 set :drawItem.10:col :drawItemColor.10:col
 
  1236 jump *label172 equal *tmp387 false
  1237 set :drawItemColor.11:col 0
  1238 op sub :drawItemColor.11:y :drawItemColor.11:y 15
-    * set *tmp388 :drawItemColor.11:y
  1239 jump *label173 always
  1240 label *label172
-    * set *tmp388 null
  1241 label *label173
  1242 label *label168
  1243 set :drawItem.11:col :drawItemColor.11:col
  1244 set :drawItem.11:y :drawItemColor.11:y
  1245 label *label167
  1246 set :updateDisplay:y :drawItem.11:y
-    * set *tmp319 null
  1247 jump *label152 always
  1248 label *label151
  1249 op mul *tmp389 100 :drawMultiReco:progress
 
  1317 jump *label179 equal *tmp411 false
  1318 set :drawItemColor.12:col 0
  1319 op sub :drawItemColor.12:y :drawItemColor.12:y 15
-    * set *tmp412 :drawItemColor.12:y
  1320 jump *label180 always
  1321 label *label179
-    * set *tmp412 null
  1322 label *label180
  1323 label *label175
  1324 set :drawItem.12:col :drawItemColor.12:col
 
  1326 label *label174
  1327 set :updateDisplay:y :drawItem.12:y
  1328 op sub :updateDisplay:y :updateDisplay:y 30
-    * set *tmp319 :updateDisplay:y
  1329 label *label152
  1330 op sub :updateDisplay:y :updateDisplay:y 5
  1331 label *label145
  1332 sensor *tmp413 @unit @dead
  1333 jump *label182 equal *tmp413 false
  1334 jump *label181 always
-    * set *tmp414 null
  1335 jump *label183 always
  1336 label *label182
-    * set *tmp414 null
  1337 label *label183
  1338 draw col %[white]
  1339 set :drawTitleRow.5:y :updateDisplay:y
 
  1427 jump *label195 equal *tmp439 false
  1428 set :drawItemColor.13:col 0
  1429 op sub :drawItemColor.13:y :drawItemColor.13:y 15
-    * set *tmp440 :drawItemColor.13:y
  1430 jump *label196 always
  1431 label *label195
-    * set *tmp440 null
  1432 label *label196
  1433 label *label191
  1434 set :drawItem.13:col :drawItemColor.13:col
 
  1437 set :drawUnit:y :drawItem.13:y
  1438 label *label189
  1439 set :updateDisplay:y :drawUnit:y
-    * set *tmp416 null
  1440 jump *label188 always
  1441 label *label187
  1442 sensor *tmp441 @unit @firstItem
 
  1516 jump *label203 equal *tmp467 false
  1517 set :drawItemColor.14:col 0
  1518 op sub :drawItemColor.14:y :drawItemColor.14:y 15
-    * set *tmp468 :drawItemColor.14:y
  1519 jump *label204 always
  1520 label *label203
-    * set *tmp468 null
  1521 label *label204
  1522 label *label199
  1523 set :drawItem.14:col :drawItemColor.14:col
 
  1526 set :drawUnit.1:y :drawItem.14:y
  1527 label *label197
  1528 set :updateDisplay:y :drawUnit.1:y
-    * set *tmp416 null
  1529 label *label188
  1530 label *label181
  1531 op lessThan *tmp469 :updateDisplay:y 20
  1532 jump *label206 equal *tmp469 false
  1533 jump *label205 always
-    * set *tmp470 null
  1534 jump *label207 always
  1535 label *label206
-    * set *tmp470 null
  1536 label *label207
  1537 op equal *tmp471 AJTJK-battery1 null
  1538 jump *label208 equal *tmp471 false
  1539 jump *label205 always
-    * set *tmp472 null
  1540 jump *label209 always
  1541 label *label208
-    * set *tmp472 null
  1542 label *label209
  1543 set :updateDisplay:y 20
  1544 draw col %[white]
 
  1627 jump *label217 equal *tmp497 false
  1628 set :drawItemColor.15:col 0
  1629 op sub :drawItemColor.15:y :drawItemColor.15:y 15
-    * set *tmp498 :drawItemColor.15:y
  1630 jump *label218 always
  1631 label *label217
-    * set *tmp498 null
  1632 label *label218
  1633 label *label213
  1634 set :updateDisplay:y :drawItemColor.15:y
 
  1710 multijump *tmp506 0 0 (m:marker1)
  1711 multilabel *label238 (m:marker1)
  1712 label *label229
-    * set *tmp502 null
  1713 jump *label223 always
  1714 label *label222
-    * set *tmp502 null
  1715 label *label223
  1716 setaddr :drawHeader*retaddr *label239 (h:*label239)
  1717 call *label4 *invalid :drawHeader*retval (m:*label239) (h:*label239)
 
  1720 op greaterThan *tmp507 .lastTail :displayStorage:tail
  1721 jump *label240 equal *tmp507 false
  1722 jump *label221 always
-    * set *tmp508 null
  1723 jump *label241 always
  1724 label *label240
-    * set *tmp508 null
  1725 label *label241
  1726 set *tmp509 .lastTail
  1727 read *tmp510 bank2 *tmp509
 
  1752 jump *label242 always
  1753 label *label244
  1754 drawflush display1
-    * set *tmp517 .lastTail
  1755 op add .lastTail .lastTail 1
  1756 label *label221
  1757 set *tmp500 null
 
  1789 draw image 0 0 @core-shard 6 0
  1790 drawflush display1
  1791 set :displayBaseMap:limit 5
-    * set *tmp520 :displayBaseMap:limit
  1792 jump *label252 always
  1793 label *label251
-    * set *tmp520 null
  1794 label *label252
  1795 set :displayBaseMap:counter 0
  1796 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
 
  1942 label *label297
  1943 set *tmp526 null
  1944 label *label298
-    * set *tmp524 *tmp526
  1945 jump *label296 always
  1946 label *label295
-    * set *tmp524 null
  1947 label *label296
  1948 op equal *tmp527 :displayBaseMap:counter :displayBaseMap:limit
  1949 jump *label299 equal *tmp527 false
 
  1951 call *label4 *invalid :drawHeader*retval (m:*label301) (h:*label301)
  1952 label *label301
  1953 set :displayBaseMap:counter 0
-    * set *tmp528 :displayBaseMap:counter
  1954 jump *label300 always
  1955 label *label299
  1956 set *tmp529 :displayBaseMap:counter
  1957 op add :displayBaseMap:counter :displayBaseMap:counter 1
-    * set *tmp528 *tmp529
  1958 label *label300
  1959 set :drawBlock:cfg :displayBaseMap:cfg
  1960 setaddr :drawBlock*retaddr *label302 (h:*label302)
 
  1970 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1971 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1972 label *label305
-    * set *tmp531 null
  1973 jump *label304 always
  1974 label *label303
-    * set *tmp531 null
  1975 label *label304
  1976 sensor *tmp534 switch1 @enabled
  1977 jump *label306 equal *tmp534 false
  1978 draw clear 0 0 32
  1979 jump *label259 always
-    * set *tmp535 null
  1980 jump *label307 always
  1981 label *label306
-    * set *tmp535 null
  1982 label *label307
  1983 drawflush display1
  1984 label *label258
 
  2037 draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
  2038 label *label314
  2039 set .lastRecord :displayLog:start
-    * set *tmp548 .lastRecord
  2040 jump *label310 always
  2041 label *label309
-    * set *tmp548 null
  2042 label *label310
  2043 setaddr :drawHeader*retaddr *label315 (h:*label315)
  2044 call *label4 *invalid :drawHeader*retval (m:*label315) (h:*label315)
 
  2110 sensor *tmp578 switch1 @enabled
  2111 jump *label325 equal *tmp578 false
  2112 jump *label318 always
-    * set *tmp579 null
  2113 jump *label326 always
  2114 label *label325
-    * set *tmp579 null
  2115 label *label326
  2116 label *label317
  2117 op sub :displayLog:position :displayLog:position 1
 
  2127 label *label220
  2128 set *tmp49 *tmp500
  2129 label *label21
-    * set *tmp47 *tmp49
  2130 jump *label19 always
  2131 label *label18
-    * set *tmp47 null
  2132 label *label19
  2133 op greaterThan *tmp581 .megas 0
  2134 jump *label327 equal *tmp581 false
  2135 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  2136 print "\n"
  2137 printflush message1
-    * set *tmp582 null
  2138 jump *label328 always
  2139 label *label327
  2140 print "[gold]Building "
 
  2157 print "\n"
  2158 printflush message1
  2159 label *label329
-    * set *tmp582 null
  2160 label *label328
  2161 sensor *tmp585 switch1 @enabled
  2162 set .pageSwitched *tmp585
 
  2168 drawflush null
  2169 draw reset
  2170 draw clear 0 0 32
-    * set *tmp586 null
  2171 jump *label331 always
  2172 label *label330
-    * set *tmp586 null
  2173 label *label331
  2174 label *label16
  2175 jump *label15 always
 
  2228 label *label337
  2229 draw col %[white]
  2230 draw reset
-    * set *tmp591 null
  2231 jump *label334 always
  2232 label *label333
  2233 draw col %[gold]
 
  2251 draw col %[white]
  2252 jump *label343 equal .nextMultiReco false
  2253 draw image 42 237 .nextMultiReco 32 0
-    * set *tmp600 null
  2254 jump *label344 always
  2255 label *label343
  2256 op add *tmp601 .nextBlock .nextFactory
 
  2282 jump *label355 equal *tmp608 false
  2283 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2284 op add :drawHeader:x :drawHeader:x 30
-    * set *tmp609 :drawHeader:x
  2285 jump *label356 always
  2286 label *label355
-    * set *tmp609 null
  2287 label *label356
  2288 label *label350
  2289 multijump *tmp607 0 0 (m:marker3)
 
  2309 jump *label365 equal *tmp613 false
  2310 draw image 42 237 :drawHeader:goal.1 32 0
  2311 jump *label361 always
-    * set *tmp614 null
  2312 jump *label366 always
  2313 label *label365
-    * set *tmp614 null
  2314 label *label366
  2315 label *label360
  2316 multijump *tmp612 0 0 (m:marker4)
 
  2325 label *label348
  2326 set *tmp604 *tmp606
  2327 label *label346
-    * set *tmp600 *tmp604
  2328 label *label344
  2329 set :drawHeader:tt @second
  2330 read *tmp0 processor1 "time"
 
  2398 op mul *tmp638 7 :drawHeader:len
  2399 op sub *tmp639 *tmp637 *tmp638
  2400 draw image *tmp639 246 @sand 12 0
-    * set *tmp627 null
  2401 jump *label371 always
  2402 label *label370
  2403 jump *label374 equal .titaniumDrill false
 
  2419 op mul *tmp646 7 :drawHeader:len.1
  2420 op sub *tmp647 *tmp645 *tmp646
  2421 draw image *tmp647 246 @titanium 12 0
-    * set *tmp640 null
  2422 jump *label375 always
  2423 label *label374
-    * set *tmp640 null
  2424 label *label375
  2425 jump *label377 equal .thoriumContainer false
  2426 sensor *tmp649 .thoriumContainer @thorium
 
  2445 label *label377
  2446 set *tmp648 null
  2447 label *label378
-    * set *tmp627 *tmp648
  2448 label *label371
  2449 set :drawHeader:x.4 174
  2450 draw col %[white]
 
  2462 draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
  2463 label *label383
  2464 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp656 :drawHeader:x.4
  2465 jump *label382 always
  2466 label *label381
-    * set *tmp656 null
  2467 label *label382
  2468 label *label380
  2469 set :drawUnitCount.1:type @mono
 
  2480 draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
  2481 label *label387
  2482 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp659 :drawHeader:x.4
  2483 jump *label386 always
  2484 label *label385
-    * set *tmp659 null
  2485 label *label386
  2486 label *label384
  2487 set :drawUnitCount.2:type @flare
 
  2498 draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
  2499 label *label391
  2500 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp662 :drawHeader:x.4
  2501 jump *label390 always
  2502 label *label389
-    * set *tmp662 null
  2503 label *label390
  2504 label *label388
-    * set *tmp591 null
  2505 label *label334
  2506 label *label332
  2507 return :drawHeader*retaddr
 
  2551 op sub *tmp685 *tmp684 74
  2552 set :unpackCfg:ind *tmp685
  2553 sensor *tmp686 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp686
  2554 sensor *tmp687 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp687
  2555 sensor *tmp688 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp688
  2556 sensor *tmp689 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp689
  2557 sensor *tmp690 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp690
  2558 sensor *tmp691 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp691
  2559 sensor *tmp692 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp692
  2560 sensor *tmp693 :unpackCfg:type @size
  2561 set :unpackCfg:size *tmp693
  2562 label *label395
 
  2585 op mul *tmp699 2 :drawBlock:size
  2586 op mul *tmp700 90 :drawBlock:rotation
  2587 draw image *tmp697 *tmp698 :drawBlock:type *tmp699 *tmp700
-    * set *tmp696 null
  2588 jump *label397 always
  2589 label *label396
  2590 jump *label399 equal .pageSwitched false
 
  2602 label *label399
  2603 set *tmp701 null
  2604 label *label400
-    * set *tmp696 *tmp701
  2605 label *label397
  2606 label *label393
  2607 return :drawBlock*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-24 instructions):
 
   341 op lessThanEq *tmp133 :drawMaterials:count 0
   342 jump *label74 equal *tmp133 false
   343 jump *label57 always
-    * set *tmp134 null
   344 jump *label75 always
   345 label *label74
-    * set *tmp134 null
   346 label *label75
   347 jump *label66 always
   348 label *label65
 
   363 label *label76
   364 label *label77
   365 op sub :updateDisplay:y :updateDisplay:y 5
-    * set *tmp104 :updateDisplay:y
   366 jump *label49 always
   367 label *label48
-    * set *tmp104 null
   368 label *label49
   369 label *label37
   370 label *label35
 
   475 label *label88
   476 set :updateDisplay:y :drawItem.2:y
   477 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp145 :updateDisplay:y
   478 jump *label87 always
   479 label *label86
   480 sensor *tmp169 A¾BFLW-air-factory13 @lead
 
   629 set :drawItem.4:y :drawItemColor.4:y
   630 label *label102
   631 set :updateDisplay:y :drawItem.4:y
-    * set *tmp145 null
   632 label *label87
   633 jump *label85 always
   634 label *label84
 
  1631 label *label33
  1632 set *tmp51 null
  1633 label *label23
-    * set *tmp49 *tmp51
  1634 jump *label21 always
  1635 label *label20
  1636 op equal *tmp499 .page 1
 
  1930 op equal *tmp525 :displayBaseMap:cfg "AXPRJe-pulverizer27"
  1931 jump *label297 equal *tmp525 false
  1932 jump *label259 always
-    * set *tmp526 null
  1933 jump *label298 always
  1934 label *label297
-    * set *tmp526 null
  1935 label *label298
  1936 jump *label296 always
  1937 label *label295
 
  1944 set :displayBaseMap:counter 0
  1945 jump *label300 always
  1946 label *label299
-    * set *tmp529 :displayBaseMap:counter
  1947 op add :displayBaseMap:counter :displayBaseMap:counter 1
  1948 label *label300
  1949 set :drawBlock:cfg :displayBaseMap:cfg
 
  2115 label *label248
  2116 set *tmp500 *tmp519
  2117 label *label220
-    * set *tmp49 *tmp500
  2118 label *label21
  2119 jump *label19 always
  2120 label *label18
 
  2250 draw image 22 244 .nextBlock 18 0
  2251 draw image 42 244 .nextFactory 18 0
  2252 draw image 62 244 .nextAddReco 18 0
-    * set *tmp604 null
  2253 jump *label346 always
  2254 label *label345
  2255 op equal *tmp605 :drawHeader:count 2
 
  2311 label *label358
  2312 set *tmp606 *tmp611
  2313 label *label348
-    * set *tmp604 *tmp606
  2314 label *label346
  2315 label *label344
  2316 set :drawHeader:tt @second
 
  2427 op mul *tmp653 7 :drawHeader:len.2
  2428 op sub *tmp654 *tmp652 *tmp653
  2429 draw image *tmp654 246 @thorium 12 0
-    * set *tmp648 null
  2430 jump *label378 always
  2431 label *label377
-    * set *tmp648 null
  2432 label *label378
  2433 label *label371
  2434 set :drawHeader:x.4 174
 
  2535 read *tmp684 :unpackCfg:cfg *tmp683
  2536 op sub *tmp685 *tmp684 74
  2537 set :unpackCfg:ind *tmp685
-    * sensor *tmp686 :unpackCfg:type @copper
-    * sensor *tmp687 :unpackCfg:type @lead
-    * sensor *tmp688 :unpackCfg:type @graphite
-    * sensor *tmp689 :unpackCfg:type @silicon
-    * sensor *tmp690 :unpackCfg:type @titanium
-    * sensor *tmp691 :unpackCfg:type @metaglass
-    * sensor *tmp692 :unpackCfg:type @thorium
  2538 sensor *tmp693 :unpackCfg:type @size
  2539 set :unpackCfg:size *tmp693
  2540 label *label395
 
  2575 op mul *tmp704 2 :drawBlock:size
  2576 op mul *tmp705 90 :drawBlock:rotation
  2577 draw image *tmp702 *tmp703 :drawBlock:type *tmp704 *tmp705
-    * set *tmp701 null
  2578 jump *label400 always
  2579 label *label399
-    * set *tmp701 null
  2580 label *label400
  2581 label *label397
  2582 label *label393

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
    87 drawflush display1
    88 op add .animation .animation 1
    89 label *label24
-    * set *tmp51 null
    90 jump *label23 always
    91 label *label22
    92 draw clear 0 0 32
 
  1628 label *label205
  1629 drawflush display1
  1630 label *label33
-    * set *tmp51 null
  1631 label *label23
  1632 jump *label21 always
  1633 label *label20
 
  1745 drawflush display1
  1746 op add .lastTail .lastTail 1
  1747 label *label221
-    * set *tmp500 null
  1748 jump *label220 always
  1749 label *label219
  1750 op equal *tmp518 .page 2
 
  2110 label *label308
  2111 set *tmp519 null
  2112 label *label248
-    * set *tmp500 *tmp519
  2113 label *label220
  2114 label *label21
  2115 jump *label19 always
 
  2273 multijump *tmp607 0 0 (m:marker3)
  2274 multilabel *label354 (m:marker3)
  2275 label *label351
-    * set *tmp606 null
  2276 jump *label348 always
  2277 label *label347
  2278 op equal *tmp610 :drawHeader:count 1
 
  2304 label *label357
  2305 set *tmp611 null
  2306 label *label358
-    * set *tmp606 *tmp611
  2307 label *label348
  2308 label *label346
  2309 label *label344

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1973 multilabel *label294 (m:marker2)
  1974 label *label259
  1975 label *label249
-    * set *tmp519 null
  1976 jump *label248 always
  1977 label *label247
  1978 op sub *tmp536 .page 3
 
  2107 set .lastRecord *tmp580
  2108 drawflush display1
  2109 label *label308
-    * set *tmp519 null
  2110 label *label248
  2111 label *label220
  2112 label *label21
 
  2297 multijump *tmp612 0 0 (m:marker4)
  2298 multilabel *label364 (m:marker4)
  2299 label *label361
-    * set *tmp611 null
  2300 jump *label358 always
  2301 label *label357
-    * set *tmp611 null
  2302 label *label358
  2303 label *label348
  2304 label *label346

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-191 instructions):
 
    14 label *label9
    15 label *label12
    16 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 *tmp40
-    * set .core *tmp40
+   17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    18 label *label13
    19 op equal *tmp44 .core null
    20 jump *label12 notEqual *tmp44 false
 
    42 draw col %[white]
    43 op div *tmp54 .animation 30
    44 op min *tmp55 *tmp54 1
-    * op max *tmp56 0 *tmp55
-    * set :animate:ratio *tmp56
+   45 op max :animate:ratio 0 *tmp55
    46 set :lerp:from 42
    47 set :lerp:to 90
    48 set :lerp:ratio :animate:ratio
    49 op sub *tmp58 1 :lerp:ratio
    50 op mul *tmp59 *tmp58 :lerp:from
    51 op mul *tmp60 :lerp:ratio :lerp:to
-    * op add *tmp61 *tmp59 *tmp60
-    * set *tmp57 *tmp61
+   52 op add *tmp57 *tmp59 *tmp60
    53 label *label27
    54 set :animate:x *tmp57
    55 set :lerp.1:from 237
 
    58 op sub *tmp63 1 :lerp.1:ratio
    59 op mul *tmp64 *tmp63 :lerp.1:from
    60 op mul *tmp65 :lerp.1:ratio :lerp.1:to
-    * op add *tmp66 *tmp64 *tmp65
-    * set *tmp62 *tmp66
+   61 op add *tmp62 *tmp64 *tmp65
    62 label *label28
    63 set :animate:y *tmp62
    64 set :lerp.2:from 32
 
    67 op sub *tmp68 1 :lerp.2:ratio
    68 op mul *tmp69 *tmp68 :lerp.2:from
    69 op mul *tmp70 :lerp.2:ratio :lerp.2:to
-    * op add *tmp71 *tmp69 *tmp70
-    * set *tmp67 *tmp71
+   70 op add *tmp67 *tmp69 *tmp70
    71 label *label29
    72 set :animate:size *tmp67
    73 draw image :animate:x :animate:y @mega :animate:size 0
 
   115 set :drawItem:y :updateDisplay:y
   116 set :drawItem:columns 1
   117 set :drawItem:item .nextBlock
-    * read *tmp16 processor3 ".mapProgress"
-    * set :drawItem:current *tmp16
-    * read *tmp17 processor3 ".mapTotal"
-    * set :drawItem:target *tmp17
+  118 read :drawItem:current processor3 ".mapProgress"
+  119 read :drawItem:target processor3 ".mapTotal"
   120 set :drawItemColor:color1 %008000FF
   121 set :drawItemColor:color2 %00FF00FF
   122 set :drawItemColor:col :drawItem:col
 
   127 set :drawItemColor:target :drawItem:target
   128 op mul *tmp79 :drawItemColor:columns 176
   129 op div *tmp80 *tmp79 2
-    * op sub *tmp81 214 *tmp80
-    * set :drawItemColor:barLength *tmp81
-    * op add *tmp82 48 :drawItemColor:barLength
-    * set :drawItemColor:textEnd *tmp82
+  130 op sub :drawItemColor:barLength 214 *tmp80
+  131 op add :drawItemColor:textEnd 48 :drawItemColor:barLength
   132 op mul *tmp83 :drawItemColor:barLength :drawItemColor:current
   133 op div *tmp84 *tmp83 :drawItemColor:target
-    * op min *tmp85 :drawItemColor:barLength *tmp84
-    * set :drawItemColor:length *tmp85
+  134 op min :drawItemColor:length :drawItemColor:barLength *tmp84
   135 op mul *tmp86 :drawItemColor:col 176
   136 op div *tmp87 *tmp86 2
-    * op add *tmp88 11 *tmp87
-    * set :drawItemColor:iconX *tmp88
+  137 op add :drawItemColor:iconX 11 *tmp87
   138 op mul *tmp89 :drawItemColor:col 176
   139 op div *tmp90 *tmp89 2
-    * op add *tmp91 22 *tmp90
-    * set :drawItemColor:barX *tmp91
+  140 op add :drawItemColor:barX 22 *tmp90
   141 op mul *tmp92 :drawItemColor:col 176
   142 op div *tmp93 *tmp92 2
-    * op add *tmp94 :drawItemColor:textEnd *tmp93
-    * set :drawItemColor:textX *tmp94
+  143 op add :drawItemColor:textX :drawItemColor:textEnd *tmp93
   144 draw col %[white]
   145 op add *tmp95 :drawItemColor:y 5
   146 draw image :drawItemColor:iconX *tmp95 :drawItemColor:item 16 0
 
   161 print *tmp98
   162 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   163 label *label44
-    * op add *tmp99 :drawBold:x 1
-    * set :drawText.3:x *tmp99
+  164 op add :drawText.3:x :drawBold:x 1
   165 set :drawText.3:y :drawBold:y
   166 set :drawText.3:alignment :drawBold:alignment
   167 print "x"
 
   188 label *label36
   189 op notEqual *tmp103 .nextBlock null
   190 jump *label48 equal *tmp103 false
-    * set *tmp105 .totalTargets
-    * set :drawMaterials:count *tmp105
+  191 set :drawMaterials:count .totalTargets
   192 set :drawTitleRow.1:y :updateDisplay:y
   193 set :drawTitleRow.1:alignment @bottomLeft
   194 set :drawText.4:x 22
 
   261 set :drawItemColor.1:target :drawItem.1:target
   262 op mul *tmp111 :drawItemColor.1:columns 176
   263 op div *tmp112 *tmp111 2
-    * op sub *tmp113 214 *tmp112
-    * set :drawItemColor.1:barLength *tmp113
-    * op add *tmp114 48 :drawItemColor.1:barLength
-    * set :drawItemColor.1:textEnd *tmp114
+  264 op sub :drawItemColor.1:barLength 214 *tmp112
+  265 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
   266 op mul *tmp115 :drawItemColor.1:barLength :drawItemColor.1:current
   267 op div *tmp116 *tmp115 :drawItemColor.1:target
-    * op min *tmp117 :drawItemColor.1:barLength *tmp116
-    * set :drawItemColor.1:length *tmp117
+  268 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
   269 op mul *tmp118 :drawItemColor.1:col 176
   270 op div *tmp119 *tmp118 2
-    * op add *tmp120 11 *tmp119
-    * set :drawItemColor.1:iconX *tmp120
+  271 op add :drawItemColor.1:iconX 11 *tmp119
   272 op mul *tmp121 :drawItemColor.1:col 176
   273 op div *tmp122 *tmp121 2
-    * op add *tmp123 22 *tmp122
-    * set :drawItemColor.1:barX *tmp123
+  274 op add :drawItemColor.1:barX 22 *tmp122
   275 op mul *tmp124 :drawItemColor.1:col 176
   276 op div *tmp125 *tmp124 2
-    * op add *tmp126 :drawItemColor.1:textEnd *tmp125
-    * set :drawItemColor.1:textX *tmp126
+  277 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp125
   278 draw col %[white]
   279 op add *tmp127 :drawItemColor.1:y 5
   280 draw image :drawItemColor.1:iconX *tmp127 :drawItemColor.1:item 16 0
 
   293 print :drawMaterials:target
   294 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   295 label *label70
-    * op add *tmp130 :drawBold.1:x 1
-    * set :drawText.7:x *tmp130
+  296 op add :drawText.7:x :drawBold.1:x 1
   297 set :drawText.7:y :drawBold.1:y
   298 set :drawText.7:alignment :drawBold.1:alignment
   299 print :drawMaterials:target
 
   369 op sub :drawTitleRow.2:y :drawTitleRow.2:y 15
   370 label *label81
   371 set :updateDisplay:y :drawTitleRow.2:y
-    * sensor *tmp141 A¾BFLW-air-factory13 @progress
-    * set :drawAirFactory:progress *tmp141
+  372 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   373 op equal *tmp142 :drawAirFactory:progress 0
   374 jump *label84 equal *tmp142 false
   375 op equal *tmp144 .nextFactory @flare
 
   391 set :drawItemColor.2:target :drawItem.2:target
   392 op mul *tmp147 :drawItemColor.2:columns 176
   393 op div *tmp148 *tmp147 2
-    * op sub *tmp149 214 *tmp148
-    * set :drawItemColor.2:barLength *tmp149
-    * op add *tmp150 48 :drawItemColor.2:barLength
-    * set :drawItemColor.2:textEnd *tmp150
+  394 op sub :drawItemColor.2:barLength 214 *tmp148
+  395 op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
   396 op mul *tmp151 :drawItemColor.2:barLength :drawItemColor.2:current
   397 op div *tmp152 *tmp151 :drawItemColor.2:target
-    * op min *tmp153 :drawItemColor.2:barLength *tmp152
-    * set :drawItemColor.2:length *tmp153
+  398 op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
   399 op mul *tmp154 :drawItemColor.2:col 176
   400 op div *tmp155 *tmp154 2
-    * op add *tmp156 11 *tmp155
-    * set :drawItemColor.2:iconX *tmp156
+  401 op add :drawItemColor.2:iconX 11 *tmp155
   402 op mul *tmp157 :drawItemColor.2:col 176
   403 op div *tmp158 *tmp157 2
-    * op add *tmp159 22 *tmp158
-    * set :drawItemColor.2:barX *tmp159
+  404 op add :drawItemColor.2:barX 22 *tmp158
   405 op mul *tmp160 :drawItemColor.2:col 176
   406 op div *tmp161 *tmp160 2
-    * op add *tmp162 :drawItemColor.2:textEnd *tmp161
-    * set :drawItemColor.2:textX *tmp162
+  407 op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp161
   408 draw col %[white]
   409 op add *tmp163 :drawItemColor.2:y 5
   410 draw image :drawItemColor.2:iconX *tmp163 :drawItemColor.2:item 16 0
 
   423 print 15
   424 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   425 label *label91
-    * op add *tmp166 :drawBold.2:x 1
-    * set :drawText.11:x *tmp166
+  426 op add :drawText.11:x :drawBold.2:x 1
   427 set :drawText.11:y :drawBold.2:y
   428 set :drawText.11:alignment :drawBold.2:alignment
   429 print 15
 
   463 set :drawItemColor.3:target :drawItem.3:target
   464 op mul *tmp170 :drawItemColor.3:columns 176
   465 op div *tmp171 *tmp170 2
-    * op sub *tmp172 214 *tmp171
-    * set :drawItemColor.3:barLength *tmp172
-    * op add *tmp173 48 :drawItemColor.3:barLength
-    * set :drawItemColor.3:textEnd *tmp173
+  466 op sub :drawItemColor.3:barLength 214 *tmp171
+  467 op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
   468 op mul *tmp174 :drawItemColor.3:barLength :drawItemColor.3:current
   469 op div *tmp175 *tmp174 :drawItemColor.3:target
-    * op min *tmp176 :drawItemColor.3:barLength *tmp175
-    * set :drawItemColor.3:length *tmp176
+  470 op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
   471 op mul *tmp177 :drawItemColor.3:col 176
   472 op div *tmp178 *tmp177 2
-    * op add *tmp179 11 *tmp178
-    * set :drawItemColor.3:iconX *tmp179
+  473 op add :drawItemColor.3:iconX 11 *tmp178
   474 op mul *tmp180 :drawItemColor.3:col 176
   475 op div *tmp181 *tmp180 2
-    * op add *tmp182 22 *tmp181
-    * set :drawItemColor.3:barX *tmp182
+  476 op add :drawItemColor.3:barX 22 *tmp181
   477 op mul *tmp183 :drawItemColor.3:col 176
   478 op div *tmp184 *tmp183 2
-    * op add *tmp185 :drawItemColor.3:textEnd *tmp184
-    * set :drawItemColor.3:textX *tmp185
+  479 op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp184
   480 draw col %[white]
   481 op add *tmp186 :drawItemColor.3:y 5
   482 draw image :drawItemColor.3:iconX *tmp186 :drawItemColor.3:item 16 0
 
   495 print 15
   496 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   497 label *label98
-    * op add *tmp189 :drawBold.3:x 1
-    * set :drawText.13:x *tmp189
+  498 op add :drawText.13:x :drawBold.3:x 1
   499 set :drawText.13:y :drawBold.3:y
   500 set :drawText.13:alignment :drawBold.3:alignment
   501 print 15
 
   532 set :drawItemColor.4:target :drawItem.4:target
   533 op mul *tmp193 :drawItemColor.4:columns 176
   534 op div *tmp194 *tmp193 2
-    * op sub *tmp195 214 *tmp194
-    * set :drawItemColor.4:barLength *tmp195
-    * op add *tmp196 48 :drawItemColor.4:barLength
-    * set :drawItemColor.4:textEnd *tmp196
+  535 op sub :drawItemColor.4:barLength 214 *tmp194
+  536 op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
   537 op mul *tmp197 :drawItemColor.4:barLength :drawItemColor.4:current
   538 op div *tmp198 *tmp197 :drawItemColor.4:target
-    * op min *tmp199 :drawItemColor.4:barLength *tmp198
-    * set :drawItemColor.4:length *tmp199
+  539 op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
   540 op mul *tmp200 :drawItemColor.4:col 176
   541 op div *tmp201 *tmp200 2
-    * op add *tmp202 11 *tmp201
-    * set :drawItemColor.4:iconX *tmp202
+  542 op add :drawItemColor.4:iconX 11 *tmp201
   543 op mul *tmp203 :drawItemColor.4:col 176
   544 op div *tmp204 *tmp203 2
-    * op add *tmp205 22 *tmp204
-    * set :drawItemColor.4:barX *tmp205
+  545 op add :drawItemColor.4:barX 22 *tmp204
   546 op mul *tmp206 :drawItemColor.4:col 176
   547 op div *tmp207 *tmp206 2
-    * op add *tmp208 :drawItemColor.4:textEnd *tmp207
-    * set :drawItemColor.4:textX *tmp208
+  548 op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp207
   549 draw col %[white]
   550 op add *tmp209 :drawItemColor.4:y 5
   551 draw image :drawItemColor.4:iconX *tmp209 :drawItemColor.4:item 16 0
 
   564 print 30
   565 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   566 label *label105
-    * op add *tmp212 :drawBold.4:x 1
-    * set :drawText.15:x *tmp212
+  567 op add :drawText.15:x :drawBold.4:x 1
   568 set :drawText.15:y :drawBold.4:y
   569 set :drawText.15:alignment :drawBold.4:alignment
   570 print 30
 
   605 set :drawItemColor.5:target :drawItem.5:target
   606 op mul *tmp217 :drawItemColor.5:columns 176
   607 op div *tmp218 *tmp217 2
-    * op sub *tmp219 214 *tmp218
-    * set :drawItemColor.5:barLength *tmp219
-    * op add *tmp220 48 :drawItemColor.5:barLength
-    * set :drawItemColor.5:textEnd *tmp220
+  608 op sub :drawItemColor.5:barLength 214 *tmp218
+  609 op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
   610 op mul *tmp221 :drawItemColor.5:barLength :drawItemColor.5:current
   611 op div *tmp222 *tmp221 :drawItemColor.5:target
-    * op min *tmp223 :drawItemColor.5:barLength *tmp222
-    * set :drawItemColor.5:length *tmp223
+  612 op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
   613 op mul *tmp224 :drawItemColor.5:col 176
   614 op div *tmp225 *tmp224 2
-    * op add *tmp226 11 *tmp225
-    * set :drawItemColor.5:iconX *tmp226
+  615 op add :drawItemColor.5:iconX 11 *tmp225
   616 op mul *tmp227 :drawItemColor.5:col 176
   617 op div *tmp228 *tmp227 2
-    * op add *tmp229 22 *tmp228
-    * set :drawItemColor.5:barX *tmp229
+  618 op add :drawItemColor.5:barX 22 *tmp228
   619 op mul *tmp230 :drawItemColor.5:col 176
   620 op div *tmp231 *tmp230 2
-    * op add *tmp232 :drawItemColor.5:textEnd *tmp231
-    * set :drawItemColor.5:textX *tmp232
+  621 op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp231
   622 draw col %[white]
   623 op add *tmp233 :drawItemColor.5:y 5
   624 draw image :drawItemColor.5:iconX *tmp233 :drawItemColor.5:item 16 0
 
   638 print "%"
   639 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   640 label *label112
-    * op add *tmp236 :drawBold.5:x 1
-    * set :drawText.17:x *tmp236
+  641 op add :drawText.17:x :drawBold.5:x 1
   642 set :drawText.17:y :drawBold.5:y
   643 set :drawText.17:alignment :drawBold.5:alignment
   644 print *tmp216
 
   687 op sub :drawTitleRow.3:y :drawTitleRow.3:y 15
   688 label *label119
   689 set :updateDisplay:y :drawTitleRow.3:y
-    * sensor *tmp241 AÀF@Lc-additive-reconstructor25 @progress
-    * set :drawAddReco:progress *tmp241
+  690 sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 @progress
   691 op equal *tmp242 :drawAddReco:progress 0
   692 jump *label122 equal *tmp242 false
   693 sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite
 
   707 set :drawItemColor.6:target :drawItem.6:target
   708 op mul *tmp245 :drawItemColor.6:columns 176
   709 op div *tmp246 *tmp245 2
-    * op sub *tmp247 214 *tmp246
-    * set :drawItemColor.6:barLength *tmp247
-    * op add *tmp248 48 :drawItemColor.6:barLength
-    * set :drawItemColor.6:textEnd *tmp248
+  710 op sub :drawItemColor.6:barLength 214 *tmp246
+  711 op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
   712 op mul *tmp249 :drawItemColor.6:barLength :drawItemColor.6:current
   713 op div *tmp250 *tmp249 :drawItemColor.6:target
-    * op min *tmp251 :drawItemColor.6:barLength *tmp250
-    * set :drawItemColor.6:length *tmp251
+  714 op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
   715 op mul *tmp252 :drawItemColor.6:col 176
   716 op div *tmp253 *tmp252 2
-    * op add *tmp254 11 *tmp253
-    * set :drawItemColor.6:iconX *tmp254
+  717 op add :drawItemColor.6:iconX 11 *tmp253
   718 op mul *tmp255 :drawItemColor.6:col 176
   719 op div *tmp256 *tmp255 2
-    * op add *tmp257 22 *tmp256
-    * set :drawItemColor.6:barX *tmp257
+  720 op add :drawItemColor.6:barX 22 *tmp256
   721 op mul *tmp258 :drawItemColor.6:col 176
   722 op div *tmp259 *tmp258 2
-    * op add *tmp260 :drawItemColor.6:textEnd *tmp259
-    * set :drawItemColor.6:textX *tmp260
+  723 op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp259
   724 draw col %[white]
   725 op add *tmp261 :drawItemColor.6:y 5
   726 draw image :drawItemColor.6:iconX *tmp261 :drawItemColor.6:item 16 0
 
   739 print 40
   740 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   741 label *label127
-    * op add *tmp264 :drawBold.6:x 1
-    * set :drawText.21:x *tmp264
+  742 op add :drawText.21:x :drawBold.6:x 1
   743 set :drawText.21:y :drawBold.6:y
   744 set :drawText.21:alignment :drawBold.6:alignment
   745 print 40
 
   776 set :drawItemColor.7:target :drawItem.7:target
   777 op mul *tmp268 :drawItemColor.7:columns 176
   778 op div *tmp269 *tmp268 2
-    * op sub *tmp270 214 *tmp269
-    * set :drawItemColor.7:barLength *tmp270
-    * op add *tmp271 48 :drawItemColor.7:barLength
-    * set :drawItemColor.7:textEnd *tmp271
+  779 op sub :drawItemColor.7:barLength 214 *tmp269
+  780 op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
   781 op mul *tmp272 :drawItemColor.7:barLength :drawItemColor.7:current
   782 op div *tmp273 *tmp272 :drawItemColor.7:target
-    * op min *tmp274 :drawItemColor.7:barLength *tmp273
-    * set :drawItemColor.7:length *tmp274
+  783 op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
   784 op mul *tmp275 :drawItemColor.7:col 176
   785 op div *tmp276 *tmp275 2
-    * op add *tmp277 11 *tmp276
-    * set :drawItemColor.7:iconX *tmp277
+  786 op add :drawItemColor.7:iconX 11 *tmp276
   787 op mul *tmp278 :drawItemColor.7:col 176
   788 op div *tmp279 *tmp278 2
-    * op add *tmp280 22 *tmp279
-    * set :drawItemColor.7:barX *tmp280
+  789 op add :drawItemColor.7:barX 22 *tmp279
   790 op mul *tmp281 :drawItemColor.7:col 176
   791 op div *tmp282 *tmp281 2
-    * op add *tmp283 :drawItemColor.7:textEnd *tmp282
-    * set :drawItemColor.7:textX *tmp283
+  792 op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp282
   793 draw col %[white]
   794 op add *tmp284 :drawItemColor.7:y 5
   795 draw image :drawItemColor.7:iconX *tmp284 :drawItemColor.7:item 16 0
 
   808 print 40
   809 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   810 label *label134
-    * op add *tmp287 :drawBold.7:x 1
-    * set :drawText.23:x *tmp287
+  811 op add :drawText.23:x :drawBold.7:x 1
   812 set :drawText.23:y :drawBold.7:y
   813 set :drawText.23:alignment :drawBold.7:alignment
   814 print 40
 
   848 set :drawItemColor.8:target :drawItem.8:target
   849 op mul *tmp292 :drawItemColor.8:columns 176
   850 op div *tmp293 *tmp292 2
-    * op sub *tmp294 214 *tmp293
-    * set :drawItemColor.8:barLength *tmp294
-    * op add *tmp295 48 :drawItemColor.8:barLength
-    * set :drawItemColor.8:textEnd *tmp295
+  851 op sub :drawItemColor.8:barLength 214 *tmp293
+  852 op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
   853 op mul *tmp296 :drawItemColor.8:barLength :drawItemColor.8:current
   854 op div *tmp297 *tmp296 :drawItemColor.8:target
-    * op min *tmp298 :drawItemColor.8:barLength *tmp297
-    * set :drawItemColor.8:length *tmp298
+  855 op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
   856 op mul *tmp299 :drawItemColor.8:col 176
   857 op div *tmp300 *tmp299 2
-    * op add *tmp301 11 *tmp300
-    * set :drawItemColor.8:iconX *tmp301
+  858 op add :drawItemColor.8:iconX 11 *tmp300
   859 op mul *tmp302 :drawItemColor.8:col 176
   860 op div *tmp303 *tmp302 2
-    * op add *tmp304 22 *tmp303
-    * set :drawItemColor.8:barX *tmp304
+  861 op add :drawItemColor.8:barX 22 *tmp303
   862 op mul *tmp305 :drawItemColor.8:col 176
   863 op div *tmp306 *tmp305 2
-    * op add *tmp307 :drawItemColor.8:textEnd *tmp306
-    * set :drawItemColor.8:textX *tmp307
+  864 op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp306
   865 draw col %[white]
   866 op add *tmp308 :drawItemColor.8:y 5
   867 draw image :drawItemColor.8:iconX *tmp308 :drawItemColor.8:item 16 0
 
   881 print "%"
   882 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   883 label *label141
-    * op add *tmp311 :drawBold.8:x 1
-    * set :drawText.25:x *tmp311
+  884 op add :drawText.25:x :drawBold.8:x 1
   885 set :drawText.25:y :drawBold.8:y
   886 set :drawText.25:alignment :drawBold.8:alignment
   887 print *tmp291
 
   913 label *label146
   914 label *label147
   915 draw col %[white]
-    * op min *tmp316 :updateDisplay:y 142
-    * set :updateDisplay:y *tmp316
+  916 op min :updateDisplay:y :updateDisplay:y 142
   917 set :drawTitleRow.4:y :updateDisplay:y
   918 set :drawTitleRow.4:alignment @bottomLeft
   919 set :drawText.26:x 22
 
   931 op sub :drawTitleRow.4:y :drawTitleRow.4:y 15
   932 label *label148
   933 set :updateDisplay:y :drawTitleRow.4:y
-    * sensor *tmp317 AÁNBJd-multiplicative-reconstructor26 @progress
-    * set :drawMultiReco:progress *tmp317
+  934 sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconstructor26 @progress
   935 op equal *tmp318 :drawMultiReco:progress 0
   936 jump *label151 equal *tmp318 false
   937 sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metaglass
 
   951 set :drawItemColor.9:target :drawItem.9:target
   952 op mul *tmp321 :drawItemColor.9:columns 176
   953 op div *tmp322 *tmp321 2
-    * op sub *tmp323 214 *tmp322
-    * set :drawItemColor.9:barLength *tmp323
-    * op add *tmp324 48 :drawItemColor.9:barLength
-    * set :drawItemColor.9:textEnd *tmp324
+  954 op sub :drawItemColor.9:barLength 214 *tmp322
+  955 op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
   956 op mul *tmp325 :drawItemColor.9:barLength :drawItemColor.9:current
   957 op div *tmp326 *tmp325 :drawItemColor.9:target
-    * op min *tmp327 :drawItemColor.9:barLength *tmp326
-    * set :drawItemColor.9:length *tmp327
+  958 op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
   959 op mul *tmp328 :drawItemColor.9:col 176
   960 op div *tmp329 *tmp328 2
-    * op add *tmp330 11 *tmp329
-    * set :drawItemColor.9:iconX *tmp330
+  961 op add :drawItemColor.9:iconX 11 *tmp329
   962 op mul *tmp331 :drawItemColor.9:col 176
   963 op div *tmp332 *tmp331 2
-    * op add *tmp333 22 *tmp332
-    * set :drawItemColor.9:barX *tmp333
+  964 op add :drawItemColor.9:barX 22 *tmp332
   965 op mul *tmp334 :drawItemColor.9:col 176
   966 op div *tmp335 *tmp334 2
-    * op add *tmp336 :drawItemColor.9:textEnd *tmp335
-    * set :drawItemColor.9:textX *tmp336
+  967 op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp335
   968 draw col %[white]
   969 op add *tmp337 :drawItemColor.9:y 5
   970 draw image :drawItemColor.9:iconX *tmp337 :drawItemColor.9:item 16 0
 
   983 print 40
   984 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   985 label *label156
-    * op add *tmp340 :drawBold.9:x 1
-    * set :drawText.29:x *tmp340
+  986 op add :drawText.29:x :drawBold.9:x 1
   987 set :drawText.29:y :drawBold.9:y
   988 set :drawText.29:alignment :drawBold.9:alignment
   989 print 40
 
  1020 set :drawItemColor.10:target :drawItem.10:target
  1021 op mul *tmp344 :drawItemColor.10:columns 176
  1022 op div *tmp345 *tmp344 2
-    * op sub *tmp346 214 *tmp345
-    * set :drawItemColor.10:barLength *tmp346
-    * op add *tmp347 48 :drawItemColor.10:barLength
-    * set :drawItemColor.10:textEnd *tmp347
+ 1023 op sub :drawItemColor.10:barLength 214 *tmp345
+ 1024 op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
  1025 op mul *tmp348 :drawItemColor.10:barLength :drawItemColor.10:current
  1026 op div *tmp349 *tmp348 :drawItemColor.10:target
-    * op min *tmp350 :drawItemColor.10:barLength *tmp349
-    * set :drawItemColor.10:length *tmp350
+ 1027 op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
  1028 op mul *tmp351 :drawItemColor.10:col 176
  1029 op div *tmp352 *tmp351 2
-    * op add *tmp353 11 *tmp352
-    * set :drawItemColor.10:iconX *tmp353
+ 1030 op add :drawItemColor.10:iconX 11 *tmp352
  1031 op mul *tmp354 :drawItemColor.10:col 176
  1032 op div *tmp355 *tmp354 2
-    * op add *tmp356 22 *tmp355
-    * set :drawItemColor.10:barX *tmp356
+ 1033 op add :drawItemColor.10:barX 22 *tmp355
  1034 op mul *tmp357 :drawItemColor.10:col 176
  1035 op div *tmp358 *tmp357 2
-    * op add *tmp359 :drawItemColor.10:textEnd *tmp358
-    * set :drawItemColor.10:textX *tmp359
+ 1036 op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp358
  1037 draw col %[white]
  1038 op add *tmp360 :drawItemColor.10:y 5
  1039 draw image :drawItemColor.10:iconX *tmp360 :drawItemColor.10:item 16 0
 
  1052 print 80
  1053 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1054 label *label163
-    * op add *tmp363 :drawBold.10:x 1
-    * set :drawText.31:x *tmp363
+ 1055 op add :drawText.31:x :drawBold.10:x 1
  1056 set :drawText.31:y :drawBold.10:y
  1057 set :drawText.31:alignment :drawBold.10:alignment
  1058 print 80
 
  1089 set :drawItemColor.11:target :drawItem.11:target
  1090 op mul *tmp367 :drawItemColor.11:columns 176
  1091 op div *tmp368 *tmp367 2
-    * op sub *tmp369 214 *tmp368
-    * set :drawItemColor.11:barLength *tmp369
-    * op add *tmp370 48 :drawItemColor.11:barLength
-    * set :drawItemColor.11:textEnd *tmp370
+ 1092 op sub :drawItemColor.11:barLength 214 *tmp368
+ 1093 op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
  1094 op mul *tmp371 :drawItemColor.11:barLength :drawItemColor.11:current
  1095 op div *tmp372 *tmp371 :drawItemColor.11:target
-    * op min *tmp373 :drawItemColor.11:barLength *tmp372
-    * set :drawItemColor.11:length *tmp373
+ 1096 op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
  1097 op mul *tmp374 :drawItemColor.11:col 176
  1098 op div *tmp375 *tmp374 2
-    * op add *tmp376 11 *tmp375
-    * set :drawItemColor.11:iconX *tmp376
+ 1099 op add :drawItemColor.11:iconX 11 *tmp375
  1100 op mul *tmp377 :drawItemColor.11:col 176
  1101 op div *tmp378 *tmp377 2
-    * op add *tmp379 22 *tmp378
-    * set :drawItemColor.11:barX *tmp379
+ 1102 op add :drawItemColor.11:barX 22 *tmp378
  1103 op mul *tmp380 :drawItemColor.11:col 176
  1104 op div *tmp381 *tmp380 2
-    * op add *tmp382 :drawItemColor.11:textEnd *tmp381
-    * set :drawItemColor.11:textX *tmp382
+ 1105 op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp381
  1106 draw col %[white]
  1107 op add *tmp383 :drawItemColor.11:y 5
  1108 draw image :drawItemColor.11:iconX *tmp383 :drawItemColor.11:item 16 0
 
  1121 print 130
  1122 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1123 label *label170
-    * op add *tmp386 :drawBold.11:x 1
-    * set :drawText.33:x *tmp386
+ 1124 op add :drawText.33:x :drawBold.11:x 1
  1125 set :drawText.33:y :drawBold.11:y
  1126 set :drawText.33:alignment :drawBold.11:alignment
  1127 print 130
 
  1161 set :drawItemColor.12:target :drawItem.12:target
  1162 op mul *tmp391 :drawItemColor.12:columns 176
  1163 op div *tmp392 *tmp391 2
-    * op sub *tmp393 214 *tmp392
-    * set :drawItemColor.12:barLength *tmp393
-    * op add *tmp394 48 :drawItemColor.12:barLength
-    * set :drawItemColor.12:textEnd *tmp394
+ 1164 op sub :drawItemColor.12:barLength 214 *tmp392
+ 1165 op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
  1166 op mul *tmp395 :drawItemColor.12:barLength :drawItemColor.12:current
  1167 op div *tmp396 *tmp395 :drawItemColor.12:target
-    * op min *tmp397 :drawItemColor.12:barLength *tmp396
-    * set :drawItemColor.12:length *tmp397
+ 1168 op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
  1169 op mul *tmp398 :drawItemColor.12:col 176
  1170 op div *tmp399 *tmp398 2
-    * op add *tmp400 11 *tmp399
-    * set :drawItemColor.12:iconX *tmp400
+ 1171 op add :drawItemColor.12:iconX 11 *tmp399
  1172 op mul *tmp401 :drawItemColor.12:col 176
  1173 op div *tmp402 *tmp401 2
-    * op add *tmp403 22 *tmp402
-    * set :drawItemColor.12:barX *tmp403
+ 1174 op add :drawItemColor.12:barX 22 *tmp402
  1175 op mul *tmp404 :drawItemColor.12:col 176
  1176 op div *tmp405 *tmp404 2
-    * op add *tmp406 :drawItemColor.12:textEnd *tmp405
-    * set :drawItemColor.12:textX *tmp406
+ 1177 op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp405
  1178 draw col %[white]
  1179 op add *tmp407 :drawItemColor.12:y 5
  1180 draw image :drawItemColor.12:iconX *tmp407 :drawItemColor.12:item 16 0
 
  1194 print "%"
  1195 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1196 label *label177
-    * op add *tmp410 :drawBold.12:x 1
-    * set :drawText.35:x *tmp410
+ 1197 op add :drawText.35:x :drawBold.12:x 1
  1198 set :drawText.35:y :drawBold.12:y
  1199 set :drawText.35:alignment :drawBold.12:alignment
  1200 print *tmp390
 
  1264 set :drawItemColor.13:target :drawItem.13:target
  1265 op mul *tmp417 :drawItemColor.13:columns 176
  1266 op div *tmp418 *tmp417 2
-    * op sub *tmp419 214 *tmp418
-    * set :drawItemColor.13:barLength *tmp419
-    * op add *tmp420 48 :drawItemColor.13:barLength
-    * set :drawItemColor.13:textEnd *tmp420
+ 1267 op sub :drawItemColor.13:barLength 214 *tmp418
+ 1268 op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
  1269 op mul *tmp421 :drawItemColor.13:barLength :drawItemColor.13:current
  1270 op div *tmp422 *tmp421 :drawItemColor.13:target
-    * op min *tmp423 :drawItemColor.13:barLength *tmp422
-    * set :drawItemColor.13:length *tmp423
+ 1271 op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
  1272 op mul *tmp424 :drawItemColor.13:col 176
  1273 op div *tmp425 *tmp424 2
-    * op add *tmp426 11 *tmp425
-    * set :drawItemColor.13:iconX *tmp426
+ 1274 op add :drawItemColor.13:iconX 11 *tmp425
  1275 op mul *tmp427 :drawItemColor.13:col 176
  1276 op div *tmp428 *tmp427 2
-    * op add *tmp429 22 *tmp428
-    * set :drawItemColor.13:barX *tmp429
+ 1277 op add :drawItemColor.13:barX 22 *tmp428
  1278 op mul *tmp430 :drawItemColor.13:col 176
  1279 op div *tmp431 *tmp430 2
-    * op add *tmp432 :drawItemColor.13:textEnd *tmp431
-    * set :drawItemColor.13:textX *tmp432
+ 1280 op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp431
  1281 draw col %[white]
  1282 op add *tmp433 :drawItemColor.13:y 5
  1283 draw image :drawItemColor.13:iconX *tmp433 :drawItemColor.13:item 16 0
 
  1293 set :drawText.38:x :drawBold.13:x
  1294 set :drawText.38:y :drawBold.13:y
  1295 set :drawText.38:alignment :drawBold.13:alignment
-    * set *tmp436 .transportTarget
-    * print *tmp436
+ 1296 print .transportTarget
  1297 draw print :drawText.38:x :drawText.38:y :drawText.38:alignment
  1298 label *label193
-    * op add *tmp437 :drawBold.13:x 1
-    * set :drawText.39:x *tmp437
+ 1299 op add :drawText.39:x :drawBold.13:x 1
  1300 set :drawText.39:y :drawBold.13:y
  1301 set :drawText.39:alignment :drawBold.13:alignment
-    * set *tmp438 .transportTarget
-    * print *tmp438
+ 1302 print .transportTarget
  1303 draw print :drawText.39:x :drawText.39:y :drawText.39:alignment
  1304 label *label194
  1305 label *label192
 
  1320 set :updateDisplay:y :drawUnit:y
  1321 jump *label188 always
  1322 label *label187
-    * sensor *tmp441 @unit @firstItem
-    * set :drawBuilder:unitItem *tmp441
+ 1323 sensor :drawBuilder:unitItem @unit @firstItem
  1324 sensor *tmp442 @unit @totalItems
  1325 op equal *tmp443 :drawBuilder:unitItem .transportItem
  1326 op mul *tmp444 *tmp442 *tmp443
 
  1343 set :drawItemColor.14:target :drawItem.14:target
  1344 op mul *tmp445 :drawItemColor.14:columns 176
  1345 op div *tmp446 *tmp445 2
-    * op sub *tmp447 214 *tmp446
-    * set :drawItemColor.14:barLength *tmp447
-    * op add *tmp448 48 :drawItemColor.14:barLength
-    * set :drawItemColor.14:textEnd *tmp448
+ 1346 op sub :drawItemColor.14:barLength 214 *tmp446
+ 1347 op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
  1348 op mul *tmp449 :drawItemColor.14:barLength :drawItemColor.14:current
  1349 op div *tmp450 *tmp449 :drawItemColor.14:target
-    * op min *tmp451 :drawItemColor.14:barLength *tmp450
-    * set :drawItemColor.14:length *tmp451
+ 1350 op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
  1351 op mul *tmp452 :drawItemColor.14:col 176
  1352 op div *tmp453 *tmp452 2
-    * op add *tmp454 11 *tmp453
-    * set :drawItemColor.14:iconX *tmp454
+ 1353 op add :drawItemColor.14:iconX 11 *tmp453
  1354 op mul *tmp455 :drawItemColor.14:col 176
  1355 op div *tmp456 *tmp455 2
-    * op add *tmp457 22 *tmp456
-    * set :drawItemColor.14:barX *tmp457
+ 1356 op add :drawItemColor.14:barX 22 *tmp456
  1357 op mul *tmp458 :drawItemColor.14:col 176
  1358 op div *tmp459 *tmp458 2
-    * op add *tmp460 :drawItemColor.14:textEnd *tmp459
-    * set :drawItemColor.14:textX *tmp460
+ 1359 op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp459
  1360 draw col %[white]
  1361 op add *tmp461 :drawItemColor.14:y 5
  1362 draw image :drawItemColor.14:iconX *tmp461 :drawItemColor.14:item 16 0
 
  1372 set :drawText.40:x :drawBold.14:x
  1373 set :drawText.40:y :drawBold.14:y
  1374 set :drawText.40:alignment :drawBold.14:alignment
-    * set *tmp464 .transportTarget
-    * print *tmp464
+ 1375 print .transportTarget
  1376 draw print :drawText.40:x :drawText.40:y :drawText.40:alignment
  1377 label *label201
-    * op add *tmp465 :drawBold.14:x 1
-    * set :drawText.41:x *tmp465
+ 1378 op add :drawText.41:x :drawBold.14:x 1
  1379 set :drawText.41:y :drawBold.14:y
  1380 set :drawText.41:alignment :drawBold.14:alignment
-    * set *tmp466 .transportTarget
-    * print *tmp466
+ 1381 print .transportTarget
  1382 draw print :drawText.41:x :drawText.41:y :drawText.41:alignment
  1383 label *label202
  1384 label *label200
 
  1430 op sub :drawTitleRow.6:y :drawTitleRow.6:y 15
  1431 label *label210
  1432 set :updateDisplay:y :drawTitleRow.6:y
-    * sensor *tmp473 AJTJK-battery1 @totalPower
-    * set :drawPower:power *tmp473
+ 1433 sensor :drawPower:power AJTJK-battery1 @totalPower
  1434 op mul *tmp474 :drawPower:power 100
  1435 op div *tmp475 *tmp474 4000
  1436 op floor *tmp476 *tmp475
 
  1444 set :drawItemColor.15:target 4000
  1445 op mul *tmp477 :drawItemColor.15:columns 176
  1446 op div *tmp478 *tmp477 2
-    * op sub *tmp479 214 *tmp478
-    * set :drawItemColor.15:barLength *tmp479
-    * op add *tmp480 48 :drawItemColor.15:barLength
-    * set :drawItemColor.15:textEnd *tmp480
+ 1447 op sub :drawItemColor.15:barLength 214 *tmp478
+ 1448 op add :drawItemColor.15:textEnd 48 :drawItemColor.15:barLength
  1449 op mul *tmp481 :drawItemColor.15:barLength :drawItemColor.15:current
  1450 op div *tmp482 *tmp481 :drawItemColor.15:target
-    * op min *tmp483 :drawItemColor.15:barLength *tmp482
-    * set :drawItemColor.15:length *tmp483
+ 1451 op min :drawItemColor.15:length :drawItemColor.15:barLength *tmp482
  1452 op mul *tmp484 :drawItemColor.15:col 176
  1453 op div *tmp485 *tmp484 2
-    * op add *tmp486 11 *tmp485
-    * set :drawItemColor.15:iconX *tmp486
+ 1454 op add :drawItemColor.15:iconX 11 *tmp485
  1455 op mul *tmp487 :drawItemColor.15:col 176
  1456 op div *tmp488 *tmp487 2
-    * op add *tmp489 22 *tmp488
-    * set :drawItemColor.15:barX *tmp489
+ 1457 op add :drawItemColor.15:barX 22 *tmp488
  1458 op mul *tmp490 :drawItemColor.15:col 176
  1459 op div *tmp491 *tmp490 2
-    * op add *tmp492 :drawItemColor.15:textEnd *tmp491
-    * set :drawItemColor.15:textX *tmp492
+ 1460 op add :drawItemColor.15:textX :drawItemColor.15:textEnd *tmp491
  1461 draw col %[white]
  1462 op add *tmp493 :drawItemColor.15:y 5
  1463 draw image :drawItemColor.15:iconX *tmp493 :drawItemColor.15:item 16 0
 
  1477 print "%"
  1478 draw print :drawText.44:x :drawText.44:y :drawText.44:alignment
  1479 label *label215
-    * op add *tmp496 :drawBold.15:x 1
-    * set :drawText.45:x *tmp496
+ 1480 op add :drawText.45:x :drawBold.15:x 1
  1481 set :drawText.45:y :drawBold.15:y
  1482 set :drawText.45:alignment :drawBold.15:alignment
  1483 print *tmp476
 
  1503 label *label20
  1504 op equal *tmp499 .page 1
  1505 jump *label219 equal *tmp499 false
-    * read *tmp501 bank2 510
-    * set :displayStorage:tail *tmp501
+ 1506 read :displayStorage:tail bank2 510
  1507 set :displayStorage:START 190
  1508 jump *label222 equal .pageSwitched false
-    * read *tmp503 bank2 511
-    * set .lastTail *tmp503
+ 1509 read .lastTail bank2 511
  1510 draw col %[gold]
  1511 set :drawBold.16:x 11
  1512 set :drawBold.16:y 206
 
  1517 print "Resources"
  1518 draw print :drawText.46:x :drawText.46:y :drawText.46:alignment
  1519 label *label225
-    * op add *tmp504 :drawBold.16:x 1
-    * set :drawText.47:x *tmp504
+ 1520 op add :drawText.47:x :drawBold.16:x 1
  1521 set :drawText.47:y :drawBold.16:y
  1522 set :drawText.47:alignment :drawBold.16:alignment
  1523 print "Resources"
 
  1525 label *label226
  1526 label *label224
  1527 draw col %[white]
-    * op sub *tmp505 :displayStorage:START 8
-    * set :displayStorage:y *tmp505
+ 1528 op sub :displayStorage:y :displayStorage:START 8
  1529 set :displayStorage:item @copper
  1530 setaddr *tmp506 *label230
  1531 jump *label227 always
 
  1580 jump *label241 always
  1581 label *label240
  1582 label *label241
-    * set *tmp509 .lastTail
-    * read *tmp510 bank2 *tmp509
-    * set :displayStorage:accumulator *tmp510
-    * op add *tmp511 25 .lastTail
-    * set :displayStorage:x *tmp511
-    * op sub *tmp512 :displayStorage:START 8
-    * set :displayStorage:y.1 *tmp512
+ 1583 read :displayStorage:accumulator bank2 .lastTail
+ 1584 op add :displayStorage:x 25 .lastTail
+ 1585 op sub :displayStorage:y.1 :displayStorage:START 8
  1586 set :displayStorage:i 0
  1587 label *label242
  1588 jump *label244 greaterThanEq :displayStorage:i 9
  1589 op and *tmp513 :displayStorage:accumulator 0b11111
-    * op sub *tmp514 *tmp513 8
-    * set :displayStorage:value *tmp514
+ 1590 op sub :displayStorage:value *tmp513 8
  1591 op greaterThanEq *tmp515 :displayStorage:value 0
  1592 jump *label245 equal *tmp515 false
  1593 set *tmp516 %[green]
 
  1625 print "Base map"
  1626 draw print :drawText.48:x :drawText.48:y :drawText.48:alignment
  1627 label *label254
-    * op add *tmp521 :drawBold.17:x 1
-    * set :drawText.49:x *tmp521
+ 1628 op add :drawText.49:x :drawBold.17:x 1
  1629 set :drawText.49:y :drawBold.17:y
  1630 set :drawText.49:alignment :drawBold.17:alignment
  1631 print "Base map"
 
  1811 op greaterThanEq *tmp530 :displayBaseMap:index 0
  1812 jump *label303 equal *tmp530 false
  1813 set .recentBuildIndex -1
-    * set *tmp532 :displayBaseMap:index
-    * readarr<regular> *tmp533 .BLOCKS[] *tmp532
-    * set :drawBlock:cfg *tmp533
+ 1814 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1815 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1816 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1817 label *label305
 
  1833 label *label249
  1834 jump *label248 always
  1835 label *label247
-    * op sub *tmp536 .page 3
-    * set :displayLog:page *tmp536
-    * read *tmp537 bank1 511
-    * set :displayLog:logPosition *tmp537
-    * op sub *tmp538 511 :displayLog:logPosition
-    * set :displayLog:records *tmp538
+ 1836 op sub :displayLog:page .page 3
+ 1837 read :displayLog:logPosition bank1 511
+ 1838 op sub :displayLog:records 511 :displayLog:logPosition
  1839 op sub *tmp539 :displayLog:records 1
  1840 op idiv *tmp540 *tmp539 39
  1841 op add *tmp541 *tmp540 1
-    * op max *tmp542 1 *tmp541
-    * set :displayLog:pages *tmp542
-    * op add *tmp543 :displayLog:pages 3
-    * set .numPages *tmp543
+ 1842 op max :displayLog:pages 1 *tmp541
+ 1843 op add .numPages :displayLog:pages 3
  1844 op mul *tmp544 39 :displayLog:page
-    * op sub *tmp545 511 *tmp544
-    * set :displayLog:start *tmp545
+ 1845 op sub :displayLog:start 511 *tmp544
  1846 op sub *tmp546 :displayLog:start 39
-    * op max *tmp547 :displayLog:logPosition *tmp546
-    * set :displayLog:stop *tmp547
+ 1847 op max :displayLog:stop :displayLog:logPosition *tmp546
  1848 jump *label309 equal .pageSwitched false
  1849 draw col %[gold]
  1850 set :drawBold.18:x 4
 
  1856 print "Build records"
  1857 draw print :drawText.50:x :drawText.50:y :drawText.50:alignment
  1858 label *label312
-    * op add *tmp549 :drawBold.18:x 1
-    * set :drawText.51:x *tmp549
+ 1859 op add :drawText.51:x :drawBold.18:x 1
  1860 set :drawText.51:y :drawBold.18:y
  1861 set :drawText.51:alignment :drawBold.18:alignment
  1862 print "Build records"
 
  1883 op sub :displayLog:position .lastRecord 1
  1884 label *label316
  1885 jump *label318 lessThan :displayLog:position *tmp551
-    * set *tmp552 :displayLog:position
-    * read *tmp553 bank1 *tmp552
-    * set :displayLog:record *tmp553
+ 1886 read :displayLog:record bank1 :displayLog:position
  1887 op sub *tmp554 :displayLog:start :displayLog:position
  1888 op sub *tmp555 *tmp554 1
  1889 set :displayRecord:record :displayLog:record
  1890 set :displayRecord:index *tmp555
-    * op idiv *tmp556 :displayRecord:index 13
-    * set :displayRecord:col *tmp556
-    * op mod *tmp557 :displayRecord:index 13
-    * set :displayRecord:row *tmp557
+ 1891 op idiv :displayRecord:col :displayRecord:index 13
+ 1892 op mod :displayRecord:row :displayRecord:index 13
  1893 op mul *tmp558 58 :displayRecord:col
-    * op add *tmp559 11 *tmp558
-    * set :displayRecord:x *tmp559
+ 1894 op add :displayRecord:x 11 *tmp558
  1895 op mul *tmp560 15 :displayRecord:row
-    * op sub *tmp561 189 *tmp560
-    * set :displayRecord:y *tmp561
-    * op mod *tmp562 :displayRecord:record 1000
-    * set :displayRecord:id *tmp562
+ 1896 op sub :displayRecord:y 189 *tmp560
+ 1897 op mod :displayRecord:id :displayRecord:record 1000
  1898 op greaterThan *tmp563 :displayRecord:id @blockCount
  1899 jump *label320 equal *tmp563 false
  1900 op sub *tmp565 :displayRecord:id @blockCount
-    * lookup unit *tmp566 *tmp565
-    * set *tmp564 *tmp566
+ 1901 lookup unit *tmp564 *tmp565
  1902 jump *label321 always
  1903 label *label320
-    * lookup block *tmp567 :displayRecord:id
-    * set *tmp564 *tmp567
+ 1904 lookup block *tmp564 :displayRecord:id
  1905 label *label321
  1906 set :displayRecord:icon *tmp564
  1907 op div *tmp568 :displayRecord:record 1000
  1908 op div *tmp569 *tmp568 120
-    * op floor *tmp570 *tmp569
-    * set :displayRecord:t *tmp570
-    * op idiv *tmp571 :displayRecord:t 60
-    * set :displayRecord:m *tmp571
-    * op mod *tmp572 :displayRecord:t 60
-    * set :displayRecord:s *tmp572
+ 1909 op floor :displayRecord:t *tmp569
+ 1910 op idiv :displayRecord:m :displayRecord:t 60
+ 1911 op mod :displayRecord:s :displayRecord:t 60
  1912 op lessThan *tmp573 :displayRecord:s 10
  1913 jump *label322 equal *tmp573 false
  1914 set *tmp574 "0"
 
  1941 op sub :displayLog:position :displayLog:position 1
  1942 jump *label316 always
  1943 label *label318
-    * op add *tmp580 :displayLog:stop 1
-    * set .lastRecord *tmp580
+ 1944 op add .lastRecord :displayLog:stop 1
  1945 drawflush display1
  1946 label *label308
  1947 label *label248
 
  1962 print "\n"
  1963 print "==================================[]"
  1964 print "\n"
-    * set *tmp583 .status1
-    * print *tmp583
+ 1965 print .status1
  1966 print "\n"
  1967 print .status2
  1968 print .item2
 
  1971 print .block2
  1972 print ")"
  1973 print "\n"
-    * set *tmp584 .status3
-    * print *tmp584
+ 1974 print .status3
  1975 print "\n"
  1976 printflush message1
  1977 label *label329
  1978 label *label328
-    * sensor *tmp585 switch1 @enabled
-    * set .pageSwitched *tmp585
+ 1979 sensor .pageSwitched switch1 @enabled
  1980 jump *label330 equal .pageSwitched false
  1981 control enabled switch1 false
  1982 op add *tmp588 .page 1
-    * op mod *tmp589 *tmp588 .numPages
-    * set .page *tmp589
+ 1983 op mod .page *tmp588 .numPages
  1984 drawflush null
  1985 draw reset
  1986 draw clear 0 0 32
 
  2005 draw scale 3.5 3.5
  2006 read *tmp0 processor1 "time"
  2007 op div *tmp592 *tmp0 120
-    * op floor *tmp593 *tmp592
-    * set :drawHeader:t *tmp593
-    * op idiv *tmp594 :drawHeader:t 60
-    * set :drawHeader:m *tmp594
-    * op mod *tmp595 :drawHeader:t 60
-    * set :drawHeader:s *tmp595
+ 2008 op floor :drawHeader:t *tmp592
+ 2009 op idiv :drawHeader:m :drawHeader:t 60
+ 2010 op mod :drawHeader:s :drawHeader:t 60
  2011 op lessThan *tmp596 :drawHeader:s 10
  2012 jump *label335 equal *tmp596 false
  2013 set *tmp597 "0"
 
  2028 print :drawHeader:s
  2029 draw print :drawText.54:x :drawText.54:y :drawText.54:alignment
  2030 label *label338
-    * op add *tmp598 :drawBold.19:x 1
-    * set :drawText.55:x *tmp598
+ 2031 op add :drawText.55:x :drawBold.19:x 1
  2032 set :drawText.55:y :drawBold.19:y
  2033 set :drawText.55:alignment :drawBold.19:alignment
  2034 print :drawHeader:m
 
  2052 print "Goal"
  2053 draw print :drawText.56:x :drawText.56:y :drawText.56:alignment
  2054 label *label341
-    * op add *tmp599 :drawBold.20:x 1
-    * set :drawText.57:x *tmp599
+ 2055 op add :drawText.57:x :drawBold.20:x 1
  2056 set :drawText.57:y :drawBold.20:y
  2057 set :drawText.57:alignment :drawBold.20:alignment
  2058 print "Goal"
 
  2065 jump *label344 always
  2066 label *label343
  2067 op add *tmp601 .nextBlock .nextFactory
-    * op add *tmp602 *tmp601 .nextAddReco
-    * set :drawHeader:count *tmp602
+ 2068 op add :drawHeader:count *tmp601 .nextAddReco
  2069 op equal *tmp603 :drawHeader:count 3
  2070 jump *label345 equal *tmp603 false
  2071 draw image 22 244 .nextBlock 18 0
 
  2133 set :drawHeader:tt @second
  2134 read *tmp0 processor1 "time"
  2135 op div *tmp615 *tmp0 120
-    * op floor *tmp616 *tmp615
-    * set :drawHeader:t.1 *tmp616
-    * op idiv *tmp617 :drawHeader:t.1 60
-    * set :drawHeader:m.1 *tmp617
-    * op mod *tmp618 :drawHeader:t.1 60
-    * set :drawHeader:s.1 *tmp618
+ 2136 op floor :drawHeader:t.1 *tmp615
+ 2137 op idiv :drawHeader:m.1 :drawHeader:t.1 60
+ 2138 op mod :drawHeader:s.1 :drawHeader:t.1 60
  2139 op lessThan *tmp619 :drawHeader:s.1 10
  2140 jump *label367 equal *tmp619 false
  2141 set *tmp620 "0"
 
  2149 print :drawHeader:s.1
  2150 op mul *tmp621 10 :drawHeader:t.1
  2151 op div *tmp622 *tmp621 :drawHeader:tt
-    * op round *tmp623 *tmp622
-    * set :drawHeader:ratio *tmp623
+ 2152 op round :drawHeader:ratio *tmp622
  2153 op idiv *tmp624 :drawHeader:ratio 10
  2154 op mod *tmp625 :drawHeader:ratio 10
  2155 print " (x"
 
  2164 label *label369
  2165 op notEqual *tmp626 A¨SSJi-container31 null
  2166 jump *label370 equal *tmp626 false
-    * sensor *tmp628 A¨SSJi-container31 @scrap
-    * set :drawHeader:count.1 *tmp628
+ 2167 sensor :drawHeader:count.1 A¨SSJi-container31 @scrap
  2168 set :drawHeader:x.1 174
  2169 op log10 *tmp629 :drawHeader:count.1
-    * op floor *tmp630 *tmp629
-    * set :drawHeader:len *tmp630
+ 2170 op floor :drawHeader:len *tmp629
  2171 set :drawText.59:x :drawHeader:x.1
  2172 set :drawText.59:y 255
  2173 set :drawText.59:alignment @topRight
 
  2179 op mul *tmp632 7 :drawHeader:len
  2180 op sub *tmp633 *tmp631 *tmp632
  2181 draw image *tmp633 246 @scrap 12 0
-    * sensor *tmp634 A¨SSJi-container31 @sand
-    * set :drawHeader:count.1 *tmp634
+ 2182 sensor :drawHeader:count.1 A¨SSJi-container31 @sand
  2183 set :drawHeader:x.1 124
  2184 op log10 *tmp635 :drawHeader:count.1
-    * op floor *tmp636 *tmp635
-    * set :drawHeader:len *tmp636
+ 2185 op floor :drawHeader:len *tmp635
  2186 set :drawText.60:x :drawHeader:x.1
  2187 set :drawText.60:y 255
  2188 set :drawText.60:alignment @topRight
 
  2198 label *label370
  2199 jump *label374 equal .titaniumDrill false
  2200 sensor *tmp641 .titaniumDrill @titanium
-    * op max *tmp642 .titaniumDrillCount *tmp641
-    * set :drawHeader:count.2 *tmp642
+ 2201 op max :drawHeader:count.2 .titaniumDrillCount *tmp641
  2202 set :drawHeader:x.2 174
  2203 op log10 *tmp643 :drawHeader:count.2
-    * op floor *tmp644 *tmp643
-    * set :drawHeader:len.1 *tmp644
+ 2204 op floor :drawHeader:len.1 *tmp643
  2205 set :drawText.61:x :drawHeader:x.2
  2206 set :drawText.61:y 255
  2207 set :drawText.61:alignment @topRight
 
  2217 label *label374
  2218 label *label375
  2219 jump *label377 equal .thoriumContainer false
-    * sensor *tmp649 .thoriumContainer @thorium
-    * set :drawHeader:count.3 *tmp649
+ 2220 sensor :drawHeader:count.3 .thoriumContainer @thorium
  2221 set :drawHeader:x.3 124
  2222 op log10 *tmp650 :drawHeader:count.3
-    * op floor *tmp651 *tmp650
-    * set :drawHeader:len.2 *tmp651
+ 2223 op floor :drawHeader:len.2 *tmp650
  2224 set :drawText.62:x :drawHeader:x.3
  2225 set :drawText.62:y 255
  2226 set :drawText.62:alignment @topRight
 
  2316 op add :unpackCfg:index :unpackCfg:index 1
  2317 read *tmp669 :unpackCfg:cfg *tmp668
  2318 op sub *tmp670 *tmp669 74
-    * lookup block *tmp671 *tmp670
-    * set :unpackCfg:type *tmp671
+ 2319 lookup block :unpackCfg:type *tmp670
  2320 set *tmp672 :unpackCfg:index
  2321 op add :unpackCfg:index :unpackCfg:index 1
  2322 read *tmp673 :unpackCfg:cfg *tmp672
  2323 op sub *tmp674 *tmp673 74
-    * op div *tmp675 *tmp674 2
-    * set :unpackCfg:x *tmp675
+ 2324 op div :unpackCfg:x *tmp674 2
  2325 set *tmp676 :unpackCfg:index
  2326 op add :unpackCfg:index :unpackCfg:index 1
  2327 read *tmp677 :unpackCfg:cfg *tmp676
  2328 op sub *tmp678 *tmp677 74
-    * op div *tmp679 *tmp678 2
-    * set :unpackCfg:y *tmp679
+ 2329 op div :unpackCfg:y *tmp678 2
  2330 set *tmp680 :unpackCfg:index
  2331 op add :unpackCfg:index :unpackCfg:index 1
  2332 read *tmp681 :unpackCfg:cfg *tmp680
-    * op sub *tmp682 *tmp681 74
-    * set :unpackCfg:rotation *tmp682
+ 2333 op sub :unpackCfg:rotation *tmp681 74
  2334 set *tmp683 :unpackCfg:index
  2335 op add :unpackCfg:index :unpackCfg:index 1
  2336 read *tmp684 :unpackCfg:cfg *tmp683
-    * op sub *tmp685 *tmp684 74
-    * set :unpackCfg:ind *tmp685
-    * sensor *tmp693 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp693
+ 2337 op sub :unpackCfg:ind *tmp684 74
+ 2338 sensor :unpackCfg:size :unpackCfg:type @size
  2339 label *label395
  2340 set :unpackCfg2:type :unpackCfg:type
  2341 set :unpackCfg2:x :unpackCfg:x

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    22 printflush null
    23 drawflush null
    24 label *label15
-    * jump *label17 equal true false
    25 sensor *tmp45 processor2 @bufferSize
    26 op lessThan *tmp46 *tmp45 200
    27 jump *label18 equal *tmp46 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-59 instructions):
 
    16 ubind @poly
    17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    18 label *label13
-    * op equal *tmp44 .core null
-    * jump *label12 notEqual *tmp44 false
+   19 jump *label12 equal .core null
    20 label *label14
    21 printflush null
    22 drawflush null
    23 label *label15
    24 sensor *tmp45 processor2 @bufferSize
-    * op lessThan *tmp46 *tmp45 200
-    * jump *label18 equal *tmp46 false
-    * op equal *tmp48 .page 0
-    * jump *label20 equal *tmp48 false
-    * op greaterThan *tmp50 .megas 0
-    * jump *label22 equal *tmp50 false
-    * op lessThan *tmp52 .animation 0
-    * jump *label25 equal *tmp52 false
+   25 jump *label18 greaterThanEq *tmp45 200
+   26 jump *label20 notEqual .page 0
+   27 jump *label22 lessThanEq .megas 0
+   28 jump *label25 greaterThanEq .animation 0
    29 draw color 0 0 32 80
    30 draw rect 0 0 176 176
    31 jump *label26 always
 
    65 label *label29
    66 set :animate:size *tmp67
    67 draw image :animate:x :animate:y @mega :animate:size 0
-    * op equal *tmp72 :animate:ratio 1
-    * jump *label30 equal *tmp72 false
+   68 jump *label30 notEqual :animate:ratio 1
    69 setaddr :drawHeader*retaddr *label32 (h:*label32)
    70 call *label4 *invalid :drawHeader*retval (m:*label32) (h:*label32)
    71 label *label32
 
   164 label *label45
   165 label *label43
   166 op add :drawItemColor:col :drawItemColor:col 1
-    * op greaterThanEq *tmp101 :drawItemColor:col :drawItemColor:columns
-    * jump *label46 equal *tmp101 false
+  167 jump *label46 lessThan :drawItemColor:col :drawItemColor:columns
   168 set :drawItemColor:col 0
   169 op sub :drawItemColor:y :drawItemColor:y 15
   170 jump *label47 always
 
   178 op sub :updateDisplay:y :updateDisplay:y 35
   179 jump *label37 always
   180 label *label36
-    * op notEqual *tmp103 .nextBlock null
-    * jump *label48 equal *tmp103 false
+  181 jump *label48 equal .nextBlock null
   182 set :drawMaterials:count .totalTargets
   183 set :drawTitleRow.1:y :updateDisplay:y
   184 set :drawTitleRow.1:alignment @bottomLeft
 
   233 set :drawMaterials:target .targetThorium
   234 setaddr *tmp107 *label64
   235 label *label55
-    * op greaterThan *tmp108 :drawMaterials:target 0
-    * jump *label65 equal *tmp108 false
+  236 jump *label65 lessThanEq :drawMaterials:target 0
   237 sensor *tmp110 .core :drawMaterials:item
   238 set :drawItem.1:col :drawMaterials:col
   239 set :drawItem.1:y :updateDisplay:y
 
   291 label *label71
   292 label *label69
   293 op add :drawItemColor.1:col :drawItemColor.1:col 1
-    * op greaterThanEq *tmp131 :drawItemColor.1:col :drawItemColor.1:columns
-    * jump *label72 equal *tmp131 false
+  294 jump *label72 lessThan :drawItemColor.1:col :drawItemColor.1:columns
   295 set :drawItemColor.1:col 0
   296 op sub :drawItemColor.1:y :drawItemColor.1:y 15
   297 jump *label73 always
 
   304 set :drawMaterials:col :drawItem.1:col
   305 set :updateDisplay:y :drawItem.1:y
   306 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp133 :drawMaterials:count 0
-    * jump *label74 equal *tmp133 false
+  307 jump *label74 greaterThan :drawMaterials:count 0
   308 jump *label57 always
   309 jump *label75 always
   310 label *label74
 
   319 jump *label54 always
   320 label *label53
   321 label *label54
-    * op lessThan *tmp135 .totalTargets 3
-    * jump *label76 equal *tmp135 false
+  322 jump *label76 greaterThanEq .totalTargets 3
   323 op sub *tmp137 3 .totalTargets
   324 op mul *tmp138 *tmp137 15
   325 op sub :updateDisplay:y :updateDisplay:y *tmp138
 
   332 label *label49
   333 label *label37
   334 label *label35
-    * op equal *tmp139 .nextFactory null
-    * jump *label79 equal *tmp139 false
+  335 jump *label79 notEqual .nextFactory null
   336 jump *label78 always
   337 jump *label80 always
   338 label *label79
 
   356 label *label81
   357 set :updateDisplay:y :drawTitleRow.2:y
   358 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
-    * op equal *tmp142 :drawAirFactory:progress 0
-    * jump *label84 equal *tmp142 false
-    * op equal *tmp144 .nextFactory @flare
-    * jump *label86 equal *tmp144 false
+  359 jump *label84 notEqual :drawAirFactory:progress 0
+  360 jump *label86 notEqual .nextFactory @flare
   361 sensor *tmp146 A¾BFLW-air-factory13 @silicon
   362 set :drawItem.2:col 0
   363 set :drawItem.2:y :updateDisplay:y
 
   415 label *label92
   416 label *label90
   417 op add :drawItemColor.2:col :drawItemColor.2:col 1
-    * op greaterThanEq *tmp167 :drawItemColor.2:col :drawItemColor.2:columns
-    * jump *label93 equal *tmp167 false
+  418 jump *label93 lessThan :drawItemColor.2:col :drawItemColor.2:columns
   419 set :drawItemColor.2:col 0
   420 op sub :drawItemColor.2:y :drawItemColor.2:y 15
   421 jump *label94 always
 
   486 label *label99
   487 label *label97
   488 op add :drawItemColor.3:col :drawItemColor.3:col 1
-    * op greaterThanEq *tmp190 :drawItemColor.3:col :drawItemColor.3:columns
-    * jump *label100 equal *tmp190 false
+  489 jump *label100 lessThan :drawItemColor.3:col :drawItemColor.3:columns
   490 set :drawItemColor.3:col 0
   491 op sub :drawItemColor.3:y :drawItemColor.3:y 15
   492 jump *label101 always
 
   554 label *label106
   555 label *label104
   556 op add :drawItemColor.4:col :drawItemColor.4:col 1
-    * op greaterThanEq *tmp213 :drawItemColor.4:col :drawItemColor.4:columns
-    * jump *label107 equal *tmp213 false
+  557 jump *label107 lessThan :drawItemColor.4:col :drawItemColor.4:columns
   558 set :drawItemColor.4:col 0
   559 op sub :drawItemColor.4:y :drawItemColor.4:y 15
   560 jump *label108 always
 
   628 label *label113
   629 label *label111
   630 op add :drawItemColor.5:col :drawItemColor.5:col 1
-    * op greaterThanEq *tmp237 :drawItemColor.5:col :drawItemColor.5:columns
-    * jump *label114 equal *tmp237 false
+  631 jump *label114 lessThan :drawItemColor.5:col :drawItemColor.5:columns
   632 set :drawItemColor.5:col 0
   633 op sub :drawItemColor.5:y :drawItemColor.5:y 15
   634 jump *label115 always
 
   643 label *label85
   644 op sub :updateDisplay:y :updateDisplay:y 5
   645 label *label78
-    * op equal *tmp239 .nextAddReco null
-    * jump *label117 equal *tmp239 false
+  646 jump *label117 notEqual .nextAddReco null
   647 jump *label116 always
   648 jump *label118 always
   649 label *label117
 
   667 label *label119
   668 set :updateDisplay:y :drawTitleRow.3:y
   669 sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 @progress
-    * op equal *tmp242 :drawAddReco:progress 0
-    * jump *label122 equal *tmp242 false
+  670 jump *label122 notEqual :drawAddReco:progress 0
   671 sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite
   672 set :drawItem.6:col 0
   673 set :drawItem.6:y :updateDisplay:y
 
   725 label *label128
   726 label *label126
   727 op add :drawItemColor.6:col :drawItemColor.6:col 1
-    * op greaterThanEq *tmp265 :drawItemColor.6:col :drawItemColor.6:columns
-    * jump *label129 equal *tmp265 false
+  728 jump *label129 lessThan :drawItemColor.6:col :drawItemColor.6:columns
   729 set :drawItemColor.6:col 0
   730 op sub :drawItemColor.6:y :drawItemColor.6:y 15
   731 jump *label130 always
 
   793 label *label135
   794 label *label133
   795 op add :drawItemColor.7:col :drawItemColor.7:col 1
-    * op greaterThanEq *tmp288 :drawItemColor.7:col :drawItemColor.7:columns
-    * jump *label136 equal *tmp288 false
+  796 jump *label136 lessThan :drawItemColor.7:col :drawItemColor.7:columns
   797 set :drawItemColor.7:col 0
   798 op sub :drawItemColor.7:y :drawItemColor.7:y 15
   799 jump *label137 always
 
   866 label *label142
   867 label *label140
   868 op add :drawItemColor.8:col :drawItemColor.8:col 1
-    * op greaterThanEq *tmp312 :drawItemColor.8:col :drawItemColor.8:columns
-    * jump *label143 equal *tmp312 false
+  869 jump *label143 lessThan :drawItemColor.8:col :drawItemColor.8:columns
   870 set :drawItemColor.8:col 0
   871 op sub :drawItemColor.8:y :drawItemColor.8:y 15
   872 jump *label144 always
 
   881 label *label123
   882 op sub :updateDisplay:y :updateDisplay:y 5
   883 label *label116
-    * op equal *tmp314 .nextMultiReco null
-    * jump *label146 equal *tmp314 false
+  884 jump *label146 notEqual .nextMultiReco null
   885 jump *label145 always
   886 jump *label147 always
   887 label *label146
 
   906 label *label148
   907 set :updateDisplay:y :drawTitleRow.4:y
   908 sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconstructor26 @progress
-    * op equal *tmp318 :drawMultiReco:progress 0
-    * jump *label151 equal *tmp318 false
+  909 jump *label151 notEqual :drawMultiReco:progress 0
   910 sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metaglass
   911 set :drawItem.9:col 0
   912 set :drawItem.9:y :updateDisplay:y
 
   964 label *label157
   965 label *label155
   966 op add :drawItemColor.9:col :drawItemColor.9:col 1
-    * op greaterThanEq *tmp341 :drawItemColor.9:col :drawItemColor.9:columns
-    * jump *label158 equal *tmp341 false
+  967 jump *label158 lessThan :drawItemColor.9:col :drawItemColor.9:columns
   968 set :drawItemColor.9:col 0
   969 op sub :drawItemColor.9:y :drawItemColor.9:y 15
   970 jump *label159 always
 
  1032 label *label164
  1033 label *label162
  1034 op add :drawItemColor.10:col :drawItemColor.10:col 1
-    * op greaterThanEq *tmp364 :drawItemColor.10:col :drawItemColor.10:columns
-    * jump *label165 equal *tmp364 false
+ 1035 jump *label165 lessThan :drawItemColor.10:col :drawItemColor.10:columns
  1036 set :drawItemColor.10:col 0
  1037 op sub :drawItemColor.10:y :drawItemColor.10:y 15
  1038 jump *label166 always
 
  1100 label *label171
  1101 label *label169
  1102 op add :drawItemColor.11:col :drawItemColor.11:col 1
-    * op greaterThanEq *tmp387 :drawItemColor.11:col :drawItemColor.11:columns
-    * jump *label172 equal *tmp387 false
+ 1103 jump *label172 lessThan :drawItemColor.11:col :drawItemColor.11:columns
  1104 set :drawItemColor.11:col 0
  1105 op sub :drawItemColor.11:y :drawItemColor.11:y 15
  1106 jump *label173 always
 
  1173 label *label178
  1174 label *label176
  1175 op add :drawItemColor.12:col :drawItemColor.12:col 1
-    * op greaterThanEq *tmp411 :drawItemColor.12:col :drawItemColor.12:columns
-    * jump *label179 equal *tmp411 false
+ 1176 jump *label179 lessThan :drawItemColor.12:col :drawItemColor.12:columns
  1177 set :drawItemColor.12:col 0
  1178 op sub :drawItemColor.12:y :drawItemColor.12:y 15
  1179 jump *label180 always
 
  1212 op sub :drawTitleRow.5:y :drawTitleRow.5:y 15
  1213 label *label184
  1214 set :updateDisplay:y :drawTitleRow.5:y
-    * op equal *tmp415 .transportItem null
-    * jump *label187 equal *tmp415 false
+ 1215 jump *label187 notEqual .transportItem null
  1216 set :drawUnit:item @poly
  1217 set :drawUnit:items 0
  1218 set :drawUnit:y :updateDisplay:y
 
  1272 label *label194
  1273 label *label192
  1274 op add :drawItemColor.13:col :drawItemColor.13:col 1
-    * op greaterThanEq *tmp439 :drawItemColor.13:col :drawItemColor.13:columns
-    * jump *label195 equal *tmp439 false
+ 1275 jump *label195 lessThan :drawItemColor.13:col :drawItemColor.13:columns
  1276 set :drawItemColor.13:col 0
  1277 op sub :drawItemColor.13:y :drawItemColor.13:y 15
  1278 jump *label196 always
 
  1350 label *label202
  1351 label *label200
  1352 op add :drawItemColor.14:col :drawItemColor.14:col 1
-    * op greaterThanEq *tmp467 :drawItemColor.14:col :drawItemColor.14:columns
-    * jump *label203 equal *tmp467 false
+ 1353 jump *label203 lessThan :drawItemColor.14:col :drawItemColor.14:columns
  1354 set :drawItemColor.14:col 0
  1355 op sub :drawItemColor.14:y :drawItemColor.14:y 15
  1356 jump *label204 always
 
  1365 set :updateDisplay:y :drawUnit.1:y
  1366 label *label188
  1367 label *label181
-    * op lessThan *tmp469 :updateDisplay:y 20
-    * jump *label206 equal *tmp469 false
+ 1368 jump *label206 greaterThanEq :updateDisplay:y 20
  1369 jump *label205 always
  1370 jump *label207 always
  1371 label *label206
  1372 label *label207
-    * op equal *tmp471 AJTJK-battery1 null
-    * jump *label208 equal *tmp471 false
+ 1373 jump *label208 notEqual AJTJK-battery1 null
  1374 jump *label205 always
  1375 jump *label209 always
  1376 label *label208
 
  1450 label *label216
  1451 label *label214
  1452 op add :drawItemColor.15:col :drawItemColor.15:col 1
-    * op greaterThanEq *tmp497 :drawItemColor.15:col :drawItemColor.15:columns
-    * jump *label217 equal *tmp497 false
+ 1453 jump *label217 lessThan :drawItemColor.15:col :drawItemColor.15:columns
  1454 set :drawItemColor.15:col 0
  1455 op sub :drawItemColor.15:y :drawItemColor.15:y 15
  1456 jump *label218 always
 
  1464 label *label23
  1465 jump *label21 always
  1466 label *label20
-    * op equal *tmp499 .page 1
-    * jump *label219 equal *tmp499 false
+ 1467 jump *label219 notEqual .page 1
  1468 read :displayStorage:tail bank2 510
  1469 set :displayStorage:START 190
  1470 jump *label222 equal .pageSwitched false
 
  1536 call *label4 *invalid :drawHeader*retval (m:*label239) (h:*label239)
  1537 label *label239
  1538 drawflush display1
-    * op greaterThan *tmp507 .lastTail :displayStorage:tail
-    * jump *label240 equal *tmp507 false
+ 1539 jump *label240 lessThanEq .lastTail :displayStorage:tail
  1540 jump *label221 always
  1541 jump *label241 always
  1542 label *label240
 
  1549 jump *label244 greaterThanEq :displayStorage:i 9
  1550 op and *tmp513 :displayStorage:accumulator 0b11111
  1551 op sub :displayStorage:value *tmp513 8
-    * op greaterThanEq *tmp515 :displayStorage:value 0
-    * jump *label245 equal *tmp515 false
+ 1552 jump *label245 lessThan :displayStorage:value 0
  1553 set *tmp516 %[green]
  1554 jump *label246 always
  1555 label *label245
 
  1568 label *label221
  1569 jump *label220 always
  1570 label *label219
-    * op equal *tmp518 .page 2
-    * jump *label247 equal *tmp518 false
+ 1571 jump *label247 notEqual .page 2
  1572 setaddr :drawHeader*retaddr *label250 (h:*label250)
  1573 call *label4 *invalid :drawHeader*retval (m:*label250) (h:*label250)
  1574 label *label250
 
  1741 set :displayBaseMap:cfg "AXTLJn-pulverizer36"
  1742 setaddr *tmp522 *label294
  1743 label *label257
-    * op equal *tmp523 .scrap false
-    * jump *label295 equal *tmp523 false
-    * op equal *tmp525 :displayBaseMap:cfg "AXPRJe-pulverizer27"
-    * jump *label297 equal *tmp525 false
+ 1744 jump *label295 notEqual .scrap false
+ 1745 jump *label297 notEqual :displayBaseMap:cfg "AXPRJe-pulverizer27"
  1746 jump *label259 always
  1747 jump *label298 always
  1748 label *label297
 
  1750 jump *label296 always
  1751 label *label295
  1752 label *label296
-    * op equal *tmp527 :displayBaseMap:counter :displayBaseMap:limit
-    * jump *label299 equal *tmp527 false
+ 1753 jump *label299 notEqual :displayBaseMap:counter :displayBaseMap:limit
  1754 setaddr :drawHeader*retaddr *label301 (h:*label301)
  1755 call *label4 *invalid :drawHeader*retval (m:*label301) (h:*label301)
  1756 label *label301
 
  1764 call *label6 *invalid :drawBlock*retval (m:*label302) (h:*label302)
  1765 label *label302
  1766 set :displayBaseMap:index .recentBuildIndex
-    * op greaterThanEq *tmp530 :displayBaseMap:index 0
-    * jump *label303 equal *tmp530 false
+ 1767 jump *label303 lessThan :displayBaseMap:index 0
  1768 set .recentBuildIndex -1
  1769 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1770 setaddr :drawBlock*retaddr *label305 (h:*label305)
 
  1850 op mul *tmp560 15 :displayRecord:row
  1851 op sub :displayRecord:y 189 *tmp560
  1852 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp563 :displayRecord:id @blockCount
-    * jump *label320 equal *tmp563 false
+ 1853 jump *label320 lessThanEq :displayRecord:id @blockCount
  1854 op sub *tmp565 :displayRecord:id @blockCount
  1855 lookup unit *tmp564 *tmp565
  1856 jump *label321 always
 
  1863 op floor :displayRecord:t *tmp569
  1864 op idiv :displayRecord:m :displayRecord:t 60
  1865 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp573 :displayRecord:s 10
-    * jump *label322 equal *tmp573 false
+ 1866 jump *label322 greaterThanEq :displayRecord:s 10
  1867 set *tmp574 "0"
  1868 jump *label323 always
  1869 label *label322
 
  1903 jump *label19 always
  1904 label *label18
  1905 label *label19
-    * op greaterThan *tmp581 .megas 0
-    * jump *label327 equal *tmp581 false
+ 1906 jump *label327 lessThanEq .megas 0
  1907 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1908 print "\n"
  1909 printflush message1
 
  1951 draw reset
  1952 draw color 0 0 32 255
  1953 draw rect 0 217 200 300
-    * op greaterThan *tmp590 .megas 0
-    * jump *label333 equal *tmp590 false
+ 1954 jump *label333 lessThanEq .megas 0
  1955 draw col %[gold]
  1956 draw scale 3.5 3.5
  1957 read *tmp0 processor1 "time"
 
  1959 op floor :drawHeader:t *tmp592
  1960 op idiv :drawHeader:m :drawHeader:t 60
  1961 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp596 :drawHeader:s 10
-    * jump *label335 equal *tmp596 false
+ 1962 jump *label335 greaterThanEq :drawHeader:s 10
  1963 set *tmp597 "0"
  1964 jump *label336 always
  1965 label *label335
 
  2016 label *label343
  2017 op add *tmp601 .nextBlock .nextFactory
  2018 op add :drawHeader:count *tmp601 .nextAddReco
-    * op equal *tmp603 :drawHeader:count 3
-    * jump *label345 equal *tmp603 false
+ 2019 jump *label345 notEqual :drawHeader:count 3
  2020 draw image 22 244 .nextBlock 18 0
  2021 draw image 42 244 .nextFactory 18 0
  2022 draw image 62 244 .nextAddReco 18 0
  2023 jump *label346 always
  2024 label *label345
-    * op equal *tmp605 :drawHeader:count 2
-    * jump *label347 equal *tmp605 false
+ 2025 jump *label347 notEqual :drawHeader:count 2
  2026 set :drawHeader:x 27
  2027 set :drawHeader:goal .nextBlock
  2028 setaddr *tmp607 *label352
 
  2035 set :drawHeader:goal .nextAddReco
  2036 setaddr *tmp607 *label354
  2037 label *label349
-    * op notEqual *tmp608 :drawHeader:goal null
-    * jump *label355 equal *tmp608 false
+ 2038 jump *label355 equal :drawHeader:goal null
  2039 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2040 op add :drawHeader:x :drawHeader:x 30
  2041 jump *label356 always
 
  2047 label *label351
  2048 jump *label348 always
  2049 label *label347
-    * op equal *tmp610 :drawHeader:count 1
-    * jump *label357 equal *tmp610 false
+ 2050 jump *label357 notEqual :drawHeader:count 1
  2051 set :drawHeader:goal.1 .nextBlock
  2052 setaddr *tmp612 *label362
  2053 jump *label359 always
 
  2059 set :drawHeader:goal.1 .nextAddReco
  2060 setaddr *tmp612 *label364
  2061 label *label359
-    * op notEqual *tmp613 :drawHeader:goal.1 null
-    * jump *label365 equal *tmp613 false
+ 2062 jump *label365 equal :drawHeader:goal.1 null
  2063 draw image 42 237 :drawHeader:goal.1 32 0
  2064 jump *label361 always
  2065 jump *label366 always
 
  2081 op floor :drawHeader:t.1 *tmp615
  2082 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  2083 op mod :drawHeader:s.1 :drawHeader:t.1 60
-    * op lessThan *tmp619 :drawHeader:s.1 10
-    * jump *label367 equal *tmp619 false
+ 2084 jump *label367 greaterThanEq :drawHeader:s.1 10
  2085 set *tmp620 "0"
  2086 jump *label368 always
  2087 label *label367
 
  2106 print ")"
  2107 draw print :drawText.58:x :drawText.58:y :drawText.58:alignment
  2108 label *label369
-    * op notEqual *tmp626 A¨SSJi-container31 null
-    * jump *label370 equal *tmp626 false
+ 2109 jump *label370 equal A¨SSJi-container31 null
  2110 sensor :drawHeader:count.1 A¨SSJi-container31 @scrap
  2111 set :drawHeader:x.1 174
  2112 op log10 *tmp629 :drawHeader:count.1
 
  2183 draw col %[white]
  2184 set :drawUnitCount:type @poly
  2185 set :drawUnitCount:count .polys
-    * op greaterThan *tmp655 :drawUnitCount:count 0
-    * jump *label381 equal *tmp655 false
+ 2186 jump *label381 lessThanEq :drawUnitCount:count 0
  2187 op sub *tmp657 :drawHeader:x.4 20
  2188 draw image *tmp657 227 :drawUnitCount:type 12 0
  2189 set :drawText.63:x :drawHeader:x.4
 
  2200 label *label380
  2201 set :drawUnitCount.1:type @mono
  2202 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp658 :drawUnitCount.1:count 0
-    * jump *label385 equal *tmp658 false
+ 2203 jump *label385 lessThanEq :drawUnitCount.1:count 0
  2204 op sub *tmp660 :drawHeader:x.4 20
  2205 draw image *tmp660 227 :drawUnitCount.1:type 12 0
  2206 set :drawText.64:x :drawHeader:x.4
 
  2217 label *label384
  2218 set :drawUnitCount.2:type @flare
  2219 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp661 :drawUnitCount.2:count 0
-    * jump *label389 equal *tmp661 false
+ 2220 jump *label389 lessThanEq :drawUnitCount.2:count 0
  2221 op sub *tmp663 :drawHeader:x.4 20
  2222 draw image *tmp663 227 :drawUnitCount.2:type 12 0
  2223 set :drawText.65:x :drawHeader:x.4

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-48 instructions):
 
    69 setaddr :drawHeader*retaddr *label32 (h:*label32)
    70 call *label4 *invalid :drawHeader*retval (m:*label32) (h:*label32)
    71 label *label32
-    * jump *label31 always
    72 label *label30
    73 label *label31
    74 drawflush display1
 
   166 jump *label46 lessThan :drawItemColor:col :drawItemColor:columns
   167 set :drawItemColor:col 0
   168 op sub :drawItemColor:y :drawItemColor:y 15
-    * jump *label47 always
   169 label *label46
   170 label *label47
   171 label *label42
 
   292 jump *label72 lessThan :drawItemColor.1:col :drawItemColor.1:columns
   293 set :drawItemColor.1:col 0
   294 op sub :drawItemColor.1:y :drawItemColor.1:y 15
-    * jump *label73 always
   295 label *label72
   296 label *label73
   297 label *label68
 
   303 op sub :drawMaterials:count :drawMaterials:count 1
   304 jump *label74 greaterThan :drawMaterials:count 0
   305 jump *label57 always
-    * jump *label75 always
   306 label *label74
   307 label *label75
-    * jump *label66 always
   308 label *label65
   309 label *label66
   310 label *label56
   311 multijump *tmp107 0 0 (m:marker0)
   312 multilabel *label64 (m:marker0)
   313 label *label57
-    * jump *label54 always
   314 label *label53
   315 label *label54
   316 jump *label76 greaterThanEq .totalTargets 3
   317 op sub *tmp137 3 .totalTargets
   318 op mul *tmp138 *tmp137 15
   319 op sub :updateDisplay:y :updateDisplay:y *tmp138
-    * jump *label77 always
   320 label *label76
   321 label *label77
   322 op sub :updateDisplay:y :updateDisplay:y 5
-    * jump *label49 always
   323 label *label48
   324 label *label49
   325 label *label37
   326 label *label35
   327 jump *label79 notEqual .nextFactory null
   328 jump *label78 always
-    * jump *label80 always
   329 label *label79
   330 label *label80
   331 draw col %[white]
 
   409 jump *label93 lessThan :drawItemColor.2:col :drawItemColor.2:columns
   410 set :drawItemColor.2:col 0
   411 op sub :drawItemColor.2:y :drawItemColor.2:y 15
-    * jump *label94 always
   412 label *label93
   413 label *label94
   414 label *label89
 
   479 jump *label100 lessThan :drawItemColor.3:col :drawItemColor.3:columns
   480 set :drawItemColor.3:col 0
   481 op sub :drawItemColor.3:y :drawItemColor.3:y 15
-    * jump *label101 always
   482 label *label100
   483 label *label101
   484 label *label96
 
   546 jump *label107 lessThan :drawItemColor.4:col :drawItemColor.4:columns
   547 set :drawItemColor.4:col 0
   548 op sub :drawItemColor.4:y :drawItemColor.4:y 15
-    * jump *label108 always
   549 label *label107
   550 label *label108
   551 label *label103
 
   619 jump *label114 lessThan :drawItemColor.5:col :drawItemColor.5:columns
   620 set :drawItemColor.5:col 0
   621 op sub :drawItemColor.5:y :drawItemColor.5:y 15
-    * jump *label115 always
   622 label *label114
   623 label *label115
   624 label *label110
 
   632 label *label78
   633 jump *label117 notEqual .nextAddReco null
   634 jump *label116 always
-    * jump *label118 always
   635 label *label117
   636 label *label118
   637 draw col %[white]
 
   714 jump *label129 lessThan :drawItemColor.6:col :drawItemColor.6:columns
   715 set :drawItemColor.6:col 0
   716 op sub :drawItemColor.6:y :drawItemColor.6:y 15
-    * jump *label130 always
   717 label *label129
   718 label *label130
   719 label *label125
 
   781 jump *label136 lessThan :drawItemColor.7:col :drawItemColor.7:columns
   782 set :drawItemColor.7:col 0
   783 op sub :drawItemColor.7:y :drawItemColor.7:y 15
-    * jump *label137 always
   784 label *label136
   785 label *label137
   786 label *label132
 
   853 jump *label143 lessThan :drawItemColor.8:col :drawItemColor.8:columns
   854 set :drawItemColor.8:col 0
   855 op sub :drawItemColor.8:y :drawItemColor.8:y 15
-    * jump *label144 always
   856 label *label143
   857 label *label144
   858 label *label139
 
   866 label *label116
   867 jump *label146 notEqual .nextMultiReco null
   868 jump *label145 always
-    * jump *label147 always
   869 label *label146
   870 label *label147
   871 draw col %[white]
 
   949 jump *label158 lessThan :drawItemColor.9:col :drawItemColor.9:columns
   950 set :drawItemColor.9:col 0
   951 op sub :drawItemColor.9:y :drawItemColor.9:y 15
-    * jump *label159 always
   952 label *label158
   953 label *label159
   954 label *label154
 
  1016 jump *label165 lessThan :drawItemColor.10:col :drawItemColor.10:columns
  1017 set :drawItemColor.10:col 0
  1018 op sub :drawItemColor.10:y :drawItemColor.10:y 15
-    * jump *label166 always
  1019 label *label165
  1020 label *label166
  1021 label *label161
 
  1083 jump *label172 lessThan :drawItemColor.11:col :drawItemColor.11:columns
  1084 set :drawItemColor.11:col 0
  1085 op sub :drawItemColor.11:y :drawItemColor.11:y 15
-    * jump *label173 always
  1086 label *label172
  1087 label *label173
  1088 label *label168
 
  1155 jump *label179 lessThan :drawItemColor.12:col :drawItemColor.12:columns
  1156 set :drawItemColor.12:col 0
  1157 op sub :drawItemColor.12:y :drawItemColor.12:y 15
-    * jump *label180 always
  1158 label *label179
  1159 label *label180
  1160 label *label175
 
  1169 sensor *tmp413 @unit @dead
  1170 jump *label182 equal *tmp413 false
  1171 jump *label181 always
-    * jump *label183 always
  1172 label *label182
  1173 label *label183
  1174 draw col %[white]
 
  1252 jump *label195 lessThan :drawItemColor.13:col :drawItemColor.13:columns
  1253 set :drawItemColor.13:col 0
  1254 op sub :drawItemColor.13:y :drawItemColor.13:y 15
-    * jump *label196 always
  1255 label *label195
  1256 label *label196
  1257 label *label191
 
  1329 jump *label203 lessThan :drawItemColor.14:col :drawItemColor.14:columns
  1330 set :drawItemColor.14:col 0
  1331 op sub :drawItemColor.14:y :drawItemColor.14:y 15
-    * jump *label204 always
  1332 label *label203
  1333 label *label204
  1334 label *label199
 
  1342 label *label181
  1343 jump *label206 greaterThanEq :updateDisplay:y 20
  1344 jump *label205 always
-    * jump *label207 always
  1345 label *label206
  1346 label *label207
  1347 jump *label208 notEqual AJTJK-battery1 null
  1348 jump *label205 always
-    * jump *label209 always
  1349 label *label208
  1350 label *label209
  1351 set :updateDisplay:y 20
 
  1426 jump *label217 lessThan :drawItemColor.15:col :drawItemColor.15:columns
  1427 set :drawItemColor.15:col 0
  1428 op sub :drawItemColor.15:y :drawItemColor.15:y 15
-    * jump *label218 always
  1429 label *label217
  1430 label *label218
  1431 label *label213
 
  1501 multijump *tmp506 0 0 (m:marker1)
  1502 multilabel *label238 (m:marker1)
  1503 label *label229
-    * jump *label223 always
  1504 label *label222
  1505 label *label223
  1506 setaddr :drawHeader*retaddr *label239 (h:*label239)
 
  1509 drawflush display1
  1510 jump *label240 lessThanEq .lastTail :displayStorage:tail
  1511 jump *label221 always
-    * jump *label241 always
  1512 label *label240
  1513 label *label241
  1514 read :displayStorage:accumulator bank2 .lastTail
 
  1568 draw image 0 0 @core-shard 6 0
  1569 drawflush display1
  1570 set :displayBaseMap:limit 5
-    * jump *label252 always
  1571 label *label251
  1572 label *label252
  1573 set :displayBaseMap:counter 0
 
  1713 jump *label295 notEqual .scrap false
  1714 jump *label297 notEqual :displayBaseMap:cfg "AXPRJe-pulverizer27"
  1715 jump *label259 always
-    * jump *label298 always
  1716 label *label297
  1717 label *label298
-    * jump *label296 always
  1718 label *label295
  1719 label *label296
  1720 jump *label299 notEqual :displayBaseMap:counter :displayBaseMap:limit
 
  1737 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1738 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1739 label *label305
-    * jump *label304 always
  1740 label *label303
  1741 label *label304
  1742 sensor *tmp534 switch1 @enabled
  1743 jump *label306 equal *tmp534 false
  1744 draw clear 0 0 32
  1745 jump *label259 always
-    * jump *label307 always
  1746 label *label306
  1747 label *label307
  1748 drawflush display1
 
  1793 draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
  1794 label *label314
  1795 set .lastRecord :displayLog:start
-    * jump *label310 always
  1796 label *label309
  1797 label *label310
  1798 setaddr :drawHeader*retaddr *label315 (h:*label315)
 
  1851 sensor *tmp578 switch1 @enabled
  1852 jump *label325 equal *tmp578 false
  1853 jump *label318 always
-    * jump *label326 always
  1854 label *label325
  1855 label *label326
  1856 label *label317
 
  1863 label *label248
  1864 label *label220
  1865 label *label21
-    * jump *label19 always
  1866 label *label18
  1867 label *label19
  1868 jump *label327 lessThanEq .megas 0
 
  1898 drawflush null
  1899 draw reset
  1900 draw clear 0 0 32
-    * jump *label331 always
  1901 label *label330
  1902 label *label331
  1903 label *label16
 
  1999 jump *label355 equal :drawHeader:goal null
  2000 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2001 op add :drawHeader:x :drawHeader:x 30
-    * jump *label356 always
  2002 label *label355
  2003 label *label356
  2004 label *label350
 
  2022 jump *label365 equal :drawHeader:goal.1 null
  2023 draw image 42 237 :drawHeader:goal.1 32 0
  2024 jump *label361 always
-    * jump *label366 always
  2025 label *label365
  2026 label *label366
  2027 label *label360
  2028 multijump *tmp612 0 0 (m:marker4)
  2029 multilabel *label364 (m:marker4)
  2030 label *label361
-    * jump *label358 always
  2031 label *label357
  2032 label *label358
  2033 label *label348
 
  2114 op mul *tmp646 7 :drawHeader:len.1
  2115 op sub *tmp647 *tmp645 *tmp646
  2116 draw image *tmp647 246 @titanium 12 0
-    * jump *label375 always
  2117 label *label374
  2118 label *label375
  2119 jump *label377 equal .thoriumContainer false
 
  2132 op mul *tmp653 7 :drawHeader:len.2
  2133 op sub *tmp654 *tmp652 *tmp653
  2134 draw image *tmp654 246 @thorium 12 0
-    * jump *label378 always
  2135 label *label377
  2136 label *label378
  2137 label *label371
 
  2150 draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
  2151 label *label383
  2152 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label382 always
  2153 label *label381
  2154 label *label382
  2155 label *label380
 
  2166 draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
  2167 label *label387
  2168 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label386 always
  2169 label *label385
  2170 label *label386
  2171 label *label384
 
  2182 draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
  2183 label *label391
  2184 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label390 always
  2185 label *label389
  2186 label *label390
  2187 label *label388
 
  2267 op mul *tmp704 2 :drawBlock:size
  2268 op mul *tmp705 90 :drawBlock:rotation
  2269 draw image *tmp702 *tmp703 :drawBlock:type *tmp704 *tmp705
-    * jump *label400 always
  2270 label *label399
  2271 label *label400
  2272 label *label397

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   556 label *label87
   557 jump *label85 always
   558 label *label84
-    * op mul *tmp215 100 :drawAirFactory:progress
-    * op floor *tmp216 *tmp215
+  559 op idiv *tmp216 :drawAirFactory:progress 0.01
   560 set :drawItem.5:col 0
   561 set :drawItem.5:y :updateDisplay:y
   562 set :drawItem.5:columns 1
 
   789 set :updateDisplay:y :drawItem.7:y
   790 jump *label123 always
   791 label *label122
-    * op mul *tmp290 100 :drawAddReco:progress
-    * op floor *tmp291 *tmp290
+  792 op idiv *tmp291 :drawAddReco:progress 0.01
   793 set :drawItem.8:col 0
   794 set :drawItem.8:y :updateDisplay:y
   795 set :drawItem.8:columns 1
 
  1090 set :updateDisplay:y :drawItem.11:y
  1091 jump *label152 always
  1092 label *label151
-    * op mul *tmp389 100 :drawMultiReco:progress
-    * op floor *tmp390 *tmp389
+ 1093 op idiv *tmp390 :drawMultiReco:progress 0.01
  1094 set :drawItem.12:col 0
  1095 set :drawItem.12:y :updateDisplay:y
  1096 set :drawItem.12:columns 1
 
  1366 set :updateDisplay:y :drawTitleRow.6:y
  1367 sensor :drawPower:power AJTJK-battery1 @totalPower
  1368 op mul *tmp474 :drawPower:power 100
-    * op div *tmp475 *tmp474 4000
-    * op floor *tmp476 *tmp475
+ 1369 op idiv *tmp476 *tmp474 4000
  1370 set :drawItemColor.15:color1 %808000FF
  1371 set :drawItemColor.15:color2 %FFFF00FF
  1372 set :drawItemColor.15:col 0
 
  1819 label *label321
  1820 set :displayRecord:icon *tmp564
  1821 op div *tmp568 :displayRecord:record 1000
-    * op div *tmp569 *tmp568 120
-    * op floor :displayRecord:t *tmp569
+ 1822 op idiv :displayRecord:t *tmp568 120
  1823 op idiv :displayRecord:m :displayRecord:t 60
  1824 op mod :displayRecord:s :displayRecord:t 60
  1825 jump *label322 greaterThanEq :displayRecord:s 10
 
  1911 draw col %[gold]
  1912 draw scale 3.5 3.5
  1913 read *tmp0 processor1 "time"
-    * op div *tmp592 *tmp0 120
-    * op floor :drawHeader:t *tmp592
+ 1914 op idiv :drawHeader:t *tmp0 120
  1915 op idiv :drawHeader:m :drawHeader:t 60
  1916 op mod :drawHeader:s :drawHeader:t 60
  1917 jump *label335 greaterThanEq :drawHeader:s 10
 
  2029 label *label344
  2030 set :drawHeader:tt @second
  2031 read *tmp0 processor1 "time"
-    * op div *tmp615 *tmp0 120
-    * op floor :drawHeader:t.1 *tmp615
+ 2032 op idiv :drawHeader:t.1 *tmp0 120
  2033 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  2034 op mod :drawHeader:s.1 :drawHeader:t.1 60
  2035 jump *label367 greaterThanEq :drawHeader:s.1 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-17 instructions):
 
    40 set :lerp:from 42
    41 set :lerp:to 90
    42 set :lerp:ratio :animate:ratio
-    * op sub *tmp58 1 :lerp:ratio
-    * op mul *tmp59 *tmp58 :lerp:from
-    * op mul *tmp60 :lerp:ratio :lerp:to
+   43 op sub *tmp58 1 :animate:ratio
+   44 op mul *tmp59 *tmp58 42
+   45 op mul *tmp60 :animate:ratio 90
    46 op add *tmp57 *tmp59 *tmp60
    47 label *label27
    48 set :animate:x *tmp57
    49 set :lerp.1:from 237
    50 set :lerp.1:to 120
    51 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :lerp.1:ratio
-    * op mul *tmp64 *tmp63 :lerp.1:from
-    * op mul *tmp65 :lerp.1:ratio :lerp.1:to
+   52 op sub *tmp63 1 :animate:ratio
+   53 op mul *tmp64 *tmp58 237
+   54 op mul *tmp65 :animate:ratio 120
    55 op add *tmp62 *tmp64 *tmp65
    56 label *label28
    57 set :animate:y *tmp62
    58 set :lerp.2:from 32
    59 set :lerp.2:to 168
    60 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :lerp.2:ratio
-    * op mul *tmp69 *tmp68 :lerp.2:from
-    * op mul *tmp70 :lerp.2:ratio :lerp.2:to
+   61 op sub *tmp68 1 :animate:ratio
+   62 op mul *tmp69 *tmp58 32
+   63 op mul *tmp70 :animate:ratio 168
    64 op add *tmp67 *tmp69 *tmp70
    65 label *label29
    66 set :animate:size *tmp67
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   67 draw image *tmp57 *tmp62 @mega *tmp67 0
    68 jump *label30 notEqual :animate:ratio 1
    69 setaddr :drawHeader*retaddr *label32 (h:*label32)
    70 call *label4 *invalid :drawHeader*retval (m:*label32) (h:*label32)
 
    86 op equal *tmp76 .nextBlock @ore-titanium
    87 op or *tmp77 *tmp75 *tmp76
    88 jump *label36 equal *tmp77 false
-    * set :drawTitleRow:y :updateDisplay:y
+   89 set :drawTitleRow:y 201
    90 set :drawTitleRow:alignment @bottomLeft
    91 set :drawText:x 22
-    * set :drawText:y :drawTitleRow:y
-    * set :drawText:alignment :drawTitleRow:alignment
+   92 set :drawText:y :updateDisplay:y
+   93 set :drawText:alignment @bottomLeft
    94 print "Locating ore..."
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   95 draw print 22 :drawTitleRow:y :drawTitleRow:alignment
    96 label *label39
    97 set :drawText.1:x 23
-    * set :drawText.1:y :drawTitleRow:y
-    * set :drawText.1:alignment :drawTitleRow:alignment
+   98 set :drawText.1:y :updateDisplay:y
+   99 set :drawText.1:alignment @bottomLeft
   100 print "Locating ore..."
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+  101 draw print 23 :drawTitleRow:y :drawTitleRow:alignment
   102 label *label40
-    * op sub :drawTitleRow:y :drawTitleRow:y 15
+  103 op sub :drawTitleRow:y :updateDisplay:y 15
   104 label *label38
   105 set :updateDisplay:y :drawTitleRow:y
   106 set :drawItem:col 0
-    * set :drawItem:y :updateDisplay:y
+  107 set :drawItem:y :drawTitleRow:y
   108 set :drawItem:columns 1
   109 set :drawItem:item .nextBlock
   110 read :drawItem:current processor3 ".mapProgress"
   111 read :drawItem:target processor3 ".mapTotal"
   112 set :drawItemColor:color1 %008000FF
   113 set :drawItemColor:color2 %00FF00FF
-    * set :drawItemColor:col :drawItem:col
-    * set :drawItemColor:y :drawItem:y
-    * set :drawItemColor:columns :drawItem:columns
+  114 set :drawItemColor:col 0
+  115 set :drawItemColor:y :updateDisplay:y
+  116 set :drawItemColor:columns 1
   117 set :drawItemColor:item :drawItem:item
   118 set :drawItemColor:current :drawItem:current
   119 set :drawItemColor:target :drawItem:target
-    * op mul *tmp79 :drawItemColor:columns 176
-    * op div *tmp80 *tmp79 2
+  120 op mul *tmp79 :drawItem:columns 176
+  121 op mul *tmp80 :drawItemColor:columns 88
   122 op sub :drawItemColor:barLength 214 *tmp80
   123 op add :drawItemColor:textEnd 48 :drawItemColor:barLength
-    * op mul *tmp83 :drawItemColor:barLength :drawItemColor:current
-    * op div *tmp84 *tmp83 :drawItemColor:target
+  124 op mul *tmp83 :drawItemColor:barLength :drawItem:current
+  125 op div *tmp84 *tmp83 :drawItem:target
   126 op min :drawItemColor:length :drawItemColor:barLength *tmp84
-    * op mul *tmp86 :drawItemColor:col 176
-    * op div *tmp87 *tmp86 2
+  127 op mul *tmp86 :drawItem:col 176
+  128 op mul *tmp87 :drawItemColor:col 88
   129 op add :drawItemColor:iconX 11 *tmp87
-    * op mul *tmp89 :drawItemColor:col 176
-    * op div *tmp90 *tmp89 2
-    * op add :drawItemColor:barX 22 *tmp90
-    * op mul *tmp92 :drawItemColor:col 176
-    * op div *tmp93 *tmp92 2
-    * op add :drawItemColor:textX :drawItemColor:textEnd *tmp93
+  130 op mul *tmp89 :drawItem:col 176
+  131 op div *tmp90 *tmp86 2
+  132 op add :drawItemColor:barX 22 *tmp87
+  133 op mul *tmp92 :drawItem:col 176
+  134 op div *tmp93 *tmp86 2
+  135 op add :drawItemColor:textX :drawItemColor:textEnd *tmp87
   136 draw col %[white]
-    * op add *tmp95 :drawItemColor:y 5
-    * draw image :drawItemColor:iconX *tmp95 :drawItemColor:item 16 0
-    * draw col :drawItemColor:color1
-    * draw rect :drawItemColor:barX :drawItemColor:y :drawItemColor:length 10
-    * draw col :drawItemColor:color2
-    * draw lineRect :drawItemColor:barX :drawItemColor:y :drawItemColor:barLength 10
-    * op add *tmp96 :drawItemColor:y 5
-    * op add *tmp97 *tmp96 2
+  137 op add *tmp95 :drawItem:y 5
+  138 draw image :drawItemColor:iconX *tmp95 :drawItem:item 16 0
+  139 draw col %008000FF
+  140 draw rect :drawItemColor:barX :drawItem:y :drawItemColor:length 10
+  141 draw col %00FF00FF
+  142 draw lineRect :drawItemColor:barX :drawItem:y :drawItemColor:barLength 10
+  143 op add *tmp96 :drawItem:y 5
+  144 op add *tmp97 *tmp95 2
   145 set :drawBold:x :drawItemColor:textX
   146 set :drawBold:y *tmp97
   147 set :drawBold:alignment @right
-    * set :drawText.2:x :drawBold:x
-    * set :drawText.2:y :drawBold:y
-    * set :drawText.2:alignment :drawBold:alignment
+  148 set :drawText.2:x :drawItemColor:textX
+  149 set :drawText.2:y *tmp97
+  150 set :drawText.2:alignment @right
   151 print "x"
   152 read *tmp98 processor3 ".mapSpots"
   153 print *tmp98
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  154 draw print :drawBold:x :drawBold:y :drawBold:alignment
   155 label *label44
-    * op add :drawText.3:x :drawBold:x 1
-    * set :drawText.3:y :drawBold:y
-    * set :drawText.3:alignment :drawBold:alignment
+  156 op add :drawText.3:x :drawItemColor:textX 1
+  157 set :drawText.3:y *tmp97
+  158 set :drawText.3:alignment @right
   159 print "x"
   160 read *tmp100 processor3 ".mapSpots"
   161 print *tmp100
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  162 draw print :drawText.3:x :drawBold:y :drawBold:alignment
   163 label *label45
   164 label *label43
-    * op add :drawItemColor:col :drawItemColor:col 1
-    * jump *label46 lessThan :drawItemColor:col :drawItemColor:columns
+  165 op add :drawItemColor:col :drawItem:col 1
+  166 jump *label46 lessThan :drawItemColor:col :drawItem:columns
   167 set :drawItemColor:col 0
-    * op sub :drawItemColor:y :drawItemColor:y 15
+  168 op sub :drawItemColor:y :drawItem:y 15
   169 label *label46
   170 label *label47
   171 label *label42
-    * set :drawItem:col :drawItemColor:col
   172 set :drawItem:y :drawItemColor:y
   173 label *label41
-    * set :updateDisplay:y :drawItem:y
-    * op sub :updateDisplay:y :updateDisplay:y 35
+  174 set :updateDisplay:y :drawItemColor:y
+  175 op sub :updateDisplay:y :drawItem:y 35
   176 jump *label37 always
   177 label *label36
   178 jump *label48 equal .nextBlock null
   179 set :drawMaterials:count .totalTargets
-    * set :drawTitleRow.1:y :updateDisplay:y
+  180 set :drawTitleRow.1:y 201
   181 set :drawTitleRow.1:alignment @bottomLeft
   182 set :drawText.4:x 22
-    * set :drawText.4:y :drawTitleRow.1:y
-    * set :drawText.4:alignment :drawTitleRow.1:alignment
+  183 set :drawText.4:y :updateDisplay:y
+  184 set :drawText.4:alignment @bottomLeft
   185 print "Materials"
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  186 draw print 22 :drawTitleRow.1:y :drawTitleRow.1:alignment
   187 label *label51
   188 set :drawText.5:x 23
-    * set :drawText.5:y :drawTitleRow.1:y
-    * set :drawText.5:alignment :drawTitleRow.1:alignment
+  189 set :drawText.5:y :updateDisplay:y
+  190 set :drawText.5:alignment @bottomLeft
   191 print "Materials"
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  192 draw print 23 :drawTitleRow.1:y :drawTitleRow.1:alignment
   193 label *label52
-    * op sub :drawTitleRow.1:y :drawTitleRow.1:y 15
+  194 op sub :drawTitleRow.1:y :updateDisplay:y 15
   195 label *label50
   196 set :updateDisplay:y :drawTitleRow.1:y
   197 set :drawMaterials:columns 1
 
   234 sensor *tmp110 .core :drawMaterials:item
   235 set :drawItem.1:col :drawMaterials:col
   236 set :drawItem.1:y :updateDisplay:y
-    * set :drawItem.1:columns :drawMaterials:columns
+  237 set :drawItem.1:columns 1
   238 set :drawItem.1:item :drawMaterials:item
   239 set :drawItem.1:current *tmp110
   240 set :drawItem.1:target :drawMaterials:target
   241 set :drawItemColor.1:color1 %008000FF
   242 set :drawItemColor.1:color2 %00FF00FF
-    * set :drawItemColor.1:col :drawItem.1:col
-    * set :drawItemColor.1:y :drawItem.1:y
-    * set :drawItemColor.1:columns :drawItem.1:columns
-    * set :drawItemColor.1:item :drawItem.1:item
-    * set :drawItemColor.1:current :drawItem.1:current
-    * set :drawItemColor.1:target :drawItem.1:target
-    * op mul *tmp111 :drawItemColor.1:columns 176
-    * op div *tmp112 *tmp111 2
+  243 set :drawItemColor.1:col :drawMaterials:col
+  244 set :drawItemColor.1:y :updateDisplay:y
+  245 set :drawItemColor.1:columns :drawMaterials:columns
+  246 set :drawItemColor.1:item :drawMaterials:item
+  247 set :drawItemColor.1:current *tmp110
+  248 set :drawItemColor.1:target :drawMaterials:target
+  249 op mul *tmp111 :drawItem.1:columns 176
+  250 op mul *tmp112 :drawItemColor.1:columns 88
   251 op sub :drawItemColor.1:barLength 214 *tmp112
   252 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength :drawItemColor.1:current
-    * op div *tmp116 *tmp115 :drawItemColor.1:target
+  253 op mul *tmp115 :drawItemColor.1:barLength :drawItem.1:current
+  254 op div *tmp116 *tmp115 :drawItem.1:target
   255 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawItemColor.1:col 176
-    * op div *tmp119 *tmp118 2
+  256 op mul *tmp118 :drawItem.1:col 176
+  257 op mul *tmp119 :drawItemColor.1:col 88
   258 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawItemColor.1:col 176
-    * op div *tmp122 *tmp121 2
-    * op add :drawItemColor.1:barX 22 *tmp122
-    * op mul *tmp124 :drawItemColor.1:col 176
-    * op div *tmp125 *tmp124 2
-    * op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp125
+  259 op mul *tmp121 :drawItem.1:col 176
+  260 op div *tmp122 *tmp118 2
+  261 op add :drawItemColor.1:barX 22 *tmp119
+  262 op mul *tmp124 :drawItem.1:col 176
+  263 op div *tmp125 *tmp118 2
+  264 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
   265 draw col %[white]
-    * op add *tmp127 :drawItemColor.1:y 5
-    * draw image :drawItemColor.1:iconX *tmp127 :drawItemColor.1:item 16 0
-    * draw col :drawItemColor.1:color1
-    * draw rect :drawItemColor.1:barX :drawItemColor.1:y :drawItemColor.1:length 10
-    * draw col :drawItemColor.1:color2
-    * draw lineRect :drawItemColor.1:barX :drawItemColor.1:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :drawItemColor.1:y 5
-    * op add *tmp129 *tmp128 2
+  266 op add *tmp127 :drawItem.1:y 5
+  267 draw image :drawItemColor.1:iconX *tmp127 :drawItem.1:item 16 0
+  268 draw col %008000FF
+  269 draw rect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:length 10
+  270 draw col %00FF00FF
+  271 draw lineRect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:barLength 10
+  272 op add *tmp128 :drawItem.1:y 5
+  273 op add *tmp129 *tmp127 2
   274 set :drawBold.1:x :drawItemColor.1:textX
   275 set :drawBold.1:y *tmp129
   276 set :drawBold.1:alignment @right
-    * set :drawText.6:x :drawBold.1:x
-    * set :drawText.6:y :drawBold.1:y
-    * set :drawText.6:alignment :drawBold.1:alignment
+  277 set :drawText.6:x :drawItemColor.1:textX
+  278 set :drawText.6:y *tmp129
+  279 set :drawText.6:alignment @right
   280 print :drawMaterials:target
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  281 draw print :drawBold.1:x :drawBold.1:y :drawBold.1:alignment
   282 label *label70
-    * op add :drawText.7:x :drawBold.1:x 1
-    * set :drawText.7:y :drawBold.1:y
-    * set :drawText.7:alignment :drawBold.1:alignment
+  283 op add :drawText.7:x :drawItemColor.1:textX 1
+  284 set :drawText.7:y *tmp129
+  285 set :drawText.7:alignment @right
   286 print :drawMaterials:target
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  287 draw print :drawText.7:x :drawBold.1:y :drawBold.1:alignment
   288 label *label71
   289 label *label69
-    * op add :drawItemColor.1:col :drawItemColor.1:col 1
-    * jump *label72 lessThan :drawItemColor.1:col :drawItemColor.1:columns
+  290 op add :drawItemColor.1:col :drawItem.1:col 1
+  291 jump *label72 lessThan :drawItemColor.1:col :drawItem.1:columns
   292 set :drawItemColor.1:col 0
-    * op sub :drawItemColor.1:y :drawItemColor.1:y 15
+  293 op sub :drawItemColor.1:y :drawItem.1:y 15
   294 label *label72
   295 label *label73
   296 label *label68
   297 set :drawItem.1:col :drawItemColor.1:col
   298 set :drawItem.1:y :drawItemColor.1:y
   299 label *label67
-    * set :drawMaterials:col :drawItem.1:col
-    * set :updateDisplay:y :drawItem.1:y
+  300 set :drawMaterials:col :drawItemColor.1:col
+  301 set :updateDisplay:y :drawItemColor.1:y
   302 op sub :drawMaterials:count :drawMaterials:count 1
   303 jump *label74 greaterThan :drawMaterials:count 0
   304 jump *label57 always
 
   331 set :drawTitleRow.2:y :updateDisplay:y
   332 set :drawTitleRow.2:alignment @bottomLeft
   333 set :drawText.8:x 22
-    * set :drawText.8:y :drawTitleRow.2:y
-    * set :drawText.8:alignment :drawTitleRow.2:alignment
+  334 set :drawText.8:y :updateDisplay:y
+  335 set :drawText.8:alignment @bottomLeft
   336 print "Air Factory"
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  337 draw print 22 :drawTitleRow.2:y :drawTitleRow.2:alignment
   338 label *label82
   339 set :drawText.9:x 23
-    * set :drawText.9:y :drawTitleRow.2:y
-    * set :drawText.9:alignment :drawTitleRow.2:alignment
+  340 set :drawText.9:y :updateDisplay:y
+  341 set :drawText.9:alignment @bottomLeft
   342 print "Air Factory"
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  343 draw print 23 :drawTitleRow.2:y :drawTitleRow.2:alignment
   344 label *label83
-    * op sub :drawTitleRow.2:y :drawTitleRow.2:y 15
+  345 op sub :drawTitleRow.2:y :updateDisplay:y 15
   346 label *label81
   347 set :updateDisplay:y :drawTitleRow.2:y
   348 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
 
   350 jump *label86 notEqual .nextFactory @flare
   351 sensor *tmp146 A¾BFLW-air-factory13 @silicon
   352 set :drawItem.2:col 0
-    * set :drawItem.2:y :updateDisplay:y
+  353 set :drawItem.2:y :drawTitleRow.2:y
   354 set :drawItem.2:columns 1
   355 set :drawItem.2:item @silicon
   356 set :drawItem.2:current *tmp146
   357 set :drawItem.2:target 15
   358 set :drawItemColor.2:color1 %008000FF
   359 set :drawItemColor.2:color2 %00FF00FF
-    * set :drawItemColor.2:col :drawItem.2:col
-    * set :drawItemColor.2:y :drawItem.2:y
-    * set :drawItemColor.2:columns :drawItem.2:columns
-    * set :drawItemColor.2:item :drawItem.2:item
-    * set :drawItemColor.2:current :drawItem.2:current
-    * set :drawItemColor.2:target :drawItem.2:target
-    * op mul *tmp147 :drawItemColor.2:columns 176
-    * op div *tmp148 *tmp147 2
+  360 set :drawItemColor.2:col 0
+  361 set :drawItemColor.2:y :updateDisplay:y
+  362 set :drawItemColor.2:columns 1
+  363 set :drawItemColor.2:item @silicon
+  364 set :drawItemColor.2:current *tmp146
+  365 set :drawItemColor.2:target 15
+  366 op mul *tmp147 :drawItem.2:columns 176
+  367 op mul *tmp148 :drawItemColor.2:columns 88
   368 op sub :drawItemColor.2:barLength 214 *tmp148
   369 op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
-    * op mul *tmp151 :drawItemColor.2:barLength :drawItemColor.2:current
-    * op div *tmp152 *tmp151 :drawItemColor.2:target
+  370 op mul *tmp151 :drawItemColor.2:barLength :drawItem.2:current
+  371 op div *tmp152 *tmp151 :drawItem.2:target
   372 op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
-    * op mul *tmp154 :drawItemColor.2:col 176
-    * op div *tmp155 *tmp154 2
+  373 op mul *tmp154 :drawItem.2:col 176
+  374 op mul *tmp155 :drawItemColor.2:col 88
   375 op add :drawItemColor.2:iconX 11 *tmp155
-    * op mul *tmp157 :drawItemColor.2:col 176
-    * op div *tmp158 *tmp157 2
-    * op add :drawItemColor.2:barX 22 *tmp158
-    * op mul *tmp160 :drawItemColor.2:col 176
-    * op div *tmp161 *tmp160 2
-    * op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp161
+  376 op mul *tmp157 :drawItem.2:col 176
+  377 op div *tmp158 *tmp154 2
+  378 op add :drawItemColor.2:barX 22 *tmp155
+  379 op mul *tmp160 :drawItem.2:col 176
+  380 op div *tmp161 *tmp154 2
+  381 op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp155
   382 draw col %[white]
-    * op add *tmp163 :drawItemColor.2:y 5
-    * draw image :drawItemColor.2:iconX *tmp163 :drawItemColor.2:item 16 0
-    * draw col :drawItemColor.2:color1
-    * draw rect :drawItemColor.2:barX :drawItemColor.2:y :drawItemColor.2:length 10
-    * draw col :drawItemColor.2:color2
-    * draw lineRect :drawItemColor.2:barX :drawItemColor.2:y :drawItemColor.2:barLength 10
-    * op add *tmp164 :drawItemColor.2:y 5
-    * op add *tmp165 *tmp164 2
+  383 op add *tmp163 :drawItem.2:y 5
+  384 draw image :drawItemColor.2:iconX *tmp163 :drawItem.2:item 16 0
+  385 draw col %008000FF
+  386 draw rect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:length 10
+  387 draw col %00FF00FF
+  388 draw lineRect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:barLength 10
+  389 op add *tmp164 :drawItem.2:y 5
+  390 op add *tmp165 *tmp163 2
   391 set :drawBold.2:x :drawItemColor.2:textX
   392 set :drawBold.2:y *tmp165
   393 set :drawBold.2:alignment @right
-    * set :drawText.10:x :drawBold.2:x
-    * set :drawText.10:y :drawBold.2:y
-    * set :drawText.10:alignment :drawBold.2:alignment
+  394 set :drawText.10:x :drawItemColor.2:textX
+  395 set :drawText.10:y *tmp165
+  396 set :drawText.10:alignment @right
   397 print 15
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  398 draw print :drawBold.2:x :drawBold.2:y :drawBold.2:alignment
   399 label *label91
-    * op add :drawText.11:x :drawBold.2:x 1
-    * set :drawText.11:y :drawBold.2:y
-    * set :drawText.11:alignment :drawBold.2:alignment
+  400 op add :drawText.11:x :drawItemColor.2:textX 1
+  401 set :drawText.11:y *tmp165
+  402 set :drawText.11:alignment @right
   403 print 15
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  404 draw print :drawText.11:x :drawBold.2:y :drawBold.2:alignment
   405 label *label92
   406 label *label90
-    * op add :drawItemColor.2:col :drawItemColor.2:col 1
-    * jump *label93 lessThan :drawItemColor.2:col :drawItemColor.2:columns
+  407 op add :drawItemColor.2:col :drawItem.2:col 1
+  408 jump *label93 lessThan :drawItemColor.2:col :drawItem.2:columns
   409 set :drawItemColor.2:col 0
-    * op sub :drawItemColor.2:y :drawItemColor.2:y 15
+  410 op sub :drawItemColor.2:y :drawItem.2:y 15
   411 label *label93
   412 label *label94
   413 label *label89
-    * set :drawItem.2:col :drawItemColor.2:col
   414 set :drawItem.2:y :drawItemColor.2:y
   415 label *label88
-    * set :updateDisplay:y :drawItem.2:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  416 set :updateDisplay:y :drawItemColor.2:y
+  417 op sub :updateDisplay:y :drawItem.2:y 15
   418 jump *label87 always
   419 label *label86
   420 sensor *tmp169 A¾BFLW-air-factory13 @lead
   421 set :drawItem.3:col 0
-    * set :drawItem.3:y :updateDisplay:y
+  422 set :drawItem.3:y :drawTitleRow.2:y
   423 set :drawItem.3:columns 1
   424 set :drawItem.3:item @lead
   425 set :drawItem.3:current *tmp169
   426 set :drawItem.3:target 15
   427 set :drawItemColor.3:color1 %008000FF
   428 set :drawItemColor.3:color2 %00FF00FF
-    * set :drawItemColor.3:col :drawItem.3:col
-    * set :drawItemColor.3:y :drawItem.3:y
-    * set :drawItemColor.3:columns :drawItem.3:columns
-    * set :drawItemColor.3:item :drawItem.3:item
-    * set :drawItemColor.3:current :drawItem.3:current
-    * set :drawItemColor.3:target :drawItem.3:target
-    * op mul *tmp170 :drawItemColor.3:columns 176
-    * op div *tmp171 *tmp170 2
+  429 set :drawItemColor.3:col 0
+  430 set :drawItemColor.3:y :updateDisplay:y
+  431 set :drawItemColor.3:columns 1
+  432 set :drawItemColor.3:item @lead
+  433 set :drawItemColor.3:current *tmp169
+  434 set :drawItemColor.3:target 15
+  435 op mul *tmp170 :drawItem.3:columns 176
+  436 op mul *tmp171 :drawItemColor.3:columns 88
   437 op sub :drawItemColor.3:barLength 214 *tmp171
   438 op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
-    * op mul *tmp174 :drawItemColor.3:barLength :drawItemColor.3:current
-    * op div *tmp175 *tmp174 :drawItemColor.3:target
+  439 op mul *tmp174 :drawItemColor.3:barLength :drawItem.3:current
+  440 op div *tmp175 *tmp174 :drawItem.3:target
   441 op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
-    * op mul *tmp177 :drawItemColor.3:col 176
-    * op div *tmp178 *tmp177 2
+  442 op mul *tmp177 :drawItem.3:col 176
+  443 op mul *tmp178 :drawItemColor.3:col 88
   444 op add :drawItemColor.3:iconX 11 *tmp178
-    * op mul *tmp180 :drawItemColor.3:col 176
-    * op div *tmp181 *tmp180 2
-    * op add :drawItemColor.3:barX 22 *tmp181
-    * op mul *tmp183 :drawItemColor.3:col 176
-    * op div *tmp184 *tmp183 2
-    * op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp184
+  445 op mul *tmp180 :drawItem.3:col 176
+  446 op div *tmp181 *tmp177 2
+  447 op add :drawItemColor.3:barX 22 *tmp178
+  448 op mul *tmp183 :drawItem.3:col 176
+  449 op div *tmp184 *tmp177 2
+  450 op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp178
   451 draw col %[white]
-    * op add *tmp186 :drawItemColor.3:y 5
-    * draw image :drawItemColor.3:iconX *tmp186 :drawItemColor.3:item 16 0
-    * draw col :drawItemColor.3:color1
-    * draw rect :drawItemColor.3:barX :drawItemColor.3:y :drawItemColor.3:length 10
-    * draw col :drawItemColor.3:color2
-    * draw lineRect :drawItemColor.3:barX :drawItemColor.3:y :drawItemColor.3:barLength 10
-    * op add *tmp187 :drawItemColor.3:y 5
-    * op add *tmp188 *tmp187 2
+  452 op add *tmp186 :drawItem.3:y 5
+  453 draw image :drawItemColor.3:iconX *tmp186 :drawItem.3:item 16 0
+  454 draw col %008000FF
+  455 draw rect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:length 10
+  456 draw col %00FF00FF
+  457 draw lineRect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:barLength 10
+  458 op add *tmp187 :drawItem.3:y 5
+  459 op add *tmp188 *tmp186 2
   460 set :drawBold.3:x :drawItemColor.3:textX
   461 set :drawBold.3:y *tmp188
   462 set :drawBold.3:alignment @right
-    * set :drawText.12:x :drawBold.3:x
-    * set :drawText.12:y :drawBold.3:y
-    * set :drawText.12:alignment :drawBold.3:alignment
+  463 set :drawText.12:x :drawItemColor.3:textX
+  464 set :drawText.12:y *tmp188
+  465 set :drawText.12:alignment @right
   466 print 15
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  467 draw print :drawBold.3:x :drawBold.3:y :drawBold.3:alignment
   468 label *label98
-    * op add :drawText.13:x :drawBold.3:x 1
-    * set :drawText.13:y :drawBold.3:y
-    * set :drawText.13:alignment :drawBold.3:alignment
+  469 op add :drawText.13:x :drawItemColor.3:textX 1
+  470 set :drawText.13:y *tmp188
+  471 set :drawText.13:alignment @right
   472 print 15
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  473 draw print :drawText.13:x :drawBold.3:y :drawBold.3:alignment
   474 label *label99
   475 label *label97
-    * op add :drawItemColor.3:col :drawItemColor.3:col 1
-    * jump *label100 lessThan :drawItemColor.3:col :drawItemColor.3:columns
+  476 op add :drawItemColor.3:col :drawItem.3:col 1
+  477 jump *label100 lessThan :drawItemColor.3:col :drawItem.3:columns
   478 set :drawItemColor.3:col 0
-    * op sub :drawItemColor.3:y :drawItemColor.3:y 15
+  479 op sub :drawItemColor.3:y :drawItem.3:y 15
   480 label *label100
   481 label *label101
   482 label *label96
-    * set :drawItem.3:col :drawItemColor.3:col
   483 set :drawItem.3:y :drawItemColor.3:y
   484 label *label95
-    * set :updateDisplay:y :drawItem.3:y
+  485 set :updateDisplay:y :drawItemColor.3:y
   486 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   487 set :drawItem.4:col 0
-    * set :drawItem.4:y :updateDisplay:y
+  488 set :drawItem.4:y :drawItem.3:y
   489 set :drawItem.4:columns 1
   490 set :drawItem.4:item @silicon
   491 set :drawItem.4:current *tmp192
   492 set :drawItem.4:target 30
   493 set :drawItemColor.4:color1 %008000FF
   494 set :drawItemColor.4:color2 %00FF00FF
-    * set :drawItemColor.4:col :drawItem.4:col
-    * set :drawItemColor.4:y :drawItem.4:y
-    * set :drawItemColor.4:columns :drawItem.4:columns
-    * set :drawItemColor.4:item :drawItem.4:item
-    * set :drawItemColor.4:current :drawItem.4:current
-    * set :drawItemColor.4:target :drawItem.4:target
-    * op mul *tmp193 :drawItemColor.4:columns 176
-    * op div *tmp194 *tmp193 2
+  495 set :drawItemColor.4:col 0
+  496 set :drawItemColor.4:y :updateDisplay:y
+  497 set :drawItemColor.4:columns 1
+  498 set :drawItemColor.4:item @silicon
+  499 set :drawItemColor.4:current *tmp192
+  500 set :drawItemColor.4:target 30
+  501 op mul *tmp193 :drawItem.4:columns 176
+  502 op mul *tmp194 :drawItemColor.4:columns 88
   503 op sub :drawItemColor.4:barLength 214 *tmp194
   504 op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
-    * op mul *tmp197 :drawItemColor.4:barLength :drawItemColor.4:current
-    * op div *tmp198 *tmp197 :drawItemColor.4:target
+  505 op mul *tmp197 :drawItemColor.4:barLength :drawItem.4:current
+  506 op div *tmp198 *tmp197 :drawItem.4:target
   507 op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
-    * op mul *tmp200 :drawItemColor.4:col 176
-    * op div *tmp201 *tmp200 2
+  508 op mul *tmp200 :drawItem.4:col 176
+  509 op mul *tmp201 :drawItemColor.4:col 88
   510 op add :drawItemColor.4:iconX 11 *tmp201
-    * op mul *tmp203 :drawItemColor.4:col 176
-    * op div *tmp204 *tmp203 2
-    * op add :drawItemColor.4:barX 22 *tmp204
-    * op mul *tmp206 :drawItemColor.4:col 176
-    * op div *tmp207 *tmp206 2
-    * op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp207
+  511 op mul *tmp203 :drawItem.4:col 176
+  512 op div *tmp204 *tmp200 2
+  513 op add :drawItemColor.4:barX 22 *tmp201
+  514 op mul *tmp206 :drawItem.4:col 176
+  515 op div *tmp207 *tmp200 2
+  516 op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp201
   517 draw col %[white]
-    * op add *tmp209 :drawItemColor.4:y 5
-    * draw image :drawItemColor.4:iconX *tmp209 :drawItemColor.4:item 16 0
-    * draw col :drawItemColor.4:color1
-    * draw rect :drawItemColor.4:barX :drawItemColor.4:y :drawItemColor.4:length 10
-    * draw col :drawItemColor.4:color2
-    * draw lineRect :drawItemColor.4:barX :drawItemColor.4:y :drawItemColor.4:barLength 10
-    * op add *tmp210 :drawItemColor.4:y 5
-    * op add *tmp211 *tmp210 2
+  518 op add *tmp209 :drawItem.4:y 5
+  519 draw image :drawItemColor.4:iconX *tmp209 :drawItem.4:item 16 0
+  520 draw col %008000FF
+  521 draw rect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:length 10
+  522 draw col %00FF00FF
+  523 draw lineRect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:barLength 10
+  524 op add *tmp210 :drawItem.4:y 5
+  525 op add *tmp211 *tmp209 2
   526 set :drawBold.4:x :drawItemColor.4:textX
   527 set :drawBold.4:y *tmp211
   528 set :drawBold.4:alignment @right
-    * set :drawText.14:x :drawBold.4:x
-    * set :drawText.14:y :drawBold.4:y
-    * set :drawText.14:alignment :drawBold.4:alignment
+  529 set :drawText.14:x :drawItemColor.4:textX
+  530 set :drawText.14:y *tmp211
+  531 set :drawText.14:alignment @right
   532 print 30
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  533 draw print :drawBold.4:x :drawBold.4:y :drawBold.4:alignment
   534 label *label105
-    * op add :drawText.15:x :drawBold.4:x 1
-    * set :drawText.15:y :drawBold.4:y
-    * set :drawText.15:alignment :drawBold.4:alignment
+  535 op add :drawText.15:x :drawItemColor.4:textX 1
+  536 set :drawText.15:y *tmp211
+  537 set :drawText.15:alignment @right
   538 print 30
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  539 draw print :drawText.15:x :drawBold.4:y :drawBold.4:alignment
   540 label *label106
   541 label *label104
-    * op add :drawItemColor.4:col :drawItemColor.4:col 1
-    * jump *label107 lessThan :drawItemColor.4:col :drawItemColor.4:columns
+  542 op add :drawItemColor.4:col :drawItem.4:col 1
+  543 jump *label107 lessThan :drawItemColor.4:col :drawItem.4:columns
   544 set :drawItemColor.4:col 0
-    * op sub :drawItemColor.4:y :drawItemColor.4:y 15
+  545 op sub :drawItemColor.4:y :drawItem.4:y 15
   546 label *label107
   547 label *label108
   548 label *label103
-    * set :drawItem.4:col :drawItemColor.4:col
   549 set :drawItem.4:y :drawItemColor.4:y
   550 label *label102
-    * set :updateDisplay:y :drawItem.4:y
+  551 set :updateDisplay:y :drawItemColor.4:y
   552 label *label87
   553 jump *label85 always
   554 label *label84
   555 op idiv *tmp216 :drawAirFactory:progress 0.01
   556 set :drawItem.5:col 0
-    * set :drawItem.5:y :updateDisplay:y
+  557 set :drawItem.5:y :drawTitleRow.2:y
   558 set :drawItem.5:columns 1
   559 set :drawItem.5:item .nextFactory
   560 set :drawItem.5:current :drawAirFactory:progress
   561 set :drawItem.5:target 1
   562 set :drawItemColor.5:color1 %008000FF
   563 set :drawItemColor.5:color2 %00FF00FF
-    * set :drawItemColor.5:col :drawItem.5:col
-    * set :drawItemColor.5:y :drawItem.5:y
-    * set :drawItemColor.5:columns :drawItem.5:columns
+  564 set :drawItemColor.5:col 0
+  565 set :drawItemColor.5:y :updateDisplay:y
+  566 set :drawItemColor.5:columns 1
   567 set :drawItemColor.5:item :drawItem.5:item
-    * set :drawItemColor.5:current :drawItem.5:current
-    * set :drawItemColor.5:target :drawItem.5:target
-    * op mul *tmp217 :drawItemColor.5:columns 176
-    * op div *tmp218 *tmp217 2
+  568 set :drawItemColor.5:current :drawAirFactory:progress
+  569 set :drawItemColor.5:target 1
+  570 op mul *tmp217 :drawItem.5:columns 176
+  571 op mul *tmp218 :drawItemColor.5:columns 88
   572 op sub :drawItemColor.5:barLength 214 *tmp218
   573 op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
-    * op mul *tmp221 :drawItemColor.5:barLength :drawItemColor.5:current
-    * op div *tmp222 *tmp221 :drawItemColor.5:target
+  574 op mul *tmp221 :drawItemColor.5:barLength :drawItem.5:current
+  575 op div *tmp222 *tmp221 :drawItem.5:target
   576 op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
-    * op mul *tmp224 :drawItemColor.5:col 176
-    * op div *tmp225 *tmp224 2
+  577 op mul *tmp224 :drawItem.5:col 176
+  578 op mul *tmp225 :drawItemColor.5:col 88
   579 op add :drawItemColor.5:iconX 11 *tmp225
-    * op mul *tmp227 :drawItemColor.5:col 176
-    * op div *tmp228 *tmp227 2
-    * op add :drawItemColor.5:barX 22 *tmp228
-    * op mul *tmp230 :drawItemColor.5:col 176
-    * op div *tmp231 *tmp230 2
-    * op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp231
+  580 op mul *tmp227 :drawItem.5:col 176
+  581 op div *tmp228 *tmp224 2
+  582 op add :drawItemColor.5:barX 22 *tmp225
+  583 op mul *tmp230 :drawItem.5:col 176
+  584 op div *tmp231 *tmp224 2
+  585 op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp225
   586 draw col %[white]
-    * op add *tmp233 :drawItemColor.5:y 5
-    * draw image :drawItemColor.5:iconX *tmp233 :drawItemColor.5:item 16 0
-    * draw col :drawItemColor.5:color1
-    * draw rect :drawItemColor.5:barX :drawItemColor.5:y :drawItemColor.5:length 10
-    * draw col :drawItemColor.5:color2
-    * draw lineRect :drawItemColor.5:barX :drawItemColor.5:y :drawItemColor.5:barLength 10
-    * op add *tmp234 :drawItemColor.5:y 5
-    * op add *tmp235 *tmp234 2
+  587 op add *tmp233 :drawItem.5:y 5
+  588 draw image :drawItemColor.5:iconX *tmp233 :drawItem.5:item 16 0
+  589 draw col %008000FF
+  590 draw rect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:length 10
+  591 draw col %00FF00FF
+  592 draw lineRect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:barLength 10
+  593 op add *tmp234 :drawItem.5:y 5
+  594 op add *tmp235 *tmp233 2
   595 set :drawBold.5:x :drawItemColor.5:textX
   596 set :drawBold.5:y *tmp235
   597 set :drawBold.5:alignment @right
-    * set :drawText.16:x :drawBold.5:x
-    * set :drawText.16:y :drawBold.5:y
-    * set :drawText.16:alignment :drawBold.5:alignment
+  598 set :drawText.16:x :drawItemColor.5:textX
+  599 set :drawText.16:y *tmp235
+  600 set :drawText.16:alignment @right
   601 print *tmp216
   602 print "%"
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  603 draw print :drawBold.5:x :drawBold.5:y :drawBold.5:alignment
   604 label *label112
-    * op add :drawText.17:x :drawBold.5:x 1
-    * set :drawText.17:y :drawBold.5:y
-    * set :drawText.17:alignment :drawBold.5:alignment
+  605 op add :drawText.17:x :drawItemColor.5:textX 1
+  606 set :drawText.17:y *tmp235
+  607 set :drawText.17:alignment @right
   608 print *tmp216
   609 print "%"
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  610 draw print :drawText.17:x :drawBold.5:y :drawBold.5:alignment
   611 label *label113
   612 label *label111
-    * op add :drawItemColor.5:col :drawItemColor.5:col 1
-    * jump *label114 lessThan :drawItemColor.5:col :drawItemColor.5:columns
+  613 op add :drawItemColor.5:col :drawItem.5:col 1
+  614 jump *label114 lessThan :drawItemColor.5:col :drawItem.5:columns
   615 set :drawItemColor.5:col 0
-    * op sub :drawItemColor.5:y :drawItemColor.5:y 15
+  616 op sub :drawItemColor.5:y :drawItem.5:y 15
   617 label *label114
   618 label *label115
   619 label *label110
-    * set :drawItem.5:col :drawItemColor.5:col
   620 set :drawItem.5:y :drawItemColor.5:y
   621 label *label109
-    * set :updateDisplay:y :drawItem.5:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  622 set :updateDisplay:y :drawItemColor.5:y
+  623 op sub :updateDisplay:y :drawItem.5:y 15
   624 label *label85
   625 op sub :updateDisplay:y :updateDisplay:y 5
   626 label *label78
 
   632 set :drawTitleRow.3:y :updateDisplay:y
   633 set :drawTitleRow.3:alignment @bottomLeft
   634 set :drawText.18:x 22
-    * set :drawText.18:y :drawTitleRow.3:y
-    * set :drawText.18:alignment :drawTitleRow.3:alignment
+  635 set :drawText.18:y :updateDisplay:y
+  636 set :drawText.18:alignment @bottomLeft
   637 print "Reconstructor"
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  638 draw print 22 :drawTitleRow.3:y :drawTitleRow.3:alignment
   639 label *label120
   640 set :drawText.19:x 23
-    * set :drawText.19:y :drawTitleRow.3:y
-    * set :drawText.19:alignment :drawTitleRow.3:alignment
+  641 set :drawText.19:y :updateDisplay:y
+  642 set :drawText.19:alignment @bottomLeft
   643 print "Reconstructor"
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  644 draw print 23 :drawTitleRow.3:y :drawTitleRow.3:alignment
   645 label *label121
-    * op sub :drawTitleRow.3:y :drawTitleRow.3:y 15
+  646 op sub :drawTitleRow.3:y :updateDisplay:y 15
   647 label *label119
   648 set :updateDisplay:y :drawTitleRow.3:y
   649 sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 @progress
   650 jump *label122 notEqual :drawAddReco:progress 0
   651 sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite
   652 set :drawItem.6:col 0
-    * set :drawItem.6:y :updateDisplay:y
+  653 set :drawItem.6:y :drawTitleRow.3:y
   654 set :drawItem.6:columns 1
   655 set :drawItem.6:item @graphite
   656 set :drawItem.6:current *tmp244
   657 set :drawItem.6:target 40
   658 set :drawItemColor.6:color1 %008000FF
   659 set :drawItemColor.6:color2 %00FF00FF
-    * set :drawItemColor.6:col :drawItem.6:col
-    * set :drawItemColor.6:y :drawItem.6:y
-    * set :drawItemColor.6:columns :drawItem.6:columns
-    * set :drawItemColor.6:item :drawItem.6:item
-    * set :drawItemColor.6:current :drawItem.6:current
-    * set :drawItemColor.6:target :drawItem.6:target
-    * op mul *tmp245 :drawItemColor.6:columns 176
-    * op div *tmp246 *tmp245 2
+  660 set :drawItemColor.6:col 0
+  661 set :drawItemColor.6:y :updateDisplay:y
+  662 set :drawItemColor.6:columns 1
+  663 set :drawItemColor.6:item @graphite
+  664 set :drawItemColor.6:current *tmp244
+  665 set :drawItemColor.6:target 40
+  666 op mul *tmp245 :drawItem.6:columns 176
+  667 op mul *tmp246 :drawItemColor.6:columns 88
   668 op sub :drawItemColor.6:barLength 214 *tmp246
   669 op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
-    * op mul *tmp249 :drawItemColor.6:barLength :drawItemColor.6:current
-    * op div *tmp250 *tmp249 :drawItemColor.6:target
+  670 op mul *tmp249 :drawItemColor.6:barLength :drawItem.6:current
+  671 op div *tmp250 *tmp249 :drawItem.6:target
   672 op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
-    * op mul *tmp252 :drawItemColor.6:col 176
-    * op div *tmp253 *tmp252 2
+  673 op mul *tmp252 :drawItem.6:col 176
+  674 op mul *tmp253 :drawItemColor.6:col 88
   675 op add :drawItemColor.6:iconX 11 *tmp253
-    * op mul *tmp255 :drawItemColor.6:col 176
-    * op div *tmp256 *tmp255 2
-    * op add :drawItemColor.6:barX 22 *tmp256
-    * op mul *tmp258 :drawItemColor.6:col 176
-    * op div *tmp259 *tmp258 2
-    * op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp259
+  676 op mul *tmp255 :drawItem.6:col 176
+  677 op div *tmp256 *tmp252 2
+  678 op add :drawItemColor.6:barX 22 *tmp253
+  679 op mul *tmp258 :drawItem.6:col 176
+  680 op div *tmp259 *tmp252 2
+  681 op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp253
   682 draw col %[white]
-    * op add *tmp261 :drawItemColor.6:y 5
-    * draw image :drawItemColor.6:iconX *tmp261 :drawItemColor.6:item 16 0
-    * draw col :drawItemColor.6:color1
-    * draw rect :drawItemColor.6:barX :drawItemColor.6:y :drawItemColor.6:length 10
-    * draw col :drawItemColor.6:color2
-    * draw lineRect :drawItemColor.6:barX :drawItemColor.6:y :drawItemColor.6:barLength 10
-    * op add *tmp262 :drawItemColor.6:y 5
-    * op add *tmp263 *tmp262 2
+  683 op add *tmp261 :drawItem.6:y 5
+  684 draw image :drawItemColor.6:iconX *tmp261 :drawItem.6:item 16 0
+  685 draw col %008000FF
+  686 draw rect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:length 10
+  687 draw col %00FF00FF
+  688 draw lineRect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:barLength 10
+  689 op add *tmp262 :drawItem.6:y 5
+  690 op add *tmp263 *tmp261 2
   691 set :drawBold.6:x :drawItemColor.6:textX
   692 set :drawBold.6:y *tmp263
   693 set :drawBold.6:alignment @right
-    * set :drawText.20:x :drawBold.6:x
-    * set :drawText.20:y :drawBold.6:y
-    * set :drawText.20:alignment :drawBold.6:alignment
+  694 set :drawText.20:x :drawItemColor.6:textX
+  695 set :drawText.20:y *tmp263
+  696 set :drawText.20:alignment @right
   697 print 40
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  698 draw print :drawBold.6:x :drawBold.6:y :drawBold.6:alignment
   699 label *label127
-    * op add :drawText.21:x :drawBold.6:x 1
-    * set :drawText.21:y :drawBold.6:y
-    * set :drawText.21:alignment :drawBold.6:alignment
+  700 op add :drawText.21:x :drawItemColor.6:textX 1
+  701 set :drawText.21:y *tmp263
+  702 set :drawText.21:alignment @right
   703 print 40
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  704 draw print :drawText.21:x :drawBold.6:y :drawBold.6:alignment
   705 label *label128
   706 label *label126
-    * op add :drawItemColor.6:col :drawItemColor.6:col 1
-    * jump *label129 lessThan :drawItemColor.6:col :drawItemColor.6:columns
+  707 op add :drawItemColor.6:col :drawItem.6:col 1
+  708 jump *label129 lessThan :drawItemColor.6:col :drawItem.6:columns
   709 set :drawItemColor.6:col 0
-    * op sub :drawItemColor.6:y :drawItemColor.6:y 15
+  710 op sub :drawItemColor.6:y :drawItem.6:y 15
   711 label *label129
   712 label *label130
   713 label *label125
-    * set :drawItem.6:col :drawItemColor.6:col
   714 set :drawItem.6:y :drawItemColor.6:y
   715 label *label124
-    * set :updateDisplay:y :drawItem.6:y
+  716 set :updateDisplay:y :drawItemColor.6:y
   717 sensor *tmp267 AÀF@Lc-additive-reconstructor25 @silicon
   718 set :drawItem.7:col 0
-    * set :drawItem.7:y :updateDisplay:y
+  719 set :drawItem.7:y :drawItem.6:y
   720 set :drawItem.7:columns 1
   721 set :drawItem.7:item @silicon
   722 set :drawItem.7:current *tmp267
   723 set :drawItem.7:target 40
   724 set :drawItemColor.7:color1 %008000FF
   725 set :drawItemColor.7:color2 %00FF00FF
-    * set :drawItemColor.7:col :drawItem.7:col
-    * set :drawItemColor.7:y :drawItem.7:y
-    * set :drawItemColor.7:columns :drawItem.7:columns
-    * set :drawItemColor.7:item :drawItem.7:item
-    * set :drawItemColor.7:current :drawItem.7:current
-    * set :drawItemColor.7:target :drawItem.7:target
-    * op mul *tmp268 :drawItemColor.7:columns 176
-    * op div *tmp269 *tmp268 2
+  726 set :drawItemColor.7:col 0
+  727 set :drawItemColor.7:y :updateDisplay:y
+  728 set :drawItemColor.7:columns 1
+  729 set :drawItemColor.7:item @silicon
+  730 set :drawItemColor.7:current *tmp267
+  731 set :drawItemColor.7:target 40
+  732 op mul *tmp268 :drawItem.7:columns 176
+  733 op mul *tmp269 :drawItemColor.7:columns 88
   734 op sub :drawItemColor.7:barLength 214 *tmp269
   735 op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
-    * op mul *tmp272 :drawItemColor.7:barLength :drawItemColor.7:current
-    * op div *tmp273 *tmp272 :drawItemColor.7:target
+  736 op mul *tmp272 :drawItemColor.7:barLength :drawItem.7:current
+  737 op div *tmp273 *tmp272 :drawItem.7:target
   738 op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
-    * op mul *tmp275 :drawItemColor.7:col 176
-    * op div *tmp276 *tmp275 2
+  739 op mul *tmp275 :drawItem.7:col 176
+  740 op mul *tmp276 :drawItemColor.7:col 88
   741 op add :drawItemColor.7:iconX 11 *tmp276
-    * op mul *tmp278 :drawItemColor.7:col 176
-    * op div *tmp279 *tmp278 2
-    * op add :drawItemColor.7:barX 22 *tmp279
-    * op mul *tmp281 :drawItemColor.7:col 176
-    * op div *tmp282 *tmp281 2
-    * op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp282
+  742 op mul *tmp278 :drawItem.7:col 176
+  743 op div *tmp279 *tmp275 2
+  744 op add :drawItemColor.7:barX 22 *tmp276
+  745 op mul *tmp281 :drawItem.7:col 176
+  746 op div *tmp282 *tmp275 2
+  747 op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp276
   748 draw col %[white]
-    * op add *tmp284 :drawItemColor.7:y 5
-    * draw image :drawItemColor.7:iconX *tmp284 :drawItemColor.7:item 16 0
-    * draw col :drawItemColor.7:color1
-    * draw rect :drawItemColor.7:barX :drawItemColor.7:y :drawItemColor.7:length 10
-    * draw col :drawItemColor.7:color2
-    * draw lineRect :drawItemColor.7:barX :drawItemColor.7:y :drawItemColor.7:barLength 10
-    * op add *tmp285 :drawItemColor.7:y 5
-    * op add *tmp286 *tmp285 2
+  749 op add *tmp284 :drawItem.7:y 5
+  750 draw image :drawItemColor.7:iconX *tmp284 :drawItem.7:item 16 0
+  751 draw col %008000FF
+  752 draw rect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:length 10
+  753 draw col %00FF00FF
+  754 draw lineRect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:barLength 10
+  755 op add *tmp285 :drawItem.7:y 5
+  756 op add *tmp286 *tmp284 2
   757 set :drawBold.7:x :drawItemColor.7:textX
   758 set :drawBold.7:y *tmp286
   759 set :drawBold.7:alignment @right
-    * set :drawText.22:x :drawBold.7:x
-    * set :drawText.22:y :drawBold.7:y
-    * set :drawText.22:alignment :drawBold.7:alignment
+  760 set :drawText.22:x :drawItemColor.7:textX
+  761 set :drawText.22:y *tmp286
+  762 set :drawText.22:alignment @right
   763 print 40
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  764 draw print :drawBold.7:x :drawBold.7:y :drawBold.7:alignment
   765 label *label134
-    * op add :drawText.23:x :drawBold.7:x 1
-    * set :drawText.23:y :drawBold.7:y
-    * set :drawText.23:alignment :drawBold.7:alignment
+  766 op add :drawText.23:x :drawItemColor.7:textX 1
+  767 set :drawText.23:y *tmp286
+  768 set :drawText.23:alignment @right
   769 print 40
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  770 draw print :drawText.23:x :drawBold.7:y :drawBold.7:alignment
   771 label *label135
   772 label *label133
-    * op add :drawItemColor.7:col :drawItemColor.7:col 1
-    * jump *label136 lessThan :drawItemColor.7:col :drawItemColor.7:columns
+  773 op add :drawItemColor.7:col :drawItem.7:col 1
+  774 jump *label136 lessThan :drawItemColor.7:col :drawItem.7:columns
   775 set :drawItemColor.7:col 0
-    * op sub :drawItemColor.7:y :drawItemColor.7:y 15
+  776 op sub :drawItemColor.7:y :drawItem.7:y 15
   777 label *label136
   778 label *label137
   779 label *label132
-    * set :drawItem.7:col :drawItemColor.7:col
   780 set :drawItem.7:y :drawItemColor.7:y
   781 label *label131
-    * set :updateDisplay:y :drawItem.7:y
+  782 set :updateDisplay:y :drawItemColor.7:y
   783 jump *label123 always
   784 label *label122
   785 op idiv *tmp291 :drawAddReco:progress 0.01
   786 set :drawItem.8:col 0
-    * set :drawItem.8:y :updateDisplay:y
+  787 set :drawItem.8:y :drawTitleRow.3:y
   788 set :drawItem.8:columns 1
   789 set :drawItem.8:item @poly
   790 set :drawItem.8:current :drawAddReco:progress
   791 set :drawItem.8:target 1
   792 set :drawItemColor.8:color1 %008000FF
   793 set :drawItemColor.8:color2 %00FF00FF
-    * set :drawItemColor.8:col :drawItem.8:col
-    * set :drawItemColor.8:y :drawItem.8:y
-    * set :drawItemColor.8:columns :drawItem.8:columns
-    * set :drawItemColor.8:item :drawItem.8:item
-    * set :drawItemColor.8:current :drawItem.8:current
-    * set :drawItemColor.8:target :drawItem.8:target
-    * op mul *tmp292 :drawItemColor.8:columns 176
-    * op div *tmp293 *tmp292 2
+  794 set :drawItemColor.8:col 0
+  795 set :drawItemColor.8:y :updateDisplay:y
+  796 set :drawItemColor.8:columns 1
+  797 set :drawItemColor.8:item @poly
+  798 set :drawItemColor.8:current :drawAddReco:progress
+  799 set :drawItemColor.8:target 1
+  800 op mul *tmp292 :drawItem.8:columns 176
+  801 op mul *tmp293 :drawItemColor.8:columns 88
   802 op sub :drawItemColor.8:barLength 214 *tmp293
   803 op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
-    * op mul *tmp296 :drawItemColor.8:barLength :drawItemColor.8:current
-    * op div *tmp297 *tmp296 :drawItemColor.8:target
+  804 op mul *tmp296 :drawItemColor.8:barLength :drawItem.8:current
+  805 op div *tmp297 *tmp296 :drawItem.8:target
   806 op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
-    * op mul *tmp299 :drawItemColor.8:col 176
-    * op div *tmp300 *tmp299 2
+  807 op mul *tmp299 :drawItem.8:col 176
+  808 op mul *tmp300 :drawItemColor.8:col 88
   809 op add :drawItemColor.8:iconX 11 *tmp300
-    * op mul *tmp302 :drawItemColor.8:col 176
-    * op div *tmp303 *tmp302 2
-    * op add :drawItemColor.8:barX 22 *tmp303
-    * op mul *tmp305 :drawItemColor.8:col 176
-    * op div *tmp306 *tmp305 2
-    * op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp306
+  810 op mul *tmp302 :drawItem.8:col 176
+  811 op div *tmp303 *tmp299 2
+  812 op add :drawItemColor.8:barX 22 *tmp300
+  813 op mul *tmp305 :drawItem.8:col 176
+  814 op div *tmp306 *tmp299 2
+  815 op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp300
   816 draw col %[white]
-    * op add *tmp308 :drawItemColor.8:y 5
-    * draw image :drawItemColor.8:iconX *tmp308 :drawItemColor.8:item 16 0
-    * draw col :drawItemColor.8:color1
-    * draw rect :drawItemColor.8:barX :drawItemColor.8:y :drawItemColor.8:length 10
-    * draw col :drawItemColor.8:color2
-    * draw lineRect :drawItemColor.8:barX :drawItemColor.8:y :drawItemColor.8:barLength 10
-    * op add *tmp309 :drawItemColor.8:y 5
-    * op add *tmp310 *tmp309 2
+  817 op add *tmp308 :drawItem.8:y 5
+  818 draw image :drawItemColor.8:iconX *tmp308 :drawItem.8:item 16 0
+  819 draw col %008000FF
+  820 draw rect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:length 10
+  821 draw col %00FF00FF
+  822 draw lineRect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:barLength 10
+  823 op add *tmp309 :drawItem.8:y 5
+  824 op add *tmp310 *tmp308 2
   825 set :drawBold.8:x :drawItemColor.8:textX
   826 set :drawBold.8:y *tmp310
   827 set :drawBold.8:alignment @right
-    * set :drawText.24:x :drawBold.8:x
-    * set :drawText.24:y :drawBold.8:y
-    * set :drawText.24:alignment :drawBold.8:alignment
+  828 set :drawText.24:x :drawItemColor.8:textX
+  829 set :drawText.24:y *tmp310
+  830 set :drawText.24:alignment @right
   831 print *tmp291
   832 print "%"
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  833 draw print :drawBold.8:x :drawBold.8:y :drawBold.8:alignment
   834 label *label141
-    * op add :drawText.25:x :drawBold.8:x 1
-    * set :drawText.25:y :drawBold.8:y
-    * set :drawText.25:alignment :drawBold.8:alignment
+  835 op add :drawText.25:x :drawItemColor.8:textX 1
+  836 set :drawText.25:y *tmp310
+  837 set :drawText.25:alignment @right
   838 print *tmp291
   839 print "%"
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  840 draw print :drawText.25:x :drawBold.8:y :drawBold.8:alignment
   841 label *label142
   842 label *label140
-    * op add :drawItemColor.8:col :drawItemColor.8:col 1
-    * jump *label143 lessThan :drawItemColor.8:col :drawItemColor.8:columns
+  843 op add :drawItemColor.8:col :drawItem.8:col 1
+  844 jump *label143 lessThan :drawItemColor.8:col :drawItem.8:columns
   845 set :drawItemColor.8:col 0
-    * op sub :drawItemColor.8:y :drawItemColor.8:y 15
+  846 op sub :drawItemColor.8:y :drawItem.8:y 15
   847 label *label143
   848 label *label144
   849 label *label139
-    * set :drawItem.8:col :drawItemColor.8:col
   850 set :drawItem.8:y :drawItemColor.8:y
   851 label *label138
-    * set :updateDisplay:y :drawItem.8:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  852 set :updateDisplay:y :drawItemColor.8:y
+  853 op sub :updateDisplay:y :drawItem.8:y 15
   854 label *label123
   855 op sub :updateDisplay:y :updateDisplay:y 5
   856 label *label116
 
   863 set :drawTitleRow.4:y :updateDisplay:y
   864 set :drawTitleRow.4:alignment @bottomLeft
   865 set :drawText.26:x 22
-    * set :drawText.26:y :drawTitleRow.4:y
-    * set :drawText.26:alignment :drawTitleRow.4:alignment
+  866 set :drawText.26:y :updateDisplay:y
+  867 set :drawText.26:alignment @bottomLeft
   868 print "Reconstructor"
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  869 draw print 22 :drawTitleRow.4:y :drawTitleRow.4:alignment
   870 label *label149
   871 set :drawText.27:x 23
-    * set :drawText.27:y :drawTitleRow.4:y
-    * set :drawText.27:alignment :drawTitleRow.4:alignment
+  872 set :drawText.27:y :updateDisplay:y
+  873 set :drawText.27:alignment @bottomLeft
   874 print "Reconstructor"
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  875 draw print 23 :drawTitleRow.4:y :drawTitleRow.4:alignment
   876 label *label150
-    * op sub :drawTitleRow.4:y :drawTitleRow.4:y 15
+  877 op sub :drawTitleRow.4:y :updateDisplay:y 15
   878 label *label148
   879 set :updateDisplay:y :drawTitleRow.4:y
   880 sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconstructor26 @progress
   881 jump *label151 notEqual :drawMultiReco:progress 0
   882 sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metaglass
   883 set :drawItem.9:col 0
-    * set :drawItem.9:y :updateDisplay:y
+  884 set :drawItem.9:y :drawTitleRow.4:y
   885 set :drawItem.9:columns 1
   886 set :drawItem.9:item @metaglass
   887 set :drawItem.9:current *tmp320
   888 set :drawItem.9:target 40
   889 set :drawItemColor.9:color1 %008000FF
   890 set :drawItemColor.9:color2 %00FF00FF
-    * set :drawItemColor.9:col :drawItem.9:col
-    * set :drawItemColor.9:y :drawItem.9:y
-    * set :drawItemColor.9:columns :drawItem.9:columns
-    * set :drawItemColor.9:item :drawItem.9:item
-    * set :drawItemColor.9:current :drawItem.9:current
-    * set :drawItemColor.9:target :drawItem.9:target
-    * op mul *tmp321 :drawItemColor.9:columns 176
-    * op div *tmp322 *tmp321 2
+  891 set :drawItemColor.9:col 0
+  892 set :drawItemColor.9:y :updateDisplay:y
+  893 set :drawItemColor.9:columns 1
+  894 set :drawItemColor.9:item @metaglass
+  895 set :drawItemColor.9:current *tmp320
+  896 set :drawItemColor.9:target 40
+  897 op mul *tmp321 :drawItem.9:columns 176
+  898 op mul *tmp322 :drawItemColor.9:columns 88
   899 op sub :drawItemColor.9:barLength 214 *tmp322
   900 op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
-    * op mul *tmp325 :drawItemColor.9:barLength :drawItemColor.9:current
-    * op div *tmp326 *tmp325 :drawItemColor.9:target
+  901 op mul *tmp325 :drawItemColor.9:barLength :drawItem.9:current
+  902 op div *tmp326 *tmp325 :drawItem.9:target
   903 op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
-    * op mul *tmp328 :drawItemColor.9:col 176
-    * op div *tmp329 *tmp328 2
+  904 op mul *tmp328 :drawItem.9:col 176
+  905 op mul *tmp329 :drawItemColor.9:col 88
   906 op add :drawItemColor.9:iconX 11 *tmp329
-    * op mul *tmp331 :drawItemColor.9:col 176
-    * op div *tmp332 *tmp331 2
-    * op add :drawItemColor.9:barX 22 *tmp332
-    * op mul *tmp334 :drawItemColor.9:col 176
-    * op div *tmp335 *tmp334 2
-    * op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp335
+  907 op mul *tmp331 :drawItem.9:col 176
+  908 op div *tmp332 *tmp328 2
+  909 op add :drawItemColor.9:barX 22 *tmp329
+  910 op mul *tmp334 :drawItem.9:col 176
+  911 op div *tmp335 *tmp328 2
+  912 op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp329
   913 draw col %[white]
-    * op add *tmp337 :drawItemColor.9:y 5
-    * draw image :drawItemColor.9:iconX *tmp337 :drawItemColor.9:item 16 0
-    * draw col :drawItemColor.9:color1
-    * draw rect :drawItemColor.9:barX :drawItemColor.9:y :drawItemColor.9:length 10
-    * draw col :drawItemColor.9:color2
-    * draw lineRect :drawItemColor.9:barX :drawItemColor.9:y :drawItemColor.9:barLength 10
-    * op add *tmp338 :drawItemColor.9:y 5
-    * op add *tmp339 *tmp338 2
+  914 op add *tmp337 :drawItem.9:y 5
+  915 draw image :drawItemColor.9:iconX *tmp337 :drawItem.9:item 16 0
+  916 draw col %008000FF
+  917 draw rect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:length 10
+  918 draw col %00FF00FF
+  919 draw lineRect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:barLength 10
+  920 op add *tmp338 :drawItem.9:y 5
+  921 op add *tmp339 *tmp337 2
   922 set :drawBold.9:x :drawItemColor.9:textX
   923 set :drawBold.9:y *tmp339
   924 set :drawBold.9:alignment @right
-    * set :drawText.28:x :drawBold.9:x
-    * set :drawText.28:y :drawBold.9:y
-    * set :drawText.28:alignment :drawBold.9:alignment
+  925 set :drawText.28:x :drawItemColor.9:textX
+  926 set :drawText.28:y *tmp339
+  927 set :drawText.28:alignment @right
   928 print 40
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  929 draw print :drawBold.9:x :drawBold.9:y :drawBold.9:alignment
   930 label *label156
-    * op add :drawText.29:x :drawBold.9:x 1
-    * set :drawText.29:y :drawBold.9:y
-    * set :drawText.29:alignment :drawBold.9:alignment
+  931 op add :drawText.29:x :drawItemColor.9:textX 1
+  932 set :drawText.29:y *tmp339
+  933 set :drawText.29:alignment @right
   934 print 40
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  935 draw print :drawText.29:x :drawBold.9:y :drawBold.9:alignment
   936 label *label157
   937 label *label155
-    * op add :drawItemColor.9:col :drawItemColor.9:col 1
-    * jump *label158 lessThan :drawItemColor.9:col :drawItemColor.9:columns
+  938 op add :drawItemColor.9:col :drawItem.9:col 1
+  939 jump *label158 lessThan :drawItemColor.9:col :drawItem.9:columns
   940 set :drawItemColor.9:col 0
-    * op sub :drawItemColor.9:y :drawItemColor.9:y 15
+  941 op sub :drawItemColor.9:y :drawItem.9:y 15
   942 label *label158
   943 label *label159
   944 label *label154
-    * set :drawItem.9:col :drawItemColor.9:col
   945 set :drawItem.9:y :drawItemColor.9:y
   946 label *label153
-    * set :updateDisplay:y :drawItem.9:y
+  947 set :updateDisplay:y :drawItemColor.9:y
   948 sensor *tmp343 AÁNBJd-multiplicative-reconstructor26 @titanium
   949 set :drawItem.10:col 0
-    * set :drawItem.10:y :updateDisplay:y
+  950 set :drawItem.10:y :drawItem.9:y
   951 set :drawItem.10:columns 1
   952 set :drawItem.10:item @titanium
   953 set :drawItem.10:current *tmp343
   954 set :drawItem.10:target 80
   955 set :drawItemColor.10:color1 %008000FF
   956 set :drawItemColor.10:color2 %00FF00FF
-    * set :drawItemColor.10:col :drawItem.10:col
-    * set :drawItemColor.10:y :drawItem.10:y
-    * set :drawItemColor.10:columns :drawItem.10:columns
-    * set :drawItemColor.10:item :drawItem.10:item
-    * set :drawItemColor.10:current :drawItem.10:current
-    * set :drawItemColor.10:target :drawItem.10:target
-    * op mul *tmp344 :drawItemColor.10:columns 176
-    * op div *tmp345 *tmp344 2
+  957 set :drawItemColor.10:col 0
+  958 set :drawItemColor.10:y :updateDisplay:y
+  959 set :drawItemColor.10:columns 1
+  960 set :drawItemColor.10:item @titanium
+  961 set :drawItemColor.10:current *tmp343
+  962 set :drawItemColor.10:target 80
+  963 op mul *tmp344 :drawItem.10:columns 176
+  964 op mul *tmp345 :drawItemColor.10:columns 88
   965 op sub :drawItemColor.10:barLength 214 *tmp345
   966 op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
-    * op mul *tmp348 :drawItemColor.10:barLength :drawItemColor.10:current
-    * op div *tmp349 *tmp348 :drawItemColor.10:target
+  967 op mul *tmp348 :drawItemColor.10:barLength :drawItem.10:current
+  968 op div *tmp349 *tmp348 :drawItem.10:target
   969 op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
-    * op mul *tmp351 :drawItemColor.10:col 176
-    * op div *tmp352 *tmp351 2
+  970 op mul *tmp351 :drawItem.10:col 176
+  971 op mul *tmp352 :drawItemColor.10:col 88
   972 op add :drawItemColor.10:iconX 11 *tmp352
-    * op mul *tmp354 :drawItemColor.10:col 176
-    * op div *tmp355 *tmp354 2
-    * op add :drawItemColor.10:barX 22 *tmp355
-    * op mul *tmp357 :drawItemColor.10:col 176
-    * op div *tmp358 *tmp357 2
-    * op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp358
+  973 op mul *tmp354 :drawItem.10:col 176
+  974 op div *tmp355 *tmp351 2
+  975 op add :drawItemColor.10:barX 22 *tmp352
+  976 op mul *tmp357 :drawItem.10:col 176
+  977 op div *tmp358 *tmp351 2
+  978 op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp352
   979 draw col %[white]
-    * op add *tmp360 :drawItemColor.10:y 5
-    * draw image :drawItemColor.10:iconX *tmp360 :drawItemColor.10:item 16 0
-    * draw col :drawItemColor.10:color1
-    * draw rect :drawItemColor.10:barX :drawItemColor.10:y :drawItemColor.10:length 10
-    * draw col :drawItemColor.10:color2
-    * draw lineRect :drawItemColor.10:barX :drawItemColor.10:y :drawItemColor.10:barLength 10
-    * op add *tmp361 :drawItemColor.10:y 5
-    * op add *tmp362 *tmp361 2
+  980 op add *tmp360 :drawItem.10:y 5
+  981 draw image :drawItemColor.10:iconX *tmp360 :drawItem.10:item 16 0
+  982 draw col %008000FF
+  983 draw rect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:length 10
+  984 draw col %00FF00FF
+  985 draw lineRect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:barLength 10
+  986 op add *tmp361 :drawItem.10:y 5
+  987 op add *tmp362 *tmp360 2
   988 set :drawBold.10:x :drawItemColor.10:textX
   989 set :drawBold.10:y *tmp362
   990 set :drawBold.10:alignment @right
-    * set :drawText.30:x :drawBold.10:x
-    * set :drawText.30:y :drawBold.10:y
-    * set :drawText.30:alignment :drawBold.10:alignment
+  991 set :drawText.30:x :drawItemColor.10:textX
+  992 set :drawText.30:y *tmp362
+  993 set :drawText.30:alignment @right
   994 print 80
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  995 draw print :drawBold.10:x :drawBold.10:y :drawBold.10:alignment
   996 label *label163
-    * op add :drawText.31:x :drawBold.10:x 1
-    * set :drawText.31:y :drawBold.10:y
-    * set :drawText.31:alignment :drawBold.10:alignment
+  997 op add :drawText.31:x :drawItemColor.10:textX 1
+  998 set :drawText.31:y *tmp362
+  999 set :drawText.31:alignment @right
  1000 print 80
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+ 1001 draw print :drawText.31:x :drawBold.10:y :drawBold.10:alignment
  1002 label *label164
  1003 label *label162
-    * op add :drawItemColor.10:col :drawItemColor.10:col 1
-    * jump *label165 lessThan :drawItemColor.10:col :drawItemColor.10:columns
+ 1004 op add :drawItemColor.10:col :drawItem.10:col 1
+ 1005 jump *label165 lessThan :drawItemColor.10:col :drawItem.10:columns
  1006 set :drawItemColor.10:col 0
-    * op sub :drawItemColor.10:y :drawItemColor.10:y 15
+ 1007 op sub :drawItemColor.10:y :drawItem.10:y 15
  1008 label *label165
  1009 label *label166
  1010 label *label161
-    * set :drawItem.10:col :drawItemColor.10:col
  1011 set :drawItem.10:y :drawItemColor.10:y
  1012 label *label160
-    * set :updateDisplay:y :drawItem.10:y
+ 1013 set :updateDisplay:y :drawItemColor.10:y
  1014 sensor *tmp366 AÁNBJd-multiplicative-reconstructor26 @silicon
  1015 set :drawItem.11:col 0
-    * set :drawItem.11:y :updateDisplay:y
+ 1016 set :drawItem.11:y :drawItem.10:y
  1017 set :drawItem.11:columns 1
  1018 set :drawItem.11:item @silicon
  1019 set :drawItem.11:current *tmp366
  1020 set :drawItem.11:target 130
  1021 set :drawItemColor.11:color1 %008000FF
  1022 set :drawItemColor.11:color2 %00FF00FF
-    * set :drawItemColor.11:col :drawItem.11:col
-    * set :drawItemColor.11:y :drawItem.11:y
-    * set :drawItemColor.11:columns :drawItem.11:columns
-    * set :drawItemColor.11:item :drawItem.11:item
-    * set :drawItemColor.11:current :drawItem.11:current
-    * set :drawItemColor.11:target :drawItem.11:target
-    * op mul *tmp367 :drawItemColor.11:columns 176
-    * op div *tmp368 *tmp367 2
+ 1023 set :drawItemColor.11:col 0
+ 1024 set :drawItemColor.11:y :updateDisplay:y
+ 1025 set :drawItemColor.11:columns 1
+ 1026 set :drawItemColor.11:item @silicon
+ 1027 set :drawItemColor.11:current *tmp366
+ 1028 set :drawItemColor.11:target 130
+ 1029 op mul *tmp367 :drawItem.11:columns 176
+ 1030 op mul *tmp368 :drawItemColor.11:columns 88
  1031 op sub :drawItemColor.11:barLength 214 *tmp368
  1032 op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
-    * op mul *tmp371 :drawItemColor.11:barLength :drawItemColor.11:current
-    * op div *tmp372 *tmp371 :drawItemColor.11:target
+ 1033 op mul *tmp371 :drawItemColor.11:barLength :drawItem.11:current
+ 1034 op div *tmp372 *tmp371 :drawItem.11:target
  1035 op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
-    * op mul *tmp374 :drawItemColor.11:col 176
-    * op div *tmp375 *tmp374 2
+ 1036 op mul *tmp374 :drawItem.11:col 176
+ 1037 op mul *tmp375 :drawItemColor.11:col 88
  1038 op add :drawItemColor.11:iconX 11 *tmp375
-    * op mul *tmp377 :drawItemColor.11:col 176
-    * op div *tmp378 *tmp377 2
-    * op add :drawItemColor.11:barX 22 *tmp378
-    * op mul *tmp380 :drawItemColor.11:col 176
-    * op div *tmp381 *tmp380 2
-    * op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp381
+ 1039 op mul *tmp377 :drawItem.11:col 176
+ 1040 op div *tmp378 *tmp374 2
+ 1041 op add :drawItemColor.11:barX 22 *tmp375
+ 1042 op mul *tmp380 :drawItem.11:col 176
+ 1043 op div *tmp381 *tmp374 2
+ 1044 op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp375
  1045 draw col %[white]
-    * op add *tmp383 :drawItemColor.11:y 5
-    * draw image :drawItemColor.11:iconX *tmp383 :drawItemColor.11:item 16 0
-    * draw col :drawItemColor.11:color1
-    * draw rect :drawItemColor.11:barX :drawItemColor.11:y :drawItemColor.11:length 10
-    * draw col :drawItemColor.11:color2
-    * draw lineRect :drawItemColor.11:barX :drawItemColor.11:y :drawItemColor.11:barLength 10
-    * op add *tmp384 :drawItemColor.11:y 5
-    * op add *tmp385 *tmp384 2
+ 1046 op add *tmp383 :drawItem.11:y 5
+ 1047 draw image :drawItemColor.11:iconX *tmp383 :drawItem.11:item 16 0
+ 1048 draw col %008000FF
+ 1049 draw rect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:length 10
+ 1050 draw col %00FF00FF
+ 1051 draw lineRect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:barLength 10
+ 1052 op add *tmp384 :drawItem.11:y 5
+ 1053 op add *tmp385 *tmp383 2
  1054 set :drawBold.11:x :drawItemColor.11:textX
  1055 set :drawBold.11:y *tmp385
  1056 set :drawBold.11:alignment @right
-    * set :drawText.32:x :drawBold.11:x
-    * set :drawText.32:y :drawBold.11:y
-    * set :drawText.32:alignment :drawBold.11:alignment
+ 1057 set :drawText.32:x :drawItemColor.11:textX
+ 1058 set :drawText.32:y *tmp385
+ 1059 set :drawText.32:alignment @right
  1060 print 130
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+ 1061 draw print :drawBold.11:x :drawBold.11:y :drawBold.11:alignment
  1062 label *label170
-    * op add :drawText.33:x :drawBold.11:x 1
-    * set :drawText.33:y :drawBold.11:y
-    * set :drawText.33:alignment :drawBold.11:alignment
+ 1063 op add :drawText.33:x :drawItemColor.11:textX 1
+ 1064 set :drawText.33:y *tmp385
+ 1065 set :drawText.33:alignment @right
  1066 print 130
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1067 draw print :drawText.33:x :drawBold.11:y :drawBold.11:alignment
  1068 label *label171
  1069 label *label169
-    * op add :drawItemColor.11:col :drawItemColor.11:col 1
-    * jump *label172 lessThan :drawItemColor.11:col :drawItemColor.11:columns
+ 1070 op add :drawItemColor.11:col :drawItem.11:col 1
+ 1071 jump *label172 lessThan :drawItemColor.11:col :drawItem.11:columns
  1072 set :drawItemColor.11:col 0
-    * op sub :drawItemColor.11:y :drawItemColor.11:y 15
+ 1073 op sub :drawItemColor.11:y :drawItem.11:y 15
  1074 label *label172
  1075 label *label173
  1076 label *label168
-    * set :drawItem.11:col :drawItemColor.11:col
  1077 set :drawItem.11:y :drawItemColor.11:y
  1078 label *label167
-    * set :updateDisplay:y :drawItem.11:y
+ 1079 set :updateDisplay:y :drawItemColor.11:y
  1080 jump *label152 always
  1081 label *label151
  1082 op idiv *tmp390 :drawMultiReco:progress 0.01
  1083 set :drawItem.12:col 0
-    * set :drawItem.12:y :updateDisplay:y
+ 1084 set :drawItem.12:y :drawTitleRow.4:y
  1085 set :drawItem.12:columns 1
  1086 set :drawItem.12:item @mega
  1087 set :drawItem.12:current :drawMultiReco:progress
  1088 set :drawItem.12:target 1
  1089 set :drawItemColor.12:color1 %008000FF
  1090 set :drawItemColor.12:color2 %00FF00FF
-    * set :drawItemColor.12:col :drawItem.12:col
-    * set :drawItemColor.12:y :drawItem.12:y
-    * set :drawItemColor.12:columns :drawItem.12:columns
-    * set :drawItemColor.12:item :drawItem.12:item
-    * set :drawItemColor.12:current :drawItem.12:current
-    * set :drawItemColor.12:target :drawItem.12:target
-    * op mul *tmp391 :drawItemColor.12:columns 176
-    * op div *tmp392 *tmp391 2
+ 1091 set :drawItemColor.12:col 0
+ 1092 set :drawItemColor.12:y :updateDisplay:y
+ 1093 set :drawItemColor.12:columns 1
+ 1094 set :drawItemColor.12:item @mega
+ 1095 set :drawItemColor.12:current :drawMultiReco:progress
+ 1096 set :drawItemColor.12:target 1
+ 1097 op mul *tmp391 :drawItem.12:columns 176
+ 1098 op mul *tmp392 :drawItemColor.12:columns 88
  1099 op sub :drawItemColor.12:barLength 214 *tmp392
  1100 op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
-    * op mul *tmp395 :drawItemColor.12:barLength :drawItemColor.12:current
-    * op div *tmp396 *tmp395 :drawItemColor.12:target
+ 1101 op mul *tmp395 :drawItemColor.12:barLength :drawItem.12:current
+ 1102 op div *tmp396 *tmp395 :drawItem.12:target
  1103 op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
-    * op mul *tmp398 :drawItemColor.12:col 176
-    * op div *tmp399 *tmp398 2
+ 1104 op mul *tmp398 :drawItem.12:col 176
+ 1105 op mul *tmp399 :drawItemColor.12:col 88
  1106 op add :drawItemColor.12:iconX 11 *tmp399
-    * op mul *tmp401 :drawItemColor.12:col 176
-    * op div *tmp402 *tmp401 2
-    * op add :drawItemColor.12:barX 22 *tmp402
-    * op mul *tmp404 :drawItemColor.12:col 176
-    * op div *tmp405 *tmp404 2
-    * op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp405
+ 1107 op mul *tmp401 :drawItem.12:col 176
+ 1108 op div *tmp402 *tmp398 2
+ 1109 op add :drawItemColor.12:barX 22 *tmp399
+ 1110 op mul *tmp404 :drawItem.12:col 176
+ 1111 op div *tmp405 *tmp398 2
+ 1112 op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp399
  1113 draw col %[white]
-    * op add *tmp407 :drawItemColor.12:y 5
-    * draw image :drawItemColor.12:iconX *tmp407 :drawItemColor.12:item 16 0
-    * draw col :drawItemColor.12:color1
-    * draw rect :drawItemColor.12:barX :drawItemColor.12:y :drawItemColor.12:length 10
-    * draw col :drawItemColor.12:color2
-    * draw lineRect :drawItemColor.12:barX :drawItemColor.12:y :drawItemColor.12:barLength 10
-    * op add *tmp408 :drawItemColor.12:y 5
-    * op add *tmp409 *tmp408 2
+ 1114 op add *tmp407 :drawItem.12:y 5
+ 1115 draw image :drawItemColor.12:iconX *tmp407 :drawItem.12:item 16 0
+ 1116 draw col %008000FF
+ 1117 draw rect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:length 10
+ 1118 draw col %00FF00FF
+ 1119 draw lineRect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:barLength 10
+ 1120 op add *tmp408 :drawItem.12:y 5
+ 1121 op add *tmp409 *tmp407 2
  1122 set :drawBold.12:x :drawItemColor.12:textX
  1123 set :drawBold.12:y *tmp409
  1124 set :drawBold.12:alignment @right
-    * set :drawText.34:x :drawBold.12:x
-    * set :drawText.34:y :drawBold.12:y
-    * set :drawText.34:alignment :drawBold.12:alignment
+ 1125 set :drawText.34:x :drawItemColor.12:textX
+ 1126 set :drawText.34:y *tmp409
+ 1127 set :drawText.34:alignment @right
  1128 print *tmp390
  1129 print "%"
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1130 draw print :drawBold.12:x :drawBold.12:y :drawBold.12:alignment
  1131 label *label177
-    * op add :drawText.35:x :drawBold.12:x 1
-    * set :drawText.35:y :drawBold.12:y
-    * set :drawText.35:alignment :drawBold.12:alignment
+ 1132 op add :drawText.35:x :drawItemColor.12:textX 1
+ 1133 set :drawText.35:y *tmp409
+ 1134 set :drawText.35:alignment @right
  1135 print *tmp390
  1136 print "%"
-    * draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
+ 1137 draw print :drawText.35:x :drawBold.12:y :drawBold.12:alignment
  1138 label *label178
  1139 label *label176
-    * op add :drawItemColor.12:col :drawItemColor.12:col 1
-    * jump *label179 lessThan :drawItemColor.12:col :drawItemColor.12:columns
+ 1140 op add :drawItemColor.12:col :drawItem.12:col 1
+ 1141 jump *label179 lessThan :drawItemColor.12:col :drawItem.12:columns
  1142 set :drawItemColor.12:col 0
-    * op sub :drawItemColor.12:y :drawItemColor.12:y 15
+ 1143 op sub :drawItemColor.12:y :drawItem.12:y 15
  1144 label *label179
  1145 label *label180
  1146 label *label175
-    * set :drawItem.12:col :drawItemColor.12:col
  1147 set :drawItem.12:y :drawItemColor.12:y
  1148 label *label174
-    * set :updateDisplay:y :drawItem.12:y
-    * op sub :updateDisplay:y :updateDisplay:y 30
+ 1149 set :updateDisplay:y :drawItemColor.12:y
+ 1150 op sub :updateDisplay:y :drawItem.12:y 30
  1151 label *label152
  1152 op sub :updateDisplay:y :updateDisplay:y 5
  1153 label *label145
 
  1160 set :drawTitleRow.5:y :updateDisplay:y
  1161 set :drawTitleRow.5:alignment @bottomLeft
  1162 set :drawText.36:x 22
-    * set :drawText.36:y :drawTitleRow.5:y
-    * set :drawText.36:alignment :drawTitleRow.5:alignment
+ 1163 set :drawText.36:y :updateDisplay:y
+ 1164 set :drawText.36:alignment @bottomLeft
  1165 print "Builder"
-    * draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
+ 1166 draw print 22 :drawTitleRow.5:y :drawTitleRow.5:alignment
  1167 label *label185
  1168 set :drawText.37:x 23
-    * set :drawText.37:y :drawTitleRow.5:y
-    * set :drawText.37:alignment :drawTitleRow.5:alignment
+ 1169 set :drawText.37:y :updateDisplay:y
+ 1170 set :drawText.37:alignment @bottomLeft
  1171 print "Builder"
-    * draw print :drawText.37:x :drawText.37:y :drawText.37:alignment
+ 1172 draw print 23 :drawTitleRow.5:y :drawTitleRow.5:alignment
  1173 label *label186
-    * op sub :drawTitleRow.5:y :drawTitleRow.5:y 15
+ 1174 op sub :drawTitleRow.5:y :updateDisplay:y 15
  1175 label *label184
  1176 set :updateDisplay:y :drawTitleRow.5:y
  1177 jump *label187 notEqual .transportItem null
  1178 set :drawUnit:item @poly
  1179 set :drawUnit:items 0
-    * set :drawUnit:y :updateDisplay:y
+ 1180 set :drawUnit:y :drawTitleRow.5:y
  1181 set :drawItem.13:col 0
-    * set :drawItem.13:y :drawUnit:y
+ 1182 set :drawItem.13:y :updateDisplay:y
  1183 set :drawItem.13:columns 1
-    * set :drawItem.13:item :drawUnit:item
-    * set :drawItem.13:current :drawUnit:items
+ 1184 set :drawItem.13:item @poly
+ 1185 set :drawItem.13:current 0
  1186 set :drawItem.13:target .transportTarget
  1187 set :drawItemColor.13:color1 %008000FF
  1188 set :drawItemColor.13:color2 %00FF00FF
-    * set :drawItemColor.13:col :drawItem.13:col
-    * set :drawItemColor.13:y :drawItem.13:y
-    * set :drawItemColor.13:columns :drawItem.13:columns
-    * set :drawItemColor.13:item :drawItem.13:item
-    * set :drawItemColor.13:current :drawItem.13:current
+ 1189 set :drawItemColor.13:col 0
+ 1190 set :drawItemColor.13:y :drawUnit:y
+ 1191 set :drawItemColor.13:columns 1
+ 1192 set :drawItemColor.13:item :drawUnit:item
+ 1193 set :drawItemColor.13:current :drawUnit:items
  1194 set :drawItemColor.13:target :drawItem.13:target
-    * op mul *tmp417 :drawItemColor.13:columns 176
-    * op div *tmp418 *tmp417 2
+ 1195 op mul *tmp417 :drawItem.13:columns 176
+ 1196 op mul *tmp418 :drawItemColor.13:columns 88
  1197 op sub :drawItemColor.13:barLength 214 *tmp418
  1198 op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
-    * op mul *tmp421 :drawItemColor.13:barLength :drawItemColor.13:current
-    * op div *tmp422 *tmp421 :drawItemColor.13:target
+ 1199 op mul *tmp421 :drawItemColor.13:barLength :drawItem.13:current
+ 1200 op div *tmp422 *tmp421 :drawItem.13:target
  1201 op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
-    * op mul *tmp424 :drawItemColor.13:col 176
-    * op div *tmp425 *tmp424 2
+ 1202 op mul *tmp424 :drawItem.13:col 176
+ 1203 op mul *tmp425 :drawItemColor.13:col 88
  1204 op add :drawItemColor.13:iconX 11 *tmp425
-    * op mul *tmp427 :drawItemColor.13:col 176
-    * op div *tmp428 *tmp427 2
-    * op add :drawItemColor.13:barX 22 *tmp428
-    * op mul *tmp430 :drawItemColor.13:col 176
-    * op div *tmp431 *tmp430 2
-    * op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp431
+ 1205 op mul *tmp427 :drawItem.13:col 176
+ 1206 op div *tmp428 *tmp424 2
+ 1207 op add :drawItemColor.13:barX 22 *tmp425
+ 1208 op mul *tmp430 :drawItem.13:col 176
+ 1209 op div *tmp431 *tmp424 2
+ 1210 op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp425
  1211 draw col %[white]
-    * op add *tmp433 :drawItemColor.13:y 5
-    * draw image :drawItemColor.13:iconX *tmp433 :drawItemColor.13:item 16 0
-    * draw col :drawItemColor.13:color1
-    * draw rect :drawItemColor.13:barX :drawItemColor.13:y :drawItemColor.13:length 10
-    * draw col :drawItemColor.13:color2
-    * draw lineRect :drawItemColor.13:barX :drawItemColor.13:y :drawItemColor.13:barLength 10
-    * op add *tmp434 :drawItemColor.13:y 5
-    * op add *tmp435 *tmp434 2
+ 1212 op add *tmp433 :drawItem.13:y 5
+ 1213 draw image :drawItemColor.13:iconX *tmp433 :drawItem.13:item 16 0
+ 1214 draw col %008000FF
+ 1215 draw rect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:length 10
+ 1216 draw col %00FF00FF
+ 1217 draw lineRect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:barLength 10
+ 1218 op add *tmp434 :drawItem.13:y 5
+ 1219 op add *tmp435 *tmp433 2
  1220 set :drawBold.13:x :drawItemColor.13:textX
  1221 set :drawBold.13:y *tmp435
  1222 set :drawBold.13:alignment @right
-    * set :drawText.38:x :drawBold.13:x
-    * set :drawText.38:y :drawBold.13:y
-    * set :drawText.38:alignment :drawBold.13:alignment
+ 1223 set :drawText.38:x :drawItemColor.13:textX
+ 1224 set :drawText.38:y *tmp435
+ 1225 set :drawText.38:alignment @right
  1226 print .transportTarget
-    * draw print :drawText.38:x :drawText.38:y :drawText.38:alignment
+ 1227 draw print :drawBold.13:x :drawBold.13:y :drawBold.13:alignment
  1228 label *label193
-    * op add :drawText.39:x :drawBold.13:x 1
-    * set :drawText.39:y :drawBold.13:y
-    * set :drawText.39:alignment :drawBold.13:alignment
+ 1229 op add :drawText.39:x :drawItemColor.13:textX 1
+ 1230 set :drawText.39:y *tmp435
+ 1231 set :drawText.39:alignment @right
  1232 print .transportTarget
-    * draw print :drawText.39:x :drawText.39:y :drawText.39:alignment
+ 1233 draw print :drawText.39:x :drawBold.13:y :drawBold.13:alignment
  1234 label *label194
  1235 label *label192
-    * op add :drawItemColor.13:col :drawItemColor.13:col 1
-    * jump *label195 lessThan :drawItemColor.13:col :drawItemColor.13:columns
+ 1236 op add :drawItemColor.13:col :drawItem.13:col 1
+ 1237 jump *label195 lessThan :drawItemColor.13:col :drawItem.13:columns
  1238 set :drawItemColor.13:col 0
-    * op sub :drawItemColor.13:y :drawItemColor.13:y 15
+ 1239 op sub :drawItemColor.13:y :drawItem.13:y 15
  1240 label *label195
  1241 label *label196
  1242 label *label191
-    * set :drawItem.13:col :drawItemColor.13:col
  1243 set :drawItem.13:y :drawItemColor.13:y
  1244 label *label190
-    * set :drawUnit:y :drawItem.13:y
+ 1245 set :drawUnit:y :drawItemColor.13:y
  1246 label *label189
-    * set :updateDisplay:y :drawUnit:y
+ 1247 set :updateDisplay:y :drawItem.13:y
  1248 jump *label188 always
  1249 label *label187
  1250 sensor :drawBuilder:unitItem @unit @firstItem
 
  1253 op mul *tmp444 *tmp442 *tmp443
  1254 set :drawUnit.1:item .transportItem
  1255 set :drawUnit.1:items *tmp444
-    * set :drawUnit.1:y :updateDisplay:y
+ 1256 set :drawUnit.1:y :drawTitleRow.5:y
  1257 set :drawItem.14:col 0
-    * set :drawItem.14:y :drawUnit.1:y
+ 1258 set :drawItem.14:y :updateDisplay:y
  1259 set :drawItem.14:columns 1
  1260 set :drawItem.14:item :drawUnit.1:item
-    * set :drawItem.14:current :drawUnit.1:items
+ 1261 set :drawItem.14:current *tmp444
  1262 set :drawItem.14:target .transportTarget
  1263 set :drawItemColor.14:color1 %008000FF
  1264 set :drawItemColor.14:color2 %00FF00FF
-    * set :drawItemColor.14:col :drawItem.14:col
-    * set :drawItemColor.14:y :drawItem.14:y
-    * set :drawItemColor.14:columns :drawItem.14:columns
-    * set :drawItemColor.14:item :drawItem.14:item
-    * set :drawItemColor.14:current :drawItem.14:current
+ 1265 set :drawItemColor.14:col 0
+ 1266 set :drawItemColor.14:y :drawUnit.1:y
+ 1267 set :drawItemColor.14:columns 1
+ 1268 set :drawItemColor.14:item :drawUnit.1:item
+ 1269 set :drawItemColor.14:current :drawUnit.1:items
  1270 set :drawItemColor.14:target :drawItem.14:target
-    * op mul *tmp445 :drawItemColor.14:columns 176
-    * op div *tmp446 *tmp445 2
+ 1271 op mul *tmp445 :drawItem.14:columns 176
+ 1272 op mul *tmp446 :drawItemColor.14:columns 88
  1273 op sub :drawItemColor.14:barLength 214 *tmp446
  1274 op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
-    * op mul *tmp449 :drawItemColor.14:barLength :drawItemColor.14:current
-    * op div *tmp450 *tmp449 :drawItemColor.14:target
+ 1275 op mul *tmp449 :drawItemColor.14:barLength :drawItem.14:current
+ 1276 op div *tmp450 *tmp449 :drawItem.14:target
  1277 op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
-    * op mul *tmp452 :drawItemColor.14:col 176
-    * op div *tmp453 *tmp452 2
+ 1278 op mul *tmp452 :drawItem.14:col 176
+ 1279 op mul *tmp453 :drawItemColor.14:col 88
  1280 op add :drawItemColor.14:iconX 11 *tmp453
-    * op mul *tmp455 :drawItemColor.14:col 176
-    * op div *tmp456 *tmp455 2
-    * op add :drawItemColor.14:barX 22 *tmp456
-    * op mul *tmp458 :drawItemColor.14:col 176
-    * op div *tmp459 *tmp458 2
-    * op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp459
+ 1281 op mul *tmp455 :drawItem.14:col 176
+ 1282 op div *tmp456 *tmp452 2
+ 1283 op add :drawItemColor.14:barX 22 *tmp453
+ 1284 op mul *tmp458 :drawItem.14:col 176
+ 1285 op div *tmp459 *tmp452 2
+ 1286 op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp453
  1287 draw col %[white]
-    * op add *tmp461 :drawItemColor.14:y 5
-    * draw image :drawItemColor.14:iconX *tmp461 :drawItemColor.14:item 16 0
-    * draw col :drawItemColor.14:color1
-    * draw rect :drawItemColor.14:barX :drawItemColor.14:y :drawItemColor.14:length 10
-    * draw col :drawItemColor.14:color2
-    * draw lineRect :drawItemColor.14:barX :drawItemColor.14:y :drawItemColor.14:barLength 10
-    * op add *tmp462 :drawItemColor.14:y 5
-    * op add *tmp463 *tmp462 2
+ 1288 op add *tmp461 :drawItem.14:y 5
+ 1289 draw image :drawItemColor.14:iconX *tmp461 :drawItem.14:item 16 0
+ 1290 draw col %008000FF
+ 1291 draw rect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:length 10
+ 1292 draw col %00FF00FF
+ 1293 draw lineRect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:barLength 10
+ 1294 op add *tmp462 :drawItem.14:y 5
+ 1295 op add *tmp463 *tmp461 2
  1296 set :drawBold.14:x :drawItemColor.14:textX
  1297 set :drawBold.14:y *tmp463
  1298 set :drawBold.14:alignment @right
-    * set :drawText.40:x :drawBold.14:x
-    * set :drawText.40:y :drawBold.14:y
-    * set :drawText.40:alignment :drawBold.14:alignment
+ 1299 set :drawText.40:x :drawItemColor.14:textX
+ 1300 set :drawText.40:y *tmp463
+ 1301 set :drawText.40:alignment @right
  1302 print .transportTarget
-    * draw print :drawText.40:x :drawText.40:y :drawText.40:alignment
+ 1303 draw print :drawBold.14:x :drawBold.14:y :drawBold.14:alignment
  1304 label *label201
-    * op add :drawText.41:x :drawBold.14:x 1
-    * set :drawText.41:y :drawBold.14:y
-    * set :drawText.41:alignment :drawBold.14:alignment
+ 1305 op add :drawText.41:x :drawItemColor.14:textX 1
+ 1306 set :drawText.41:y *tmp463
+ 1307 set :drawText.41:alignment @right
  1308 print .transportTarget
-    * draw print :drawText.41:x :drawText.41:y :drawText.41:alignment
+ 1309 draw print :drawText.41:x :drawBold.14:y :drawBold.14:alignment
  1310 label *label202
  1311 label *label200
-    * op add :drawItemColor.14:col :drawItemColor.14:col 1
-    * jump *label203 lessThan :drawItemColor.14:col :drawItemColor.14:columns
+ 1312 op add :drawItemColor.14:col :drawItem.14:col 1
+ 1313 jump *label203 lessThan :drawItemColor.14:col :drawItem.14:columns
  1314 set :drawItemColor.14:col 0
-    * op sub :drawItemColor.14:y :drawItemColor.14:y 15
+ 1315 op sub :drawItemColor.14:y :drawItem.14:y 15
  1316 label *label203
  1317 label *label204
  1318 label *label199
-    * set :drawItem.14:col :drawItemColor.14:col
  1319 set :drawItem.14:y :drawItemColor.14:y
  1320 label *label198
-    * set :drawUnit.1:y :drawItem.14:y
+ 1321 set :drawUnit.1:y :drawItemColor.14:y
  1322 label *label197
-    * set :updateDisplay:y :drawUnit.1:y
+ 1323 set :updateDisplay:y :drawItem.14:y
  1324 label *label188
  1325 label *label181
  1326 jump *label206 greaterThanEq :updateDisplay:y 20
 
  1333 label *label209
  1334 set :updateDisplay:y 20
  1335 draw col %[white]
-    * set :drawTitleRow.6:y :updateDisplay:y
+ 1336 set :drawTitleRow.6:y 20
  1337 set :drawTitleRow.6:alignment @bottomLeft
  1338 set :drawText.42:x 22
-    * set :drawText.42:y :drawTitleRow.6:y
-    * set :drawText.42:alignment :drawTitleRow.6:alignment
+ 1339 set :drawText.42:y :updateDisplay:y
+ 1340 set :drawText.42:alignment @bottomLeft
  1341 print "Power"
-    * draw print :drawText.42:x :drawText.42:y :drawText.42:alignment
+ 1342 draw print 22 :drawTitleRow.6:y :drawTitleRow.6:alignment
  1343 label *label211
  1344 set :drawText.43:x 23
-    * set :drawText.43:y :drawTitleRow.6:y
-    * set :drawText.43:alignment :drawTitleRow.6:alignment
+ 1345 set :drawText.43:y :updateDisplay:y
+ 1346 set :drawText.43:alignment @bottomLeft
  1347 print "Power"
-    * draw print :drawText.43:x :drawText.43:y :drawText.43:alignment
+ 1348 draw print 23 :drawTitleRow.6:y :drawTitleRow.6:alignment
  1349 label *label212
-    * op sub :drawTitleRow.6:y :drawTitleRow.6:y 15
+ 1350 op sub :drawTitleRow.6:y :updateDisplay:y 15
  1351 label *label210
  1352 set :updateDisplay:y :drawTitleRow.6:y
  1353 sensor :drawPower:power AJTJK-battery1 @totalPower
 
  1356 set :drawItemColor.15:color1 %808000FF
  1357 set :drawItemColor.15:color2 %FFFF00FF
  1358 set :drawItemColor.15:col 0
-    * set :drawItemColor.15:y :updateDisplay:y
+ 1359 set :drawItemColor.15:y :drawTitleRow.6:y
  1360 set :drawItemColor.15:columns 1
  1361 set :drawItemColor.15:item @battery
  1362 set :drawItemColor.15:current :drawPower:power
  1363 set :drawItemColor.15:target 4000
-    * op mul *tmp477 :drawItemColor.15:columns 176
-    * op div *tmp478 *tmp477 2
-    * op sub :drawItemColor.15:barLength 214 *tmp478
-    * op add :drawItemColor.15:textEnd 48 :drawItemColor.15:barLength
-    * op mul *tmp481 :drawItemColor.15:barLength :drawItemColor.15:current
-    * op div *tmp482 *tmp481 :drawItemColor.15:target
-    * op min :drawItemColor.15:length :drawItemColor.15:barLength *tmp482
-    * op mul *tmp484 :drawItemColor.15:col 176
-    * op div *tmp485 *tmp484 2
-    * op add :drawItemColor.15:iconX 11 *tmp485
-    * op mul *tmp487 :drawItemColor.15:col 176
-    * op div *tmp488 *tmp487 2
-    * op add :drawItemColor.15:barX 22 *tmp488
-    * op mul *tmp490 :drawItemColor.15:col 176
-    * op div *tmp491 *tmp490 2
-    * op add :drawItemColor.15:textX :drawItemColor.15:textEnd *tmp491
+ 1364 op mul *tmp477 1 176
+ 1365 op div *tmp478 176 2
+ 1366 op sub :drawItemColor.15:barLength 214 88
+ 1367 op add :drawItemColor.15:textEnd 48 126
+ 1368 op mul *tmp481 126 :drawPower:power
+ 1369 op div *tmp482 *tmp481 4000
+ 1370 op min :drawItemColor.15:length 126 *tmp482
+ 1371 op mul *tmp484 0 176
+ 1372 op div *tmp485 0 2
+ 1373 op add :drawItemColor.15:iconX 11 0
+ 1374 op mul *tmp487 0 176
+ 1375 op div *tmp488 0 2
+ 1376 op add :drawItemColor.15:barX 22 0
+ 1377 op mul *tmp490 0 176
+ 1378 op div *tmp491 0 2
+ 1379 op add :drawItemColor.15:textX 174 0
  1380 draw col %[white]
-    * op add *tmp493 :drawItemColor.15:y 5
-    * draw image :drawItemColor.15:iconX *tmp493 :drawItemColor.15:item 16 0
-    * draw col :drawItemColor.15:color1
-    * draw rect :drawItemColor.15:barX :drawItemColor.15:y :drawItemColor.15:length 10
-    * draw col :drawItemColor.15:color2
-    * draw lineRect :drawItemColor.15:barX :drawItemColor.15:y :drawItemColor.15:barLength 10
-    * op add *tmp494 :drawItemColor.15:y 5
-    * op add *tmp495 *tmp494 2
-    * set :drawBold.15:x :drawItemColor.15:textX
+ 1381 op add *tmp493 :updateDisplay:y 5
+ 1382 draw image 11 *tmp493 @battery 16 0
+ 1383 draw col %808000FF
+ 1384 draw rect 22 :updateDisplay:y :drawItemColor.15:length 10
+ 1385 draw col %FFFF00FF
+ 1386 draw lineRect 22 :updateDisplay:y 126 10
+ 1387 op add *tmp494 :updateDisplay:y 5
+ 1388 op add *tmp495 *tmp493 2
+ 1389 set :drawBold.15:x 174
  1390 set :drawBold.15:y *tmp495
  1391 set :drawBold.15:alignment @right
-    * set :drawText.44:x :drawBold.15:x
-    * set :drawText.44:y :drawBold.15:y
-    * set :drawText.44:alignment :drawBold.15:alignment
+ 1392 set :drawText.44:x :drawItemColor.15:textX
+ 1393 set :drawText.44:y *tmp495
+ 1394 set :drawText.44:alignment @right
  1395 print *tmp476
  1396 print "%"
-    * draw print :drawText.44:x :drawText.44:y :drawText.44:alignment
+ 1397 draw print :drawBold.15:x :drawBold.15:y :drawBold.15:alignment
  1398 label *label215
-    * op add :drawText.45:x :drawBold.15:x 1
-    * set :drawText.45:y :drawBold.15:y
-    * set :drawText.45:alignment :drawBold.15:alignment
+ 1399 op add :drawText.45:x :drawItemColor.15:textX 1
+ 1400 set :drawText.45:y *tmp495
+ 1401 set :drawText.45:alignment @right
  1402 print *tmp476
  1403 print "%"
-    * draw print :drawText.45:x :drawText.45:y :drawText.45:alignment
+ 1404 draw print :drawText.45:x :drawBold.15:y :drawBold.15:alignment
  1405 label *label216
  1406 label *label214
-    * op add :drawItemColor.15:col :drawItemColor.15:col 1
-    * jump *label217 lessThan :drawItemColor.15:col :drawItemColor.15:columns
-    * set :drawItemColor.15:col 0
-    * op sub :drawItemColor.15:y :drawItemColor.15:y 15
+ 1407 op add :drawItemColor.15:col 0 1
+ 1408 jump *label217 lessThan 1 1
+ 1409 op sub :drawItemColor.15:y :updateDisplay:y 15
  1410 label *label217
  1411 label *label218
  1412 label *label213
-    * set :updateDisplay:y :drawItemColor.15:y
  1413 label *label205
  1414 drawflush display1
  1415 label *label33
 
  1425 set :drawBold.16:x 11
  1426 set :drawBold.16:y 206
  1427 set :drawBold.16:alignment @left
-    * set :drawText.46:x :drawBold.16:x
-    * set :drawText.46:y :drawBold.16:y
-    * set :drawText.46:alignment :drawBold.16:alignment
+ 1428 set :drawText.46:x 11
+ 1429 set :drawText.46:y 206
+ 1430 set :drawText.46:alignment @left
  1431 print "Resources"
-    * draw print :drawText.46:x :drawText.46:y :drawText.46:alignment
+ 1432 draw print :drawBold.16:x :drawBold.16:y :drawBold.16:alignment
  1433 label *label225
-    * op add :drawText.47:x :drawBold.16:x 1
-    * set :drawText.47:y :drawBold.16:y
-    * set :drawText.47:alignment :drawBold.16:alignment
+ 1434 op add :drawText.47:x 11 1
+ 1435 set :drawText.47:y 206
+ 1436 set :drawText.47:alignment @left
  1437 print "Resources"
-    * draw print :drawText.47:x :drawText.47:y :drawText.47:alignment
+ 1438 draw print 12 :drawBold.16:y :drawBold.16:alignment
  1439 label *label226
  1440 label *label224
  1441 draw col %[white]
-    * op sub :displayStorage:y :displayStorage:START 8
+ 1442 op sub :displayStorage:y 190 8
  1443 set :displayStorage:item @copper
  1444 setaddr *tmp506 *label230
  1445 jump *label227 always
 
  1493 label *label241
  1494 read :displayStorage:accumulator bank2 .lastTail
  1495 op add :displayStorage:x 25 .lastTail
-    * op sub :displayStorage:y.1 :displayStorage:START 8
+ 1496 op sub :displayStorage:y.1 190 8
  1497 set :displayStorage:i 0
  1498 label *label242
  1499 jump *label244 greaterThanEq :displayStorage:i 9
 
  1528 set :drawBold.17:x 90
  1529 set :drawBold.17:y 206
  1530 set :drawBold.17:alignment @center
-    * set :drawText.48:x :drawBold.17:x
-    * set :drawText.48:y :drawBold.17:y
-    * set :drawText.48:alignment :drawBold.17:alignment
+ 1531 set :drawText.48:x 90
+ 1532 set :drawText.48:y 206
+ 1533 set :drawText.48:alignment @center
  1534 print "Base map"
-    * draw print :drawText.48:x :drawText.48:y :drawText.48:alignment
+ 1535 draw print :drawBold.17:x :drawBold.17:y :drawBold.17:alignment
  1536 label *label254
-    * op add :drawText.49:x :drawBold.17:x 1
-    * set :drawText.49:y :drawBold.17:y
-    * set :drawText.49:alignment :drawBold.17:alignment
+ 1537 op add :drawText.49:x 90 1
+ 1538 set :drawText.49:y 206
+ 1539 set :drawText.49:alignment @center
  1540 print "Base map"
-    * draw print :drawText.49:x :drawText.49:y :drawText.49:alignment
+ 1541 draw print 91 :drawBold.17:y :drawBold.17:alignment
  1542 label *label255
  1543 label *label253
  1544 draw col %[white]
 
  1736 op sub :displayLog:page .page 3
  1737 read :displayLog:logPosition bank1 511
  1738 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp539 :displayLog:records 1
+ 1739 op sub *tmp539 510 :displayLog:logPosition
  1740 op idiv *tmp540 *tmp539 39
  1741 op add *tmp541 *tmp540 1
  1742 op max :displayLog:pages 1 *tmp541
 
  1750 set :drawBold.18:x 4
  1751 set :drawBold.18:y 206
  1752 set :drawBold.18:alignment @left
-    * set :drawText.50:x :drawBold.18:x
-    * set :drawText.50:y :drawBold.18:y
-    * set :drawText.50:alignment :drawBold.18:alignment
+ 1753 set :drawText.50:x 4
+ 1754 set :drawText.50:y 206
+ 1755 set :drawText.50:alignment @left
  1756 print "Build records"
-    * draw print :drawText.50:x :drawText.50:y :drawText.50:alignment
+ 1757 draw print :drawBold.18:x :drawBold.18:y :drawBold.18:alignment
  1758 label *label312
-    * op add :drawText.51:x :drawBold.18:x 1
-    * set :drawText.51:y :drawBold.18:y
-    * set :drawText.51:alignment :drawBold.18:alignment
+ 1759 op add :drawText.51:x 4 1
+ 1760 set :drawText.51:y 206
+ 1761 set :drawText.51:alignment @left
  1762 print "Build records"
-    * draw print :drawText.51:x :drawText.51:y :drawText.51:alignment
+ 1763 draw print 5 :drawBold.18:y :drawBold.18:alignment
  1764 label *label313
  1765 label *label311
-    * op add *tmp550 :displayLog:page 1
+ 1766 op sub *tmp550 .page 2
  1767 print *tmp550
  1768 print "/"
  1769 set :drawText.52:x 172
  1770 set :drawText.52:y 206
  1771 set :drawText.52:alignment @right
  1772 print :displayLog:pages
-    * draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
+ 1773 draw print 172 206 @right
  1774 label *label314
  1775 set .lastRecord :displayLog:start
  1776 label *label309
 
  1781 set *tmp551 :displayLog:stop
  1782 op sub :displayLog:position .lastRecord 1
  1783 label *label316
-    * jump *label318 lessThan :displayLog:position *tmp551
+ 1784 jump *label318 lessThan :displayLog:position :displayLog:stop
  1785 read :displayLog:record bank1 :displayLog:position
  1786 op sub *tmp554 :displayLog:start :displayLog:position
  1787 op sub *tmp555 *tmp554 1
  1788 set :displayRecord:record :displayLog:record
  1789 set :displayRecord:index *tmp555
-    * op idiv :displayRecord:col :displayRecord:index 13
-    * op mod :displayRecord:row :displayRecord:index 13
+ 1790 op idiv :displayRecord:col *tmp555 13
+ 1791 op mod :displayRecord:row *tmp555 13
  1792 op mul *tmp558 58 :displayRecord:col
  1793 op add :displayRecord:x 11 *tmp558
  1794 op mul *tmp560 15 :displayRecord:row
  1795 op sub :displayRecord:y 189 *tmp560
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1796 op mod :displayRecord:id :displayLog:record 1000
  1797 jump *label320 lessThanEq :displayRecord:id @blockCount
  1798 op sub *tmp565 :displayRecord:id @blockCount
  1799 lookup unit *tmp564 *tmp565
 
  1802 lookup block *tmp564 :displayRecord:id
  1803 label *label321
  1804 set :displayRecord:icon *tmp564
-    * op div *tmp568 :displayRecord:record 1000
+ 1805 op div *tmp568 :displayLog:record 1000
  1806 op idiv :displayRecord:t *tmp568 120
  1807 op idiv :displayRecord:m :displayRecord:t 60
  1808 op mod :displayRecord:s :displayRecord:t 60
 
  1815 print :displayRecord:m
  1816 print ":"
  1817 print *tmp574
-    * draw image :displayRecord:x :displayRecord:y :displayRecord:icon 14 0
+ 1818 draw image :displayRecord:x :displayRecord:y *tmp564 14 0
  1819 op add *tmp575 :displayRecord:x 56
-    * op sub *tmp576 *tmp575 12
+ 1820 op add *tmp576 :displayRecord:x 44
  1821 op add *tmp577 :displayRecord:y 2
  1822 set :drawText.53:x *tmp576
  1823 set :drawText.53:y *tmp577
  1824 set :drawText.53:alignment @right
  1825 print :displayRecord:s
-    * draw print :drawText.53:x :drawText.53:y :drawText.53:alignment
+ 1826 draw print *tmp576 *tmp577 @right
  1827 label *label324
  1828 label *label319
  1829 drawflush display1
 
  1908 set :drawBold.19:x 25
  1909 set :drawBold.19:y 71
  1910 set :drawBold.19:alignment @center
-    * set :drawText.54:x :drawBold.19:x
-    * set :drawText.54:y :drawBold.19:y
-    * set :drawText.54:alignment :drawBold.19:alignment
+ 1911 set :drawText.54:x 25
+ 1912 set :drawText.54:y 71
+ 1913 set :drawText.54:alignment @center
  1914 print :drawHeader:m
  1915 print ":"
-    * print :drawHeader:zero
+ 1916 print *tmp597
  1917 print :drawHeader:s
-    * draw print :drawText.54:x :drawText.54:y :drawText.54:alignment
+ 1918 draw print :drawBold.19:x :drawBold.19:y :drawBold.19:alignment
  1919 label *label338
-    * op add :drawText.55:x :drawBold.19:x 1
-    * set :drawText.55:y :drawBold.19:y
-    * set :drawText.55:alignment :drawBold.19:alignment
+ 1920 op add :drawText.55:x 25 1
+ 1921 set :drawText.55:y 71
+ 1922 set :drawText.55:alignment @center
  1923 print :drawHeader:m
  1924 print ":"
-    * print :drawHeader:zero
+ 1925 print *tmp597
  1926 print :drawHeader:s
-    * draw print :drawText.55:x :drawText.55:y :drawText.55:alignment
+ 1927 draw print 26 :drawBold.19:y :drawBold.19:alignment
  1928 label *label339
  1929 label *label337
  1930 draw col %[white]
 
  1935 set :drawBold.20:x 42
  1936 set :drawBold.20:y 261
  1937 set :drawBold.20:alignment @bottom
-    * set :drawText.56:x :drawBold.20:x
-    * set :drawText.56:y :drawBold.20:y
-    * set :drawText.56:alignment :drawBold.20:alignment
+ 1938 set :drawText.56:x 42
+ 1939 set :drawText.56:y 261
+ 1940 set :drawText.56:alignment @bottom
  1941 print "Goal"
-    * draw print :drawText.56:x :drawText.56:y :drawText.56:alignment
+ 1942 draw print :drawBold.20:x :drawBold.20:y :drawBold.20:alignment
  1943 label *label341
-    * op add :drawText.57:x :drawBold.20:x 1
-    * set :drawText.57:y :drawBold.20:y
-    * set :drawText.57:alignment :drawBold.20:alignment
+ 1944 op add :drawText.57:x 42 1
+ 1945 set :drawText.57:y 261
+ 1946 set :drawText.57:alignment @bottom
  1947 print "Goal"
-    * draw print :drawText.57:x :drawText.57:y :drawText.57:alignment
+ 1948 draw print 43 :drawBold.20:y :drawBold.20:alignment
  1949 label *label342
  1950 label *label340
  1951 draw col %[white]
 
  2039 set :drawText.58:y 272
  2040 set :drawText.58:alignment @topRight
  2041 print ")"
-    * draw print :drawText.58:x :drawText.58:y :drawText.58:alignment
+ 2042 draw print 174 272 @topRight
  2043 label *label369
  2044 jump *label370 equal A¨SSJi-container31 null
  2045 sensor :drawHeader:count.1 A¨SSJi-container31 @scrap
  2046 set :drawHeader:x.1 174
  2047 op log10 *tmp629 :drawHeader:count.1
  2048 op floor :drawHeader:len *tmp629
-    * set :drawText.59:x :drawHeader:x.1
+ 2049 set :drawText.59:x 174
  2050 set :drawText.59:y 255
  2051 set :drawText.59:alignment @topRight
  2052 print "x"
  2053 print :drawHeader:count.1
-    * draw print :drawText.59:x :drawText.59:y :drawText.59:alignment
+ 2054 draw print :drawHeader:x.1 255 @topRight
  2055 label *label372
-    * op sub *tmp631 :drawHeader:x.1 20
+ 2056 op sub *tmp631 174 20
  2057 op mul *tmp632 7 :drawHeader:len
-    * op sub *tmp633 *tmp631 *tmp632
+ 2058 op sub *tmp633 154 *tmp632
  2059 draw image *tmp633 246 @scrap 12 0
  2060 sensor :drawHeader:count.1 A¨SSJi-container31 @sand
  2061 set :drawHeader:x.1 124
  2062 op log10 *tmp635 :drawHeader:count.1
  2063 op floor :drawHeader:len *tmp635
-    * set :drawText.60:x :drawHeader:x.1
+ 2064 set :drawText.60:x 124
  2065 set :drawText.60:y 255
  2066 set :drawText.60:alignment @topRight
  2067 print "x"
  2068 print :drawHeader:count.1
-    * draw print :drawText.60:x :drawText.60:y :drawText.60:alignment
+ 2069 draw print :drawHeader:x.1 255 @topRight
  2070 label *label373
-    * op sub *tmp637 :drawHeader:x.1 20
+ 2071 op sub *tmp637 124 20
  2072 op mul *tmp638 7 :drawHeader:len
-    * op sub *tmp639 *tmp637 *tmp638
+ 2073 op sub *tmp639 104 *tmp638
  2074 draw image *tmp639 246 @sand 12 0
  2075 jump *label371 always
  2076 label *label370
 
  2080 set :drawHeader:x.2 174
  2081 op log10 *tmp643 :drawHeader:count.2
  2082 op floor :drawHeader:len.1 *tmp643
-    * set :drawText.61:x :drawHeader:x.2
+ 2083 set :drawText.61:x 174
  2084 set :drawText.61:y 255
  2085 set :drawText.61:alignment @topRight
  2086 print "x"
  2087 print :drawHeader:count.2
-    * draw print :drawText.61:x :drawText.61:y :drawText.61:alignment
+ 2088 draw print :drawHeader:x.2 255 @topRight
  2089 label *label376
-    * op sub *tmp645 :drawHeader:x.2 20
+ 2090 op sub *tmp645 174 20
  2091 op mul *tmp646 7 :drawHeader:len.1
-    * op sub *tmp647 *tmp645 *tmp646
+ 2092 op sub *tmp647 154 *tmp646
  2093 draw image *tmp647 246 @titanium 12 0
  2094 label *label374
  2095 label *label375
 
  2098 set :drawHeader:x.3 124
  2099 op log10 *tmp650 :drawHeader:count.3
  2100 op floor :drawHeader:len.2 *tmp650
-    * set :drawText.62:x :drawHeader:x.3
+ 2101 set :drawText.62:x 124
  2102 set :drawText.62:y 255
  2103 set :drawText.62:alignment @topRight
  2104 print "x"
  2105 print :drawHeader:count.3
-    * draw print :drawText.62:x :drawText.62:y :drawText.62:alignment
+ 2106 draw print :drawHeader:x.3 255 @topRight
  2107 label *label379
-    * op sub *tmp652 :drawHeader:x.3 20
+ 2108 op sub *tmp652 124 20
  2109 op mul *tmp653 7 :drawHeader:len.2
-    * op sub *tmp654 *tmp652 *tmp653
+ 2110 op sub *tmp654 104 *tmp653
  2111 draw image *tmp654 246 @thorium 12 0
  2112 label *label377
  2113 label *label378
 
  2117 set :drawUnitCount:type @poly
  2118 set :drawUnitCount:count .polys
  2119 jump *label381 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp657 :drawHeader:x.4 20
-    * draw image *tmp657 227 :drawUnitCount:type 12 0
-    * set :drawText.63:x :drawHeader:x.4
+ 2120 op sub *tmp657 174 20
+ 2121 draw image 154 227 @poly 12 0
+ 2122 set :drawText.63:x 174
  2123 set :drawText.63:y 229
  2124 set :drawText.63:alignment @right
  2125 print "x"
  2126 print :drawUnitCount:count
-    * draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
+ 2127 draw print :drawHeader:x.4 229 @right
  2128 label *label383
-    * op sub :drawHeader:x.4 :drawHeader:x.4 30
+ 2129 op sub :drawHeader:x.4 174 30
  2130 label *label381
  2131 label *label382
  2132 label *label380
 
  2134 set :drawUnitCount.1:count .monos
  2135 jump *label385 lessThanEq :drawUnitCount.1:count 0
  2136 op sub *tmp660 :drawHeader:x.4 20
-    * draw image *tmp660 227 :drawUnitCount.1:type 12 0
+ 2137 draw image *tmp660 227 @mono 12 0
  2138 set :drawText.64:x :drawHeader:x.4
  2139 set :drawText.64:y 229
  2140 set :drawText.64:alignment @right
  2141 print "x"
  2142 print :drawUnitCount.1:count
-    * draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
+ 2143 draw print :drawHeader:x.4 229 @right
  2144 label *label387
  2145 op sub :drawHeader:x.4 :drawHeader:x.4 30
  2146 label *label385
 
  2150 set :drawUnitCount.2:count .flares
  2151 jump *label389 lessThanEq :drawUnitCount.2:count 0
  2152 op sub *tmp663 :drawHeader:x.4 20
-    * draw image *tmp663 227 :drawUnitCount.2:type 12 0
+ 2153 draw image *tmp663 227 @flare 12 0
  2154 set :drawText.65:x :drawHeader:x.4
  2155 set :drawText.65:y 229
  2156 set :drawText.65:alignment @right
  2157 print "x"
  2158 print :drawUnitCount.2:count
-    * draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
+ 2159 draw print :drawHeader:x.4 229 @right
  2160 label *label391
-    * op sub :drawHeader:x.4 :drawHeader:x.4 30
  2161 label *label389
  2162 label *label390
  2163 label *label388
 
  2169 set :setupScale:size 220
  2170 draw reset
  2171 draw translate 90 105
-    * op div *tmp664 :setupScale:size 15
-    * op div *tmp665 *tmp664 2
-    * op div *tmp666 :setupScale:size 15
-    * op div *tmp667 *tmp666 2
-    * draw scale *tmp665 *tmp667
+ 2172 op div *tmp664 220 15
+ 2173 op div *tmp665 14.666666666666666 2
+ 2174 op div *tmp666 220 15
+ 2175 op div *tmp667 14.666666666666666 2
+ 2176 draw scale 7.333333333333333 7.333333333333333
  2177 label *label392
  2178 return :setupScale*retaddr
  2179 end
  2180 label *label6
  2181 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :unpackCfg2:cfg
+ 2182 set :unpackCfg:cfg :drawBlock:cfg
  2183 set :unpackCfg:index 1
-    * set *tmp668 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp669 :unpackCfg:cfg *tmp668
+ 2184 set *tmp668 1
+ 2185 op add :unpackCfg:index 1 1
+ 2186 read *tmp669 :unpackCfg2:cfg *tmp668
  2187 op sub *tmp670 *tmp669 74
  2188 lookup block :unpackCfg:type *tmp670
-    * set *tmp672 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp673 :unpackCfg:cfg *tmp672
+ 2189 set *tmp672 2
+ 2190 op add :unpackCfg:index 2 1
+ 2191 read *tmp673 :unpackCfg2:cfg *tmp672
  2192 op sub *tmp674 *tmp673 74
  2193 op div :unpackCfg:x *tmp674 2
-    * set *tmp676 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp677 :unpackCfg:cfg *tmp676
+ 2194 set *tmp676 3
+ 2195 op add :unpackCfg:index 3 1
+ 2196 read *tmp677 :unpackCfg2:cfg *tmp676
  2197 op sub *tmp678 *tmp677 74
  2198 op div :unpackCfg:y *tmp678 2
-    * set *tmp680 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp681 :unpackCfg:cfg *tmp680
+ 2199 set *tmp680 4
+ 2200 op add :unpackCfg:index 4 1
+ 2201 read *tmp681 :unpackCfg2:cfg *tmp680
  2202 op sub :unpackCfg:rotation *tmp681 74
-    * set *tmp683 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp684 :unpackCfg:cfg *tmp683
+ 2203 set *tmp683 5
+ 2204 op add :unpackCfg:index 5 1
+ 2205 read *tmp684 :unpackCfg2:cfg *tmp683
  2206 op sub :unpackCfg:ind *tmp684 74
  2207 sensor :unpackCfg:size :unpackCfg:type @size
  2208 label *label395
 
  2213 set :unpackCfg2:size :unpackCfg:size
  2214 set :unpackCfg2:index :unpackCfg:ind
  2215 label *label394
-    * set :drawBlock:type :unpackCfg2:type
-    * set :drawBlock:x :unpackCfg2:x
-    * set :drawBlock:y :unpackCfg2:y
-    * set :drawBlock:rotation :unpackCfg2:rotation
-    * set :drawBlock:size :unpackCfg2:size
-    * set :drawBlock:index :unpackCfg2:index
-    * op shl *tmp694 1 :drawBlock:index
+ 2216 set :drawBlock:type :unpackCfg:type
+ 2217 set :drawBlock:x :unpackCfg:x
+ 2218 set :drawBlock:y :unpackCfg:y
+ 2219 set :drawBlock:rotation :unpackCfg:rotation
+ 2220 set :drawBlock:size :unpackCfg:size
+ 2221 set :drawBlock:index :unpackCfg:ind
+ 2222 op shl *tmp694 1 :unpackCfg2:index
  2223 op and *tmp695 .blocksBuilt *tmp694
  2224 jump *label396 equal *tmp695 false
  2225 draw col %[white]

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-327 instructions):
 
    37 op div *tmp54 .animation 30
    38 op min *tmp55 *tmp54 1
    39 op max :animate:ratio 0 *tmp55
-    * set :lerp:from 42
-    * set :lerp:to 90
-    * set :lerp:ratio :animate:ratio
    40 op sub *tmp58 1 :animate:ratio
    41 op mul *tmp59 *tmp58 42
    42 op mul *tmp60 :animate:ratio 90
    43 op add *tmp57 *tmp59 *tmp60
    44 label *label27
-    * set :animate:x *tmp57
-    * set :lerp.1:from 237
-    * set :lerp.1:to 120
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :animate:ratio
    45 op mul *tmp64 *tmp58 237
    46 op mul *tmp65 :animate:ratio 120
    47 op add *tmp62 *tmp64 *tmp65
    48 label *label28
-    * set :animate:y *tmp62
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :animate:ratio
    49 op mul *tmp69 *tmp58 32
    50 op mul *tmp70 :animate:ratio 168
    51 op add *tmp67 *tmp69 *tmp70
    52 label *label29
-    * set :animate:size *tmp67
    53 draw image *tmp57 *tmp62 @mega *tmp67 0
    54 jump *label30 notEqual :animate:ratio 1
    55 setaddr :drawHeader*retaddr *label32 (h:*label32)
 
    74 jump *label36 equal *tmp77 false
    75 set :drawTitleRow:y 201
    76 set :drawTitleRow:alignment @bottomLeft
-    * set :drawText:x 22
-    * set :drawText:y :updateDisplay:y
-    * set :drawText:alignment @bottomLeft
+   77 set :drawText:y 201
    78 print "Locating ore..."
-    * draw print 22 :drawTitleRow:y :drawTitleRow:alignment
+   79 draw print 22 201 @bottomLeft
    80 label *label39
-    * set :drawText.1:x 23
-    * set :drawText.1:y :updateDisplay:y
-    * set :drawText.1:alignment @bottomLeft
+   81 set :drawText.1:y 201
    82 print "Locating ore..."
-    * draw print 23 :drawTitleRow:y :drawTitleRow:alignment
+   83 draw print 23 201 @bottomLeft
    84 label *label40
-    * op sub :drawTitleRow:y :updateDisplay:y 15
+   85 op sub :drawTitleRow:y 201 15
    86 label *label38
-    * set :updateDisplay:y :drawTitleRow:y
+   87 set :updateDisplay:y 186
    88 set :drawItem:col 0
-    * set :drawItem:y :drawTitleRow:y
+   89 set :drawItem:y 186
    90 set :drawItem:columns 1
    91 set :drawItem:item .nextBlock
    92 read :drawItem:current processor3 ".mapProgress"
    93 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:color1 %008000FF
-    * set :drawItemColor:color2 %00FF00FF
    94 set :drawItemColor:col 0
-    * set :drawItemColor:y :updateDisplay:y
+   95 set :drawItemColor:y :drawTitleRow:y
    96 set :drawItemColor:columns 1
-    * set :drawItemColor:item :drawItem:item
-    * set :drawItemColor:current :drawItem:current
-    * set :drawItemColor:target :drawItem:target
-    * op mul *tmp79 :drawItem:columns 176
-    * op mul *tmp80 :drawItemColor:columns 88
-    * op sub :drawItemColor:barLength 214 *tmp80
-    * op add :drawItemColor:textEnd 48 :drawItemColor:barLength
-    * op mul *tmp83 :drawItemColor:barLength :drawItem:current
+   97 op mul *tmp79 1 176
+   98 op mul *tmp80 1 88
+   99 op sub :drawItemColor:barLength 214 88
+  100 op add :drawItemColor:textEnd 48 126
+  101 op mul *tmp83 126 :drawItem:current
   102 op div *tmp84 *tmp83 :drawItem:target
-    * op min :drawItemColor:length :drawItemColor:barLength *tmp84
-    * op mul *tmp86 :drawItem:col 176
-    * op mul *tmp87 :drawItemColor:col 88
-    * op add :drawItemColor:iconX 11 *tmp87
-    * op mul *tmp89 :drawItem:col 176
-    * op div *tmp90 *tmp86 2
-    * op add :drawItemColor:barX 22 *tmp87
-    * op mul *tmp92 :drawItem:col 176
-    * op div *tmp93 *tmp86 2
-    * op add :drawItemColor:textX :drawItemColor:textEnd *tmp87
+  103 op min :drawItemColor:length 126 *tmp84
+  104 op mul *tmp86 0 176
+  105 op mul *tmp87 0 88
+  106 op add :drawItemColor:iconX 11 0
+  107 op mul *tmp89 0 176
+  108 op div *tmp90 0 2
+  109 op add :drawItemColor:barX 22 0
+  110 op mul *tmp92 0 176
+  111 op div *tmp93 0 2
+  112 op add :drawItemColor:textX 174 0
   113 draw col %[white]
-    * op add *tmp95 :drawItem:y 5
-    * draw image :drawItemColor:iconX *tmp95 :drawItem:item 16 0
+  114 op add *tmp95 :drawTitleRow:y 5
+  115 draw image 11 *tmp95 :drawItem:item 16 0
   116 draw col %008000FF
-    * draw rect :drawItemColor:barX :drawItem:y :drawItemColor:length 10
+  117 draw rect 22 :drawTitleRow:y :drawItemColor:length 10
   118 draw col %00FF00FF
-    * draw lineRect :drawItemColor:barX :drawItem:y :drawItemColor:barLength 10
-    * op add *tmp96 :drawItem:y 5
-    * op add *tmp97 *tmp95 2
-    * set :drawBold:x :drawItemColor:textX
+  119 draw lineRect 22 :drawTitleRow:y 126 10
+  120 op add *tmp96 :drawTitleRow:y 5
+  121 op add *tmp97 :drawItem:y 7
+  122 set :drawBold:x 174
   123 set :drawBold:y *tmp97
   124 set :drawBold:alignment @right
-    * set :drawText.2:x :drawItemColor:textX
-    * set :drawText.2:y *tmp97
-    * set :drawText.2:alignment @right
+  125 set :drawText.2:x 174
   126 print "x"
   127 read *tmp98 processor3 ".mapSpots"
   128 print *tmp98
-    * draw print :drawBold:x :drawBold:y :drawBold:alignment
+  129 draw print :drawItemColor:textX *tmp97 @right
   130 label *label44
-    * op add :drawText.3:x :drawItemColor:textX 1
-    * set :drawText.3:y *tmp97
-    * set :drawText.3:alignment @right
+  131 op add :drawText.3:x 174 1
   132 print "x"
   133 read *tmp100 processor3 ".mapSpots"
   134 print *tmp100
-    * draw print :drawText.3:x :drawBold:y :drawBold:alignment
+  135 draw print 175 *tmp97 @right
   136 label *label45
   137 label *label43
-    * op add :drawItemColor:col :drawItem:col 1
-    * jump *label46 lessThan :drawItemColor:col :drawItem:columns
-    * set :drawItemColor:col 0
-    * op sub :drawItemColor:y :drawItem:y 15
+  138 op add :drawItemColor:col 0 1
+  139 jump *label46 lessThan 1 1
+  140 op sub :drawItemColor:y :drawTitleRow:y 15
   141 label *label46
   142 label *label47
   143 label *label42
   144 set :drawItem:y :drawItemColor:y
   145 label *label41
-    * set :updateDisplay:y :drawItemColor:y
-    * op sub :updateDisplay:y :drawItem:y 35
+  146 op sub :updateDisplay:y :drawItemColor:y 35
   147 jump *label37 always
   148 label *label36
   149 jump *label48 equal .nextBlock null
   150 set :drawMaterials:count .totalTargets
   151 set :drawTitleRow.1:y 201
   152 set :drawTitleRow.1:alignment @bottomLeft
-    * set :drawText.4:x 22
-    * set :drawText.4:y :updateDisplay:y
-    * set :drawText.4:alignment @bottomLeft
+  153 set :drawText.4:y 201
   154 print "Materials"
-    * draw print 22 :drawTitleRow.1:y :drawTitleRow.1:alignment
+  155 draw print 22 201 @bottomLeft
   156 label *label51
-    * set :drawText.5:x 23
-    * set :drawText.5:y :updateDisplay:y
-    * set :drawText.5:alignment @bottomLeft
+  157 set :drawText.5:y 201
   158 print "Materials"
-    * draw print 23 :drawTitleRow.1:y :drawTitleRow.1:alignment
+  159 draw print 23 201 @bottomLeft
   160 label *label52
-    * op sub :drawTitleRow.1:y :updateDisplay:y 15
+  161 op sub :drawTitleRow.1:y 201 15
   162 label *label50
-    * set :updateDisplay:y :drawTitleRow.1:y
+  163 set :updateDisplay:y 186
   164 set :drawMaterials:columns 1
   165 jump *label53 equal :drawMaterials:count false
   166 set :drawMaterials:item @copper
 
   205 set :drawItem.1:item :drawMaterials:item
   206 set :drawItem.1:current *tmp110
   207 set :drawItem.1:target :drawMaterials:target
-    * set :drawItemColor.1:color1 %008000FF
-    * set :drawItemColor.1:color2 %00FF00FF
   208 set :drawItemColor.1:col :drawMaterials:col
   209 set :drawItemColor.1:y :updateDisplay:y
-    * set :drawItemColor.1:columns :drawMaterials:columns
-    * set :drawItemColor.1:item :drawMaterials:item
-    * set :drawItemColor.1:current *tmp110
-    * set :drawItemColor.1:target :drawMaterials:target
-    * op mul *tmp111 :drawItem.1:columns 176
-    * op mul *tmp112 :drawItemColor.1:columns 88
+  210 set :drawItemColor.1:columns 1
+  211 op mul *tmp111 1 176
+  212 op mul *tmp112 :drawMaterials:columns 88
   213 op sub :drawItemColor.1:barLength 214 *tmp112
   214 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength :drawItem.1:current
-    * op div *tmp116 *tmp115 :drawItem.1:target
+  215 op mul *tmp115 :drawItemColor.1:barLength *tmp110
+  216 op div *tmp116 *tmp115 :drawMaterials:target
   217 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawItem.1:col 176
-    * op mul *tmp119 :drawItemColor.1:col 88
+  218 op mul *tmp118 :drawMaterials:col 176
+  219 op mul *tmp119 :drawMaterials:col 88
   220 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawItem.1:col 176
-    * op div *tmp122 *tmp118 2
+  221 op mul *tmp121 :drawMaterials:col 176
+  222 op mul *tmp122 :drawItem.1:col 88
   223 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp124 :drawItem.1:col 176
-    * op div *tmp125 *tmp118 2
+  224 op mul *tmp124 :drawMaterials:col 176
+  225 op mul *tmp125 :drawItem.1:col 88
   226 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
   227 draw col %[white]
-    * op add *tmp127 :drawItem.1:y 5
-    * draw image :drawItemColor.1:iconX *tmp127 :drawItem.1:item 16 0
+  228 op add *tmp127 :updateDisplay:y 5
+  229 draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0
   230 draw col %008000FF
-    * draw rect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:length 10
+  231 draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10
   232 draw col %00FF00FF
-    * draw lineRect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :drawItem.1:y 5
-    * op add *tmp129 *tmp127 2
+  233 draw lineRect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:barLength 10
+  234 op add *tmp128 :updateDisplay:y 5
+  235 op add *tmp129 :drawItem.1:y 7
   236 set :drawBold.1:x :drawItemColor.1:textX
   237 set :drawBold.1:y *tmp129
   238 set :drawBold.1:alignment @right
-    * set :drawText.6:x :drawItemColor.1:textX
-    * set :drawText.6:y *tmp129
-    * set :drawText.6:alignment @right
   239 print :drawMaterials:target
-    * draw print :drawBold.1:x :drawBold.1:y :drawBold.1:alignment
+  240 draw print :drawItemColor.1:textX *tmp129 @right
   241 label *label70
   242 op add :drawText.7:x :drawItemColor.1:textX 1
-    * set :drawText.7:y *tmp129
-    * set :drawText.7:alignment @right
   243 print :drawMaterials:target
-    * draw print :drawText.7:x :drawBold.1:y :drawBold.1:alignment
+  244 draw print :drawText.7:x *tmp129 @right
   245 label *label71
   246 label *label69
-    * op add :drawItemColor.1:col :drawItem.1:col 1
-    * jump *label72 lessThan :drawItemColor.1:col :drawItem.1:columns
+  247 op add :drawItemColor.1:col :drawMaterials:col 1
+  248 jump *label72 lessThan :drawItemColor.1:col 1
   249 set :drawItemColor.1:col 0
-    * op sub :drawItemColor.1:y :drawItem.1:y 15
+  250 op sub :drawItemColor.1:y :updateDisplay:y 15
   251 label *label72
   252 label *label73
   253 label *label68
-    * set :drawItem.1:col :drawItemColor.1:col
-    * set :drawItem.1:y :drawItemColor.1:y
   254 label *label67
   255 set :drawMaterials:col :drawItemColor.1:col
   256 set :updateDisplay:y :drawItemColor.1:y
 
   285 draw col %[white]
   286 set :drawTitleRow.2:y :updateDisplay:y
   287 set :drawTitleRow.2:alignment @bottomLeft
-    * set :drawText.8:x 22
-    * set :drawText.8:y :updateDisplay:y
-    * set :drawText.8:alignment @bottomLeft
   288 print "Air Factory"
-    * draw print 22 :drawTitleRow.2:y :drawTitleRow.2:alignment
+  289 draw print 22 :updateDisplay:y @bottomLeft
   290 label *label82
-    * set :drawText.9:x 23
-    * set :drawText.9:y :updateDisplay:y
-    * set :drawText.9:alignment @bottomLeft
   291 print "Air Factory"
-    * draw print 23 :drawTitleRow.2:y :drawTitleRow.2:alignment
+  292 draw print 23 :updateDisplay:y @bottomLeft
   293 label *label83
   294 op sub :drawTitleRow.2:y :updateDisplay:y 15
   295 label *label81
 
   304 set :drawItem.2:item @silicon
   305 set :drawItem.2:current *tmp146
   306 set :drawItem.2:target 15
-    * set :drawItemColor.2:color1 %008000FF
-    * set :drawItemColor.2:color2 %00FF00FF
   307 set :drawItemColor.2:col 0
-    * set :drawItemColor.2:y :updateDisplay:y
+  308 set :drawItemColor.2:y :drawTitleRow.2:y
   309 set :drawItemColor.2:columns 1
-    * set :drawItemColor.2:item @silicon
-    * set :drawItemColor.2:current *tmp146
-    * set :drawItemColor.2:target 15
-    * op mul *tmp147 :drawItem.2:columns 176
-    * op mul *tmp148 :drawItemColor.2:columns 88
-    * op sub :drawItemColor.2:barLength 214 *tmp148
-    * op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
-    * op mul *tmp151 :drawItemColor.2:barLength :drawItem.2:current
-    * op div *tmp152 *tmp151 :drawItem.2:target
-    * op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
-    * op mul *tmp154 :drawItem.2:col 176
-    * op mul *tmp155 :drawItemColor.2:col 88
-    * op add :drawItemColor.2:iconX 11 *tmp155
-    * op mul *tmp157 :drawItem.2:col 176
-    * op div *tmp158 *tmp154 2
-    * op add :drawItemColor.2:barX 22 *tmp155
-    * op mul *tmp160 :drawItem.2:col 176
-    * op div *tmp161 *tmp154 2
-    * op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp155
+  310 op mul *tmp147 1 176
+  311 op mul *tmp148 1 88
+  312 op sub :drawItemColor.2:barLength 214 88
+  313 op add :drawItemColor.2:textEnd 48 126
+  314 op mul *tmp151 126 *tmp146
+  315 op div *tmp152 *tmp151 15
+  316 op min :drawItemColor.2:length 126 *tmp152
+  317 op mul *tmp154 0 176
+  318 op mul *tmp155 0 88
+  319 op add :drawItemColor.2:iconX 11 0
+  320 op mul *tmp157 0 176
+  321 op div *tmp158 0 2
+  322 op add :drawItemColor.2:barX 22 0
+  323 op mul *tmp160 0 176
+  324 op div *tmp161 0 2
+  325 op add :drawItemColor.2:textX 174 0
   326 draw col %[white]
-    * op add *tmp163 :drawItem.2:y 5
-    * draw image :drawItemColor.2:iconX *tmp163 :drawItem.2:item 16 0
+  327 op add *tmp163 :drawTitleRow.2:y 5
+  328 draw image 11 *tmp163 @silicon 16 0
   329 draw col %008000FF
-    * draw rect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:length 10
+  330 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   331 draw col %00FF00FF
-    * draw lineRect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:barLength 10
-    * op add *tmp164 :drawItem.2:y 5
-    * op add *tmp165 *tmp163 2
-    * set :drawBold.2:x :drawItemColor.2:textX
+  332 draw lineRect 22 :drawTitleRow.2:y 126 10
+  333 op add *tmp164 :drawTitleRow.2:y 5
+  334 op add *tmp165 :drawItem.2:y 7
+  335 set :drawBold.2:x 174
   336 set :drawBold.2:y *tmp165
   337 set :drawBold.2:alignment @right
-    * set :drawText.10:x :drawItemColor.2:textX
-    * set :drawText.10:y *tmp165
-    * set :drawText.10:alignment @right
+  338 set :drawText.10:x 174
   339 print 15
-    * draw print :drawBold.2:x :drawBold.2:y :drawBold.2:alignment
+  340 draw print :drawItemColor.2:textX *tmp165 @right
   341 label *label91
-    * op add :drawText.11:x :drawItemColor.2:textX 1
-    * set :drawText.11:y *tmp165
-    * set :drawText.11:alignment @right
+  342 op add :drawText.11:x 174 1
   343 print 15
-    * draw print :drawText.11:x :drawBold.2:y :drawBold.2:alignment
+  344 draw print 175 *tmp165 @right
   345 label *label92
   346 label *label90
-    * op add :drawItemColor.2:col :drawItem.2:col 1
-    * jump *label93 lessThan :drawItemColor.2:col :drawItem.2:columns
-    * set :drawItemColor.2:col 0
-    * op sub :drawItemColor.2:y :drawItem.2:y 15
+  347 op add :drawItemColor.2:col 0 1
+  348 jump *label93 lessThan 1 1
+  349 op sub :drawItemColor.2:y :drawTitleRow.2:y 15
   350 label *label93
   351 label *label94
   352 label *label89
   353 set :drawItem.2:y :drawItemColor.2:y
   354 label *label88
-    * set :updateDisplay:y :drawItemColor.2:y
-    * op sub :updateDisplay:y :drawItem.2:y 15
+  355 op sub :updateDisplay:y :drawItemColor.2:y 15
   356 jump *label87 always
   357 label *label86
   358 sensor *tmp169 A¾BFLW-air-factory13 @lead
 
   362 set :drawItem.3:item @lead
   363 set :drawItem.3:current *tmp169
   364 set :drawItem.3:target 15
-    * set :drawItemColor.3:color1 %008000FF
-    * set :drawItemColor.3:color2 %00FF00FF
   365 set :drawItemColor.3:col 0
-    * set :drawItemColor.3:y :updateDisplay:y
+  366 set :drawItemColor.3:y :drawTitleRow.2:y
   367 set :drawItemColor.3:columns 1
-    * set :drawItemColor.3:item @lead
-    * set :drawItemColor.3:current *tmp169
-    * set :drawItemColor.3:target 15
-    * op mul *tmp170 :drawItem.3:columns 176
-    * op mul *tmp171 :drawItemColor.3:columns 88
-    * op sub :drawItemColor.3:barLength 214 *tmp171
-    * op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
-    * op mul *tmp174 :drawItemColor.3:barLength :drawItem.3:current
-    * op div *tmp175 *tmp174 :drawItem.3:target
-    * op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
-    * op mul *tmp177 :drawItem.3:col 176
-    * op mul *tmp178 :drawItemColor.3:col 88
-    * op add :drawItemColor.3:iconX 11 *tmp178
-    * op mul *tmp180 :drawItem.3:col 176
-    * op div *tmp181 *tmp177 2
-    * op add :drawItemColor.3:barX 22 *tmp178
-    * op mul *tmp183 :drawItem.3:col 176
-    * op div *tmp184 *tmp177 2
-    * op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp178
+  368 op mul *tmp170 1 176
+  369 op mul *tmp171 1 88
+  370 op sub :drawItemColor.3:barLength 214 88
+  371 op add :drawItemColor.3:textEnd 48 126
+  372 op mul *tmp174 126 *tmp169
+  373 op div *tmp175 *tmp174 15
+  374 op min :drawItemColor.3:length 126 *tmp175
+  375 op mul *tmp177 0 176
+  376 op mul *tmp178 0 88
+  377 op add :drawItemColor.3:iconX 11 0
+  378 op mul *tmp180 0 176
+  379 op div *tmp181 0 2
+  380 op add :drawItemColor.3:barX 22 0
+  381 op mul *tmp183 0 176
+  382 op div *tmp184 0 2
+  383 op add :drawItemColor.3:textX 174 0
   384 draw col %[white]
-    * op add *tmp186 :drawItem.3:y 5
-    * draw image :drawItemColor.3:iconX *tmp186 :drawItem.3:item 16 0
+  385 op add *tmp186 :drawTitleRow.2:y 5
+  386 draw image 11 *tmp186 @lead 16 0
   387 draw col %008000FF
-    * draw rect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:length 10
+  388 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   389 draw col %00FF00FF
-    * draw lineRect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:barLength 10
-    * op add *tmp187 :drawItem.3:y 5
-    * op add *tmp188 *tmp186 2
-    * set :drawBold.3:x :drawItemColor.3:textX
+  390 draw lineRect 22 :drawTitleRow.2:y 126 10
+  391 op add *tmp187 :drawTitleRow.2:y 5
+  392 op add *tmp188 :drawItem.3:y 7
+  393 set :drawBold.3:x 174
   394 set :drawBold.3:y *tmp188
   395 set :drawBold.3:alignment @right
-    * set :drawText.12:x :drawItemColor.3:textX
-    * set :drawText.12:y *tmp188
-    * set :drawText.12:alignment @right
+  396 set :drawText.12:x 174
   397 print 15
-    * draw print :drawBold.3:x :drawBold.3:y :drawBold.3:alignment
+  398 draw print :drawItemColor.3:textX *tmp188 @right
   399 label *label98
-    * op add :drawText.13:x :drawItemColor.3:textX 1
-    * set :drawText.13:y *tmp188
-    * set :drawText.13:alignment @right
+  400 op add :drawText.13:x 174 1
   401 print 15
-    * draw print :drawText.13:x :drawBold.3:y :drawBold.3:alignment
+  402 draw print 175 *tmp188 @right
   403 label *label99
   404 label *label97
-    * op add :drawItemColor.3:col :drawItem.3:col 1
-    * jump *label100 lessThan :drawItemColor.3:col :drawItem.3:columns
-    * set :drawItemColor.3:col 0
-    * op sub :drawItemColor.3:y :drawItem.3:y 15
+  405 op add :drawItemColor.3:col 0 1
+  406 jump *label100 lessThan 1 1
+  407 op sub :drawItemColor.3:y :drawTitleRow.2:y 15
   408 label *label100
   409 label *label101
   410 label *label96
 
   413 set :updateDisplay:y :drawItemColor.3:y
   414 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   415 set :drawItem.4:col 0
-    * set :drawItem.4:y :drawItem.3:y
+  416 set :drawItem.4:y :drawItemColor.3:y
   417 set :drawItem.4:columns 1
   418 set :drawItem.4:item @silicon
   419 set :drawItem.4:current *tmp192
   420 set :drawItem.4:target 30
-    * set :drawItemColor.4:color1 %008000FF
-    * set :drawItemColor.4:color2 %00FF00FF
   421 set :drawItemColor.4:col 0
-    * set :drawItemColor.4:y :updateDisplay:y
+  422 set :drawItemColor.4:y :drawItemColor.3:y
   423 set :drawItemColor.4:columns 1
-    * set :drawItemColor.4:item @silicon
-    * set :drawItemColor.4:current *tmp192
-    * set :drawItemColor.4:target 30
-    * op mul *tmp193 :drawItem.4:columns 176
-    * op mul *tmp194 :drawItemColor.4:columns 88
-    * op sub :drawItemColor.4:barLength 214 *tmp194
-    * op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
-    * op mul *tmp197 :drawItemColor.4:barLength :drawItem.4:current
-    * op div *tmp198 *tmp197 :drawItem.4:target
-    * op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
-    * op mul *tmp200 :drawItem.4:col 176
-    * op mul *tmp201 :drawItemColor.4:col 88
-    * op add :drawItemColor.4:iconX 11 *tmp201
-    * op mul *tmp203 :drawItem.4:col 176
-    * op div *tmp204 *tmp200 2
-    * op add :drawItemColor.4:barX 22 *tmp201
-    * op mul *tmp206 :drawItem.4:col 176
-    * op div *tmp207 *tmp200 2
-    * op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp201
+  424 op mul *tmp193 1 176
+  425 op mul *tmp194 1 88
+  426 op sub :drawItemColor.4:barLength 214 88
+  427 op add :drawItemColor.4:textEnd 48 126
+  428 op mul *tmp197 126 *tmp192
+  429 op div *tmp198 *tmp197 30
+  430 op min :drawItemColor.4:length 126 *tmp198
+  431 op mul *tmp200 0 176
+  432 op mul *tmp201 0 88
+  433 op add :drawItemColor.4:iconX 11 0
+  434 op mul *tmp203 0 176
+  435 op div *tmp204 0 2
+  436 op add :drawItemColor.4:barX 22 0
+  437 op mul *tmp206 0 176
+  438 op div *tmp207 0 2
+  439 op add :drawItemColor.4:textX 174 0
   440 draw col %[white]
-    * op add *tmp209 :drawItem.4:y 5
-    * draw image :drawItemColor.4:iconX *tmp209 :drawItem.4:item 16 0
+  441 op add *tmp209 :drawItem.3:y 5
+  442 draw image 11 *tmp209 @silicon 16 0
   443 draw col %008000FF
-    * draw rect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:length 10
+  444 draw rect 22 :drawItem.3:y :drawItemColor.4:length 10
   445 draw col %00FF00FF
-    * draw lineRect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:barLength 10
-    * op add *tmp210 :drawItem.4:y 5
-    * op add *tmp211 *tmp209 2
-    * set :drawBold.4:x :drawItemColor.4:textX
+  446 draw lineRect 22 :drawItem.3:y 126 10
+  447 op add *tmp210 :drawItem.3:y 5
+  448 op add *tmp211 :drawItem.4:y 7
+  449 set :drawBold.4:x 174
   450 set :drawBold.4:y *tmp211
   451 set :drawBold.4:alignment @right
-    * set :drawText.14:x :drawItemColor.4:textX
-    * set :drawText.14:y *tmp211
-    * set :drawText.14:alignment @right
+  452 set :drawText.14:x 174
   453 print 30
-    * draw print :drawBold.4:x :drawBold.4:y :drawBold.4:alignment
+  454 draw print :drawItemColor.4:textX *tmp211 @right
   455 label *label105
-    * op add :drawText.15:x :drawItemColor.4:textX 1
-    * set :drawText.15:y *tmp211
-    * set :drawText.15:alignment @right
+  456 op add :drawText.15:x 174 1
   457 print 30
-    * draw print :drawText.15:x :drawBold.4:y :drawBold.4:alignment
+  458 draw print 175 *tmp211 @right
   459 label *label106
   460 label *label104
-    * op add :drawItemColor.4:col :drawItem.4:col 1
-    * jump *label107 lessThan :drawItemColor.4:col :drawItem.4:columns
-    * set :drawItemColor.4:col 0
-    * op sub :drawItemColor.4:y :drawItem.4:y 15
+  461 op add :drawItemColor.4:col 0 1
+  462 jump *label107 lessThan 1 1
+  463 op sub :drawItemColor.4:y :drawItem.3:y 15
   464 label *label107
   465 label *label108
   466 label *label103
-    * set :drawItem.4:y :drawItemColor.4:y
   467 label *label102
   468 set :updateDisplay:y :drawItemColor.4:y
   469 label *label87
 
   476 set :drawItem.5:item .nextFactory
   477 set :drawItem.5:current :drawAirFactory:progress
   478 set :drawItem.5:target 1
-    * set :drawItemColor.5:color1 %008000FF
-    * set :drawItemColor.5:color2 %00FF00FF
   479 set :drawItemColor.5:col 0
-    * set :drawItemColor.5:y :updateDisplay:y
+  480 set :drawItemColor.5:y :drawTitleRow.2:y
   481 set :drawItemColor.5:columns 1
-    * set :drawItemColor.5:item :drawItem.5:item
-    * set :drawItemColor.5:current :drawAirFactory:progress
-    * set :drawItemColor.5:target 1
-    * op mul *tmp217 :drawItem.5:columns 176
-    * op mul *tmp218 :drawItemColor.5:columns 88
-    * op sub :drawItemColor.5:barLength 214 *tmp218
-    * op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
-    * op mul *tmp221 :drawItemColor.5:barLength :drawItem.5:current
-    * op div *tmp222 *tmp221 :drawItem.5:target
-    * op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
-    * op mul *tmp224 :drawItem.5:col 176
-    * op mul *tmp225 :drawItemColor.5:col 88
-    * op add :drawItemColor.5:iconX 11 *tmp225
-    * op mul *tmp227 :drawItem.5:col 176
-    * op div *tmp228 *tmp224 2
-    * op add :drawItemColor.5:barX 22 *tmp225
-    * op mul *tmp230 :drawItem.5:col 176
-    * op div *tmp231 *tmp224 2
-    * op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp225
+  482 op mul *tmp217 1 176
+  483 op mul *tmp218 1 88
+  484 op sub :drawItemColor.5:barLength 214 88
+  485 op add :drawItemColor.5:textEnd 48 126
+  486 op mul *tmp221 126 :drawAirFactory:progress
+  487 op div *tmp222 *tmp221 1
+  488 op min :drawItemColor.5:length 126 *tmp222
+  489 op mul *tmp224 0 176
+  490 op mul *tmp225 0 88
+  491 op add :drawItemColor.5:iconX 11 0
+  492 op mul *tmp227 0 176
+  493 op div *tmp228 0 2
+  494 op add :drawItemColor.5:barX 22 0
+  495 op mul *tmp230 0 176
+  496 op div *tmp231 0 2
+  497 op add :drawItemColor.5:textX 174 0
   498 draw col %[white]
-    * op add *tmp233 :drawItem.5:y 5
-    * draw image :drawItemColor.5:iconX *tmp233 :drawItem.5:item 16 0
+  499 op add *tmp233 :drawTitleRow.2:y 5
+  500 draw image 11 *tmp233 :drawItem.5:item 16 0
   501 draw col %008000FF
-    * draw rect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:length 10
+  502 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   503 draw col %00FF00FF
-    * draw lineRect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:barLength 10
-    * op add *tmp234 :drawItem.5:y 5
-    * op add *tmp235 *tmp233 2
-    * set :drawBold.5:x :drawItemColor.5:textX
+  504 draw lineRect 22 :drawTitleRow.2:y 126 10
+  505 op add *tmp234 :drawTitleRow.2:y 5
+  506 op add *tmp235 :drawItem.5:y 7
+  507 set :drawBold.5:x 174
   508 set :drawBold.5:y *tmp235
   509 set :drawBold.5:alignment @right
-    * set :drawText.16:x :drawItemColor.5:textX
-    * set :drawText.16:y *tmp235
-    * set :drawText.16:alignment @right
+  510 set :drawText.16:x 174
   511 print *tmp216
   512 print "%"
-    * draw print :drawBold.5:x :drawBold.5:y :drawBold.5:alignment
+  513 draw print :drawItemColor.5:textX *tmp235 @right
   514 label *label112
-    * op add :drawText.17:x :drawItemColor.5:textX 1
-    * set :drawText.17:y *tmp235
-    * set :drawText.17:alignment @right
+  515 op add :drawText.17:x 174 1
   516 print *tmp216
   517 print "%"
-    * draw print :drawText.17:x :drawBold.5:y :drawBold.5:alignment
+  518 draw print 175 *tmp235 @right
   519 label *label113
   520 label *label111
-    * op add :drawItemColor.5:col :drawItem.5:col 1
-    * jump *label114 lessThan :drawItemColor.5:col :drawItem.5:columns
-    * set :drawItemColor.5:col 0
-    * op sub :drawItemColor.5:y :drawItem.5:y 15
+  521 op add :drawItemColor.5:col 0 1
+  522 jump *label114 lessThan 1 1
+  523 op sub :drawItemColor.5:y :drawTitleRow.2:y 15
   524 label *label114
   525 label *label115
   526 label *label110
   527 set :drawItem.5:y :drawItemColor.5:y
   528 label *label109
-    * set :updateDisplay:y :drawItemColor.5:y
-    * op sub :updateDisplay:y :drawItem.5:y 15
+  529 op sub :updateDisplay:y :drawItemColor.5:y 15
   530 label *label85
   531 op sub :updateDisplay:y :updateDisplay:y 5
   532 label *label78
 
   537 draw col %[white]
   538 set :drawTitleRow.3:y :updateDisplay:y
   539 set :drawTitleRow.3:alignment @bottomLeft
-    * set :drawText.18:x 22
-    * set :drawText.18:y :updateDisplay:y
-    * set :drawText.18:alignment @bottomLeft
   540 print "Reconstructor"
-    * draw print 22 :drawTitleRow.3:y :drawTitleRow.3:alignment
+  541 draw print 22 :updateDisplay:y @bottomLeft
   542 label *label120
-    * set :drawText.19:x 23
-    * set :drawText.19:y :updateDisplay:y
-    * set :drawText.19:alignment @bottomLeft
   543 print "Reconstructor"
-    * draw print 23 :drawTitleRow.3:y :drawTitleRow.3:alignment
+  544 draw print 23 :updateDisplay:y @bottomLeft
   545 label *label121
   546 op sub :drawTitleRow.3:y :updateDisplay:y 15
   547 label *label119
 
   555 set :drawItem.6:item @graphite
   556 set :drawItem.6:current *tmp244
   557 set :drawItem.6:target 40
-    * set :drawItemColor.6:color1 %008000FF
-    * set :drawItemColor.6:color2 %00FF00FF
   558 set :drawItemColor.6:col 0
-    * set :drawItemColor.6:y :updateDisplay:y
+  559 set :drawItemColor.6:y :drawTitleRow.3:y
   560 set :drawItemColor.6:columns 1
-    * set :drawItemColor.6:item @graphite
-    * set :drawItemColor.6:current *tmp244
-    * set :drawItemColor.6:target 40
-    * op mul *tmp245 :drawItem.6:columns 176
-    * op mul *tmp246 :drawItemColor.6:columns 88
-    * op sub :drawItemColor.6:barLength 214 *tmp246
-    * op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
-    * op mul *tmp249 :drawItemColor.6:barLength :drawItem.6:current
-    * op div *tmp250 *tmp249 :drawItem.6:target
-    * op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
-    * op mul *tmp252 :drawItem.6:col 176
-    * op mul *tmp253 :drawItemColor.6:col 88
-    * op add :drawItemColor.6:iconX 11 *tmp253
-    * op mul *tmp255 :drawItem.6:col 176
-    * op div *tmp256 *tmp252 2
-    * op add :drawItemColor.6:barX 22 *tmp253
-    * op mul *tmp258 :drawItem.6:col 176
-    * op div *tmp259 *tmp252 2
-    * op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp253
+  561 op mul *tmp245 1 176
+  562 op mul *tmp246 1 88
+  563 op sub :drawItemColor.6:barLength 214 88
+  564 op add :drawItemColor.6:textEnd 48 126
+  565 op mul *tmp249 126 *tmp244
+  566 op div *tmp250 *tmp249 40
+  567 op min :drawItemColor.6:length 126 *tmp250
+  568 op mul *tmp252 0 176
+  569 op mul *tmp253 0 88
+  570 op add :drawItemColor.6:iconX 11 0
+  571 op mul *tmp255 0 176
+  572 op div *tmp256 0 2
+  573 op add :drawItemColor.6:barX 22 0
+  574 op mul *tmp258 0 176
+  575 op div *tmp259 0 2
+  576 op add :drawItemColor.6:textX 174 0
   577 draw col %[white]
-    * op add *tmp261 :drawItem.6:y 5
-    * draw image :drawItemColor.6:iconX *tmp261 :drawItem.6:item 16 0
+  578 op add *tmp261 :drawTitleRow.3:y 5
+  579 draw image 11 *tmp261 @graphite 16 0
   580 draw col %008000FF
-    * draw rect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:length 10
+  581 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   582 draw col %00FF00FF
-    * draw lineRect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:barLength 10
-    * op add *tmp262 :drawItem.6:y 5
-    * op add *tmp263 *tmp261 2
-    * set :drawBold.6:x :drawItemColor.6:textX
+  583 draw lineRect 22 :drawTitleRow.3:y 126 10
+  584 op add *tmp262 :drawTitleRow.3:y 5
+  585 op add *tmp263 :drawItem.6:y 7
+  586 set :drawBold.6:x 174
   587 set :drawBold.6:y *tmp263
   588 set :drawBold.6:alignment @right
-    * set :drawText.20:x :drawItemColor.6:textX
-    * set :drawText.20:y *tmp263
-    * set :drawText.20:alignment @right
+  589 set :drawText.20:x 174
   590 print 40
-    * draw print :drawBold.6:x :drawBold.6:y :drawBold.6:alignment
+  591 draw print :drawItemColor.6:textX *tmp263 @right
   592 label *label127
-    * op add :drawText.21:x :drawItemColor.6:textX 1
-    * set :drawText.21:y *tmp263
-    * set :drawText.21:alignment @right
+  593 op add :drawText.21:x 174 1
   594 print 40
-    * draw print :drawText.21:x :drawBold.6:y :drawBold.6:alignment
+  595 draw print 175 *tmp263 @right
   596 label *label128
   597 label *label126
-    * op add :drawItemColor.6:col :drawItem.6:col 1
-    * jump *label129 lessThan :drawItemColor.6:col :drawItem.6:columns
-    * set :drawItemColor.6:col 0
-    * op sub :drawItemColor.6:y :drawItem.6:y 15
+  598 op add :drawItemColor.6:col 0 1
+  599 jump *label129 lessThan 1 1
+  600 op sub :drawItemColor.6:y :drawTitleRow.3:y 15
   601 label *label129
   602 label *label130
   603 label *label125
 
   606 set :updateDisplay:y :drawItemColor.6:y
   607 sensor *tmp267 AÀF@Lc-additive-reconstructor25 @silicon
   608 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawItem.6:y
+  609 set :drawItem.7:y :drawItemColor.6:y
   610 set :drawItem.7:columns 1
   611 set :drawItem.7:item @silicon
   612 set :drawItem.7:current *tmp267
   613 set :drawItem.7:target 40
-    * set :drawItemColor.7:color1 %008000FF
-    * set :drawItemColor.7:color2 %00FF00FF
   614 set :drawItemColor.7:col 0
-    * set :drawItemColor.7:y :updateDisplay:y
+  615 set :drawItemColor.7:y :drawItemColor.6:y
   616 set :drawItemColor.7:columns 1
-    * set :drawItemColor.7:item @silicon
-    * set :drawItemColor.7:current *tmp267
-    * set :drawItemColor.7:target 40
-    * op mul *tmp268 :drawItem.7:columns 176
-    * op mul *tmp269 :drawItemColor.7:columns 88
-    * op sub :drawItemColor.7:barLength 214 *tmp269
-    * op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
-    * op mul *tmp272 :drawItemColor.7:barLength :drawItem.7:current
-    * op div *tmp273 *tmp272 :drawItem.7:target
-    * op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
-    * op mul *tmp275 :drawItem.7:col 176
-    * op mul *tmp276 :drawItemColor.7:col 88
-    * op add :drawItemColor.7:iconX 11 *tmp276
-    * op mul *tmp278 :drawItem.7:col 176
-    * op div *tmp279 *tmp275 2
-    * op add :drawItemColor.7:barX 22 *tmp276
-    * op mul *tmp281 :drawItem.7:col 176
-    * op div *tmp282 *tmp275 2
-    * op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp276
+  617 op mul *tmp268 1 176
+  618 op mul *tmp269 1 88
+  619 op sub :drawItemColor.7:barLength 214 88
+  620 op add :drawItemColor.7:textEnd 48 126
+  621 op mul *tmp272 126 *tmp267
+  622 op div *tmp273 *tmp272 40
+  623 op min :drawItemColor.7:length 126 *tmp273
+  624 op mul *tmp275 0 176
+  625 op mul *tmp276 0 88
+  626 op add :drawItemColor.7:iconX 11 0
+  627 op mul *tmp278 0 176
+  628 op div *tmp279 0 2
+  629 op add :drawItemColor.7:barX 22 0
+  630 op mul *tmp281 0 176
+  631 op div *tmp282 0 2
+  632 op add :drawItemColor.7:textX 174 0
   633 draw col %[white]
-    * op add *tmp284 :drawItem.7:y 5
-    * draw image :drawItemColor.7:iconX *tmp284 :drawItem.7:item 16 0
+  634 op add *tmp284 :drawItem.6:y 5
+  635 draw image 11 *tmp284 @silicon 16 0
   636 draw col %008000FF
-    * draw rect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:length 10
+  637 draw rect 22 :drawItem.6:y :drawItemColor.7:length 10
   638 draw col %00FF00FF
-    * draw lineRect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:barLength 10
-    * op add *tmp285 :drawItem.7:y 5
-    * op add *tmp286 *tmp284 2
-    * set :drawBold.7:x :drawItemColor.7:textX
+  639 draw lineRect 22 :drawItem.6:y 126 10
+  640 op add *tmp285 :drawItem.6:y 5
+  641 op add *tmp286 :drawItem.7:y 7
+  642 set :drawBold.7:x 174
   643 set :drawBold.7:y *tmp286
   644 set :drawBold.7:alignment @right
-    * set :drawText.22:x :drawItemColor.7:textX
-    * set :drawText.22:y *tmp286
-    * set :drawText.22:alignment @right
+  645 set :drawText.22:x 174
   646 print 40
-    * draw print :drawBold.7:x :drawBold.7:y :drawBold.7:alignment
+  647 draw print :drawItemColor.7:textX *tmp286 @right
   648 label *label134
-    * op add :drawText.23:x :drawItemColor.7:textX 1
-    * set :drawText.23:y *tmp286
-    * set :drawText.23:alignment @right
+  649 op add :drawText.23:x 174 1
   650 print 40
-    * draw print :drawText.23:x :drawBold.7:y :drawBold.7:alignment
+  651 draw print 175 *tmp286 @right
   652 label *label135
   653 label *label133
-    * op add :drawItemColor.7:col :drawItem.7:col 1
-    * jump *label136 lessThan :drawItemColor.7:col :drawItem.7:columns
-    * set :drawItemColor.7:col 0
-    * op sub :drawItemColor.7:y :drawItem.7:y 15
+  654 op add :drawItemColor.7:col 0 1
+  655 jump *label136 lessThan 1 1
+  656 op sub :drawItemColor.7:y :drawItem.6:y 15
   657 label *label136
   658 label *label137
   659 label *label132
-    * set :drawItem.7:y :drawItemColor.7:y
   660 label *label131
   661 set :updateDisplay:y :drawItemColor.7:y
   662 jump *label123 always
 
   668 set :drawItem.8:item @poly
   669 set :drawItem.8:current :drawAddReco:progress
   670 set :drawItem.8:target 1
-    * set :drawItemColor.8:color1 %008000FF
-    * set :drawItemColor.8:color2 %00FF00FF
   671 set :drawItemColor.8:col 0
-    * set :drawItemColor.8:y :updateDisplay:y
+  672 set :drawItemColor.8:y :drawTitleRow.3:y
   673 set :drawItemColor.8:columns 1
-    * set :drawItemColor.8:item @poly
-    * set :drawItemColor.8:current :drawAddReco:progress
-    * set :drawItemColor.8:target 1
-    * op mul *tmp292 :drawItem.8:columns 176
-    * op mul *tmp293 :drawItemColor.8:columns 88
-    * op sub :drawItemColor.8:barLength 214 *tmp293
-    * op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
-    * op mul *tmp296 :drawItemColor.8:barLength :drawItem.8:current
-    * op div *tmp297 *tmp296 :drawItem.8:target
-    * op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
-    * op mul *tmp299 :drawItem.8:col 176
-    * op mul *tmp300 :drawItemColor.8:col 88
-    * op add :drawItemColor.8:iconX 11 *tmp300
-    * op mul *tmp302 :drawItem.8:col 176
-    * op div *tmp303 *tmp299 2
-    * op add :drawItemColor.8:barX 22 *tmp300
-    * op mul *tmp305 :drawItem.8:col 176
-    * op div *tmp306 *tmp299 2
-    * op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp300
+  674 op mul *tmp292 1 176
+  675 op mul *tmp293 1 88
+  676 op sub :drawItemColor.8:barLength 214 88
+  677 op add :drawItemColor.8:textEnd 48 126
+  678 op mul *tmp296 126 :drawAddReco:progress
+  679 op div *tmp297 *tmp296 1
+  680 op min :drawItemColor.8:length 126 *tmp297
+  681 op mul *tmp299 0 176
+  682 op mul *tmp300 0 88
+  683 op add :drawItemColor.8:iconX 11 0
+  684 op mul *tmp302 0 176
+  685 op div *tmp303 0 2
+  686 op add :drawItemColor.8:barX 22 0
+  687 op mul *tmp305 0 176
+  688 op div *tmp306 0 2
+  689 op add :drawItemColor.8:textX 174 0
   690 draw col %[white]
-    * op add *tmp308 :drawItem.8:y 5
-    * draw image :drawItemColor.8:iconX *tmp308 :drawItem.8:item 16 0
+  691 op add *tmp308 :drawTitleRow.3:y 5
+  692 draw image 11 *tmp308 @poly 16 0
   693 draw col %008000FF
-    * draw rect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:length 10
+  694 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   695 draw col %00FF00FF
-    * draw lineRect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:barLength 10
-    * op add *tmp309 :drawItem.8:y 5
-    * op add *tmp310 *tmp308 2
-    * set :drawBold.8:x :drawItemColor.8:textX
+  696 draw lineRect 22 :drawTitleRow.3:y 126 10
+  697 op add *tmp309 :drawTitleRow.3:y 5
+  698 op add *tmp310 :drawItem.8:y 7
+  699 set :drawBold.8:x 174
   700 set :drawBold.8:y *tmp310
   701 set :drawBold.8:alignment @right
-    * set :drawText.24:x :drawItemColor.8:textX
-    * set :drawText.24:y *tmp310
-    * set :drawText.24:alignment @right
+  702 set :drawText.24:x 174
   703 print *tmp291
   704 print "%"
-    * draw print :drawBold.8:x :drawBold.8:y :drawBold.8:alignment
+  705 draw print :drawItemColor.8:textX *tmp310 @right
   706 label *label141
-    * op add :drawText.25:x :drawItemColor.8:textX 1
-    * set :drawText.25:y *tmp310
-    * set :drawText.25:alignment @right
+  707 op add :drawText.25:x 174 1
   708 print *tmp291
   709 print "%"
-    * draw print :drawText.25:x :drawBold.8:y :drawBold.8:alignment
+  710 draw print 175 *tmp310 @right
   711 label *label142
   712 label *label140
-    * op add :drawItemColor.8:col :drawItem.8:col 1
-    * jump *label143 lessThan :drawItemColor.8:col :drawItem.8:columns
-    * set :drawItemColor.8:col 0
-    * op sub :drawItemColor.8:y :drawItem.8:y 15
+  713 op add :drawItemColor.8:col 0 1
+  714 jump *label143 lessThan 1 1
+  715 op sub :drawItemColor.8:y :drawTitleRow.3:y 15
   716 label *label143
   717 label *label144
   718 label *label139
   719 set :drawItem.8:y :drawItemColor.8:y
   720 label *label138
-    * set :updateDisplay:y :drawItemColor.8:y
-    * op sub :updateDisplay:y :drawItem.8:y 15
+  721 op sub :updateDisplay:y :drawItemColor.8:y 15
   722 label *label123
   723 op sub :updateDisplay:y :updateDisplay:y 5
   724 label *label116
 
   730 op min :updateDisplay:y :updateDisplay:y 142
   731 set :drawTitleRow.4:y :updateDisplay:y
   732 set :drawTitleRow.4:alignment @bottomLeft
-    * set :drawText.26:x 22
-    * set :drawText.26:y :updateDisplay:y
-    * set :drawText.26:alignment @bottomLeft
   733 print "Reconstructor"
-    * draw print 22 :drawTitleRow.4:y :drawTitleRow.4:alignment
+  734 draw print 22 :updateDisplay:y @bottomLeft
   735 label *label149
-    * set :drawText.27:x 23
-    * set :drawText.27:y :updateDisplay:y
-    * set :drawText.27:alignment @bottomLeft
   736 print "Reconstructor"
-    * draw print 23 :drawTitleRow.4:y :drawTitleRow.4:alignment
+  737 draw print 23 :updateDisplay:y @bottomLeft
   738 label *label150
   739 op sub :drawTitleRow.4:y :updateDisplay:y 15
   740 label *label148
 
   748 set :drawItem.9:item @metaglass
   749 set :drawItem.9:current *tmp320
   750 set :drawItem.9:target 40
-    * set :drawItemColor.9:color1 %008000FF
-    * set :drawItemColor.9:color2 %00FF00FF
   751 set :drawItemColor.9:col 0
-    * set :drawItemColor.9:y :updateDisplay:y
+  752 set :drawItemColor.9:y :drawTitleRow.4:y
   753 set :drawItemColor.9:columns 1
-    * set :drawItemColor.9:item @metaglass
-    * set :drawItemColor.9:current *tmp320
-    * set :drawItemColor.9:target 40
-    * op mul *tmp321 :drawItem.9:columns 176
-    * op mul *tmp322 :drawItemColor.9:columns 88
-    * op sub :drawItemColor.9:barLength 214 *tmp322
-    * op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
-    * op mul *tmp325 :drawItemColor.9:barLength :drawItem.9:current
-    * op div *tmp326 *tmp325 :drawItem.9:target
-    * op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
-    * op mul *tmp328 :drawItem.9:col 176
-    * op mul *tmp329 :drawItemColor.9:col 88
-    * op add :drawItemColor.9:iconX 11 *tmp329
-    * op mul *tmp331 :drawItem.9:col 176
-    * op div *tmp332 *tmp328 2
-    * op add :drawItemColor.9:barX 22 *tmp329
-    * op mul *tmp334 :drawItem.9:col 176
-    * op div *tmp335 *tmp328 2
-    * op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp329
+  754 op mul *tmp321 1 176
+  755 op mul *tmp322 1 88
+  756 op sub :drawItemColor.9:barLength 214 88
+  757 op add :drawItemColor.9:textEnd 48 126
+  758 op mul *tmp325 126 *tmp320
+  759 op div *tmp326 *tmp325 40
+  760 op min :drawItemColor.9:length 126 *tmp326
+  761 op mul *tmp328 0 176
+  762 op mul *tmp329 0 88
+  763 op add :drawItemColor.9:iconX 11 0
+  764 op mul *tmp331 0 176
+  765 op div *tmp332 0 2
+  766 op add :drawItemColor.9:barX 22 0
+  767 op mul *tmp334 0 176
+  768 op div *tmp335 0 2
+  769 op add :drawItemColor.9:textX 174 0
   770 draw col %[white]
-    * op add *tmp337 :drawItem.9:y 5
-    * draw image :drawItemColor.9:iconX *tmp337 :drawItem.9:item 16 0
+  771 op add *tmp337 :drawTitleRow.4:y 5
+  772 draw image 11 *tmp337 @metaglass 16 0
   773 draw col %008000FF
-    * draw rect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:length 10
+  774 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   775 draw col %00FF00FF
-    * draw lineRect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:barLength 10
-    * op add *tmp338 :drawItem.9:y 5
-    * op add *tmp339 *tmp337 2
-    * set :drawBold.9:x :drawItemColor.9:textX
+  776 draw lineRect 22 :drawTitleRow.4:y 126 10
+  777 op add *tmp338 :drawTitleRow.4:y 5
+  778 op add *tmp339 :drawItem.9:y 7
+  779 set :drawBold.9:x 174
   780 set :drawBold.9:y *tmp339
   781 set :drawBold.9:alignment @right
-    * set :drawText.28:x :drawItemColor.9:textX
-    * set :drawText.28:y *tmp339
-    * set :drawText.28:alignment @right
+  782 set :drawText.28:x 174
   783 print 40
-    * draw print :drawBold.9:x :drawBold.9:y :drawBold.9:alignment
+  784 draw print :drawItemColor.9:textX *tmp339 @right
   785 label *label156
-    * op add :drawText.29:x :drawItemColor.9:textX 1
-    * set :drawText.29:y *tmp339
-    * set :drawText.29:alignment @right
+  786 op add :drawText.29:x 174 1
   787 print 40
-    * draw print :drawText.29:x :drawBold.9:y :drawBold.9:alignment
+  788 draw print 175 *tmp339 @right
   789 label *label157
   790 label *label155
-    * op add :drawItemColor.9:col :drawItem.9:col 1
-    * jump *label158 lessThan :drawItemColor.9:col :drawItem.9:columns
-    * set :drawItemColor.9:col 0
-    * op sub :drawItemColor.9:y :drawItem.9:y 15
+  791 op add :drawItemColor.9:col 0 1
+  792 jump *label158 lessThan 1 1
+  793 op sub :drawItemColor.9:y :drawTitleRow.4:y 15
   794 label *label158
   795 label *label159
   796 label *label154
 
   799 set :updateDisplay:y :drawItemColor.9:y
   800 sensor *tmp343 AÁNBJd-multiplicative-reconstructor26 @titanium
   801 set :drawItem.10:col 0
-    * set :drawItem.10:y :drawItem.9:y
+  802 set :drawItem.10:y :drawItemColor.9:y
   803 set :drawItem.10:columns 1
   804 set :drawItem.10:item @titanium
   805 set :drawItem.10:current *tmp343
   806 set :drawItem.10:target 80
-    * set :drawItemColor.10:color1 %008000FF
-    * set :drawItemColor.10:color2 %00FF00FF
   807 set :drawItemColor.10:col 0
-    * set :drawItemColor.10:y :updateDisplay:y
+  808 set :drawItemColor.10:y :drawItemColor.9:y
   809 set :drawItemColor.10:columns 1
-    * set :drawItemColor.10:item @titanium
-    * set :drawItemColor.10:current *tmp343
-    * set :drawItemColor.10:target 80
-    * op mul *tmp344 :drawItem.10:columns 176
-    * op mul *tmp345 :drawItemColor.10:columns 88
-    * op sub :drawItemColor.10:barLength 214 *tmp345
-    * op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
-    * op mul *tmp348 :drawItemColor.10:barLength :drawItem.10:current
-    * op div *tmp349 *tmp348 :drawItem.10:target
-    * op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
-    * op mul *tmp351 :drawItem.10:col 176
-    * op mul *tmp352 :drawItemColor.10:col 88
-    * op add :drawItemColor.10:iconX 11 *tmp352
-    * op mul *tmp354 :drawItem.10:col 176
-    * op div *tmp355 *tmp351 2
-    * op add :drawItemColor.10:barX 22 *tmp352
-    * op mul *tmp357 :drawItem.10:col 176
-    * op div *tmp358 *tmp351 2
-    * op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp352
+  810 op mul *tmp344 1 176
+  811 op mul *tmp345 1 88
+  812 op sub :drawItemColor.10:barLength 214 88
+  813 op add :drawItemColor.10:textEnd 48 126
+  814 op mul *tmp348 126 *tmp343
+  815 op div *tmp349 *tmp348 80
+  816 op min :drawItemColor.10:length 126 *tmp349
+  817 op mul *tmp351 0 176
+  818 op mul *tmp352 0 88
+  819 op add :drawItemColor.10:iconX 11 0
+  820 op mul *tmp354 0 176
+  821 op div *tmp355 0 2
+  822 op add :drawItemColor.10:barX 22 0
+  823 op mul *tmp357 0 176
+  824 op div *tmp358 0 2
+  825 op add :drawItemColor.10:textX 174 0
   826 draw col %[white]
-    * op add *tmp360 :drawItem.10:y 5
-    * draw image :drawItemColor.10:iconX *tmp360 :drawItem.10:item 16 0
+  827 op add *tmp360 :drawItem.9:y 5
+  828 draw image 11 *tmp360 @titanium 16 0
   829 draw col %008000FF
-    * draw rect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:length 10
+  830 draw rect 22 :drawItem.9:y :drawItemColor.10:length 10
   831 draw col %00FF00FF
-    * draw lineRect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:barLength 10
-    * op add *tmp361 :drawItem.10:y 5
-    * op add *tmp362 *tmp360 2
-    * set :drawBold.10:x :drawItemColor.10:textX
+  832 draw lineRect 22 :drawItem.9:y 126 10
+  833 op add *tmp361 :drawItem.9:y 5
+  834 op add *tmp362 :drawItem.10:y 7
+  835 set :drawBold.10:x 174
   836 set :drawBold.10:y *tmp362
   837 set :drawBold.10:alignment @right
-    * set :drawText.30:x :drawItemColor.10:textX
-    * set :drawText.30:y *tmp362
-    * set :drawText.30:alignment @right
+  838 set :drawText.30:x 174
   839 print 80
-    * draw print :drawBold.10:x :drawBold.10:y :drawBold.10:alignment
+  840 draw print :drawItemColor.10:textX *tmp362 @right
   841 label *label163
-    * op add :drawText.31:x :drawItemColor.10:textX 1
-    * set :drawText.31:y *tmp362
-    * set :drawText.31:alignment @right
+  842 op add :drawText.31:x 174 1
   843 print 80
-    * draw print :drawText.31:x :drawBold.10:y :drawBold.10:alignment
+  844 draw print 175 *tmp362 @right
   845 label *label164
   846 label *label162
-    * op add :drawItemColor.10:col :drawItem.10:col 1
-    * jump *label165 lessThan :drawItemColor.10:col :drawItem.10:columns
-    * set :drawItemColor.10:col 0
-    * op sub :drawItemColor.10:y :drawItem.10:y 15
+  847 op add :drawItemColor.10:col 0 1
+  848 jump *label165 lessThan 1 1
+  849 op sub :drawItemColor.10:y :drawItem.9:y 15
   850 label *label165
   851 label *label166
   852 label *label161
 
   855 set :updateDisplay:y :drawItemColor.10:y
   856 sensor *tmp366 AÁNBJd-multiplicative-reconstructor26 @silicon
   857 set :drawItem.11:col 0
-    * set :drawItem.11:y :drawItem.10:y
+  858 set :drawItem.11:y :drawItemColor.10:y
   859 set :drawItem.11:columns 1
   860 set :drawItem.11:item @silicon
   861 set :drawItem.11:current *tmp366
   862 set :drawItem.11:target 130
-    * set :drawItemColor.11:color1 %008000FF
-    * set :drawItemColor.11:color2 %00FF00FF
   863 set :drawItemColor.11:col 0
-    * set :drawItemColor.11:y :updateDisplay:y
+  864 set :drawItemColor.11:y :drawItemColor.10:y
   865 set :drawItemColor.11:columns 1
-    * set :drawItemColor.11:item @silicon
-    * set :drawItemColor.11:current *tmp366
-    * set :drawItemColor.11:target 130
-    * op mul *tmp367 :drawItem.11:columns 176
-    * op mul *tmp368 :drawItemColor.11:columns 88
-    * op sub :drawItemColor.11:barLength 214 *tmp368
-    * op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
-    * op mul *tmp371 :drawItemColor.11:barLength :drawItem.11:current
-    * op div *tmp372 *tmp371 :drawItem.11:target
-    * op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
-    * op mul *tmp374 :drawItem.11:col 176
-    * op mul *tmp375 :drawItemColor.11:col 88
-    * op add :drawItemColor.11:iconX 11 *tmp375
-    * op mul *tmp377 :drawItem.11:col 176
-    * op div *tmp378 *tmp374 2
-    * op add :drawItemColor.11:barX 22 *tmp375
-    * op mul *tmp380 :drawItem.11:col 176
-    * op div *tmp381 *tmp374 2
-    * op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp375
+  866 op mul *tmp367 1 176
+  867 op mul *tmp368 1 88
+  868 op sub :drawItemColor.11:barLength 214 88
+  869 op add :drawItemColor.11:textEnd 48 126
+  870 op mul *tmp371 126 *tmp366
+  871 op div *tmp372 *tmp371 130
+  872 op min :drawItemColor.11:length 126 *tmp372
+  873 op mul *tmp374 0 176
+  874 op mul *tmp375 0 88
+  875 op add :drawItemColor.11:iconX 11 0
+  876 op mul *tmp377 0 176
+  877 op div *tmp378 0 2
+  878 op add :drawItemColor.11:barX 22 0
+  879 op mul *tmp380 0 176
+  880 op div *tmp381 0 2
+  881 op add :drawItemColor.11:textX 174 0
   882 draw col %[white]
-    * op add *tmp383 :drawItem.11:y 5
-    * draw image :drawItemColor.11:iconX *tmp383 :drawItem.11:item 16 0
+  883 op add *tmp383 :drawItem.10:y 5
+  884 draw image 11 *tmp383 @silicon 16 0
   885 draw col %008000FF
-    * draw rect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:length 10
+  886 draw rect 22 :drawItem.10:y :drawItemColor.11:length 10
   887 draw col %00FF00FF
-    * draw lineRect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:barLength 10
-    * op add *tmp384 :drawItem.11:y 5
-    * op add *tmp385 *tmp383 2
-    * set :drawBold.11:x :drawItemColor.11:textX
+  888 draw lineRect 22 :drawItem.10:y 126 10
+  889 op add *tmp384 :drawItem.10:y 5
+  890 op add *tmp385 :drawItem.11:y 7
+  891 set :drawBold.11:x 174
   892 set :drawBold.11:y *tmp385
   893 set :drawBold.11:alignment @right
-    * set :drawText.32:x :drawItemColor.11:textX
-    * set :drawText.32:y *tmp385
-    * set :drawText.32:alignment @right
+  894 set :drawText.32:x 174
   895 print 130
-    * draw print :drawBold.11:x :drawBold.11:y :drawBold.11:alignment
+  896 draw print :drawItemColor.11:textX *tmp385 @right
   897 label *label170
-    * op add :drawText.33:x :drawItemColor.11:textX 1
-    * set :drawText.33:y *tmp385
-    * set :drawText.33:alignment @right
+  898 op add :drawText.33:x 174 1
   899 print 130
-    * draw print :drawText.33:x :drawBold.11:y :drawBold.11:alignment
+  900 draw print 175 *tmp385 @right
   901 label *label171
   902 label *label169
-    * op add :drawItemColor.11:col :drawItem.11:col 1
-    * jump *label172 lessThan :drawItemColor.11:col :drawItem.11:columns
-    * set :drawItemColor.11:col 0
-    * op sub :drawItemColor.11:y :drawItem.11:y 15
+  903 op add :drawItemColor.11:col 0 1
+  904 jump *label172 lessThan 1 1
+  905 op sub :drawItemColor.11:y :drawItem.10:y 15
   906 label *label172
   907 label *label173
   908 label *label168
-    * set :drawItem.11:y :drawItemColor.11:y
   909 label *label167
   910 set :updateDisplay:y :drawItemColor.11:y
   911 jump *label152 always
 
   917 set :drawItem.12:item @mega
   918 set :drawItem.12:current :drawMultiReco:progress
   919 set :drawItem.12:target 1
-    * set :drawItemColor.12:color1 %008000FF
-    * set :drawItemColor.12:color2 %00FF00FF
   920 set :drawItemColor.12:col 0
-    * set :drawItemColor.12:y :updateDisplay:y
+  921 set :drawItemColor.12:y :drawTitleRow.4:y
   922 set :drawItemColor.12:columns 1
-    * set :drawItemColor.12:item @mega
-    * set :drawItemColor.12:current :drawMultiReco:progress
-    * set :drawItemColor.12:target 1
-    * op mul *tmp391 :drawItem.12:columns 176
-    * op mul *tmp392 :drawItemColor.12:columns 88
-    * op sub :drawItemColor.12:barLength 214 *tmp392
-    * op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
-    * op mul *tmp395 :drawItemColor.12:barLength :drawItem.12:current
-    * op div *tmp396 *tmp395 :drawItem.12:target
-    * op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
-    * op mul *tmp398 :drawItem.12:col 176
-    * op mul *tmp399 :drawItemColor.12:col 88
-    * op add :drawItemColor.12:iconX 11 *tmp399
-    * op mul *tmp401 :drawItem.12:col 176
-    * op div *tmp402 *tmp398 2
-    * op add :drawItemColor.12:barX 22 *tmp399
-    * op mul *tmp404 :drawItem.12:col 176
-    * op div *tmp405 *tmp398 2
-    * op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp399
+  923 op mul *tmp391 1 176
+  924 op mul *tmp392 1 88
+  925 op sub :drawItemColor.12:barLength 214 88
+  926 op add :drawItemColor.12:textEnd 48 126
+  927 op mul *tmp395 126 :drawMultiReco:progress
+  928 op div *tmp396 *tmp395 1
+  929 op min :drawItemColor.12:length 126 *tmp396
+  930 op mul *tmp398 0 176
+  931 op mul *tmp399 0 88
+  932 op add :drawItemColor.12:iconX 11 0
+  933 op mul *tmp401 0 176
+  934 op div *tmp402 0 2
+  935 op add :drawItemColor.12:barX 22 0
+  936 op mul *tmp404 0 176
+  937 op div *tmp405 0 2
+  938 op add :drawItemColor.12:textX 174 0
   939 draw col %[white]
-    * op add *tmp407 :drawItem.12:y 5
-    * draw image :drawItemColor.12:iconX *tmp407 :drawItem.12:item 16 0
+  940 op add *tmp407 :drawTitleRow.4:y 5
+  941 draw image 11 *tmp407 @mega 16 0
   942 draw col %008000FF
-    * draw rect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:length 10
+  943 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   944 draw col %00FF00FF
-    * draw lineRect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:barLength 10
-    * op add *tmp408 :drawItem.12:y 5
-    * op add *tmp409 *tmp407 2
-    * set :drawBold.12:x :drawItemColor.12:textX
+  945 draw lineRect 22 :drawTitleRow.4:y 126 10
+  946 op add *tmp408 :drawTitleRow.4:y 5
+  947 op add *tmp409 :drawItem.12:y 7
+  948 set :drawBold.12:x 174
   949 set :drawBold.12:y *tmp409
   950 set :drawBold.12:alignment @right
-    * set :drawText.34:x :drawItemColor.12:textX
-    * set :drawText.34:y *tmp409
-    * set :drawText.34:alignment @right
+  951 set :drawText.34:x 174
   952 print *tmp390
   953 print "%"
-    * draw print :drawBold.12:x :drawBold.12:y :drawBold.12:alignment
+  954 draw print :drawItemColor.12:textX *tmp409 @right
   955 label *label177
-    * op add :drawText.35:x :drawItemColor.12:textX 1
-    * set :drawText.35:y *tmp409
-    * set :drawText.35:alignment @right
+  956 op add :drawText.35:x 174 1
   957 print *tmp390
   958 print "%"
-    * draw print :drawText.35:x :drawBold.12:y :drawBold.12:alignment
+  959 draw print 175 *tmp409 @right
   960 label *label178
   961 label *label176
-    * op add :drawItemColor.12:col :drawItem.12:col 1
-    * jump *label179 lessThan :drawItemColor.12:col :drawItem.12:columns
-    * set :drawItemColor.12:col 0
-    * op sub :drawItemColor.12:y :drawItem.12:y 15
+  962 op add :drawItemColor.12:col 0 1
+  963 jump *label179 lessThan 1 1
+  964 op sub :drawItemColor.12:y :drawTitleRow.4:y 15
   965 label *label179
   966 label *label180
   967 label *label175
   968 set :drawItem.12:y :drawItemColor.12:y
   969 label *label174
-    * set :updateDisplay:y :drawItemColor.12:y
-    * op sub :updateDisplay:y :drawItem.12:y 30
+  970 op sub :updateDisplay:y :drawItemColor.12:y 30
   971 label *label152
   972 op sub :updateDisplay:y :updateDisplay:y 5
   973 label *label145
 
   979 draw col %[white]
   980 set :drawTitleRow.5:y :updateDisplay:y
   981 set :drawTitleRow.5:alignment @bottomLeft
-    * set :drawText.36:x 22
-    * set :drawText.36:y :updateDisplay:y
-    * set :drawText.36:alignment @bottomLeft
   982 print "Builder"
-    * draw print 22 :drawTitleRow.5:y :drawTitleRow.5:alignment
+  983 draw print 22 :updateDisplay:y @bottomLeft
   984 label *label185
-    * set :drawText.37:x 23
-    * set :drawText.37:y :updateDisplay:y
-    * set :drawText.37:alignment @bottomLeft
   985 print "Builder"
-    * draw print 23 :drawTitleRow.5:y :drawTitleRow.5:alignment
+  986 draw print 23 :updateDisplay:y @bottomLeft
   987 label *label186
   988 op sub :drawTitleRow.5:y :updateDisplay:y 15
   989 label *label184
 
   993 set :drawUnit:items 0
   994 set :drawUnit:y :drawTitleRow.5:y
   995 set :drawItem.13:col 0
-    * set :drawItem.13:y :updateDisplay:y
+  996 set :drawItem.13:y :drawTitleRow.5:y
   997 set :drawItem.13:columns 1
   998 set :drawItem.13:item @poly
   999 set :drawItem.13:current 0
  1000 set :drawItem.13:target .transportTarget
-    * set :drawItemColor.13:color1 %008000FF
-    * set :drawItemColor.13:color2 %00FF00FF
  1001 set :drawItemColor.13:col 0
-    * set :drawItemColor.13:y :drawUnit:y
+ 1002 set :drawItemColor.13:y :drawTitleRow.5:y
  1003 set :drawItemColor.13:columns 1
-    * set :drawItemColor.13:item :drawUnit:item
-    * set :drawItemColor.13:current :drawUnit:items
-    * set :drawItemColor.13:target :drawItem.13:target
-    * op mul *tmp417 :drawItem.13:columns 176
-    * op mul *tmp418 :drawItemColor.13:columns 88
-    * op sub :drawItemColor.13:barLength 214 *tmp418
-    * op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
-    * op mul *tmp421 :drawItemColor.13:barLength :drawItem.13:current
-    * op div *tmp422 *tmp421 :drawItem.13:target
-    * op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
-    * op mul *tmp424 :drawItem.13:col 176
-    * op mul *tmp425 :drawItemColor.13:col 88
-    * op add :drawItemColor.13:iconX 11 *tmp425
-    * op mul *tmp427 :drawItem.13:col 176
-    * op div *tmp428 *tmp424 2
-    * op add :drawItemColor.13:barX 22 *tmp425
-    * op mul *tmp430 :drawItem.13:col 176
-    * op div *tmp431 *tmp424 2
-    * op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp425
+ 1004 set :drawItemColor.13:item @poly
+ 1005 set :drawItemColor.13:current 0
+ 1006 op mul *tmp417 1 176
+ 1007 op mul *tmp418 1 88
+ 1008 op sub :drawItemColor.13:barLength 214 88
+ 1009 op add :drawItemColor.13:textEnd 48 126
+ 1010 op mul *tmp421 126 0
+ 1011 op div *tmp422 0 :drawItem.13:target
+ 1012 op min :drawItemColor.13:length 126 *tmp422
+ 1013 op mul *tmp424 0 176
+ 1014 op mul *tmp425 0 88
+ 1015 op add :drawItemColor.13:iconX 11 0
+ 1016 op mul *tmp427 0 176
+ 1017 op div *tmp428 0 2
+ 1018 op add :drawItemColor.13:barX 22 0
+ 1019 op mul *tmp430 0 176
+ 1020 op div *tmp431 0 2
+ 1021 op add :drawItemColor.13:textX 174 0
  1022 draw col %[white]
-    * op add *tmp433 :drawItem.13:y 5
-    * draw image :drawItemColor.13:iconX *tmp433 :drawItem.13:item 16 0
+ 1023 op add *tmp433 :updateDisplay:y 5
+ 1024 draw image 11 *tmp433 @poly 16 0
  1025 draw col %008000FF
-    * draw rect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:length 10
+ 1026 draw rect 22 :updateDisplay:y :drawItemColor.13:length 10
  1027 draw col %00FF00FF
-    * draw lineRect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:barLength 10
-    * op add *tmp434 :drawItem.13:y 5
-    * op add *tmp435 *tmp433 2
-    * set :drawBold.13:x :drawItemColor.13:textX
+ 1028 draw lineRect 22 :updateDisplay:y 126 10
+ 1029 op add *tmp434 :updateDisplay:y 5
+ 1030 op add *tmp435 :drawItem.13:y 7
+ 1031 set :drawBold.13:x 174
  1032 set :drawBold.13:y *tmp435
  1033 set :drawBold.13:alignment @right
-    * set :drawText.38:x :drawItemColor.13:textX
-    * set :drawText.38:y *tmp435
-    * set :drawText.38:alignment @right
+ 1034 set :drawText.38:x 174
  1035 print .transportTarget
-    * draw print :drawBold.13:x :drawBold.13:y :drawBold.13:alignment
+ 1036 draw print :drawItemColor.13:textX *tmp435 @right
  1037 label *label193
-    * op add :drawText.39:x :drawItemColor.13:textX 1
-    * set :drawText.39:y *tmp435
-    * set :drawText.39:alignment @right
+ 1038 op add :drawText.39:x 174 1
  1039 print .transportTarget
-    * draw print :drawText.39:x :drawBold.13:y :drawBold.13:alignment
+ 1040 draw print 175 *tmp435 @right
  1041 label *label194
  1042 label *label192
-    * op add :drawItemColor.13:col :drawItem.13:col 1
-    * jump *label195 lessThan :drawItemColor.13:col :drawItem.13:columns
-    * set :drawItemColor.13:col 0
-    * op sub :drawItemColor.13:y :drawItem.13:y 15
+ 1043 op add :drawItemColor.13:col 0 1
+ 1044 jump *label195 lessThan 1 1
+ 1045 op sub :drawItemColor.13:y :updateDisplay:y 15
  1046 label *label195
  1047 label *label196
  1048 label *label191
  1049 set :drawItem.13:y :drawItemColor.13:y
  1050 label *label190
-    * set :drawUnit:y :drawItemColor.13:y
  1051 label *label189
-    * set :updateDisplay:y :drawItem.13:y
+ 1052 set :updateDisplay:y :drawItemColor.13:y
  1053 jump *label188 always
  1054 label *label187
  1055 sensor :drawBuilder:unitItem @unit @firstItem
 
  1060 set :drawUnit.1:items *tmp444
  1061 set :drawUnit.1:y :drawTitleRow.5:y
  1062 set :drawItem.14:col 0
-    * set :drawItem.14:y :updateDisplay:y
+ 1063 set :drawItem.14:y :drawTitleRow.5:y
  1064 set :drawItem.14:columns 1
  1065 set :drawItem.14:item :drawUnit.1:item
  1066 set :drawItem.14:current *tmp444
  1067 set :drawItem.14:target .transportTarget
-    * set :drawItemColor.14:color1 %008000FF
-    * set :drawItemColor.14:color2 %00FF00FF
  1068 set :drawItemColor.14:col 0
-    * set :drawItemColor.14:y :drawUnit.1:y
+ 1069 set :drawItemColor.14:y :drawTitleRow.5:y
  1070 set :drawItemColor.14:columns 1
-    * set :drawItemColor.14:item :drawUnit.1:item
-    * set :drawItemColor.14:current :drawUnit.1:items
-    * set :drawItemColor.14:target :drawItem.14:target
-    * op mul *tmp445 :drawItem.14:columns 176
-    * op mul *tmp446 :drawItemColor.14:columns 88
-    * op sub :drawItemColor.14:barLength 214 *tmp446
-    * op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
-    * op mul *tmp449 :drawItemColor.14:barLength :drawItem.14:current
+ 1071 set :drawItemColor.14:current *tmp444
+ 1072 op mul *tmp445 1 176
+ 1073 op mul *tmp446 1 88
+ 1074 op sub :drawItemColor.14:barLength 214 88
+ 1075 op add :drawItemColor.14:textEnd 48 126
+ 1076 op mul *tmp449 126 *tmp444
  1077 op div *tmp450 *tmp449 :drawItem.14:target
-    * op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
-    * op mul *tmp452 :drawItem.14:col 176
-    * op mul *tmp453 :drawItemColor.14:col 88
-    * op add :drawItemColor.14:iconX 11 *tmp453
-    * op mul *tmp455 :drawItem.14:col 176
-    * op div *tmp456 *tmp452 2
-    * op add :drawItemColor.14:barX 22 *tmp453
-    * op mul *tmp458 :drawItem.14:col 176
-    * op div *tmp459 *tmp452 2
-    * op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp453
+ 1078 op min :drawItemColor.14:length 126 *tmp450
+ 1079 op mul *tmp452 0 176
+ 1080 op mul *tmp453 0 88
+ 1081 op add :drawItemColor.14:iconX 11 0
+ 1082 op mul *tmp455 0 176
+ 1083 op div *tmp456 0 2
+ 1084 op add :drawItemColor.14:barX 22 0
+ 1085 op mul *tmp458 0 176
+ 1086 op div *tmp459 0 2
+ 1087 op add :drawItemColor.14:textX 174 0
  1088 draw col %[white]
-    * op add *tmp461 :drawItem.14:y 5
-    * draw image :drawItemColor.14:iconX *tmp461 :drawItem.14:item 16 0
+ 1089 op add *tmp461 :updateDisplay:y 5
+ 1090 draw image 11 *tmp461 :drawUnit.1:item 16 0
  1091 draw col %008000FF
-    * draw rect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:length 10
+ 1092 draw rect 22 :updateDisplay:y :drawItemColor.14:length 10
  1093 draw col %00FF00FF
-    * draw lineRect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:barLength 10
-    * op add *tmp462 :drawItem.14:y 5
-    * op add *tmp463 *tmp461 2
-    * set :drawBold.14:x :drawItemColor.14:textX
+ 1094 draw lineRect 22 :updateDisplay:y 126 10
+ 1095 op add *tmp462 :updateDisplay:y 5
+ 1096 op add *tmp463 :drawItem.14:y 7
+ 1097 set :drawBold.14:x 174
  1098 set :drawBold.14:y *tmp463
  1099 set :drawBold.14:alignment @right
-    * set :drawText.40:x :drawItemColor.14:textX
-    * set :drawText.40:y *tmp463
-    * set :drawText.40:alignment @right
+ 1100 set :drawText.40:x 174
  1101 print .transportTarget
-    * draw print :drawBold.14:x :drawBold.14:y :drawBold.14:alignment
+ 1102 draw print :drawItemColor.14:textX *tmp463 @right
  1103 label *label201
-    * op add :drawText.41:x :drawItemColor.14:textX 1
-    * set :drawText.41:y *tmp463
-    * set :drawText.41:alignment @right
+ 1104 op add :drawText.41:x 174 1
  1105 print .transportTarget
-    * draw print :drawText.41:x :drawBold.14:y :drawBold.14:alignment
+ 1106 draw print 175 *tmp463 @right
  1107 label *label202
  1108 label *label200
-    * op add :drawItemColor.14:col :drawItem.14:col 1
-    * jump *label203 lessThan :drawItemColor.14:col :drawItem.14:columns
-    * set :drawItemColor.14:col 0
-    * op sub :drawItemColor.14:y :drawItem.14:y 15
+ 1109 op add :drawItemColor.14:col 0 1
+ 1110 jump *label203 lessThan 1 1
+ 1111 op sub :drawItemColor.14:y :updateDisplay:y 15
  1112 label *label203
  1113 label *label204
  1114 label *label199
  1115 set :drawItem.14:y :drawItemColor.14:y
  1116 label *label198
-    * set :drawUnit.1:y :drawItemColor.14:y
  1117 label *label197
-    * set :updateDisplay:y :drawItem.14:y
+ 1118 set :updateDisplay:y :drawItemColor.14:y
  1119 label *label188
  1120 label *label181
  1121 jump *label206 greaterThanEq :updateDisplay:y 20
 
  1130 draw col %[white]
  1131 set :drawTitleRow.6:y 20
  1132 set :drawTitleRow.6:alignment @bottomLeft
-    * set :drawText.42:x 22
-    * set :drawText.42:y :updateDisplay:y
-    * set :drawText.42:alignment @bottomLeft
+ 1133 set :drawText.42:y 20
  1134 print "Power"
-    * draw print 22 :drawTitleRow.6:y :drawTitleRow.6:alignment
+ 1135 draw print 22 20 @bottomLeft
  1136 label *label211
-    * set :drawText.43:x 23
-    * set :drawText.43:y :updateDisplay:y
-    * set :drawText.43:alignment @bottomLeft
+ 1137 set :drawText.43:y 20
  1138 print "Power"
-    * draw print 23 :drawTitleRow.6:y :drawTitleRow.6:alignment
+ 1139 draw print 23 20 @bottomLeft
  1140 label *label212
-    * op sub :drawTitleRow.6:y :updateDisplay:y 15
+ 1141 op sub :drawTitleRow.6:y 20 15
  1142 label *label210
-    * set :updateDisplay:y :drawTitleRow.6:y
+ 1143 set :updateDisplay:y 5
  1144 sensor :drawPower:power AJTJK-battery1 @totalPower
  1145 op mul *tmp474 :drawPower:power 100
  1146 op idiv *tmp476 *tmp474 4000
-    * set :drawItemColor.15:color1 %808000FF
-    * set :drawItemColor.15:color2 %FFFF00FF
-    * set :drawItemColor.15:col 0
-    * set :drawItemColor.15:y :drawTitleRow.6:y
-    * set :drawItemColor.15:columns 1
-    * set :drawItemColor.15:item @battery
-    * set :drawItemColor.15:current :drawPower:power
-    * set :drawItemColor.15:target 4000
-    * op mul *tmp477 1 176
-    * op div *tmp478 176 2
-    * op sub :drawItemColor.15:barLength 214 88
-    * op add :drawItemColor.15:textEnd 48 126
+ 1147 set :drawItemColor.15:y 5
  1148 op mul *tmp481 126 :drawPower:power
-    * op div *tmp482 *tmp481 4000
+ 1149 op mul *tmp482 :drawPower:power 0.0315
  1150 op min :drawItemColor.15:length 126 *tmp482
-    * op mul *tmp484 0 176
-    * op div *tmp485 0 2
-    * op add :drawItemColor.15:iconX 11 0
-    * op mul *tmp487 0 176
-    * op div *tmp488 0 2
-    * op add :drawItemColor.15:barX 22 0
-    * op mul *tmp490 0 176
-    * op div *tmp491 0 2
  1151 op add :drawItemColor.15:textX 174 0
  1152 draw col %[white]
-    * op add *tmp493 :updateDisplay:y 5
+ 1153 op add *tmp493 :drawTitleRow.6:y 5
  1154 draw image 11 *tmp493 @battery 16 0
  1155 draw col %808000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.15:length 10
+ 1156 draw rect 22 :drawTitleRow.6:y :drawItemColor.15:length 10
  1157 draw col %FFFF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp494 :updateDisplay:y 5
-    * op add *tmp495 *tmp493 2
+ 1158 draw lineRect 22 :drawTitleRow.6:y 126 10
+ 1159 op add *tmp494 :drawTitleRow.6:y 5
+ 1160 op add *tmp495 :updateDisplay:y 7
  1161 set :drawBold.15:x 174
  1162 set :drawBold.15:y *tmp495
  1163 set :drawBold.15:alignment @right
-    * set :drawText.44:x :drawItemColor.15:textX
-    * set :drawText.44:y *tmp495
-    * set :drawText.44:alignment @right
+ 1164 set :drawText.44:x 174
  1165 print *tmp476
  1166 print "%"
-    * draw print :drawBold.15:x :drawBold.15:y :drawBold.15:alignment
+ 1167 draw print 174 *tmp495 @right
  1168 label *label215
-    * op add :drawText.45:x :drawItemColor.15:textX 1
-    * set :drawText.45:y *tmp495
-    * set :drawText.45:alignment @right
+ 1169 op add :drawText.45:x 174 1
  1170 print *tmp476
  1171 print "%"
-    * draw print :drawText.45:x :drawBold.15:y :drawBold.15:alignment
+ 1172 draw print 175 *tmp495 @right
  1173 label *label216
  1174 label *label214
-    * op add :drawItemColor.15:col 0 1
  1175 jump *label217 lessThan 1 1
-    * op sub :drawItemColor.15:y :updateDisplay:y 15
+ 1176 op sub :drawItemColor.15:y :drawTitleRow.6:y 15
  1177 label *label217
  1178 label *label218
  1179 label *label213
 
  1185 label *label20
  1186 jump *label219 notEqual .page 1
  1187 read :displayStorage:tail bank2 510
-    * set :displayStorage:START 190
  1188 jump *label222 equal .pageSwitched false
  1189 read .lastTail bank2 511
  1190 draw col %[gold]
  1191 set :drawBold.16:x 11
  1192 set :drawBold.16:y 206
  1193 set :drawBold.16:alignment @left
-    * set :drawText.46:x 11
-    * set :drawText.46:y 206
-    * set :drawText.46:alignment @left
  1194 print "Resources"
-    * draw print :drawBold.16:x :drawBold.16:y :drawBold.16:alignment
+ 1195 draw print 11 206 @left
  1196 label *label225
-    * op add :drawText.47:x 11 1
-    * set :drawText.47:y 206
-    * set :drawText.47:alignment @left
  1197 print "Resources"
-    * draw print 12 :drawBold.16:y :drawBold.16:alignment
+ 1198 draw print 12 206 @left
  1199 label *label226
  1200 label *label224
  1201 draw col %[white]
 
  1288 set :drawBold.17:x 90
  1289 set :drawBold.17:y 206
  1290 set :drawBold.17:alignment @center
-    * set :drawText.48:x 90
-    * set :drawText.48:y 206
-    * set :drawText.48:alignment @center
  1291 print "Base map"
-    * draw print :drawBold.17:x :drawBold.17:y :drawBold.17:alignment
+ 1292 draw print 90 206 @center
  1293 label *label254
-    * op add :drawText.49:x 90 1
-    * set :drawText.49:y 206
-    * set :drawText.49:alignment @center
  1294 print "Base map"
-    * draw print 91 :drawBold.17:y :drawBold.17:alignment
+ 1295 draw print 91 206 @center
  1296 label *label255
  1297 label *label253
  1298 draw col %[white]
 
  1489 label *label247
  1490 op sub :displayLog:page .page 3
  1491 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1492 op sub *tmp539 510 :displayLog:logPosition
  1493 op idiv *tmp540 *tmp539 39
  1494 op add *tmp541 *tmp540 1
 
  1503 set :drawBold.18:x 4
  1504 set :drawBold.18:y 206
  1505 set :drawBold.18:alignment @left
-    * set :drawText.50:x 4
-    * set :drawText.50:y 206
-    * set :drawText.50:alignment @left
  1506 print "Build records"
-    * draw print :drawBold.18:x :drawBold.18:y :drawBold.18:alignment
+ 1507 draw print 4 206 @left
  1508 label *label312
-    * op add :drawText.51:x 4 1
-    * set :drawText.51:y 206
-    * set :drawText.51:alignment @left
  1509 print "Build records"
-    * draw print 5 :drawBold.18:y :drawBold.18:alignment
+ 1510 draw print 5 206 @left
  1511 label *label313
  1512 label *label311
  1513 op sub *tmp550 .page 2
  1514 print *tmp550
  1515 print "/"
-    * set :drawText.52:x 172
-    * set :drawText.52:y 206
-    * set :drawText.52:alignment @right
  1516 print :displayLog:pages
  1517 draw print 172 206 @right
  1518 label *label314
 
  1522 setaddr :drawHeader*retaddr *label315 (h:*label315)
  1523 call *label4 *invalid :drawHeader*retval (m:*label315) (h:*label315)
  1524 label *label315
-    * set *tmp551 :displayLog:stop
  1525 op sub :displayLog:position .lastRecord 1
  1526 label *label316
  1527 jump *label318 lessThan :displayLog:position :displayLog:stop
  1528 read :displayLog:record bank1 :displayLog:position
  1529 op sub *tmp554 :displayLog:start :displayLog:position
  1530 op sub *tmp555 *tmp554 1
-    * set :displayRecord:record :displayLog:record
-    * set :displayRecord:index *tmp555
  1531 op idiv :displayRecord:col *tmp555 13
  1532 op mod :displayRecord:row *tmp555 13
  1533 op mul *tmp558 58 :displayRecord:col
 
  1542 label *label320
  1543 lookup block *tmp564 :displayRecord:id
  1544 label *label321
-    * set :displayRecord:icon *tmp564
  1545 op div *tmp568 :displayLog:record 1000
  1546 op idiv :displayRecord:t *tmp568 120
  1547 op idiv :displayRecord:m :displayRecord:t 60
 
  1556 print ":"
  1557 print *tmp574
  1558 draw image :displayRecord:x :displayRecord:y *tmp564 14 0
-    * op add *tmp575 :displayRecord:x 56
  1559 op add *tmp576 :displayRecord:x 44
  1560 op add *tmp577 :displayRecord:y 2
-    * set :drawText.53:x *tmp576
-    * set :drawText.53:y *tmp577
-    * set :drawText.53:alignment @right
  1561 print :displayRecord:s
  1562 draw print *tmp576 *tmp577 @right
  1563 label *label324
 
  1640 label *label335
  1641 set *tmp597 ""
  1642 label *label336
-    * set :drawHeader:zero *tmp597
  1643 set :drawBold.19:x 25
  1644 set :drawBold.19:y 71
  1645 set :drawBold.19:alignment @center
-    * set :drawText.54:x 25
-    * set :drawText.54:y 71
-    * set :drawText.54:alignment @center
  1646 print :drawHeader:m
  1647 print ":"
  1648 print *tmp597
  1649 print :drawHeader:s
-    * draw print :drawBold.19:x :drawBold.19:y :drawBold.19:alignment
+ 1650 draw print 25 71 @center
  1651 label *label338
-    * op add :drawText.55:x 25 1
-    * set :drawText.55:y 71
-    * set :drawText.55:alignment @center
  1652 print :drawHeader:m
  1653 print ":"
  1654 print *tmp597
  1655 print :drawHeader:s
-    * draw print 26 :drawBold.19:y :drawBold.19:alignment
+ 1656 draw print 26 71 @center
  1657 label *label339
  1658 label *label337
  1659 draw col %[white]
 
  1664 set :drawBold.20:x 42
  1665 set :drawBold.20:y 261
  1666 set :drawBold.20:alignment @bottom
-    * set :drawText.56:x 42
-    * set :drawText.56:y 261
-    * set :drawText.56:alignment @bottom
  1667 print "Goal"
-    * draw print :drawBold.20:x :drawBold.20:y :drawBold.20:alignment
+ 1668 draw print 42 261 @bottom
  1669 label *label341
-    * op add :drawText.57:x 42 1
-    * set :drawText.57:y 261
-    * set :drawText.57:alignment @bottom
  1670 print "Goal"
-    * draw print 43 :drawBold.20:y :drawBold.20:alignment
+ 1671 draw print 43 261 @bottom
  1672 label *label342
  1673 label *label340
  1674 draw col %[white]
 
  1758 print *tmp624
  1759 print "."
  1760 print *tmp625
-    * set :drawText.58:x 174
-    * set :drawText.58:y 272
-    * set :drawText.58:alignment @topRight
  1761 print ")"
  1762 draw print 174 272 @topRight
  1763 label *label369
 
  1766 set :drawHeader:x.1 174
  1767 op log10 *tmp629 :drawHeader:count.1
  1768 op floor :drawHeader:len *tmp629
-    * set :drawText.59:x 174
-    * set :drawText.59:y 255
-    * set :drawText.59:alignment @topRight
  1769 print "x"
  1770 print :drawHeader:count.1
-    * draw print :drawHeader:x.1 255 @topRight
+ 1771 draw print 174 255 @topRight
  1772 label *label372
-    * op sub *tmp631 174 20
  1773 op mul *tmp632 7 :drawHeader:len
  1774 op sub *tmp633 154 *tmp632
  1775 draw image *tmp633 246 @scrap 12 0
 
  1777 set :drawHeader:x.1 124
  1778 op log10 *tmp635 :drawHeader:count.1
  1779 op floor :drawHeader:len *tmp635
-    * set :drawText.60:x 124
-    * set :drawText.60:y 255
-    * set :drawText.60:alignment @topRight
  1780 print "x"
  1781 print :drawHeader:count.1
-    * draw print :drawHeader:x.1 255 @topRight
+ 1782 draw print 124 255 @topRight
  1783 label *label373
-    * op sub *tmp637 124 20
  1784 op mul *tmp638 7 :drawHeader:len
  1785 op sub *tmp639 104 *tmp638
  1786 draw image *tmp639 246 @sand 12 0
 
  1792 set :drawHeader:x.2 174
  1793 op log10 *tmp643 :drawHeader:count.2
  1794 op floor :drawHeader:len.1 *tmp643
-    * set :drawText.61:x 174
-    * set :drawText.61:y 255
-    * set :drawText.61:alignment @topRight
  1795 print "x"
  1796 print :drawHeader:count.2
-    * draw print :drawHeader:x.2 255 @topRight
+ 1797 draw print 174 255 @topRight
  1798 label *label376
-    * op sub *tmp645 174 20
  1799 op mul *tmp646 7 :drawHeader:len.1
  1800 op sub *tmp647 154 *tmp646
  1801 draw image *tmp647 246 @titanium 12 0
 
  1806 set :drawHeader:x.3 124
  1807 op log10 *tmp650 :drawHeader:count.3
  1808 op floor :drawHeader:len.2 *tmp650
-    * set :drawText.62:x 124
-    * set :drawText.62:y 255
-    * set :drawText.62:alignment @topRight
  1809 print "x"
  1810 print :drawHeader:count.3
-    * draw print :drawHeader:x.3 255 @topRight
+ 1811 draw print 124 255 @topRight
  1812 label *label379
-    * op sub *tmp652 124 20
  1813 op mul *tmp653 7 :drawHeader:len.2
  1814 op sub *tmp654 104 *tmp653
  1815 draw image *tmp654 246 @thorium 12 0
 
  1818 label *label371
  1819 set :drawHeader:x.4 174
  1820 draw col %[white]
-    * set :drawUnitCount:type @poly
  1821 set :drawUnitCount:count .polys
  1822 jump *label381 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp657 174 20
  1823 draw image 154 227 @poly 12 0
-    * set :drawText.63:x 174
-    * set :drawText.63:y 229
-    * set :drawText.63:alignment @right
  1824 print "x"
  1825 print :drawUnitCount:count
-    * draw print :drawHeader:x.4 229 @right
+ 1826 draw print 174 229 @right
  1827 label *label383
  1828 op sub :drawHeader:x.4 174 30
  1829 label *label381
  1830 label *label382
  1831 label *label380
-    * set :drawUnitCount.1:type @mono
  1832 set :drawUnitCount.1:count .monos
  1833 jump *label385 lessThanEq :drawUnitCount.1:count 0
  1834 op sub *tmp660 :drawHeader:x.4 20
  1835 draw image *tmp660 227 @mono 12 0
-    * set :drawText.64:x :drawHeader:x.4
-    * set :drawText.64:y 229
-    * set :drawText.64:alignment @right
  1836 print "x"
  1837 print :drawUnitCount.1:count
  1838 draw print :drawHeader:x.4 229 @right
 
  1841 label *label385
  1842 label *label386
  1843 label *label384
-    * set :drawUnitCount.2:type @flare
  1844 set :drawUnitCount.2:count .flares
  1845 jump *label389 lessThanEq :drawUnitCount.2:count 0
  1846 op sub *tmp663 :drawHeader:x.4 20
  1847 draw image *tmp663 227 @flare 12 0
-    * set :drawText.65:x :drawHeader:x.4
-    * set :drawText.65:y 229
-    * set :drawText.65:alignment @right
  1848 print "x"
  1849 print :drawUnitCount.2:count
  1850 draw print :drawHeader:x.4 229 @right
 
  1857 return :drawHeader*retaddr
  1858 end
  1859 label *label5
-    * set :setupScale:size 220
  1860 draw reset
  1861 draw translate 90 105
-    * op div *tmp664 220 15
-    * op div *tmp665 14.666666666666666 2
-    * op div *tmp666 220 15
-    * op div *tmp667 14.666666666666666 2
  1862 draw scale 7.333333333333333 7.333333333333333
  1863 label *label392
  1864 return :setupScale*retaddr
  1865 end
  1866 label *label6
  1867 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 1
  1868 set *tmp668 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp669 :unpackCfg2:cfg *tmp668
+ 1869 read *tmp669 :drawBlock:cfg 1
  1870 op sub *tmp670 *tmp669 74
  1871 lookup block :unpackCfg:type *tmp670
  1872 set *tmp672 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp673 :unpackCfg2:cfg *tmp672
+ 1873 read *tmp673 :drawBlock:cfg 2
  1874 op sub *tmp674 *tmp673 74
  1875 op div :unpackCfg:x *tmp674 2
  1876 set *tmp676 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp677 :unpackCfg2:cfg *tmp676
+ 1877 read *tmp677 :drawBlock:cfg 3
  1878 op sub *tmp678 *tmp677 74
  1879 op div :unpackCfg:y *tmp678 2
  1880 set *tmp680 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp681 :unpackCfg2:cfg *tmp680
+ 1881 read *tmp681 :drawBlock:cfg 4
  1882 op sub :unpackCfg:rotation *tmp681 74
  1883 set *tmp683 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp684 :unpackCfg2:cfg *tmp683
+ 1884 read *tmp684 :drawBlock:cfg 5
  1885 op sub :unpackCfg:ind *tmp684 74
  1886 sensor :unpackCfg:size :unpackCfg:type @size
  1887 label *label395
-    * set :unpackCfg2:type :unpackCfg:type
-    * set :unpackCfg2:x :unpackCfg:x
-    * set :unpackCfg2:y :unpackCfg:y
-    * set :unpackCfg2:rotation :unpackCfg:rotation
-    * set :unpackCfg2:size :unpackCfg:size
  1888 set :unpackCfg2:index :unpackCfg:ind
  1889 label *label394
  1890 set :drawBlock:type :unpackCfg:type
 
  1892 set :drawBlock:y :unpackCfg:y
  1893 set :drawBlock:rotation :unpackCfg:rotation
  1894 set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
-    * op shl *tmp694 1 :unpackCfg2:index
+ 1895 op shl *tmp694 1 :unpackCfg:ind
  1896 op and *tmp695 .blocksBuilt *tmp694
  1897 jump *label396 equal *tmp695 false
  1898 draw col %[white]

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-455 instructions):
 
    72 op equal *tmp76 .nextBlock @ore-titanium
    73 op or *tmp77 *tmp75 *tmp76
    74 jump *label36 equal *tmp77 false
-    * set :drawTitleRow:y 201
-    * set :drawTitleRow:alignment @bottomLeft
-    * set :drawText:y 201
    75 print "Locating ore..."
    76 draw print 22 201 @bottomLeft
    77 label *label39
-    * set :drawText.1:y 201
    78 print "Locating ore..."
    79 draw print 23 201 @bottomLeft
    80 label *label40
    81 op sub :drawTitleRow:y 201 15
    82 label *label38
-    * set :updateDisplay:y 186
-    * set :drawItem:col 0
    83 set :drawItem:y 186
-    * set :drawItem:columns 1
    84 set :drawItem:item .nextBlock
    85 read :drawItem:current processor3 ".mapProgress"
    86 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:col 0
-    * set :drawItemColor:y :drawTitleRow:y
-    * set :drawItemColor:columns 1
-    * op mul *tmp79 1 176
-    * op mul *tmp80 1 88
-    * op sub :drawItemColor:barLength 214 88
-    * op add :drawItemColor:textEnd 48 126
+   87 set :drawItemColor:y 186
    88 op mul *tmp83 126 :drawItem:current
    89 op div *tmp84 *tmp83 :drawItem:target
    90 op min :drawItemColor:length 126 *tmp84
-    * op mul *tmp86 0 176
-    * op mul *tmp87 0 88
-    * op add :drawItemColor:iconX 11 0
-    * op mul *tmp89 0 176
-    * op div *tmp90 0 2
-    * op add :drawItemColor:barX 22 0
-    * op mul *tmp92 0 176
-    * op div *tmp93 0 2
    91 op add :drawItemColor:textX 174 0
    92 draw col %[white]
-    * op add *tmp95 :drawTitleRow:y 5
-    * draw image 11 *tmp95 :drawItem:item 16 0
+   93 op add *tmp95 186 5
+   94 draw image 11 191 :drawItem:item 16 0
    95 draw col %008000FF
-    * draw rect 22 :drawTitleRow:y :drawItemColor:length 10
+   96 draw rect 22 186 :drawItemColor:length 10
    97 draw col %00FF00FF
-    * draw lineRect 22 :drawTitleRow:y 126 10
-    * op add *tmp96 :drawTitleRow:y 5
-    * op add *tmp97 :drawItem:y 7
-    * set :drawBold:x 174
-    * set :drawBold:y *tmp97
-    * set :drawBold:alignment @right
-    * set :drawText.2:x 174
+   98 draw lineRect 22 186 126 10
+   99 op add *tmp96 186 5
+  100 op add *tmp97 186 7
+  101 set :drawBold:y 193
   102 print "x"
   103 read *tmp98 processor3 ".mapSpots"
   104 print *tmp98
-    * draw print :drawItemColor:textX *tmp97 @right
+  105 draw print 174 193 @right
   106 label *label44
-    * op add :drawText.3:x 174 1
   107 print "x"
   108 read *tmp100 processor3 ".mapSpots"
   109 print *tmp100
-    * draw print 175 *tmp97 @right
+  110 draw print 175 193 @right
   111 label *label45
   112 label *label43
-    * op add :drawItemColor:col 0 1
   113 jump *label46 lessThan 1 1
-    * op sub :drawItemColor:y :drawTitleRow:y 15
+  114 op sub :drawItemColor:y 186 15
   115 label *label46
   116 label *label47
   117 label *label42
-    * set :drawItem:y :drawItemColor:y
+  118 set :drawItem:y 171
   119 label *label41
-    * op sub :updateDisplay:y :drawItemColor:y 35
+  120 op sub :updateDisplay:y 171 35
   121 jump *label37 always
   122 label *label36
   123 jump *label48 equal .nextBlock null
   124 set :drawMaterials:count .totalTargets
-    * set :drawTitleRow.1:y 201
-    * set :drawTitleRow.1:alignment @bottomLeft
-    * set :drawText.4:y 201
   125 print "Materials"
   126 draw print 22 201 @bottomLeft
   127 label *label51
-    * set :drawText.5:y 201
   128 print "Materials"
   129 draw print 23 201 @bottomLeft
   130 label *label52
-    * op sub :drawTitleRow.1:y 201 15
   131 label *label50
   132 set :updateDisplay:y 186
   133 set :drawMaterials:columns 1
 
   170 sensor *tmp110 .core :drawMaterials:item
   171 set :drawItem.1:col :drawMaterials:col
   172 set :drawItem.1:y :updateDisplay:y
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:item
-    * set :drawItem.1:current *tmp110
-    * set :drawItem.1:target :drawMaterials:target
-    * set :drawItemColor.1:col :drawMaterials:col
   173 set :drawItemColor.1:y :updateDisplay:y
-    * set :drawItemColor.1:columns 1
-    * op mul *tmp111 1 176
-    * op mul *tmp112 :drawMaterials:columns 88
-    * op sub :drawItemColor.1:barLength 214 *tmp112
-    * op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength *tmp110
+  174 op mul *tmp112 1 88
+  175 op sub :drawItemColor.1:barLength 214 88
+  176 op add :drawItemColor.1:textEnd 48 126
+  177 op mul *tmp115 126 *tmp110
   178 op div *tmp116 *tmp115 :drawMaterials:target
-    * op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawMaterials:col 176
+  179 op min :drawItemColor.1:length 126 *tmp116
   180 op mul *tmp119 :drawMaterials:col 88
   181 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawMaterials:col 176
-    * op mul *tmp122 :drawItem.1:col 88
+  182 op mul *tmp122 :drawMaterials:col 88
   183 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp124 :drawMaterials:col 176
-    * op mul *tmp125 :drawItem.1:col 88
-    * op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
+  184 op mul *tmp125 :drawMaterials:col 88
+  185 op add :drawItemColor.1:textX 174 *tmp119
   186 draw col %[white]
   187 op add *tmp127 :updateDisplay:y 5
   188 draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0
   189 draw col %008000FF
   190 draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10
   191 draw col %00FF00FF
-    * draw lineRect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :updateDisplay:y 5
-    * op add *tmp129 :drawItem.1:y 7
-    * set :drawBold.1:x :drawItemColor.1:textX
-    * set :drawBold.1:y *tmp129
-    * set :drawBold.1:alignment @right
+  192 draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10
+  193 op add *tmp129 :updateDisplay:y 7
   194 print :drawMaterials:target
   195 draw print :drawItemColor.1:textX *tmp129 @right
   196 label *label70
 
   238 label *label79
   239 label *label80
   240 draw col %[white]
-    * set :drawTitleRow.2:y :updateDisplay:y
-    * set :drawTitleRow.2:alignment @bottomLeft
   241 print "Air Factory"
   242 draw print 22 :updateDisplay:y @bottomLeft
   243 label *label82
 
   246 label *label83
   247 op sub :drawTitleRow.2:y :updateDisplay:y 15
   248 label *label81
-    * set :updateDisplay:y :drawTitleRow.2:y
   249 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   250 jump *label84 notEqual :drawAirFactory:progress 0
   251 jump *label86 notEqual .nextFactory @flare
   252 sensor *tmp146 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.2:col 0
   253 set :drawItem.2:y :drawTitleRow.2:y
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item @silicon
-    * set :drawItem.2:current *tmp146
-    * set :drawItem.2:target 15
-    * set :drawItemColor.2:col 0
-    * set :drawItemColor.2:y :drawTitleRow.2:y
-    * set :drawItemColor.2:columns 1
-    * op mul *tmp147 1 176
-    * op mul *tmp148 1 88
-    * op sub :drawItemColor.2:barLength 214 88
-    * op add :drawItemColor.2:textEnd 48 126
   254 op mul *tmp151 126 *tmp146
-    * op div *tmp152 *tmp151 15
+  255 op mul *tmp152 *tmp146 8.4
   256 op min :drawItemColor.2:length 126 *tmp152
-    * op mul *tmp154 0 176
-    * op mul *tmp155 0 88
-    * op add :drawItemColor.2:iconX 11 0
-    * op mul *tmp157 0 176
-    * op div *tmp158 0 2
-    * op add :drawItemColor.2:barX 22 0
-    * op mul *tmp160 0 176
-    * op div *tmp161 0 2
   257 op add :drawItemColor.2:textX 174 0
   258 draw col %[white]
   259 op add *tmp163 :drawTitleRow.2:y 5
 
   262 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   263 draw col %00FF00FF
   264 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp164 :drawTitleRow.2:y 5
-    * op add *tmp165 :drawItem.2:y 7
-    * set :drawBold.2:x 174
-    * set :drawBold.2:y *tmp165
-    * set :drawBold.2:alignment @right
-    * set :drawText.10:x 174
+  265 op add *tmp165 :drawTitleRow.2:y 7
   266 print 15
-    * draw print :drawItemColor.2:textX *tmp165 @right
+  267 draw print 174 *tmp165 @right
   268 label *label91
-    * op add :drawText.11:x 174 1
   269 print 15
   270 draw print 175 *tmp165 @right
   271 label *label92
   272 label *label90
-    * op add :drawItemColor.2:col 0 1
   273 jump *label93 lessThan 1 1
   274 op sub :drawItemColor.2:y :drawTitleRow.2:y 15
   275 label *label93
   276 label *label94
   277 label *label89
-    * set :drawItem.2:y :drawItemColor.2:y
   278 label *label88
-    * op sub :updateDisplay:y :drawItemColor.2:y 15
+  279 op sub :updateDisplay:y :drawTitleRow.2:y 30
   280 jump *label87 always
   281 label *label86
   282 sensor *tmp169 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:col 0
   283 set :drawItem.3:y :drawTitleRow.2:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item @lead
-    * set :drawItem.3:current *tmp169
-    * set :drawItem.3:target 15
-    * set :drawItemColor.3:col 0
-    * set :drawItemColor.3:y :drawTitleRow.2:y
-    * set :drawItemColor.3:columns 1
-    * op mul *tmp170 1 176
-    * op mul *tmp171 1 88
-    * op sub :drawItemColor.3:barLength 214 88
-    * op add :drawItemColor.3:textEnd 48 126
   284 op mul *tmp174 126 *tmp169
-    * op div *tmp175 *tmp174 15
+  285 op mul *tmp175 *tmp169 8.4
   286 op min :drawItemColor.3:length 126 *tmp175
-    * op mul *tmp177 0 176
-    * op mul *tmp178 0 88
-    * op add :drawItemColor.3:iconX 11 0
-    * op mul *tmp180 0 176
-    * op div *tmp181 0 2
-    * op add :drawItemColor.3:barX 22 0
-    * op mul *tmp183 0 176
-    * op div *tmp184 0 2
   287 op add :drawItemColor.3:textX 174 0
   288 draw col %[white]
   289 op add *tmp186 :drawTitleRow.2:y 5
 
   292 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   293 draw col %00FF00FF
   294 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp187 :drawTitleRow.2:y 5
-    * op add *tmp188 :drawItem.3:y 7
-    * set :drawBold.3:x 174
-    * set :drawBold.3:y *tmp188
-    * set :drawBold.3:alignment @right
-    * set :drawText.12:x 174
+  295 op add *tmp188 :drawTitleRow.2:y 7
   296 print 15
-    * draw print :drawItemColor.3:textX *tmp188 @right
+  297 draw print 174 *tmp188 @right
   298 label *label98
-    * op add :drawText.13:x 174 1
   299 print 15
   300 draw print 175 *tmp188 @right
   301 label *label99
   302 label *label97
-    * op add :drawItemColor.3:col 0 1
   303 jump *label100 lessThan 1 1
   304 op sub :drawItemColor.3:y :drawTitleRow.2:y 15
   305 label *label100
 
   307 label *label96
   308 set :drawItem.3:y :drawItemColor.3:y
   309 label *label95
-    * set :updateDisplay:y :drawItemColor.3:y
   310 sensor *tmp192 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.4:col 0
   311 set :drawItem.4:y :drawItemColor.3:y
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @silicon
-    * set :drawItem.4:current *tmp192
-    * set :drawItem.4:target 30
-    * set :drawItemColor.4:col 0
-    * set :drawItemColor.4:y :drawItemColor.3:y
-    * set :drawItemColor.4:columns 1
-    * op mul *tmp193 1 176
-    * op mul *tmp194 1 88
-    * op sub :drawItemColor.4:barLength 214 88
-    * op add :drawItemColor.4:textEnd 48 126
   312 op mul *tmp197 126 *tmp192
-    * op div *tmp198 *tmp197 30
+  313 op mul *tmp198 *tmp192 4.2
   314 op min :drawItemColor.4:length 126 *tmp198
-    * op mul *tmp200 0 176
-    * op mul *tmp201 0 88
-    * op add :drawItemColor.4:iconX 11 0
-    * op mul *tmp203 0 176
-    * op div *tmp204 0 2
-    * op add :drawItemColor.4:barX 22 0
-    * op mul *tmp206 0 176
-    * op div *tmp207 0 2
   315 op add :drawItemColor.4:textX 174 0
   316 draw col %[white]
-    * op add *tmp209 :drawItem.3:y 5
+  317 op add *tmp209 :drawItemColor.3:y 5
   318 draw image 11 *tmp209 @silicon 16 0
   319 draw col %008000FF
-    * draw rect 22 :drawItem.3:y :drawItemColor.4:length 10
+  320 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   321 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.3:y 126 10
-    * op add *tmp210 :drawItem.3:y 5
-    * op add *tmp211 :drawItem.4:y 7
-    * set :drawBold.4:x 174
-    * set :drawBold.4:y *tmp211
-    * set :drawBold.4:alignment @right
-    * set :drawText.14:x 174
+  322 draw lineRect 22 :drawItemColor.3:y 126 10
+  323 op add *tmp210 :drawItemColor.3:y 5
+  324 op add *tmp211 :drawItemColor.3:y 7
   325 print 30
-    * draw print :drawItemColor.4:textX *tmp211 @right
+  326 draw print 174 *tmp211 @right
   327 label *label105
-    * op add :drawText.15:x 174 1
   328 print 30
   329 draw print 175 *tmp211 @right
   330 label *label106
   331 label *label104
-    * op add :drawItemColor.4:col 0 1
   332 jump *label107 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawItem.3:y 15
+  333 op sub :drawItemColor.4:y :drawItemColor.3:y 15
   334 label *label107
   335 label *label108
   336 label *label103
 
   340 jump *label85 always
   341 label *label84
   342 op idiv *tmp216 :drawAirFactory:progress 0.01
-    * set :drawItem.5:col 0
   343 set :drawItem.5:y :drawTitleRow.2:y
-    * set :drawItem.5:columns 1
   344 set :drawItem.5:item .nextFactory
-    * set :drawItem.5:current :drawAirFactory:progress
-    * set :drawItem.5:target 1
-    * set :drawItemColor.5:col 0
-    * set :drawItemColor.5:y :drawTitleRow.2:y
-    * set :drawItemColor.5:columns 1
-    * op mul *tmp217 1 176
-    * op mul *tmp218 1 88
-    * op sub :drawItemColor.5:barLength 214 88
-    * op add :drawItemColor.5:textEnd 48 126
   345 op mul *tmp221 126 :drawAirFactory:progress
-    * op div *tmp222 *tmp221 1
+  346 op mul *tmp222 :drawAirFactory:progress 126
   347 op min :drawItemColor.5:length 126 *tmp222
-    * op mul *tmp224 0 176
-    * op mul *tmp225 0 88
-    * op add :drawItemColor.5:iconX 11 0
-    * op mul *tmp227 0 176
-    * op div *tmp228 0 2
-    * op add :drawItemColor.5:barX 22 0
-    * op mul *tmp230 0 176
-    * op div *tmp231 0 2
   348 op add :drawItemColor.5:textX 174 0
   349 draw col %[white]
   350 op add *tmp233 :drawTitleRow.2:y 5
 
   353 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   354 draw col %00FF00FF
   355 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp234 :drawTitleRow.2:y 5
-    * op add *tmp235 :drawItem.5:y 7
-    * set :drawBold.5:x 174
-    * set :drawBold.5:y *tmp235
-    * set :drawBold.5:alignment @right
-    * set :drawText.16:x 174
+  356 op add *tmp235 :drawTitleRow.2:y 7
   357 print *tmp216
   358 print "%"
-    * draw print :drawItemColor.5:textX *tmp235 @right
+  359 draw print 174 *tmp235 @right
   360 label *label112
-    * op add :drawText.17:x 174 1
   361 print *tmp216
   362 print "%"
   363 draw print 175 *tmp235 @right
   364 label *label113
   365 label *label111
-    * op add :drawItemColor.5:col 0 1
   366 jump *label114 lessThan 1 1
   367 op sub :drawItemColor.5:y :drawTitleRow.2:y 15
   368 label *label114
   369 label *label115
   370 label *label110
-    * set :drawItem.5:y :drawItemColor.5:y
   371 label *label109
-    * op sub :updateDisplay:y :drawItemColor.5:y 15
+  372 op sub :updateDisplay:y :drawTitleRow.2:y 30
   373 label *label85
   374 op sub :updateDisplay:y :updateDisplay:y 5
   375 label *label78
 
   378 label *label117
   379 label *label118
   380 draw col %[white]
-    * set :drawTitleRow.3:y :updateDisplay:y
-    * set :drawTitleRow.3:alignment @bottomLeft
   381 print "Reconstructor"
   382 draw print 22 :updateDisplay:y @bottomLeft
   383 label *label120
 
   386 label *label121
   387 op sub :drawTitleRow.3:y :updateDisplay:y 15
   388 label *label119
-    * set :updateDisplay:y :drawTitleRow.3:y
   389 sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 @progress
   390 jump *label122 notEqual :drawAddReco:progress 0
   391 sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite
-    * set :drawItem.6:col 0
   392 set :drawItem.6:y :drawTitleRow.3:y
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @graphite
-    * set :drawItem.6:current *tmp244
-    * set :drawItem.6:target 40
-    * set :drawItemColor.6:col 0
-    * set :drawItemColor.6:y :drawTitleRow.3:y
-    * set :drawItemColor.6:columns 1
-    * op mul *tmp245 1 176
-    * op mul *tmp246 1 88
-    * op sub :drawItemColor.6:barLength 214 88
-    * op add :drawItemColor.6:textEnd 48 126
   393 op mul *tmp249 126 *tmp244
-    * op div *tmp250 *tmp249 40
+  394 op mul *tmp250 *tmp244 3.1500000000000004
   395 op min :drawItemColor.6:length 126 *tmp250
-    * op mul *tmp252 0 176
-    * op mul *tmp253 0 88
-    * op add :drawItemColor.6:iconX 11 0
-    * op mul *tmp255 0 176
-    * op div *tmp256 0 2
-    * op add :drawItemColor.6:barX 22 0
-    * op mul *tmp258 0 176
-    * op div *tmp259 0 2
   396 op add :drawItemColor.6:textX 174 0
   397 draw col %[white]
   398 op add *tmp261 :drawTitleRow.3:y 5
 
   401 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   402 draw col %00FF00FF
   403 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp262 :drawTitleRow.3:y 5
-    * op add *tmp263 :drawItem.6:y 7
-    * set :drawBold.6:x 174
-    * set :drawBold.6:y *tmp263
-    * set :drawBold.6:alignment @right
-    * set :drawText.20:x 174
+  404 op add *tmp263 :drawTitleRow.3:y 7
   405 print 40
-    * draw print :drawItemColor.6:textX *tmp263 @right
+  406 draw print 174 *tmp263 @right
   407 label *label127
-    * op add :drawText.21:x 174 1
   408 print 40
   409 draw print 175 *tmp263 @right
   410 label *label128
   411 label *label126
-    * op add :drawItemColor.6:col 0 1
   412 jump *label129 lessThan 1 1
   413 op sub :drawItemColor.6:y :drawTitleRow.3:y 15
   414 label *label129
 
   416 label *label125
   417 set :drawItem.6:y :drawItemColor.6:y
   418 label *label124
-    * set :updateDisplay:y :drawItemColor.6:y
   419 sensor *tmp267 AÀF@Lc-additive-reconstructor25 @silicon
-    * set :drawItem.7:col 0
   420 set :drawItem.7:y :drawItemColor.6:y
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item @silicon
-    * set :drawItem.7:current *tmp267
-    * set :drawItem.7:target 40
-    * set :drawItemColor.7:col 0
-    * set :drawItemColor.7:y :drawItemColor.6:y
-    * set :drawItemColor.7:columns 1
-    * op mul *tmp268 1 176
-    * op mul *tmp269 1 88
-    * op sub :drawItemColor.7:barLength 214 88
-    * op add :drawItemColor.7:textEnd 48 126
   421 op mul *tmp272 126 *tmp267
-    * op div *tmp273 *tmp272 40
+  422 op mul *tmp273 *tmp267 3.1500000000000004
   423 op min :drawItemColor.7:length 126 *tmp273
-    * op mul *tmp275 0 176
-    * op mul *tmp276 0 88
-    * op add :drawItemColor.7:iconX 11 0
-    * op mul *tmp278 0 176
-    * op div *tmp279 0 2
-    * op add :drawItemColor.7:barX 22 0
-    * op mul *tmp281 0 176
-    * op div *tmp282 0 2
   424 op add :drawItemColor.7:textX 174 0
   425 draw col %[white]
-    * op add *tmp284 :drawItem.6:y 5
+  426 op add *tmp284 :drawItemColor.6:y 5
   427 draw image 11 *tmp284 @silicon 16 0
   428 draw col %008000FF
-    * draw rect 22 :drawItem.6:y :drawItemColor.7:length 10
+  429 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   430 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.6:y 126 10
-    * op add *tmp285 :drawItem.6:y 5
-    * op add *tmp286 :drawItem.7:y 7
-    * set :drawBold.7:x 174
-    * set :drawBold.7:y *tmp286
-    * set :drawBold.7:alignment @right
-    * set :drawText.22:x 174
+  431 draw lineRect 22 :drawItemColor.6:y 126 10
+  432 op add *tmp285 :drawItemColor.6:y 5
+  433 op add *tmp286 :drawItemColor.6:y 7
   434 print 40
-    * draw print :drawItemColor.7:textX *tmp286 @right
+  435 draw print 174 *tmp286 @right
   436 label *label134
-    * op add :drawText.23:x 174 1
   437 print 40
   438 draw print 175 *tmp286 @right
   439 label *label135
   440 label *label133
-    * op add :drawItemColor.7:col 0 1
   441 jump *label136 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawItem.6:y 15
+  442 op sub :drawItemColor.7:y :drawItemColor.6:y 15
   443 label *label136
   444 label *label137
   445 label *label132
 
   448 jump *label123 always
   449 label *label122
   450 op idiv *tmp291 :drawAddReco:progress 0.01
-    * set :drawItem.8:col 0
   451 set :drawItem.8:y :drawTitleRow.3:y
-    * set :drawItem.8:columns 1
-    * set :drawItem.8:item @poly
-    * set :drawItem.8:current :drawAddReco:progress
-    * set :drawItem.8:target 1
-    * set :drawItemColor.8:col 0
-    * set :drawItemColor.8:y :drawTitleRow.3:y
-    * set :drawItemColor.8:columns 1
-    * op mul *tmp292 1 176
-    * op mul *tmp293 1 88
-    * op sub :drawItemColor.8:barLength 214 88
-    * op add :drawItemColor.8:textEnd 48 126
   452 op mul *tmp296 126 :drawAddReco:progress
-    * op div *tmp297 *tmp296 1
+  453 op mul *tmp297 :drawAddReco:progress 126
   454 op min :drawItemColor.8:length 126 *tmp297
-    * op mul *tmp299 0 176
-    * op mul *tmp300 0 88
-    * op add :drawItemColor.8:iconX 11 0
-    * op mul *tmp302 0 176
-    * op div *tmp303 0 2
-    * op add :drawItemColor.8:barX 22 0
-    * op mul *tmp305 0 176
-    * op div *tmp306 0 2
   455 op add :drawItemColor.8:textX 174 0
   456 draw col %[white]
   457 op add *tmp308 :drawTitleRow.3:y 5
 
   460 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   461 draw col %00FF00FF
   462 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp309 :drawTitleRow.3:y 5
-    * op add *tmp310 :drawItem.8:y 7
-    * set :drawBold.8:x 174
-    * set :drawBold.8:y *tmp310
-    * set :drawBold.8:alignment @right
-    * set :drawText.24:x 174
+  463 op add *tmp310 :drawTitleRow.3:y 7
   464 print *tmp291
   465 print "%"
-    * draw print :drawItemColor.8:textX *tmp310 @right
+  466 draw print 174 *tmp310 @right
   467 label *label141
-    * op add :drawText.25:x 174 1
   468 print *tmp291
   469 print "%"
   470 draw print 175 *tmp310 @right
   471 label *label142
   472 label *label140
-    * op add :drawItemColor.8:col 0 1
   473 jump *label143 lessThan 1 1
   474 op sub :drawItemColor.8:y :drawTitleRow.3:y 15
   475 label *label143
   476 label *label144
   477 label *label139
-    * set :drawItem.8:y :drawItemColor.8:y
   478 label *label138
-    * op sub :updateDisplay:y :drawItemColor.8:y 15
+  479 op sub :updateDisplay:y :drawTitleRow.3:y 30
   480 label *label123
   481 op sub :updateDisplay:y :updateDisplay:y 5
   482 label *label116
 
   486 label *label147
   487 draw col %[white]
   488 op min :updateDisplay:y :updateDisplay:y 142
-    * set :drawTitleRow.4:y :updateDisplay:y
-    * set :drawTitleRow.4:alignment @bottomLeft
   489 print "Reconstructor"
   490 draw print 22 :updateDisplay:y @bottomLeft
   491 label *label149
 
   494 label *label150
   495 op sub :drawTitleRow.4:y :updateDisplay:y 15
   496 label *label148
-    * set :updateDisplay:y :drawTitleRow.4:y
   497 sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconstructor26 @progress
   498 jump *label151 notEqual :drawMultiReco:progress 0
   499 sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metaglass
-    * set :drawItem.9:col 0
   500 set :drawItem.9:y :drawTitleRow.4:y
-    * set :drawItem.9:columns 1
-    * set :drawItem.9:item @metaglass
-    * set :drawItem.9:current *tmp320
-    * set :drawItem.9:target 40
-    * set :drawItemColor.9:col 0
-    * set :drawItemColor.9:y :drawTitleRow.4:y
-    * set :drawItemColor.9:columns 1
-    * op mul *tmp321 1 176
-    * op mul *tmp322 1 88
-    * op sub :drawItemColor.9:barLength 214 88
-    * op add :drawItemColor.9:textEnd 48 126
   501 op mul *tmp325 126 *tmp320
-    * op div *tmp326 *tmp325 40
+  502 op mul *tmp326 *tmp320 3.1500000000000004
   503 op min :drawItemColor.9:length 126 *tmp326
-    * op mul *tmp328 0 176
-    * op mul *tmp329 0 88
-    * op add :drawItemColor.9:iconX 11 0
-    * op mul *tmp331 0 176
-    * op div *tmp332 0 2
-    * op add :drawItemColor.9:barX 22 0
-    * op mul *tmp334 0 176
-    * op div *tmp335 0 2
   504 op add :drawItemColor.9:textX 174 0
   505 draw col %[white]
   506 op add *tmp337 :drawTitleRow.4:y 5
 
   509 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   510 draw col %00FF00FF
   511 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp338 :drawTitleRow.4:y 5
-    * op add *tmp339 :drawItem.9:y 7
-    * set :drawBold.9:x 174
-    * set :drawBold.9:y *tmp339
-    * set :drawBold.9:alignment @right
-    * set :drawText.28:x 174
+  512 op add *tmp339 :drawTitleRow.4:y 7
   513 print 40
-    * draw print :drawItemColor.9:textX *tmp339 @right
+  514 draw print 174 *tmp339 @right
   515 label *label156
-    * op add :drawText.29:x 174 1
   516 print 40
   517 draw print 175 *tmp339 @right
   518 label *label157
   519 label *label155
-    * op add :drawItemColor.9:col 0 1
   520 jump *label158 lessThan 1 1
   521 op sub :drawItemColor.9:y :drawTitleRow.4:y 15
   522 label *label158
 
   524 label *label154
   525 set :drawItem.9:y :drawItemColor.9:y
   526 label *label153
-    * set :updateDisplay:y :drawItemColor.9:y
   527 sensor *tmp343 AÁNBJd-multiplicative-reconstructor26 @titanium
-    * set :drawItem.10:col 0
   528 set :drawItem.10:y :drawItemColor.9:y
-    * set :drawItem.10:columns 1
-    * set :drawItem.10:item @titanium
-    * set :drawItem.10:current *tmp343
-    * set :drawItem.10:target 80
-    * set :drawItemColor.10:col 0
-    * set :drawItemColor.10:y :drawItemColor.9:y
-    * set :drawItemColor.10:columns 1
-    * op mul *tmp344 1 176
-    * op mul *tmp345 1 88
-    * op sub :drawItemColor.10:barLength 214 88
-    * op add :drawItemColor.10:textEnd 48 126
   529 op mul *tmp348 126 *tmp343
-    * op div *tmp349 *tmp348 80
+  530 op div *tmp349 *tmp343 0.6349206349206349
   531 op min :drawItemColor.10:length 126 *tmp349
-    * op mul *tmp351 0 176
-    * op mul *tmp352 0 88
-    * op add :drawItemColor.10:iconX 11 0
-    * op mul *tmp354 0 176
-    * op div *tmp355 0 2
-    * op add :drawItemColor.10:barX 22 0
-    * op mul *tmp357 0 176
-    * op div *tmp358 0 2
   532 op add :drawItemColor.10:textX 174 0
   533 draw col %[white]
-    * op add *tmp360 :drawItem.9:y 5
+  534 op add *tmp360 :drawItemColor.9:y 5
   535 draw image 11 *tmp360 @titanium 16 0
   536 draw col %008000FF
-    * draw rect 22 :drawItem.9:y :drawItemColor.10:length 10
+  537 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   538 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.9:y 126 10
-    * op add *tmp361 :drawItem.9:y 5
-    * op add *tmp362 :drawItem.10:y 7
-    * set :drawBold.10:x 174
-    * set :drawBold.10:y *tmp362
-    * set :drawBold.10:alignment @right
-    * set :drawText.30:x 174
+  539 draw lineRect 22 :drawItemColor.9:y 126 10
+  540 op add *tmp361 :drawItemColor.9:y 5
+  541 op add *tmp362 :drawItemColor.9:y 7
   542 print 80
-    * draw print :drawItemColor.10:textX *tmp362 @right
+  543 draw print 174 *tmp362 @right
   544 label *label163
-    * op add :drawText.31:x 174 1
   545 print 80
   546 draw print 175 *tmp362 @right
   547 label *label164
   548 label *label162
-    * op add :drawItemColor.10:col 0 1
   549 jump *label165 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawItem.9:y 15
+  550 op sub :drawItemColor.10:y :drawItemColor.9:y 15
   551 label *label165
   552 label *label166
   553 label *label161
   554 set :drawItem.10:y :drawItemColor.10:y
   555 label *label160
-    * set :updateDisplay:y :drawItemColor.10:y
   556 sensor *tmp366 AÁNBJd-multiplicative-reconstructor26 @silicon
-    * set :drawItem.11:col 0
   557 set :drawItem.11:y :drawItemColor.10:y
-    * set :drawItem.11:columns 1
-    * set :drawItem.11:item @silicon
-    * set :drawItem.11:current *tmp366
-    * set :drawItem.11:target 130
-    * set :drawItemColor.11:col 0
-    * set :drawItemColor.11:y :drawItemColor.10:y
-    * set :drawItemColor.11:columns 1
-    * op mul *tmp367 1 176
-    * op mul *tmp368 1 88
-    * op sub :drawItemColor.11:barLength 214 88
-    * op add :drawItemColor.11:textEnd 48 126
   558 op mul *tmp371 126 *tmp366
-    * op div *tmp372 *tmp371 130
+  559 op div *tmp372 *tmp366 1.0317460317460319
   560 op min :drawItemColor.11:length 126 *tmp372
-    * op mul *tmp374 0 176
-    * op mul *tmp375 0 88
-    * op add :drawItemColor.11:iconX 11 0
-    * op mul *tmp377 0 176
-    * op div *tmp378 0 2
-    * op add :drawItemColor.11:barX 22 0
-    * op mul *tmp380 0 176
-    * op div *tmp381 0 2
   561 op add :drawItemColor.11:textX 174 0
   562 draw col %[white]
-    * op add *tmp383 :drawItem.10:y 5
+  563 op add *tmp383 :drawItemColor.10:y 5
   564 draw image 11 *tmp383 @silicon 16 0
   565 draw col %008000FF
-    * draw rect 22 :drawItem.10:y :drawItemColor.11:length 10
+  566 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   567 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.10:y 126 10
-    * op add *tmp384 :drawItem.10:y 5
-    * op add *tmp385 :drawItem.11:y 7
-    * set :drawBold.11:x 174
-    * set :drawBold.11:y *tmp385
-    * set :drawBold.11:alignment @right
-    * set :drawText.32:x 174
+  568 draw lineRect 22 :drawItemColor.10:y 126 10
+  569 op add *tmp384 :drawItemColor.10:y 5
+  570 op add *tmp385 :drawItemColor.10:y 7
   571 print 130
-    * draw print :drawItemColor.11:textX *tmp385 @right
+  572 draw print 174 *tmp385 @right
   573 label *label170
-    * op add :drawText.33:x 174 1
   574 print 130
   575 draw print 175 *tmp385 @right
   576 label *label171
   577 label *label169
-    * op add :drawItemColor.11:col 0 1
   578 jump *label172 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItem.10:y 15
+  579 op sub :drawItemColor.11:y :drawItemColor.10:y 15
   580 label *label172
   581 label *label173
   582 label *label168
 
   585 jump *label152 always
   586 label *label151
   587 op idiv *tmp390 :drawMultiReco:progress 0.01
-    * set :drawItem.12:col 0
   588 set :drawItem.12:y :drawTitleRow.4:y
-    * set :drawItem.12:columns 1
-    * set :drawItem.12:item @mega
-    * set :drawItem.12:current :drawMultiReco:progress
-    * set :drawItem.12:target 1
-    * set :drawItemColor.12:col 0
-    * set :drawItemColor.12:y :drawTitleRow.4:y
-    * set :drawItemColor.12:columns 1
-    * op mul *tmp391 1 176
-    * op mul *tmp392 1 88
-    * op sub :drawItemColor.12:barLength 214 88
-    * op add :drawItemColor.12:textEnd 48 126
   589 op mul *tmp395 126 :drawMultiReco:progress
-    * op div *tmp396 *tmp395 1
+  590 op mul *tmp396 :drawMultiReco:progress 126
   591 op min :drawItemColor.12:length 126 *tmp396
-    * op mul *tmp398 0 176
-    * op mul *tmp399 0 88
-    * op add :drawItemColor.12:iconX 11 0
-    * op mul *tmp401 0 176
-    * op div *tmp402 0 2
-    * op add :drawItemColor.12:barX 22 0
-    * op mul *tmp404 0 176
-    * op div *tmp405 0 2
   592 op add :drawItemColor.12:textX 174 0
   593 draw col %[white]
   594 op add *tmp407 :drawTitleRow.4:y 5
 
   597 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   598 draw col %00FF00FF
   599 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp408 :drawTitleRow.4:y 5
-    * op add *tmp409 :drawItem.12:y 7
-    * set :drawBold.12:x 174
-    * set :drawBold.12:y *tmp409
-    * set :drawBold.12:alignment @right
-    * set :drawText.34:x 174
+  600 op add *tmp409 :drawTitleRow.4:y 7
   601 print *tmp390
   602 print "%"
-    * draw print :drawItemColor.12:textX *tmp409 @right
+  603 draw print 174 *tmp409 @right
   604 label *label177
-    * op add :drawText.35:x 174 1
   605 print *tmp390
   606 print "%"
   607 draw print 175 *tmp409 @right
   608 label *label178
   609 label *label176
-    * op add :drawItemColor.12:col 0 1
   610 jump *label179 lessThan 1 1
   611 op sub :drawItemColor.12:y :drawTitleRow.4:y 15
   612 label *label179
   613 label *label180
   614 label *label175
-    * set :drawItem.12:y :drawItemColor.12:y
   615 label *label174
-    * op sub :updateDisplay:y :drawItemColor.12:y 30
+  616 op sub :updateDisplay:y :drawTitleRow.4:y 45
   617 label *label152
   618 op sub :updateDisplay:y :updateDisplay:y 5
   619 label *label145
 
   623 label *label182
   624 label *label183
   625 draw col %[white]
-    * set :drawTitleRow.5:y :updateDisplay:y
-    * set :drawTitleRow.5:alignment @bottomLeft
   626 print "Builder"
   627 draw print 22 :updateDisplay:y @bottomLeft
   628 label *label185
 
   633 label *label184
   634 set :updateDisplay:y :drawTitleRow.5:y
   635 jump *label187 notEqual .transportItem null
-    * set :drawUnit:item @poly
-    * set :drawUnit:items 0
-    * set :drawUnit:y :drawTitleRow.5:y
-    * set :drawItem.13:col 0
   636 set :drawItem.13:y :drawTitleRow.5:y
-    * set :drawItem.13:columns 1
-    * set :drawItem.13:item @poly
-    * set :drawItem.13:current 0
   637 set :drawItem.13:target .transportTarget
-    * set :drawItemColor.13:col 0
-    * set :drawItemColor.13:y :drawTitleRow.5:y
-    * set :drawItemColor.13:columns 1
-    * set :drawItemColor.13:item @poly
-    * set :drawItemColor.13:current 0
-    * op mul *tmp417 1 176
-    * op mul *tmp418 1 88
-    * op sub :drawItemColor.13:barLength 214 88
-    * op add :drawItemColor.13:textEnd 48 126
-    * op mul *tmp421 126 0
   638 op div *tmp422 0 :drawItem.13:target
   639 op min :drawItemColor.13:length 126 *tmp422
-    * op mul *tmp424 0 176
-    * op mul *tmp425 0 88
-    * op add :drawItemColor.13:iconX 11 0
-    * op mul *tmp427 0 176
-    * op div *tmp428 0 2
-    * op add :drawItemColor.13:barX 22 0
-    * op mul *tmp430 0 176
-    * op div *tmp431 0 2
   640 op add :drawItemColor.13:textX 174 0
   641 draw col %[white]
-    * op add *tmp433 :updateDisplay:y 5
+  642 op add *tmp433 :drawTitleRow.5:y 5
   643 draw image 11 *tmp433 @poly 16 0
   644 draw col %008000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.13:length 10
+  645 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   646 draw col %00FF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp434 :updateDisplay:y 5
-    * op add *tmp435 :drawItem.13:y 7
-    * set :drawBold.13:x 174
-    * set :drawBold.13:y *tmp435
-    * set :drawBold.13:alignment @right
-    * set :drawText.38:x 174
+  647 draw lineRect 22 :drawTitleRow.5:y 126 10
+  648 op add *tmp434 :drawTitleRow.5:y 5
+  649 op add *tmp435 :drawTitleRow.5:y 7
   650 print .transportTarget
-    * draw print :drawItemColor.13:textX *tmp435 @right
+  651 draw print 174 *tmp435 @right
   652 label *label193
-    * op add :drawText.39:x 174 1
   653 print .transportTarget
   654 draw print 175 *tmp435 @right
   655 label *label194
   656 label *label192
-    * op add :drawItemColor.13:col 0 1
   657 jump *label195 lessThan 1 1
-    * op sub :drawItemColor.13:y :updateDisplay:y 15
+  658 op sub :drawItemColor.13:y :drawTitleRow.5:y 15
   659 label *label195
   660 label *label196
   661 label *label191
-    * set :drawItem.13:y :drawItemColor.13:y
   662 label *label190
   663 label *label189
   664 set :updateDisplay:y :drawItemColor.13:y
 
   669 op equal *tmp443 :drawBuilder:unitItem .transportItem
   670 op mul *tmp444 *tmp442 *tmp443
   671 set :drawUnit.1:item .transportItem
-    * set :drawUnit.1:items *tmp444
-    * set :drawUnit.1:y :drawTitleRow.5:y
-    * set :drawItem.14:col 0
   672 set :drawItem.14:y :drawTitleRow.5:y
-    * set :drawItem.14:columns 1
-    * set :drawItem.14:item :drawUnit.1:item
-    * set :drawItem.14:current *tmp444
   673 set :drawItem.14:target .transportTarget
-    * set :drawItemColor.14:col 0
-    * set :drawItemColor.14:y :drawTitleRow.5:y
-    * set :drawItemColor.14:columns 1
-    * set :drawItemColor.14:current *tmp444
-    * op mul *tmp445 1 176
-    * op mul *tmp446 1 88
-    * op sub :drawItemColor.14:barLength 214 88
-    * op add :drawItemColor.14:textEnd 48 126
   674 op mul *tmp449 126 *tmp444
   675 op div *tmp450 *tmp449 :drawItem.14:target
   676 op min :drawItemColor.14:length 126 *tmp450
-    * op mul *tmp452 0 176
-    * op mul *tmp453 0 88
-    * op add :drawItemColor.14:iconX 11 0
-    * op mul *tmp455 0 176
-    * op div *tmp456 0 2
-    * op add :drawItemColor.14:barX 22 0
-    * op mul *tmp458 0 176
-    * op div *tmp459 0 2
   677 op add :drawItemColor.14:textX 174 0
   678 draw col %[white]
-    * op add *tmp461 :updateDisplay:y 5
+  679 op add *tmp461 :drawTitleRow.5:y 5
   680 draw image 11 *tmp461 :drawUnit.1:item 16 0
   681 draw col %008000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.14:length 10
+  682 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   683 draw col %00FF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp462 :updateDisplay:y 5
-    * op add *tmp463 :drawItem.14:y 7
-    * set :drawBold.14:x 174
-    * set :drawBold.14:y *tmp463
-    * set :drawBold.14:alignment @right
-    * set :drawText.40:x 174
+  684 draw lineRect 22 :drawTitleRow.5:y 126 10
+  685 op add *tmp462 :drawTitleRow.5:y 5
+  686 op add *tmp463 :drawTitleRow.5:y 7
   687 print .transportTarget
-    * draw print :drawItemColor.14:textX *tmp463 @right
+  688 draw print 174 *tmp463 @right
   689 label *label201
-    * op add :drawText.41:x 174 1
   690 print .transportTarget
   691 draw print 175 *tmp463 @right
   692 label *label202
   693 label *label200
-    * op add :drawItemColor.14:col 0 1
   694 jump *label203 lessThan 1 1
-    * op sub :drawItemColor.14:y :updateDisplay:y 15
+  695 op sub :drawItemColor.14:y :drawTitleRow.5:y 15
   696 label *label203
   697 label *label204
   698 label *label199
-    * set :drawItem.14:y :drawItemColor.14:y
   699 label *label198
   700 label *label197
   701 set :updateDisplay:y :drawItemColor.14:y
 
   709 jump *label205 always
   710 label *label208
   711 label *label209
-    * set :updateDisplay:y 20
   712 draw col %[white]
-    * set :drawTitleRow.6:y 20
-    * set :drawTitleRow.6:alignment @bottomLeft
-    * set :drawText.42:y 20
   713 print "Power"
   714 draw print 22 20 @bottomLeft
   715 label *label211
-    * set :drawText.43:y 20
   716 print "Power"
   717 draw print 23 20 @bottomLeft
   718 label *label212
 
   722 sensor :drawPower:power AJTJK-battery1 @totalPower
   723 op mul *tmp474 :drawPower:power 100
   724 op idiv *tmp476 *tmp474 4000
-    * set :drawItemColor.15:y 5
-    * op mul *tmp481 126 :drawPower:power
   725 op mul *tmp482 :drawPower:power 0.0315
   726 op min :drawItemColor.15:length 126 *tmp482
-    * op add :drawItemColor.15:textX 174 0
   727 draw col %[white]
-    * op add *tmp493 :drawTitleRow.6:y 5
-    * draw image 11 *tmp493 @battery 16 0
+  728 op add *tmp493 5 5
+  729 draw image 11 10 @battery 16 0
   730 draw col %808000FF
-    * draw rect 22 :drawTitleRow.6:y :drawItemColor.15:length 10
+  731 draw rect 22 5 :drawItemColor.15:length 10
   732 draw col %FFFF00FF
-    * draw lineRect 22 :drawTitleRow.6:y 126 10
-    * op add *tmp494 :drawTitleRow.6:y 5
-    * op add *tmp495 :updateDisplay:y 7
-    * set :drawBold.15:x 174
-    * set :drawBold.15:y *tmp495
-    * set :drawBold.15:alignment @right
-    * set :drawText.44:x 174
+  733 draw lineRect 22 5 126 10
+  734 op add *tmp494 5 5
+  735 op add *tmp495 5 7
+  736 set :drawBold.15:y 12
   737 print *tmp476
   738 print "%"
-    * draw print 174 *tmp495 @right
+  739 draw print 174 12 @right
   740 label *label215
-    * op add :drawText.45:x 174 1
   741 print *tmp476
   742 print "%"
-    * draw print 175 *tmp495 @right
+  743 draw print 175 12 @right
   744 label *label216
   745 label *label214
   746 jump *label217 lessThan 1 1
-    * op sub :drawItemColor.15:y :drawTitleRow.6:y 15
+  747 op sub :drawItemColor.15:y 5 15
   748 label *label217
   749 label *label218
   750 label *label213
 
   759 jump *label222 equal .pageSwitched false
   760 read .lastTail bank2 511
   761 draw col %[gold]
-    * set :drawBold.16:x 11
-    * set :drawBold.16:y 206
-    * set :drawBold.16:alignment @left
   762 print "Resources"
   763 draw print 11 206 @left
   764 label *label225
 
   853 set :displayBaseMap:limit 0
   854 jump *label251 equal .pageSwitched false
   855 draw col %[gold]
-    * set :drawBold.17:x 90
-    * set :drawBold.17:y 206
-    * set :drawBold.17:alignment @center
   856 print "Base map"
   857 draw print 90 206 @center
   858 label *label254
 
  1065 op max :displayLog:stop :displayLog:logPosition *tmp546
  1066 jump *label309 equal .pageSwitched false
  1067 draw col %[gold]
-    * set :drawBold.18:x 4
-    * set :drawBold.18:y 206
-    * set :drawBold.18:alignment @left
  1068 print "Build records"
  1069 draw print 4 206 @left
  1070 label *label312
 
  1202 label *label335
  1203 set *tmp597 ""
  1204 label *label336
-    * set :drawBold.19:x 25
-    * set :drawBold.19:y 71
-    * set :drawBold.19:alignment @center
  1205 print :drawHeader:m
  1206 print ":"
  1207 print *tmp597
 
  1220 jump *label334 always
  1221 label *label333
  1222 draw col %[gold]
-    * set :drawBold.20:x 42
-    * set :drawBold.20:y 261
-    * set :drawBold.20:alignment @bottom
  1223 print "Goal"
  1224 draw print 42 261 @bottom
  1225 label *label341
 
  1319 label *label369
  1320 jump *label370 equal A¨SSJi-container31 null
  1321 sensor :drawHeader:count.1 A¨SSJi-container31 @scrap
-    * set :drawHeader:x.1 174
  1322 op log10 *tmp629 :drawHeader:count.1
  1323 op floor :drawHeader:len *tmp629
  1324 print "x"
 
  1329 op sub *tmp633 154 *tmp632
  1330 draw image *tmp633 246 @scrap 12 0
  1331 sensor :drawHeader:count.1 A¨SSJi-container31 @sand
-    * set :drawHeader:x.1 124
  1332 op log10 *tmp635 :drawHeader:count.1
  1333 op floor :drawHeader:len *tmp635
  1334 print "x"
 
  1343 jump *label374 equal .titaniumDrill false
  1344 sensor *tmp641 .titaniumDrill @titanium
  1345 op max :drawHeader:count.2 .titaniumDrillCount *tmp641
-    * set :drawHeader:x.2 174
  1346 op log10 *tmp643 :drawHeader:count.2
  1347 op floor :drawHeader:len.1 *tmp643
  1348 print "x"
 
  1356 label *label375
  1357 jump *label377 equal .thoriumContainer false
  1358 sensor :drawHeader:count.3 .thoriumContainer @thorium
-    * set :drawHeader:x.3 124
  1359 op log10 *tmp650 :drawHeader:count.3
  1360 op floor :drawHeader:len.2 *tmp650
  1361 print "x"
 
  1416 return :setupScale*retaddr
  1417 end
  1418 label *label6
-    * set :unpackCfg2:cfg :drawBlock:cfg
-    * set *tmp668 1
  1419 read *tmp669 :drawBlock:cfg 1
  1420 op sub *tmp670 *tmp669 74
  1421 lookup block :unpackCfg:type *tmp670
-    * set *tmp672 2
  1422 read *tmp673 :drawBlock:cfg 2
  1423 op sub *tmp674 *tmp673 74
  1424 op div :unpackCfg:x *tmp674 2
-    * set *tmp676 3
  1425 read *tmp677 :drawBlock:cfg 3
  1426 op sub *tmp678 *tmp677 74
  1427 op div :unpackCfg:y *tmp678 2
-    * set *tmp680 4
  1428 read *tmp681 :drawBlock:cfg 4
  1429 op sub :unpackCfg:rotation *tmp681 74
-    * set *tmp683 5
  1430 read *tmp684 :drawBlock:cfg 5
  1431 op sub :unpackCfg:ind *tmp684 74
  1432 sensor :unpackCfg:size :unpackCfg:type @size
  1433 label *label395
-    * set :unpackCfg2:index :unpackCfg:ind
  1434 label *label394
  1435 set :drawBlock:type :unpackCfg:type
  1436 set :drawBlock:x :unpackCfg:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-66 instructions):
 
    78 print "Locating ore..."
    79 draw print 23 201 @bottomLeft
    80 label *label40
-    * op sub :drawTitleRow:y 201 15
    81 label *label38
-    * set :drawItem:y 186
    82 set :drawItem:item .nextBlock
    83 read :drawItem:current processor3 ".mapProgress"
    84 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:y 186
    85 op mul *tmp83 126 :drawItem:current
    86 op div *tmp84 *tmp83 :drawItem:target
    87 op min :drawItemColor:length 126 *tmp84
-    * op add :drawItemColor:textX 174 0
    88 draw col %[white]
-    * op add *tmp95 186 5
    89 draw image 11 191 :drawItem:item 16 0
    90 draw col %008000FF
    91 draw rect 22 186 :drawItemColor:length 10
    92 draw col %00FF00FF
    93 draw lineRect 22 186 126 10
-    * op add *tmp96 186 5
-    * op add *tmp97 186 7
-    * set :drawBold:y 193
    94 print "x"
    95 read *tmp98 processor3 ".mapSpots"
    96 print *tmp98
 
   103 label *label45
   104 label *label43
   105 jump *label46 lessThan 1 1
-    * op sub :drawItemColor:y 186 15
   106 label *label46
   107 label *label47
   108 label *label42
-    * set :drawItem:y 171
   109 label *label41
   110 op sub :updateDisplay:y 171 35
   111 jump *label37 always
 
   120 label *label52
   121 label *label50
   122 set :updateDisplay:y 186
-    * set :drawMaterials:columns 1
   123 jump *label53 equal :drawMaterials:count false
   124 set :drawMaterials:item @copper
   125 set :drawMaterials:target .targetCopper
 
   157 label *label55
   158 jump *label65 lessThanEq :drawMaterials:target 0
   159 sensor *tmp110 .core :drawMaterials:item
-    * set :drawItem.1:col :drawMaterials:col
-    * set :drawItem.1:y :updateDisplay:y
   160 set :drawItemColor.1:y :updateDisplay:y
-    * op mul *tmp112 1 88
-    * op sub :drawItemColor.1:barLength 214 88
-    * op add :drawItemColor.1:textEnd 48 126
   161 op mul *tmp115 126 *tmp110
   162 op div *tmp116 *tmp115 :drawMaterials:target
   163 op min :drawItemColor.1:length 126 *tmp116
   164 op mul *tmp119 :drawMaterials:col 88
   165 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp122 :drawMaterials:col 88
   166 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp125 :drawMaterials:col 88
   167 op add :drawItemColor.1:textX 174 *tmp119
   168 draw col %[white]
   169 op add *tmp127 :updateDisplay:y 5
 
   176 print :drawMaterials:target
   177 draw print :drawItemColor.1:textX *tmp129 @right
   178 label *label70
-    * op add :drawText.7:x :drawItemColor.1:textX 1
+  179 op add :drawText.7:x *tmp119 175
   180 print :drawMaterials:target
   181 draw print :drawText.7:x *tmp129 @right
   182 label *label71
 
   232 jump *label84 notEqual :drawAirFactory:progress 0
   233 jump *label86 notEqual .nextFactory @flare
   234 sensor *tmp146 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.2:y :drawTitleRow.2:y
-    * op mul *tmp151 126 *tmp146
   235 op mul *tmp152 *tmp146 8.4
   236 op min :drawItemColor.2:length 126 *tmp152
-    * op add :drawItemColor.2:textX 174 0
   237 draw col %[white]
-    * op add *tmp163 :drawTitleRow.2:y 5
+  238 op sub *tmp163 :updateDisplay:y 10
   239 draw image 11 *tmp163 @silicon 16 0
   240 draw col %008000FF
   241 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   242 draw col %00FF00FF
   243 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp165 :drawTitleRow.2:y 7
+  244 op sub *tmp165 :updateDisplay:y 8
   245 print 15
   246 draw print 174 *tmp165 @right
   247 label *label91
 
   250 label *label92
   251 label *label90
   252 jump *label93 lessThan 1 1
-    * op sub :drawItemColor.2:y :drawTitleRow.2:y 15
+  253 op sub :drawItemColor.2:y :updateDisplay:y 30
   254 label *label93
   255 label *label94
   256 label *label89
 
   259 jump *label87 always
   260 label *label86
   261 sensor *tmp169 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:y :drawTitleRow.2:y
-    * op mul *tmp174 126 *tmp169
   262 op mul *tmp175 *tmp169 8.4
   263 op min :drawItemColor.3:length 126 *tmp175
-    * op add :drawItemColor.3:textX 174 0
   264 draw col %[white]
-    * op add *tmp186 :drawTitleRow.2:y 5
+  265 op sub *tmp186 :updateDisplay:y 10
   266 draw image 11 *tmp186 @lead 16 0
   267 draw col %008000FF
   268 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   269 draw col %00FF00FF
   270 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp188 :drawTitleRow.2:y 7
+  271 op sub *tmp188 :updateDisplay:y 8
   272 print 15
   273 draw print 174 *tmp188 @right
   274 label *label98
 
   277 label *label99
   278 label *label97
   279 jump *label100 lessThan 1 1
-    * op sub :drawItemColor.3:y :drawTitleRow.2:y 15
+  280 op sub :drawItemColor.3:y :updateDisplay:y 30
   281 label *label100
   282 label *label101
   283 label *label96
-    * set :drawItem.3:y :drawItemColor.3:y
   284 label *label95
   285 sensor *tmp192 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.4:y :drawItemColor.3:y
-    * op mul *tmp197 126 *tmp192
   286 op mul *tmp198 *tmp192 4.2
   287 op min :drawItemColor.4:length 126 *tmp198
-    * op add :drawItemColor.4:textX 174 0
   288 draw col %[white]
-    * op add *tmp209 :drawItemColor.3:y 5
+  289 op sub *tmp209 :drawTitleRow.2:y 10
   290 draw image 11 *tmp209 @silicon 16 0
   291 draw col %008000FF
   292 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   293 draw col %00FF00FF
   294 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op add *tmp210 :drawItemColor.3:y 5
-    * op add *tmp211 :drawItemColor.3:y 7
+  295 op sub *tmp210 :drawTitleRow.2:y 10
+  296 op sub *tmp211 :drawTitleRow.2:y 8
   297 print 30
   298 draw print 174 *tmp211 @right
   299 label *label105
 
   302 label *label106
   303 label *label104
   304 jump *label107 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawItemColor.3:y 15
+  305 op sub :drawItemColor.4:y :drawTitleRow.2:y 30
   306 label *label107
   307 label *label108
   308 label *label103
 
   312 jump *label85 always
   313 label *label84
   314 op idiv *tmp216 :drawAirFactory:progress 0.01
-    * set :drawItem.5:y :drawTitleRow.2:y
   315 set :drawItem.5:item .nextFactory
   316 op mul *tmp221 126 :drawAirFactory:progress
   317 op mul *tmp222 :drawAirFactory:progress 126
-    * op min :drawItemColor.5:length 126 *tmp222
-    * op add :drawItemColor.5:textX 174 0
+  318 op min :drawItemColor.5:length 126 *tmp221
   319 draw col %[white]
-    * op add *tmp233 :drawTitleRow.2:y 5
+  320 op sub *tmp233 :updateDisplay:y 10
   321 draw image 11 *tmp233 :drawItem.5:item 16 0
   322 draw col %008000FF
   323 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   324 draw col %00FF00FF
   325 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp235 :drawTitleRow.2:y 7
+  326 op sub *tmp235 :updateDisplay:y 8
   327 print *tmp216
   328 print "%"
   329 draw print 174 *tmp235 @right
 
   334 label *label113
   335 label *label111
   336 jump *label114 lessThan 1 1
-    * op sub :drawItemColor.5:y :drawTitleRow.2:y 15
+  337 op sub :drawItemColor.5:y :updateDisplay:y 30
   338 label *label114
   339 label *label115
   340 label *label110
 
   359 sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 @progress
   360 jump *label122 notEqual :drawAddReco:progress 0
   361 sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite
-    * set :drawItem.6:y :drawTitleRow.3:y
-    * op mul *tmp249 126 *tmp244
   362 op mul *tmp250 *tmp244 3.1500000000000004
   363 op min :drawItemColor.6:length 126 *tmp250
-    * op add :drawItemColor.6:textX 174 0
   364 draw col %[white]
-    * op add *tmp261 :drawTitleRow.3:y 5
+  365 op sub *tmp261 :updateDisplay:y 10
   366 draw image 11 *tmp261 @graphite 16 0
   367 draw col %008000FF
   368 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   369 draw col %00FF00FF
   370 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp263 :drawTitleRow.3:y 7
+  371 op sub *tmp263 :updateDisplay:y 8
   372 print 40
   373 draw print 174 *tmp263 @right
   374 label *label127
 
   377 label *label128
   378 label *label126
   379 jump *label129 lessThan 1 1
-    * op sub :drawItemColor.6:y :drawTitleRow.3:y 15
+  380 op sub :drawItemColor.6:y :updateDisplay:y 30
   381 label *label129
   382 label *label130
   383 label *label125
-    * set :drawItem.6:y :drawItemColor.6:y
   384 label *label124
   385 sensor *tmp267 AÀF@Lc-additive-reconstructor25 @silicon
-    * set :drawItem.7:y :drawItemColor.6:y
-    * op mul *tmp272 126 *tmp267
   386 op mul *tmp273 *tmp267 3.1500000000000004
   387 op min :drawItemColor.7:length 126 *tmp273
-    * op add :drawItemColor.7:textX 174 0
   388 draw col %[white]
-    * op add *tmp284 :drawItemColor.6:y 5
+  389 op sub *tmp284 :drawTitleRow.3:y 10
   390 draw image 11 *tmp284 @silicon 16 0
   391 draw col %008000FF
   392 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   393 draw col %00FF00FF
   394 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op add *tmp285 :drawItemColor.6:y 5
-    * op add *tmp286 :drawItemColor.6:y 7
+  395 op sub *tmp285 :drawTitleRow.3:y 10
+  396 op sub *tmp286 :drawTitleRow.3:y 8
   397 print 40
   398 draw print 174 *tmp286 @right
   399 label *label134
 
   402 label *label135
   403 label *label133
   404 jump *label136 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawItemColor.6:y 15
+  405 op sub :drawItemColor.7:y :drawTitleRow.3:y 30
   406 label *label136
   407 label *label137
   408 label *label132
 
   411 jump *label123 always
   412 label *label122
   413 op idiv *tmp291 :drawAddReco:progress 0.01
-    * set :drawItem.8:y :drawTitleRow.3:y
   414 op mul *tmp296 126 :drawAddReco:progress
   415 op mul *tmp297 :drawAddReco:progress 126
-    * op min :drawItemColor.8:length 126 *tmp297
-    * op add :drawItemColor.8:textX 174 0
+  416 op min :drawItemColor.8:length 126 *tmp296
   417 draw col %[white]
-    * op add *tmp308 :drawTitleRow.3:y 5
+  418 op sub *tmp308 :updateDisplay:y 10
   419 draw image 11 *tmp308 @poly 16 0
   420 draw col %008000FF
   421 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   422 draw col %00FF00FF
   423 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp310 :drawTitleRow.3:y 7
+  424 op sub *tmp310 :updateDisplay:y 8
   425 print *tmp291
   426 print "%"
   427 draw print 174 *tmp310 @right
 
   432 label *label142
   433 label *label140
   434 jump *label143 lessThan 1 1
-    * op sub :drawItemColor.8:y :drawTitleRow.3:y 15
+  435 op sub :drawItemColor.8:y :updateDisplay:y 30
   436 label *label143
   437 label *label144
   438 label *label139
 
   458 sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconstructor26 @progress
   459 jump *label151 notEqual :drawMultiReco:progress 0
   460 sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metaglass
-    * set :drawItem.9:y :drawTitleRow.4:y
-    * op mul *tmp325 126 *tmp320
   461 op mul *tmp326 *tmp320 3.1500000000000004
   462 op min :drawItemColor.9:length 126 *tmp326
-    * op add :drawItemColor.9:textX 174 0
   463 draw col %[white]
-    * op add *tmp337 :drawTitleRow.4:y 5
+  464 op sub *tmp337 :updateDisplay:y 10
   465 draw image 11 *tmp337 @metaglass 16 0
   466 draw col %008000FF
   467 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   468 draw col %00FF00FF
   469 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp339 :drawTitleRow.4:y 7
+  470 op sub *tmp339 :updateDisplay:y 8
   471 print 40
   472 draw print 174 *tmp339 @right
   473 label *label156
 
   476 label *label157
   477 label *label155
   478 jump *label158 lessThan 1 1
-    * op sub :drawItemColor.9:y :drawTitleRow.4:y 15
+  479 op sub :drawItemColor.9:y :updateDisplay:y 30
   480 label *label158
   481 label *label159
   482 label *label154
-    * set :drawItem.9:y :drawItemColor.9:y
   483 label *label153
   484 sensor *tmp343 AÁNBJd-multiplicative-reconstructor26 @titanium
-    * set :drawItem.10:y :drawItemColor.9:y
-    * op mul *tmp348 126 *tmp343
   485 op div *tmp349 *tmp343 0.6349206349206349
   486 op min :drawItemColor.10:length 126 *tmp349
-    * op add :drawItemColor.10:textX 174 0
   487 draw col %[white]
-    * op add *tmp360 :drawItemColor.9:y 5
+  488 op sub *tmp360 :drawTitleRow.4:y 10
   489 draw image 11 *tmp360 @titanium 16 0
   490 draw col %008000FF
   491 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   492 draw col %00FF00FF
   493 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op add *tmp361 :drawItemColor.9:y 5
-    * op add *tmp362 :drawItemColor.9:y 7
+  494 op sub *tmp361 :drawTitleRow.4:y 10
+  495 op sub *tmp362 :drawTitleRow.4:y 8
   496 print 80
   497 draw print 174 *tmp362 @right
   498 label *label163
 
   501 label *label164
   502 label *label162
   503 jump *label165 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawItemColor.9:y 15
+  504 op sub :drawItemColor.10:y :drawTitleRow.4:y 30
   505 label *label165
   506 label *label166
   507 label *label161
-    * set :drawItem.10:y :drawItemColor.10:y
   508 label *label160
   509 sensor *tmp366 AÁNBJd-multiplicative-reconstructor26 @silicon
-    * set :drawItem.11:y :drawItemColor.10:y
-    * op mul *tmp371 126 *tmp366
   510 op div *tmp372 *tmp366 1.0317460317460319
   511 op min :drawItemColor.11:length 126 *tmp372
-    * op add :drawItemColor.11:textX 174 0
   512 draw col %[white]
-    * op add *tmp383 :drawItemColor.10:y 5
+  513 op sub *tmp383 :drawItemColor.9:y 10
   514 draw image 11 *tmp383 @silicon 16 0
   515 draw col %008000FF
   516 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   517 draw col %00FF00FF
   518 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op add *tmp384 :drawItemColor.10:y 5
-    * op add *tmp385 :drawItemColor.10:y 7
+  519 op sub *tmp384 :drawItemColor.9:y 10
+  520 op sub *tmp385 :drawItemColor.9:y 8
   521 print 130
   522 draw print 174 *tmp385 @right
   523 label *label170
 
   526 label *label171
   527 label *label169
   528 jump *label172 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItemColor.10:y 15
+  529 op sub :drawItemColor.11:y :drawItemColor.9:y 30
   530 label *label172
   531 label *label173
   532 label *label168
 
   535 jump *label152 always
   536 label *label151
   537 op idiv *tmp390 :drawMultiReco:progress 0.01
-    * set :drawItem.12:y :drawTitleRow.4:y
   538 op mul *tmp395 126 :drawMultiReco:progress
   539 op mul *tmp396 :drawMultiReco:progress 126
-    * op min :drawItemColor.12:length 126 *tmp396
-    * op add :drawItemColor.12:textX 174 0
+  540 op min :drawItemColor.12:length 126 *tmp395
   541 draw col %[white]
-    * op add *tmp407 :drawTitleRow.4:y 5
+  542 op sub *tmp407 :updateDisplay:y 10
   543 draw image 11 *tmp407 @mega 16 0
   544 draw col %008000FF
   545 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   546 draw col %00FF00FF
   547 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp409 :drawTitleRow.4:y 7
+  548 op sub *tmp409 :updateDisplay:y 8
   549 print *tmp390
   550 print "%"
   551 draw print 174 *tmp409 @right
 
   556 label *label178
   557 label *label176
   558 jump *label179 lessThan 1 1
-    * op sub :drawItemColor.12:y :drawTitleRow.4:y 15
+  559 op sub :drawItemColor.12:y :updateDisplay:y 30
   560 label *label179
   561 label *label180
   562 label *label175
 
   579 label *label186
   580 op sub :drawTitleRow.5:y :updateDisplay:y 15
   581 label *label184
-    * set :updateDisplay:y :drawTitleRow.5:y
   582 jump *label187 notEqual .transportItem null
-    * set :drawItem.13:y :drawTitleRow.5:y
   583 set :drawItem.13:target .transportTarget
   584 op div *tmp422 0 :drawItem.13:target
   585 op min :drawItemColor.13:length 126 *tmp422
-    * op add :drawItemColor.13:textX 174 0
   586 draw col %[white]
   587 op add *tmp433 :drawTitleRow.5:y 5
   588 draw image 11 *tmp433 @poly 16 0
 
   590 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   591 draw col %00FF00FF
   592 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp434 :drawTitleRow.5:y 5
   593 op add *tmp435 :drawTitleRow.5:y 7
   594 print .transportTarget
   595 draw print 174 *tmp435 @right
 
   613 op equal *tmp443 :drawBuilder:unitItem .transportItem
   614 op mul *tmp444 *tmp442 *tmp443
   615 set :drawUnit.1:item .transportItem
-    * set :drawItem.14:y :drawTitleRow.5:y
   616 set :drawItem.14:target .transportTarget
   617 op mul *tmp449 126 *tmp444
   618 op div *tmp450 *tmp449 :drawItem.14:target
   619 op min :drawItemColor.14:length 126 *tmp450
-    * op add :drawItemColor.14:textX 174 0
   620 draw col %[white]
   621 op add *tmp461 :drawTitleRow.5:y 5
   622 draw image 11 *tmp461 :drawUnit.1:item 16 0
 
   624 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   625 draw col %00FF00FF
   626 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp462 :drawTitleRow.5:y 5
   627 op add *tmp463 :drawTitleRow.5:y 7
   628 print .transportTarget
   629 draw print 174 *tmp463 @right
 
   657 print "Power"
   658 draw print 23 20 @bottomLeft
   659 label *label212
-    * op sub :drawTitleRow.6:y 20 15
   660 label *label210
-    * set :updateDisplay:y 5
   661 sensor :drawPower:power AJTJK-battery1 @totalPower
   662 op mul *tmp474 :drawPower:power 100
   663 op idiv *tmp476 *tmp474 4000
   664 op mul *tmp482 :drawPower:power 0.0315
   665 op min :drawItemColor.15:length 126 *tmp482
   666 draw col %[white]
-    * op add *tmp493 5 5
   667 draw image 11 10 @battery 16 0
   668 draw col %808000FF
   669 draw rect 22 5 :drawItemColor.15:length 10
   670 draw col %FFFF00FF
   671 draw lineRect 22 5 126 10
-    * op add *tmp494 5 5
-    * op add *tmp495 5 7
-    * set :drawBold.15:y 12
   672 print *tmp476
   673 print "%"
   674 draw print 174 12 @right
 
   679 label *label216
   680 label *label214
   681 jump *label217 lessThan 1 1
-    * op sub :drawItemColor.15:y 5 15
   682 label *label217
   683 label *label218
   684 label *label213

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-7 instructions):
 
   250 label *label92
   251 label *label90
   252 jump *label93 lessThan 1 1
-    * op sub :drawItemColor.2:y :updateDisplay:y 30
   253 label *label93
   254 label *label94
   255 label *label89
 
   285 op mul *tmp198 *tmp192 4.2
   286 op min :drawItemColor.4:length 126 *tmp198
   287 draw col %[white]
-    * op sub *tmp209 :drawTitleRow.2:y 10
+  288 op sub *tmp209 :updateDisplay:y 25
   289 draw image 11 *tmp209 @silicon 16 0
   290 draw col %008000FF
   291 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   292 draw col %00FF00FF
   293 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op sub *tmp210 :drawTitleRow.2:y 10
-    * op sub *tmp211 :drawTitleRow.2:y 8
+  294 op sub *tmp210 :updateDisplay:y 25
+  295 op sub *tmp211 :updateDisplay:y 23
   296 print 30
   297 draw print 174 *tmp211 @right
   298 label *label105
 
   301 label *label106
   302 label *label104
   303 jump *label107 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawTitleRow.2:y 30
+  304 op sub :drawItemColor.4:y :updateDisplay:y 45
   305 label *label107
   306 label *label108
   307 label *label103
 
   313 op idiv *tmp216 :drawAirFactory:progress 0.01
   314 set :drawItem.5:item .nextFactory
   315 op mul *tmp221 126 :drawAirFactory:progress
-    * op mul *tmp222 :drawAirFactory:progress 126
   316 op min :drawItemColor.5:length 126 *tmp221
   317 draw col %[white]
   318 op sub *tmp233 :updateDisplay:y 10
 
   332 label *label113
   333 label *label111
   334 jump *label114 lessThan 1 1
-    * op sub :drawItemColor.5:y :updateDisplay:y 30
   335 label *label114
   336 label *label115
   337 label *label110
 
   383 op mul *tmp273 *tmp267 3.1500000000000004
   384 op min :drawItemColor.7:length 126 *tmp273
   385 draw col %[white]
-    * op sub *tmp284 :drawTitleRow.3:y 10
+  386 op sub *tmp284 :updateDisplay:y 25
   387 draw image 11 *tmp284 @silicon 16 0
   388 draw col %008000FF
   389 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   390 draw col %00FF00FF
   391 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op sub *tmp285 :drawTitleRow.3:y 10
-    * op sub *tmp286 :drawTitleRow.3:y 8
+  392 op sub *tmp285 :updateDisplay:y 25
+  393 op sub *tmp286 :updateDisplay:y 23
   394 print 40
   395 draw print 174 *tmp286 @right
   396 label *label134
 
   399 label *label135
   400 label *label133
   401 jump *label136 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawTitleRow.3:y 30
+  402 op sub :drawItemColor.7:y :updateDisplay:y 45
   403 label *label136
   404 label *label137
   405 label *label132
 
   409 label *label122
   410 op idiv *tmp291 :drawAddReco:progress 0.01
   411 op mul *tmp296 126 :drawAddReco:progress
-    * op mul *tmp297 :drawAddReco:progress 126
   412 op min :drawItemColor.8:length 126 *tmp296
   413 draw col %[white]
   414 op sub *tmp308 :updateDisplay:y 10
 
   428 label *label142
   429 label *label140
   430 jump *label143 lessThan 1 1
-    * op sub :drawItemColor.8:y :updateDisplay:y 30
   431 label *label143
   432 label *label144
   433 label *label139
 
   480 op div *tmp349 *tmp343 0.6349206349206349
   481 op min :drawItemColor.10:length 126 *tmp349
   482 draw col %[white]
-    * op sub *tmp360 :drawTitleRow.4:y 10
+  483 op sub *tmp360 :updateDisplay:y 25
   484 draw image 11 *tmp360 @titanium 16 0
   485 draw col %008000FF
   486 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   487 draw col %00FF00FF
   488 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op sub *tmp361 :drawTitleRow.4:y 10
-    * op sub *tmp362 :drawTitleRow.4:y 8
+  489 op sub *tmp361 :updateDisplay:y 25
+  490 op sub *tmp362 :updateDisplay:y 23
   491 print 80
   492 draw print 174 *tmp362 @right
   493 label *label163
 
   496 label *label164
   497 label *label162
   498 jump *label165 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawTitleRow.4:y 30
+  499 op sub :drawItemColor.10:y :updateDisplay:y 45
   500 label *label165
   501 label *label166
   502 label *label161
 
   505 op div *tmp372 *tmp366 1.0317460317460319
   506 op min :drawItemColor.11:length 126 *tmp372
   507 draw col %[white]
-    * op sub *tmp383 :drawItemColor.9:y 10
+  508 op sub *tmp383 :updateDisplay:y 40
   509 draw image 11 *tmp383 @silicon 16 0
   510 draw col %008000FF
   511 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   512 draw col %00FF00FF
   513 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op sub *tmp384 :drawItemColor.9:y 10
-    * op sub *tmp385 :drawItemColor.9:y 8
+  514 op sub *tmp384 :updateDisplay:y 40
+  515 op sub *tmp385 :updateDisplay:y 38
   516 print 130
   517 draw print 174 *tmp385 @right
   518 label *label170
 
   521 label *label171
   522 label *label169
   523 jump *label172 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItemColor.9:y 30
+  524 op sub :drawItemColor.11:y :updateDisplay:y 60
   525 label *label172
   526 label *label173
   527 label *label168
 
   531 label *label151
   532 op idiv *tmp390 :drawMultiReco:progress 0.01
   533 op mul *tmp395 126 :drawMultiReco:progress
-    * op mul *tmp396 :drawMultiReco:progress 126
   534 op min :drawItemColor.12:length 126 *tmp395
   535 draw col %[white]
   536 op sub *tmp407 :updateDisplay:y 10
 
   550 label *label178
   551 label *label176
   552 jump *label179 lessThan 1 1
-    * op sub :drawItemColor.12:y :updateDisplay:y 30
   553 label *label179
   554 label *label180
   555 label *label175
 
   577 op div *tmp422 0 :drawItem.13:target
   578 op min :drawItemColor.13:length 126 *tmp422
   579 draw col %[white]
-    * op add *tmp433 :drawTitleRow.5:y 5
+  580 op sub *tmp433 :updateDisplay:y 10
   581 draw image 11 *tmp433 @poly 16 0
   582 draw col %008000FF
   583 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   584 draw col %00FF00FF
   585 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp435 :drawTitleRow.5:y 7
+  586 op sub *tmp435 :updateDisplay:y 8
   587 print .transportTarget
   588 draw print 174 *tmp435 @right
   589 label *label193
 
   592 label *label194
   593 label *label192
   594 jump *label195 lessThan 1 1
-    * op sub :drawItemColor.13:y :drawTitleRow.5:y 15
+  595 op sub :drawItemColor.13:y :updateDisplay:y 30
   596 label *label195
   597 label *label196
   598 label *label191
 
   611 op div *tmp450 *tmp449 :drawItem.14:target
   612 op min :drawItemColor.14:length 126 *tmp450
   613 draw col %[white]
-    * op add *tmp461 :drawTitleRow.5:y 5
+  614 op sub *tmp461 :updateDisplay:y 10
   615 draw image 11 *tmp461 :drawUnit.1:item 16 0
   616 draw col %008000FF
   617 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   618 draw col %00FF00FF
   619 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp463 :drawTitleRow.5:y 7
+  620 op sub *tmp463 :updateDisplay:y 8
   621 print .transportTarget
   622 draw print 174 *tmp463 @right
   623 label *label201
 
   626 label *label202
   627 label *label200
   628 jump *label203 lessThan 1 1
-    * op sub :drawItemColor.14:y :drawTitleRow.5:y 15
+  629 op sub :drawItemColor.14:y :updateDisplay:y 30
   630 label *label203
   631 label *label204
   632 label *label199

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-4 instructions):
 
   291 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   292 draw col %00FF00FF
   293 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op sub *tmp210 :updateDisplay:y 25
   294 op sub *tmp211 :updateDisplay:y 23
   295 print 30
   296 draw print 174 *tmp211 @right
 
   388 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   389 draw col %00FF00FF
   390 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op sub *tmp285 :updateDisplay:y 25
   391 op sub *tmp286 :updateDisplay:y 23
   392 print 40
   393 draw print 174 *tmp286 @right
 
   484 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   485 draw col %00FF00FF
   486 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op sub *tmp361 :updateDisplay:y 25
   487 op sub *tmp362 :updateDisplay:y 23
   488 print 80
   489 draw print 174 *tmp362 @right
 
   508 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   509 draw col %00FF00FF
   510 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op sub *tmp384 :updateDisplay:y 40
   511 op sub *tmp385 :updateDisplay:y 38
   512 print 130
   513 draw print 174 *tmp385 @right

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   747 op sub :displayStorage:y.1 190 8
   748 set :displayStorage:i 0
   749 label *label242
-    * jump *label244 greaterThanEq :displayStorage:i 9
+  750 label *label402
   751 op and *tmp513 :displayStorage:accumulator 0b11111
   752 op sub :displayStorage:value *tmp513 8
   753 jump *label245 lessThan :displayStorage:value 0
 
   762 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   763 label *label243
   764 op add :displayStorage:i :displayStorage:i 1
-    * jump *label242 always
+  765 jump *label402 lessThan :displayStorage:i 9
   766 label *label244
   767 drawflush display1
   768 op add .lastTail .lastTail 1
 
  1010 op sub :displayLog:position .lastRecord 1
  1011 label *label316
  1012 jump *label318 lessThan :displayLog:position :displayLog:stop
+ 1013 label *label403
  1014 read :displayLog:record bank1 :displayLog:position
  1015 op sub *tmp554 :displayLog:start :displayLog:position
  1016 op sub *tmp555 *tmp554 1
 
  1056 label *label326
  1057 label *label317
  1058 op sub :displayLog:position :displayLog:position 1
-    * jump *label316 always
+ 1059 jump *label403 greaterThanEq :displayLog:position :displayLog:stop
  1060 label *label318
  1061 op add .lastRecord :displayLog:stop 1
  1062 drawflush display1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-18 instructions):
 
   102 draw print 175 193 @right
   103 label *label45
   104 label *label43
-    * jump *label46 lessThan 1 1
-    * label *label46
-    * label *label47
   105 label *label42
   106 label *label41
   107 op sub :updateDisplay:y 171 35
 
   246 draw print 175 *tmp165 @right
   247 label *label92
   248 label *label90
-    * jump *label93 lessThan 1 1
-    * label *label93
-    * label *label94
   249 label *label89
   250 label *label88
   251 op sub :updateDisplay:y :drawTitleRow.2:y 30
 
   324 draw print 175 *tmp235 @right
   325 label *label113
   326 label *label111
-    * jump *label114 lessThan 1 1
-    * label *label114
-    * label *label115
   327 label *label110
   328 label *label109
   329 op sub :updateDisplay:y :drawTitleRow.2:y 30
 
   416 draw print 175 *tmp310 @right
   417 label *label142
   418 label *label140
-    * jump *label143 lessThan 1 1
-    * label *label143
-    * label *label144
   419 label *label139
   420 label *label138
   421 op sub :updateDisplay:y :drawTitleRow.3:y 30
 
   533 draw print 175 *tmp409 @right
   534 label *label178
   535 label *label176
-    * jump *label179 lessThan 1 1
-    * label *label179
-    * label *label180
   536 label *label175
   537 label *label174
   538 op sub :updateDisplay:y :drawTitleRow.4:y 45
 
   652 draw print 175 12 @right
   653 label *label216
   654 label *label214
-    * jump *label217 lessThan 1 1
-    * label *label217
-    * label *label218
   655 label *label213
   656 label *label205
   657 drawflush display1
 
   732 label *label402
   733 op and *tmp513 :displayStorage:accumulator 0b11111
   734 op sub :displayStorage:value *tmp513 8
-    * jump *label245 lessThan :displayStorage:value 0
-    * set *tmp516 %[green]
-    * jump *label246 always
-    * label *label245
-    * set *tmp516 %[red]
-    * label *label246
+  735 select *tmp516 greaterThanEq :displayStorage:value 0 %[green] %[red]
   736 draw col *tmp516
   737 draw rect :displayStorage:x :displayStorage:y.1 1 :displayStorage:value
   738 op sub :displayStorage:y.1 :displayStorage:y.1 21
 
  1009 op idiv :displayRecord:t *tmp568 120
  1010 op idiv :displayRecord:m :displayRecord:t 60
  1011 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label322 greaterThanEq :displayRecord:s 10
-    * set *tmp574 "0"
-    * jump *label323 always
-    * label *label322
-    * set *tmp574 ""
-    * label *label323
+ 1012 select *tmp574 lessThan :displayRecord:s 10 "0" ""
  1013 print :displayRecord:m
  1014 print ":"
  1015 print *tmp574
 
  1092 op idiv :drawHeader:t *tmp0 120
  1093 op idiv :drawHeader:m :drawHeader:t 60
  1094 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label335 greaterThanEq :drawHeader:s 10
-    * set *tmp597 "0"
-    * jump *label336 always
-    * label *label335
-    * set *tmp597 ""
-    * label *label336
+ 1095 select *tmp597 lessThan :drawHeader:s 10 "0" ""
  1096 print :drawHeader:m
  1097 print ":"
  1098 print *tmp597
 
  1186 op idiv :drawHeader:t.1 *tmp0 120
  1187 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  1188 op mod :drawHeader:s.1 :drawHeader:t.1 60
-    * jump *label367 greaterThanEq :drawHeader:s.1 10
-    * set *tmp620 "0"
-    * jump *label368 always
-    * label *label367
-    * set *tmp620 ""
-    * label *label368
+ 1189 select *tmp620 lessThan :drawHeader:s.1 10 "0" ""
  1190 print :drawHeader:m.1
  1191 print ":"
  1192 print *tmp620

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   998 op mul *tmp560 15 :displayRecord:row
   999 op sub :displayRecord:y 189 *tmp560
  1000 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label320 lessThanEq :displayRecord:id @blockCount
+ 1001 lookup block *tmp564 :displayRecord:id
+ 1002 jump *label321 lessThanEq :displayRecord:id @blockCount
  1003 op sub *tmp565 :displayRecord:id @blockCount
  1004 lookup unit *tmp564 *tmp565
  1005 jump *label321 always
-    * label *label320
-    * lookup block *tmp564 :displayRecord:id
  1006 label *label321
  1007 op div *tmp568 :displayLog:record 1000
  1008 op idiv :displayRecord:t *tmp568 120

Modifications by Unroll iteration loop at Display.mnd:566:9 (-2 instructions):
 
   673 label *label224
   674 draw col %[white]
   675 op sub :displayStorage:y 190 8
-    * set :displayStorage:item @copper
-    * setaddr *tmp506 *label230
-    * jump *label227 always
-    * multilabel *label230 (m:marker1)
-    * set :displayStorage:item @lead
-    * setaddr *tmp506 *label231
-    * jump *label227 always
-    * multilabel *label231 (m:marker1)
-    * set :displayStorage:item @sand
-    * setaddr *tmp506 *label232
-    * jump *label227 always
-    * multilabel *label232 (m:marker1)
-    * set :displayStorage:item @coal
-    * setaddr *tmp506 *label233
-    * jump *label227 always
-    * multilabel *label233 (m:marker1)
-    * set :displayStorage:item @graphite
-    * setaddr *tmp506 *label234
-    * jump *label227 always
-    * multilabel *label234 (m:marker1)
-    * set :displayStorage:item @silicon
-    * setaddr *tmp506 *label235
-    * jump *label227 always
-    * multilabel *label235 (m:marker1)
-    * set :displayStorage:item @titanium
-    * setaddr *tmp506 *label236
-    * jump *label227 always
-    * multilabel *label236 (m:marker1)
-    * set :displayStorage:item @metaglass
-    * setaddr *tmp506 *label237
-    * jump *label227 always
-    * multilabel *label237 (m:marker1)
-    * set :displayStorage:item @thorium
-    * setaddr *tmp506 *label238
-    * label *label227
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
-    * label *label228
-    * multijump *tmp506 0 0 (m:marker1)
-    * multilabel *label238 (m:marker1)
-    * label *label229
+  676 set :displayStorage:item @copper
+  677 label *label404
+  678 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  679 op sub :displayStorage:y :displayStorage:y 21
+  680 label *label405
+  681 set :displayStorage:item @lead
+  682 label *label408
+  683 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  684 op sub :displayStorage:y :displayStorage:y 21
+  685 label *label409
+  686 set :displayStorage:item @sand
+  687 label *label412
+  688 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  689 op sub :displayStorage:y :displayStorage:y 21
+  690 label *label413
+  691 set :displayStorage:item @coal
+  692 label *label416
+  693 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  694 op sub :displayStorage:y :displayStorage:y 21
+  695 label *label417
+  696 set :displayStorage:item @graphite
+  697 label *label420
+  698 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  699 op sub :displayStorage:y :displayStorage:y 21
+  700 label *label421
+  701 set :displayStorage:item @silicon
+  702 label *label424
+  703 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  704 op sub :displayStorage:y :displayStorage:y 21
+  705 label *label425
+  706 set :displayStorage:item @titanium
+  707 label *label428
+  708 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  709 op sub :displayStorage:y :displayStorage:y 21
+  710 label *label429
+  711 set :displayStorage:item @metaglass
+  712 label *label432
+  713 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  714 op sub :displayStorage:y :displayStorage:y 21
+  715 label *label433
+  716 set :displayStorage:item @thorium
+  717 label *label436
+  718 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  719 op sub :displayStorage:y :displayStorage:y 21
+  720 label *label437
+  721 label *label229
   722 label *label222
   723 label *label223
   724 setaddr :drawHeader*retaddr *label239 (h:*label239)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   675 op sub :displayStorage:y 190 8
   676 set :displayStorage:item @copper
   677 label *label404
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  678 draw image 12 182 @copper 15 0
+  679 op sub :displayStorage:y 182 21
   680 label *label405
   681 set :displayStorage:item @lead
   682 label *label408
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  683 draw image 12 161 @lead 15 0
+  684 op sub :displayStorage:y 161 21
   685 label *label409
   686 set :displayStorage:item @sand
   687 label *label412
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  688 draw image 12 140 @sand 15 0
+  689 op sub :displayStorage:y 140 21
   690 label *label413
   691 set :displayStorage:item @coal
   692 label *label416
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  693 draw image 12 119 @coal 15 0
+  694 op sub :displayStorage:y 119 21
   695 label *label417
   696 set :displayStorage:item @graphite
   697 label *label420
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  698 draw image 12 98 @graphite 15 0
+  699 op sub :displayStorage:y 98 21
   700 label *label421
   701 set :displayStorage:item @silicon
   702 label *label424
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  703 draw image 12 77 @silicon 15 0
+  704 op sub :displayStorage:y 77 21
   705 label *label425
   706 set :displayStorage:item @titanium
   707 label *label428
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  708 draw image 12 56 @titanium 15 0
+  709 op sub :displayStorage:y 56 21
   710 label *label429
   711 set :displayStorage:item @metaglass
   712 label *label432
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  713 draw image 12 35 @metaglass 15 0
+  714 op sub :displayStorage:y 35 21
   715 label *label433
   716 set :displayStorage:item @thorium
   717 label *label436
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  718 draw image 12 14 @thorium 15 0
+  719 op sub :displayStorage:y 14 21
   720 label *label437
   721 label *label229
   722 label *label222

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
   672 label *label226
   673 label *label224
   674 draw col %[white]
-    * op sub :displayStorage:y 190 8
-    * set :displayStorage:item @copper
   675 label *label404
   676 draw image 12 182 @copper 15 0
-    * op sub :displayStorage:y 182 21
   677 label *label405
-    * set :displayStorage:item @lead
   678 label *label408
   679 draw image 12 161 @lead 15 0
-    * op sub :displayStorage:y 161 21
   680 label *label409
-    * set :displayStorage:item @sand
   681 label *label412
   682 draw image 12 140 @sand 15 0
-    * op sub :displayStorage:y 140 21
   683 label *label413
-    * set :displayStorage:item @coal
   684 label *label416
   685 draw image 12 119 @coal 15 0
-    * op sub :displayStorage:y 119 21
   686 label *label417
-    * set :displayStorage:item @graphite
   687 label *label420
   688 draw image 12 98 @graphite 15 0
-    * op sub :displayStorage:y 98 21
   689 label *label421
-    * set :displayStorage:item @silicon
   690 label *label424
   691 draw image 12 77 @silicon 15 0
-    * op sub :displayStorage:y 77 21
   692 label *label425
-    * set :displayStorage:item @titanium
   693 label *label428
   694 draw image 12 56 @titanium 15 0
-    * op sub :displayStorage:y 56 21
   695 label *label429
-    * set :displayStorage:item @metaglass
   696 label *label432
   697 draw image 12 35 @metaglass 15 0
-    * op sub :displayStorage:y 35 21
   698 label *label433
-    * set :displayStorage:item @thorium
   699 label *label436
   700 draw image 12 14 @thorium 15 0
-    * op sub :displayStorage:y 14 21
   701 label *label437
   702 label *label229
   703 label *label222

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   918 set :displayBaseMap:index .recentBuildIndex
   919 jump *label303 lessThan :displayBaseMap:index 0
   920 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
+  921 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
   922 setaddr :drawBlock*retaddr *label305 (h:*label305)
   923 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)
   924 label *label305

Modifications by Unroll iteration loop at Display.mnd:150:17:
 
  1118 label *label345
  1119 jump *label347 notEqual :drawHeader:count 2
  1120 set :drawHeader:x 27
-    * set :drawHeader:goal .nextBlock
-    * setaddr *tmp607 *label352
-    * jump *label349 always
-    * multilabel *label352 (m:marker3)
-    * set :drawHeader:goal .nextFactory
-    * setaddr *tmp607 *label353
-    * jump *label349 always
-    * multilabel *label353 (m:marker3)
-    * set :drawHeader:goal .nextAddReco
-    * setaddr *tmp607 *label354
-    * label *label349
-    * jump *label355 equal :drawHeader:goal null
-    * draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
-    * label *label355
-    * label *label356
-    * label *label350
-    * multijump *tmp607 0 0 (m:marker3)
-    * multilabel *label354 (m:marker3)
-    * label *label351
+ 1121 set :drawHeader:goal .nextBlock
+ 1122 label *label441
+ 1123 jump *label442 equal :drawHeader:goal null
+ 1124 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1125 op add :drawHeader:x :drawHeader:x 30
+ 1126 label *label442
+ 1127 label *label443
+ 1128 label *label444
+ 1129 set :drawHeader:goal .nextFactory
+ 1130 label *label447
+ 1131 jump *label448 equal :drawHeader:goal null
+ 1132 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1133 op add :drawHeader:x :drawHeader:x 30
+ 1134 label *label448
+ 1135 label *label449
+ 1136 label *label450
+ 1137 set :drawHeader:goal .nextAddReco
+ 1138 label *label453
+ 1139 jump *label454 equal :drawHeader:goal null
+ 1140 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1141 op add :drawHeader:x :drawHeader:x 30
+ 1142 label *label454
+ 1143 label *label455
+ 1144 label *label456
+ 1145 label *label351
  1146 jump *label348 always
  1147 label *label347
  1148 jump *label357 notEqual :drawHeader:count 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
  1121 set :drawHeader:goal .nextBlock
  1122 label *label441
  1123 jump *label442 equal :drawHeader:goal null
-    * draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
+ 1124 draw image 27 240 :drawHeader:goal 25 0
+ 1125 op add :drawHeader:x 27 30
  1126 label *label442
  1127 label *label443
  1128 label *label444
 
  1138 label *label453
  1139 jump *label454 equal :drawHeader:goal null
  1140 draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
  1141 label *label454
  1142 label *label455
  1143 label *label456

Modifications by Unroll iteration loop at Display.mnd:157:17:
 
  1145 jump *label348 always
  1146 label *label347
  1147 jump *label357 notEqual :drawHeader:count 1
-    * set :drawHeader:goal.1 .nextBlock
-    * setaddr *tmp612 *label362
-    * jump *label359 always
-    * multilabel *label362 (m:marker4)
-    * set :drawHeader:goal.1 .nextFactory
-    * setaddr *tmp612 *label363
-    * jump *label359 always
-    * multilabel *label363 (m:marker4)
-    * set :drawHeader:goal.1 .nextAddReco
-    * setaddr *tmp612 *label364
-    * label *label359
-    * jump *label365 equal :drawHeader:goal.1 null
-    * draw image 42 237 :drawHeader:goal.1 32 0
-    * jump *label361 always
-    * label *label365
-    * label *label366
-    * label *label360
-    * multijump *tmp612 0 0 (m:marker4)
-    * multilabel *label364 (m:marker4)
-    * label *label361
+ 1148 set :drawHeader:goal.1 .nextBlock
+ 1149 label *label460
+ 1150 jump *label461 equal :drawHeader:goal.1 null
+ 1151 draw image 42 237 :drawHeader:goal.1 32 0
+ 1152 jump *label361 always
+ 1153 label *label461
+ 1154 label *label462
+ 1155 label *label463
+ 1156 set :drawHeader:goal.1 .nextFactory
+ 1157 label *label466
+ 1158 jump *label467 equal :drawHeader:goal.1 null
+ 1159 draw image 42 237 :drawHeader:goal.1 32 0
+ 1160 jump *label361 always
+ 1161 label *label467
+ 1162 label *label468
+ 1163 label *label469
+ 1164 set :drawHeader:goal.1 .nextAddReco
+ 1165 label *label472
+ 1166 jump *label473 equal :drawHeader:goal.1 null
+ 1167 draw image 42 237 :drawHeader:goal.1 32 0
+ 1168 jump *label361 always
+ 1169 label *label473
+ 1170 label *label474
+ 1171 label *label475
+ 1172 label *label361
  1173 label *label357
  1174 label *label358
  1175 label *label348

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-9 instructions):
 
   269 draw print 175 *tmp188 @right
   270 label *label99
   271 label *label97
-    * jump *label100 lessThan 1 1
   272 op sub :drawItemColor.3:y :updateDisplay:y 30
   273 label *label100
   274 label *label101
 
   292 draw print 175 *tmp211 @right
   293 label *label106
   294 label *label104
-    * jump *label107 lessThan 1 1
   295 op sub :drawItemColor.4:y :updateDisplay:y 45
   296 label *label107
   297 label *label108
 
   361 draw print 175 *tmp263 @right
   362 label *label128
   363 label *label126
-    * jump *label129 lessThan 1 1
   364 op sub :drawItemColor.6:y :updateDisplay:y 30
   365 label *label129
   366 label *label130
 
   384 draw print 175 *tmp286 @right
   385 label *label135
   386 label *label133
-    * jump *label136 lessThan 1 1
   387 op sub :drawItemColor.7:y :updateDisplay:y 45
   388 label *label136
   389 label *label137
 
   452 draw print 175 *tmp339 @right
   453 label *label157
   454 label *label155
-    * jump *label158 lessThan 1 1
   455 op sub :drawItemColor.9:y :updateDisplay:y 30
   456 label *label158
   457 label *label159
 
   475 draw print 175 *tmp362 @right
   476 label *label164
   477 label *label162
-    * jump *label165 lessThan 1 1
   478 op sub :drawItemColor.10:y :updateDisplay:y 45
   479 label *label165
   480 label *label166
 
   498 draw print 175 *tmp385 @right
   499 label *label171
   500 label *label169
-    * jump *label172 lessThan 1 1
   501 op sub :drawItemColor.11:y :updateDisplay:y 60
   502 label *label172
   503 label *label173
 
   565 draw print 175 *tmp435 @right
   566 label *label194
   567 label *label192
-    * jump *label195 lessThan 1 1
   568 op sub :drawItemColor.13:y :updateDisplay:y 30
   569 label *label195
   570 label *label196
 
   598 draw print 175 *tmp463 @right
   599 label *label202
   600 label *label200
-    * jump *label203 lessThan 1 1
   601 op sub :drawItemColor.14:y :updateDisplay:y 30
   602 label *label203
   603 label *label204

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
   979 jump *label321 lessThanEq :displayRecord:id @blockCount
   980 op sub *tmp565 :displayRecord:id @blockCount
   981 lookup unit *tmp564 *tmp565
-    * jump *label321 always
   982 label *label321
   983 op div *tmp568 :displayLog:record 1000
   984 op idiv :displayRecord:t *tmp568 120
 
  1155 label *label472
  1156 jump *label473 equal :drawHeader:goal.1 null
  1157 draw image 42 237 :drawHeader:goal.1 32 0
-    * jump *label361 always
  1158 label *label473
  1159 label *label474
  1160 label *label475

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   548 label *label184
   549 jump *label187 notEqual .transportItem null
   550 set :drawItem.13:target .transportTarget
-    * op div *tmp422 0 :drawItem.13:target
+  551 set *tmp422 0
   552 op min :drawItemColor.13:length 126 *tmp422
   553 draw col %[white]
   554 op sub *tmp433 :updateDisplay:y 10

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   547 op sub :drawTitleRow.5:y :updateDisplay:y 15
   548 label *label184
   549 jump *label187 notEqual .transportItem null
-    * set :drawItem.13:target .transportTarget
   550 set *tmp422 0
-    * op min :drawItemColor.13:length 126 *tmp422
+  551 op min :drawItemColor.13:length 126 0
   552 draw col %[white]
   553 op sub *tmp433 :updateDisplay:y 10
   554 draw image 11 *tmp433 @poly 16 0
   555 draw col %008000FF
-    * draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
+  556 draw rect 22 :drawTitleRow.5:y 0 10
   557 draw col %00FF00FF
   558 draw lineRect 22 :drawTitleRow.5:y 126 10
   559 op sub *tmp435 :updateDisplay:y 8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   547 op sub :drawTitleRow.5:y :updateDisplay:y 15
   548 label *label184
   549 jump *label187 notEqual .transportItem null
-    * set *tmp422 0
-    * op min :drawItemColor.13:length 126 0
   550 draw col %[white]
   551 op sub *tmp433 :updateDisplay:y 10
   552 draw image 11 *tmp433 @poly 16 0

Modifications by Virtual Instruction Expansion (+1 instructions):
 
   906 set :displayBaseMap:index .recentBuildIndex
   907 jump *label303 lessThan :displayBaseMap:index 0
   908 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
+  909 op mul *tmp1034 :displayBaseMap:index 2
+  910 multijump *label480 *tmp1034 0 (m:marker5)
+  911 multilabel *label480 (m:marker5)
+  912 set :drawBlock:cfg "AJEMJJ-graphite-press0"
+  913 jump *label479 always
+  914 multilabel *label481 (m:marker5)
+  915 set :drawBlock:cfg "AJTJK-battery1"
+  916 jump *label479 always
+  917 multilabel *label482 (m:marker5)
+  918 set :drawBlock:cfg "ALTJL-battery2"
+  919 jump *label479 always
+  920 multilabel *label483 (m:marker5)
+  921 set :drawBlock:cfg "AJRJM-combustion-generator3"
+  922 jump *label479 always
+  923 multilabel *label484 (m:marker5)
+  924 set :drawBlock:cfg "ALMQJN-silicon-smelter4"
+  925 jump *label479 always
+  926 multilabel *label485 (m:marker5)
+  927 set :drawBlock:cfg "A{LNJO-inverted-sorter5"
+  928 jump *label479 always
+  929 multilabel *label486 (m:marker5)
+  930 set :drawBlock:cfg "A©JNJP-unloader6"
+  931 jump *label479 always
+  932 multilabel *label487 (m:marker5)
+  933 set :drawBlock:cfg "A{HNJQ-inverted-sorter7"
+  934 jump *label479 always
+  935 multilabel *label488 (m:marker5)
+  936 set :drawBlock:cfg "AJPJR-underflow-gate8"
+  937 jump *label479 always
+  938 multilabel *label489 (m:marker5)
+  939 set :drawBlock:cfg "AÕFFJS-micro-processor9"
+  940 jump *label479 always
+  941 multilabel *label490 (m:marker5)
+  942 set :drawBlock:cfg "AFHJT-power-node10"
+  943 jump *label479 always
+  944 multilabel *label491 (m:marker5)
+  945 set :drawBlock:cfg "A©FJJU-unloader11"
+  946 jump *label479 always
+  947 multilabel *label492 (m:marker5)
+  948 set :drawBlock:cfg "A~DJJV-overflow-gate12"
+  949 jump *label479 always
+  950 multilabel *label493 (m:marker5)
+  951 set :drawBlock:cfg "A¾BFLW-air-factory13"
+  952 jump *label479 always
+  953 multilabel *label494 (m:marker5)
+  954 set :drawBlock:cfg "A©NHJX-unloader14"
+  955 jump *label479 always
+  956 multilabel *label495 (m:marker5)
+  957 set :drawBlock:cfg "A{NJJY-inverted-sorter15"
+  958 jump *label479 always
+  959 multilabel *label496 (m:marker5)
+  960 set :drawBlock:cfg "ANOMJZ-kiln16"
+  961 jump *label479 always
+  962 multilabel *label497 (m:marker5)
+  963 set :drawBlock:cfg "A¡AOJ[-water-extractor17"
+  964 jump *label479 always
+  965 multilabel *label498 (m:marker5)
+  966 set :drawBlock:cfg "AAKJ\-steam-generator18"
+  967 jump *label479 always
+  968 multilabel *label499 (m:marker5)
+  969 set :drawBlock:cfg "ALQIJ^-silicon-smelter20"
+  970 jump *label479 always
+  971 multilabel *label500 (m:marker5)
+  972 set :drawBlock:cfg "AKFRJ_-multi-press21"
+  973 jump *label479 always
+  974 multilabel *label501 (m:marker5)
+  975 set :drawBlock:cfg "A©HFJa-unloader23"
+  976 jump *label479 always
+  977 multilabel *label502 (m:marker5)
+  978 set :drawBlock:cfg "A{HDJb-inverted-sorter24"
+  979 jump *label479 always
+  980 multilabel *label503 (m:marker5)
+  981 set :drawBlock:cfg "AÀF@Lc-additive-reconstructor25"
+  982 jump *label479 always
+  983 multilabel *label504 (m:marker5)
+  984 set :drawBlock:cfg "AÁNBJd-multiplicative-reconstructor26"
+  985 jump *label479 always
+  986 multilabel *label505 (m:marker5)
+  987 set :drawBlock:cfg "AXPRJe-pulverizer27"
+  988 jump *label479 always
+  989 multilabel *label506 (m:marker5)
+  990 set :drawBlock:cfg "A~PPJf-overflow-gate28"
+  991 jump *label479 always
+  992 multilabel *label507 (m:marker5)
+  993 set :drawBlock:cfg "APTJg-power-node29"
+  994 jump *label479 always
+  995 multilabel *label508 (m:marker5)
+  996 set :drawBlock:cfg "A©RPJh-unloader30"
+  997 jump *label479 always
+  998 multilabel *label509 (m:marker5)
+  999 set :drawBlock:cfg "A¨SSJi-container31"
+ 1000 jump *label479 always
+ 1001 multilabel *label510 (m:marker5)
+ 1002 set :drawBlock:cfg "AXTNJj-pulverizer32"
+ 1003 jump *label479 always
+ 1004 multilabel *label511 (m:marker5)
+ 1005 set :drawBlock:cfg "A~RNJk-overflow-gate33"
+ 1006 jump *label479 always
+ 1007 multilabel *label512 (m:marker5)
+ 1008 set :drawBlock:cfg "A~RLJl-overflow-gate34"
+ 1009 jump *label479 always
+ 1010 multilabel *label513 (m:marker5)
+ 1011 set :drawBlock:cfg "A{TPJm-inverted-sorter35"
+ 1012 jump *label479 always
+ 1013 multilabel *label514 (m:marker5)
+ 1014 set :drawBlock:cfg "AXTLJn-pulverizer36"
+ 1015 jump *label479 always
+ 1016 label *label479
  1017 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1018 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1019 label *label305

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
  1012 jump *label479 always
  1013 multilabel *label514 (m:marker5)
  1014 set :drawBlock:cfg "AXTLJn-pulverizer36"
-    * jump *label479 always
  1015 label *label479
  1016 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1017 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    15 label *label12
    16 ubind @poly
    17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
-    * label *label13
    18 jump *label12 equal .core null
-    * label *label14
    19 printflush null
    20 drawflush null
    21 label *label15
 
    39 op mul *tmp59 *tmp58 42
    40 op mul *tmp60 :animate:ratio 90
    41 op add *tmp57 *tmp59 *tmp60
-    * label *label27
    42 op mul *tmp64 *tmp58 237
    43 op mul *tmp65 :animate:ratio 120
    44 op add *tmp62 *tmp64 *tmp65
-    * label *label28
    45 op mul *tmp69 *tmp58 32
    46 op mul *tmp70 :animate:ratio 168
    47 op add *tmp67 *tmp69 *tmp70
-    * label *label29
    48 draw image *tmp57 *tmp62 @mega *tmp67 0
    49 jump *label30 notEqual :animate:ratio 1
    50 setaddr :drawHeader*retaddr *label32 (h:*label32)
    51 call *label4 *invalid :drawHeader*retval (m:*label32) (h:*label32)
    52 label *label32
    53 label *label30
-    * label *label31
    54 drawflush display1
    55 op add .animation .animation 1
-    * label *label24
    56 jump *label23 always
    57 label *label22
    58 draw clear 0 0 32
 
    67 jump *label36 equal *tmp77 false
    68 print "Locating ore..."
    69 draw print 22 201 @bottomLeft
-    * label *label39
    70 print "Locating ore..."
    71 draw print 23 201 @bottomLeft
-    * label *label40
-    * label *label38
    72 set :drawItem:item .nextBlock
    73 read :drawItem:current processor3 ".mapProgress"
    74 read :drawItem:target processor3 ".mapTotal"
 
    85 read *tmp98 processor3 ".mapSpots"
    86 print *tmp98
    87 draw print 174 193 @right
-    * label *label44
    88 print "x"
    89 read *tmp100 processor3 ".mapSpots"
    90 print *tmp100
    91 draw print 175 193 @right
-    * label *label45
-    * label *label43
-    * label *label42
-    * label *label41
    92 op sub :updateDisplay:y 171 35
    93 jump *label37 always
    94 label *label36
 
    96 set :drawMaterials:count .totalTargets
    97 print "Materials"
    98 draw print 22 201 @bottomLeft
-    * label *label51
    99 print "Materials"
   100 draw print 23 201 @bottomLeft
-    * label *label52
-    * label *label50
   101 set :updateDisplay:y 186
   102 jump *label53 equal :drawMaterials:count false
   103 set :drawMaterials:item @copper
 
   154 op add *tmp129 :updateDisplay:y 7
   155 print :drawMaterials:target
   156 draw print :drawItemColor.1:textX *tmp129 @right
-    * label *label70
   157 op add :drawText.7:x *tmp119 175
   158 print :drawMaterials:target
   159 draw print :drawText.7:x *tmp129 @right
-    * label *label71
-    * label *label69
   160 op add :drawItemColor.1:col :drawMaterials:col 1
   161 jump *label72 lessThan :drawItemColor.1:col 1
   162 set :drawItemColor.1:col 0
   163 op sub :drawItemColor.1:y :updateDisplay:y 15
   164 label *label72
-    * label *label73
-    * label *label68
-    * label *label67
   165 set :drawMaterials:col :drawItemColor.1:col
   166 set :updateDisplay:y :drawItemColor.1:y
   167 op sub :drawMaterials:count :drawMaterials:count 1
   168 jump *label74 greaterThan :drawMaterials:count 0
   169 jump *label57 always
   170 label *label74
-    * label *label75
   171 label *label65
-    * label *label66
-    * label *label56
   172 multijump *tmp107 0 0 (m:marker0)
   173 multilabel *label64 (m:marker0)
   174 label *label57
   175 label *label53
-    * label *label54
   176 jump *label76 greaterThanEq .totalTargets 3
   177 op sub *tmp137 3 .totalTargets
   178 op mul *tmp138 *tmp137 15
   179 op sub :updateDisplay:y :updateDisplay:y *tmp138
   180 label *label76
-    * label *label77
   181 op sub :updateDisplay:y :updateDisplay:y 5
   182 label *label48
-    * label *label49
   183 label *label37
-    * label *label35
   184 jump *label79 notEqual .nextFactory null
   185 jump *label78 always
   186 label *label79
-    * label *label80
   187 draw col %[white]
   188 print "Air Factory"
   189 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label82
   190 print "Air Factory"
   191 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label83
   192 op sub :drawTitleRow.2:y :updateDisplay:y 15
-    * label *label81
   193 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   194 jump *label84 notEqual :drawAirFactory:progress 0
   195 jump *label86 notEqual .nextFactory @flare
 
   206 op sub *tmp165 :updateDisplay:y 8
   207 print 15
   208 draw print 174 *tmp165 @right
-    * label *label91
   209 print 15
   210 draw print 175 *tmp165 @right
-    * label *label92
-    * label *label90
-    * label *label89
-    * label *label88
   211 op sub :updateDisplay:y :drawTitleRow.2:y 30
   212 jump *label87 always
   213 label *label86
 
   224 op sub *tmp188 :updateDisplay:y 8
   225 print 15
   226 draw print 174 *tmp188 @right
-    * label *label98
   227 print 15
   228 draw print 175 *tmp188 @right
-    * label *label99
-    * label *label97
   229 op sub :drawItemColor.3:y :updateDisplay:y 30
-    * label *label100
-    * label *label101
-    * label *label96
-    * label *label95
   230 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   231 op mul *tmp198 *tmp192 4.2
   232 op min :drawItemColor.4:length 126 *tmp198
 
   240 op sub *tmp211 :updateDisplay:y 23
   241 print 30
   242 draw print 174 *tmp211 @right
-    * label *label105
   243 print 30
   244 draw print 175 *tmp211 @right
-    * label *label106
-    * label *label104
   245 op sub :drawItemColor.4:y :updateDisplay:y 45
-    * label *label107
-    * label *label108
-    * label *label103
-    * label *label102
   246 set :updateDisplay:y :drawItemColor.4:y
   247 label *label87
   248 jump *label85 always
 
   262 print *tmp216
   263 print "%"
   264 draw print 174 *tmp235 @right
-    * label *label112
   265 print *tmp216
   266 print "%"
   267 draw print 175 *tmp235 @right
-    * label *label113
-    * label *label111
-    * label *label110
-    * label *label109
   268 op sub :updateDisplay:y :drawTitleRow.2:y 30
   269 label *label85
   270 op sub :updateDisplay:y :updateDisplay:y 5
 
   272 jump *label117 notEqual .nextAddReco null
   273 jump *label116 always
   274 label *label117
-    * label *label118
   275 draw col %[white]
   276 print "Reconstructor"
   277 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label120
   278 print "Reconstructor"
   279 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label121
   280 op sub :drawTitleRow.3:y :updateDisplay:y 15
-    * label *label119
   281 sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 @progress
   282 jump *label122 notEqual :drawAddReco:progress 0
   283 sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite
 
   293 op sub *tmp263 :updateDisplay:y 8
   294 print 40
   295 draw print 174 *tmp263 @right
-    * label *label127
   296 print 40
   297 draw print 175 *tmp263 @right
-    * label *label128
-    * label *label126
   298 op sub :drawItemColor.6:y :updateDisplay:y 30
-    * label *label129
-    * label *label130
-    * label *label125
-    * label *label124
   299 sensor *tmp267 AÀF@Lc-additive-reconstructor25 @silicon
   300 op mul *tmp273 *tmp267 3.1500000000000004
   301 op min :drawItemColor.7:length 126 *tmp273
 
   309 op sub *tmp286 :updateDisplay:y 23
   310 print 40
   311 draw print 174 *tmp286 @right
-    * label *label134
   312 print 40
   313 draw print 175 *tmp286 @right
-    * label *label135
-    * label *label133
   314 op sub :drawItemColor.7:y :updateDisplay:y 45
-    * label *label136
-    * label *label137
-    * label *label132
-    * label *label131
   315 set :updateDisplay:y :drawItemColor.7:y
   316 jump *label123 always
   317 label *label122
 
   329 print *tmp291
   330 print "%"
   331 draw print 174 *tmp310 @right
-    * label *label141
   332 print *tmp291
   333 print "%"
   334 draw print 175 *tmp310 @right
-    * label *label142
-    * label *label140
-    * label *label139
-    * label *label138
   335 op sub :updateDisplay:y :drawTitleRow.3:y 30
   336 label *label123
   337 op sub :updateDisplay:y :updateDisplay:y 5
 
   339 jump *label146 notEqual .nextMultiReco null
   340 jump *label145 always
   341 label *label146
-    * label *label147
   342 draw col %[white]
   343 op min :updateDisplay:y :updateDisplay:y 142
   344 print "Reconstructor"
   345 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label149
   346 print "Reconstructor"
   347 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label150
   348 op sub :drawTitleRow.4:y :updateDisplay:y 15
-    * label *label148
   349 sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconstructor26 @progress
   350 jump *label151 notEqual :drawMultiReco:progress 0
   351 sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metaglass
 
   361 op sub *tmp339 :updateDisplay:y 8
   362 print 40
   363 draw print 174 *tmp339 @right
-    * label *label156
   364 print 40
   365 draw print 175 *tmp339 @right
-    * label *label157
-    * label *label155
   366 op sub :drawItemColor.9:y :updateDisplay:y 30
-    * label *label158
-    * label *label159
-    * label *label154
-    * label *label153
   367 sensor *tmp343 AÁNBJd-multiplicative-reconstructor26 @titanium
   368 op div *tmp349 *tmp343 0.6349206349206349
   369 op min :drawItemColor.10:length 126 *tmp349
 
   377 op sub *tmp362 :updateDisplay:y 23
   378 print 80
   379 draw print 174 *tmp362 @right
-    * label *label163
   380 print 80
   381 draw print 175 *tmp362 @right
-    * label *label164
-    * label *label162
   382 op sub :drawItemColor.10:y :updateDisplay:y 45
-    * label *label165
-    * label *label166
-    * label *label161
-    * label *label160
   383 sensor *tmp366 AÁNBJd-multiplicative-reconstructor26 @silicon
   384 op div *tmp372 *tmp366 1.0317460317460319
   385 op min :drawItemColor.11:length 126 *tmp372
 
   393 op sub *tmp385 :updateDisplay:y 38
   394 print 130
   395 draw print 174 *tmp385 @right
-    * label *label170
   396 print 130
   397 draw print 175 *tmp385 @right
-    * label *label171
-    * label *label169
   398 op sub :drawItemColor.11:y :updateDisplay:y 60
-    * label *label172
-    * label *label173
-    * label *label168
-    * label *label167
   399 set :updateDisplay:y :drawItemColor.11:y
   400 jump *label152 always
   401 label *label151
 
   413 print *tmp390
   414 print "%"
   415 draw print 174 *tmp409 @right
-    * label *label177
   416 print *tmp390
   417 print "%"
   418 draw print 175 *tmp409 @right
-    * label *label178
-    * label *label176
-    * label *label175
-    * label *label174
   419 op sub :updateDisplay:y :drawTitleRow.4:y 45
   420 label *label152
   421 op sub :updateDisplay:y :updateDisplay:y 5
 
   424 jump *label182 equal *tmp413 false
   425 jump *label181 always
   426 label *label182
-    * label *label183
   427 draw col %[white]
   428 print "Builder"
   429 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label185
   430 print "Builder"
   431 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label186
   432 op sub :drawTitleRow.5:y :updateDisplay:y 15
-    * label *label184
   433 jump *label187 notEqual .transportItem null
   434 draw col %[white]
   435 op sub *tmp433 :updateDisplay:y 10
 
   441 op sub *tmp435 :updateDisplay:y 8
   442 print .transportTarget
   443 draw print 174 *tmp435 @right
-    * label *label193
   444 print .transportTarget
   445 draw print 175 *tmp435 @right
-    * label *label194
-    * label *label192
   446 op sub :drawItemColor.13:y :updateDisplay:y 30
-    * label *label195
-    * label *label196
-    * label *label191
-    * label *label190
-    * label *label189
   447 set :updateDisplay:y :drawItemColor.13:y
   448 jump *label188 always
   449 label *label187
 
   466 op sub *tmp463 :updateDisplay:y 8
   467 print .transportTarget
   468 draw print 174 *tmp463 @right
-    * label *label201
   469 print .transportTarget
   470 draw print 175 *tmp463 @right
-    * label *label202
-    * label *label200
   471 op sub :drawItemColor.14:y :updateDisplay:y 30
-    * label *label203
-    * label *label204
-    * label *label199
-    * label *label198
-    * label *label197
   472 set :updateDisplay:y :drawItemColor.14:y
   473 label *label188
   474 label *label181
   475 jump *label206 greaterThanEq :updateDisplay:y 20
   476 jump *label205 always
   477 label *label206
-    * label *label207
   478 jump *label208 notEqual AJTJK-battery1 null
   479 jump *label205 always
   480 label *label208
-    * label *label209
   481 draw col %[white]
   482 print "Power"
   483 draw print 22 20 @bottomLeft
-    * label *label211
   484 print "Power"
   485 draw print 23 20 @bottomLeft
-    * label *label212
-    * label *label210
   486 sensor :drawPower:power AJTJK-battery1 @totalPower
   487 op mul *tmp474 :drawPower:power 100
   488 op idiv *tmp476 *tmp474 4000
 
   497 print *tmp476
   498 print "%"
   499 draw print 174 12 @right
-    * label *label215
   500 print *tmp476
   501 print "%"
   502 draw print 175 12 @right
-    * label *label216
-    * label *label214
-    * label *label213
   503 label *label205
   504 drawflush display1
-    * label *label33
   505 label *label23
   506 jump *label21 always
   507 label *label20
 
   512 draw col %[gold]
   513 print "Resources"
   514 draw print 11 206 @left
-    * label *label225
   515 print "Resources"
   516 draw print 12 206 @left
-    * label *label226
-    * label *label224
   517 draw col %[white]
-    * label *label404
   518 draw image 12 182 @copper 15 0
-    * label *label405
-    * label *label408
   519 draw image 12 161 @lead 15 0
-    * label *label409
-    * label *label412
   520 draw image 12 140 @sand 15 0
-    * label *label413
-    * label *label416
   521 draw image 12 119 @coal 15 0
-    * label *label417
-    * label *label420
   522 draw image 12 98 @graphite 15 0
-    * label *label421
-    * label *label424
   523 draw image 12 77 @silicon 15 0
-    * label *label425
-    * label *label428
   524 draw image 12 56 @titanium 15 0
-    * label *label429
-    * label *label432
   525 draw image 12 35 @metaglass 15 0
-    * label *label433
-    * label *label436
   526 draw image 12 14 @thorium 15 0
-    * label *label437
-    * label *label229
   527 label *label222
-    * label *label223
   528 setaddr :drawHeader*retaddr *label239 (h:*label239)
   529 call *label4 *invalid :drawHeader*retval (m:*label239) (h:*label239)
   530 label *label239
 
   532 jump *label240 lessThanEq .lastTail :displayStorage:tail
   533 jump *label221 always
   534 label *label240
-    * label *label241
   535 read :displayStorage:accumulator bank2 .lastTail
   536 op add :displayStorage:x 25 .lastTail
   537 op sub :displayStorage:y.1 190 8
   538 set :displayStorage:i 0
-    * label *label242
   539 label *label402
   540 op and *tmp513 :displayStorage:accumulator 0b11111
   541 op sub :displayStorage:value *tmp513 8
 
   544 draw rect :displayStorage:x :displayStorage:y.1 1 :displayStorage:value
   545 op sub :displayStorage:y.1 :displayStorage:y.1 21
   546 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label243
   547 op add :displayStorage:i :displayStorage:i 1
   548 jump *label402 lessThan :displayStorage:i 9
-    * label *label244
   549 drawflush display1
   550 op add .lastTail .lastTail 1
   551 label *label221
 
   560 draw col %[gold]
   561 print "Base map"
   562 draw print 90 206 @center
-    * label *label254
   563 print "Base map"
   564 draw print 91 206 @center
-    * label *label255
-    * label *label253
   565 draw col %[white]
   566 setaddr :setupScale*retaddr *label256 (h:*label256)
   567 call *label5 *invalid :setupScale*retval (m:*label256) (h:*label256)
 
   570 drawflush display1
   571 set :displayBaseMap:limit 5
   572 label *label251
-    * label *label252
   573 set :displayBaseMap:counter 0
   574 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
   575 setaddr *tmp522 *label260
 
   714 jump *label297 notEqual :displayBaseMap:cfg "AXPRJe-pulverizer27"
   715 jump *label259 always
   716 label *label297
-    * label *label298
   717 label *label295
-    * label *label296
   718 jump *label299 notEqual :displayBaseMap:counter :displayBaseMap:limit
   719 setaddr :drawHeader*retaddr *label301 (h:*label301)
   720 call *label4 *invalid :drawHeader*retval (m:*label301) (h:*label301)
 
   842 call *label6 *invalid :drawBlock*retval (m:*label305) (h:*label305)
   843 label *label305
   844 label *label303
-    * label *label304
   845 sensor *tmp534 switch1 @enabled
   846 jump *label306 equal *tmp534 false
   847 draw clear 0 0 32
   848 jump *label259 always
   849 label *label306
-    * label *label307
   850 drawflush display1
-    * label *label258
   851 multijump *tmp522 0 0 (m:marker2)
   852 multilabel *label294 (m:marker2)
   853 label *label259
-    * label *label249
   854 jump *label248 always
   855 label *label247
   856 op sub :displayLog:page .page 3
 
   868 draw col %[gold]
   869 print "Build records"
   870 draw print 4 206 @left
-    * label *label312
   871 print "Build records"
   872 draw print 5 206 @left
-    * label *label313
-    * label *label311
   873 op sub *tmp550 .page 2
   874 print *tmp550
   875 print "/"
   876 print :displayLog:pages
   877 draw print 172 206 @right
-    * label *label314
   878 set .lastRecord :displayLog:start
   879 label *label309
-    * label *label310
   880 setaddr :drawHeader*retaddr *label315 (h:*label315)
   881 call *label4 *invalid :drawHeader*retval (m:*label315) (h:*label315)
   882 label *label315
   883 op sub :displayLog:position .lastRecord 1
-    * label *label316
   884 jump *label318 lessThan :displayLog:position :displayLog:stop
   885 label *label403
   886 read :displayLog:record bank1 :displayLog:position
 
   911 op add *tmp577 :displayRecord:y 2
   912 print :displayRecord:s
   913 draw print *tmp576 *tmp577 @right
-    * label *label324
-    * label *label319
   914 drawflush display1
   915 sensor *tmp578 switch1 @enabled
   916 jump *label325 equal *tmp578 false
   917 jump *label318 always
   918 label *label325
-    * label *label326
-    * label *label317
   919 op sub :displayLog:position :displayLog:position 1
   920 jump *label403 greaterThanEq :displayLog:position :displayLog:stop
   921 label *label318
   922 op add .lastRecord :displayLog:stop 1
   923 drawflush display1
-    * label *label308
   924 label *label248
   925 label *label220
   926 label *label21
   927 label *label18
-    * label *label19
   928 jump *label327 lessThanEq .megas 0
   929 print "[gold]All done.[]\nNothing more to see here.\nGo home."
   930 print "\n"
 
   948 print .status3
   949 print "\n"
   950 printflush message1
-    * label *label329
   951 label *label328
   952 sensor .pageSwitched switch1 @enabled
   953 jump *label330 equal .pageSwitched false
 
   958 draw reset
   959 draw clear 0 0 32
   960 label *label330
-    * label *label331
-    * label *label16
   961 jump *label15 always
-    * label *label17
-    * label *label11
-    * label *label10
   962 wait 1e12
   963 jump *label9 always
   964 end
 
   979 print *tmp597
   980 print :drawHeader:s
   981 draw print 25 71 @center
-    * label *label338
   982 print :drawHeader:m
   983 print ":"
   984 print *tmp597
   985 print :drawHeader:s
   986 draw print 26 71 @center
-    * label *label339
-    * label *label337
   987 draw col %[white]
   988 draw reset
   989 jump *label334 always
 
   991 draw col %[gold]
   992 print "Goal"
   993 draw print 42 261 @bottom
-    * label *label341
   994 print "Goal"
   995 draw print 43 261 @bottom
-    * label *label342
-    * label *label340
   996 draw col %[white]
   997 jump *label343 equal .nextMultiReco false
   998 draw image 42 237 .nextMultiReco 32 0
 
  1009 jump *label347 notEqual :drawHeader:count 2
  1010 set :drawHeader:x 27
  1011 set :drawHeader:goal .nextBlock
-    * label *label441
  1012 jump *label442 equal :drawHeader:goal null
  1013 draw image 27 240 :drawHeader:goal 25 0
  1014 op add :drawHeader:x 27 30
  1015 label *label442
-    * label *label443
-    * label *label444
  1016 set :drawHeader:goal .nextFactory
-    * label *label447
  1017 jump *label448 equal :drawHeader:goal null
  1018 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  1019 op add :drawHeader:x :drawHeader:x 30
  1020 label *label448
-    * label *label449
-    * label *label450
  1021 set :drawHeader:goal .nextAddReco
-    * label *label453
  1022 jump *label454 equal :drawHeader:goal null
  1023 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  1024 label *label454
-    * label *label455
-    * label *label456
-    * label *label351
  1025 jump *label348 always
  1026 label *label347
  1027 jump *label357 notEqual :drawHeader:count 1
  1028 set :drawHeader:goal.1 .nextBlock
-    * label *label460
  1029 jump *label461 equal :drawHeader:goal.1 null
  1030 draw image 42 237 :drawHeader:goal.1 32 0
  1031 jump *label361 always
  1032 label *label461
-    * label *label462
-    * label *label463
  1033 set :drawHeader:goal.1 .nextFactory
-    * label *label466
  1034 jump *label467 equal :drawHeader:goal.1 null
  1035 draw image 42 237 :drawHeader:goal.1 32 0
  1036 jump *label361 always
  1037 label *label467
-    * label *label468
-    * label *label469
  1038 set :drawHeader:goal.1 .nextAddReco
-    * label *label472
  1039 jump *label473 equal :drawHeader:goal.1 null
  1040 draw image 42 237 :drawHeader:goal.1 32 0
  1041 label *label473
-    * label *label474
-    * label *label475
  1042 label *label361
  1043 label *label357
-    * label *label358
  1044 label *label348
  1045 label *label346
  1046 label *label344
 
  1065 print *tmp625
  1066 print ")"
  1067 draw print 174 272 @topRight
-    * label *label369
  1068 jump *label370 equal A¨SSJi-container31 null
  1069 sensor :drawHeader:count.1 A¨SSJi-container31 @scrap
  1070 op log10 *tmp629 :drawHeader:count.1
 
  1072 print "x"
  1073 print :drawHeader:count.1
  1074 draw print 174 255 @topRight
-    * label *label372
  1075 op mul *tmp632 7 :drawHeader:len
  1076 op sub *tmp633 154 *tmp632
  1077 draw image *tmp633 246 @scrap 12 0
 
  1081 print "x"
  1082 print :drawHeader:count.1
  1083 draw print 124 255 @topRight
-    * label *label373
  1084 op mul *tmp638 7 :drawHeader:len
  1085 op sub *tmp639 104 *tmp638
  1086 draw image *tmp639 246 @sand 12 0
 
  1094 print "x"
  1095 print :drawHeader:count.2
  1096 draw print 174 255 @topRight
-    * label *label376
  1097 op mul *tmp646 7 :drawHeader:len.1
  1098 op sub *tmp647 154 *tmp646
  1099 draw image *tmp647 246 @titanium 12 0
  1100 label *label374
-    * label *label375
  1101 jump *label377 equal .thoriumContainer false
  1102 sensor :drawHeader:count.3 .thoriumContainer @thorium
  1103 op log10 *tmp650 :drawHeader:count.3
 
  1105 print "x"
  1106 print :drawHeader:count.3
  1107 draw print 124 255 @topRight
-    * label *label379
  1108 op mul *tmp653 7 :drawHeader:len.2
  1109 op sub *tmp654 104 *tmp653
  1110 draw image *tmp654 246 @thorium 12 0
  1111 label *label377
-    * label *label378
  1112 label *label371
  1113 set :drawHeader:x.4 174
  1114 draw col %[white]
 
  1118 print "x"
  1119 print :drawUnitCount:count
  1120 draw print 174 229 @right
-    * label *label383
  1121 op sub :drawHeader:x.4 174 30
  1122 label *label381
-    * label *label382
-    * label *label380
  1123 set :drawUnitCount.1:count .monos
  1124 jump *label385 lessThanEq :drawUnitCount.1:count 0
  1125 op sub *tmp660 :drawHeader:x.4 20
 
  1127 print "x"
  1128 print :drawUnitCount.1:count
  1129 draw print :drawHeader:x.4 229 @right
-    * label *label387
  1130 op sub :drawHeader:x.4 :drawHeader:x.4 30
  1131 label *label385
-    * label *label386
-    * label *label384
  1132 set :drawUnitCount.2:count .flares
  1133 jump *label389 lessThanEq :drawUnitCount.2:count 0
  1134 op sub *tmp663 :drawHeader:x.4 20
 
  1136 print "x"
  1137 print :drawUnitCount.2:count
  1138 draw print :drawHeader:x.4 229 @right
-    * label *label391
  1139 label *label389
-    * label *label390
-    * label *label388
  1140 label *label334
-    * label *label332
  1141 return :drawHeader*retaddr
  1142 end
  1143 label *label5
  1144 draw reset
  1145 draw translate 90 105
  1146 draw scale 7.333333333333333 7.333333333333333
-    * label *label392
  1147 return :setupScale*retaddr
  1148 end
  1149 label *label6
 
  1161 read *tmp684 :drawBlock:cfg 5
  1162 op sub :unpackCfg:ind *tmp684 74
  1163 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label395
-    * label *label394
  1164 set :drawBlock:type :unpackCfg:type
  1165 set :drawBlock:x :unpackCfg:x
  1166 set :drawBlock:y :unpackCfg:y
 
  1191 op mul *tmp705 90 :drawBlock:rotation
  1192 draw image *tmp702 *tmp703 :drawBlock:type *tmp704 *tmp705
  1193 label *label399
-    * label *label400
  1194 label *label397
-    * label *label393
  1195 return :drawBlock*retaddr
  1196 end

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-10 instructions):
 
   165 set :drawMaterials:col :drawItemColor.1:col
   166 set :updateDisplay:y :drawItemColor.1:y
   167 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label74 greaterThan :drawMaterials:count 0
-    * jump *label57 always
+  168 jump *label57 lessThanEq :drawMaterials:count 0
   169 label *label74
   170 label *label65
   171 multijump *tmp107 0 0 (m:marker0)
 
   180 op sub :updateDisplay:y :updateDisplay:y 5
   181 label *label48
   182 label *label37
-    * jump *label79 notEqual .nextFactory null
-    * jump *label78 always
+  183 jump *label78 equal .nextFactory null
   184 label *label79
   185 draw col %[white]
   186 print "Air Factory"
 
   267 label *label85
   268 op sub :updateDisplay:y :updateDisplay:y 5
   269 label *label78
-    * jump *label117 notEqual .nextAddReco null
-    * jump *label116 always
+  270 jump *label116 equal .nextAddReco null
   271 label *label117
   272 draw col %[white]
   273 print "Reconstructor"
 
   333 label *label123
   334 op sub :updateDisplay:y :updateDisplay:y 5
   335 label *label116
-    * jump *label146 notEqual .nextMultiReco null
-    * jump *label145 always
+  336 jump *label145 equal .nextMultiReco null
   337 label *label146
   338 draw col %[white]
   339 op min :updateDisplay:y :updateDisplay:y 142
 
   417 op sub :updateDisplay:y :updateDisplay:y 5
   418 label *label145
   419 sensor *tmp413 @unit @dead
-    * jump *label182 equal *tmp413 false
-    * jump *label181 always
+  420 jump *label181 notEqual *tmp413 false
   421 label *label182
   422 draw col %[white]
   423 print "Builder"
 
   467 set :updateDisplay:y :drawItemColor.14:y
   468 label *label188
   469 label *label181
-    * jump *label206 greaterThanEq :updateDisplay:y 20
-    * jump *label205 always
+  470 jump *label205 lessThan :updateDisplay:y 20
   471 label *label206
-    * jump *label208 notEqual AJTJK-battery1 null
-    * jump *label205 always
+  472 jump *label205 equal AJTJK-battery1 null
   473 label *label208
   474 draw col %[white]
   475 print "Power"
 
   522 call *label4 *invalid :drawHeader*retval (m:*label239) (h:*label239)
   523 label *label239
   524 drawflush display1
-    * jump *label240 lessThanEq .lastTail :displayStorage:tail
-    * jump *label221 always
+  525 jump *label221 greaterThan .lastTail :displayStorage:tail
   526 label *label240
   527 read :displayStorage:accumulator bank2 .lastTail
   528 op add :displayStorage:x 25 .lastTail
 
   703 setaddr *tmp522 *label294
   704 label *label257
   705 jump *label295 notEqual .scrap false
-    * jump *label297 notEqual :displayBaseMap:cfg "AXPRJe-pulverizer27"
-    * jump *label259 always
+  706 jump *label259 equal :displayBaseMap:cfg "AXPRJe-pulverizer27"
   707 label *label297
   708 label *label295
   709 jump *label299 notEqual :displayBaseMap:counter :displayBaseMap:limit
 
   904 draw print *tmp576 *tmp577 @right
   905 drawflush display1
   906 sensor *tmp578 switch1 @enabled
-    * jump *label325 equal *tmp578 false
-    * jump *label318 always
+  907 jump *label318 notEqual *tmp578 false
   908 label *label325
   909 op sub :displayLog:position :displayLog:position 1
   910 jump *label403 greaterThanEq :displayLog:position :displayLog:stop

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   166 set :updateDisplay:y :drawItemColor.1:y
   167 op sub :drawMaterials:count :drawMaterials:count 1
   168 jump *label57 lessThanEq :drawMaterials:count 0
-    * label *label74
   169 label *label65
   170 multijump *tmp107 0 0 (m:marker0)
   171 multilabel *label64 (m:marker0)
 
   180 label *label48
   181 label *label37
   182 jump *label78 equal .nextFactory null
-    * label *label79
   183 draw col %[white]
   184 print "Air Factory"
   185 draw print 22 :updateDisplay:y @bottomLeft
 
   266 op sub :updateDisplay:y :updateDisplay:y 5
   267 label *label78
   268 jump *label116 equal .nextAddReco null
-    * label *label117
   269 draw col %[white]
   270 print "Reconstructor"
   271 draw print 22 :updateDisplay:y @bottomLeft
 
   331 op sub :updateDisplay:y :updateDisplay:y 5
   332 label *label116
   333 jump *label145 equal .nextMultiReco null
-    * label *label146
   334 draw col %[white]
   335 op min :updateDisplay:y :updateDisplay:y 142
   336 print "Reconstructor"
 
   414 label *label145
   415 sensor *tmp413 @unit @dead
   416 jump *label181 notEqual *tmp413 false
-    * label *label182
   417 draw col %[white]
   418 print "Builder"
   419 draw print 22 :updateDisplay:y @bottomLeft
 
   463 label *label188
   464 label *label181
   465 jump *label205 lessThan :updateDisplay:y 20
-    * label *label206
   466 jump *label205 equal AJTJK-battery1 null
-    * label *label208
   467 draw col %[white]
   468 print "Power"
   469 draw print 22 20 @bottomLeft
 
   516 label *label239
   517 drawflush display1
   518 jump *label221 greaterThan .lastTail :displayStorage:tail
-    * label *label240
   519 read :displayStorage:accumulator bank2 .lastTail
   520 op add :displayStorage:x 25 .lastTail
   521 op sub :displayStorage:y.1 190 8
 
   696 label *label257
   697 jump *label295 notEqual .scrap false
   698 jump *label259 equal :displayBaseMap:cfg "AXPRJe-pulverizer27"
-    * label *label297
   699 label *label295
   700 jump *label299 notEqual :displayBaseMap:counter :displayBaseMap:limit
   701 setaddr :drawHeader*retaddr *label301 (h:*label301)
 
   896 drawflush display1
   897 sensor *tmp578 switch1 @enabled
   898 jump *label318 notEqual *tmp578 false
-    * label *label325
   899 op sub :displayLog:position :displayLog:position 1
   900 jump *label403 greaterThanEq :displayLog:position :displayLog:stop
   901 label *label318

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
    53 label *label30
    54 drawflush display1
    55 op add .animation .animation 1
-    * jump *label23 always
+   56 jump *label21 always
    57 label *label22
    58 draw clear 0 0 32
    59 setaddr :drawHeader*retaddr *label34 (h:*label34)
 
   205 print 15
   206 draw print 175 *tmp165 @right
   207 op sub :updateDisplay:y :drawTitleRow.2:y 30
-    * jump *label87 always
+  208 jump *label85 always
   209 label *label86
   210 sensor *tmp169 A¾BFLW-air-factory13 @lead
   211 op mul *tmp175 *tmp169 8.4
 
   515 call *label4 *invalid :drawHeader*retval (m:*label239) (h:*label239)
   516 label *label239
   517 drawflush display1
-    * jump *label221 greaterThan .lastTail :displayStorage:tail
+  518 jump *label220 greaterThan .lastTail :displayStorage:tail
   519 read :displayStorage:accumulator bank2 .lastTail
   520 op add :displayStorage:x 25 .lastTail
   521 op sub :displayStorage:y.1 190 8
 
   695 setaddr *tmp522 *label294
   696 label *label257
   697 jump *label295 notEqual .scrap false
-    * jump *label259 equal :displayBaseMap:cfg "AXPRJe-pulverizer27"
+  698 jump *label248 equal :displayBaseMap:cfg "AXPRJe-pulverizer27"
   699 label *label295
   700 jump *label299 notEqual :displayBaseMap:counter :displayBaseMap:limit
   701 setaddr :drawHeader*retaddr *label301 (h:*label301)
 
   827 sensor *tmp534 switch1 @enabled
   828 jump *label306 equal *tmp534 false
   829 draw clear 0 0 32
-    * jump *label259 always
+  830 jump *label248 always
   831 label *label306
   832 drawflush display1
   833 multijump *tmp522 0 0 (m:marker2)
 
   930 printflush message1
   931 label *label328
   932 sensor .pageSwitched switch1 @enabled
-    * jump *label330 equal .pageSwitched false
+  933 jump *label15 equal .pageSwitched false
   934 control enabled switch1 false
   935 op add *tmp588 .page 1
   936 op mod .page *tmp588 .numPages
 
   966 draw print 26 71 @center
   967 draw col %[white]
   968 draw reset
-    * jump *label334 always
+  969 return :drawHeader*retaddr
   970 label *label333
   971 draw col %[gold]
   972 print "Goal"
 
   999 op add :drawHeader:x :drawHeader:x 30
  1000 label *label448
  1001 set :drawHeader:goal .nextAddReco
-    * jump *label454 equal :drawHeader:goal null
+ 1002 jump *label348 equal :drawHeader:goal null
  1003 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  1004 label *label454
  1005 jump *label348 always
 
  1158 op mul *tmp699 2 :drawBlock:size
  1159 op mul *tmp700 90 :drawBlock:rotation
  1160 draw image *tmp697 *tmp698 :drawBlock:type *tmp699 *tmp700
-    * jump *label397 always
+ 1161 return :drawBlock*retaddr
  1162 label *label396
  1163 jump *label399 equal .pageSwitched false
  1164 draw color 128 255 128 128

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-6 instructions):
 
   240 draw print 175 *tmp211 @right
   241 op sub :drawItemColor.4:y :updateDisplay:y 45
   242 set :updateDisplay:y :drawItemColor.4:y
-    * label *label87
   243 jump *label85 always
   244 label *label84
   245 op idiv *tmp216 :drawAirFactory:progress 0.01
 
   487 draw print 175 12 @right
   488 label *label205
   489 drawflush display1
-    * label *label23
   490 jump *label21 always
   491 label *label20
   492 jump *label219 notEqual .page 1
 
   530 jump *label402 lessThan :displayStorage:i 9
   531 drawflush display1
   532 op add .lastTail .lastTail 1
-    * label *label221
   533 jump *label220 always
   534 label *label219
   535 jump *label247 notEqual .page 2
 
   829 drawflush display1
   830 multijump *tmp522 0 0 (m:marker2)
   831 multilabel *label294 (m:marker2)
-    * label *label259
   832 jump *label248 always
   833 label *label247
   834 op sub :displayLog:page .page 3
 
   933 drawflush null
   934 draw reset
   935 draw clear 0 0 32
-    * label *label330
   936 jump *label15 always
-    * wait 1e12
-    * jump *label9 always
-    * end
   937 label *label4
   938 draw reset
   939 draw color 0 0 32 255
 
   993 set :drawHeader:goal .nextAddReco
   994 jump *label348 equal :drawHeader:goal null
   995 draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * label *label454
   996 jump *label348 always
   997 label *label347
   998 jump *label357 notEqual :drawHeader:count 1
 
  1108 print :drawUnitCount.2:count
  1109 draw print :drawHeader:x.4 229 @right
  1110 label *label389
-    * label *label334
  1111 return :drawHeader*retaddr
-    * end
  1112 label *label5
  1113 draw reset
  1114 draw translate 90 105
  1115 draw scale 7.333333333333333 7.333333333333333
  1116 return :setupScale*retaddr
-    * end
  1117 label *label6
  1118 read *tmp669 :drawBlock:cfg 1
  1119 op sub *tmp670 *tmp669 74
 
  1159 op mul *tmp705 90 :drawBlock:rotation
  1160 draw image *tmp702 *tmp703 :drawBlock:type *tmp704 *tmp705
  1161 label *label399
-    * label *label397
  1162 return :drawBlock*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    11 set .animation -15
    12 set .pageSwitched false
    13 set *signature "0:v1"
-    * label *label9
    14 label *label12
    15 ubind @poly
    16 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    13 set *signature "0:v1"
    14 label *label12
    15 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
+   16 ulocate building core false @copper 0 0 0 .core
    17 jump *label12 equal .core null
    18 printflush null
    19 drawflush null

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
   901 label *label21
   902 label *label18
   903 jump *label327 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  904 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   905 printflush message1
   906 jump *label328 always
   907 label *label327
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  908 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  909 format .nextBlock
+  910 format .status1
+  911 format .status2
+  912 format .item2
+  913 format .block2
+  914 format .status3
   915 printflush message1
   916 label *label328
   917 sensor .pageSwitched switch1 @enabled
 
  1011 op mod :drawHeader:s.1 :drawHeader:t.1 60
  1012 select *tmp620 lessThan :drawHeader:s.1 10 "0" ""
  1013 print :drawHeader:m.1
-    * print ":"
-    * print *tmp620
-    * print :drawHeader:s.1
+ 1014 print ":{0}{0} (x{0}.{0})"
+ 1015 format *tmp620
+ 1016 format :drawHeader:s.1
  1017 op mul *tmp621 10 :drawHeader:t.1
  1018 op div *tmp622 *tmp621 :drawHeader:tt
  1019 op round :drawHeader:ratio *tmp622
  1020 op idiv *tmp624 :drawHeader:ratio 10
  1021 op mod *tmp625 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp624
-    * print "."
-    * print *tmp625
-    * print ")"
+ 1022 format *tmp624
+ 1023 format *tmp625
  1024 draw print 174 272 @topRight
  1025 jump *label370 equal A¨SSJi-container31 null
  1026 sensor :drawHeader:count.1 A¨SSJi-container31 @scrap

Final code before resolving virtual instructions:

        label *label8                                                Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp39 processor3 "*signature"                          ...
    1:  jump *label8 notEqual *tmp39 "3290b8c661787058:v1"           ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 4                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote var
    6:  set .monos 0                                                 ...
    7:  set .flares 0                                                ...
    8:  set .polys 1                                                 ...
    9:  set .megas 0                                                 ...
   10:  set .animation -15                                           Display.mnd: var animation = -15;
   11:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   12:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label12                                               Display.mnd: do
   13:  ubind @poly                                                  Display.mnd: ubind(@poly);
   14:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   15:  jump *label12 equal .core null                               Display.mnd: do
   16:  printflush null                                              Display.mnd: printflush(null);
   17:  drawflush null                                               Display.mnd: drawflush(null);
        label *label15                                               Display.mnd: while true do
   18:  sensor *tmp45 processor2 @bufferSize                         Display.mnd: if display.@bufferSize < 200 then
   19:  jump *label18 greaterThanEq *tmp45 200                       ...
   20:  jump *label20 notEqual .page 0                               Display.mnd: if page == 0 then
   21:  jump *label22 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   22:  jump *label25 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   23:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   24:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   25:  jump *label26 always 0 0                                     Display.mnd: if animation < 0 then
        label *label25                                               ...
   26:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   27:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label26                                               Display.mnd: if animation < 0 then
   28:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   29:  op div *tmp54 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   30:  op min *tmp55 *tmp54 1                                       ...
   31:  op max :animate:ratio 0 *tmp55                               ...
   32:  op sub *tmp58 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   33:  op mul *tmp59 *tmp58 42                                      ...
   34:  op mul *tmp60 :animate:ratio 90                              ...
   35:  op add *tmp57 *tmp59 *tmp60                                  ...
   36:  op mul *tmp64 *tmp58 237                                     ...
   37:  op mul *tmp65 :animate:ratio 120                             ...
   38:  op add *tmp62 *tmp64 *tmp65                                  ...
   39:  op mul *tmp69 *tmp58 32                                      ...
   40:  op mul *tmp70 :animate:ratio 168                             ...
   41:  op add *tmp67 *tmp69 *tmp70                                  ...
   42:  draw image *tmp57 *tmp62 @mega *tmp67 0 0                    Display.mnd: image(x, y, @mega, size, 0);
   43:  jump *label30 notEqual :animate:ratio 1                      Display.mnd: if ratio == 1 then drawHeader(); end;
   44:  setaddr :drawHeader*retaddr *label32                         ...
   45:  call *label4 *invalid :drawHeader*retval                     ...
        label *label32                                               ...
        label *label30                                               ...
   46:  drawflush display1                                           Display.mnd: drawflush(display1);
   47:  op add .animation .animation 1                               Display.mnd: animate();
   48:  jump *label21 always 0 0                                     Display.mnd: if megas > 0 then
        label *label22                                               ...
   49:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   50:  setaddr :drawHeader*retaddr *label34                         Display.mnd: drawHeader();
   51:  call *label4 *invalid :drawHeader*retval                     ...
        label *label34                                               ...
   52:  set :updateDisplay:y 201                                     Display.mnd: var y = HEADER2_Y;
   53:  set :drawMaterials:col 0                                     Display.mnd: var count, col = 0;
   54:  op equal *tmp75 .nextBlock @ore-thorium                      Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
   55:  op equal *tmp76 .nextBlock @ore-titanium                     ...
   56:  op or *tmp77 *tmp75 *tmp76                                   ...
   57:  jump *label36 equal *tmp77 false                             ...
   58:  print "Locating ore..."                                      Display.mnd: print(text);
   59:  draw print 22 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   60:  print "Locating ore..."                                      Display.mnd: print(text);
   61:  draw print 23 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   62:  set :drawItem:item .nextBlock                                Display.mnd: drawItem(in 0, in out y, 1, nextBlock, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
   63:  read :drawItem:current processor3 ".mapProgress"             ...
   64:  read :drawItem:target processor3 ".mapTotal"                 ...
   65:  op mul *tmp83 126 :drawItem:current                          Display.mnd: var length = min(barLength, barLength * current / target);
   66:  op div *tmp84 *tmp83 :drawItem:target                        ...
   67:  op min :drawItemColor:length 126 *tmp84                      ...
   68:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   69:  draw image 11 191 :drawItem:item 16 0 0                      Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   70:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
   71:  draw rect 22 186 :drawItemColor:length 10 0 0                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   72:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
   73:  draw lineRect 22 186 126 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   74:  print "x"                                                    Display.mnd: print(text);
   75:  read *tmp98 processor3 ".mapSpots"                           ...
   76:  print *tmp98                                                 ...
   77:  draw print 174 193 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
   78:  print "x"                                                    Display.mnd: print(text);
   79:  read *tmp100 processor3 ".mapSpots"                          ...
   80:  print *tmp100                                                ...
   81:  draw print 175 193 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
   82:  op sub :updateDisplay:y 171 35                               Display.mnd: y -= 2 * ROW_HEIGHT + SEPARATOR_Y;
   83:  jump *label37 always 0 0                                     Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
        label *label36                                               ...
   84:  jump *label48 equal .nextBlock null                          Display.mnd: elsif nextBlock != null then
   85:  set :drawMaterials:count .totalTargets                       Display.mnd: count = totalTargets;
   86:  print "Materials"                                            Display.mnd: print(text);
   87:  draw print 22 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   88:  print "Materials"                                            Display.mnd: print(text);
   89:  draw print 23 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   90:  set :updateDisplay:y 186                                     Display.mnd: drawTitleRow(in out y, @bottomLeft, "Materials");
   91:  jump *label53 equal :drawMaterials:count false               Display.mnd: if count then
   92:  set :drawMaterials:item @copper                              Display.mnd: for var item, target in
   93:  set :drawMaterials:target .targetCopper                      ...
   94:  setaddr *tmp107 *label58                                     ...
   95:  jump *label55 always 0 0                                     ...
        multilabel *label58                                          ...
   96:  set :drawMaterials:item @lead                                ...
   97:  set :drawMaterials:target .targetLead                        ...
   98:  setaddr *tmp107 *label59                                     ...
   99:  jump *label55 always 0 0                                     ...
        multilabel *label59                                          ...
  100:  set :drawMaterials:item @graphite                            ...
  101:  set :drawMaterials:target .targetGraphite                    ...
  102:  setaddr *tmp107 *label60                                     ...
  103:  jump *label55 always 0 0                                     ...
        multilabel *label60                                          ...
  104:  set :drawMaterials:item @silicon                             ...
  105:  set :drawMaterials:target .targetSilicon                     ...
  106:  setaddr *tmp107 *label61                                     ...
  107:  jump *label55 always 0 0                                     ...
        multilabel *label61                                          ...
  108:  set :drawMaterials:item @titanium                            ...
  109:  set :drawMaterials:target .targetTitanium                    ...
  110:  setaddr *tmp107 *label62                                     ...
  111:  jump *label55 always 0 0                                     ...
        multilabel *label62                                          ...
  112:  set :drawMaterials:item @metaglass                           ...
  113:  set :drawMaterials:target .targetMetaglass                   ...
  114:  setaddr *tmp107 *label63                                     ...
  115:  jump *label55 always 0 0                                     ...
        multilabel *label63                                          ...
  116:  set :drawMaterials:item @thorium                             ...
  117:  set :drawMaterials:target .targetThorium                     ...
  118:  setaddr *tmp107 *label64                                     ...
        label *label55                                               ...
  119:  jump *label65 lessThanEq :drawMaterials:target 0             Display.mnd: if target > 0 then
  120:  sensor *tmp110 .core :drawMaterials:item                     Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  121:  set :drawItemColor.1:y :updateDisplay:y                      Display.mnd: drawItemColor(%008000FF, %00FF00FF, in out col, in out y, columns, item, current, target, text);
  122:  op mul *tmp115 126 *tmp110                                   Display.mnd: var length = min(barLength, barLength * current / target);
  123:  op div *tmp116 *tmp115 :drawMaterials:target                 ...
  124:  op min :drawItemColor.1:length 126 *tmp116                   ...
  125:  op mul *tmp119 :drawMaterials:col 88                         Display.mnd: var iconX = ICON_X + col * 176 / 2;
  126:  op add :drawItemColor.1:iconX 11 *tmp119                     ...
  127:  op add :drawItemColor.1:barX 22 *tmp119                      Display.mnd: var barX = BAR_X + col * 176 / 2;
  128:  op add :drawItemColor.1:textX 174 *tmp119                    Display.mnd: var textX = textEnd + col * 176 / 2;
  129:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  130:  op add *tmp127 :updateDisplay:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  131:  draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:ite ...
  132:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  133:  draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemCo Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  134:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  135:  draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10  Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  136:  op add *tmp129 :updateDisplay:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  137:  print :drawMaterials:target                                  Display.mnd: print(text);
  138:  draw print :drawItemColor.1:textX *tmp129 @right 0 0 0       Display.mnd: drawPrint(x, y, alignment);
  139:  op add :drawText.7:x *tmp119 175                             Display.mnd: drawText(x + 1, y, alignment, text);
  140:  print :drawMaterials:target                                  Display.mnd: print(text);
  141:  draw print :drawText.7:x *tmp129 @right 0 0 0                Display.mnd: drawPrint(x, y, alignment);
  142:  op add :drawItemColor.1:col :drawMaterials:col 1             Display.mnd: if ++col >= columns then
  143:  jump *label72 lessThan :drawItemColor.1:col 1                ...
  144:  set :drawItemColor.1:col 0                                   Display.mnd: col = 0;
  145:  op sub :drawItemColor.1:y :updateDisplay:y 15                Display.mnd: y -= ROW_HEIGHT;
        label *label72                                               Display.mnd: if ++col >= columns then
  146:  set :drawMaterials:col :drawItemColor.1:col                  Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  147:  set :updateDisplay:y :drawItemColor.1:y                      ...
  148:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  149:  jump *label57 lessThanEq :drawMaterials:count 0              ...
        label *label65                                               Display.mnd: if target > 0 then
  150:  multijump *tmp107 0 0                                        Display.mnd: for var item, target in
        multilabel *label64                                          ...
        label *label57                                               ...
        label *label53                                               Display.mnd: if count then
  151:  jump *label76 greaterThanEq .totalTargets 3                  Display.mnd: if totalTargets < 3 then
  152:  op sub *tmp137 3 .totalTargets                               Display.mnd: y -= (3 - totalTargets) * ROW_HEIGHT;
  153:  op mul *tmp138 *tmp137 15                                    ...
  154:  op sub :updateDisplay:y :updateDisplay:y *tmp138             ...
        label *label76                                               Display.mnd: if totalTargets < 3 then
  155:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label48                                               Display.mnd: elsif nextBlock != null then
        label *label37                                               Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
  156:  jump *label78 equal .nextFactory null                        Display.mnd: if nextFactory == null then return; end;
  157:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  158:  print "Air Factory"                                          Display.mnd: print(text);
  159:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  160:  print "Air Factory"                                          Display.mnd: print(text);
  161:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  162:  op sub :drawTitleRow.2:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  163:  sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progre Display.mnd: var progress = air_factory.@progress;
  164:  jump *label84 notEqual :drawAirFactory:progress 0            Display.mnd: if progress == 0 then
  165:  jump *label86 notEqual .nextFactory @flare                   Display.mnd: if nextFactory == @flare then
  166:  sensor *tmp146 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 15, 15);
  167:  op mul *tmp152 *tmp146 8.4                                   Display.mnd: var length = min(barLength, barLength * current / target);
  168:  op min :drawItemColor.2:length 126 *tmp152                   ...
  169:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  170:  op sub *tmp163 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  171:  draw image 11 *tmp163 @silicon 16 0 0                        ...
  172:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  173:  draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  174:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  175:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  176:  op sub *tmp165 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  177:  print 15                                                     Display.mnd: print(text);
  178:  draw print 174 *tmp165 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  179:  print 15                                                     Display.mnd: print(text);
  180:  draw print 175 *tmp165 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  181:  op sub :updateDisplay:y :drawTitleRow.2:y 30                 Display.mnd: y -= ROW_HEIGHT;
  182:  jump *label85 always 0 0                                     Display.mnd: if nextFactory == @flare then
        label *label86                                               ...
  183:  sensor *tmp169 A¾BFLW-air-factory13 @lead                    Display.mnd: drawItem(in 0, in out y, 1, @lead, air_factory.@lead, 15, 15);
  184:  op mul *tmp175 *tmp169 8.4                                   Display.mnd: var length = min(barLength, barLength * current / target);
  185:  op min :drawItemColor.3:length 126 *tmp175                   ...
  186:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  187:  op sub *tmp186 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  188:  draw image 11 *tmp186 @lead 16 0 0                           ...
  189:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  190:  draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  191:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  192:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  193:  op sub *tmp188 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  194:  print 15                                                     Display.mnd: print(text);
  195:  draw print 174 *tmp188 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  196:  print 15                                                     Display.mnd: print(text);
  197:  draw print 175 *tmp188 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  198:  op sub :drawItemColor.3:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  199:  sensor *tmp192 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 30, 30);
  200:  op mul *tmp198 *tmp192 4.2                                   Display.mnd: var length = min(barLength, barLength * current / target);
  201:  op min :drawItemColor.4:length 126 *tmp198                   ...
  202:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  203:  op sub *tmp209 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  204:  draw image 11 *tmp209 @silicon 16 0 0                        ...
  205:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  206:  draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  207:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  208:  draw lineRect 22 :drawItemColor.3:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  209:  op sub *tmp211 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  210:  print 30                                                     Display.mnd: print(text);
  211:  draw print 174 *tmp211 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  212:  print 30                                                     Display.mnd: print(text);
  213:  draw print 175 *tmp211 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  214:  op sub :drawItemColor.4:y :updateDisplay:y 45                Display.mnd: y -= ROW_HEIGHT;
  215:  set :updateDisplay:y :drawItemColor.4:y                      Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 30, 30);
  216:  jump *label85 always 0 0                                     Display.mnd: if progress == 0 then
        label *label84                                               ...
  217:  op idiv *tmp216 :drawAirFactory:progress 0.01                Display.mnd: drawItem(in 0, in out y, 1, nextFactory, progress, 1.0, floor(100 * progress), "%");
  218:  set :drawItem.5:item .nextFactory                            ...
  219:  op mul *tmp221 126 :drawAirFactory:progress                  Display.mnd: var length = min(barLength, barLength * current / target);
  220:  op min :drawItemColor.5:length 126 *tmp221                   ...
  221:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  222:  op sub *tmp233 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  223:  draw image 11 *tmp233 :drawItem.5:item 16 0 0                ...
  224:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  225:  draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  226:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  227:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  228:  op sub *tmp235 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  229:  print *tmp216                                                Display.mnd: print(text);
  230:  print "%"                                                    ...
  231:  draw print 174 *tmp235 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  232:  print *tmp216                                                Display.mnd: print(text);
  233:  print "%"                                                    ...
  234:  draw print 175 *tmp235 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  235:  op sub :updateDisplay:y :drawTitleRow.2:y 30                 Display.mnd: y -= ROW_HEIGHT;
        label *label85                                               Display.mnd: if progress == 0 then
  236:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label78                                               Display.mnd: drawAirFactory(ref y);
  237:  jump *label116 equal .nextAddReco null                       Display.mnd: if nextAddReco == null then return; end;
  238:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  239:  print "Reconstructor"                                        Display.mnd: print(text);
  240:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  241:  print "Reconstructor"                                        Display.mnd: print(text);
  242:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  243:  op sub :drawTitleRow.3:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  244:  sensor :drawAddReco:progress AÀF@Lc-additive-reconstructor25 Display.mnd: var progress = additive_rec.@progress;
  245:  jump *label122 notEqual :drawAddReco:progress 0              Display.mnd: if progress == 0 then
  246:  sensor *tmp244 AÀF@Lc-additive-reconstructor25 @graphite     Display.mnd: drawItem(in 0, in out y, 1, @graphite, additive_rec.@graphite, 40, 40);
  247:  op mul *tmp250 *tmp244 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  248:  op min :drawItemColor.6:length 126 *tmp250                   ...
  249:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  250:  op sub *tmp261 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  251:  draw image 11 *tmp261 @graphite 16 0 0                       ...
  252:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  253:  draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  254:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  255:  draw lineRect 22 :drawTitleRow.3:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  256:  op sub *tmp263 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  257:  print 40                                                     Display.mnd: print(text);
  258:  draw print 174 *tmp263 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  259:  print 40                                                     Display.mnd: print(text);
  260:  draw print 175 *tmp263 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  261:  op sub :drawItemColor.6:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  262:  sensor *tmp267 AÀF@Lc-additive-reconstructor25 @silicon      Display.mnd: drawItem(in 0, in out y, 1, @silicon, additive_rec.@silicon, 40, 40);
  263:  op mul *tmp273 *tmp267 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  264:  op min :drawItemColor.7:length 126 *tmp273                   ...
  265:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  266:  op sub *tmp284 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  267:  draw image 11 *tmp284 @silicon 16 0 0                        ...
  268:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  269:  draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  270:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  271:  draw lineRect 22 :drawItemColor.6:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  272:  op sub *tmp286 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  273:  print 40                                                     Display.mnd: print(text);
  274:  draw print 174 *tmp286 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  275:  print 40                                                     Display.mnd: print(text);
  276:  draw print 175 *tmp286 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  277:  op sub :drawItemColor.7:y :updateDisplay:y 45                Display.mnd: y -= ROW_HEIGHT;
  278:  set :updateDisplay:y :drawItemColor.7:y                      Display.mnd: drawItem(in 0, in out y, 1, @silicon, additive_rec.@silicon, 40, 40);
  279:  jump *label123 always 0 0                                    Display.mnd: if progress == 0 then
        label *label122                                              ...
  280:  op idiv *tmp291 :drawAddReco:progress 0.01                   Display.mnd: drawItem(in 0, in out y, 1, @poly, progress, 1.0, floor(100 * progress), "%");
  281:  op mul *tmp296 126 :drawAddReco:progress                     Display.mnd: var length = min(barLength, barLength * current / target);
  282:  op min :drawItemColor.8:length 126 *tmp296                   ...
  283:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  284:  op sub *tmp308 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  285:  draw image 11 *tmp308 @poly 16 0 0                           ...
  286:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  287:  draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  288:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  289:  draw lineRect 22 :drawTitleRow.3:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  290:  op sub *tmp310 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  291:  print *tmp291                                                Display.mnd: print(text);
  292:  print "%"                                                    ...
  293:  draw print 174 *tmp310 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  294:  print *tmp291                                                Display.mnd: print(text);
  295:  print "%"                                                    ...
  296:  draw print 175 *tmp310 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  297:  op sub :updateDisplay:y :drawTitleRow.3:y 30                 Display.mnd: y -= ROW_HEIGHT;
        label *label123                                              Display.mnd: if progress == 0 then
  298:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label116                                              Display.mnd: drawAddReco(ref y);
  299:  jump *label145 equal .nextMultiReco null                     Display.mnd: if nextMultiReco == null then return; end;
  300:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  301:  op min :updateDisplay:y :updateDisplay:y 142                 Display.mnd: y = min(y, HEADER1_Y1 - 5 * ROW_HEIGHT);
  302:  print "Reconstructor"                                        Display.mnd: print(text);
  303:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  304:  print "Reconstructor"                                        Display.mnd: print(text);
  305:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  306:  op sub :drawTitleRow.4:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  307:  sensor :drawMultiReco:progress AÁNBJd-multiplicative-reconst Display.mnd: var progress = multiplicative_rec.@progress;
  308:  jump *label151 notEqual :drawMultiReco:progress 0            Display.mnd: if progress == 0 then
  309:  sensor *tmp320 AÁNBJd-multiplicative-reconstructor26 @metagl Display.mnd: drawItem(in 0, in out y, 1, @metaglass, multiplicative_rec.@metaglass, 40, 40);
  310:  op mul *tmp326 *tmp320 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  311:  op min :drawItemColor.9:length 126 *tmp326                   ...
  312:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  313:  op sub *tmp337 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  314:  draw image 11 *tmp337 @metaglass 16 0 0                      ...
  315:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  316:  draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  317:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  318:  draw lineRect 22 :drawTitleRow.4:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  319:  op sub *tmp339 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  320:  print 40                                                     Display.mnd: print(text);
  321:  draw print 174 *tmp339 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  322:  print 40                                                     Display.mnd: print(text);
  323:  draw print 175 *tmp339 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  324:  op sub :drawItemColor.9:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  325:  sensor *tmp343 AÁNBJd-multiplicative-reconstructor26 @titani Display.mnd: drawItem(in 0, in out y, 1, @titanium, multiplicative_rec.@titanium, 80, 80);
  326:  op div *tmp349 *tmp343 0.6349206349206349                    Display.mnd: var length = min(barLength, barLength * current / target);
  327:  op min :drawItemColor.10:length 126 *tmp349                  ...
  328:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  329:  op sub *tmp360 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  330:  draw image 11 *tmp360 @titanium 16 0 0                       ...
  331:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  332:  draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  333:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  334:  draw lineRect 22 :drawItemColor.9:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  335:  op sub *tmp362 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  336:  print 80                                                     Display.mnd: print(text);
  337:  draw print 174 *tmp362 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  338:  print 80                                                     Display.mnd: print(text);
  339:  draw print 175 *tmp362 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  340:  op sub :drawItemColor.10:y :updateDisplay:y 45               Display.mnd: y -= ROW_HEIGHT;
  341:  sensor *tmp366 AÁNBJd-multiplicative-reconstructor26 @silico Display.mnd: drawItem(in 0, in out y, 1, @silicon, multiplicative_rec.@silicon, 130, 130);
  342:  op div *tmp372 *tmp366 1.0317460317460319                    Display.mnd: var length = min(barLength, barLength * current / target);
  343:  op min :drawItemColor.11:length 126 *tmp372                  ...
  344:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  345:  op sub *tmp383 :updateDisplay:y 40                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  346:  draw image 11 *tmp383 @silicon 16 0 0                        ...
  347:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  348:  draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  349:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  350:  draw lineRect 22 :drawItemColor.10:y 126 10 0 0              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  351:  op sub *tmp385 :updateDisplay:y 38                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  352:  print 130                                                    Display.mnd: print(text);
  353:  draw print 174 *tmp385 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  354:  print 130                                                    Display.mnd: print(text);
  355:  draw print 175 *tmp385 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  356:  op sub :drawItemColor.11:y :updateDisplay:y 60               Display.mnd: y -= ROW_HEIGHT;
  357:  set :updateDisplay:y :drawItemColor.11:y                     Display.mnd: drawItem(in 0, in out y, 1, @silicon, multiplicative_rec.@silicon, 130, 130);
  358:  jump *label152 always 0 0                                    Display.mnd: if progress == 0 then
        label *label151                                              ...
  359:  op idiv *tmp390 :drawMultiReco:progress 0.01                 Display.mnd: drawItem(in 0, in out y, 1, @mega, progress, 1.0, floor(100 * progress), "%");
  360:  op mul *tmp395 126 :drawMultiReco:progress                   Display.mnd: var length = min(barLength, barLength * current / target);
  361:  op min :drawItemColor.12:length 126 *tmp395                  ...
  362:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  363:  op sub *tmp407 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  364:  draw image 11 *tmp407 @mega 16 0 0                           ...
  365:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  366:  draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  367:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  368:  draw lineRect 22 :drawTitleRow.4:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  369:  op sub *tmp409 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  370:  print *tmp390                                                Display.mnd: print(text);
  371:  print "%"                                                    ...
  372:  draw print 174 *tmp409 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  373:  print *tmp390                                                Display.mnd: print(text);
  374:  print "%"                                                    ...
  375:  draw print 175 *tmp409 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  376:  op sub :updateDisplay:y :drawTitleRow.4:y 45                 Display.mnd: y -= 2 * ROW_HEIGHT;
        label *label152                                              Display.mnd: if progress == 0 then
  377:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label145                                              Display.mnd: drawMultiReco(ref y);
  378:  sensor *tmp413 @unit @dead                                   Display.mnd: if @unit.@dead then return; end;
  379:  jump *label181 notEqual *tmp413 false                        ...
  380:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  381:  print "Builder"                                              Display.mnd: print(text);
  382:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  383:  print "Builder"                                              Display.mnd: print(text);
  384:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  385:  op sub :drawTitleRow.5:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  386:  jump *label187 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  387:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  388:  op sub *tmp433 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  389:  draw image 11 *tmp433 @poly 16 0 0                           ...
  390:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  391:  draw rect 22 :drawTitleRow.5:y 0 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  392:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  393:  draw lineRect 22 :drawTitleRow.5:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  394:  op sub *tmp435 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  395:  print .transportTarget                                       Display.mnd: print(text);
  396:  draw print 174 *tmp435 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  397:  print .transportTarget                                       Display.mnd: print(text);
  398:  draw print 175 *tmp435 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  399:  op sub :drawItemColor.13:y :updateDisplay:y 30               Display.mnd: y -= ROW_HEIGHT;
  400:  set :updateDisplay:y :drawItemColor.13:y                     Display.mnd: drawUnit(@poly, 0, in out y);
  401:  jump *label188 always 0 0                                    Display.mnd: if transportItem == null then
        label *label187                                              ...
  402:  sensor :drawBuilder:unitItem @unit @firstItem                Display.mnd: var unitItem = @unit.@firstItem;
  403:  sensor *tmp442 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in out y);
  404:  op equal *tmp443 :drawBuilder:unitItem .transportItem        ...
  405:  op mul *tmp444 *tmp442 *tmp443                               ...
  406:  set :drawUnit.1:item .transportItem                          ...
  407:  set :drawItem.14:target .transportTarget                     Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  408:  op mul *tmp449 126 *tmp444                                   Display.mnd: var length = min(barLength, barLength * current / target);
  409:  op div *tmp450 *tmp449 :drawItem.14:target                   ...
  410:  op min :drawItemColor.14:length 126 *tmp450                  ...
  411:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  412:  op sub *tmp461 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  413:  draw image 11 *tmp461 :drawUnit.1:item 16 0 0                ...
  414:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  415:  draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  416:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  417:  draw lineRect 22 :drawTitleRow.5:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  418:  op sub *tmp463 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  419:  print .transportTarget                                       Display.mnd: print(text);
  420:  draw print 174 *tmp463 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  421:  print .transportTarget                                       Display.mnd: print(text);
  422:  draw print 175 *tmp463 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  423:  op sub :drawItemColor.14:y :updateDisplay:y 30               Display.mnd: y -= ROW_HEIGHT;
  424:  set :updateDisplay:y :drawItemColor.14:y                     Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in out y);
        label *label188                                              Display.mnd: if transportItem == null then
        label *label181                                              Display.mnd: drawBuilder(ref y);
  425:  jump *label205 lessThan :updateDisplay:y 20                  Display.mnd: if y < ROW_HEIGHT + SEPARATOR_Y then return; end;
  426:  jump *label205 equal AJTJK-battery1 null                    Display.mnd: if battery1 == null then return; end;
  427:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  428:  print "Power"                                                Display.mnd: print(text);
  429:  draw print 22 20 @bottomLeft 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  430:  print "Power"                                                Display.mnd: print(text);
  431:  draw print 23 20 @bottomLeft 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  432:  sensor :drawPower:power AJTJK-battery1 @totalPower          Display.mnd: var power = battery1.@totalPower;
  433:  op mul *tmp474 :drawPower:power 100                          Display.mnd: drawItemColor(%808000FF, %FFFF00FF, in 0, in out y, 1, @battery, power, 4000, floor(power * 100 / 4000), "%");
  434:  op idiv *tmp476 *tmp474 4000                                 ...
  435:  op mul *tmp482 :drawPower:power 0.0315                       Display.mnd: var length = min(barLength, barLength * current / target);
  436:  op min :drawItemColor.15:length 126 *tmp482                  ...
  437:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  438:  draw image 11 10 @battery 16 0 0                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  439:  draw col %808000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  440:  draw rect 22 5 :drawItemColor.15:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  441:  draw col %FFFF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  442:  draw lineRect 22 5 126 10 0 0                                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  443:  print *tmp476                                                Display.mnd: print(text);
  444:  print "%"                                                    ...
  445:  draw print 174 12 @right 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  446:  print *tmp476                                                Display.mnd: print(text);
  447:  print "%"                                                    ...
  448:  draw print 175 12 @right 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
        label *label205                                              Display.mnd: drawPower(ref y);
  449:  drawflush display1                                           Display.mnd: drawflush(display1);
  450:  jump *label21 always 0 0                                     Display.mnd: if page == 0 then
        label *label20                                               ...
  451:  jump *label219 notEqual .page 1                              Display.mnd: elsif page == 1 then
  452:  read :displayStorage:tail bank2 510                          Display.mnd: var tail = bank2[510];
  453:  jump *label222 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  454:  read .lastTail bank2 511                                     Display.mnd: lastTail = bank2[511];
  455:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  456:  print "Resources"                                            Display.mnd: print(text);
  457:  draw print 11 206 @left 0 0 0                                Display.mnd: drawPrint(x, y, alignment);
  458:  print "Resources"                                            Display.mnd: print(text);
  459:  draw print 12 206 @left 0 0 0                                Display.mnd: drawPrint(x, y, alignment);
  460:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  461:  draw image 12 182 @copper 15 0 0                             Display.mnd: image(12, y, item, 15, 0);
  462:  draw image 12 161 @lead 15 0 0                               ...
  463:  draw image 12 140 @sand 15 0 0                               ...
  464:  draw image 12 119 @coal 15 0 0                               ...
  465:  draw image 12 98 @graphite 15 0 0                            ...
  466:  draw image 12 77 @silicon 15 0 0                             ...
  467:  draw image 12 56 @titanium 15 0 0                            ...
  468:  draw image 12 35 @metaglass 15 0 0                           ...
  469:  draw image 12 14 @thorium 15 0 0                             ...
        label *label222                                              Display.mnd: if pageSwitched then
  470:  setaddr :drawHeader*retaddr *label239                        Display.mnd: drawHeader();
  471:  call *label4 *invalid :drawHeader*retval                     ...
        label *label239                                              ...
  472:  drawflush display1                                           Display.mnd: drawflush(display1);
  473:  jump *label220 greaterThan .lastTail :displayStorage:tail    Display.mnd: if lastTail > tail then return; end;
  474:  read :displayStorage:accumulator bank2 .lastTail             Display.mnd: var accumulator = bank2[lastTail];
  475:  op add :displayStorage:x 25 .lastTail                        Display.mnd: var x = 25 + lastTail;
  476:  op sub :displayStorage:y.1 190 8                             Display.mnd: var y = START - 8;
  477:  set :displayStorage:i 0                                      Display.mnd: for var i in 0 ... 9 do
        label *label402                                              ...
  478:  op and *tmp513 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  479:  op sub :displayStorage:value *tmp513 8                       ...
  480:  select *tmp516 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  481:  draw col *tmp516 0 0 0 0 0                                   ...
  482:  draw rect :displayStorage:x :displayStorage:y.1 1 :displaySt Display.mnd: rect(x, y, 1, value);
  483:  op sub :displayStorage:y.1 :displayStorage:y.1 21            Display.mnd: y -= 21;
  484:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  485:  op add :displayStorage:i :displayStorage:i 1                 Display.mnd: for var i in 0 ... 9 do
  486:  jump *label402 lessThan :displayStorage:i 9                  ...
  487:  drawflush display1                                           Display.mnd: drawflush(display1);
  488:  op add .lastTail .lastTail 1                                 Display.mnd: displayStorage();
  489:  jump *label220 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label219                                              ...
  490:  jump *label247 notEqual .page 2                              Display.mnd: elsif page == 2 then
  491:  setaddr :drawHeader*retaddr *label250                        Display.mnd: drawHeader();
  492:  call *label4 *invalid :drawHeader*retval                     ...
        label *label250                                              ...
  493:  set :displayBaseMap:limit 0                                  Display.mnd: var limit = 0;
  494:  jump *label251 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  495:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  496:  print "Base map"                                             Display.mnd: print(text);
  497:  draw print 90 206 @center 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  498:  print "Base map"                                             Display.mnd: print(text);
  499:  draw print 91 206 @center 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  500:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  501:  setaddr :setupScale*retaddr *label256                        Display.mnd: setupScale();
  502:  call *label5 *invalid :setupScale*retval                     ...
        label *label256                                              ...
  503:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  504:  drawflush display1                                           Display.mnd: drawflush(display1);
  505:  set :displayBaseMap:limit 5                                  Display.mnd: limit = 5;
        label *label251                                              Display.mnd: if pageSwitched then
  506:  set :displayBaseMap:counter 0                                Display.mnd: var counter = 0;
  507:  set :displayBaseMap:cfg "AJEMJJ-graphite-press0"             Display.mnd: for var cfg in BLOCKS do
  508:  setaddr *tmp522 *label260                                    ...
  509:  jump *label257 always 0 0                                    ...
        multilabel *label260                                         ...
  510:  set :displayBaseMap:cfg "AJTJK-battery1"                    ...
  511:  setaddr *tmp522 *label261                                    ...
  512:  jump *label257 always 0 0                                    ...
        multilabel *label261                                         ...
  513:  set :displayBaseMap:cfg "ALTJL-battery2"                    ...
  514:  setaddr *tmp522 *label262                                    ...
  515:  jump *label257 always 0 0                                    ...
        multilabel *label262                                         ...
  516:  set :displayBaseMap:cfg "AJRJM-combustion-generator3"       ...
  517:  setaddr *tmp522 *label263                                    ...
  518:  jump *label257 always 0 0                                    ...
        multilabel *label263                                         ...
  519:  set :displayBaseMap:cfg "ALMQJN-silicon-smelter4"            ...
  520:  setaddr *tmp522 *label264                                    ...
  521:  jump *label257 always 0 0                                    ...
        multilabel *label264                                         ...
  522:  set :displayBaseMap:cfg "A{LNJO-inverted-sorter5"            ...
  523:  setaddr *tmp522 *label265                                    ...
  524:  jump *label257 always 0 0                                    ...
        multilabel *label265                                         ...
  525:  set :displayBaseMap:cfg "A©JNJP-unloader6"                   ...
  526:  setaddr *tmp522 *label266                                    ...
  527:  jump *label257 always 0 0                                    ...
        multilabel *label266                                         ...
  528:  set :displayBaseMap:cfg "A{HNJQ-inverted-sorter7"            ...
  529:  setaddr *tmp522 *label267                                    ...
  530:  jump *label257 always 0 0                                    ...
        multilabel *label267                                         ...
  531:  set :displayBaseMap:cfg "AJPJR-underflow-gate8"             ...
  532:  setaddr *tmp522 *label268                                    ...
  533:  jump *label257 always 0 0                                    ...
        multilabel *label268                                         ...
  534:  set :displayBaseMap:cfg "AÕFFJS-micro-processor9"            ...
  535:  setaddr *tmp522 *label269                                    ...
  536:  jump *label257 always 0 0                                    ...
        multilabel *label269                                         ...
  537:  set :displayBaseMap:cfg "AFHJT-power-node10"                ...
  538:  setaddr *tmp522 *label270                                    ...
  539:  jump *label257 always 0 0                                    ...
        multilabel *label270                                         ...
  540:  set :displayBaseMap:cfg "A©FJJU-unloader11"                  ...
  541:  setaddr *tmp522 *label271                                    ...
  542:  jump *label257 always 0 0                                    ...
        multilabel *label271                                         ...
  543:  set :displayBaseMap:cfg "A~DJJV-overflow-gate12"             ...
  544:  setaddr *tmp522 *label272                                    ...
  545:  jump *label257 always 0 0                                    ...
        multilabel *label272                                         ...
  546:  set :displayBaseMap:cfg "A¾BFLW-air-factory13"               ...
  547:  setaddr *tmp522 *label273                                    ...
  548:  jump *label257 always 0 0                                    ...
        multilabel *label273                                         ...
  549:  set :displayBaseMap:cfg "A©NHJX-unloader14"                  ...
  550:  setaddr *tmp522 *label274                                    ...
  551:  jump *label257 always 0 0                                    ...
        multilabel *label274                                         ...
  552:  set :displayBaseMap:cfg "A{NJJY-inverted-sorter15"           ...
  553:  setaddr *tmp522 *label275                                    ...
  554:  jump *label257 always 0 0                                    ...
        multilabel *label275                                         ...
  555:  set :displayBaseMap:cfg "ANOMJZ-kiln16"                      ...
  556:  setaddr *tmp522 *label276                                    ...
  557:  jump *label257 always 0 0                                    ...
        multilabel *label276                                         ...
  558:  set :displayBaseMap:cfg "A¡AOJ[-water-extractor17"           ...
  559:  setaddr *tmp522 *label277                                    ...
  560:  jump *label257 always 0 0                                    ...
        multilabel *label277                                         ...
  561:  set :displayBaseMap:cfg "AAKJ\-steam-generator18"           ...
  562:  setaddr *tmp522 *label278                                    ...
  563:  jump *label257 always 0 0                                    ...
        multilabel *label278                                         ...
  564:  set :displayBaseMap:cfg "ALQIJ^-silicon-smelter20"           ...
  565:  setaddr *tmp522 *label279                                    ...
  566:  jump *label257 always 0 0                                    ...
        multilabel *label279                                         ...
  567:  set :displayBaseMap:cfg "AKFRJ_-multi-press21"               ...
  568:  setaddr *tmp522 *label280                                    ...
  569:  jump *label257 always 0 0                                    ...
        multilabel *label280                                         ...
  570:  set :displayBaseMap:cfg "A©HFJa-unloader23"                  ...
  571:  setaddr *tmp522 *label281                                    ...
  572:  jump *label257 always 0 0                                    ...
        multilabel *label281                                         ...
  573:  set :displayBaseMap:cfg "A{HDJb-inverted-sorter24"           ...
  574:  setaddr *tmp522 *label282                                    ...
  575:  jump *label257 always 0 0                                    ...
        multilabel *label282                                         ...
  576:  set :displayBaseMap:cfg "AÀF@Lc-additive-reconstructor25"    ...
  577:  setaddr *tmp522 *label283                                    ...
  578:  jump *label257 always 0 0                                    ...
        multilabel *label283                                         ...
  579:  set :displayBaseMap:cfg "AÁNBJd-multiplicative-reconstructor ...
  580:  setaddr *tmp522 *label284                                    ...
  581:  jump *label257 always 0 0                                    ...
        multilabel *label284                                         ...
  582:  set :displayBaseMap:cfg "AXPRJe-pulverizer27"                ...
  583:  setaddr *tmp522 *label285                                    ...
  584:  jump *label257 always 0 0                                    ...
        multilabel *label285                                         ...
  585:  set :displayBaseMap:cfg "A~PPJf-overflow-gate28"             ...
  586:  setaddr *tmp522 *label286                                    ...
  587:  jump *label257 always 0 0                                    ...
        multilabel *label286                                         ...
  588:  set :displayBaseMap:cfg "APTJg-power-node29"                ...
  589:  setaddr *tmp522 *label287                                    ...
  590:  jump *label257 always 0 0                                    ...
        multilabel *label287                                         ...
  591:  set :displayBaseMap:cfg "A©RPJh-unloader30"                  ...
  592:  setaddr *tmp522 *label288                                    ...
  593:  jump *label257 always 0 0                                    ...
        multilabel *label288                                         ...
  594:  set :displayBaseMap:cfg "A¨SSJi-container31"                 ...
  595:  setaddr *tmp522 *label289                                    ...
  596:  jump *label257 always 0 0                                    ...
        multilabel *label289                                         ...
  597:  set :displayBaseMap:cfg "AXTNJj-pulverizer32"                ...
  598:  setaddr *tmp522 *label290                                    ...
  599:  jump *label257 always 0 0                                    ...
        multilabel *label290                                         ...
  600:  set :displayBaseMap:cfg "A~RNJk-overflow-gate33"             ...
  601:  setaddr *tmp522 *label291                                    ...
  602:  jump *label257 always 0 0                                    ...
        multilabel *label291                                         ...
  603:  set :displayBaseMap:cfg "A~RLJl-overflow-gate34"             ...
  604:  setaddr *tmp522 *label292                                    ...
  605:  jump *label257 always 0 0                                    ...
        multilabel *label292                                         ...
  606:  set :displayBaseMap:cfg "A{TPJm-inverted-sorter35"           ...
  607:  setaddr *tmp522 *label293                                    ...
  608:  jump *label257 always 0 0                                    ...
        multilabel *label293                                         ...
  609:  set :displayBaseMap:cfg "AXTLJn-pulverizer36"                ...
  610:  setaddr *tmp522 *label294                                    ...
        label *label257                                              ...
  611:  jump *label295 notEqual .scrap false                         Display.mnd: if not scrap then
  612:  jump *label248 equal :displayBaseMap:cfg "AXPRJe-pulverizer2 Display.mnd: if cfg == PULVERIZER1 then break; end;
        label *label295                                              Display.mnd: if not scrap then
  613:  jump *label299 notEqual :displayBaseMap:counter :displayBase Display.mnd: if counter == limit then
  614:  setaddr :drawHeader*retaddr *label301                        Display.mnd: drawHeader();
  615:  call *label4 *invalid :drawHeader*retval                     ...
        label *label301                                              ...
  616:  set :displayBaseMap:counter 0                                Display.mnd: counter = 0;
  617:  jump *label300 always 0 0                                    Display.mnd: if counter == limit then
        label *label299                                              ...
  618:  op add :displayBaseMap:counter :displayBaseMap:counter 1     ...
        label *label300                                              ...
  619:  set :drawBlock:cfg :displayBaseMap:cfg                       Display.mnd: drawBlock(cfg);
  620:  setaddr :drawBlock*retaddr *label302                         ...
  621:  call *label6 *invalid :drawBlock*retval                      ...
        label *label302                                              ...
  622:  set :displayBaseMap:index .recentBuildIndex                  Display.mnd: var index = recentBuildIndex;
  623:  jump *label303 lessThan :displayBaseMap:index 0              Display.mnd: if index >= 0 then
  624:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  625:  op mul *tmp1034 :displayBaseMap:index 2                      Display.mnd: drawBlock(BLOCKS[index]);
  626:  multijump *label480 *tmp1034 0                               ...
        multilabel *label480                                         ...
  627:  set :drawBlock:cfg "AJEMJJ-graphite-press0"                  ...
  628:  jump *label479 always 0 0                                    ...
        multilabel *label481                                         ...
  629:  set :drawBlock:cfg "AJTJK-battery1"                         ...
  630:  jump *label479 always 0 0                                    ...
        multilabel *label482                                         ...
  631:  set :drawBlock:cfg "ALTJL-battery2"                         ...
  632:  jump *label479 always 0 0                                    ...
        multilabel *label483                                         ...
  633:  set :drawBlock:cfg "AJRJM-combustion-generator3"            ...
  634:  jump *label479 always 0 0                                    ...
        multilabel *label484                                         ...
  635:  set :drawBlock:cfg "ALMQJN-silicon-smelter4"                 ...
  636:  jump *label479 always 0 0                                    ...
        multilabel *label485                                         ...
  637:  set :drawBlock:cfg "A{LNJO-inverted-sorter5"                 ...
  638:  jump *label479 always 0 0                                    ...
        multilabel *label486                                         ...
  639:  set :drawBlock:cfg "A©JNJP-unloader6"                        ...
  640:  jump *label479 always 0 0                                    ...
        multilabel *label487                                         ...
  641:  set :drawBlock:cfg "A{HNJQ-inverted-sorter7"                 ...
  642:  jump *label479 always 0 0                                    ...
        multilabel *label488                                         ...
  643:  set :drawBlock:cfg "AJPJR-underflow-gate8"                  ...
  644:  jump *label479 always 0 0                                    ...
        multilabel *label489                                         ...
  645:  set :drawBlock:cfg "AÕFFJS-micro-processor9"                 ...
  646:  jump *label479 always 0 0                                    ...
        multilabel *label490                                         ...
  647:  set :drawBlock:cfg "AFHJT-power-node10"                     ...
  648:  jump *label479 always 0 0                                    ...
        multilabel *label491                                         ...
  649:  set :drawBlock:cfg "A©FJJU-unloader11"                       ...
  650:  jump *label479 always 0 0                                    ...
        multilabel *label492                                         ...
  651:  set :drawBlock:cfg "A~DJJV-overflow-gate12"                  ...
  652:  jump *label479 always 0 0                                    ...
        multilabel *label493                                         ...
  653:  set :drawBlock:cfg "A¾BFLW-air-factory13"                    ...
  654:  jump *label479 always 0 0                                    ...
        multilabel *label494                                         ...
  655:  set :drawBlock:cfg "A©NHJX-unloader14"                       ...
  656:  jump *label479 always 0 0                                    ...
        multilabel *label495                                         ...
  657:  set :drawBlock:cfg "A{NJJY-inverted-sorter15"                ...
  658:  jump *label479 always 0 0                                    ...
        multilabel *label496                                         ...
  659:  set :drawBlock:cfg "ANOMJZ-kiln16"                           ...
  660:  jump *label479 always 0 0                                    ...
        multilabel *label497                                         ...
  661:  set :drawBlock:cfg "A¡AOJ[-water-extractor17"                ...
  662:  jump *label479 always 0 0                                    ...
        multilabel *label498                                         ...
  663:  set :drawBlock:cfg "AAKJ\-steam-generator18"                ...
  664:  jump *label479 always 0 0                                    ...
        multilabel *label499                                         ...
  665:  set :drawBlock:cfg "ALQIJ^-silicon-smelter20"                ...
  666:  jump *label479 always 0 0                                    ...
        multilabel *label500                                         ...
  667:  set :drawBlock:cfg "AKFRJ_-multi-press21"                    ...
  668:  jump *label479 always 0 0                                    ...
        multilabel *label501                                         ...
  669:  set :drawBlock:cfg "A©HFJa-unloader23"                       ...
  670:  jump *label479 always 0 0                                    ...
        multilabel *label502                                         ...
  671:  set :drawBlock:cfg "A{HDJb-inverted-sorter24"                ...
  672:  jump *label479 always 0 0                                    ...
        multilabel *label503                                         ...
  673:  set :drawBlock:cfg "AÀF@Lc-additive-reconstructor25"         ...
  674:  jump *label479 always 0 0                                    ...
        multilabel *label504                                         ...
  675:  set :drawBlock:cfg "AÁNBJd-multiplicative-reconstructor26"   ...
  676:  jump *label479 always 0 0                                    ...
        multilabel *label505                                         ...
  677:  set :drawBlock:cfg "AXPRJe-pulverizer27"                     ...
  678:  jump *label479 always 0 0                                    ...
        multilabel *label506                                         ...
  679:  set :drawBlock:cfg "A~PPJf-overflow-gate28"                  ...
  680:  jump *label479 always 0 0                                    ...
        multilabel *label507                                         ...
  681:  set :drawBlock:cfg "APTJg-power-node29"                     ...
  682:  jump *label479 always 0 0                                    ...
        multilabel *label508                                         ...
  683:  set :drawBlock:cfg "A©RPJh-unloader30"                       ...
  684:  jump *label479 always 0 0                                    ...
        multilabel *label509                                         ...
  685:  set :drawBlock:cfg "A¨SSJi-container31"                      ...
  686:  jump *label479 always 0 0                                    ...
        multilabel *label510                                         ...
  687:  set :drawBlock:cfg "AXTNJj-pulverizer32"                     ...
  688:  jump *label479 always 0 0                                    ...
        multilabel *label511                                         ...
  689:  set :drawBlock:cfg "A~RNJk-overflow-gate33"                  ...
  690:  jump *label479 always 0 0                                    ...
        multilabel *label512                                         ...
  691:  set :drawBlock:cfg "A~RLJl-overflow-gate34"                  ...
  692:  jump *label479 always 0 0                                    ...
        multilabel *label513                                         ...
  693:  set :drawBlock:cfg "A{TPJm-inverted-sorter35"                ...
  694:  jump *label479 always 0 0                                    ...
        multilabel *label514                                         ...
  695:  set :drawBlock:cfg "AXTLJn-pulverizer36"                     ...
        label *label479                                              ...
  696:  setaddr :drawBlock*retaddr *label305                         ...
  697:  call *label6 *invalid :drawBlock*retval                      ...
        label *label305                                              ...
        label *label303                                              Display.mnd: if index >= 0 then
  698:  sensor *tmp534 switch1 @enabled                              Display.mnd: if switch1.enabled then
  699:  jump *label306 equal *tmp534 false                           ...
  700:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  701:  jump *label248 always 0 0                                    Display.mnd: break;
        label *label306                                              Display.mnd: if switch1.enabled then
  702:  drawflush display1                                           Display.mnd: drawflush(display1);
  703:  multijump *tmp522 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label294                                         ...
  704:  jump *label248 always 0 0                                    Display.mnd: elsif page == 2 then
        label *label247                                              ...
  705:  op sub :displayLog:page .page 3                              Display.mnd: displayLog(page - 3);
  706:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  707:  op sub *tmp539 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ RECORDS_PER_PAGE + 1);
  708:  op idiv *tmp540 *tmp539 39                                   ...
  709:  op add *tmp541 *tmp540 1                                     ...
  710:  op max :displayLog:pages 1 *tmp541                           ...
  711:  op add .numPages :displayLog:pages 3                         Display.mnd: numPages = pages + 3;
  712:  op mul *tmp544 39 :displayLog:page                           Display.mnd: var start = 511 - RECORDS_PER_PAGE * page;
  713:  op sub :displayLog:start 511 *tmp544                         ...
  714:  op sub *tmp546 :displayLog:start 39                          Display.mnd: var stop = max(logPosition, start - RECORDS_PER_PAGE);
  715:  op max :displayLog:stop :displayLog:logPosition *tmp546      ...
  716:  jump *label309 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  717:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  718:  print "Build records"                                        Display.mnd: print(text);
  719:  draw print 4 206 @left 0 0 0                                 Display.mnd: drawPrint(x, y, alignment);
  720:  print "Build records"                                        Display.mnd: print(text);
  721:  draw print 5 206 @left 0 0 0                                 Display.mnd: drawPrint(x, y, alignment);
  722:  op sub *tmp550 .page 2                                       Display.mnd: print(page + 1, "/");
  723:  print *tmp550                                                ...
  724:  print "/"                                                    ...
  725:  print :displayLog:pages                                      Display.mnd: print(text);
  726:  draw print 172 206 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  727:  set .lastRecord :displayLog:start                            Display.mnd: lastRecord = start;
        label *label309                                              Display.mnd: if pageSwitched then
  728:  setaddr :drawHeader*retaddr *label315                        Display.mnd: drawHeader();
  729:  call *label4 *invalid :drawHeader*retval                     ...
        label *label315                                              ...
  730:  op sub :displayLog:position .lastRecord 1                    Display.mnd: for var position in stop ... lastRecord descending do
  731:  jump *label318 lessThan :displayLog:position :displayLog:sto ...
        label *label403                                              ...
  732:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  733:  op sub *tmp554 :displayLog:start :displayLog:position        Display.mnd: displayRecord(record, start - position - 1);
  734:  op sub *tmp555 *tmp554 1                                     ...
  735:  op idiv :displayRecord:col *tmp555 13                        Display.mnd: var col = index \ RECORDS_PER_COLUMN;
  736:  op mod :displayRecord:row *tmp555 13                         Display.mnd: var row = index % RECORDS_PER_COLUMN;
  737:  op mul *tmp558 58 :displayRecord:col                         Display.mnd: var x = 11 + 58 * col;
  738:  op add :displayRecord:x 11 *tmp558                           ...
  739:  op mul *tmp560 15 :displayRecord:row                         Display.mnd: var y = HEADER1_Y1 - 13 - 15 - 15 * row;
  740:  op sub :displayRecord:y 189 *tmp560                          ...
  741:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  742:  lookup block *tmp564 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  743:  jump *label321 lessThanEq :displayRecord:id @blockCount      ...
  744:  op sub *tmp565 :displayRecord:id @blockCount                 ...
  745:  lookup unit *tmp564 *tmp565                                  ...
        label *label321                                              ...
  746:  op div *tmp568 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  747:  op idiv :displayRecord:t *tmp568 120                         ...
  748:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  749:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  750:  select *tmp574 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  751:  print :displayRecord:m                                       ...
  752:  print ":"                                                    ...
  753:  print *tmp574                                                ...
  754:  draw image :displayRecord:x :displayRecord:y *tmp564 14 0 0  Display.mnd: image(x, y, icon, 14, 0);
  755:  op add *tmp576 :displayRecord:x 44                           Display.mnd: drawText(x + 56 - 12, y + 2, @right, s);
  756:  op add *tmp577 :displayRecord:y 2                            ...
  757:  print :displayRecord:s                                       Display.mnd: print(text);
  758:  draw print *tmp576 *tmp577 @right 0 0 0                      Display.mnd: drawPrint(x, y, alignment);
  759:  drawflush display1                                           Display.mnd: drawflush(display1);
  760:  sensor *tmp578 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  761:  jump *label318 notEqual *tmp578 false                        ...
  762:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... lastRecord descending do
  763:  jump *label403 greaterThanEq :displayLog:position :displayLo ...
        label *label318                                              ...
  764:  op add .lastRecord :displayLog:stop 1                        Display.mnd: lastRecord = stop + 1;
  765:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label248                                              Display.mnd: elsif page == 2 then
        label *label220                                              Display.mnd: elsif page == 1 then
        label *label21                                               Display.mnd: if page == 0 then
        label *label18                                               Display.mnd: if display.@bufferSize < 200 then
  766:  jump *label327 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  767:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  768:  printflush message1                                          Display.mnd: printflush(message1);
  769:  jump *label328 always 0 0                                    Display.mnd: if megas > 0 then
        label *label327                                              ...
  770:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  771:  format .nextBlock                                            ...
  772:  format .status1                                              Display.mnd: println(status1);
  773:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  774:  format .item2                                                ...
  775:  format .block2                                               ...
  776:  format .status3                                              Display.mnd: println(status3);
  777:  printflush message1                                          Display.mnd: printflush(message1);
        label *label328                                              Display.mnd: if megas > 0 then
  778:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  779:  jump *label15 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  780:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  781:  op add *tmp588 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  782:  op mod .page *tmp588 .numPages                               ...
  783:  drawflush null                                               Display.mnd: drawflush(null);
  784:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  785:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  786:  jump *label15 always 0 0                                     Display.mnd: while true do
        label *label4                                                Display.mnd: void drawHeader()
  787:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  788:  draw color 0 0 32 255 0 0                                    Display.mnd: color(0, 0, 32, 255);
  789:  draw rect 0 217 200 300 0 0                                  Display.mnd: rect(0, HEADER1_Y1, 200, 300);
  790:  jump *label333 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  791:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  792:  draw scale 3.5 3.5 0 0 0 0                                   Display.mnd: scale(3.5, 3.5);
  793:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  794:  op idiv :drawHeader:t *tmp0 120                              ...
  795:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
  796:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
  797:  select *tmp597 lessThan :drawHeader:s 10 "0" ""              Display.mnd: var zero = s < 10 ? "0" : "";
  798:  print :drawHeader:m                                          Display.mnd: print(text);
  799:  print ":"                                                    ...
  800:  print *tmp597                                                ...
  801:  print :drawHeader:s                                          ...
  802:  draw print 25 71 @center 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  803:  print :drawHeader:m                                          Display.mnd: print(text);
  804:  print ":"                                                    ...
  805:  print *tmp597                                                ...
  806:  print :drawHeader:s                                          ...
  807:  draw print 26 71 @center 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  808:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  809:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  810:  return :drawHeader*retaddr                                   Display.mnd: if megas > 0 then
        label *label333                                              ...
  811:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  812:  print "Goal"                                                 Display.mnd: print(text);
  813:  draw print 42 261 @bottom 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  814:  print "Goal"                                                 Display.mnd: print(text);
  815:  draw print 43 261 @bottom 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  816:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  817:  jump *label343 equal .nextMultiReco false                    Display.mnd: if nextMultiReco then
  818:  draw image 42 237 .nextMultiReco 32 0 0                      Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextMultiReco, 32, 0);
  819:  jump *label344 always 0 0                                    Display.mnd: if nextMultiReco then
        label *label343                                              ...
  820:  op add *tmp601 .nextBlock .nextFactory                       Display.mnd: var count = nextBlock + nextFactory + nextAddReco;
  821:  op add :drawHeader:count *tmp601 .nextAddReco                ...
  822:  jump *label345 notEqual :drawHeader:count 3                  Display.mnd: if count == 3 then
  823:  draw image 22 244 .nextBlock 18 0 0                          Display.mnd: image(HEADER_X - 20, HEADER1_Y - 17, nextBlock, 18, 0);
  824:  draw image 42 244 .nextFactory 18 0 0                        Display.mnd: image(HEADER_X +  0, HEADER1_Y - 17, nextFactory, 18, 0);
  825:  draw image 62 244 .nextAddReco 18 0 0                        Display.mnd: image(HEADER_X + 20, HEADER1_Y - 17, nextAddReco, 18, 0);
  826:  jump *label346 always 0 0                                    Display.mnd: if count == 3 then
        label *label345                                              ...
  827:  jump *label347 notEqual :drawHeader:count 2                  Display.mnd: elsif count == 2 then
  828:  set :drawHeader:x 27                                         Display.mnd: var x = HEADER_X - 15;
  829:  set :drawHeader:goal .nextBlock                              Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  830:  jump *label442 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  831:  draw image 27 240 :drawHeader:goal 25 0 0                    Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  832:  op add :drawHeader:x 27 30                                   Display.mnd: x += 30;
        label *label442                                              Display.mnd: if goal != null then
  833:  set :drawHeader:goal .nextFactory                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  834:  jump *label448 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  835:  draw image :drawHeader:x 240 :drawHeader:goal 25 0 0         Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  836:  op add :drawHeader:x :drawHeader:x 30                        Display.mnd: x += 30;
        label *label448                                              Display.mnd: if goal != null then
  837:  set :drawHeader:goal .nextAddReco                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  838:  jump *label348 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  839:  draw image :drawHeader:x 240 :drawHeader:goal 25 0 0         Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  840:  jump *label348 always 0 0                                    Display.mnd: elsif count == 2 then
        label *label347                                              ...
  841:  jump *label357 notEqual :drawHeader:count 1                  Display.mnd: elsif count == 1 then
  842:  set :drawHeader:goal.1 .nextBlock                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  843:  jump *label461 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  844:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
  845:  jump *label361 always 0 0                                    Display.mnd: break;
        label *label461                                              Display.mnd: if goal != null then
  846:  set :drawHeader:goal.1 .nextFactory                          Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  847:  jump *label467 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  848:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
  849:  jump *label361 always 0 0                                    Display.mnd: break;
        label *label467                                              Display.mnd: if goal != null then
  850:  set :drawHeader:goal.1 .nextAddReco                          Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  851:  jump *label473 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  852:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
        label *label473                                              Display.mnd: if goal != null then
        label *label361                                              Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
        label *label357                                              Display.mnd: elsif count == 1 then
        label *label348                                              Display.mnd: elsif count == 2 then
        label *label346                                              Display.mnd: if count == 3 then
        label *label344                                              Display.mnd: if nextMultiReco then
  853:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
  854:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  855:  op idiv :drawHeader:t.1 *tmp0 120                            ...
  856:  op idiv :drawHeader:m.1 :drawHeader:t.1 60                   Display.mnd: var m = t \ 60;
  857:  op mod :drawHeader:s.1 :drawHeader:t.1 60                    Display.mnd: var s = t % 60;
  858:  select *tmp620 lessThan :drawHeader:s.1 10 "0" ""            Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
  859:  print :drawHeader:m.1                                        ...
  860:  print ":{0}{0} (x{0}.{0})"                                   ...
  861:  format *tmp620                                               ...
  862:  format :drawHeader:s.1                                       ...
  863:  op mul *tmp621 10 :drawHeader:t.1                            Display.mnd: var ratio = round(10 * t / tt);
  864:  op div *tmp622 *tmp621 :drawHeader:tt                        ...
  865:  op round :drawHeader:ratio *tmp622 0                         ...
  866:  op idiv *tmp624 :drawHeader:ratio 10                         Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
  867:  op mod *tmp625 :drawHeader:ratio 10                          ...
  868:  format *tmp624                                               ...
  869:  format *tmp625                                               ...
  870:  draw print 174 272 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  871:  jump *label370 equal A¨SSJi-container31 null                 Display.mnd: if container_a != null then
  872:  sensor :drawHeader:count.1 A¨SSJi-container31 @scrap         Display.mnd: var count = container_a.@scrap;
  873:  op log10 *tmp629 :drawHeader:count.1 0                       Display.mnd: var len = floor(log10(count));
  874:  op floor :drawHeader:len *tmp629 0                           ...
  875:  print "x"                                                    Display.mnd: print(text);
  876:  print :drawHeader:count.1                                    ...
  877:  draw print 174 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  878:  op mul *tmp632 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @scrap, 12, 0);
  879:  op sub *tmp633 154 *tmp632                                   ...
  880:  draw image *tmp633 246 @scrap 12 0 0                         ...
  881:  sensor :drawHeader:count.1 A¨SSJi-container31 @sand          Display.mnd: count = container_a.@sand;
  882:  op log10 *tmp635 :drawHeader:count.1 0                       Display.mnd: len = floor(log10(count));
  883:  op floor :drawHeader:len *tmp635 0                           ...
  884:  print "x"                                                    Display.mnd: print(text);
  885:  print :drawHeader:count.1                                    ...
  886:  draw print 124 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  887:  op mul *tmp638 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @sand, 12, 0);
  888:  op sub *tmp639 104 *tmp638                                   ...
  889:  draw image *tmp639 246 @sand 12 0 0                          ...
  890:  jump *label371 always 0 0                                    Display.mnd: if container_a != null then
        label *label370                                              ...
  891:  jump *label374 equal .titaniumDrill false                    Display.mnd: if titaniumDrill then
  892:  sensor *tmp641 .titaniumDrill @titanium                      Display.mnd: var count = max(titaniumDrillCount, titaniumDrill.@titanium);
  893:  op max :drawHeader:count.2 .titaniumDrillCount *tmp641       ...
  894:  op log10 *tmp643 :drawHeader:count.2 0                       Display.mnd: var len = floor(log10(count));
  895:  op floor :drawHeader:len.1 *tmp643 0                         ...
  896:  print "x"                                                    Display.mnd: print(text);
  897:  print :drawHeader:count.2                                    ...
  898:  draw print 174 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  899:  op mul *tmp646 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 246, @titanium, 12, 0);
  900:  op sub *tmp647 154 *tmp646                                   ...
  901:  draw image *tmp647 246 @titanium 12 0 0                      ...
        label *label374                                              Display.mnd: if titaniumDrill then
  902:  jump *label377 equal .thoriumContainer false                 Display.mnd: if thoriumContainer then
  903:  sensor :drawHeader:count.3 .thoriumContainer @thorium        Display.mnd: var count = thoriumContainer.@thorium;
  904:  op log10 *tmp650 :drawHeader:count.3 0                       Display.mnd: var len = floor(log10(count));
  905:  op floor :drawHeader:len.2 *tmp650 0                         ...
  906:  print "x"                                                    Display.mnd: print(text);
  907:  print :drawHeader:count.3                                    ...
  908:  draw print 124 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  909:  op mul *tmp653 7 :drawHeader:len.2                           Display.mnd: image(x - 20 - 7 * len, 246, @thorium, 12, 0);
  910:  op sub *tmp654 104 *tmp653                                   ...
  911:  draw image *tmp654 246 @thorium 12 0 0                       ...
        label *label377                                              Display.mnd: if thoriumContainer then
        label *label371                                              Display.mnd: if container_a != null then
  912:  set :drawHeader:x.4 174                                      Display.mnd: var x = 174;
  913:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  914:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  915:  jump *label381 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  916:  draw image 154 227 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  917:  print "x"                                                    Display.mnd: print(text);
  918:  print :drawUnitCount:count                                   ...
  919:  draw print 174 229 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  920:  op sub :drawHeader:x.4 174 30                                Display.mnd: x -= 30;
        label *label381                                              Display.mnd: if count > 0 then
  921:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  922:  jump *label385 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  923:  op sub *tmp660 :drawHeader:x.4 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  924:  draw image *tmp660 227 @mono 12 0 0                          ...
  925:  print "x"                                                    Display.mnd: print(text);
  926:  print :drawUnitCount.1:count                                 ...
  927:  draw print :drawHeader:x.4 229 @right 0 0 0                  Display.mnd: drawPrint(x, y, alignment);
  928:  op sub :drawHeader:x.4 :drawHeader:x.4 30                    Display.mnd: x -= 30;
        label *label385                                              Display.mnd: if count > 0 then
  929:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  930:  jump *label389 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  931:  op sub *tmp663 :drawHeader:x.4 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  932:  draw image *tmp663 227 @flare 12 0 0                         ...
  933:  print "x"                                                    Display.mnd: print(text);
  934:  print :drawUnitCount.2:count                                 ...
  935:  draw print :drawHeader:x.4 229 @right 0 0 0                  Display.mnd: drawPrint(x, y, alignment);
        label *label389                                              Display.mnd: if count > 0 then
  936:  return :drawHeader*retaddr                                   Display.mnd: void drawHeader()
        label *label5                                                Display.mnd: void setupScale()
  937:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  938:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  939:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  940:  return :setupScale*retaddr                                   Display.mnd: void setupScale()
        label *label6                                                Display.mnd: void drawBlock(cfg)
  941:  read *tmp669 :drawBlock:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  942:  op sub *tmp670 *tmp669 74                                    ...
  943:  lookup block :unpackCfg:type *tmp670                         ...
  944:  read *tmp673 :drawBlock:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  945:  op sub *tmp674 *tmp673 74                                    ...
  946:  op div :unpackCfg:x *tmp674 2                                ...
  947:  read *tmp677 :drawBlock:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  948:  op sub *tmp678 *tmp677 74                                    ...
  949:  op div :unpackCfg:y *tmp678 2                                ...
  950:  read *tmp681 :drawBlock:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  951:  op sub :unpackCfg:rotation *tmp681 74                        ...
  952:  read *tmp684 :drawBlock:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  953:  op sub :unpackCfg:ind *tmp684 74                             ...
  954:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  955:  set :drawBlock:type :unpackCfg:type                          Display.mnd: unpackCfg2(cfg, out type, out x, out y, out rotation, out size, out index);
  956:  set :drawBlock:x :unpackCfg:x                                ...
  957:  set :drawBlock:y :unpackCfg:y                                ...
  958:  set :drawBlock:rotation :unpackCfg:rotation                  ...
  959:  set :drawBlock:size :unpackCfg:size                          ...
  960:  op shl *tmp694 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  961:  op and *tmp695 .blocksBuilt *tmp694                          ...
  962:  jump *label396 equal *tmp695 false                           ...
  963:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  964:  setaddr :setupScale*retaddr *label398                        Display.mnd: setupScale();
  965:  call *label5 *invalid :setupScale*retval                     ...
        label *label398                                              ...
  966:  op mul *tmp697 2 :drawBlock:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  967:  op mul *tmp698 2 :drawBlock:y                                ...
  968:  op mul *tmp699 2 :drawBlock:size                             ...
  969:  op mul *tmp700 90 :drawBlock:rotation                        ...
  970:  draw image *tmp697 *tmp698 :drawBlock:type *tmp699 *tmp700 0 ...
  971:  return :drawBlock*retaddr                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label396                                              ...
  972:  jump *label399 equal .pageSwitched false                     Display.mnd: elsif pageSwitched then
  973:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
  974:  setaddr :setupScale*retaddr *label401                        Display.mnd: setupScale();
  975:  call *label5 *invalid :setupScale*retval                     ...
        label *label401                                              ...
  976:  op mul *tmp702 2 :drawBlock:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  977:  op mul *tmp703 2 :drawBlock:y                                ...
  978:  op mul *tmp704 2 :drawBlock:size                             ...
  979:  op mul *tmp705 90 :drawBlock:rotation                        ...
  980:  draw image *tmp702 *tmp703 :drawBlock:type *tmp704 *tmp705 0 ...
        label *label399                                              Display.mnd: elsif pageSwitched then
  981:  return :drawBlock*retaddr                                    Display.mnd: void drawBlock(cfg)


Performance: parsed in 789 ms, compiled in 647 ms, optimized in 3,620 ms, run in 13 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp39 processor3 "*signature":
Variable 'processor3' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
