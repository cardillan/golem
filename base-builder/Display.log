  2413 instructions before optimizations.
   192 instructions eliminated by Temp Variables Elimination (2 passes, 8 iterations).
   151 instructions eliminated by Dead Code Elimination (7 iterations).
    10 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    60 instructions eliminated by Jump Optimization (7 iterations).
    51 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     7 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
    21 instructions eliminated by If Expression Optimization (6 iterations).
   918 instructions eliminated by Data Flow Optimization (4 passes, 20 iterations).
     1 instructions eliminated by Loop Optimization (5 iterations).
     2 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (9 iterations).
     3 loops unrolled by Loop Unrolling.
     1 jump tables inlined by Array Optimization.
    11 instructions eliminated by Jump Straightening (7 iterations).
     8 instructions updated by Jump Threading.
     5 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   969 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  * Unroll iteration loop at Display.mnd:569:9                   size   -17, benefit       54.7, efficiency   Infinity (-21 instructions)
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
    Unroll iteration loop at Display.mnd:154:17                  size    -2, benefit       20.9, efficiency   Infinity
    Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +22, benefit      205.1, efficiency      9.322
  ! Inline function call at Display.mnd:113:24                   size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:575:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:509:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +156, benefit       58.6, efficiency      0.376
  ! Inline function call at Display.mnd:540:9                    size   +23, benefit      136.7, efficiency      5.944
  ! Inline function call at Display.mnd:545:13                   size   +23, benefit       68.4, efficiency      2.972
  ! Inline function call at Display.mnd:439:5                    size  +156, benefit        4.7, efficiency      0.030
    Inline read jump table of array 'BLOCKS'                     size    -3, benefit       39.1, efficiency   Infinity
  ! Inline 'BLOCKS' read access at Display.mnd:545:23            size   +67, benefit       39.1, efficiency      0.583

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
    Unroll iteration loop at Display.mnd:154:17                  size    -2, benefit       20.9, efficiency   Infinity
    Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +22, benefit      205.1, efficiency      9.322
  ! Inline function call at Display.mnd:113:24                   size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:575:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:509:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +156, benefit       58.6, efficiency      0.376
  ! Inline function call at Display.mnd:540:9                    size   +23, benefit      136.7, efficiency      5.944
  ! Inline function call at Display.mnd:545:13                   size   +23, benefit       68.4, efficiency      2.972
  ! Inline function call at Display.mnd:439:5                    size  +156, benefit        4.7, efficiency      0.030
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit       39.1, efficiency   Infinity (-3 instructions)
  ! Inline 'BLOCKS' read access at Display.mnd:545:23            size   +67, benefit       39.1, efficiency      0.583

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  * Unroll iteration loop at Display.mnd:154:17                  size    -2, benefit       20.9, efficiency   Infinity (-1 instructions)
    Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +22, benefit      205.1, efficiency      9.322
  ! Inline function call at Display.mnd:113:24                   size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:575:5                    size  +156, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:509:5                    size  +156, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +156, benefit       58.6, efficiency      0.376
  ! Inline function call at Display.mnd:540:9                    size   +23, benefit      136.7, efficiency      5.944
  ! Inline function call at Display.mnd:545:13                   size   +23, benefit       68.4, efficiency      2.972
  ! Inline function call at Display.mnd:439:5                    size  +156, benefit        4.7, efficiency      0.030

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  * Unroll iteration loop at Display.mnd:161:17                  size    -2, benefit       10.5, efficiency   Infinity (+0 instructions)
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +22, benefit      205.1, efficiency      9.322
  ! Inline function call at Display.mnd:113:24                   size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:575:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:509:5                    size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +155, benefit       58.6, efficiency      0.378
  ! Inline function call at Display.mnd:540:9                    size   +23, benefit      136.7, efficiency      5.944
  ! Inline function call at Display.mnd:545:13                   size   +23, benefit       68.4, efficiency      2.972
  ! Inline function call at Display.mnd:439:5                    size  +155, benefit        4.7, efficiency      0.030

Pass 1: speed optimization selection (cost limit 0):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +22, benefit      205.1, efficiency      9.322
  ! Inline function call at Display.mnd:113:24                   size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:575:5                    size  +155, benefit        9.4, efficiency      0.060
  ! Inline function call at Display.mnd:509:5                    size  +155, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +155, benefit       58.6, efficiency      0.378
  ! Inline function call at Display.mnd:540:9                    size   +23, benefit      136.7, efficiency      5.944
  ! Inline function call at Display.mnd:545:13                   size   +23, benefit       68.4, efficiency      2.972
  ! Inline function call at Display.mnd:439:5                    size  +155, benefit        4.7, efficiency      0.030

Pass 2: speed optimization selection (cost limit 2):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +20, benefit      205.1, efficiency     10.254
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:575:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:540:9                    size   +21, benefit      136.7, efficiency      6.510
  ! Inline function call at Display.mnd:545:13                   size   +21, benefit       68.4, efficiency      3.255
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030

Pass 3: speed optimization selection (cost limit 2):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +20, benefit      205.1, efficiency     10.254
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:575:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:540:9                    size   +21, benefit      136.7, efficiency      6.510
  ! Inline function call at Display.mnd:545:13                   size   +21, benefit       68.4, efficiency      3.255
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030

Pass 4: speed optimization selection (cost limit 2):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +20, benefit      205.1, efficiency     10.254
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:575:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:540:9                    size   +21, benefit      136.7, efficiency      6.510
  ! Inline function call at Display.mnd:545:13                   size   +21, benefit       68.4, efficiency      3.255
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030

Pass 5: speed optimization selection (cost limit 2):
  ! Unroll iteration loop at Display.mnd:254:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll loop at Display.mnd:584:5                             size   +53, benefit     1406.3, efficiency     26.533
  ! Inline function 'drawBlock' defined at Display.mnd:497:1     size   +20, benefit      205.1, efficiency     10.254
  ! Inline function call at Display.mnd:113:24                   size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:229:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:575:5                    size  +154, benefit        9.4, efficiency      0.061
  ! Inline function call at Display.mnd:509:5                    size  +154, benefit        4.7, efficiency      0.030
  ! Inline function call at Display.mnd:533:13                   size  +154, benefit       58.6, efficiency      0.380
  ! Inline function call at Display.mnd:540:9                    size   +21, benefit      136.7, efficiency      6.510
  ! Inline function call at Display.mnd:545:13                   size   +21, benefit       68.4, efficiency      3.255
  ! Inline function call at Display.mnd:439:5                    size  +154, benefit        4.7, efficiency      0.030

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-119 instructions):
 
    33 jump *label23 equal *tmp52 false
    34 draw color 0 0 32 80
    35 draw rect 0 0 176 176
-    * set *tmp53 null
    36 jump *label24 always
    37 label *label23
    38 draw reset
    39 draw clear 0 0 32
-    * set *tmp53 null
    40 label *label24
    41 draw col %[white]
    42 op div *tmp54 .animation 30
 
    79 setaddr :drawHeader*retaddr *label30 (h:*label30)
    80 call *label4 *invalid :drawHeader*retval (m:*label30) (h:*label30)
    81 label *label30
-    * set *tmp73 null
    82 jump *label29 always
    83 label *label28
-    * set *tmp73 null
    84 label *label29
    85 drawflush display1
-    * set *tmp74 .animation
    86 op add .animation .animation 1
    87 label *label22
    88 set *tmp51 null
 
   188 jump *label44 equal *tmp101 false
   189 set :drawItemColor:col 0
   190 op sub :drawItemColor:y :drawItemColor:y 15
-    * set *tmp102 :drawItemColor:y
   191 jump *label45 always
   192 label *label44
-    * set *tmp102 null
   193 label *label45
   194 label *label40
   195 set :drawItem:col :drawItemColor:col
 
   197 label *label39
   198 set :updateDisplay:y :drawItem:y
   199 op sub :updateDisplay:y :updateDisplay:y 35
-    * set *tmp78 :updateDisplay:y
   200 jump *label35 always
   201 label *label34
   202 op notEqual *tmp103 .nextBlock null
 
   326 jump *label70 equal *tmp131 false
   327 set :drawItemColor.1:col 0
   328 op sub :drawItemColor.1:y :drawItemColor.1:y 15
-    * set *tmp132 :drawItemColor.1:y
   329 jump *label71 always
   330 label *label70
-    * set *tmp132 null
   331 label *label71
   332 label *label66
   333 set :drawItem.1:col :drawItemColor.1:col
 
   344 label *label72
   345 set *tmp134 null
   346 label *label73
-    * set *tmp109 *tmp134
   347 jump *label64 always
   348 label *label63
-    * set *tmp109 null
   349 label *label64
   350 label *label54
   351 multijump *tmp107 0 0 (m:marker0)
   352 multilabel *label62 (m:marker0)
   353 label *label55
-    * set *tmp106 null
   354 jump *label52 always
   355 label *label51
-    * set *tmp106 null
   356 label *label52
   357 op lessThan *tmp135 .totalTargets 3
   358 jump *label74 equal *tmp135 false
   359 op sub *tmp137 3 .totalTargets
   360 op mul *tmp138 *tmp137 15
   361 op sub :updateDisplay:y :updateDisplay:y *tmp138
-    * set *tmp136 :updateDisplay:y
   362 jump *label75 always
   363 label *label74
-    * set *tmp136 null
   364 label *label75
   365 op sub :updateDisplay:y :updateDisplay:y 5
   366 set *tmp104 :updateDisplay:y
 
   368 label *label46
   369 set *tmp104 null
   370 label *label47
-    * set *tmp78 *tmp104
   371 label *label35
   372 label *label33
   373 op equal *tmp139 .nextFactory null
   374 jump *label77 equal *tmp139 false
   375 jump *label76 always
-    * set *tmp140 null
   376 jump *label78 always
   377 label *label77
-    * set *tmp140 null
   378 label *label78
   379 draw col %[white]
   380 set :drawTitleRow.2:y :updateDisplay:y
 
   468 jump *label91 equal *tmp167 false
   469 set :drawItemColor.2:col 0
   470 op sub :drawItemColor.2:y :drawItemColor.2:y 15
-    * set *tmp168 :drawItemColor.2:y
   471 jump *label92 always
   472 label *label91
-    * set *tmp168 null
   473 label *label92
   474 label *label87
   475 set :drawItem.2:col :drawItemColor.2:col
 
   548 jump *label98 equal *tmp190 false
   549 set :drawItemColor.3:col 0
   550 op sub :drawItemColor.3:y :drawItemColor.3:y 15
-    * set *tmp191 :drawItemColor.3:y
   551 jump *label99 always
   552 label *label98
-    * set *tmp191 null
   553 label *label99
   554 label *label94
   555 set :drawItem.3:col :drawItemColor.3:col
 
   624 jump *label105 equal *tmp213 false
   625 set :drawItemColor.4:col 0
   626 op sub :drawItemColor.4:y :drawItemColor.4:y 15
-    * set *tmp214 :drawItemColor.4:y
   627 jump *label106 always
   628 label *label105
-    * set *tmp214 null
   629 label *label106
   630 label *label101
   631 set :drawItem.4:col :drawItemColor.4:col
 
   634 set :updateDisplay:y :drawItem.4:y
   635 set *tmp145 null
   636 label *label85
-    * set *tmp143 *tmp145
   637 jump *label83 always
   638 label *label82
   639 op mul *tmp215 100 :drawAirFactory:progress
 
   707 jump *label112 equal *tmp237 false
   708 set :drawItemColor.5:col 0
   709 op sub :drawItemColor.5:y :drawItemColor.5:y 15
-    * set *tmp238 :drawItemColor.5:y
   710 jump *label113 always
   711 label *label112
-    * set *tmp238 null
   712 label *label113
   713 label *label108
   714 set :drawItem.5:col :drawItemColor.5:col
 
   716 label *label107
   717 set :updateDisplay:y :drawItem.5:y
   718 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp143 :updateDisplay:y
   719 label *label83
   720 op sub :updateDisplay:y :updateDisplay:y 5
   721 label *label76
   722 op equal *tmp239 .nextAddReco null
   723 jump *label115 equal *tmp239 false
   724 jump *label114 always
-    * set *tmp240 null
   725 jump *label116 always
   726 label *label115
-    * set *tmp240 null
   727 label *label116
   728 draw col %[white]
   729 set :drawTitleRow.3:y :updateDisplay:y
 
   815 jump *label127 equal *tmp265 false
   816 set :drawItemColor.6:col 0
   817 op sub :drawItemColor.6:y :drawItemColor.6:y 15
-    * set *tmp266 :drawItemColor.6:y
   818 jump *label128 always
   819 label *label127
-    * set *tmp266 null
   820 label *label128
   821 label *label123
   822 set :drawItem.6:col :drawItemColor.6:col
 
   891 jump *label134 equal *tmp288 false
   892 set :drawItemColor.7:col 0
   893 op sub :drawItemColor.7:y :drawItemColor.7:y 15
-    * set *tmp289 :drawItemColor.7:y
   894 jump *label135 always
   895 label *label134
-    * set *tmp289 null
   896 label *label135
   897 label *label130
   898 set :drawItem.7:col :drawItemColor.7:col
   899 set :drawItem.7:y :drawItemColor.7:y
   900 label *label129
   901 set :updateDisplay:y :drawItem.7:y
-    * set *tmp243 null
   902 jump *label121 always
   903 label *label120
   904 op mul *tmp290 100 :drawAddReco:progress
 
   972 jump *label141 equal *tmp312 false
   973 set :drawItemColor.8:col 0
   974 op sub :drawItemColor.8:y :drawItemColor.8:y 15
-    * set *tmp313 :drawItemColor.8:y
   975 jump *label142 always
   976 label *label141
-    * set *tmp313 null
   977 label *label142
   978 label *label137
   979 set :drawItem.8:col :drawItemColor.8:col
 
   981 label *label136
   982 set :updateDisplay:y :drawItem.8:y
   983 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp243 :updateDisplay:y
   984 label *label121
   985 op sub :updateDisplay:y :updateDisplay:y 5
   986 label *label114
   987 op equal *tmp314 .nextMultiReco null
   988 jump *label144 equal *tmp314 false
   989 jump *label143 always
-    * set *tmp315 null
   990 jump *label145 always
   991 label *label144
-    * set *tmp315 null
   992 label *label145
   993 draw col %[white]
   994 op min *tmp316 :updateDisplay:y 142
 
  1082 jump *label156 equal *tmp341 false
  1083 set :drawItemColor.9:col 0
  1084 op sub :drawItemColor.9:y :drawItemColor.9:y 15
-    * set *tmp342 :drawItemColor.9:y
  1085 jump *label157 always
  1086 label *label156
-    * set *tmp342 null
  1087 label *label157
  1088 label *label152
  1089 set :drawItem.9:col :drawItemColor.9:col
 
  1158 jump *label163 equal *tmp364 false
  1159 set :drawItemColor.10:col 0
  1160 op sub :drawItemColor.10:y :drawItemColor.10:y 15
-    * set *tmp365 :drawItemColor.10:y
  1161 jump *label164 always
  1162 label *label163
-    * set *tmp365 null
  1163 label *label164
  1164 label *label159
  1165 set :drawItem.10:col :drawItemColor.10:col
 
  1234 jump *label170 equal *tmp387 false
  1235 set :drawItemColor.11:col 0
  1236 op sub :drawItemColor.11:y :drawItemColor.11:y 15
-    * set *tmp388 :drawItemColor.11:y
  1237 jump *label171 always
  1238 label *label170
-    * set *tmp388 null
  1239 label *label171
  1240 label *label166
  1241 set :drawItem.11:col :drawItemColor.11:col
  1242 set :drawItem.11:y :drawItemColor.11:y
  1243 label *label165
  1244 set :updateDisplay:y :drawItem.11:y
-    * set *tmp319 null
  1245 jump *label150 always
  1246 label *label149
  1247 op mul *tmp389 100 :drawMultiReco:progress
 
  1315 jump *label177 equal *tmp411 false
  1316 set :drawItemColor.12:col 0
  1317 op sub :drawItemColor.12:y :drawItemColor.12:y 15
-    * set *tmp412 :drawItemColor.12:y
  1318 jump *label178 always
  1319 label *label177
-    * set *tmp412 null
  1320 label *label178
  1321 label *label173
  1322 set :drawItem.12:col :drawItemColor.12:col
 
  1324 label *label172
  1325 set :updateDisplay:y :drawItem.12:y
  1326 op sub :updateDisplay:y :updateDisplay:y 30
-    * set *tmp319 :updateDisplay:y
  1327 label *label150
  1328 op sub :updateDisplay:y :updateDisplay:y 5
  1329 label *label143
  1330 sensor *tmp413 @unit @dead
  1331 jump *label180 equal *tmp413 false
  1332 jump *label179 always
-    * set *tmp414 null
  1333 jump *label181 always
  1334 label *label180
-    * set *tmp414 null
  1335 label *label181
  1336 draw col %[white]
  1337 set :drawTitleRow.5:y :updateDisplay:y
 
  1425 jump *label193 equal *tmp439 false
  1426 set :drawItemColor.13:col 0
  1427 op sub :drawItemColor.13:y :drawItemColor.13:y 15
-    * set *tmp440 :drawItemColor.13:y
  1428 jump *label194 always
  1429 label *label193
-    * set *tmp440 null
  1430 label *label194
  1431 label *label189
  1432 set :drawItem.13:col :drawItemColor.13:col
 
  1435 set :drawUnit:y :drawItem.13:y
  1436 label *label187
  1437 set :updateDisplay:y :drawUnit:y
-    * set *tmp416 null
  1438 jump *label186 always
  1439 label *label185
  1440 sensor *tmp441 @unit @firstItem
 
  1514 jump *label201 equal *tmp467 false
  1515 set :drawItemColor.14:col 0
  1516 op sub :drawItemColor.14:y :drawItemColor.14:y 15
-    * set *tmp468 :drawItemColor.14:y
  1517 jump *label202 always
  1518 label *label201
-    * set *tmp468 null
  1519 label *label202
  1520 label *label197
  1521 set :drawItem.14:col :drawItemColor.14:col
 
  1524 set :drawUnit.1:y :drawItem.14:y
  1525 label *label195
  1526 set :updateDisplay:y :drawUnit.1:y
-    * set *tmp416 null
  1527 label *label186
  1528 label *label179
  1529 op lessThan *tmp469 :updateDisplay:y 20
  1530 jump *label204 equal *tmp469 false
  1531 jump *label203 always
-    * set *tmp470 null
  1532 jump *label205 always
  1533 label *label204
-    * set *tmp470 null
  1534 label *label205
  1535 op equal *tmp471 AJTJK-battery1 null
  1536 jump *label206 equal *tmp471 false
  1537 jump *label203 always
-    * set *tmp472 null
  1538 jump *label207 always
  1539 label *label206
-    * set *tmp472 null
  1540 label *label207
  1541 set :updateDisplay:y 20
  1542 draw col %[white]
 
  1625 jump *label215 equal *tmp497 false
  1626 set :drawItemColor.15:col 0
  1627 op sub :drawItemColor.15:y :drawItemColor.15:y 15
-    * set *tmp498 :drawItemColor.15:y
  1628 jump *label216 always
  1629 label *label215
-    * set *tmp498 null
  1630 label *label216
  1631 label *label211
  1632 set :updateDisplay:y :drawItemColor.15:y
 
  1708 multijump *tmp506 0 0 (m:marker1)
  1709 multilabel *label236 (m:marker1)
  1710 label *label227
-    * set *tmp502 null
  1711 jump *label221 always
  1712 label *label220
-    * set *tmp502 null
  1713 label *label221
  1714 setaddr :drawHeader*retaddr *label237 (h:*label237)
  1715 call *label4 *invalid :drawHeader*retval (m:*label237) (h:*label237)
 
  1718 op greaterThan *tmp507 .lastTail :displayStorage:tail
  1719 jump *label238 equal *tmp507 false
  1720 jump *label219 always
-    * set *tmp508 null
  1721 jump *label239 always
  1722 label *label238
-    * set *tmp508 null
  1723 label *label239
  1724 set *tmp509 .lastTail
  1725 read *tmp510 bank2 *tmp509
 
  1750 jump *label240 always
  1751 label *label242
  1752 drawflush display1
-    * set *tmp517 .lastTail
  1753 op add .lastTail .lastTail 1
  1754 label *label219
  1755 set *tmp500 null
 
  1793 draw image 0 0 @core-shard 6 0
  1794 drawflush display1
  1795 set :displayBaseMap:limit 5
-    * set *tmp520 :displayBaseMap:limit
  1796 jump *label250 always
  1797 label *label249
  1798 set :setBaseMapScale.1:size 220
 
  1804 op div *tmp529 *tmp528 2
  1805 draw scale *tmp527 *tmp529
  1806 label *label255
-    * set *tmp520 null
  1807 label *label250
  1808 set :displayBaseMap:counter 0
  1809 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
 
  1955 label *label296
  1956 set *tmp534 null
  1957 label *label297
-    * set *tmp532 *tmp534
  1958 jump *label295 always
  1959 label *label294
-    * set *tmp532 null
  1960 label *label295
  1961 op equal *tmp535 :displayBaseMap:counter :displayBaseMap:limit
  1962 jump *label298 equal *tmp535 false
 
  1973 draw scale *tmp538 *tmp540
  1974 label *label301
  1975 set :displayBaseMap:counter 0
-    * set *tmp536 :displayBaseMap:counter
  1976 jump *label299 always
  1977 label *label298
  1978 set *tmp541 :displayBaseMap:counter
  1979 op add :displayBaseMap:counter :displayBaseMap:counter 1
-    * set *tmp536 *tmp541
  1980 label *label299
  1981 set :drawBlock:cfg :displayBaseMap:cfg
  1982 setaddr :drawBlock*retaddr *label302 (h:*label302)
 
  1992 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1993 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1994 label *label305
-    * set *tmp543 null
  1995 jump *label304 always
  1996 label *label303
-    * set *tmp543 null
  1997 label *label304
  1998 sensor *tmp546 switch1 @enabled
  1999 jump *label306 equal *tmp546 false
  2000 draw clear 0 0 32
  2001 drawflush display1
  2002 jump *label258 always
-    * set *tmp547 null
  2003 jump *label307 always
  2004 label *label306
-    * set *tmp547 null
  2005 label *label307
  2006 drawflush display1
  2007 label *label257
 
  2060 draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
  2061 label *label314
  2062 set .lastRecord :displayLog:start
-    * set *tmp560 .lastRecord
  2063 jump *label310 always
  2064 label *label309
-    * set *tmp560 null
  2065 label *label310
  2066 setaddr :drawHeader*retaddr *label315 (h:*label315)
  2067 call *label4 *invalid :drawHeader*retval (m:*label315) (h:*label315)
 
  2133 sensor *tmp590 switch1 @enabled
  2134 jump *label325 equal *tmp590 false
  2135 jump *label318 always
-    * set *tmp591 null
  2136 jump *label326 always
  2137 label *label325
-    * set *tmp591 null
  2138 label *label326
  2139 label *label317
  2140 op sub :displayLog:position :displayLog:position 1
 
  2150 label *label218
  2151 set *tmp49 *tmp500
  2152 label *label19
-    * set *tmp47 *tmp49
  2153 jump *label17 always
  2154 label *label16
-    * set *tmp47 null
  2155 label *label17
  2156 op greaterThan *tmp593 .megas 0
  2157 jump *label327 equal *tmp593 false
  2158 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  2159 print "\n"
  2160 printflush message1
-    * set *tmp594 null
  2161 jump *label328 always
  2162 label *label327
  2163 print "[gold]Building "
 
  2180 print "\n"
  2181 printflush message1
  2182 label *label329
-    * set *tmp594 null
  2183 label *label328
  2184 sensor *tmp597 switch1 @enabled
  2185 set .pageSwitched *tmp597
 
  2191 drawflush null
  2192 draw reset
  2193 draw clear 0 0 32
-    * set *tmp598 null
  2194 jump *label331 always
  2195 label *label330
-    * set *tmp598 null
  2196 label *label331
  2197 label *label14
  2198 jump *label13 always
 
  2250 label *label337
  2251 draw col %[white]
  2252 draw reset
-    * set *tmp603 null
  2253 jump *label334 always
  2254 label *label333
  2255 draw col %[gold]
 
  2274 jump *label343 equal .missing false
  2275 draw image 16 264 .missing 12 0
  2276 set .missing false
-    * set *tmp612 false
  2277 jump *label344 always
  2278 label *label343
-    * set *tmp612 null
  2279 label *label344
  2280 jump *label345 equal .nextMultiReco false
  2281 draw image 42 237 .nextMultiReco 32 0
-    * set *tmp613 null
  2282 jump *label346 always
  2283 label *label345
  2284 op add *tmp614 .nextBlock .nextFactory
 
  2310 jump *label357 equal *tmp621 false
  2311 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2312 op add :drawHeader:x :drawHeader:x 30
-    * set *tmp622 :drawHeader:x
  2313 jump *label358 always
  2314 label *label357
-    * set *tmp622 null
  2315 label *label358
  2316 label *label352
  2317 multijump *tmp620 0 0 (m:marker3)
 
  2337 jump *label367 equal *tmp626 false
  2338 draw image 42 237 :drawHeader:goal.1 32 0
  2339 jump *label363 always
-    * set *tmp627 null
  2340 jump *label368 always
  2341 label *label367
-    * set *tmp627 null
  2342 label *label368
  2343 label *label362
  2344 multijump *tmp625 0 0 (m:marker4)
 
  2353 label *label350
  2354 set *tmp617 *tmp619
  2355 label *label348
-    * set *tmp613 *tmp617
  2356 label *label346
  2357 set :drawHeader:tt @second
  2358 read *tmp0 processor1 "time"
 
  2426 op mul *tmp651 7 :drawHeader:len
  2427 op sub *tmp652 *tmp650 *tmp651
  2428 draw image *tmp652 246 @sand 12 0
-    * set *tmp640 null
  2429 jump *label373 always
  2430 label *label372
  2431 jump *label376 equal .titaniumDrill false
 
  2447 op mul *tmp659 7 :drawHeader:len.1
  2448 op sub *tmp660 *tmp658 *tmp659
  2449 draw image *tmp660 246 @titanium 12 0
-    * set *tmp653 null
  2450 jump *label377 always
  2451 label *label376
-    * set *tmp653 null
  2452 label *label377
  2453 jump *label379 equal .thoriumContainer false
  2454 sensor *tmp662 .thoriumContainer @thorium
 
  2473 label *label379
  2474 set *tmp661 null
  2475 label *label380
-    * set *tmp640 *tmp661
  2476 label *label373
  2477 set :drawHeader:x.4 174
  2478 draw col %[white]
 
  2490 draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
  2491 label *label385
  2492 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp669 :drawHeader:x.4
  2493 jump *label384 always
  2494 label *label383
-    * set *tmp669 null
  2495 label *label384
  2496 label *label382
  2497 set :drawUnitCount.1:type @mono
 
  2508 draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
  2509 label *label389
  2510 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp672 :drawHeader:x.4
  2511 jump *label388 always
  2512 label *label387
-    * set *tmp672 null
  2513 label *label388
  2514 label *label386
  2515 set :drawUnitCount.2:type @flare
 
  2526 draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
  2527 label *label393
  2528 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * set *tmp675 :drawHeader:x.4
  2529 jump *label392 always
  2530 label *label391
-    * set *tmp675 null
  2531 label *label392
  2532 label *label390
-    * set *tmp603 null
  2533 label *label334
  2534 label *label332
  2535 return :drawHeader*retaddr
 
  2567 op sub *tmp694 *tmp693 74
  2568 set :unpackCfg:ind *tmp694
  2569 sensor *tmp695 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp695
  2570 sensor *tmp696 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp696
  2571 sensor *tmp697 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp697
  2572 sensor *tmp698 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp698
  2573 sensor *tmp699 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp699
  2574 sensor *tmp700 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp700
  2575 sensor *tmp701 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp701
  2576 sensor *tmp702 :unpackCfg:type @size
  2577 set :unpackCfg:size *tmp702
  2578 label *label396
 
  2596 op equal *tmp706 *tmp705 0
  2597 jump *label397 equal *tmp706 false
  2598 jump *label394 always
-    * set *tmp707 null
  2599 jump *label398 always
  2600 label *label397
-    * set *tmp707 null
  2601 label *label398
  2602 jump *label399 equal :drawBlock:built false
  2603 set *tmp708 %[white]

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   339 op lessThanEq *tmp133 :drawMaterials:count 0
   340 jump *label72 equal *tmp133 false
   341 jump *label55 always
-    * set *tmp134 null
   342 jump *label73 always
   343 label *label72
-    * set *tmp134 null
   344 label *label73
   345 jump *label64 always
   346 label *label63
 
   361 label *label74
   362 label *label75
   363 op sub :updateDisplay:y :updateDisplay:y 5
-    * set *tmp104 :updateDisplay:y
   364 jump *label47 always
   365 label *label46
-    * set *tmp104 null
   366 label *label47
   367 label *label35
   368 label *label33
 
   473 label *label86
   474 set :updateDisplay:y :drawItem.2:y
   475 op sub :updateDisplay:y :updateDisplay:y 15
-    * set *tmp145 :updateDisplay:y
   476 jump *label85 always
   477 label *label84
   478 sensor *tmp169 A¾BFLW-air-factory13 @lead
 
   627 set :drawItem.4:y :drawItemColor.4:y
   628 label *label100
   629 set :updateDisplay:y :drawItem.4:y
-    * set *tmp145 null
   630 label *label85
   631 jump *label83 always
   632 label *label82
 
  1629 label *label31
  1630 set *tmp51 null
  1631 label *label21
-    * set *tmp49 *tmp51
  1632 jump *label19 always
  1633 label *label18
  1634 op equal *tmp499 .page 1
 
  1943 op equal *tmp533 .scrap false
  1944 jump *label296 equal *tmp533 false
  1945 jump *label258 always
-    * set *tmp534 null
  1946 jump *label297 always
  1947 label *label296
-    * set *tmp534 null
  1948 label *label297
  1949 jump *label295 always
  1950 label *label294
 
  1966 set :displayBaseMap:counter 0
  1967 jump *label299 always
  1968 label *label298
-    * set *tmp541 :displayBaseMap:counter
  1969 op add :displayBaseMap:counter :displayBaseMap:counter 1
  1970 label *label299
  1971 set :drawBlock:cfg :displayBaseMap:cfg
 
  2138 label *label246
  2139 set *tmp500 *tmp519
  2140 label *label218
-    * set *tmp49 *tmp500
  2141 label *label19
  2142 jump *label17 always
  2143 label *label16
 
  2278 draw image 22 244 .nextBlock 18 0
  2279 draw image 42 244 .nextFactory 18 0
  2280 draw image 62 244 .nextAddReco 18 0
-    * set *tmp617 null
  2281 jump *label348 always
  2282 label *label347
  2283 op equal *tmp618 :drawHeader:count 2
 
  2339 label *label360
  2340 set *tmp619 *tmp624
  2341 label *label350
-    * set *tmp617 *tmp619
  2342 label *label348
  2343 label *label346
  2344 set :drawHeader:tt @second
 
  2455 op mul *tmp666 7 :drawHeader:len.2
  2456 op sub *tmp667 *tmp665 *tmp666
  2457 draw image *tmp667 246 @thorium 12 0
-    * set *tmp661 null
  2458 jump *label380 always
  2459 label *label379
-    * set *tmp661 null
  2460 label *label380
  2461 label *label373
  2462 set :drawHeader:x.4 174
 
  2551 read *tmp693 :unpackCfg:cfg *tmp692
  2552 op sub *tmp694 *tmp693 74
  2553 set :unpackCfg:ind *tmp694
-    * sensor *tmp695 :unpackCfg:type @copper
-    * sensor *tmp696 :unpackCfg:type @lead
-    * sensor *tmp697 :unpackCfg:type @graphite
-    * sensor *tmp698 :unpackCfg:type @silicon
-    * sensor *tmp699 :unpackCfg:type @titanium
-    * sensor *tmp700 :unpackCfg:type @metaglass
-    * sensor *tmp701 :unpackCfg:type @thorium
  2554 sensor *tmp702 :unpackCfg:type @size
  2555 set :unpackCfg:size *tmp702
  2556 label *label396

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
    85 drawflush display1
    86 op add .animation .animation 1
    87 label *label22
-    * set *tmp51 null
    88 jump *label21 always
    89 label *label20
    90 draw clear 0 0 32
 
  1626 label *label203
  1627 drawflush display1
  1628 label *label31
-    * set *tmp51 null
  1629 label *label21
  1630 jump *label19 always
  1631 label *label18
 
  1743 drawflush display1
  1744 op add .lastTail .lastTail 1
  1745 label *label219
-    * set *tmp500 null
  1746 jump *label218 always
  1747 label *label217
  1748 op equal *tmp518 .page 2
 
  2133 label *label308
  2134 set *tmp519 null
  2135 label *label246
-    * set *tmp500 *tmp519
  2136 label *label218
  2137 label *label19
  2138 jump *label17 always
 
  2301 multijump *tmp620 0 0 (m:marker3)
  2302 multilabel *label356 (m:marker3)
  2303 label *label353
-    * set *tmp619 null
  2304 jump *label350 always
  2305 label *label349
  2306 op equal *tmp623 :drawHeader:count 1
 
  2332 label *label359
  2333 set *tmp624 null
  2334 label *label360
-    * set *tmp619 *tmp624
  2335 label *label350
  2336 label *label348
  2337 label *label346

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1996 multilabel *label293 (m:marker2)
  1997 label *label258
  1998 label *label247
-    * set *tmp519 null
  1999 jump *label246 always
  2000 label *label245
  2001 op sub *tmp548 .page 3
 
  2130 set .lastRecord *tmp592
  2131 drawflush display1
  2132 label *label308
-    * set *tmp519 null
  2133 label *label246
  2134 label *label218
  2135 label *label19
 
  2325 multijump *tmp625 0 0 (m:marker4)
  2326 multilabel *label366 (m:marker4)
  2327 label *label363
-    * set *tmp624 null
  2328 jump *label360 always
  2329 label *label359
-    * set *tmp624 null
  2330 label *label360
  2331 label *label350
  2332 label *label348

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-192 instructions):
 
    14 label *label8
    15 label *label10
    16 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 *tmp40
-    * set .core *tmp40
+   17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    18 label *label11
    19 op equal *tmp44 .core null
    20 jump *label10 notEqual *tmp44 false
 
    40 draw col %[white]
    41 op div *tmp54 .animation 30
    42 op min *tmp55 *tmp54 1
-    * op max *tmp56 0 *tmp55
-    * set :animate:ratio *tmp56
+   43 op max :animate:ratio 0 *tmp55
    44 set :lerp:from 42
    45 set :lerp:to 90
    46 set :lerp:ratio :animate:ratio
    47 op sub *tmp58 1 :lerp:ratio
    48 op mul *tmp59 *tmp58 :lerp:from
    49 op mul *tmp60 :lerp:ratio :lerp:to
-    * op add *tmp61 *tmp59 *tmp60
-    * set *tmp57 *tmp61
+   50 op add *tmp57 *tmp59 *tmp60
    51 label *label25
    52 set :animate:x *tmp57
    53 set :lerp.1:from 237
 
    56 op sub *tmp63 1 :lerp.1:ratio
    57 op mul *tmp64 *tmp63 :lerp.1:from
    58 op mul *tmp65 :lerp.1:ratio :lerp.1:to
-    * op add *tmp66 *tmp64 *tmp65
-    * set *tmp62 *tmp66
+   59 op add *tmp62 *tmp64 *tmp65
    60 label *label26
    61 set :animate:y *tmp62
    62 set :lerp.2:from 32
 
    65 op sub *tmp68 1 :lerp.2:ratio
    66 op mul *tmp69 *tmp68 :lerp.2:from
    67 op mul *tmp70 :lerp.2:ratio :lerp.2:to
-    * op add *tmp71 *tmp69 *tmp70
-    * set *tmp67 *tmp71
+   68 op add *tmp67 *tmp69 *tmp70
    69 label *label27
    70 set :animate:size *tmp67
    71 draw image :animate:x :animate:y @mega :animate:size 0
 
   113 set :drawItem:y :updateDisplay:y
   114 set :drawItem:columns 1
   115 set :drawItem:item .nextBlock
-    * read *tmp16 processor3 ".mapProgress"
-    * set :drawItem:current *tmp16
-    * read *tmp17 processor3 ".mapTotal"
-    * set :drawItem:target *tmp17
+  116 read :drawItem:current processor3 ".mapProgress"
+  117 read :drawItem:target processor3 ".mapTotal"
   118 set :drawItemColor:color1 %008000FF
   119 set :drawItemColor:color2 %00FF00FF
   120 set :drawItemColor:col :drawItem:col
 
   125 set :drawItemColor:target :drawItem:target
   126 op mul *tmp79 :drawItemColor:columns 176
   127 op div *tmp80 *tmp79 2
-    * op sub *tmp81 214 *tmp80
-    * set :drawItemColor:barLength *tmp81
-    * op add *tmp82 48 :drawItemColor:barLength
-    * set :drawItemColor:textEnd *tmp82
+  128 op sub :drawItemColor:barLength 214 *tmp80
+  129 op add :drawItemColor:textEnd 48 :drawItemColor:barLength
   130 op mul *tmp83 :drawItemColor:barLength :drawItemColor:current
   131 op div *tmp84 *tmp83 :drawItemColor:target
-    * op min *tmp85 :drawItemColor:barLength *tmp84
-    * set :drawItemColor:length *tmp85
+  132 op min :drawItemColor:length :drawItemColor:barLength *tmp84
   133 op mul *tmp86 :drawItemColor:col 176
   134 op div *tmp87 *tmp86 2
-    * op add *tmp88 11 *tmp87
-    * set :drawItemColor:iconX *tmp88
+  135 op add :drawItemColor:iconX 11 *tmp87
   136 op mul *tmp89 :drawItemColor:col 176
   137 op div *tmp90 *tmp89 2
-    * op add *tmp91 22 *tmp90
-    * set :drawItemColor:barX *tmp91
+  138 op add :drawItemColor:barX 22 *tmp90
   139 op mul *tmp92 :drawItemColor:col 176
   140 op div *tmp93 *tmp92 2
-    * op add *tmp94 :drawItemColor:textEnd *tmp93
-    * set :drawItemColor:textX *tmp94
+  141 op add :drawItemColor:textX :drawItemColor:textEnd *tmp93
   142 draw col %[white]
   143 op add *tmp95 :drawItemColor:y 5
   144 draw image :drawItemColor:iconX *tmp95 :drawItemColor:item 16 0
 
   159 print *tmp98
   160 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   161 label *label42
-    * op add *tmp99 :drawBold:x 1
-    * set :drawText.3:x *tmp99
+  162 op add :drawText.3:x :drawBold:x 1
   163 set :drawText.3:y :drawBold:y
   164 set :drawText.3:alignment :drawBold:alignment
   165 print "x"
 
   186 label *label34
   187 op notEqual *tmp103 .nextBlock null
   188 jump *label46 equal *tmp103 false
-    * set *tmp105 .totalTargets
-    * set :drawMaterials:count *tmp105
+  189 set :drawMaterials:count .totalTargets
   190 set :drawTitleRow.1:y :updateDisplay:y
   191 set :drawTitleRow.1:alignment @bottomLeft
   192 set :drawText.4:x 22
 
   259 set :drawItemColor.1:target :drawItem.1:target
   260 op mul *tmp111 :drawItemColor.1:columns 176
   261 op div *tmp112 *tmp111 2
-    * op sub *tmp113 214 *tmp112
-    * set :drawItemColor.1:barLength *tmp113
-    * op add *tmp114 48 :drawItemColor.1:barLength
-    * set :drawItemColor.1:textEnd *tmp114
+  262 op sub :drawItemColor.1:barLength 214 *tmp112
+  263 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
   264 op mul *tmp115 :drawItemColor.1:barLength :drawItemColor.1:current
   265 op div *tmp116 *tmp115 :drawItemColor.1:target
-    * op min *tmp117 :drawItemColor.1:barLength *tmp116
-    * set :drawItemColor.1:length *tmp117
+  266 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
   267 op mul *tmp118 :drawItemColor.1:col 176
   268 op div *tmp119 *tmp118 2
-    * op add *tmp120 11 *tmp119
-    * set :drawItemColor.1:iconX *tmp120
+  269 op add :drawItemColor.1:iconX 11 *tmp119
   270 op mul *tmp121 :drawItemColor.1:col 176
   271 op div *tmp122 *tmp121 2
-    * op add *tmp123 22 *tmp122
-    * set :drawItemColor.1:barX *tmp123
+  272 op add :drawItemColor.1:barX 22 *tmp122
   273 op mul *tmp124 :drawItemColor.1:col 176
   274 op div *tmp125 *tmp124 2
-    * op add *tmp126 :drawItemColor.1:textEnd *tmp125
-    * set :drawItemColor.1:textX *tmp126
+  275 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp125
   276 draw col %[white]
   277 op add *tmp127 :drawItemColor.1:y 5
   278 draw image :drawItemColor.1:iconX *tmp127 :drawItemColor.1:item 16 0
 
   291 print :drawMaterials:target
   292 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   293 label *label68
-    * op add *tmp130 :drawBold.1:x 1
-    * set :drawText.7:x *tmp130
+  294 op add :drawText.7:x :drawBold.1:x 1
   295 set :drawText.7:y :drawBold.1:y
   296 set :drawText.7:alignment :drawBold.1:alignment
   297 print :drawMaterials:target
 
   367 op sub :drawTitleRow.2:y :drawTitleRow.2:y 15
   368 label *label79
   369 set :updateDisplay:y :drawTitleRow.2:y
-    * sensor *tmp141 A¾BFLW-air-factory13 @progress
-    * set :drawAirFactory:progress *tmp141
+  370 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   371 op equal *tmp142 :drawAirFactory:progress 0
   372 jump *label82 equal *tmp142 false
   373 op equal *tmp144 .nextFactory @flare
 
   389 set :drawItemColor.2:target :drawItem.2:target
   390 op mul *tmp147 :drawItemColor.2:columns 176
   391 op div *tmp148 *tmp147 2
-    * op sub *tmp149 214 *tmp148
-    * set :drawItemColor.2:barLength *tmp149
-    * op add *tmp150 48 :drawItemColor.2:barLength
-    * set :drawItemColor.2:textEnd *tmp150
+  392 op sub :drawItemColor.2:barLength 214 *tmp148
+  393 op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
   394 op mul *tmp151 :drawItemColor.2:barLength :drawItemColor.2:current
   395 op div *tmp152 *tmp151 :drawItemColor.2:target
-    * op min *tmp153 :drawItemColor.2:barLength *tmp152
-    * set :drawItemColor.2:length *tmp153
+  396 op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
   397 op mul *tmp154 :drawItemColor.2:col 176
   398 op div *tmp155 *tmp154 2
-    * op add *tmp156 11 *tmp155
-    * set :drawItemColor.2:iconX *tmp156
+  399 op add :drawItemColor.2:iconX 11 *tmp155
   400 op mul *tmp157 :drawItemColor.2:col 176
   401 op div *tmp158 *tmp157 2
-    * op add *tmp159 22 *tmp158
-    * set :drawItemColor.2:barX *tmp159
+  402 op add :drawItemColor.2:barX 22 *tmp158
   403 op mul *tmp160 :drawItemColor.2:col 176
   404 op div *tmp161 *tmp160 2
-    * op add *tmp162 :drawItemColor.2:textEnd *tmp161
-    * set :drawItemColor.2:textX *tmp162
+  405 op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp161
   406 draw col %[white]
   407 op add *tmp163 :drawItemColor.2:y 5
   408 draw image :drawItemColor.2:iconX *tmp163 :drawItemColor.2:item 16 0
 
   421 print 15
   422 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   423 label *label89
-    * op add *tmp166 :drawBold.2:x 1
-    * set :drawText.11:x *tmp166
+  424 op add :drawText.11:x :drawBold.2:x 1
   425 set :drawText.11:y :drawBold.2:y
   426 set :drawText.11:alignment :drawBold.2:alignment
   427 print 15
 
   461 set :drawItemColor.3:target :drawItem.3:target
   462 op mul *tmp170 :drawItemColor.3:columns 176
   463 op div *tmp171 *tmp170 2
-    * op sub *tmp172 214 *tmp171
-    * set :drawItemColor.3:barLength *tmp172
-    * op add *tmp173 48 :drawItemColor.3:barLength
-    * set :drawItemColor.3:textEnd *tmp173
+  464 op sub :drawItemColor.3:barLength 214 *tmp171
+  465 op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
   466 op mul *tmp174 :drawItemColor.3:barLength :drawItemColor.3:current
   467 op div *tmp175 *tmp174 :drawItemColor.3:target
-    * op min *tmp176 :drawItemColor.3:barLength *tmp175
-    * set :drawItemColor.3:length *tmp176
+  468 op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
   469 op mul *tmp177 :drawItemColor.3:col 176
   470 op div *tmp178 *tmp177 2
-    * op add *tmp179 11 *tmp178
-    * set :drawItemColor.3:iconX *tmp179
+  471 op add :drawItemColor.3:iconX 11 *tmp178
   472 op mul *tmp180 :drawItemColor.3:col 176
   473 op div *tmp181 *tmp180 2
-    * op add *tmp182 22 *tmp181
-    * set :drawItemColor.3:barX *tmp182
+  474 op add :drawItemColor.3:barX 22 *tmp181
   475 op mul *tmp183 :drawItemColor.3:col 176
   476 op div *tmp184 *tmp183 2
-    * op add *tmp185 :drawItemColor.3:textEnd *tmp184
-    * set :drawItemColor.3:textX *tmp185
+  477 op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp184
   478 draw col %[white]
   479 op add *tmp186 :drawItemColor.3:y 5
   480 draw image :drawItemColor.3:iconX *tmp186 :drawItemColor.3:item 16 0
 
   493 print 15
   494 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   495 label *label96
-    * op add *tmp189 :drawBold.3:x 1
-    * set :drawText.13:x *tmp189
+  496 op add :drawText.13:x :drawBold.3:x 1
   497 set :drawText.13:y :drawBold.3:y
   498 set :drawText.13:alignment :drawBold.3:alignment
   499 print 15
 
   530 set :drawItemColor.4:target :drawItem.4:target
   531 op mul *tmp193 :drawItemColor.4:columns 176
   532 op div *tmp194 *tmp193 2
-    * op sub *tmp195 214 *tmp194
-    * set :drawItemColor.4:barLength *tmp195
-    * op add *tmp196 48 :drawItemColor.4:barLength
-    * set :drawItemColor.4:textEnd *tmp196
+  533 op sub :drawItemColor.4:barLength 214 *tmp194
+  534 op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
   535 op mul *tmp197 :drawItemColor.4:barLength :drawItemColor.4:current
   536 op div *tmp198 *tmp197 :drawItemColor.4:target
-    * op min *tmp199 :drawItemColor.4:barLength *tmp198
-    * set :drawItemColor.4:length *tmp199
+  537 op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
   538 op mul *tmp200 :drawItemColor.4:col 176
   539 op div *tmp201 *tmp200 2
-    * op add *tmp202 11 *tmp201
-    * set :drawItemColor.4:iconX *tmp202
+  540 op add :drawItemColor.4:iconX 11 *tmp201
   541 op mul *tmp203 :drawItemColor.4:col 176
   542 op div *tmp204 *tmp203 2
-    * op add *tmp205 22 *tmp204
-    * set :drawItemColor.4:barX *tmp205
+  543 op add :drawItemColor.4:barX 22 *tmp204
   544 op mul *tmp206 :drawItemColor.4:col 176
   545 op div *tmp207 *tmp206 2
-    * op add *tmp208 :drawItemColor.4:textEnd *tmp207
-    * set :drawItemColor.4:textX *tmp208
+  546 op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp207
   547 draw col %[white]
   548 op add *tmp209 :drawItemColor.4:y 5
   549 draw image :drawItemColor.4:iconX *tmp209 :drawItemColor.4:item 16 0
 
   562 print 30
   563 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   564 label *label103
-    * op add *tmp212 :drawBold.4:x 1
-    * set :drawText.15:x *tmp212
+  565 op add :drawText.15:x :drawBold.4:x 1
   566 set :drawText.15:y :drawBold.4:y
   567 set :drawText.15:alignment :drawBold.4:alignment
   568 print 30
 
   603 set :drawItemColor.5:target :drawItem.5:target
   604 op mul *tmp217 :drawItemColor.5:columns 176
   605 op div *tmp218 *tmp217 2
-    * op sub *tmp219 214 *tmp218
-    * set :drawItemColor.5:barLength *tmp219
-    * op add *tmp220 48 :drawItemColor.5:barLength
-    * set :drawItemColor.5:textEnd *tmp220
+  606 op sub :drawItemColor.5:barLength 214 *tmp218
+  607 op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
   608 op mul *tmp221 :drawItemColor.5:barLength :drawItemColor.5:current
   609 op div *tmp222 *tmp221 :drawItemColor.5:target
-    * op min *tmp223 :drawItemColor.5:barLength *tmp222
-    * set :drawItemColor.5:length *tmp223
+  610 op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
   611 op mul *tmp224 :drawItemColor.5:col 176
   612 op div *tmp225 *tmp224 2
-    * op add *tmp226 11 *tmp225
-    * set :drawItemColor.5:iconX *tmp226
+  613 op add :drawItemColor.5:iconX 11 *tmp225
   614 op mul *tmp227 :drawItemColor.5:col 176
   615 op div *tmp228 *tmp227 2
-    * op add *tmp229 22 *tmp228
-    * set :drawItemColor.5:barX *tmp229
+  616 op add :drawItemColor.5:barX 22 *tmp228
   617 op mul *tmp230 :drawItemColor.5:col 176
   618 op div *tmp231 *tmp230 2
-    * op add *tmp232 :drawItemColor.5:textEnd *tmp231
-    * set :drawItemColor.5:textX *tmp232
+  619 op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp231
   620 draw col %[white]
   621 op add *tmp233 :drawItemColor.5:y 5
   622 draw image :drawItemColor.5:iconX *tmp233 :drawItemColor.5:item 16 0
 
   636 print "%"
   637 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   638 label *label110
-    * op add *tmp236 :drawBold.5:x 1
-    * set :drawText.17:x *tmp236
+  639 op add :drawText.17:x :drawBold.5:x 1
   640 set :drawText.17:y :drawBold.5:y
   641 set :drawText.17:alignment :drawBold.5:alignment
   642 print *tmp216
 
   685 op sub :drawTitleRow.3:y :drawTitleRow.3:y 15
   686 label *label117
   687 set :updateDisplay:y :drawTitleRow.3:y
-    * sensor *tmp241 AÀF@Lb-additive-reconstructor24 @progress
-    * set :drawAddReco:progress *tmp241
+  688 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   689 op equal *tmp242 :drawAddReco:progress 0
   690 jump *label120 equal *tmp242 false
   691 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
 
   705 set :drawItemColor.6:target :drawItem.6:target
   706 op mul *tmp245 :drawItemColor.6:columns 176
   707 op div *tmp246 *tmp245 2
-    * op sub *tmp247 214 *tmp246
-    * set :drawItemColor.6:barLength *tmp247
-    * op add *tmp248 48 :drawItemColor.6:barLength
-    * set :drawItemColor.6:textEnd *tmp248
+  708 op sub :drawItemColor.6:barLength 214 *tmp246
+  709 op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
   710 op mul *tmp249 :drawItemColor.6:barLength :drawItemColor.6:current
   711 op div *tmp250 *tmp249 :drawItemColor.6:target
-    * op min *tmp251 :drawItemColor.6:barLength *tmp250
-    * set :drawItemColor.6:length *tmp251
+  712 op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
   713 op mul *tmp252 :drawItemColor.6:col 176
   714 op div *tmp253 *tmp252 2
-    * op add *tmp254 11 *tmp253
-    * set :drawItemColor.6:iconX *tmp254
+  715 op add :drawItemColor.6:iconX 11 *tmp253
   716 op mul *tmp255 :drawItemColor.6:col 176
   717 op div *tmp256 *tmp255 2
-    * op add *tmp257 22 *tmp256
-    * set :drawItemColor.6:barX *tmp257
+  718 op add :drawItemColor.6:barX 22 *tmp256
   719 op mul *tmp258 :drawItemColor.6:col 176
   720 op div *tmp259 *tmp258 2
-    * op add *tmp260 :drawItemColor.6:textEnd *tmp259
-    * set :drawItemColor.6:textX *tmp260
+  721 op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp259
   722 draw col %[white]
   723 op add *tmp261 :drawItemColor.6:y 5
   724 draw image :drawItemColor.6:iconX *tmp261 :drawItemColor.6:item 16 0
 
   737 print 40
   738 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   739 label *label125
-    * op add *tmp264 :drawBold.6:x 1
-    * set :drawText.21:x *tmp264
+  740 op add :drawText.21:x :drawBold.6:x 1
   741 set :drawText.21:y :drawBold.6:y
   742 set :drawText.21:alignment :drawBold.6:alignment
   743 print 40
 
   774 set :drawItemColor.7:target :drawItem.7:target
   775 op mul *tmp268 :drawItemColor.7:columns 176
   776 op div *tmp269 *tmp268 2
-    * op sub *tmp270 214 *tmp269
-    * set :drawItemColor.7:barLength *tmp270
-    * op add *tmp271 48 :drawItemColor.7:barLength
-    * set :drawItemColor.7:textEnd *tmp271
+  777 op sub :drawItemColor.7:barLength 214 *tmp269
+  778 op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
   779 op mul *tmp272 :drawItemColor.7:barLength :drawItemColor.7:current
   780 op div *tmp273 *tmp272 :drawItemColor.7:target
-    * op min *tmp274 :drawItemColor.7:barLength *tmp273
-    * set :drawItemColor.7:length *tmp274
+  781 op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
   782 op mul *tmp275 :drawItemColor.7:col 176
   783 op div *tmp276 *tmp275 2
-    * op add *tmp277 11 *tmp276
-    * set :drawItemColor.7:iconX *tmp277
+  784 op add :drawItemColor.7:iconX 11 *tmp276
   785 op mul *tmp278 :drawItemColor.7:col 176
   786 op div *tmp279 *tmp278 2
-    * op add *tmp280 22 *tmp279
-    * set :drawItemColor.7:barX *tmp280
+  787 op add :drawItemColor.7:barX 22 *tmp279
   788 op mul *tmp281 :drawItemColor.7:col 176
   789 op div *tmp282 *tmp281 2
-    * op add *tmp283 :drawItemColor.7:textEnd *tmp282
-    * set :drawItemColor.7:textX *tmp283
+  790 op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp282
   791 draw col %[white]
   792 op add *tmp284 :drawItemColor.7:y 5
   793 draw image :drawItemColor.7:iconX *tmp284 :drawItemColor.7:item 16 0
 
   806 print 40
   807 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   808 label *label132
-    * op add *tmp287 :drawBold.7:x 1
-    * set :drawText.23:x *tmp287
+  809 op add :drawText.23:x :drawBold.7:x 1
   810 set :drawText.23:y :drawBold.7:y
   811 set :drawText.23:alignment :drawBold.7:alignment
   812 print 40
 
   846 set :drawItemColor.8:target :drawItem.8:target
   847 op mul *tmp292 :drawItemColor.8:columns 176
   848 op div *tmp293 *tmp292 2
-    * op sub *tmp294 214 *tmp293
-    * set :drawItemColor.8:barLength *tmp294
-    * op add *tmp295 48 :drawItemColor.8:barLength
-    * set :drawItemColor.8:textEnd *tmp295
+  849 op sub :drawItemColor.8:barLength 214 *tmp293
+  850 op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
   851 op mul *tmp296 :drawItemColor.8:barLength :drawItemColor.8:current
   852 op div *tmp297 *tmp296 :drawItemColor.8:target
-    * op min *tmp298 :drawItemColor.8:barLength *tmp297
-    * set :drawItemColor.8:length *tmp298
+  853 op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
   854 op mul *tmp299 :drawItemColor.8:col 176
   855 op div *tmp300 *tmp299 2
-    * op add *tmp301 11 *tmp300
-    * set :drawItemColor.8:iconX *tmp301
+  856 op add :drawItemColor.8:iconX 11 *tmp300
   857 op mul *tmp302 :drawItemColor.8:col 176
   858 op div *tmp303 *tmp302 2
-    * op add *tmp304 22 *tmp303
-    * set :drawItemColor.8:barX *tmp304
+  859 op add :drawItemColor.8:barX 22 *tmp303
   860 op mul *tmp305 :drawItemColor.8:col 176
   861 op div *tmp306 *tmp305 2
-    * op add *tmp307 :drawItemColor.8:textEnd *tmp306
-    * set :drawItemColor.8:textX *tmp307
+  862 op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp306
   863 draw col %[white]
   864 op add *tmp308 :drawItemColor.8:y 5
   865 draw image :drawItemColor.8:iconX *tmp308 :drawItemColor.8:item 16 0
 
   879 print "%"
   880 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   881 label *label139
-    * op add *tmp311 :drawBold.8:x 1
-    * set :drawText.25:x *tmp311
+  882 op add :drawText.25:x :drawBold.8:x 1
   883 set :drawText.25:y :drawBold.8:y
   884 set :drawText.25:alignment :drawBold.8:alignment
   885 print *tmp291
 
   911 label *label144
   912 label *label145
   913 draw col %[white]
-    * op min *tmp316 :updateDisplay:y 142
-    * set :updateDisplay:y *tmp316
+  914 op min :updateDisplay:y :updateDisplay:y 142
   915 set :drawTitleRow.4:y :updateDisplay:y
   916 set :drawTitleRow.4:alignment @bottomLeft
   917 set :drawText.26:x 22
 
   929 op sub :drawTitleRow.4:y :drawTitleRow.4:y 15
   930 label *label146
   931 set :updateDisplay:y :drawTitleRow.4:y
-    * sensor *tmp317 AÁNBJc-multiplicative-reconstructor25 @progress
-    * set :drawMultiReco:progress *tmp317
+  932 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   933 op equal *tmp318 :drawMultiReco:progress 0
   934 jump *label149 equal *tmp318 false
   935 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
 
   949 set :drawItemColor.9:target :drawItem.9:target
   950 op mul *tmp321 :drawItemColor.9:columns 176
   951 op div *tmp322 *tmp321 2
-    * op sub *tmp323 214 *tmp322
-    * set :drawItemColor.9:barLength *tmp323
-    * op add *tmp324 48 :drawItemColor.9:barLength
-    * set :drawItemColor.9:textEnd *tmp324
+  952 op sub :drawItemColor.9:barLength 214 *tmp322
+  953 op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
   954 op mul *tmp325 :drawItemColor.9:barLength :drawItemColor.9:current
   955 op div *tmp326 *tmp325 :drawItemColor.9:target
-    * op min *tmp327 :drawItemColor.9:barLength *tmp326
-    * set :drawItemColor.9:length *tmp327
+  956 op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
   957 op mul *tmp328 :drawItemColor.9:col 176
   958 op div *tmp329 *tmp328 2
-    * op add *tmp330 11 *tmp329
-    * set :drawItemColor.9:iconX *tmp330
+  959 op add :drawItemColor.9:iconX 11 *tmp329
   960 op mul *tmp331 :drawItemColor.9:col 176
   961 op div *tmp332 *tmp331 2
-    * op add *tmp333 22 *tmp332
-    * set :drawItemColor.9:barX *tmp333
+  962 op add :drawItemColor.9:barX 22 *tmp332
   963 op mul *tmp334 :drawItemColor.9:col 176
   964 op div *tmp335 *tmp334 2
-    * op add *tmp336 :drawItemColor.9:textEnd *tmp335
-    * set :drawItemColor.9:textX *tmp336
+  965 op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp335
   966 draw col %[white]
   967 op add *tmp337 :drawItemColor.9:y 5
   968 draw image :drawItemColor.9:iconX *tmp337 :drawItemColor.9:item 16 0
 
   981 print 40
   982 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   983 label *label154
-    * op add *tmp340 :drawBold.9:x 1
-    * set :drawText.29:x *tmp340
+  984 op add :drawText.29:x :drawBold.9:x 1
   985 set :drawText.29:y :drawBold.9:y
   986 set :drawText.29:alignment :drawBold.9:alignment
   987 print 40
 
  1018 set :drawItemColor.10:target :drawItem.10:target
  1019 op mul *tmp344 :drawItemColor.10:columns 176
  1020 op div *tmp345 *tmp344 2
-    * op sub *tmp346 214 *tmp345
-    * set :drawItemColor.10:barLength *tmp346
-    * op add *tmp347 48 :drawItemColor.10:barLength
-    * set :drawItemColor.10:textEnd *tmp347
+ 1021 op sub :drawItemColor.10:barLength 214 *tmp345
+ 1022 op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
  1023 op mul *tmp348 :drawItemColor.10:barLength :drawItemColor.10:current
  1024 op div *tmp349 *tmp348 :drawItemColor.10:target
-    * op min *tmp350 :drawItemColor.10:barLength *tmp349
-    * set :drawItemColor.10:length *tmp350
+ 1025 op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
  1026 op mul *tmp351 :drawItemColor.10:col 176
  1027 op div *tmp352 *tmp351 2
-    * op add *tmp353 11 *tmp352
-    * set :drawItemColor.10:iconX *tmp353
+ 1028 op add :drawItemColor.10:iconX 11 *tmp352
  1029 op mul *tmp354 :drawItemColor.10:col 176
  1030 op div *tmp355 *tmp354 2
-    * op add *tmp356 22 *tmp355
-    * set :drawItemColor.10:barX *tmp356
+ 1031 op add :drawItemColor.10:barX 22 *tmp355
  1032 op mul *tmp357 :drawItemColor.10:col 176
  1033 op div *tmp358 *tmp357 2
-    * op add *tmp359 :drawItemColor.10:textEnd *tmp358
-    * set :drawItemColor.10:textX *tmp359
+ 1034 op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp358
  1035 draw col %[white]
  1036 op add *tmp360 :drawItemColor.10:y 5
  1037 draw image :drawItemColor.10:iconX *tmp360 :drawItemColor.10:item 16 0
 
  1050 print 80
  1051 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1052 label *label161
-    * op add *tmp363 :drawBold.10:x 1
-    * set :drawText.31:x *tmp363
+ 1053 op add :drawText.31:x :drawBold.10:x 1
  1054 set :drawText.31:y :drawBold.10:y
  1055 set :drawText.31:alignment :drawBold.10:alignment
  1056 print 80
 
  1087 set :drawItemColor.11:target :drawItem.11:target
  1088 op mul *tmp367 :drawItemColor.11:columns 176
  1089 op div *tmp368 *tmp367 2
-    * op sub *tmp369 214 *tmp368
-    * set :drawItemColor.11:barLength *tmp369
-    * op add *tmp370 48 :drawItemColor.11:barLength
-    * set :drawItemColor.11:textEnd *tmp370
+ 1090 op sub :drawItemColor.11:barLength 214 *tmp368
+ 1091 op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
  1092 op mul *tmp371 :drawItemColor.11:barLength :drawItemColor.11:current
  1093 op div *tmp372 *tmp371 :drawItemColor.11:target
-    * op min *tmp373 :drawItemColor.11:barLength *tmp372
-    * set :drawItemColor.11:length *tmp373
+ 1094 op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
  1095 op mul *tmp374 :drawItemColor.11:col 176
  1096 op div *tmp375 *tmp374 2
-    * op add *tmp376 11 *tmp375
-    * set :drawItemColor.11:iconX *tmp376
+ 1097 op add :drawItemColor.11:iconX 11 *tmp375
  1098 op mul *tmp377 :drawItemColor.11:col 176
  1099 op div *tmp378 *tmp377 2
-    * op add *tmp379 22 *tmp378
-    * set :drawItemColor.11:barX *tmp379
+ 1100 op add :drawItemColor.11:barX 22 *tmp378
  1101 op mul *tmp380 :drawItemColor.11:col 176
  1102 op div *tmp381 *tmp380 2
-    * op add *tmp382 :drawItemColor.11:textEnd *tmp381
-    * set :drawItemColor.11:textX *tmp382
+ 1103 op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp381
  1104 draw col %[white]
  1105 op add *tmp383 :drawItemColor.11:y 5
  1106 draw image :drawItemColor.11:iconX *tmp383 :drawItemColor.11:item 16 0
 
  1119 print 130
  1120 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1121 label *label168
-    * op add *tmp386 :drawBold.11:x 1
-    * set :drawText.33:x *tmp386
+ 1122 op add :drawText.33:x :drawBold.11:x 1
  1123 set :drawText.33:y :drawBold.11:y
  1124 set :drawText.33:alignment :drawBold.11:alignment
  1125 print 130
 
  1159 set :drawItemColor.12:target :drawItem.12:target
  1160 op mul *tmp391 :drawItemColor.12:columns 176
  1161 op div *tmp392 *tmp391 2
-    * op sub *tmp393 214 *tmp392
-    * set :drawItemColor.12:barLength *tmp393
-    * op add *tmp394 48 :drawItemColor.12:barLength
-    * set :drawItemColor.12:textEnd *tmp394
+ 1162 op sub :drawItemColor.12:barLength 214 *tmp392
+ 1163 op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
  1164 op mul *tmp395 :drawItemColor.12:barLength :drawItemColor.12:current
  1165 op div *tmp396 *tmp395 :drawItemColor.12:target
-    * op min *tmp397 :drawItemColor.12:barLength *tmp396
-    * set :drawItemColor.12:length *tmp397
+ 1166 op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
  1167 op mul *tmp398 :drawItemColor.12:col 176
  1168 op div *tmp399 *tmp398 2
-    * op add *tmp400 11 *tmp399
-    * set :drawItemColor.12:iconX *tmp400
+ 1169 op add :drawItemColor.12:iconX 11 *tmp399
  1170 op mul *tmp401 :drawItemColor.12:col 176
  1171 op div *tmp402 *tmp401 2
-    * op add *tmp403 22 *tmp402
-    * set :drawItemColor.12:barX *tmp403
+ 1172 op add :drawItemColor.12:barX 22 *tmp402
  1173 op mul *tmp404 :drawItemColor.12:col 176
  1174 op div *tmp405 *tmp404 2
-    * op add *tmp406 :drawItemColor.12:textEnd *tmp405
-    * set :drawItemColor.12:textX *tmp406
+ 1175 op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp405
  1176 draw col %[white]
  1177 op add *tmp407 :drawItemColor.12:y 5
  1178 draw image :drawItemColor.12:iconX *tmp407 :drawItemColor.12:item 16 0
 
  1192 print "%"
  1193 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1194 label *label175
-    * op add *tmp410 :drawBold.12:x 1
-    * set :drawText.35:x *tmp410
+ 1195 op add :drawText.35:x :drawBold.12:x 1
  1196 set :drawText.35:y :drawBold.12:y
  1197 set :drawText.35:alignment :drawBold.12:alignment
  1198 print *tmp390
 
  1262 set :drawItemColor.13:target :drawItem.13:target
  1263 op mul *tmp417 :drawItemColor.13:columns 176
  1264 op div *tmp418 *tmp417 2
-    * op sub *tmp419 214 *tmp418
-    * set :drawItemColor.13:barLength *tmp419
-    * op add *tmp420 48 :drawItemColor.13:barLength
-    * set :drawItemColor.13:textEnd *tmp420
+ 1265 op sub :drawItemColor.13:barLength 214 *tmp418
+ 1266 op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
  1267 op mul *tmp421 :drawItemColor.13:barLength :drawItemColor.13:current
  1268 op div *tmp422 *tmp421 :drawItemColor.13:target
-    * op min *tmp423 :drawItemColor.13:barLength *tmp422
-    * set :drawItemColor.13:length *tmp423
+ 1269 op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
  1270 op mul *tmp424 :drawItemColor.13:col 176
  1271 op div *tmp425 *tmp424 2
-    * op add *tmp426 11 *tmp425
-    * set :drawItemColor.13:iconX *tmp426
+ 1272 op add :drawItemColor.13:iconX 11 *tmp425
  1273 op mul *tmp427 :drawItemColor.13:col 176
  1274 op div *tmp428 *tmp427 2
-    * op add *tmp429 22 *tmp428
-    * set :drawItemColor.13:barX *tmp429
+ 1275 op add :drawItemColor.13:barX 22 *tmp428
  1276 op mul *tmp430 :drawItemColor.13:col 176
  1277 op div *tmp431 *tmp430 2
-    * op add *tmp432 :drawItemColor.13:textEnd *tmp431
-    * set :drawItemColor.13:textX *tmp432
+ 1278 op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp431
  1279 draw col %[white]
  1280 op add *tmp433 :drawItemColor.13:y 5
  1281 draw image :drawItemColor.13:iconX *tmp433 :drawItemColor.13:item 16 0
 
  1291 set :drawText.38:x :drawBold.13:x
  1292 set :drawText.38:y :drawBold.13:y
  1293 set :drawText.38:alignment :drawBold.13:alignment
-    * set *tmp436 .transportTarget
-    * print *tmp436
+ 1294 print .transportTarget
  1295 draw print :drawText.38:x :drawText.38:y :drawText.38:alignment
  1296 label *label191
-    * op add *tmp437 :drawBold.13:x 1
-    * set :drawText.39:x *tmp437
+ 1297 op add :drawText.39:x :drawBold.13:x 1
  1298 set :drawText.39:y :drawBold.13:y
  1299 set :drawText.39:alignment :drawBold.13:alignment
-    * set *tmp438 .transportTarget
-    * print *tmp438
+ 1300 print .transportTarget
  1301 draw print :drawText.39:x :drawText.39:y :drawText.39:alignment
  1302 label *label192
  1303 label *label190
 
  1318 set :updateDisplay:y :drawUnit:y
  1319 jump *label186 always
  1320 label *label185
-    * sensor *tmp441 @unit @firstItem
-    * set :drawBuilder:unitItem *tmp441
+ 1321 sensor :drawBuilder:unitItem @unit @firstItem
  1322 sensor *tmp442 @unit @totalItems
  1323 op equal *tmp443 :drawBuilder:unitItem .transportItem
  1324 op mul *tmp444 *tmp442 *tmp443
 
  1341 set :drawItemColor.14:target :drawItem.14:target
  1342 op mul *tmp445 :drawItemColor.14:columns 176
  1343 op div *tmp446 *tmp445 2
-    * op sub *tmp447 214 *tmp446
-    * set :drawItemColor.14:barLength *tmp447
-    * op add *tmp448 48 :drawItemColor.14:barLength
-    * set :drawItemColor.14:textEnd *tmp448
+ 1344 op sub :drawItemColor.14:barLength 214 *tmp446
+ 1345 op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
  1346 op mul *tmp449 :drawItemColor.14:barLength :drawItemColor.14:current
  1347 op div *tmp450 *tmp449 :drawItemColor.14:target
-    * op min *tmp451 :drawItemColor.14:barLength *tmp450
-    * set :drawItemColor.14:length *tmp451
+ 1348 op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
  1349 op mul *tmp452 :drawItemColor.14:col 176
  1350 op div *tmp453 *tmp452 2
-    * op add *tmp454 11 *tmp453
-    * set :drawItemColor.14:iconX *tmp454
+ 1351 op add :drawItemColor.14:iconX 11 *tmp453
  1352 op mul *tmp455 :drawItemColor.14:col 176
  1353 op div *tmp456 *tmp455 2
-    * op add *tmp457 22 *tmp456
-    * set :drawItemColor.14:barX *tmp457
+ 1354 op add :drawItemColor.14:barX 22 *tmp456
  1355 op mul *tmp458 :drawItemColor.14:col 176
  1356 op div *tmp459 *tmp458 2
-    * op add *tmp460 :drawItemColor.14:textEnd *tmp459
-    * set :drawItemColor.14:textX *tmp460
+ 1357 op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp459
  1358 draw col %[white]
  1359 op add *tmp461 :drawItemColor.14:y 5
  1360 draw image :drawItemColor.14:iconX *tmp461 :drawItemColor.14:item 16 0
 
  1370 set :drawText.40:x :drawBold.14:x
  1371 set :drawText.40:y :drawBold.14:y
  1372 set :drawText.40:alignment :drawBold.14:alignment
-    * set *tmp464 .transportTarget
-    * print *tmp464
+ 1373 print .transportTarget
  1374 draw print :drawText.40:x :drawText.40:y :drawText.40:alignment
  1375 label *label199
-    * op add *tmp465 :drawBold.14:x 1
-    * set :drawText.41:x *tmp465
+ 1376 op add :drawText.41:x :drawBold.14:x 1
  1377 set :drawText.41:y :drawBold.14:y
  1378 set :drawText.41:alignment :drawBold.14:alignment
-    * set *tmp466 .transportTarget
-    * print *tmp466
+ 1379 print .transportTarget
  1380 draw print :drawText.41:x :drawText.41:y :drawText.41:alignment
  1381 label *label200
  1382 label *label198
 
  1428 op sub :drawTitleRow.6:y :drawTitleRow.6:y 15
  1429 label *label208
  1430 set :updateDisplay:y :drawTitleRow.6:y
-    * sensor *tmp473 AJTJK-battery1 @totalPower
-    * set :drawPower:power *tmp473
+ 1431 sensor :drawPower:power AJTJK-battery1 @totalPower
  1432 op mul *tmp474 :drawPower:power 100
  1433 op div *tmp475 *tmp474 4000
  1434 op floor *tmp476 *tmp475
 
  1442 set :drawItemColor.15:target 4000
  1443 op mul *tmp477 :drawItemColor.15:columns 176
  1444 op div *tmp478 *tmp477 2
-    * op sub *tmp479 214 *tmp478
-    * set :drawItemColor.15:barLength *tmp479
-    * op add *tmp480 48 :drawItemColor.15:barLength
-    * set :drawItemColor.15:textEnd *tmp480
+ 1445 op sub :drawItemColor.15:barLength 214 *tmp478
+ 1446 op add :drawItemColor.15:textEnd 48 :drawItemColor.15:barLength
  1447 op mul *tmp481 :drawItemColor.15:barLength :drawItemColor.15:current
  1448 op div *tmp482 *tmp481 :drawItemColor.15:target
-    * op min *tmp483 :drawItemColor.15:barLength *tmp482
-    * set :drawItemColor.15:length *tmp483
+ 1449 op min :drawItemColor.15:length :drawItemColor.15:barLength *tmp482
  1450 op mul *tmp484 :drawItemColor.15:col 176
  1451 op div *tmp485 *tmp484 2
-    * op add *tmp486 11 *tmp485
-    * set :drawItemColor.15:iconX *tmp486
+ 1452 op add :drawItemColor.15:iconX 11 *tmp485
  1453 op mul *tmp487 :drawItemColor.15:col 176
  1454 op div *tmp488 *tmp487 2
-    * op add *tmp489 22 *tmp488
-    * set :drawItemColor.15:barX *tmp489
+ 1455 op add :drawItemColor.15:barX 22 *tmp488
  1456 op mul *tmp490 :drawItemColor.15:col 176
  1457 op div *tmp491 *tmp490 2
-    * op add *tmp492 :drawItemColor.15:textEnd *tmp491
-    * set :drawItemColor.15:textX *tmp492
+ 1458 op add :drawItemColor.15:textX :drawItemColor.15:textEnd *tmp491
  1459 draw col %[white]
  1460 op add *tmp493 :drawItemColor.15:y 5
  1461 draw image :drawItemColor.15:iconX *tmp493 :drawItemColor.15:item 16 0
 
  1475 print "%"
  1476 draw print :drawText.44:x :drawText.44:y :drawText.44:alignment
  1477 label *label213
-    * op add *tmp496 :drawBold.15:x 1
-    * set :drawText.45:x *tmp496
+ 1478 op add :drawText.45:x :drawBold.15:x 1
  1479 set :drawText.45:y :drawBold.15:y
  1480 set :drawText.45:alignment :drawBold.15:alignment
  1481 print *tmp476
 
  1501 label *label18
  1502 op equal *tmp499 .page 1
  1503 jump *label217 equal *tmp499 false
-    * read *tmp501 bank2 510
-    * set :displayStorage:tail *tmp501
+ 1504 read :displayStorage:tail bank2 510
  1505 set :displayStorage:START 190
  1506 jump *label220 equal .pageSwitched false
-    * read *tmp503 bank2 511
-    * set .lastTail *tmp503
+ 1507 read .lastTail bank2 511
  1508 draw col %[gold]
  1509 set :drawBold.16:x 11
  1510 set :drawBold.16:y 206
 
  1515 print "Resources"
  1516 draw print :drawText.46:x :drawText.46:y :drawText.46:alignment
  1517 label *label223
-    * op add *tmp504 :drawBold.16:x 1
-    * set :drawText.47:x *tmp504
+ 1518 op add :drawText.47:x :drawBold.16:x 1
  1519 set :drawText.47:y :drawBold.16:y
  1520 set :drawText.47:alignment :drawBold.16:alignment
  1521 print "Resources"
 
  1523 label *label224
  1524 label *label222
  1525 draw col %[white]
-    * op sub *tmp505 :displayStorage:START 8
-    * set :displayStorage:y *tmp505
+ 1526 op sub :displayStorage:y :displayStorage:START 8
  1527 set :displayStorage:item @copper
  1528 setaddr *tmp506 *label228
  1529 jump *label225 always
 
  1578 jump *label239 always
  1579 label *label238
  1580 label *label239
-    * set *tmp509 .lastTail
-    * read *tmp510 bank2 *tmp509
-    * set :displayStorage:accumulator *tmp510
-    * op add *tmp511 25 .lastTail
-    * set :displayStorage:x *tmp511
-    * op sub *tmp512 :displayStorage:START 8
-    * set :displayStorage:y.1 *tmp512
+ 1581 read :displayStorage:accumulator bank2 .lastTail
+ 1582 op add :displayStorage:x 25 .lastTail
+ 1583 op sub :displayStorage:y.1 :displayStorage:START 8
  1584 set :displayStorage:i 0
  1585 label *label240
  1586 jump *label242 greaterThanEq :displayStorage:i 9
  1587 op and *tmp513 :displayStorage:accumulator 0b11111
-    * op sub *tmp514 *tmp513 8
-    * set :displayStorage:value *tmp514
+ 1588 op sub :displayStorage:value *tmp513 8
  1589 op greaterThanEq *tmp515 :displayStorage:value 0
  1590 jump *label243 equal *tmp515 false
  1591 set *tmp516 %[green]
 
  1623 print "Base map"
  1624 draw print :drawText.48:x :drawText.48:y :drawText.48:alignment
  1625 label *label252
-    * op add *tmp521 :drawBold.17:x 1
-    * set :drawText.49:x *tmp521
+ 1626 op add :drawText.49:x :drawBold.17:x 1
  1627 set :drawText.49:y :drawBold.17:y
  1628 set :drawText.49:alignment :drawBold.17:alignment
  1629 print "Base map"
 
  1833 jump *label303 equal *tmp542 false
  1834 set :displayBaseMap:index .recentBuildIndex
  1835 set .recentBuildIndex -1
-    * set *tmp544 :displayBaseMap:index
-    * readarr<regular> *tmp545 .BLOCKS[] *tmp544
-    * set :drawBlock:cfg *tmp545
+ 1836 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
  1837 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1838 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1839 label *label305
 
  1856 label *label247
  1857 jump *label246 always
  1858 label *label245
-    * op sub *tmp548 .page 3
-    * set :displayLog:page *tmp548
-    * read *tmp549 bank1 511
-    * set :displayLog:logPosition *tmp549
-    * op sub *tmp550 511 :displayLog:logPosition
-    * set :displayLog:records *tmp550
+ 1859 op sub :displayLog:page .page 3
+ 1860 read :displayLog:logPosition bank1 511
+ 1861 op sub :displayLog:records 511 :displayLog:logPosition
  1862 op sub *tmp551 :displayLog:records 1
  1863 op idiv *tmp552 *tmp551 39
  1864 op add *tmp553 *tmp552 1
-    * op max *tmp554 1 *tmp553
-    * set :displayLog:pages *tmp554
-    * op add *tmp555 :displayLog:pages 3
-    * set .numPages *tmp555
+ 1865 op max :displayLog:pages 1 *tmp553
+ 1866 op add .numPages :displayLog:pages 3
  1867 op mul *tmp556 39 :displayLog:page
-    * op sub *tmp557 511 *tmp556
-    * set :displayLog:start *tmp557
+ 1868 op sub :displayLog:start 511 *tmp556
  1869 op sub *tmp558 :displayLog:start 39
-    * op max *tmp559 :displayLog:logPosition *tmp558
-    * set :displayLog:stop *tmp559
+ 1870 op max :displayLog:stop :displayLog:logPosition *tmp558
  1871 jump *label309 equal .pageSwitched false
  1872 draw col %[gold]
  1873 set :drawBold.18:x 4
 
  1879 print "Build records"
  1880 draw print :drawText.50:x :drawText.50:y :drawText.50:alignment
  1881 label *label312
-    * op add *tmp561 :drawBold.18:x 1
-    * set :drawText.51:x *tmp561
+ 1882 op add :drawText.51:x :drawBold.18:x 1
  1883 set :drawText.51:y :drawBold.18:y
  1884 set :drawText.51:alignment :drawBold.18:alignment
  1885 print "Build records"
 
  1906 op sub :displayLog:position .lastRecord 1
  1907 label *label316
  1908 jump *label318 lessThan :displayLog:position *tmp563
-    * set *tmp564 :displayLog:position
-    * read *tmp565 bank1 *tmp564
-    * set :displayLog:record *tmp565
+ 1909 read :displayLog:record bank1 :displayLog:position
  1910 op sub *tmp566 :displayLog:start :displayLog:position
  1911 op sub *tmp567 *tmp566 1
  1912 set :displayRecord:record :displayLog:record
  1913 set :displayRecord:index *tmp567
-    * op idiv *tmp568 :displayRecord:index 13
-    * set :displayRecord:col *tmp568
-    * op mod *tmp569 :displayRecord:index 13
-    * set :displayRecord:row *tmp569
+ 1914 op idiv :displayRecord:col :displayRecord:index 13
+ 1915 op mod :displayRecord:row :displayRecord:index 13
  1916 op mul *tmp570 58 :displayRecord:col
-    * op add *tmp571 11 *tmp570
-    * set :displayRecord:x *tmp571
+ 1917 op add :displayRecord:x 11 *tmp570
  1918 op mul *tmp572 15 :displayRecord:row
-    * op sub *tmp573 189 *tmp572
-    * set :displayRecord:y *tmp573
-    * op mod *tmp574 :displayRecord:record 1000
-    * set :displayRecord:id *tmp574
+ 1919 op sub :displayRecord:y 189 *tmp572
+ 1920 op mod :displayRecord:id :displayRecord:record 1000
  1921 op greaterThan *tmp575 :displayRecord:id @blockCount
  1922 jump *label320 equal *tmp575 false
  1923 op sub *tmp577 :displayRecord:id @blockCount
-    * lookup unit *tmp578 *tmp577
-    * set *tmp576 *tmp578
+ 1924 lookup unit *tmp576 *tmp577
  1925 jump *label321 always
  1926 label *label320
-    * lookup block *tmp579 :displayRecord:id
-    * set *tmp576 *tmp579
+ 1927 lookup block *tmp576 :displayRecord:id
  1928 label *label321
  1929 set :displayRecord:icon *tmp576
  1930 op div *tmp580 :displayRecord:record 1000
  1931 op div *tmp581 *tmp580 120
-    * op floor *tmp582 *tmp581
-    * set :displayRecord:t *tmp582
-    * op idiv *tmp583 :displayRecord:t 60
-    * set :displayRecord:m *tmp583
-    * op mod *tmp584 :displayRecord:t 60
-    * set :displayRecord:s *tmp584
+ 1932 op floor :displayRecord:t *tmp581
+ 1933 op idiv :displayRecord:m :displayRecord:t 60
+ 1934 op mod :displayRecord:s :displayRecord:t 60
  1935 op lessThan *tmp585 :displayRecord:s 10
  1936 jump *label322 equal *tmp585 false
  1937 set *tmp586 "0"
 
  1964 op sub :displayLog:position :displayLog:position 1
  1965 jump *label316 always
  1966 label *label318
-    * op add *tmp592 :displayLog:stop 1
-    * set .lastRecord *tmp592
+ 1967 op add .lastRecord :displayLog:stop 1
  1968 drawflush display1
  1969 label *label308
  1970 label *label246
 
  1985 print "\n"
  1986 print "==================================[]"
  1987 print "\n"
-    * set *tmp595 .status1
-    * print *tmp595
+ 1988 print .status1
  1989 print "\n"
  1990 print .status2
  1991 print .item2
 
  1994 print .block2
  1995 print ")"
  1996 print "\n"
-    * set *tmp596 .status3
-    * print *tmp596
+ 1997 print .status3
  1998 print "\n"
  1999 printflush message1
  2000 label *label329
  2001 label *label328
-    * sensor *tmp597 switch1 @enabled
-    * set .pageSwitched *tmp597
+ 2002 sensor .pageSwitched switch1 @enabled
  2003 jump *label330 equal .pageSwitched false
  2004 control enabled switch1 false
  2005 op add *tmp600 .page 1
-    * op mod *tmp601 *tmp600 .numPages
-    * set .page *tmp601
+ 2006 op mod .page *tmp600 .numPages
  2007 drawflush null
  2008 draw reset
  2009 draw clear 0 0 32
 
  2027 draw scale 3.5 3.5
  2028 read *tmp0 processor1 "time"
  2029 op div *tmp604 *tmp0 120
-    * op floor *tmp605 *tmp604
-    * set :drawHeader:t *tmp605
-    * op idiv *tmp606 :drawHeader:t 60
-    * set :drawHeader:m *tmp606
-    * op mod *tmp607 :drawHeader:t 60
-    * set :drawHeader:s *tmp607
+ 2030 op floor :drawHeader:t *tmp604
+ 2031 op idiv :drawHeader:m :drawHeader:t 60
+ 2032 op mod :drawHeader:s :drawHeader:t 60
  2033 op lessThan *tmp608 :drawHeader:s 10
  2034 jump *label335 equal *tmp608 false
  2035 set *tmp609 "0"
 
  2050 print :drawHeader:s
  2051 draw print :drawText.54:x :drawText.54:y :drawText.54:alignment
  2052 label *label338
-    * op add *tmp610 :drawBold.19:x 1
-    * set :drawText.55:x *tmp610
+ 2053 op add :drawText.55:x :drawBold.19:x 1
  2054 set :drawText.55:y :drawBold.19:y
  2055 set :drawText.55:alignment :drawBold.19:alignment
  2056 print :drawHeader:m
 
  2074 print "Goal"
  2075 draw print :drawText.56:x :drawText.56:y :drawText.56:alignment
  2076 label *label341
-    * op add *tmp611 :drawBold.20:x 1
-    * set :drawText.57:x *tmp611
+ 2077 op add :drawText.57:x :drawBold.20:x 1
  2078 set :drawText.57:y :drawBold.20:y
  2079 set :drawText.57:alignment :drawBold.20:alignment
  2080 print "Goal"
 
  2093 jump *label346 always
  2094 label *label345
  2095 op add *tmp614 .nextBlock .nextFactory
-    * op add *tmp615 *tmp614 .nextAddReco
-    * set :drawHeader:count *tmp615
+ 2096 op add :drawHeader:count *tmp614 .nextAddReco
  2097 op equal *tmp616 :drawHeader:count 3
  2098 jump *label347 equal *tmp616 false
  2099 draw image 22 244 .nextBlock 18 0
 
  2161 set :drawHeader:tt @second
  2162 read *tmp0 processor1 "time"
  2163 op div *tmp628 *tmp0 120
-    * op floor *tmp629 *tmp628
-    * set :drawHeader:t.1 *tmp629
-    * op idiv *tmp630 :drawHeader:t.1 60
-    * set :drawHeader:m.1 *tmp630
-    * op mod *tmp631 :drawHeader:t.1 60
-    * set :drawHeader:s.1 *tmp631
+ 2164 op floor :drawHeader:t.1 *tmp628
+ 2165 op idiv :drawHeader:m.1 :drawHeader:t.1 60
+ 2166 op mod :drawHeader:s.1 :drawHeader:t.1 60
  2167 op lessThan *tmp632 :drawHeader:s.1 10
  2168 jump *label369 equal *tmp632 false
  2169 set *tmp633 "0"
 
  2177 print :drawHeader:s.1
  2178 op mul *tmp634 10 :drawHeader:t.1
  2179 op div *tmp635 *tmp634 :drawHeader:tt
-    * op round *tmp636 *tmp635
-    * set :drawHeader:ratio *tmp636
+ 2180 op round :drawHeader:ratio *tmp635
  2181 op idiv *tmp637 :drawHeader:ratio 10
  2182 op mod *tmp638 :drawHeader:ratio 10
  2183 print " (x"
 
  2192 label *label371
  2193 op notEqual *tmp639 A¨SSJh-container30 null
  2194 jump *label372 equal *tmp639 false
-    * sensor *tmp641 A¨SSJh-container30 @scrap
-    * set :drawHeader:count.1 *tmp641
+ 2195 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  2196 set :drawHeader:x.1 174
  2197 op log10 *tmp642 :drawHeader:count.1
-    * op floor *tmp643 *tmp642
-    * set :drawHeader:len *tmp643
+ 2198 op floor :drawHeader:len *tmp642
  2199 set :drawText.59:x :drawHeader:x.1
  2200 set :drawText.59:y 255
  2201 set :drawText.59:alignment @topRight
 
  2207 op mul *tmp645 7 :drawHeader:len
  2208 op sub *tmp646 *tmp644 *tmp645
  2209 draw image *tmp646 246 @scrap 12 0
-    * sensor *tmp647 A¨SSJh-container30 @sand
-    * set :drawHeader:count.1 *tmp647
+ 2210 sensor :drawHeader:count.1 A¨SSJh-container30 @sand
  2211 set :drawHeader:x.1 124
  2212 op log10 *tmp648 :drawHeader:count.1
-    * op floor *tmp649 *tmp648
-    * set :drawHeader:len *tmp649
+ 2213 op floor :drawHeader:len *tmp648
  2214 set :drawText.60:x :drawHeader:x.1
  2215 set :drawText.60:y 255
  2216 set :drawText.60:alignment @topRight
 
  2226 label *label372
  2227 jump *label376 equal .titaniumDrill false
  2228 sensor *tmp654 .titaniumDrill @titanium
-    * op max *tmp655 .titaniumDrillCount *tmp654
-    * set :drawHeader:count.2 *tmp655
+ 2229 op max :drawHeader:count.2 .titaniumDrillCount *tmp654
  2230 set :drawHeader:x.2 174
  2231 op log10 *tmp656 :drawHeader:count.2
-    * op floor *tmp657 *tmp656
-    * set :drawHeader:len.1 *tmp657
+ 2232 op floor :drawHeader:len.1 *tmp656
  2233 set :drawText.61:x :drawHeader:x.2
  2234 set :drawText.61:y 255
  2235 set :drawText.61:alignment @topRight
 
  2245 label *label376
  2246 label *label377
  2247 jump *label379 equal .thoriumContainer false
-    * sensor *tmp662 .thoriumContainer @thorium
-    * set :drawHeader:count.3 *tmp662
+ 2248 sensor :drawHeader:count.3 .thoriumContainer @thorium
  2249 set :drawHeader:x.3 124
  2250 op log10 *tmp663 :drawHeader:count.3
-    * op floor *tmp664 *tmp663
-    * set :drawHeader:len.2 *tmp664
+ 2251 op floor :drawHeader:len.2 *tmp663
  2252 set :drawText.62:x :drawHeader:x.3
  2253 set :drawText.62:y 255
  2254 set :drawText.62:alignment @topRight
 
  2332 op add :unpackCfg:index :unpackCfg:index 1
  2333 read *tmp678 :unpackCfg:cfg *tmp677
  2334 op sub *tmp679 *tmp678 74
-    * lookup block *tmp680 *tmp679
-    * set :unpackCfg:type *tmp680
+ 2335 lookup block :unpackCfg:type *tmp679
  2336 set *tmp681 :unpackCfg:index
  2337 op add :unpackCfg:index :unpackCfg:index 1
  2338 read *tmp682 :unpackCfg:cfg *tmp681
  2339 op sub *tmp683 *tmp682 74
-    * op div *tmp684 *tmp683 2
-    * set :unpackCfg:x *tmp684
+ 2340 op div :unpackCfg:x *tmp683 2
  2341 set *tmp685 :unpackCfg:index
  2342 op add :unpackCfg:index :unpackCfg:index 1
  2343 read *tmp686 :unpackCfg:cfg *tmp685
  2344 op sub *tmp687 *tmp686 74
-    * op div *tmp688 *tmp687 2
-    * set :unpackCfg:y *tmp688
+ 2345 op div :unpackCfg:y *tmp687 2
  2346 set *tmp689 :unpackCfg:index
  2347 op add :unpackCfg:index :unpackCfg:index 1
  2348 read *tmp690 :unpackCfg:cfg *tmp689
-    * op sub *tmp691 *tmp690 74
-    * set :unpackCfg:rotation *tmp691
+ 2349 op sub :unpackCfg:rotation *tmp690 74
  2350 set *tmp692 :unpackCfg:index
  2351 op add :unpackCfg:index :unpackCfg:index 1
  2352 read *tmp693 :unpackCfg:cfg *tmp692
-    * op sub *tmp694 *tmp693 74
-    * set :unpackCfg:ind *tmp694
-    * sensor *tmp702 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp702
+ 2353 op sub :unpackCfg:ind *tmp693 74
+ 2354 sensor :unpackCfg:size :unpackCfg:type @size
  2355 label *label396
  2356 set :unpackCfg2:type :unpackCfg:type
  2357 set :unpackCfg2:x :unpackCfg:x
 
  2367 set :drawBlock:size :unpackCfg2:size
  2368 set :drawBlock:index :unpackCfg2:index
  2369 op shl *tmp703 1 :drawBlock:index
-    * op and *tmp704 .blocksBuilt *tmp703
-    * set :drawBlock:built *tmp704
+ 2370 op and :drawBlock:built .blocksBuilt *tmp703
  2371 op add *tmp705 :drawBlock:built .pageSwitched
  2372 op equal *tmp706 *tmp705 0
  2373 jump *label397 equal *tmp706 false

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    20 jump *label10 notEqual *tmp44 false
    21 label *label12
    22 label *label13
-    * jump *label15 equal true false
    23 sensor *tmp45 processor2 @bufferSize
    24 op lessThan *tmp46 *tmp45 200
    25 jump *label16 equal *tmp46 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-60 instructions):
 
    16 ubind @poly
    17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    18 label *label11
-    * op equal *tmp44 .core null
-    * jump *label10 notEqual *tmp44 false
+   19 jump *label10 equal .core null
    20 label *label12
    21 label *label13
    22 sensor *tmp45 processor2 @bufferSize
-    * op lessThan *tmp46 *tmp45 200
-    * jump *label16 equal *tmp46 false
-    * op equal *tmp48 .page 0
-    * jump *label18 equal *tmp48 false
-    * op greaterThan *tmp50 .megas 0
-    * jump *label20 equal *tmp50 false
-    * op lessThan *tmp52 .animation 0
-    * jump *label23 equal *tmp52 false
+   23 jump *label16 greaterThanEq *tmp45 200
+   24 jump *label18 notEqual .page 0
+   25 jump *label20 lessThanEq .megas 0
+   26 jump *label23 greaterThanEq .animation 0
    27 draw color 0 0 32 80
    28 draw rect 0 0 176 176
    29 jump *label24 always
 
    63 label *label27
    64 set :animate:size *tmp67
    65 draw image :animate:x :animate:y @mega :animate:size 0
-    * op equal *tmp72 :animate:ratio 1
-    * jump *label28 equal *tmp72 false
+   66 jump *label28 notEqual :animate:ratio 1
    67 setaddr :drawHeader*retaddr *label30 (h:*label30)
    68 call *label4 *invalid :drawHeader*retval (m:*label30) (h:*label30)
    69 label *label30
 
   162 label *label43
   163 label *label41
   164 op add :drawItemColor:col :drawItemColor:col 1
-    * op greaterThanEq *tmp101 :drawItemColor:col :drawItemColor:columns
-    * jump *label44 equal *tmp101 false
+  165 jump *label44 lessThan :drawItemColor:col :drawItemColor:columns
   166 set :drawItemColor:col 0
   167 op sub :drawItemColor:y :drawItemColor:y 15
   168 jump *label45 always
 
   176 op sub :updateDisplay:y :updateDisplay:y 35
   177 jump *label35 always
   178 label *label34
-    * op notEqual *tmp103 .nextBlock null
-    * jump *label46 equal *tmp103 false
+  179 jump *label46 equal .nextBlock null
   180 set :drawMaterials:count .totalTargets
   181 set :drawTitleRow.1:y :updateDisplay:y
   182 set :drawTitleRow.1:alignment @bottomLeft
 
   231 set :drawMaterials:target .targetThorium
   232 setaddr *tmp107 *label62
   233 label *label53
-    * op greaterThan *tmp108 :drawMaterials:target 0
-    * jump *label63 equal *tmp108 false
+  234 jump *label63 lessThanEq :drawMaterials:target 0
   235 sensor *tmp110 .core :drawMaterials:item
   236 set :drawItem.1:col :drawMaterials:col
   237 set :drawItem.1:y :updateDisplay:y
 
   289 label *label69
   290 label *label67
   291 op add :drawItemColor.1:col :drawItemColor.1:col 1
-    * op greaterThanEq *tmp131 :drawItemColor.1:col :drawItemColor.1:columns
-    * jump *label70 equal *tmp131 false
+  292 jump *label70 lessThan :drawItemColor.1:col :drawItemColor.1:columns
   293 set :drawItemColor.1:col 0
   294 op sub :drawItemColor.1:y :drawItemColor.1:y 15
   295 jump *label71 always
 
   302 set :drawMaterials:col :drawItem.1:col
   303 set :updateDisplay:y :drawItem.1:y
   304 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp133 :drawMaterials:count 0
-    * jump *label72 equal *tmp133 false
+  305 jump *label72 greaterThan :drawMaterials:count 0
   306 jump *label55 always
   307 jump *label73 always
   308 label *label72
 
   317 jump *label52 always
   318 label *label51
   319 label *label52
-    * op lessThan *tmp135 .totalTargets 3
-    * jump *label74 equal *tmp135 false
+  320 jump *label74 greaterThanEq .totalTargets 3
   321 op sub *tmp137 3 .totalTargets
   322 op mul *tmp138 *tmp137 15
   323 op sub :updateDisplay:y :updateDisplay:y *tmp138
 
   330 label *label47
   331 label *label35
   332 label *label33
-    * op equal *tmp139 .nextFactory null
-    * jump *label77 equal *tmp139 false
+  333 jump *label77 notEqual .nextFactory null
   334 jump *label76 always
   335 jump *label78 always
   336 label *label77
 
   354 label *label79
   355 set :updateDisplay:y :drawTitleRow.2:y
   356 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
-    * op equal *tmp142 :drawAirFactory:progress 0
-    * jump *label82 equal *tmp142 false
-    * op equal *tmp144 .nextFactory @flare
-    * jump *label84 equal *tmp144 false
+  357 jump *label82 notEqual :drawAirFactory:progress 0
+  358 jump *label84 notEqual .nextFactory @flare
   359 sensor *tmp146 A¾BFLW-air-factory13 @silicon
   360 set :drawItem.2:col 0
   361 set :drawItem.2:y :updateDisplay:y
 
   413 label *label90
   414 label *label88
   415 op add :drawItemColor.2:col :drawItemColor.2:col 1
-    * op greaterThanEq *tmp167 :drawItemColor.2:col :drawItemColor.2:columns
-    * jump *label91 equal *tmp167 false
+  416 jump *label91 lessThan :drawItemColor.2:col :drawItemColor.2:columns
   417 set :drawItemColor.2:col 0
   418 op sub :drawItemColor.2:y :drawItemColor.2:y 15
   419 jump *label92 always
 
   484 label *label97
   485 label *label95
   486 op add :drawItemColor.3:col :drawItemColor.3:col 1
-    * op greaterThanEq *tmp190 :drawItemColor.3:col :drawItemColor.3:columns
-    * jump *label98 equal *tmp190 false
+  487 jump *label98 lessThan :drawItemColor.3:col :drawItemColor.3:columns
   488 set :drawItemColor.3:col 0
   489 op sub :drawItemColor.3:y :drawItemColor.3:y 15
   490 jump *label99 always
 
   552 label *label104
   553 label *label102
   554 op add :drawItemColor.4:col :drawItemColor.4:col 1
-    * op greaterThanEq *tmp213 :drawItemColor.4:col :drawItemColor.4:columns
-    * jump *label105 equal *tmp213 false
+  555 jump *label105 lessThan :drawItemColor.4:col :drawItemColor.4:columns
   556 set :drawItemColor.4:col 0
   557 op sub :drawItemColor.4:y :drawItemColor.4:y 15
   558 jump *label106 always
 
   626 label *label111
   627 label *label109
   628 op add :drawItemColor.5:col :drawItemColor.5:col 1
-    * op greaterThanEq *tmp237 :drawItemColor.5:col :drawItemColor.5:columns
-    * jump *label112 equal *tmp237 false
+  629 jump *label112 lessThan :drawItemColor.5:col :drawItemColor.5:columns
   630 set :drawItemColor.5:col 0
   631 op sub :drawItemColor.5:y :drawItemColor.5:y 15
   632 jump *label113 always
 
   641 label *label83
   642 op sub :updateDisplay:y :updateDisplay:y 5
   643 label *label76
-    * op equal *tmp239 .nextAddReco null
-    * jump *label115 equal *tmp239 false
+  644 jump *label115 notEqual .nextAddReco null
   645 jump *label114 always
   646 jump *label116 always
   647 label *label115
 
   665 label *label117
   666 set :updateDisplay:y :drawTitleRow.3:y
   667 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
-    * op equal *tmp242 :drawAddReco:progress 0
-    * jump *label120 equal *tmp242 false
+  668 jump *label120 notEqual :drawAddReco:progress 0
   669 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
   670 set :drawItem.6:col 0
   671 set :drawItem.6:y :updateDisplay:y
 
   723 label *label126
   724 label *label124
   725 op add :drawItemColor.6:col :drawItemColor.6:col 1
-    * op greaterThanEq *tmp265 :drawItemColor.6:col :drawItemColor.6:columns
-    * jump *label127 equal *tmp265 false
+  726 jump *label127 lessThan :drawItemColor.6:col :drawItemColor.6:columns
   727 set :drawItemColor.6:col 0
   728 op sub :drawItemColor.6:y :drawItemColor.6:y 15
   729 jump *label128 always
 
   791 label *label133
   792 label *label131
   793 op add :drawItemColor.7:col :drawItemColor.7:col 1
-    * op greaterThanEq *tmp288 :drawItemColor.7:col :drawItemColor.7:columns
-    * jump *label134 equal *tmp288 false
+  794 jump *label134 lessThan :drawItemColor.7:col :drawItemColor.7:columns
   795 set :drawItemColor.7:col 0
   796 op sub :drawItemColor.7:y :drawItemColor.7:y 15
   797 jump *label135 always
 
   864 label *label140
   865 label *label138
   866 op add :drawItemColor.8:col :drawItemColor.8:col 1
-    * op greaterThanEq *tmp312 :drawItemColor.8:col :drawItemColor.8:columns
-    * jump *label141 equal *tmp312 false
+  867 jump *label141 lessThan :drawItemColor.8:col :drawItemColor.8:columns
   868 set :drawItemColor.8:col 0
   869 op sub :drawItemColor.8:y :drawItemColor.8:y 15
   870 jump *label142 always
 
   879 label *label121
   880 op sub :updateDisplay:y :updateDisplay:y 5
   881 label *label114
-    * op equal *tmp314 .nextMultiReco null
-    * jump *label144 equal *tmp314 false
+  882 jump *label144 notEqual .nextMultiReco null
   883 jump *label143 always
   884 jump *label145 always
   885 label *label144
 
   904 label *label146
   905 set :updateDisplay:y :drawTitleRow.4:y
   906 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
-    * op equal *tmp318 :drawMultiReco:progress 0
-    * jump *label149 equal *tmp318 false
+  907 jump *label149 notEqual :drawMultiReco:progress 0
   908 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
   909 set :drawItem.9:col 0
   910 set :drawItem.9:y :updateDisplay:y
 
   962 label *label155
   963 label *label153
   964 op add :drawItemColor.9:col :drawItemColor.9:col 1
-    * op greaterThanEq *tmp341 :drawItemColor.9:col :drawItemColor.9:columns
-    * jump *label156 equal *tmp341 false
+  965 jump *label156 lessThan :drawItemColor.9:col :drawItemColor.9:columns
   966 set :drawItemColor.9:col 0
   967 op sub :drawItemColor.9:y :drawItemColor.9:y 15
   968 jump *label157 always
 
  1030 label *label162
  1031 label *label160
  1032 op add :drawItemColor.10:col :drawItemColor.10:col 1
-    * op greaterThanEq *tmp364 :drawItemColor.10:col :drawItemColor.10:columns
-    * jump *label163 equal *tmp364 false
+ 1033 jump *label163 lessThan :drawItemColor.10:col :drawItemColor.10:columns
  1034 set :drawItemColor.10:col 0
  1035 op sub :drawItemColor.10:y :drawItemColor.10:y 15
  1036 jump *label164 always
 
  1098 label *label169
  1099 label *label167
  1100 op add :drawItemColor.11:col :drawItemColor.11:col 1
-    * op greaterThanEq *tmp387 :drawItemColor.11:col :drawItemColor.11:columns
-    * jump *label170 equal *tmp387 false
+ 1101 jump *label170 lessThan :drawItemColor.11:col :drawItemColor.11:columns
  1102 set :drawItemColor.11:col 0
  1103 op sub :drawItemColor.11:y :drawItemColor.11:y 15
  1104 jump *label171 always
 
  1171 label *label176
  1172 label *label174
  1173 op add :drawItemColor.12:col :drawItemColor.12:col 1
-    * op greaterThanEq *tmp411 :drawItemColor.12:col :drawItemColor.12:columns
-    * jump *label177 equal *tmp411 false
+ 1174 jump *label177 lessThan :drawItemColor.12:col :drawItemColor.12:columns
  1175 set :drawItemColor.12:col 0
  1176 op sub :drawItemColor.12:y :drawItemColor.12:y 15
  1177 jump *label178 always
 
  1210 op sub :drawTitleRow.5:y :drawTitleRow.5:y 15
  1211 label *label182
  1212 set :updateDisplay:y :drawTitleRow.5:y
-    * op equal *tmp415 .transportItem null
-    * jump *label185 equal *tmp415 false
+ 1213 jump *label185 notEqual .transportItem null
  1214 set :drawUnit:item @poly
  1215 set :drawUnit:items 0
  1216 set :drawUnit:y :updateDisplay:y
 
  1270 label *label192
  1271 label *label190
  1272 op add :drawItemColor.13:col :drawItemColor.13:col 1
-    * op greaterThanEq *tmp439 :drawItemColor.13:col :drawItemColor.13:columns
-    * jump *label193 equal *tmp439 false
+ 1273 jump *label193 lessThan :drawItemColor.13:col :drawItemColor.13:columns
  1274 set :drawItemColor.13:col 0
  1275 op sub :drawItemColor.13:y :drawItemColor.13:y 15
  1276 jump *label194 always
 
  1348 label *label200
  1349 label *label198
  1350 op add :drawItemColor.14:col :drawItemColor.14:col 1
-    * op greaterThanEq *tmp467 :drawItemColor.14:col :drawItemColor.14:columns
-    * jump *label201 equal *tmp467 false
+ 1351 jump *label201 lessThan :drawItemColor.14:col :drawItemColor.14:columns
  1352 set :drawItemColor.14:col 0
  1353 op sub :drawItemColor.14:y :drawItemColor.14:y 15
  1354 jump *label202 always
 
  1363 set :updateDisplay:y :drawUnit.1:y
  1364 label *label186
  1365 label *label179
-    * op lessThan *tmp469 :updateDisplay:y 20
-    * jump *label204 equal *tmp469 false
+ 1366 jump *label204 greaterThanEq :updateDisplay:y 20
  1367 jump *label203 always
  1368 jump *label205 always
  1369 label *label204
  1370 label *label205
-    * op equal *tmp471 AJTJK-battery1 null
-    * jump *label206 equal *tmp471 false
+ 1371 jump *label206 notEqual AJTJK-battery1 null
  1372 jump *label203 always
  1373 jump *label207 always
  1374 label *label206
 
  1448 label *label214
  1449 label *label212
  1450 op add :drawItemColor.15:col :drawItemColor.15:col 1
-    * op greaterThanEq *tmp497 :drawItemColor.15:col :drawItemColor.15:columns
-    * jump *label215 equal *tmp497 false
+ 1451 jump *label215 lessThan :drawItemColor.15:col :drawItemColor.15:columns
  1452 set :drawItemColor.15:col 0
  1453 op sub :drawItemColor.15:y :drawItemColor.15:y 15
  1454 jump *label216 always
 
  1462 label *label21
  1463 jump *label19 always
  1464 label *label18
-    * op equal *tmp499 .page 1
-    * jump *label217 equal *tmp499 false
+ 1465 jump *label217 notEqual .page 1
  1466 read :displayStorage:tail bank2 510
  1467 set :displayStorage:START 190
  1468 jump *label220 equal .pageSwitched false
 
  1534 call *label4 *invalid :drawHeader*retval (m:*label237) (h:*label237)
  1535 label *label237
  1536 drawflush display1
-    * op greaterThan *tmp507 .lastTail :displayStorage:tail
-    * jump *label238 equal *tmp507 false
+ 1537 jump *label238 lessThanEq .lastTail :displayStorage:tail
  1538 jump *label219 always
  1539 jump *label239 always
  1540 label *label238
 
  1547 jump *label242 greaterThanEq :displayStorage:i 9
  1548 op and *tmp513 :displayStorage:accumulator 0b11111
  1549 op sub :displayStorage:value *tmp513 8
-    * op greaterThanEq *tmp515 :displayStorage:value 0
-    * jump *label243 equal *tmp515 false
+ 1550 jump *label243 lessThan :displayStorage:value 0
  1551 set *tmp516 %[green]
  1552 jump *label244 always
  1553 label *label243
 
  1566 label *label219
  1567 jump *label218 always
  1568 label *label217
-    * op equal *tmp518 .page 2
-    * jump *label245 equal *tmp518 false
+ 1569 jump *label245 notEqual .page 2
  1570 setaddr :drawHeader*retaddr *label248 (h:*label248)
  1571 call *label4 *invalid :drawHeader*retval (m:*label248) (h:*label248)
  1572 label *label248
 
  1754 set :displayBaseMap:cfg "AXTLJm-pulverizer35"
  1755 setaddr *tmp530 *label293
  1756 label *label256
-    * op equal *tmp531 :displayBaseMap:cfg "AXPRJd-pulverizer26"
-    * jump *label294 equal *tmp531 false
-    * op equal *tmp533 .scrap false
-    * jump *label296 equal *tmp533 false
+ 1757 jump *label294 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
+ 1758 jump *label296 notEqual .scrap false
  1759 jump *label258 always
  1760 jump *label297 always
  1761 label *label296
 
  1763 jump *label295 always
  1764 label *label294
  1765 label *label295
-    * op equal *tmp535 :displayBaseMap:counter :displayBaseMap:limit
-    * jump *label298 equal *tmp535 false
+ 1766 jump *label298 notEqual :displayBaseMap:counter :displayBaseMap:limit
  1767 setaddr :drawHeader*retaddr *label300 (h:*label300)
  1768 call *label4 *invalid :drawHeader*retval (m:*label300) (h:*label300)
  1769 label *label300
 
  1785 setaddr :drawBlock*retaddr *label302 (h:*label302)
  1786 call *label5 *invalid :drawBlock*retval (m:*label302) (h:*label302)
  1787 label *label302
-    * op greaterThanEq *tmp542 .recentBuildIndex 0
-    * jump *label303 equal *tmp542 false
+ 1788 jump *label303 lessThan .recentBuildIndex 0
  1789 set :displayBaseMap:index .recentBuildIndex
  1790 set .recentBuildIndex -1
  1791 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
 
  1873 op mul *tmp572 15 :displayRecord:row
  1874 op sub :displayRecord:y 189 *tmp572
  1875 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp575 :displayRecord:id @blockCount
-    * jump *label320 equal *tmp575 false
+ 1876 jump *label320 lessThanEq :displayRecord:id @blockCount
  1877 op sub *tmp577 :displayRecord:id @blockCount
  1878 lookup unit *tmp576 *tmp577
  1879 jump *label321 always
 
  1886 op floor :displayRecord:t *tmp581
  1887 op idiv :displayRecord:m :displayRecord:t 60
  1888 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp585 :displayRecord:s 10
-    * jump *label322 equal *tmp585 false
+ 1889 jump *label322 greaterThanEq :displayRecord:s 10
  1890 set *tmp586 "0"
  1891 jump *label323 always
  1892 label *label322
 
  1926 jump *label17 always
  1927 label *label16
  1928 label *label17
-    * op greaterThan *tmp593 .megas 0
-    * jump *label327 equal *tmp593 false
+ 1929 jump *label327 lessThanEq .megas 0
  1930 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1931 print "\n"
  1932 printflush message1
 
  1973 draw reset
  1974 draw color 0 0 32 255
  1975 draw rect 0 217 200 300
-    * op greaterThan *tmp602 .megas 0
-    * jump *label333 equal *tmp602 false
+ 1976 jump *label333 lessThanEq .megas 0
  1977 draw col %[gold]
  1978 draw scale 3.5 3.5
  1979 read *tmp0 processor1 "time"
 
  1981 op floor :drawHeader:t *tmp604
  1982 op idiv :drawHeader:m :drawHeader:t 60
  1983 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp608 :drawHeader:s 10
-    * jump *label335 equal *tmp608 false
+ 1984 jump *label335 greaterThanEq :drawHeader:s 10
  1985 set *tmp609 "0"
  1986 jump *label336 always
  1987 label *label335
 
  2044 label *label345
  2045 op add *tmp614 .nextBlock .nextFactory
  2046 op add :drawHeader:count *tmp614 .nextAddReco
-    * op equal *tmp616 :drawHeader:count 3
-    * jump *label347 equal *tmp616 false
+ 2047 jump *label347 notEqual :drawHeader:count 3
  2048 draw image 22 244 .nextBlock 18 0
  2049 draw image 42 244 .nextFactory 18 0
  2050 draw image 62 244 .nextAddReco 18 0
  2051 jump *label348 always
  2052 label *label347
-    * op equal *tmp618 :drawHeader:count 2
-    * jump *label349 equal *tmp618 false
+ 2053 jump *label349 notEqual :drawHeader:count 2
  2054 set :drawHeader:x 27
  2055 set :drawHeader:goal .nextBlock
  2056 setaddr *tmp620 *label354
 
  2063 set :drawHeader:goal .nextAddReco
  2064 setaddr *tmp620 *label356
  2065 label *label351
-    * op notEqual *tmp621 :drawHeader:goal null
-    * jump *label357 equal *tmp621 false
+ 2066 jump *label357 equal :drawHeader:goal null
  2067 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2068 op add :drawHeader:x :drawHeader:x 30
  2069 jump *label358 always
 
  2075 label *label353
  2076 jump *label350 always
  2077 label *label349
-    * op equal *tmp623 :drawHeader:count 1
-    * jump *label359 equal *tmp623 false
+ 2078 jump *label359 notEqual :drawHeader:count 1
  2079 set :drawHeader:goal.1 .nextBlock
  2080 setaddr *tmp625 *label364
  2081 jump *label361 always
 
  2087 set :drawHeader:goal.1 .nextAddReco
  2088 setaddr *tmp625 *label366
  2089 label *label361
-    * op notEqual *tmp626 :drawHeader:goal.1 null
-    * jump *label367 equal *tmp626 false
+ 2090 jump *label367 equal :drawHeader:goal.1 null
  2091 draw image 42 237 :drawHeader:goal.1 32 0
  2092 jump *label363 always
  2093 jump *label368 always
 
  2109 op floor :drawHeader:t.1 *tmp628
  2110 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  2111 op mod :drawHeader:s.1 :drawHeader:t.1 60
-    * op lessThan *tmp632 :drawHeader:s.1 10
-    * jump *label369 equal *tmp632 false
+ 2112 jump *label369 greaterThanEq :drawHeader:s.1 10
  2113 set *tmp633 "0"
  2114 jump *label370 always
  2115 label *label369
 
  2134 print ")"
  2135 draw print :drawText.58:x :drawText.58:y :drawText.58:alignment
  2136 label *label371
-    * op notEqual *tmp639 A¨SSJh-container30 null
-    * jump *label372 equal *tmp639 false
+ 2137 jump *label372 equal A¨SSJh-container30 null
  2138 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  2139 set :drawHeader:x.1 174
  2140 op log10 *tmp642 :drawHeader:count.1
 
  2211 draw col %[white]
  2212 set :drawUnitCount:type @poly
  2213 set :drawUnitCount:count .polys
-    * op greaterThan *tmp668 :drawUnitCount:count 0
-    * jump *label383 equal *tmp668 false
+ 2214 jump *label383 lessThanEq :drawUnitCount:count 0
  2215 op sub *tmp670 :drawHeader:x.4 20
  2216 draw image *tmp670 227 :drawUnitCount:type 12 0
  2217 set :drawText.63:x :drawHeader:x.4
 
  2228 label *label382
  2229 set :drawUnitCount.1:type @mono
  2230 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp671 :drawUnitCount.1:count 0
-    * jump *label387 equal *tmp671 false
+ 2231 jump *label387 lessThanEq :drawUnitCount.1:count 0
  2232 op sub *tmp673 :drawHeader:x.4 20
  2233 draw image *tmp673 227 :drawUnitCount.1:type 12 0
  2234 set :drawText.64:x :drawHeader:x.4
 
  2245 label *label386
  2246 set :drawUnitCount.2:type @flare
  2247 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp674 :drawUnitCount.2:count 0
-    * jump *label391 equal *tmp674 false
+ 2248 jump *label391 lessThanEq :drawUnitCount.2:count 0
  2249 op sub *tmp676 :drawHeader:x.4 20
  2250 draw image *tmp676 227 :drawUnitCount.2:type 12 0
  2251 set :drawText.65:x :drawHeader:x.4
 
  2309 op shl *tmp703 1 :drawBlock:index
  2310 op and :drawBlock:built .blocksBuilt *tmp703
  2311 op add *tmp705 :drawBlock:built .pageSwitched
-    * op equal *tmp706 *tmp705 0
-    * jump *label397 equal *tmp706 false
+ 2312 jump *label397 notEqual *tmp705 0
  2313 jump *label394 always
  2314 jump *label398 always
  2315 label *label397

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-48 instructions):
 
    67 setaddr :drawHeader*retaddr *label30 (h:*label30)
    68 call *label4 *invalid :drawHeader*retval (m:*label30) (h:*label30)
    69 label *label30
-    * jump *label29 always
    70 label *label28
    71 label *label29
    72 drawflush display1
 
   164 jump *label44 lessThan :drawItemColor:col :drawItemColor:columns
   165 set :drawItemColor:col 0
   166 op sub :drawItemColor:y :drawItemColor:y 15
-    * jump *label45 always
   167 label *label44
   168 label *label45
   169 label *label40
 
   290 jump *label70 lessThan :drawItemColor.1:col :drawItemColor.1:columns
   291 set :drawItemColor.1:col 0
   292 op sub :drawItemColor.1:y :drawItemColor.1:y 15
-    * jump *label71 always
   293 label *label70
   294 label *label71
   295 label *label66
 
   301 op sub :drawMaterials:count :drawMaterials:count 1
   302 jump *label72 greaterThan :drawMaterials:count 0
   303 jump *label55 always
-    * jump *label73 always
   304 label *label72
   305 label *label73
-    * jump *label64 always
   306 label *label63
   307 label *label64
   308 label *label54
   309 multijump *tmp107 0 0 (m:marker0)
   310 multilabel *label62 (m:marker0)
   311 label *label55
-    * jump *label52 always
   312 label *label51
   313 label *label52
   314 jump *label74 greaterThanEq .totalTargets 3
   315 op sub *tmp137 3 .totalTargets
   316 op mul *tmp138 *tmp137 15
   317 op sub :updateDisplay:y :updateDisplay:y *tmp138
-    * jump *label75 always
   318 label *label74
   319 label *label75
   320 op sub :updateDisplay:y :updateDisplay:y 5
-    * jump *label47 always
   321 label *label46
   322 label *label47
   323 label *label35
   324 label *label33
   325 jump *label77 notEqual .nextFactory null
   326 jump *label76 always
-    * jump *label78 always
   327 label *label77
   328 label *label78
   329 draw col %[white]
 
   407 jump *label91 lessThan :drawItemColor.2:col :drawItemColor.2:columns
   408 set :drawItemColor.2:col 0
   409 op sub :drawItemColor.2:y :drawItemColor.2:y 15
-    * jump *label92 always
   410 label *label91
   411 label *label92
   412 label *label87
 
   477 jump *label98 lessThan :drawItemColor.3:col :drawItemColor.3:columns
   478 set :drawItemColor.3:col 0
   479 op sub :drawItemColor.3:y :drawItemColor.3:y 15
-    * jump *label99 always
   480 label *label98
   481 label *label99
   482 label *label94
 
   544 jump *label105 lessThan :drawItemColor.4:col :drawItemColor.4:columns
   545 set :drawItemColor.4:col 0
   546 op sub :drawItemColor.4:y :drawItemColor.4:y 15
-    * jump *label106 always
   547 label *label105
   548 label *label106
   549 label *label101
 
   617 jump *label112 lessThan :drawItemColor.5:col :drawItemColor.5:columns
   618 set :drawItemColor.5:col 0
   619 op sub :drawItemColor.5:y :drawItemColor.5:y 15
-    * jump *label113 always
   620 label *label112
   621 label *label113
   622 label *label108
 
   630 label *label76
   631 jump *label115 notEqual .nextAddReco null
   632 jump *label114 always
-    * jump *label116 always
   633 label *label115
   634 label *label116
   635 draw col %[white]
 
   712 jump *label127 lessThan :drawItemColor.6:col :drawItemColor.6:columns
   713 set :drawItemColor.6:col 0
   714 op sub :drawItemColor.6:y :drawItemColor.6:y 15
-    * jump *label128 always
   715 label *label127
   716 label *label128
   717 label *label123
 
   779 jump *label134 lessThan :drawItemColor.7:col :drawItemColor.7:columns
   780 set :drawItemColor.7:col 0
   781 op sub :drawItemColor.7:y :drawItemColor.7:y 15
-    * jump *label135 always
   782 label *label134
   783 label *label135
   784 label *label130
 
   851 jump *label141 lessThan :drawItemColor.8:col :drawItemColor.8:columns
   852 set :drawItemColor.8:col 0
   853 op sub :drawItemColor.8:y :drawItemColor.8:y 15
-    * jump *label142 always
   854 label *label141
   855 label *label142
   856 label *label137
 
   864 label *label114
   865 jump *label144 notEqual .nextMultiReco null
   866 jump *label143 always
-    * jump *label145 always
   867 label *label144
   868 label *label145
   869 draw col %[white]
 
   947 jump *label156 lessThan :drawItemColor.9:col :drawItemColor.9:columns
   948 set :drawItemColor.9:col 0
   949 op sub :drawItemColor.9:y :drawItemColor.9:y 15
-    * jump *label157 always
   950 label *label156
   951 label *label157
   952 label *label152
 
  1014 jump *label163 lessThan :drawItemColor.10:col :drawItemColor.10:columns
  1015 set :drawItemColor.10:col 0
  1016 op sub :drawItemColor.10:y :drawItemColor.10:y 15
-    * jump *label164 always
  1017 label *label163
  1018 label *label164
  1019 label *label159
 
  1081 jump *label170 lessThan :drawItemColor.11:col :drawItemColor.11:columns
  1082 set :drawItemColor.11:col 0
  1083 op sub :drawItemColor.11:y :drawItemColor.11:y 15
-    * jump *label171 always
  1084 label *label170
  1085 label *label171
  1086 label *label166
 
  1153 jump *label177 lessThan :drawItemColor.12:col :drawItemColor.12:columns
  1154 set :drawItemColor.12:col 0
  1155 op sub :drawItemColor.12:y :drawItemColor.12:y 15
-    * jump *label178 always
  1156 label *label177
  1157 label *label178
  1158 label *label173
 
  1167 sensor *tmp413 @unit @dead
  1168 jump *label180 equal *tmp413 false
  1169 jump *label179 always
-    * jump *label181 always
  1170 label *label180
  1171 label *label181
  1172 draw col %[white]
 
  1250 jump *label193 lessThan :drawItemColor.13:col :drawItemColor.13:columns
  1251 set :drawItemColor.13:col 0
  1252 op sub :drawItemColor.13:y :drawItemColor.13:y 15
-    * jump *label194 always
  1253 label *label193
  1254 label *label194
  1255 label *label189
 
  1327 jump *label201 lessThan :drawItemColor.14:col :drawItemColor.14:columns
  1328 set :drawItemColor.14:col 0
  1329 op sub :drawItemColor.14:y :drawItemColor.14:y 15
-    * jump *label202 always
  1330 label *label201
  1331 label *label202
  1332 label *label197
 
  1340 label *label179
  1341 jump *label204 greaterThanEq :updateDisplay:y 20
  1342 jump *label203 always
-    * jump *label205 always
  1343 label *label204
  1344 label *label205
  1345 jump *label206 notEqual AJTJK-battery1 null
  1346 jump *label203 always
-    * jump *label207 always
  1347 label *label206
  1348 label *label207
  1349 set :updateDisplay:y 20
 
  1424 jump *label215 lessThan :drawItemColor.15:col :drawItemColor.15:columns
  1425 set :drawItemColor.15:col 0
  1426 op sub :drawItemColor.15:y :drawItemColor.15:y 15
-    * jump *label216 always
  1427 label *label215
  1428 label *label216
  1429 label *label211
 
  1499 multijump *tmp506 0 0 (m:marker1)
  1500 multilabel *label236 (m:marker1)
  1501 label *label227
-    * jump *label221 always
  1502 label *label220
  1503 label *label221
  1504 setaddr :drawHeader*retaddr *label237 (h:*label237)
 
  1507 drawflush display1
  1508 jump *label238 lessThanEq .lastTail :displayStorage:tail
  1509 jump *label219 always
-    * jump *label239 always
  1510 label *label238
  1511 label *label239
  1512 read :displayStorage:accumulator bank2 .lastTail
 
  1727 jump *label294 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
  1728 jump *label296 notEqual .scrap false
  1729 jump *label258 always
-    * jump *label297 always
  1730 label *label296
  1731 label *label297
-    * jump *label295 always
  1732 label *label294
  1733 label *label295
  1734 jump *label298 notEqual :displayBaseMap:counter :displayBaseMap:limit
 
  1760 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1761 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1762 label *label305
-    * jump *label304 always
  1763 label *label303
  1764 label *label304
  1765 sensor *tmp546 switch1 @enabled
 
  1767 draw clear 0 0 32
  1768 drawflush display1
  1769 jump *label258 always
-    * jump *label307 always
  1770 label *label306
  1771 label *label307
  1772 drawflush display1
 
  1817 draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
  1818 label *label314
  1819 set .lastRecord :displayLog:start
-    * jump *label310 always
  1820 label *label309
  1821 label *label310
  1822 setaddr :drawHeader*retaddr *label315 (h:*label315)
 
  1875 sensor *tmp590 switch1 @enabled
  1876 jump *label325 equal *tmp590 false
  1877 jump *label318 always
-    * jump *label326 always
  1878 label *label325
  1879 label *label326
  1880 label *label317
 
  1887 label *label246
  1888 label *label218
  1889 label *label19
-    * jump *label17 always
  1890 label *label16
  1891 label *label17
  1892 jump *label327 lessThanEq .megas 0
 
  1922 drawflush null
  1923 draw reset
  1924 draw clear 0 0 32
-    * jump *label331 always
  1925 label *label330
  1926 label *label331
  1927 label *label14
 
  1997 jump *label343 equal .missing false
  1998 draw image 16 264 .missing 12 0
  1999 set .missing false
-    * jump *label344 always
  2000 label *label343
  2001 label *label344
  2002 jump *label345 equal .nextMultiReco false
 
  2027 jump *label357 equal :drawHeader:goal null
  2028 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  2029 op add :drawHeader:x :drawHeader:x 30
-    * jump *label358 always
  2030 label *label357
  2031 label *label358
  2032 label *label352
 
  2050 jump *label367 equal :drawHeader:goal.1 null
  2051 draw image 42 237 :drawHeader:goal.1 32 0
  2052 jump *label363 always
-    * jump *label368 always
  2053 label *label367
  2054 label *label368
  2055 label *label362
  2056 multijump *tmp625 0 0 (m:marker4)
  2057 multilabel *label366 (m:marker4)
  2058 label *label363
-    * jump *label360 always
  2059 label *label359
  2060 label *label360
  2061 label *label350
 
  2142 op mul *tmp659 7 :drawHeader:len.1
  2143 op sub *tmp660 *tmp658 *tmp659
  2144 draw image *tmp660 246 @titanium 12 0
-    * jump *label377 always
  2145 label *label376
  2146 label *label377
  2147 jump *label379 equal .thoriumContainer false
 
  2160 op mul *tmp666 7 :drawHeader:len.2
  2161 op sub *tmp667 *tmp665 *tmp666
  2162 draw image *tmp667 246 @thorium 12 0
-    * jump *label380 always
  2163 label *label379
  2164 label *label380
  2165 label *label373
 
  2178 draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
  2179 label *label385
  2180 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label384 always
  2181 label *label383
  2182 label *label384
  2183 label *label382
 
  2194 draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
  2195 label *label389
  2196 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label388 always
  2197 label *label387
  2198 label *label388
  2199 label *label386
 
  2210 draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
  2211 label *label393
  2212 op sub :drawHeader:x.4 :drawHeader:x.4 30
-    * jump *label392 always
  2213 label *label391
  2214 label *label392
  2215 label *label390
 
  2264 op add *tmp705 :drawBlock:built .pageSwitched
  2265 jump *label397 notEqual *tmp705 0
  2266 jump *label394 always
-    * jump *label398 always
  2267 label *label397
  2268 label *label398
  2269 jump *label399 equal :drawBlock:built false

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   554 label *label85
   555 jump *label83 always
   556 label *label82
-    * op mul *tmp215 100 :drawAirFactory:progress
-    * op floor *tmp216 *tmp215
+  557 op idiv *tmp216 :drawAirFactory:progress 0.01
   558 set :drawItem.5:col 0
   559 set :drawItem.5:y :updateDisplay:y
   560 set :drawItem.5:columns 1
 
   787 set :updateDisplay:y :drawItem.7:y
   788 jump *label121 always
   789 label *label120
-    * op mul *tmp290 100 :drawAddReco:progress
-    * op floor *tmp291 *tmp290
+  790 op idiv *tmp291 :drawAddReco:progress 0.01
   791 set :drawItem.8:col 0
   792 set :drawItem.8:y :updateDisplay:y
   793 set :drawItem.8:columns 1
 
  1088 set :updateDisplay:y :drawItem.11:y
  1089 jump *label150 always
  1090 label *label149
-    * op mul *tmp389 100 :drawMultiReco:progress
-    * op floor *tmp390 *tmp389
+ 1091 op idiv *tmp390 :drawMultiReco:progress 0.01
  1092 set :drawItem.12:col 0
  1093 set :drawItem.12:y :updateDisplay:y
  1094 set :drawItem.12:columns 1
 
  1364 set :updateDisplay:y :drawTitleRow.6:y
  1365 sensor :drawPower:power AJTJK-battery1 @totalPower
  1366 op mul *tmp474 :drawPower:power 100
-    * op div *tmp475 *tmp474 4000
-    * op floor *tmp476 *tmp475
+ 1367 op idiv *tmp476 *tmp474 4000
  1368 set :drawItemColor.15:color1 %808000FF
  1369 set :drawItemColor.15:color2 %FFFF00FF
  1370 set :drawItemColor.15:col 0
 
  1843 label *label321
  1844 set :displayRecord:icon *tmp576
  1845 op div *tmp580 :displayRecord:record 1000
-    * op div *tmp581 *tmp580 120
-    * op floor :displayRecord:t *tmp581
+ 1846 op idiv :displayRecord:t *tmp580 120
  1847 op idiv :displayRecord:m :displayRecord:t 60
  1848 op mod :displayRecord:s :displayRecord:t 60
  1849 jump *label322 greaterThanEq :displayRecord:s 10
 
  1934 draw col %[gold]
  1935 draw scale 3.5 3.5
  1936 read *tmp0 processor1 "time"
-    * op div *tmp604 *tmp0 120
-    * op floor :drawHeader:t *tmp604
+ 1937 op idiv :drawHeader:t *tmp0 120
  1938 op idiv :drawHeader:m :drawHeader:t 60
  1939 op mod :drawHeader:s :drawHeader:t 60
  1940 jump *label335 greaterThanEq :drawHeader:s 10
 
  2057 label *label346
  2058 set :drawHeader:tt @second
  2059 read *tmp0 processor1 "time"
-    * op div *tmp628 *tmp0 120
-    * op floor :drawHeader:t.1 *tmp628
+ 2060 op idiv :drawHeader:t.1 *tmp0 120
  2061 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  2062 op mod :drawHeader:s.1 :drawHeader:t.1 60
  2063 jump *label369 greaterThanEq :drawHeader:s.1 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-17 instructions):
 
    38 set :lerp:from 42
    39 set :lerp:to 90
    40 set :lerp:ratio :animate:ratio
-    * op sub *tmp58 1 :lerp:ratio
-    * op mul *tmp59 *tmp58 :lerp:from
-    * op mul *tmp60 :lerp:ratio :lerp:to
+   41 op sub *tmp58 1 :animate:ratio
+   42 op mul *tmp59 *tmp58 42
+   43 op mul *tmp60 :animate:ratio 90
    44 op add *tmp57 *tmp59 *tmp60
    45 label *label25
    46 set :animate:x *tmp57
    47 set :lerp.1:from 237
    48 set :lerp.1:to 120
    49 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :lerp.1:ratio
-    * op mul *tmp64 *tmp63 :lerp.1:from
-    * op mul *tmp65 :lerp.1:ratio :lerp.1:to
+   50 op sub *tmp63 1 :animate:ratio
+   51 op mul *tmp64 *tmp58 237
+   52 op mul *tmp65 :animate:ratio 120
    53 op add *tmp62 *tmp64 *tmp65
    54 label *label26
    55 set :animate:y *tmp62
    56 set :lerp.2:from 32
    57 set :lerp.2:to 168
    58 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :lerp.2:ratio
-    * op mul *tmp69 *tmp68 :lerp.2:from
-    * op mul *tmp70 :lerp.2:ratio :lerp.2:to
+   59 op sub *tmp68 1 :animate:ratio
+   60 op mul *tmp69 *tmp58 32
+   61 op mul *tmp70 :animate:ratio 168
    62 op add *tmp67 *tmp69 *tmp70
    63 label *label27
    64 set :animate:size *tmp67
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   65 draw image *tmp57 *tmp62 @mega *tmp67 0
    66 jump *label28 notEqual :animate:ratio 1
    67 setaddr :drawHeader*retaddr *label30 (h:*label30)
    68 call *label4 *invalid :drawHeader*retval (m:*label30) (h:*label30)
 
    84 op equal *tmp76 .nextBlock @ore-titanium
    85 op or *tmp77 *tmp75 *tmp76
    86 jump *label34 equal *tmp77 false
-    * set :drawTitleRow:y :updateDisplay:y
+   87 set :drawTitleRow:y 201
    88 set :drawTitleRow:alignment @bottomLeft
    89 set :drawText:x 22
-    * set :drawText:y :drawTitleRow:y
-    * set :drawText:alignment :drawTitleRow:alignment
+   90 set :drawText:y :updateDisplay:y
+   91 set :drawText:alignment @bottomLeft
    92 print "Locating ore..."
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   93 draw print 22 :drawTitleRow:y :drawTitleRow:alignment
    94 label *label37
    95 set :drawText.1:x 23
-    * set :drawText.1:y :drawTitleRow:y
-    * set :drawText.1:alignment :drawTitleRow:alignment
+   96 set :drawText.1:y :updateDisplay:y
+   97 set :drawText.1:alignment @bottomLeft
    98 print "Locating ore..."
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   99 draw print 23 :drawTitleRow:y :drawTitleRow:alignment
   100 label *label38
-    * op sub :drawTitleRow:y :drawTitleRow:y 15
+  101 op sub :drawTitleRow:y :updateDisplay:y 15
   102 label *label36
   103 set :updateDisplay:y :drawTitleRow:y
   104 set :drawItem:col 0
-    * set :drawItem:y :updateDisplay:y
+  105 set :drawItem:y :drawTitleRow:y
   106 set :drawItem:columns 1
   107 set :drawItem:item .nextBlock
   108 read :drawItem:current processor3 ".mapProgress"
   109 read :drawItem:target processor3 ".mapTotal"
   110 set :drawItemColor:color1 %008000FF
   111 set :drawItemColor:color2 %00FF00FF
-    * set :drawItemColor:col :drawItem:col
-    * set :drawItemColor:y :drawItem:y
-    * set :drawItemColor:columns :drawItem:columns
+  112 set :drawItemColor:col 0
+  113 set :drawItemColor:y :updateDisplay:y
+  114 set :drawItemColor:columns 1
   115 set :drawItemColor:item :drawItem:item
   116 set :drawItemColor:current :drawItem:current
   117 set :drawItemColor:target :drawItem:target
-    * op mul *tmp79 :drawItemColor:columns 176
-    * op div *tmp80 *tmp79 2
+  118 op mul *tmp79 :drawItem:columns 176
+  119 op mul *tmp80 :drawItemColor:columns 88
   120 op sub :drawItemColor:barLength 214 *tmp80
   121 op add :drawItemColor:textEnd 48 :drawItemColor:barLength
-    * op mul *tmp83 :drawItemColor:barLength :drawItemColor:current
-    * op div *tmp84 *tmp83 :drawItemColor:target
+  122 op mul *tmp83 :drawItemColor:barLength :drawItem:current
+  123 op div *tmp84 *tmp83 :drawItem:target
   124 op min :drawItemColor:length :drawItemColor:barLength *tmp84
-    * op mul *tmp86 :drawItemColor:col 176
-    * op div *tmp87 *tmp86 2
+  125 op mul *tmp86 :drawItem:col 176
+  126 op mul *tmp87 :drawItemColor:col 88
   127 op add :drawItemColor:iconX 11 *tmp87
-    * op mul *tmp89 :drawItemColor:col 176
-    * op div *tmp90 *tmp89 2
-    * op add :drawItemColor:barX 22 *tmp90
-    * op mul *tmp92 :drawItemColor:col 176
-    * op div *tmp93 *tmp92 2
-    * op add :drawItemColor:textX :drawItemColor:textEnd *tmp93
+  128 op mul *tmp89 :drawItem:col 176
+  129 op div *tmp90 *tmp86 2
+  130 op add :drawItemColor:barX 22 *tmp87
+  131 op mul *tmp92 :drawItem:col 176
+  132 op div *tmp93 *tmp86 2
+  133 op add :drawItemColor:textX :drawItemColor:textEnd *tmp87
   134 draw col %[white]
-    * op add *tmp95 :drawItemColor:y 5
-    * draw image :drawItemColor:iconX *tmp95 :drawItemColor:item 16 0
-    * draw col :drawItemColor:color1
-    * draw rect :drawItemColor:barX :drawItemColor:y :drawItemColor:length 10
-    * draw col :drawItemColor:color2
-    * draw lineRect :drawItemColor:barX :drawItemColor:y :drawItemColor:barLength 10
-    * op add *tmp96 :drawItemColor:y 5
-    * op add *tmp97 *tmp96 2
+  135 op add *tmp95 :drawItem:y 5
+  136 draw image :drawItemColor:iconX *tmp95 :drawItem:item 16 0
+  137 draw col %008000FF
+  138 draw rect :drawItemColor:barX :drawItem:y :drawItemColor:length 10
+  139 draw col %00FF00FF
+  140 draw lineRect :drawItemColor:barX :drawItem:y :drawItemColor:barLength 10
+  141 op add *tmp96 :drawItem:y 5
+  142 op add *tmp97 *tmp95 2
   143 set :drawBold:x :drawItemColor:textX
   144 set :drawBold:y *tmp97
   145 set :drawBold:alignment @right
-    * set :drawText.2:x :drawBold:x
-    * set :drawText.2:y :drawBold:y
-    * set :drawText.2:alignment :drawBold:alignment
+  146 set :drawText.2:x :drawItemColor:textX
+  147 set :drawText.2:y *tmp97
+  148 set :drawText.2:alignment @right
   149 print "x"
   150 read *tmp98 processor3 ".mapSpots"
   151 print *tmp98
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  152 draw print :drawBold:x :drawBold:y :drawBold:alignment
   153 label *label42
-    * op add :drawText.3:x :drawBold:x 1
-    * set :drawText.3:y :drawBold:y
-    * set :drawText.3:alignment :drawBold:alignment
+  154 op add :drawText.3:x :drawItemColor:textX 1
+  155 set :drawText.3:y *tmp97
+  156 set :drawText.3:alignment @right
   157 print "x"
   158 read *tmp100 processor3 ".mapSpots"
   159 print *tmp100
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  160 draw print :drawText.3:x :drawBold:y :drawBold:alignment
   161 label *label43
   162 label *label41
-    * op add :drawItemColor:col :drawItemColor:col 1
-    * jump *label44 lessThan :drawItemColor:col :drawItemColor:columns
+  163 op add :drawItemColor:col :drawItem:col 1
+  164 jump *label44 lessThan :drawItemColor:col :drawItem:columns
   165 set :drawItemColor:col 0
-    * op sub :drawItemColor:y :drawItemColor:y 15
+  166 op sub :drawItemColor:y :drawItem:y 15
   167 label *label44
   168 label *label45
   169 label *label40
-    * set :drawItem:col :drawItemColor:col
   170 set :drawItem:y :drawItemColor:y
   171 label *label39
-    * set :updateDisplay:y :drawItem:y
-    * op sub :updateDisplay:y :updateDisplay:y 35
+  172 set :updateDisplay:y :drawItemColor:y
+  173 op sub :updateDisplay:y :drawItem:y 35
   174 jump *label35 always
   175 label *label34
   176 jump *label46 equal .nextBlock null
   177 set :drawMaterials:count .totalTargets
-    * set :drawTitleRow.1:y :updateDisplay:y
+  178 set :drawTitleRow.1:y 201
   179 set :drawTitleRow.1:alignment @bottomLeft
   180 set :drawText.4:x 22
-    * set :drawText.4:y :drawTitleRow.1:y
-    * set :drawText.4:alignment :drawTitleRow.1:alignment
+  181 set :drawText.4:y :updateDisplay:y
+  182 set :drawText.4:alignment @bottomLeft
   183 print "Materials"
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  184 draw print 22 :drawTitleRow.1:y :drawTitleRow.1:alignment
   185 label *label49
   186 set :drawText.5:x 23
-    * set :drawText.5:y :drawTitleRow.1:y
-    * set :drawText.5:alignment :drawTitleRow.1:alignment
+  187 set :drawText.5:y :updateDisplay:y
+  188 set :drawText.5:alignment @bottomLeft
   189 print "Materials"
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  190 draw print 23 :drawTitleRow.1:y :drawTitleRow.1:alignment
   191 label *label50
-    * op sub :drawTitleRow.1:y :drawTitleRow.1:y 15
+  192 op sub :drawTitleRow.1:y :updateDisplay:y 15
   193 label *label48
   194 set :updateDisplay:y :drawTitleRow.1:y
   195 set :drawMaterials:columns 1
 
   232 sensor *tmp110 .core :drawMaterials:item
   233 set :drawItem.1:col :drawMaterials:col
   234 set :drawItem.1:y :updateDisplay:y
-    * set :drawItem.1:columns :drawMaterials:columns
+  235 set :drawItem.1:columns 1
   236 set :drawItem.1:item :drawMaterials:item
   237 set :drawItem.1:current *tmp110
   238 set :drawItem.1:target :drawMaterials:target
   239 set :drawItemColor.1:color1 %008000FF
   240 set :drawItemColor.1:color2 %00FF00FF
-    * set :drawItemColor.1:col :drawItem.1:col
-    * set :drawItemColor.1:y :drawItem.1:y
-    * set :drawItemColor.1:columns :drawItem.1:columns
-    * set :drawItemColor.1:item :drawItem.1:item
-    * set :drawItemColor.1:current :drawItem.1:current
-    * set :drawItemColor.1:target :drawItem.1:target
-    * op mul *tmp111 :drawItemColor.1:columns 176
-    * op div *tmp112 *tmp111 2
+  241 set :drawItemColor.1:col :drawMaterials:col
+  242 set :drawItemColor.1:y :updateDisplay:y
+  243 set :drawItemColor.1:columns :drawMaterials:columns
+  244 set :drawItemColor.1:item :drawMaterials:item
+  245 set :drawItemColor.1:current *tmp110
+  246 set :drawItemColor.1:target :drawMaterials:target
+  247 op mul *tmp111 :drawItem.1:columns 176
+  248 op mul *tmp112 :drawItemColor.1:columns 88
   249 op sub :drawItemColor.1:barLength 214 *tmp112
   250 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength :drawItemColor.1:current
-    * op div *tmp116 *tmp115 :drawItemColor.1:target
+  251 op mul *tmp115 :drawItemColor.1:barLength :drawItem.1:current
+  252 op div *tmp116 *tmp115 :drawItem.1:target
   253 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawItemColor.1:col 176
-    * op div *tmp119 *tmp118 2
+  254 op mul *tmp118 :drawItem.1:col 176
+  255 op mul *tmp119 :drawItemColor.1:col 88
   256 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawItemColor.1:col 176
-    * op div *tmp122 *tmp121 2
-    * op add :drawItemColor.1:barX 22 *tmp122
-    * op mul *tmp124 :drawItemColor.1:col 176
-    * op div *tmp125 *tmp124 2
-    * op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp125
+  257 op mul *tmp121 :drawItem.1:col 176
+  258 op div *tmp122 *tmp118 2
+  259 op add :drawItemColor.1:barX 22 *tmp119
+  260 op mul *tmp124 :drawItem.1:col 176
+  261 op div *tmp125 *tmp118 2
+  262 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
   263 draw col %[white]
-    * op add *tmp127 :drawItemColor.1:y 5
-    * draw image :drawItemColor.1:iconX *tmp127 :drawItemColor.1:item 16 0
-    * draw col :drawItemColor.1:color1
-    * draw rect :drawItemColor.1:barX :drawItemColor.1:y :drawItemColor.1:length 10
-    * draw col :drawItemColor.1:color2
-    * draw lineRect :drawItemColor.1:barX :drawItemColor.1:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :drawItemColor.1:y 5
-    * op add *tmp129 *tmp128 2
+  264 op add *tmp127 :drawItem.1:y 5
+  265 draw image :drawItemColor.1:iconX *tmp127 :drawItem.1:item 16 0
+  266 draw col %008000FF
+  267 draw rect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:length 10
+  268 draw col %00FF00FF
+  269 draw lineRect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:barLength 10
+  270 op add *tmp128 :drawItem.1:y 5
+  271 op add *tmp129 *tmp127 2
   272 set :drawBold.1:x :drawItemColor.1:textX
   273 set :drawBold.1:y *tmp129
   274 set :drawBold.1:alignment @right
-    * set :drawText.6:x :drawBold.1:x
-    * set :drawText.6:y :drawBold.1:y
-    * set :drawText.6:alignment :drawBold.1:alignment
+  275 set :drawText.6:x :drawItemColor.1:textX
+  276 set :drawText.6:y *tmp129
+  277 set :drawText.6:alignment @right
   278 print :drawMaterials:target
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  279 draw print :drawBold.1:x :drawBold.1:y :drawBold.1:alignment
   280 label *label68
-    * op add :drawText.7:x :drawBold.1:x 1
-    * set :drawText.7:y :drawBold.1:y
-    * set :drawText.7:alignment :drawBold.1:alignment
+  281 op add :drawText.7:x :drawItemColor.1:textX 1
+  282 set :drawText.7:y *tmp129
+  283 set :drawText.7:alignment @right
   284 print :drawMaterials:target
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  285 draw print :drawText.7:x :drawBold.1:y :drawBold.1:alignment
   286 label *label69
   287 label *label67
-    * op add :drawItemColor.1:col :drawItemColor.1:col 1
-    * jump *label70 lessThan :drawItemColor.1:col :drawItemColor.1:columns
+  288 op add :drawItemColor.1:col :drawItem.1:col 1
+  289 jump *label70 lessThan :drawItemColor.1:col :drawItem.1:columns
   290 set :drawItemColor.1:col 0
-    * op sub :drawItemColor.1:y :drawItemColor.1:y 15
+  291 op sub :drawItemColor.1:y :drawItem.1:y 15
   292 label *label70
   293 label *label71
   294 label *label66
   295 set :drawItem.1:col :drawItemColor.1:col
   296 set :drawItem.1:y :drawItemColor.1:y
   297 label *label65
-    * set :drawMaterials:col :drawItem.1:col
-    * set :updateDisplay:y :drawItem.1:y
+  298 set :drawMaterials:col :drawItemColor.1:col
+  299 set :updateDisplay:y :drawItemColor.1:y
   300 op sub :drawMaterials:count :drawMaterials:count 1
   301 jump *label72 greaterThan :drawMaterials:count 0
   302 jump *label55 always
 
   329 set :drawTitleRow.2:y :updateDisplay:y
   330 set :drawTitleRow.2:alignment @bottomLeft
   331 set :drawText.8:x 22
-    * set :drawText.8:y :drawTitleRow.2:y
-    * set :drawText.8:alignment :drawTitleRow.2:alignment
+  332 set :drawText.8:y :updateDisplay:y
+  333 set :drawText.8:alignment @bottomLeft
   334 print "Air Factory"
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  335 draw print 22 :drawTitleRow.2:y :drawTitleRow.2:alignment
   336 label *label80
   337 set :drawText.9:x 23
-    * set :drawText.9:y :drawTitleRow.2:y
-    * set :drawText.9:alignment :drawTitleRow.2:alignment
+  338 set :drawText.9:y :updateDisplay:y
+  339 set :drawText.9:alignment @bottomLeft
   340 print "Air Factory"
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  341 draw print 23 :drawTitleRow.2:y :drawTitleRow.2:alignment
   342 label *label81
-    * op sub :drawTitleRow.2:y :drawTitleRow.2:y 15
+  343 op sub :drawTitleRow.2:y :updateDisplay:y 15
   344 label *label79
   345 set :updateDisplay:y :drawTitleRow.2:y
   346 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
 
   348 jump *label84 notEqual .nextFactory @flare
   349 sensor *tmp146 A¾BFLW-air-factory13 @silicon
   350 set :drawItem.2:col 0
-    * set :drawItem.2:y :updateDisplay:y
+  351 set :drawItem.2:y :drawTitleRow.2:y
   352 set :drawItem.2:columns 1
   353 set :drawItem.2:item @silicon
   354 set :drawItem.2:current *tmp146
   355 set :drawItem.2:target 15
   356 set :drawItemColor.2:color1 %008000FF
   357 set :drawItemColor.2:color2 %00FF00FF
-    * set :drawItemColor.2:col :drawItem.2:col
-    * set :drawItemColor.2:y :drawItem.2:y
-    * set :drawItemColor.2:columns :drawItem.2:columns
-    * set :drawItemColor.2:item :drawItem.2:item
-    * set :drawItemColor.2:current :drawItem.2:current
-    * set :drawItemColor.2:target :drawItem.2:target
-    * op mul *tmp147 :drawItemColor.2:columns 176
-    * op div *tmp148 *tmp147 2
+  358 set :drawItemColor.2:col 0
+  359 set :drawItemColor.2:y :updateDisplay:y
+  360 set :drawItemColor.2:columns 1
+  361 set :drawItemColor.2:item @silicon
+  362 set :drawItemColor.2:current *tmp146
+  363 set :drawItemColor.2:target 15
+  364 op mul *tmp147 :drawItem.2:columns 176
+  365 op mul *tmp148 :drawItemColor.2:columns 88
   366 op sub :drawItemColor.2:barLength 214 *tmp148
   367 op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
-    * op mul *tmp151 :drawItemColor.2:barLength :drawItemColor.2:current
-    * op div *tmp152 *tmp151 :drawItemColor.2:target
+  368 op mul *tmp151 :drawItemColor.2:barLength :drawItem.2:current
+  369 op div *tmp152 *tmp151 :drawItem.2:target
   370 op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
-    * op mul *tmp154 :drawItemColor.2:col 176
-    * op div *tmp155 *tmp154 2
+  371 op mul *tmp154 :drawItem.2:col 176
+  372 op mul *tmp155 :drawItemColor.2:col 88
   373 op add :drawItemColor.2:iconX 11 *tmp155
-    * op mul *tmp157 :drawItemColor.2:col 176
-    * op div *tmp158 *tmp157 2
-    * op add :drawItemColor.2:barX 22 *tmp158
-    * op mul *tmp160 :drawItemColor.2:col 176
-    * op div *tmp161 *tmp160 2
-    * op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp161
+  374 op mul *tmp157 :drawItem.2:col 176
+  375 op div *tmp158 *tmp154 2
+  376 op add :drawItemColor.2:barX 22 *tmp155
+  377 op mul *tmp160 :drawItem.2:col 176
+  378 op div *tmp161 *tmp154 2
+  379 op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp155
   380 draw col %[white]
-    * op add *tmp163 :drawItemColor.2:y 5
-    * draw image :drawItemColor.2:iconX *tmp163 :drawItemColor.2:item 16 0
-    * draw col :drawItemColor.2:color1
-    * draw rect :drawItemColor.2:barX :drawItemColor.2:y :drawItemColor.2:length 10
-    * draw col :drawItemColor.2:color2
-    * draw lineRect :drawItemColor.2:barX :drawItemColor.2:y :drawItemColor.2:barLength 10
-    * op add *tmp164 :drawItemColor.2:y 5
-    * op add *tmp165 *tmp164 2
+  381 op add *tmp163 :drawItem.2:y 5
+  382 draw image :drawItemColor.2:iconX *tmp163 :drawItem.2:item 16 0
+  383 draw col %008000FF
+  384 draw rect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:length 10
+  385 draw col %00FF00FF
+  386 draw lineRect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:barLength 10
+  387 op add *tmp164 :drawItem.2:y 5
+  388 op add *tmp165 *tmp163 2
   389 set :drawBold.2:x :drawItemColor.2:textX
   390 set :drawBold.2:y *tmp165
   391 set :drawBold.2:alignment @right
-    * set :drawText.10:x :drawBold.2:x
-    * set :drawText.10:y :drawBold.2:y
-    * set :drawText.10:alignment :drawBold.2:alignment
+  392 set :drawText.10:x :drawItemColor.2:textX
+  393 set :drawText.10:y *tmp165
+  394 set :drawText.10:alignment @right
   395 print 15
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  396 draw print :drawBold.2:x :drawBold.2:y :drawBold.2:alignment
   397 label *label89
-    * op add :drawText.11:x :drawBold.2:x 1
-    * set :drawText.11:y :drawBold.2:y
-    * set :drawText.11:alignment :drawBold.2:alignment
+  398 op add :drawText.11:x :drawItemColor.2:textX 1
+  399 set :drawText.11:y *tmp165
+  400 set :drawText.11:alignment @right
   401 print 15
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  402 draw print :drawText.11:x :drawBold.2:y :drawBold.2:alignment
   403 label *label90
   404 label *label88
-    * op add :drawItemColor.2:col :drawItemColor.2:col 1
-    * jump *label91 lessThan :drawItemColor.2:col :drawItemColor.2:columns
+  405 op add :drawItemColor.2:col :drawItem.2:col 1
+  406 jump *label91 lessThan :drawItemColor.2:col :drawItem.2:columns
   407 set :drawItemColor.2:col 0
-    * op sub :drawItemColor.2:y :drawItemColor.2:y 15
+  408 op sub :drawItemColor.2:y :drawItem.2:y 15
   409 label *label91
   410 label *label92
   411 label *label87
-    * set :drawItem.2:col :drawItemColor.2:col
   412 set :drawItem.2:y :drawItemColor.2:y
   413 label *label86
-    * set :updateDisplay:y :drawItem.2:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  414 set :updateDisplay:y :drawItemColor.2:y
+  415 op sub :updateDisplay:y :drawItem.2:y 15
   416 jump *label85 always
   417 label *label84
   418 sensor *tmp169 A¾BFLW-air-factory13 @lead
   419 set :drawItem.3:col 0
-    * set :drawItem.3:y :updateDisplay:y
+  420 set :drawItem.3:y :drawTitleRow.2:y
   421 set :drawItem.3:columns 1
   422 set :drawItem.3:item @lead
   423 set :drawItem.3:current *tmp169
   424 set :drawItem.3:target 15
   425 set :drawItemColor.3:color1 %008000FF
   426 set :drawItemColor.3:color2 %00FF00FF
-    * set :drawItemColor.3:col :drawItem.3:col
-    * set :drawItemColor.3:y :drawItem.3:y
-    * set :drawItemColor.3:columns :drawItem.3:columns
-    * set :drawItemColor.3:item :drawItem.3:item
-    * set :drawItemColor.3:current :drawItem.3:current
-    * set :drawItemColor.3:target :drawItem.3:target
-    * op mul *tmp170 :drawItemColor.3:columns 176
-    * op div *tmp171 *tmp170 2
+  427 set :drawItemColor.3:col 0
+  428 set :drawItemColor.3:y :updateDisplay:y
+  429 set :drawItemColor.3:columns 1
+  430 set :drawItemColor.3:item @lead
+  431 set :drawItemColor.3:current *tmp169
+  432 set :drawItemColor.3:target 15
+  433 op mul *tmp170 :drawItem.3:columns 176
+  434 op mul *tmp171 :drawItemColor.3:columns 88
   435 op sub :drawItemColor.3:barLength 214 *tmp171
   436 op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
-    * op mul *tmp174 :drawItemColor.3:barLength :drawItemColor.3:current
-    * op div *tmp175 *tmp174 :drawItemColor.3:target
+  437 op mul *tmp174 :drawItemColor.3:barLength :drawItem.3:current
+  438 op div *tmp175 *tmp174 :drawItem.3:target
   439 op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
-    * op mul *tmp177 :drawItemColor.3:col 176
-    * op div *tmp178 *tmp177 2
+  440 op mul *tmp177 :drawItem.3:col 176
+  441 op mul *tmp178 :drawItemColor.3:col 88
   442 op add :drawItemColor.3:iconX 11 *tmp178
-    * op mul *tmp180 :drawItemColor.3:col 176
-    * op div *tmp181 *tmp180 2
-    * op add :drawItemColor.3:barX 22 *tmp181
-    * op mul *tmp183 :drawItemColor.3:col 176
-    * op div *tmp184 *tmp183 2
-    * op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp184
+  443 op mul *tmp180 :drawItem.3:col 176
+  444 op div *tmp181 *tmp177 2
+  445 op add :drawItemColor.3:barX 22 *tmp178
+  446 op mul *tmp183 :drawItem.3:col 176
+  447 op div *tmp184 *tmp177 2
+  448 op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp178
   449 draw col %[white]
-    * op add *tmp186 :drawItemColor.3:y 5
-    * draw image :drawItemColor.3:iconX *tmp186 :drawItemColor.3:item 16 0
-    * draw col :drawItemColor.3:color1
-    * draw rect :drawItemColor.3:barX :drawItemColor.3:y :drawItemColor.3:length 10
-    * draw col :drawItemColor.3:color2
-    * draw lineRect :drawItemColor.3:barX :drawItemColor.3:y :drawItemColor.3:barLength 10
-    * op add *tmp187 :drawItemColor.3:y 5
-    * op add *tmp188 *tmp187 2
+  450 op add *tmp186 :drawItem.3:y 5
+  451 draw image :drawItemColor.3:iconX *tmp186 :drawItem.3:item 16 0
+  452 draw col %008000FF
+  453 draw rect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:length 10
+  454 draw col %00FF00FF
+  455 draw lineRect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:barLength 10
+  456 op add *tmp187 :drawItem.3:y 5
+  457 op add *tmp188 *tmp186 2
   458 set :drawBold.3:x :drawItemColor.3:textX
   459 set :drawBold.3:y *tmp188
   460 set :drawBold.3:alignment @right
-    * set :drawText.12:x :drawBold.3:x
-    * set :drawText.12:y :drawBold.3:y
-    * set :drawText.12:alignment :drawBold.3:alignment
+  461 set :drawText.12:x :drawItemColor.3:textX
+  462 set :drawText.12:y *tmp188
+  463 set :drawText.12:alignment @right
   464 print 15
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  465 draw print :drawBold.3:x :drawBold.3:y :drawBold.3:alignment
   466 label *label96
-    * op add :drawText.13:x :drawBold.3:x 1
-    * set :drawText.13:y :drawBold.3:y
-    * set :drawText.13:alignment :drawBold.3:alignment
+  467 op add :drawText.13:x :drawItemColor.3:textX 1
+  468 set :drawText.13:y *tmp188
+  469 set :drawText.13:alignment @right
   470 print 15
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  471 draw print :drawText.13:x :drawBold.3:y :drawBold.3:alignment
   472 label *label97
   473 label *label95
-    * op add :drawItemColor.3:col :drawItemColor.3:col 1
-    * jump *label98 lessThan :drawItemColor.3:col :drawItemColor.3:columns
+  474 op add :drawItemColor.3:col :drawItem.3:col 1
+  475 jump *label98 lessThan :drawItemColor.3:col :drawItem.3:columns
   476 set :drawItemColor.3:col 0
-    * op sub :drawItemColor.3:y :drawItemColor.3:y 15
+  477 op sub :drawItemColor.3:y :drawItem.3:y 15
   478 label *label98
   479 label *label99
   480 label *label94
-    * set :drawItem.3:col :drawItemColor.3:col
   481 set :drawItem.3:y :drawItemColor.3:y
   482 label *label93
-    * set :updateDisplay:y :drawItem.3:y
+  483 set :updateDisplay:y :drawItemColor.3:y
   484 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   485 set :drawItem.4:col 0
-    * set :drawItem.4:y :updateDisplay:y
+  486 set :drawItem.4:y :drawItem.3:y
   487 set :drawItem.4:columns 1
   488 set :drawItem.4:item @silicon
   489 set :drawItem.4:current *tmp192
   490 set :drawItem.4:target 30
   491 set :drawItemColor.4:color1 %008000FF
   492 set :drawItemColor.4:color2 %00FF00FF
-    * set :drawItemColor.4:col :drawItem.4:col
-    * set :drawItemColor.4:y :drawItem.4:y
-    * set :drawItemColor.4:columns :drawItem.4:columns
-    * set :drawItemColor.4:item :drawItem.4:item
-    * set :drawItemColor.4:current :drawItem.4:current
-    * set :drawItemColor.4:target :drawItem.4:target
-    * op mul *tmp193 :drawItemColor.4:columns 176
-    * op div *tmp194 *tmp193 2
+  493 set :drawItemColor.4:col 0
+  494 set :drawItemColor.4:y :updateDisplay:y
+  495 set :drawItemColor.4:columns 1
+  496 set :drawItemColor.4:item @silicon
+  497 set :drawItemColor.4:current *tmp192
+  498 set :drawItemColor.4:target 30
+  499 op mul *tmp193 :drawItem.4:columns 176
+  500 op mul *tmp194 :drawItemColor.4:columns 88
   501 op sub :drawItemColor.4:barLength 214 *tmp194
   502 op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
-    * op mul *tmp197 :drawItemColor.4:barLength :drawItemColor.4:current
-    * op div *tmp198 *tmp197 :drawItemColor.4:target
+  503 op mul *tmp197 :drawItemColor.4:barLength :drawItem.4:current
+  504 op div *tmp198 *tmp197 :drawItem.4:target
   505 op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
-    * op mul *tmp200 :drawItemColor.4:col 176
-    * op div *tmp201 *tmp200 2
+  506 op mul *tmp200 :drawItem.4:col 176
+  507 op mul *tmp201 :drawItemColor.4:col 88
   508 op add :drawItemColor.4:iconX 11 *tmp201
-    * op mul *tmp203 :drawItemColor.4:col 176
-    * op div *tmp204 *tmp203 2
-    * op add :drawItemColor.4:barX 22 *tmp204
-    * op mul *tmp206 :drawItemColor.4:col 176
-    * op div *tmp207 *tmp206 2
-    * op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp207
+  509 op mul *tmp203 :drawItem.4:col 176
+  510 op div *tmp204 *tmp200 2
+  511 op add :drawItemColor.4:barX 22 *tmp201
+  512 op mul *tmp206 :drawItem.4:col 176
+  513 op div *tmp207 *tmp200 2
+  514 op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp201
   515 draw col %[white]
-    * op add *tmp209 :drawItemColor.4:y 5
-    * draw image :drawItemColor.4:iconX *tmp209 :drawItemColor.4:item 16 0
-    * draw col :drawItemColor.4:color1
-    * draw rect :drawItemColor.4:barX :drawItemColor.4:y :drawItemColor.4:length 10
-    * draw col :drawItemColor.4:color2
-    * draw lineRect :drawItemColor.4:barX :drawItemColor.4:y :drawItemColor.4:barLength 10
-    * op add *tmp210 :drawItemColor.4:y 5
-    * op add *tmp211 *tmp210 2
+  516 op add *tmp209 :drawItem.4:y 5
+  517 draw image :drawItemColor.4:iconX *tmp209 :drawItem.4:item 16 0
+  518 draw col %008000FF
+  519 draw rect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:length 10
+  520 draw col %00FF00FF
+  521 draw lineRect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:barLength 10
+  522 op add *tmp210 :drawItem.4:y 5
+  523 op add *tmp211 *tmp209 2
   524 set :drawBold.4:x :drawItemColor.4:textX
   525 set :drawBold.4:y *tmp211
   526 set :drawBold.4:alignment @right
-    * set :drawText.14:x :drawBold.4:x
-    * set :drawText.14:y :drawBold.4:y
-    * set :drawText.14:alignment :drawBold.4:alignment
+  527 set :drawText.14:x :drawItemColor.4:textX
+  528 set :drawText.14:y *tmp211
+  529 set :drawText.14:alignment @right
   530 print 30
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  531 draw print :drawBold.4:x :drawBold.4:y :drawBold.4:alignment
   532 label *label103
-    * op add :drawText.15:x :drawBold.4:x 1
-    * set :drawText.15:y :drawBold.4:y
-    * set :drawText.15:alignment :drawBold.4:alignment
+  533 op add :drawText.15:x :drawItemColor.4:textX 1
+  534 set :drawText.15:y *tmp211
+  535 set :drawText.15:alignment @right
   536 print 30
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  537 draw print :drawText.15:x :drawBold.4:y :drawBold.4:alignment
   538 label *label104
   539 label *label102
-    * op add :drawItemColor.4:col :drawItemColor.4:col 1
-    * jump *label105 lessThan :drawItemColor.4:col :drawItemColor.4:columns
+  540 op add :drawItemColor.4:col :drawItem.4:col 1
+  541 jump *label105 lessThan :drawItemColor.4:col :drawItem.4:columns
   542 set :drawItemColor.4:col 0
-    * op sub :drawItemColor.4:y :drawItemColor.4:y 15
+  543 op sub :drawItemColor.4:y :drawItem.4:y 15
   544 label *label105
   545 label *label106
   546 label *label101
-    * set :drawItem.4:col :drawItemColor.4:col
   547 set :drawItem.4:y :drawItemColor.4:y
   548 label *label100
-    * set :updateDisplay:y :drawItem.4:y
+  549 set :updateDisplay:y :drawItemColor.4:y
   550 label *label85
   551 jump *label83 always
   552 label *label82
   553 op idiv *tmp216 :drawAirFactory:progress 0.01
   554 set :drawItem.5:col 0
-    * set :drawItem.5:y :updateDisplay:y
+  555 set :drawItem.5:y :drawTitleRow.2:y
   556 set :drawItem.5:columns 1
   557 set :drawItem.5:item .nextFactory
   558 set :drawItem.5:current :drawAirFactory:progress
   559 set :drawItem.5:target 1
   560 set :drawItemColor.5:color1 %008000FF
   561 set :drawItemColor.5:color2 %00FF00FF
-    * set :drawItemColor.5:col :drawItem.5:col
-    * set :drawItemColor.5:y :drawItem.5:y
-    * set :drawItemColor.5:columns :drawItem.5:columns
+  562 set :drawItemColor.5:col 0
+  563 set :drawItemColor.5:y :updateDisplay:y
+  564 set :drawItemColor.5:columns 1
   565 set :drawItemColor.5:item :drawItem.5:item
-    * set :drawItemColor.5:current :drawItem.5:current
-    * set :drawItemColor.5:target :drawItem.5:target
-    * op mul *tmp217 :drawItemColor.5:columns 176
-    * op div *tmp218 *tmp217 2
+  566 set :drawItemColor.5:current :drawAirFactory:progress
+  567 set :drawItemColor.5:target 1
+  568 op mul *tmp217 :drawItem.5:columns 176
+  569 op mul *tmp218 :drawItemColor.5:columns 88
   570 op sub :drawItemColor.5:barLength 214 *tmp218
   571 op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
-    * op mul *tmp221 :drawItemColor.5:barLength :drawItemColor.5:current
-    * op div *tmp222 *tmp221 :drawItemColor.5:target
+  572 op mul *tmp221 :drawItemColor.5:barLength :drawItem.5:current
+  573 op div *tmp222 *tmp221 :drawItem.5:target
   574 op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
-    * op mul *tmp224 :drawItemColor.5:col 176
-    * op div *tmp225 *tmp224 2
+  575 op mul *tmp224 :drawItem.5:col 176
+  576 op mul *tmp225 :drawItemColor.5:col 88
   577 op add :drawItemColor.5:iconX 11 *tmp225
-    * op mul *tmp227 :drawItemColor.5:col 176
-    * op div *tmp228 *tmp227 2
-    * op add :drawItemColor.5:barX 22 *tmp228
-    * op mul *tmp230 :drawItemColor.5:col 176
-    * op div *tmp231 *tmp230 2
-    * op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp231
+  578 op mul *tmp227 :drawItem.5:col 176
+  579 op div *tmp228 *tmp224 2
+  580 op add :drawItemColor.5:barX 22 *tmp225
+  581 op mul *tmp230 :drawItem.5:col 176
+  582 op div *tmp231 *tmp224 2
+  583 op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp225
   584 draw col %[white]
-    * op add *tmp233 :drawItemColor.5:y 5
-    * draw image :drawItemColor.5:iconX *tmp233 :drawItemColor.5:item 16 0
-    * draw col :drawItemColor.5:color1
-    * draw rect :drawItemColor.5:barX :drawItemColor.5:y :drawItemColor.5:length 10
-    * draw col :drawItemColor.5:color2
-    * draw lineRect :drawItemColor.5:barX :drawItemColor.5:y :drawItemColor.5:barLength 10
-    * op add *tmp234 :drawItemColor.5:y 5
-    * op add *tmp235 *tmp234 2
+  585 op add *tmp233 :drawItem.5:y 5
+  586 draw image :drawItemColor.5:iconX *tmp233 :drawItem.5:item 16 0
+  587 draw col %008000FF
+  588 draw rect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:length 10
+  589 draw col %00FF00FF
+  590 draw lineRect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:barLength 10
+  591 op add *tmp234 :drawItem.5:y 5
+  592 op add *tmp235 *tmp233 2
   593 set :drawBold.5:x :drawItemColor.5:textX
   594 set :drawBold.5:y *tmp235
   595 set :drawBold.5:alignment @right
-    * set :drawText.16:x :drawBold.5:x
-    * set :drawText.16:y :drawBold.5:y
-    * set :drawText.16:alignment :drawBold.5:alignment
+  596 set :drawText.16:x :drawItemColor.5:textX
+  597 set :drawText.16:y *tmp235
+  598 set :drawText.16:alignment @right
   599 print *tmp216
   600 print "%"
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  601 draw print :drawBold.5:x :drawBold.5:y :drawBold.5:alignment
   602 label *label110
-    * op add :drawText.17:x :drawBold.5:x 1
-    * set :drawText.17:y :drawBold.5:y
-    * set :drawText.17:alignment :drawBold.5:alignment
+  603 op add :drawText.17:x :drawItemColor.5:textX 1
+  604 set :drawText.17:y *tmp235
+  605 set :drawText.17:alignment @right
   606 print *tmp216
   607 print "%"
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  608 draw print :drawText.17:x :drawBold.5:y :drawBold.5:alignment
   609 label *label111
   610 label *label109
-    * op add :drawItemColor.5:col :drawItemColor.5:col 1
-    * jump *label112 lessThan :drawItemColor.5:col :drawItemColor.5:columns
+  611 op add :drawItemColor.5:col :drawItem.5:col 1
+  612 jump *label112 lessThan :drawItemColor.5:col :drawItem.5:columns
   613 set :drawItemColor.5:col 0
-    * op sub :drawItemColor.5:y :drawItemColor.5:y 15
+  614 op sub :drawItemColor.5:y :drawItem.5:y 15
   615 label *label112
   616 label *label113
   617 label *label108
-    * set :drawItem.5:col :drawItemColor.5:col
   618 set :drawItem.5:y :drawItemColor.5:y
   619 label *label107
-    * set :updateDisplay:y :drawItem.5:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  620 set :updateDisplay:y :drawItemColor.5:y
+  621 op sub :updateDisplay:y :drawItem.5:y 15
   622 label *label83
   623 op sub :updateDisplay:y :updateDisplay:y 5
   624 label *label76
 
   630 set :drawTitleRow.3:y :updateDisplay:y
   631 set :drawTitleRow.3:alignment @bottomLeft
   632 set :drawText.18:x 22
-    * set :drawText.18:y :drawTitleRow.3:y
-    * set :drawText.18:alignment :drawTitleRow.3:alignment
+  633 set :drawText.18:y :updateDisplay:y
+  634 set :drawText.18:alignment @bottomLeft
   635 print "Reconstructor"
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  636 draw print 22 :drawTitleRow.3:y :drawTitleRow.3:alignment
   637 label *label118
   638 set :drawText.19:x 23
-    * set :drawText.19:y :drawTitleRow.3:y
-    * set :drawText.19:alignment :drawTitleRow.3:alignment
+  639 set :drawText.19:y :updateDisplay:y
+  640 set :drawText.19:alignment @bottomLeft
   641 print "Reconstructor"
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  642 draw print 23 :drawTitleRow.3:y :drawTitleRow.3:alignment
   643 label *label119
-    * op sub :drawTitleRow.3:y :drawTitleRow.3:y 15
+  644 op sub :drawTitleRow.3:y :updateDisplay:y 15
   645 label *label117
   646 set :updateDisplay:y :drawTitleRow.3:y
   647 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   648 jump *label120 notEqual :drawAddReco:progress 0
   649 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
   650 set :drawItem.6:col 0
-    * set :drawItem.6:y :updateDisplay:y
+  651 set :drawItem.6:y :drawTitleRow.3:y
   652 set :drawItem.6:columns 1
   653 set :drawItem.6:item @graphite
   654 set :drawItem.6:current *tmp244
   655 set :drawItem.6:target 40
   656 set :drawItemColor.6:color1 %008000FF
   657 set :drawItemColor.6:color2 %00FF00FF
-    * set :drawItemColor.6:col :drawItem.6:col
-    * set :drawItemColor.6:y :drawItem.6:y
-    * set :drawItemColor.6:columns :drawItem.6:columns
-    * set :drawItemColor.6:item :drawItem.6:item
-    * set :drawItemColor.6:current :drawItem.6:current
-    * set :drawItemColor.6:target :drawItem.6:target
-    * op mul *tmp245 :drawItemColor.6:columns 176
-    * op div *tmp246 *tmp245 2
+  658 set :drawItemColor.6:col 0
+  659 set :drawItemColor.6:y :updateDisplay:y
+  660 set :drawItemColor.6:columns 1
+  661 set :drawItemColor.6:item @graphite
+  662 set :drawItemColor.6:current *tmp244
+  663 set :drawItemColor.6:target 40
+  664 op mul *tmp245 :drawItem.6:columns 176
+  665 op mul *tmp246 :drawItemColor.6:columns 88
   666 op sub :drawItemColor.6:barLength 214 *tmp246
   667 op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
-    * op mul *tmp249 :drawItemColor.6:barLength :drawItemColor.6:current
-    * op div *tmp250 *tmp249 :drawItemColor.6:target
+  668 op mul *tmp249 :drawItemColor.6:barLength :drawItem.6:current
+  669 op div *tmp250 *tmp249 :drawItem.6:target
   670 op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
-    * op mul *tmp252 :drawItemColor.6:col 176
-    * op div *tmp253 *tmp252 2
+  671 op mul *tmp252 :drawItem.6:col 176
+  672 op mul *tmp253 :drawItemColor.6:col 88
   673 op add :drawItemColor.6:iconX 11 *tmp253
-    * op mul *tmp255 :drawItemColor.6:col 176
-    * op div *tmp256 *tmp255 2
-    * op add :drawItemColor.6:barX 22 *tmp256
-    * op mul *tmp258 :drawItemColor.6:col 176
-    * op div *tmp259 *tmp258 2
-    * op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp259
+  674 op mul *tmp255 :drawItem.6:col 176
+  675 op div *tmp256 *tmp252 2
+  676 op add :drawItemColor.6:barX 22 *tmp253
+  677 op mul *tmp258 :drawItem.6:col 176
+  678 op div *tmp259 *tmp252 2
+  679 op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp253
   680 draw col %[white]
-    * op add *tmp261 :drawItemColor.6:y 5
-    * draw image :drawItemColor.6:iconX *tmp261 :drawItemColor.6:item 16 0
-    * draw col :drawItemColor.6:color1
-    * draw rect :drawItemColor.6:barX :drawItemColor.6:y :drawItemColor.6:length 10
-    * draw col :drawItemColor.6:color2
-    * draw lineRect :drawItemColor.6:barX :drawItemColor.6:y :drawItemColor.6:barLength 10
-    * op add *tmp262 :drawItemColor.6:y 5
-    * op add *tmp263 *tmp262 2
+  681 op add *tmp261 :drawItem.6:y 5
+  682 draw image :drawItemColor.6:iconX *tmp261 :drawItem.6:item 16 0
+  683 draw col %008000FF
+  684 draw rect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:length 10
+  685 draw col %00FF00FF
+  686 draw lineRect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:barLength 10
+  687 op add *tmp262 :drawItem.6:y 5
+  688 op add *tmp263 *tmp261 2
   689 set :drawBold.6:x :drawItemColor.6:textX
   690 set :drawBold.6:y *tmp263
   691 set :drawBold.6:alignment @right
-    * set :drawText.20:x :drawBold.6:x
-    * set :drawText.20:y :drawBold.6:y
-    * set :drawText.20:alignment :drawBold.6:alignment
+  692 set :drawText.20:x :drawItemColor.6:textX
+  693 set :drawText.20:y *tmp263
+  694 set :drawText.20:alignment @right
   695 print 40
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  696 draw print :drawBold.6:x :drawBold.6:y :drawBold.6:alignment
   697 label *label125
-    * op add :drawText.21:x :drawBold.6:x 1
-    * set :drawText.21:y :drawBold.6:y
-    * set :drawText.21:alignment :drawBold.6:alignment
+  698 op add :drawText.21:x :drawItemColor.6:textX 1
+  699 set :drawText.21:y *tmp263
+  700 set :drawText.21:alignment @right
   701 print 40
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  702 draw print :drawText.21:x :drawBold.6:y :drawBold.6:alignment
   703 label *label126
   704 label *label124
-    * op add :drawItemColor.6:col :drawItemColor.6:col 1
-    * jump *label127 lessThan :drawItemColor.6:col :drawItemColor.6:columns
+  705 op add :drawItemColor.6:col :drawItem.6:col 1
+  706 jump *label127 lessThan :drawItemColor.6:col :drawItem.6:columns
   707 set :drawItemColor.6:col 0
-    * op sub :drawItemColor.6:y :drawItemColor.6:y 15
+  708 op sub :drawItemColor.6:y :drawItem.6:y 15
   709 label *label127
   710 label *label128
   711 label *label123
-    * set :drawItem.6:col :drawItemColor.6:col
   712 set :drawItem.6:y :drawItemColor.6:y
   713 label *label122
-    * set :updateDisplay:y :drawItem.6:y
+  714 set :updateDisplay:y :drawItemColor.6:y
   715 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
   716 set :drawItem.7:col 0
-    * set :drawItem.7:y :updateDisplay:y
+  717 set :drawItem.7:y :drawItem.6:y
   718 set :drawItem.7:columns 1
   719 set :drawItem.7:item @silicon
   720 set :drawItem.7:current *tmp267
   721 set :drawItem.7:target 40
   722 set :drawItemColor.7:color1 %008000FF
   723 set :drawItemColor.7:color2 %00FF00FF
-    * set :drawItemColor.7:col :drawItem.7:col
-    * set :drawItemColor.7:y :drawItem.7:y
-    * set :drawItemColor.7:columns :drawItem.7:columns
-    * set :drawItemColor.7:item :drawItem.7:item
-    * set :drawItemColor.7:current :drawItem.7:current
-    * set :drawItemColor.7:target :drawItem.7:target
-    * op mul *tmp268 :drawItemColor.7:columns 176
-    * op div *tmp269 *tmp268 2
+  724 set :drawItemColor.7:col 0
+  725 set :drawItemColor.7:y :updateDisplay:y
+  726 set :drawItemColor.7:columns 1
+  727 set :drawItemColor.7:item @silicon
+  728 set :drawItemColor.7:current *tmp267
+  729 set :drawItemColor.7:target 40
+  730 op mul *tmp268 :drawItem.7:columns 176
+  731 op mul *tmp269 :drawItemColor.7:columns 88
   732 op sub :drawItemColor.7:barLength 214 *tmp269
   733 op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
-    * op mul *tmp272 :drawItemColor.7:barLength :drawItemColor.7:current
-    * op div *tmp273 *tmp272 :drawItemColor.7:target
+  734 op mul *tmp272 :drawItemColor.7:barLength :drawItem.7:current
+  735 op div *tmp273 *tmp272 :drawItem.7:target
   736 op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
-    * op mul *tmp275 :drawItemColor.7:col 176
-    * op div *tmp276 *tmp275 2
+  737 op mul *tmp275 :drawItem.7:col 176
+  738 op mul *tmp276 :drawItemColor.7:col 88
   739 op add :drawItemColor.7:iconX 11 *tmp276
-    * op mul *tmp278 :drawItemColor.7:col 176
-    * op div *tmp279 *tmp278 2
-    * op add :drawItemColor.7:barX 22 *tmp279
-    * op mul *tmp281 :drawItemColor.7:col 176
-    * op div *tmp282 *tmp281 2
-    * op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp282
+  740 op mul *tmp278 :drawItem.7:col 176
+  741 op div *tmp279 *tmp275 2
+  742 op add :drawItemColor.7:barX 22 *tmp276
+  743 op mul *tmp281 :drawItem.7:col 176
+  744 op div *tmp282 *tmp275 2
+  745 op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp276
   746 draw col %[white]
-    * op add *tmp284 :drawItemColor.7:y 5
-    * draw image :drawItemColor.7:iconX *tmp284 :drawItemColor.7:item 16 0
-    * draw col :drawItemColor.7:color1
-    * draw rect :drawItemColor.7:barX :drawItemColor.7:y :drawItemColor.7:length 10
-    * draw col :drawItemColor.7:color2
-    * draw lineRect :drawItemColor.7:barX :drawItemColor.7:y :drawItemColor.7:barLength 10
-    * op add *tmp285 :drawItemColor.7:y 5
-    * op add *tmp286 *tmp285 2
+  747 op add *tmp284 :drawItem.7:y 5
+  748 draw image :drawItemColor.7:iconX *tmp284 :drawItem.7:item 16 0
+  749 draw col %008000FF
+  750 draw rect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:length 10
+  751 draw col %00FF00FF
+  752 draw lineRect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:barLength 10
+  753 op add *tmp285 :drawItem.7:y 5
+  754 op add *tmp286 *tmp284 2
   755 set :drawBold.7:x :drawItemColor.7:textX
   756 set :drawBold.7:y *tmp286
   757 set :drawBold.7:alignment @right
-    * set :drawText.22:x :drawBold.7:x
-    * set :drawText.22:y :drawBold.7:y
-    * set :drawText.22:alignment :drawBold.7:alignment
+  758 set :drawText.22:x :drawItemColor.7:textX
+  759 set :drawText.22:y *tmp286
+  760 set :drawText.22:alignment @right
   761 print 40
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  762 draw print :drawBold.7:x :drawBold.7:y :drawBold.7:alignment
   763 label *label132
-    * op add :drawText.23:x :drawBold.7:x 1
-    * set :drawText.23:y :drawBold.7:y
-    * set :drawText.23:alignment :drawBold.7:alignment
+  764 op add :drawText.23:x :drawItemColor.7:textX 1
+  765 set :drawText.23:y *tmp286
+  766 set :drawText.23:alignment @right
   767 print 40
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  768 draw print :drawText.23:x :drawBold.7:y :drawBold.7:alignment
   769 label *label133
   770 label *label131
-    * op add :drawItemColor.7:col :drawItemColor.7:col 1
-    * jump *label134 lessThan :drawItemColor.7:col :drawItemColor.7:columns
+  771 op add :drawItemColor.7:col :drawItem.7:col 1
+  772 jump *label134 lessThan :drawItemColor.7:col :drawItem.7:columns
   773 set :drawItemColor.7:col 0
-    * op sub :drawItemColor.7:y :drawItemColor.7:y 15
+  774 op sub :drawItemColor.7:y :drawItem.7:y 15
   775 label *label134
   776 label *label135
   777 label *label130
-    * set :drawItem.7:col :drawItemColor.7:col
   778 set :drawItem.7:y :drawItemColor.7:y
   779 label *label129
-    * set :updateDisplay:y :drawItem.7:y
+  780 set :updateDisplay:y :drawItemColor.7:y
   781 jump *label121 always
   782 label *label120
   783 op idiv *tmp291 :drawAddReco:progress 0.01
   784 set :drawItem.8:col 0
-    * set :drawItem.8:y :updateDisplay:y
+  785 set :drawItem.8:y :drawTitleRow.3:y
   786 set :drawItem.8:columns 1
   787 set :drawItem.8:item @poly
   788 set :drawItem.8:current :drawAddReco:progress
   789 set :drawItem.8:target 1
   790 set :drawItemColor.8:color1 %008000FF
   791 set :drawItemColor.8:color2 %00FF00FF
-    * set :drawItemColor.8:col :drawItem.8:col
-    * set :drawItemColor.8:y :drawItem.8:y
-    * set :drawItemColor.8:columns :drawItem.8:columns
-    * set :drawItemColor.8:item :drawItem.8:item
-    * set :drawItemColor.8:current :drawItem.8:current
-    * set :drawItemColor.8:target :drawItem.8:target
-    * op mul *tmp292 :drawItemColor.8:columns 176
-    * op div *tmp293 *tmp292 2
+  792 set :drawItemColor.8:col 0
+  793 set :drawItemColor.8:y :updateDisplay:y
+  794 set :drawItemColor.8:columns 1
+  795 set :drawItemColor.8:item @poly
+  796 set :drawItemColor.8:current :drawAddReco:progress
+  797 set :drawItemColor.8:target 1
+  798 op mul *tmp292 :drawItem.8:columns 176
+  799 op mul *tmp293 :drawItemColor.8:columns 88
   800 op sub :drawItemColor.8:barLength 214 *tmp293
   801 op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
-    * op mul *tmp296 :drawItemColor.8:barLength :drawItemColor.8:current
-    * op div *tmp297 *tmp296 :drawItemColor.8:target
+  802 op mul *tmp296 :drawItemColor.8:barLength :drawItem.8:current
+  803 op div *tmp297 *tmp296 :drawItem.8:target
   804 op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
-    * op mul *tmp299 :drawItemColor.8:col 176
-    * op div *tmp300 *tmp299 2
+  805 op mul *tmp299 :drawItem.8:col 176
+  806 op mul *tmp300 :drawItemColor.8:col 88
   807 op add :drawItemColor.8:iconX 11 *tmp300
-    * op mul *tmp302 :drawItemColor.8:col 176
-    * op div *tmp303 *tmp302 2
-    * op add :drawItemColor.8:barX 22 *tmp303
-    * op mul *tmp305 :drawItemColor.8:col 176
-    * op div *tmp306 *tmp305 2
-    * op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp306
+  808 op mul *tmp302 :drawItem.8:col 176
+  809 op div *tmp303 *tmp299 2
+  810 op add :drawItemColor.8:barX 22 *tmp300
+  811 op mul *tmp305 :drawItem.8:col 176
+  812 op div *tmp306 *tmp299 2
+  813 op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp300
   814 draw col %[white]
-    * op add *tmp308 :drawItemColor.8:y 5
-    * draw image :drawItemColor.8:iconX *tmp308 :drawItemColor.8:item 16 0
-    * draw col :drawItemColor.8:color1
-    * draw rect :drawItemColor.8:barX :drawItemColor.8:y :drawItemColor.8:length 10
-    * draw col :drawItemColor.8:color2
-    * draw lineRect :drawItemColor.8:barX :drawItemColor.8:y :drawItemColor.8:barLength 10
-    * op add *tmp309 :drawItemColor.8:y 5
-    * op add *tmp310 *tmp309 2
+  815 op add *tmp308 :drawItem.8:y 5
+  816 draw image :drawItemColor.8:iconX *tmp308 :drawItem.8:item 16 0
+  817 draw col %008000FF
+  818 draw rect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:length 10
+  819 draw col %00FF00FF
+  820 draw lineRect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:barLength 10
+  821 op add *tmp309 :drawItem.8:y 5
+  822 op add *tmp310 *tmp308 2
   823 set :drawBold.8:x :drawItemColor.8:textX
   824 set :drawBold.8:y *tmp310
   825 set :drawBold.8:alignment @right
-    * set :drawText.24:x :drawBold.8:x
-    * set :drawText.24:y :drawBold.8:y
-    * set :drawText.24:alignment :drawBold.8:alignment
+  826 set :drawText.24:x :drawItemColor.8:textX
+  827 set :drawText.24:y *tmp310
+  828 set :drawText.24:alignment @right
   829 print *tmp291
   830 print "%"
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  831 draw print :drawBold.8:x :drawBold.8:y :drawBold.8:alignment
   832 label *label139
-    * op add :drawText.25:x :drawBold.8:x 1
-    * set :drawText.25:y :drawBold.8:y
-    * set :drawText.25:alignment :drawBold.8:alignment
+  833 op add :drawText.25:x :drawItemColor.8:textX 1
+  834 set :drawText.25:y *tmp310
+  835 set :drawText.25:alignment @right
   836 print *tmp291
   837 print "%"
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  838 draw print :drawText.25:x :drawBold.8:y :drawBold.8:alignment
   839 label *label140
   840 label *label138
-    * op add :drawItemColor.8:col :drawItemColor.8:col 1
-    * jump *label141 lessThan :drawItemColor.8:col :drawItemColor.8:columns
+  841 op add :drawItemColor.8:col :drawItem.8:col 1
+  842 jump *label141 lessThan :drawItemColor.8:col :drawItem.8:columns
   843 set :drawItemColor.8:col 0
-    * op sub :drawItemColor.8:y :drawItemColor.8:y 15
+  844 op sub :drawItemColor.8:y :drawItem.8:y 15
   845 label *label141
   846 label *label142
   847 label *label137
-    * set :drawItem.8:col :drawItemColor.8:col
   848 set :drawItem.8:y :drawItemColor.8:y
   849 label *label136
-    * set :updateDisplay:y :drawItem.8:y
-    * op sub :updateDisplay:y :updateDisplay:y 15
+  850 set :updateDisplay:y :drawItemColor.8:y
+  851 op sub :updateDisplay:y :drawItem.8:y 15
   852 label *label121
   853 op sub :updateDisplay:y :updateDisplay:y 5
   854 label *label114
 
   861 set :drawTitleRow.4:y :updateDisplay:y
   862 set :drawTitleRow.4:alignment @bottomLeft
   863 set :drawText.26:x 22
-    * set :drawText.26:y :drawTitleRow.4:y
-    * set :drawText.26:alignment :drawTitleRow.4:alignment
+  864 set :drawText.26:y :updateDisplay:y
+  865 set :drawText.26:alignment @bottomLeft
   866 print "Reconstructor"
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  867 draw print 22 :drawTitleRow.4:y :drawTitleRow.4:alignment
   868 label *label147
   869 set :drawText.27:x 23
-    * set :drawText.27:y :drawTitleRow.4:y
-    * set :drawText.27:alignment :drawTitleRow.4:alignment
+  870 set :drawText.27:y :updateDisplay:y
+  871 set :drawText.27:alignment @bottomLeft
   872 print "Reconstructor"
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  873 draw print 23 :drawTitleRow.4:y :drawTitleRow.4:alignment
   874 label *label148
-    * op sub :drawTitleRow.4:y :drawTitleRow.4:y 15
+  875 op sub :drawTitleRow.4:y :updateDisplay:y 15
   876 label *label146
   877 set :updateDisplay:y :drawTitleRow.4:y
   878 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   879 jump *label149 notEqual :drawMultiReco:progress 0
   880 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
   881 set :drawItem.9:col 0
-    * set :drawItem.9:y :updateDisplay:y
+  882 set :drawItem.9:y :drawTitleRow.4:y
   883 set :drawItem.9:columns 1
   884 set :drawItem.9:item @metaglass
   885 set :drawItem.9:current *tmp320
   886 set :drawItem.9:target 40
   887 set :drawItemColor.9:color1 %008000FF
   888 set :drawItemColor.9:color2 %00FF00FF
-    * set :drawItemColor.9:col :drawItem.9:col
-    * set :drawItemColor.9:y :drawItem.9:y
-    * set :drawItemColor.9:columns :drawItem.9:columns
-    * set :drawItemColor.9:item :drawItem.9:item
-    * set :drawItemColor.9:current :drawItem.9:current
-    * set :drawItemColor.9:target :drawItem.9:target
-    * op mul *tmp321 :drawItemColor.9:columns 176
-    * op div *tmp322 *tmp321 2
+  889 set :drawItemColor.9:col 0
+  890 set :drawItemColor.9:y :updateDisplay:y
+  891 set :drawItemColor.9:columns 1
+  892 set :drawItemColor.9:item @metaglass
+  893 set :drawItemColor.9:current *tmp320
+  894 set :drawItemColor.9:target 40
+  895 op mul *tmp321 :drawItem.9:columns 176
+  896 op mul *tmp322 :drawItemColor.9:columns 88
   897 op sub :drawItemColor.9:barLength 214 *tmp322
   898 op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
-    * op mul *tmp325 :drawItemColor.9:barLength :drawItemColor.9:current
-    * op div *tmp326 *tmp325 :drawItemColor.9:target
+  899 op mul *tmp325 :drawItemColor.9:barLength :drawItem.9:current
+  900 op div *tmp326 *tmp325 :drawItem.9:target
   901 op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
-    * op mul *tmp328 :drawItemColor.9:col 176
-    * op div *tmp329 *tmp328 2
+  902 op mul *tmp328 :drawItem.9:col 176
+  903 op mul *tmp329 :drawItemColor.9:col 88
   904 op add :drawItemColor.9:iconX 11 *tmp329
-    * op mul *tmp331 :drawItemColor.9:col 176
-    * op div *tmp332 *tmp331 2
-    * op add :drawItemColor.9:barX 22 *tmp332
-    * op mul *tmp334 :drawItemColor.9:col 176
-    * op div *tmp335 *tmp334 2
-    * op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp335
+  905 op mul *tmp331 :drawItem.9:col 176
+  906 op div *tmp332 *tmp328 2
+  907 op add :drawItemColor.9:barX 22 *tmp329
+  908 op mul *tmp334 :drawItem.9:col 176
+  909 op div *tmp335 *tmp328 2
+  910 op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp329
   911 draw col %[white]
-    * op add *tmp337 :drawItemColor.9:y 5
-    * draw image :drawItemColor.9:iconX *tmp337 :drawItemColor.9:item 16 0
-    * draw col :drawItemColor.9:color1
-    * draw rect :drawItemColor.9:barX :drawItemColor.9:y :drawItemColor.9:length 10
-    * draw col :drawItemColor.9:color2
-    * draw lineRect :drawItemColor.9:barX :drawItemColor.9:y :drawItemColor.9:barLength 10
-    * op add *tmp338 :drawItemColor.9:y 5
-    * op add *tmp339 *tmp338 2
+  912 op add *tmp337 :drawItem.9:y 5
+  913 draw image :drawItemColor.9:iconX *tmp337 :drawItem.9:item 16 0
+  914 draw col %008000FF
+  915 draw rect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:length 10
+  916 draw col %00FF00FF
+  917 draw lineRect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:barLength 10
+  918 op add *tmp338 :drawItem.9:y 5
+  919 op add *tmp339 *tmp337 2
   920 set :drawBold.9:x :drawItemColor.9:textX
   921 set :drawBold.9:y *tmp339
   922 set :drawBold.9:alignment @right
-    * set :drawText.28:x :drawBold.9:x
-    * set :drawText.28:y :drawBold.9:y
-    * set :drawText.28:alignment :drawBold.9:alignment
+  923 set :drawText.28:x :drawItemColor.9:textX
+  924 set :drawText.28:y *tmp339
+  925 set :drawText.28:alignment @right
   926 print 40
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  927 draw print :drawBold.9:x :drawBold.9:y :drawBold.9:alignment
   928 label *label154
-    * op add :drawText.29:x :drawBold.9:x 1
-    * set :drawText.29:y :drawBold.9:y
-    * set :drawText.29:alignment :drawBold.9:alignment
+  929 op add :drawText.29:x :drawItemColor.9:textX 1
+  930 set :drawText.29:y *tmp339
+  931 set :drawText.29:alignment @right
   932 print 40
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  933 draw print :drawText.29:x :drawBold.9:y :drawBold.9:alignment
   934 label *label155
   935 label *label153
-    * op add :drawItemColor.9:col :drawItemColor.9:col 1
-    * jump *label156 lessThan :drawItemColor.9:col :drawItemColor.9:columns
+  936 op add :drawItemColor.9:col :drawItem.9:col 1
+  937 jump *label156 lessThan :drawItemColor.9:col :drawItem.9:columns
   938 set :drawItemColor.9:col 0
-    * op sub :drawItemColor.9:y :drawItemColor.9:y 15
+  939 op sub :drawItemColor.9:y :drawItem.9:y 15
   940 label *label156
   941 label *label157
   942 label *label152
-    * set :drawItem.9:col :drawItemColor.9:col
   943 set :drawItem.9:y :drawItemColor.9:y
   944 label *label151
-    * set :updateDisplay:y :drawItem.9:y
+  945 set :updateDisplay:y :drawItemColor.9:y
   946 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
   947 set :drawItem.10:col 0
-    * set :drawItem.10:y :updateDisplay:y
+  948 set :drawItem.10:y :drawItem.9:y
   949 set :drawItem.10:columns 1
   950 set :drawItem.10:item @titanium
   951 set :drawItem.10:current *tmp343
   952 set :drawItem.10:target 80
   953 set :drawItemColor.10:color1 %008000FF
   954 set :drawItemColor.10:color2 %00FF00FF
-    * set :drawItemColor.10:col :drawItem.10:col
-    * set :drawItemColor.10:y :drawItem.10:y
-    * set :drawItemColor.10:columns :drawItem.10:columns
-    * set :drawItemColor.10:item :drawItem.10:item
-    * set :drawItemColor.10:current :drawItem.10:current
-    * set :drawItemColor.10:target :drawItem.10:target
-    * op mul *tmp344 :drawItemColor.10:columns 176
-    * op div *tmp345 *tmp344 2
+  955 set :drawItemColor.10:col 0
+  956 set :drawItemColor.10:y :updateDisplay:y
+  957 set :drawItemColor.10:columns 1
+  958 set :drawItemColor.10:item @titanium
+  959 set :drawItemColor.10:current *tmp343
+  960 set :drawItemColor.10:target 80
+  961 op mul *tmp344 :drawItem.10:columns 176
+  962 op mul *tmp345 :drawItemColor.10:columns 88
   963 op sub :drawItemColor.10:barLength 214 *tmp345
   964 op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
-    * op mul *tmp348 :drawItemColor.10:barLength :drawItemColor.10:current
-    * op div *tmp349 *tmp348 :drawItemColor.10:target
+  965 op mul *tmp348 :drawItemColor.10:barLength :drawItem.10:current
+  966 op div *tmp349 *tmp348 :drawItem.10:target
   967 op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
-    * op mul *tmp351 :drawItemColor.10:col 176
-    * op div *tmp352 *tmp351 2
+  968 op mul *tmp351 :drawItem.10:col 176
+  969 op mul *tmp352 :drawItemColor.10:col 88
   970 op add :drawItemColor.10:iconX 11 *tmp352
-    * op mul *tmp354 :drawItemColor.10:col 176
-    * op div *tmp355 *tmp354 2
-    * op add :drawItemColor.10:barX 22 *tmp355
-    * op mul *tmp357 :drawItemColor.10:col 176
-    * op div *tmp358 *tmp357 2
-    * op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp358
+  971 op mul *tmp354 :drawItem.10:col 176
+  972 op div *tmp355 *tmp351 2
+  973 op add :drawItemColor.10:barX 22 *tmp352
+  974 op mul *tmp357 :drawItem.10:col 176
+  975 op div *tmp358 *tmp351 2
+  976 op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp352
   977 draw col %[white]
-    * op add *tmp360 :drawItemColor.10:y 5
-    * draw image :drawItemColor.10:iconX *tmp360 :drawItemColor.10:item 16 0
-    * draw col :drawItemColor.10:color1
-    * draw rect :drawItemColor.10:barX :drawItemColor.10:y :drawItemColor.10:length 10
-    * draw col :drawItemColor.10:color2
-    * draw lineRect :drawItemColor.10:barX :drawItemColor.10:y :drawItemColor.10:barLength 10
-    * op add *tmp361 :drawItemColor.10:y 5
-    * op add *tmp362 *tmp361 2
+  978 op add *tmp360 :drawItem.10:y 5
+  979 draw image :drawItemColor.10:iconX *tmp360 :drawItem.10:item 16 0
+  980 draw col %008000FF
+  981 draw rect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:length 10
+  982 draw col %00FF00FF
+  983 draw lineRect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:barLength 10
+  984 op add *tmp361 :drawItem.10:y 5
+  985 op add *tmp362 *tmp360 2
   986 set :drawBold.10:x :drawItemColor.10:textX
   987 set :drawBold.10:y *tmp362
   988 set :drawBold.10:alignment @right
-    * set :drawText.30:x :drawBold.10:x
-    * set :drawText.30:y :drawBold.10:y
-    * set :drawText.30:alignment :drawBold.10:alignment
+  989 set :drawText.30:x :drawItemColor.10:textX
+  990 set :drawText.30:y *tmp362
+  991 set :drawText.30:alignment @right
   992 print 80
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  993 draw print :drawBold.10:x :drawBold.10:y :drawBold.10:alignment
   994 label *label161
-    * op add :drawText.31:x :drawBold.10:x 1
-    * set :drawText.31:y :drawBold.10:y
-    * set :drawText.31:alignment :drawBold.10:alignment
+  995 op add :drawText.31:x :drawItemColor.10:textX 1
+  996 set :drawText.31:y *tmp362
+  997 set :drawText.31:alignment @right
   998 print 80
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+  999 draw print :drawText.31:x :drawBold.10:y :drawBold.10:alignment
  1000 label *label162
  1001 label *label160
-    * op add :drawItemColor.10:col :drawItemColor.10:col 1
-    * jump *label163 lessThan :drawItemColor.10:col :drawItemColor.10:columns
+ 1002 op add :drawItemColor.10:col :drawItem.10:col 1
+ 1003 jump *label163 lessThan :drawItemColor.10:col :drawItem.10:columns
  1004 set :drawItemColor.10:col 0
-    * op sub :drawItemColor.10:y :drawItemColor.10:y 15
+ 1005 op sub :drawItemColor.10:y :drawItem.10:y 15
  1006 label *label163
  1007 label *label164
  1008 label *label159
-    * set :drawItem.10:col :drawItemColor.10:col
  1009 set :drawItem.10:y :drawItemColor.10:y
  1010 label *label158
-    * set :updateDisplay:y :drawItem.10:y
+ 1011 set :updateDisplay:y :drawItemColor.10:y
  1012 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
  1013 set :drawItem.11:col 0
-    * set :drawItem.11:y :updateDisplay:y
+ 1014 set :drawItem.11:y :drawItem.10:y
  1015 set :drawItem.11:columns 1
  1016 set :drawItem.11:item @silicon
  1017 set :drawItem.11:current *tmp366
  1018 set :drawItem.11:target 130
  1019 set :drawItemColor.11:color1 %008000FF
  1020 set :drawItemColor.11:color2 %00FF00FF
-    * set :drawItemColor.11:col :drawItem.11:col
-    * set :drawItemColor.11:y :drawItem.11:y
-    * set :drawItemColor.11:columns :drawItem.11:columns
-    * set :drawItemColor.11:item :drawItem.11:item
-    * set :drawItemColor.11:current :drawItem.11:current
-    * set :drawItemColor.11:target :drawItem.11:target
-    * op mul *tmp367 :drawItemColor.11:columns 176
-    * op div *tmp368 *tmp367 2
+ 1021 set :drawItemColor.11:col 0
+ 1022 set :drawItemColor.11:y :updateDisplay:y
+ 1023 set :drawItemColor.11:columns 1
+ 1024 set :drawItemColor.11:item @silicon
+ 1025 set :drawItemColor.11:current *tmp366
+ 1026 set :drawItemColor.11:target 130
+ 1027 op mul *tmp367 :drawItem.11:columns 176
+ 1028 op mul *tmp368 :drawItemColor.11:columns 88
  1029 op sub :drawItemColor.11:barLength 214 *tmp368
  1030 op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
-    * op mul *tmp371 :drawItemColor.11:barLength :drawItemColor.11:current
-    * op div *tmp372 *tmp371 :drawItemColor.11:target
+ 1031 op mul *tmp371 :drawItemColor.11:barLength :drawItem.11:current
+ 1032 op div *tmp372 *tmp371 :drawItem.11:target
  1033 op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
-    * op mul *tmp374 :drawItemColor.11:col 176
-    * op div *tmp375 *tmp374 2
+ 1034 op mul *tmp374 :drawItem.11:col 176
+ 1035 op mul *tmp375 :drawItemColor.11:col 88
  1036 op add :drawItemColor.11:iconX 11 *tmp375
-    * op mul *tmp377 :drawItemColor.11:col 176
-    * op div *tmp378 *tmp377 2
-    * op add :drawItemColor.11:barX 22 *tmp378
-    * op mul *tmp380 :drawItemColor.11:col 176
-    * op div *tmp381 *tmp380 2
-    * op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp381
+ 1037 op mul *tmp377 :drawItem.11:col 176
+ 1038 op div *tmp378 *tmp374 2
+ 1039 op add :drawItemColor.11:barX 22 *tmp375
+ 1040 op mul *tmp380 :drawItem.11:col 176
+ 1041 op div *tmp381 *tmp374 2
+ 1042 op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp375
  1043 draw col %[white]
-    * op add *tmp383 :drawItemColor.11:y 5
-    * draw image :drawItemColor.11:iconX *tmp383 :drawItemColor.11:item 16 0
-    * draw col :drawItemColor.11:color1
-    * draw rect :drawItemColor.11:barX :drawItemColor.11:y :drawItemColor.11:length 10
-    * draw col :drawItemColor.11:color2
-    * draw lineRect :drawItemColor.11:barX :drawItemColor.11:y :drawItemColor.11:barLength 10
-    * op add *tmp384 :drawItemColor.11:y 5
-    * op add *tmp385 *tmp384 2
+ 1044 op add *tmp383 :drawItem.11:y 5
+ 1045 draw image :drawItemColor.11:iconX *tmp383 :drawItem.11:item 16 0
+ 1046 draw col %008000FF
+ 1047 draw rect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:length 10
+ 1048 draw col %00FF00FF
+ 1049 draw lineRect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:barLength 10
+ 1050 op add *tmp384 :drawItem.11:y 5
+ 1051 op add *tmp385 *tmp383 2
  1052 set :drawBold.11:x :drawItemColor.11:textX
  1053 set :drawBold.11:y *tmp385
  1054 set :drawBold.11:alignment @right
-    * set :drawText.32:x :drawBold.11:x
-    * set :drawText.32:y :drawBold.11:y
-    * set :drawText.32:alignment :drawBold.11:alignment
+ 1055 set :drawText.32:x :drawItemColor.11:textX
+ 1056 set :drawText.32:y *tmp385
+ 1057 set :drawText.32:alignment @right
  1058 print 130
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+ 1059 draw print :drawBold.11:x :drawBold.11:y :drawBold.11:alignment
  1060 label *label168
-    * op add :drawText.33:x :drawBold.11:x 1
-    * set :drawText.33:y :drawBold.11:y
-    * set :drawText.33:alignment :drawBold.11:alignment
+ 1061 op add :drawText.33:x :drawItemColor.11:textX 1
+ 1062 set :drawText.33:y *tmp385
+ 1063 set :drawText.33:alignment @right
  1064 print 130
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1065 draw print :drawText.33:x :drawBold.11:y :drawBold.11:alignment
  1066 label *label169
  1067 label *label167
-    * op add :drawItemColor.11:col :drawItemColor.11:col 1
-    * jump *label170 lessThan :drawItemColor.11:col :drawItemColor.11:columns
+ 1068 op add :drawItemColor.11:col :drawItem.11:col 1
+ 1069 jump *label170 lessThan :drawItemColor.11:col :drawItem.11:columns
  1070 set :drawItemColor.11:col 0
-    * op sub :drawItemColor.11:y :drawItemColor.11:y 15
+ 1071 op sub :drawItemColor.11:y :drawItem.11:y 15
  1072 label *label170
  1073 label *label171
  1074 label *label166
-    * set :drawItem.11:col :drawItemColor.11:col
  1075 set :drawItem.11:y :drawItemColor.11:y
  1076 label *label165
-    * set :updateDisplay:y :drawItem.11:y
+ 1077 set :updateDisplay:y :drawItemColor.11:y
  1078 jump *label150 always
  1079 label *label149
  1080 op idiv *tmp390 :drawMultiReco:progress 0.01
  1081 set :drawItem.12:col 0
-    * set :drawItem.12:y :updateDisplay:y
+ 1082 set :drawItem.12:y :drawTitleRow.4:y
  1083 set :drawItem.12:columns 1
  1084 set :drawItem.12:item @mega
  1085 set :drawItem.12:current :drawMultiReco:progress
  1086 set :drawItem.12:target 1
  1087 set :drawItemColor.12:color1 %008000FF
  1088 set :drawItemColor.12:color2 %00FF00FF
-    * set :drawItemColor.12:col :drawItem.12:col
-    * set :drawItemColor.12:y :drawItem.12:y
-    * set :drawItemColor.12:columns :drawItem.12:columns
-    * set :drawItemColor.12:item :drawItem.12:item
-    * set :drawItemColor.12:current :drawItem.12:current
-    * set :drawItemColor.12:target :drawItem.12:target
-    * op mul *tmp391 :drawItemColor.12:columns 176
-    * op div *tmp392 *tmp391 2
+ 1089 set :drawItemColor.12:col 0
+ 1090 set :drawItemColor.12:y :updateDisplay:y
+ 1091 set :drawItemColor.12:columns 1
+ 1092 set :drawItemColor.12:item @mega
+ 1093 set :drawItemColor.12:current :drawMultiReco:progress
+ 1094 set :drawItemColor.12:target 1
+ 1095 op mul *tmp391 :drawItem.12:columns 176
+ 1096 op mul *tmp392 :drawItemColor.12:columns 88
  1097 op sub :drawItemColor.12:barLength 214 *tmp392
  1098 op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
-    * op mul *tmp395 :drawItemColor.12:barLength :drawItemColor.12:current
-    * op div *tmp396 *tmp395 :drawItemColor.12:target
+ 1099 op mul *tmp395 :drawItemColor.12:barLength :drawItem.12:current
+ 1100 op div *tmp396 *tmp395 :drawItem.12:target
  1101 op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
-    * op mul *tmp398 :drawItemColor.12:col 176
-    * op div *tmp399 *tmp398 2
+ 1102 op mul *tmp398 :drawItem.12:col 176
+ 1103 op mul *tmp399 :drawItemColor.12:col 88
  1104 op add :drawItemColor.12:iconX 11 *tmp399
-    * op mul *tmp401 :drawItemColor.12:col 176
-    * op div *tmp402 *tmp401 2
-    * op add :drawItemColor.12:barX 22 *tmp402
-    * op mul *tmp404 :drawItemColor.12:col 176
-    * op div *tmp405 *tmp404 2
-    * op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp405
+ 1105 op mul *tmp401 :drawItem.12:col 176
+ 1106 op div *tmp402 *tmp398 2
+ 1107 op add :drawItemColor.12:barX 22 *tmp399
+ 1108 op mul *tmp404 :drawItem.12:col 176
+ 1109 op div *tmp405 *tmp398 2
+ 1110 op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp399
  1111 draw col %[white]
-    * op add *tmp407 :drawItemColor.12:y 5
-    * draw image :drawItemColor.12:iconX *tmp407 :drawItemColor.12:item 16 0
-    * draw col :drawItemColor.12:color1
-    * draw rect :drawItemColor.12:barX :drawItemColor.12:y :drawItemColor.12:length 10
-    * draw col :drawItemColor.12:color2
-    * draw lineRect :drawItemColor.12:barX :drawItemColor.12:y :drawItemColor.12:barLength 10
-    * op add *tmp408 :drawItemColor.12:y 5
-    * op add *tmp409 *tmp408 2
+ 1112 op add *tmp407 :drawItem.12:y 5
+ 1113 draw image :drawItemColor.12:iconX *tmp407 :drawItem.12:item 16 0
+ 1114 draw col %008000FF
+ 1115 draw rect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:length 10
+ 1116 draw col %00FF00FF
+ 1117 draw lineRect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:barLength 10
+ 1118 op add *tmp408 :drawItem.12:y 5
+ 1119 op add *tmp409 *tmp407 2
  1120 set :drawBold.12:x :drawItemColor.12:textX
  1121 set :drawBold.12:y *tmp409
  1122 set :drawBold.12:alignment @right
-    * set :drawText.34:x :drawBold.12:x
-    * set :drawText.34:y :drawBold.12:y
-    * set :drawText.34:alignment :drawBold.12:alignment
+ 1123 set :drawText.34:x :drawItemColor.12:textX
+ 1124 set :drawText.34:y *tmp409
+ 1125 set :drawText.34:alignment @right
  1126 print *tmp390
  1127 print "%"
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1128 draw print :drawBold.12:x :drawBold.12:y :drawBold.12:alignment
  1129 label *label175
-    * op add :drawText.35:x :drawBold.12:x 1
-    * set :drawText.35:y :drawBold.12:y
-    * set :drawText.35:alignment :drawBold.12:alignment
+ 1130 op add :drawText.35:x :drawItemColor.12:textX 1
+ 1131 set :drawText.35:y *tmp409
+ 1132 set :drawText.35:alignment @right
  1133 print *tmp390
  1134 print "%"
-    * draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
+ 1135 draw print :drawText.35:x :drawBold.12:y :drawBold.12:alignment
  1136 label *label176
  1137 label *label174
-    * op add :drawItemColor.12:col :drawItemColor.12:col 1
-    * jump *label177 lessThan :drawItemColor.12:col :drawItemColor.12:columns
+ 1138 op add :drawItemColor.12:col :drawItem.12:col 1
+ 1139 jump *label177 lessThan :drawItemColor.12:col :drawItem.12:columns
  1140 set :drawItemColor.12:col 0
-    * op sub :drawItemColor.12:y :drawItemColor.12:y 15
+ 1141 op sub :drawItemColor.12:y :drawItem.12:y 15
  1142 label *label177
  1143 label *label178
  1144 label *label173
-    * set :drawItem.12:col :drawItemColor.12:col
  1145 set :drawItem.12:y :drawItemColor.12:y
  1146 label *label172
-    * set :updateDisplay:y :drawItem.12:y
-    * op sub :updateDisplay:y :updateDisplay:y 30
+ 1147 set :updateDisplay:y :drawItemColor.12:y
+ 1148 op sub :updateDisplay:y :drawItem.12:y 30
  1149 label *label150
  1150 op sub :updateDisplay:y :updateDisplay:y 5
  1151 label *label143
 
  1158 set :drawTitleRow.5:y :updateDisplay:y
  1159 set :drawTitleRow.5:alignment @bottomLeft
  1160 set :drawText.36:x 22
-    * set :drawText.36:y :drawTitleRow.5:y
-    * set :drawText.36:alignment :drawTitleRow.5:alignment
+ 1161 set :drawText.36:y :updateDisplay:y
+ 1162 set :drawText.36:alignment @bottomLeft
  1163 print "Builder"
-    * draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
+ 1164 draw print 22 :drawTitleRow.5:y :drawTitleRow.5:alignment
  1165 label *label183
  1166 set :drawText.37:x 23
-    * set :drawText.37:y :drawTitleRow.5:y
-    * set :drawText.37:alignment :drawTitleRow.5:alignment
+ 1167 set :drawText.37:y :updateDisplay:y
+ 1168 set :drawText.37:alignment @bottomLeft
  1169 print "Builder"
-    * draw print :drawText.37:x :drawText.37:y :drawText.37:alignment
+ 1170 draw print 23 :drawTitleRow.5:y :drawTitleRow.5:alignment
  1171 label *label184
-    * op sub :drawTitleRow.5:y :drawTitleRow.5:y 15
+ 1172 op sub :drawTitleRow.5:y :updateDisplay:y 15
  1173 label *label182
  1174 set :updateDisplay:y :drawTitleRow.5:y
  1175 jump *label185 notEqual .transportItem null
  1176 set :drawUnit:item @poly
  1177 set :drawUnit:items 0
-    * set :drawUnit:y :updateDisplay:y
+ 1178 set :drawUnit:y :drawTitleRow.5:y
  1179 set :drawItem.13:col 0
-    * set :drawItem.13:y :drawUnit:y
+ 1180 set :drawItem.13:y :updateDisplay:y
  1181 set :drawItem.13:columns 1
-    * set :drawItem.13:item :drawUnit:item
-    * set :drawItem.13:current :drawUnit:items
+ 1182 set :drawItem.13:item @poly
+ 1183 set :drawItem.13:current 0
  1184 set :drawItem.13:target .transportTarget
  1185 set :drawItemColor.13:color1 %008000FF
  1186 set :drawItemColor.13:color2 %00FF00FF
-    * set :drawItemColor.13:col :drawItem.13:col
-    * set :drawItemColor.13:y :drawItem.13:y
-    * set :drawItemColor.13:columns :drawItem.13:columns
-    * set :drawItemColor.13:item :drawItem.13:item
-    * set :drawItemColor.13:current :drawItem.13:current
+ 1187 set :drawItemColor.13:col 0
+ 1188 set :drawItemColor.13:y :drawUnit:y
+ 1189 set :drawItemColor.13:columns 1
+ 1190 set :drawItemColor.13:item :drawUnit:item
+ 1191 set :drawItemColor.13:current :drawUnit:items
  1192 set :drawItemColor.13:target :drawItem.13:target
-    * op mul *tmp417 :drawItemColor.13:columns 176
-    * op div *tmp418 *tmp417 2
+ 1193 op mul *tmp417 :drawItem.13:columns 176
+ 1194 op mul *tmp418 :drawItemColor.13:columns 88
  1195 op sub :drawItemColor.13:barLength 214 *tmp418
  1196 op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
-    * op mul *tmp421 :drawItemColor.13:barLength :drawItemColor.13:current
-    * op div *tmp422 *tmp421 :drawItemColor.13:target
+ 1197 op mul *tmp421 :drawItemColor.13:barLength :drawItem.13:current
+ 1198 op div *tmp422 *tmp421 :drawItem.13:target
  1199 op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
-    * op mul *tmp424 :drawItemColor.13:col 176
-    * op div *tmp425 *tmp424 2
+ 1200 op mul *tmp424 :drawItem.13:col 176
+ 1201 op mul *tmp425 :drawItemColor.13:col 88
  1202 op add :drawItemColor.13:iconX 11 *tmp425
-    * op mul *tmp427 :drawItemColor.13:col 176
-    * op div *tmp428 *tmp427 2
-    * op add :drawItemColor.13:barX 22 *tmp428
-    * op mul *tmp430 :drawItemColor.13:col 176
-    * op div *tmp431 *tmp430 2
-    * op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp431
+ 1203 op mul *tmp427 :drawItem.13:col 176
+ 1204 op div *tmp428 *tmp424 2
+ 1205 op add :drawItemColor.13:barX 22 *tmp425
+ 1206 op mul *tmp430 :drawItem.13:col 176
+ 1207 op div *tmp431 *tmp424 2
+ 1208 op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp425
  1209 draw col %[white]
-    * op add *tmp433 :drawItemColor.13:y 5
-    * draw image :drawItemColor.13:iconX *tmp433 :drawItemColor.13:item 16 0
-    * draw col :drawItemColor.13:color1
-    * draw rect :drawItemColor.13:barX :drawItemColor.13:y :drawItemColor.13:length 10
-    * draw col :drawItemColor.13:color2
-    * draw lineRect :drawItemColor.13:barX :drawItemColor.13:y :drawItemColor.13:barLength 10
-    * op add *tmp434 :drawItemColor.13:y 5
-    * op add *tmp435 *tmp434 2
+ 1210 op add *tmp433 :drawItem.13:y 5
+ 1211 draw image :drawItemColor.13:iconX *tmp433 :drawItem.13:item 16 0
+ 1212 draw col %008000FF
+ 1213 draw rect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:length 10
+ 1214 draw col %00FF00FF
+ 1215 draw lineRect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:barLength 10
+ 1216 op add *tmp434 :drawItem.13:y 5
+ 1217 op add *tmp435 *tmp433 2
  1218 set :drawBold.13:x :drawItemColor.13:textX
  1219 set :drawBold.13:y *tmp435
  1220 set :drawBold.13:alignment @right
-    * set :drawText.38:x :drawBold.13:x
-    * set :drawText.38:y :drawBold.13:y
-    * set :drawText.38:alignment :drawBold.13:alignment
+ 1221 set :drawText.38:x :drawItemColor.13:textX
+ 1222 set :drawText.38:y *tmp435
+ 1223 set :drawText.38:alignment @right
  1224 print .transportTarget
-    * draw print :drawText.38:x :drawText.38:y :drawText.38:alignment
+ 1225 draw print :drawBold.13:x :drawBold.13:y :drawBold.13:alignment
  1226 label *label191
-    * op add :drawText.39:x :drawBold.13:x 1
-    * set :drawText.39:y :drawBold.13:y
-    * set :drawText.39:alignment :drawBold.13:alignment
+ 1227 op add :drawText.39:x :drawItemColor.13:textX 1
+ 1228 set :drawText.39:y *tmp435
+ 1229 set :drawText.39:alignment @right
  1230 print .transportTarget
-    * draw print :drawText.39:x :drawText.39:y :drawText.39:alignment
+ 1231 draw print :drawText.39:x :drawBold.13:y :drawBold.13:alignment
  1232 label *label192
  1233 label *label190
-    * op add :drawItemColor.13:col :drawItemColor.13:col 1
-    * jump *label193 lessThan :drawItemColor.13:col :drawItemColor.13:columns
+ 1234 op add :drawItemColor.13:col :drawItem.13:col 1
+ 1235 jump *label193 lessThan :drawItemColor.13:col :drawItem.13:columns
  1236 set :drawItemColor.13:col 0
-    * op sub :drawItemColor.13:y :drawItemColor.13:y 15
+ 1237 op sub :drawItemColor.13:y :drawItem.13:y 15
  1238 label *label193
  1239 label *label194
  1240 label *label189
-    * set :drawItem.13:col :drawItemColor.13:col
  1241 set :drawItem.13:y :drawItemColor.13:y
  1242 label *label188
-    * set :drawUnit:y :drawItem.13:y
+ 1243 set :drawUnit:y :drawItemColor.13:y
  1244 label *label187
-    * set :updateDisplay:y :drawUnit:y
+ 1245 set :updateDisplay:y :drawItem.13:y
  1246 jump *label186 always
  1247 label *label185
  1248 sensor :drawBuilder:unitItem @unit @firstItem
 
  1251 op mul *tmp444 *tmp442 *tmp443
  1252 set :drawUnit.1:item .transportItem
  1253 set :drawUnit.1:items *tmp444
-    * set :drawUnit.1:y :updateDisplay:y
+ 1254 set :drawUnit.1:y :drawTitleRow.5:y
  1255 set :drawItem.14:col 0
-    * set :drawItem.14:y :drawUnit.1:y
+ 1256 set :drawItem.14:y :updateDisplay:y
  1257 set :drawItem.14:columns 1
  1258 set :drawItem.14:item :drawUnit.1:item
-    * set :drawItem.14:current :drawUnit.1:items
+ 1259 set :drawItem.14:current *tmp444
  1260 set :drawItem.14:target .transportTarget
  1261 set :drawItemColor.14:color1 %008000FF
  1262 set :drawItemColor.14:color2 %00FF00FF
-    * set :drawItemColor.14:col :drawItem.14:col
-    * set :drawItemColor.14:y :drawItem.14:y
-    * set :drawItemColor.14:columns :drawItem.14:columns
-    * set :drawItemColor.14:item :drawItem.14:item
-    * set :drawItemColor.14:current :drawItem.14:current
+ 1263 set :drawItemColor.14:col 0
+ 1264 set :drawItemColor.14:y :drawUnit.1:y
+ 1265 set :drawItemColor.14:columns 1
+ 1266 set :drawItemColor.14:item :drawUnit.1:item
+ 1267 set :drawItemColor.14:current :drawUnit.1:items
  1268 set :drawItemColor.14:target :drawItem.14:target
-    * op mul *tmp445 :drawItemColor.14:columns 176
-    * op div *tmp446 *tmp445 2
+ 1269 op mul *tmp445 :drawItem.14:columns 176
+ 1270 op mul *tmp446 :drawItemColor.14:columns 88
  1271 op sub :drawItemColor.14:barLength 214 *tmp446
  1272 op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
-    * op mul *tmp449 :drawItemColor.14:barLength :drawItemColor.14:current
-    * op div *tmp450 *tmp449 :drawItemColor.14:target
+ 1273 op mul *tmp449 :drawItemColor.14:barLength :drawItem.14:current
+ 1274 op div *tmp450 *tmp449 :drawItem.14:target
  1275 op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
-    * op mul *tmp452 :drawItemColor.14:col 176
-    * op div *tmp453 *tmp452 2
+ 1276 op mul *tmp452 :drawItem.14:col 176
+ 1277 op mul *tmp453 :drawItemColor.14:col 88
  1278 op add :drawItemColor.14:iconX 11 *tmp453
-    * op mul *tmp455 :drawItemColor.14:col 176
-    * op div *tmp456 *tmp455 2
-    * op add :drawItemColor.14:barX 22 *tmp456
-    * op mul *tmp458 :drawItemColor.14:col 176
-    * op div *tmp459 *tmp458 2
-    * op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp459
+ 1279 op mul *tmp455 :drawItem.14:col 176
+ 1280 op div *tmp456 *tmp452 2
+ 1281 op add :drawItemColor.14:barX 22 *tmp453
+ 1282 op mul *tmp458 :drawItem.14:col 176
+ 1283 op div *tmp459 *tmp452 2
+ 1284 op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp453
  1285 draw col %[white]
-    * op add *tmp461 :drawItemColor.14:y 5
-    * draw image :drawItemColor.14:iconX *tmp461 :drawItemColor.14:item 16 0
-    * draw col :drawItemColor.14:color1
-    * draw rect :drawItemColor.14:barX :drawItemColor.14:y :drawItemColor.14:length 10
-    * draw col :drawItemColor.14:color2
-    * draw lineRect :drawItemColor.14:barX :drawItemColor.14:y :drawItemColor.14:barLength 10
-    * op add *tmp462 :drawItemColor.14:y 5
-    * op add *tmp463 *tmp462 2
+ 1286 op add *tmp461 :drawItem.14:y 5
+ 1287 draw image :drawItemColor.14:iconX *tmp461 :drawItem.14:item 16 0
+ 1288 draw col %008000FF
+ 1289 draw rect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:length 10
+ 1290 draw col %00FF00FF
+ 1291 draw lineRect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:barLength 10
+ 1292 op add *tmp462 :drawItem.14:y 5
+ 1293 op add *tmp463 *tmp461 2
  1294 set :drawBold.14:x :drawItemColor.14:textX
  1295 set :drawBold.14:y *tmp463
  1296 set :drawBold.14:alignment @right
-    * set :drawText.40:x :drawBold.14:x
-    * set :drawText.40:y :drawBold.14:y
-    * set :drawText.40:alignment :drawBold.14:alignment
+ 1297 set :drawText.40:x :drawItemColor.14:textX
+ 1298 set :drawText.40:y *tmp463
+ 1299 set :drawText.40:alignment @right
  1300 print .transportTarget
-    * draw print :drawText.40:x :drawText.40:y :drawText.40:alignment
+ 1301 draw print :drawBold.14:x :drawBold.14:y :drawBold.14:alignment
  1302 label *label199
-    * op add :drawText.41:x :drawBold.14:x 1
-    * set :drawText.41:y :drawBold.14:y
-    * set :drawText.41:alignment :drawBold.14:alignment
+ 1303 op add :drawText.41:x :drawItemColor.14:textX 1
+ 1304 set :drawText.41:y *tmp463
+ 1305 set :drawText.41:alignment @right
  1306 print .transportTarget
-    * draw print :drawText.41:x :drawText.41:y :drawText.41:alignment
+ 1307 draw print :drawText.41:x :drawBold.14:y :drawBold.14:alignment
  1308 label *label200
  1309 label *label198
-    * op add :drawItemColor.14:col :drawItemColor.14:col 1
-    * jump *label201 lessThan :drawItemColor.14:col :drawItemColor.14:columns
+ 1310 op add :drawItemColor.14:col :drawItem.14:col 1
+ 1311 jump *label201 lessThan :drawItemColor.14:col :drawItem.14:columns
  1312 set :drawItemColor.14:col 0
-    * op sub :drawItemColor.14:y :drawItemColor.14:y 15
+ 1313 op sub :drawItemColor.14:y :drawItem.14:y 15
  1314 label *label201
  1315 label *label202
  1316 label *label197
-    * set :drawItem.14:col :drawItemColor.14:col
  1317 set :drawItem.14:y :drawItemColor.14:y
  1318 label *label196
-    * set :drawUnit.1:y :drawItem.14:y
+ 1319 set :drawUnit.1:y :drawItemColor.14:y
  1320 label *label195
-    * set :updateDisplay:y :drawUnit.1:y
+ 1321 set :updateDisplay:y :drawItem.14:y
  1322 label *label186
  1323 label *label179
  1324 jump *label204 greaterThanEq :updateDisplay:y 20
 
  1331 label *label207
  1332 set :updateDisplay:y 20
  1333 draw col %[white]
-    * set :drawTitleRow.6:y :updateDisplay:y
+ 1334 set :drawTitleRow.6:y 20
  1335 set :drawTitleRow.6:alignment @bottomLeft
  1336 set :drawText.42:x 22
-    * set :drawText.42:y :drawTitleRow.6:y
-    * set :drawText.42:alignment :drawTitleRow.6:alignment
+ 1337 set :drawText.42:y :updateDisplay:y
+ 1338 set :drawText.42:alignment @bottomLeft
  1339 print "Power"
-    * draw print :drawText.42:x :drawText.42:y :drawText.42:alignment
+ 1340 draw print 22 :drawTitleRow.6:y :drawTitleRow.6:alignment
  1341 label *label209
  1342 set :drawText.43:x 23
-    * set :drawText.43:y :drawTitleRow.6:y
-    * set :drawText.43:alignment :drawTitleRow.6:alignment
+ 1343 set :drawText.43:y :updateDisplay:y
+ 1344 set :drawText.43:alignment @bottomLeft
  1345 print "Power"
-    * draw print :drawText.43:x :drawText.43:y :drawText.43:alignment
+ 1346 draw print 23 :drawTitleRow.6:y :drawTitleRow.6:alignment
  1347 label *label210
-    * op sub :drawTitleRow.6:y :drawTitleRow.6:y 15
+ 1348 op sub :drawTitleRow.6:y :updateDisplay:y 15
  1349 label *label208
  1350 set :updateDisplay:y :drawTitleRow.6:y
  1351 sensor :drawPower:power AJTJK-battery1 @totalPower
 
  1354 set :drawItemColor.15:color1 %808000FF
  1355 set :drawItemColor.15:color2 %FFFF00FF
  1356 set :drawItemColor.15:col 0
-    * set :drawItemColor.15:y :updateDisplay:y
+ 1357 set :drawItemColor.15:y :drawTitleRow.6:y
  1358 set :drawItemColor.15:columns 1
  1359 set :drawItemColor.15:item @battery
  1360 set :drawItemColor.15:current :drawPower:power
  1361 set :drawItemColor.15:target 4000
-    * op mul *tmp477 :drawItemColor.15:columns 176
-    * op div *tmp478 *tmp477 2
-    * op sub :drawItemColor.15:barLength 214 *tmp478
-    * op add :drawItemColor.15:textEnd 48 :drawItemColor.15:barLength
-    * op mul *tmp481 :drawItemColor.15:barLength :drawItemColor.15:current
-    * op div *tmp482 *tmp481 :drawItemColor.15:target
-    * op min :drawItemColor.15:length :drawItemColor.15:barLength *tmp482
-    * op mul *tmp484 :drawItemColor.15:col 176
-    * op div *tmp485 *tmp484 2
-    * op add :drawItemColor.15:iconX 11 *tmp485
-    * op mul *tmp487 :drawItemColor.15:col 176
-    * op div *tmp488 *tmp487 2
-    * op add :drawItemColor.15:barX 22 *tmp488
-    * op mul *tmp490 :drawItemColor.15:col 176
-    * op div *tmp491 *tmp490 2
-    * op add :drawItemColor.15:textX :drawItemColor.15:textEnd *tmp491
+ 1362 op mul *tmp477 1 176
+ 1363 op div *tmp478 176 2
+ 1364 op sub :drawItemColor.15:barLength 214 88
+ 1365 op add :drawItemColor.15:textEnd 48 126
+ 1366 op mul *tmp481 126 :drawPower:power
+ 1367 op div *tmp482 *tmp481 4000
+ 1368 op min :drawItemColor.15:length 126 *tmp482
+ 1369 op mul *tmp484 0 176
+ 1370 op div *tmp485 0 2
+ 1371 op add :drawItemColor.15:iconX 11 0
+ 1372 op mul *tmp487 0 176
+ 1373 op div *tmp488 0 2
+ 1374 op add :drawItemColor.15:barX 22 0
+ 1375 op mul *tmp490 0 176
+ 1376 op div *tmp491 0 2
+ 1377 op add :drawItemColor.15:textX 174 0
  1378 draw col %[white]
-    * op add *tmp493 :drawItemColor.15:y 5
-    * draw image :drawItemColor.15:iconX *tmp493 :drawItemColor.15:item 16 0
-    * draw col :drawItemColor.15:color1
-    * draw rect :drawItemColor.15:barX :drawItemColor.15:y :drawItemColor.15:length 10
-    * draw col :drawItemColor.15:color2
-    * draw lineRect :drawItemColor.15:barX :drawItemColor.15:y :drawItemColor.15:barLength 10
-    * op add *tmp494 :drawItemColor.15:y 5
-    * op add *tmp495 *tmp494 2
-    * set :drawBold.15:x :drawItemColor.15:textX
+ 1379 op add *tmp493 :updateDisplay:y 5
+ 1380 draw image 11 *tmp493 @battery 16 0
+ 1381 draw col %808000FF
+ 1382 draw rect 22 :updateDisplay:y :drawItemColor.15:length 10
+ 1383 draw col %FFFF00FF
+ 1384 draw lineRect 22 :updateDisplay:y 126 10
+ 1385 op add *tmp494 :updateDisplay:y 5
+ 1386 op add *tmp495 *tmp493 2
+ 1387 set :drawBold.15:x 174
  1388 set :drawBold.15:y *tmp495
  1389 set :drawBold.15:alignment @right
-    * set :drawText.44:x :drawBold.15:x
-    * set :drawText.44:y :drawBold.15:y
-    * set :drawText.44:alignment :drawBold.15:alignment
+ 1390 set :drawText.44:x :drawItemColor.15:textX
+ 1391 set :drawText.44:y *tmp495
+ 1392 set :drawText.44:alignment @right
  1393 print *tmp476
  1394 print "%"
-    * draw print :drawText.44:x :drawText.44:y :drawText.44:alignment
+ 1395 draw print :drawBold.15:x :drawBold.15:y :drawBold.15:alignment
  1396 label *label213
-    * op add :drawText.45:x :drawBold.15:x 1
-    * set :drawText.45:y :drawBold.15:y
-    * set :drawText.45:alignment :drawBold.15:alignment
+ 1397 op add :drawText.45:x :drawItemColor.15:textX 1
+ 1398 set :drawText.45:y *tmp495
+ 1399 set :drawText.45:alignment @right
  1400 print *tmp476
  1401 print "%"
-    * draw print :drawText.45:x :drawText.45:y :drawText.45:alignment
+ 1402 draw print :drawText.45:x :drawBold.15:y :drawBold.15:alignment
  1403 label *label214
  1404 label *label212
-    * op add :drawItemColor.15:col :drawItemColor.15:col 1
-    * jump *label215 lessThan :drawItemColor.15:col :drawItemColor.15:columns
-    * set :drawItemColor.15:col 0
-    * op sub :drawItemColor.15:y :drawItemColor.15:y 15
+ 1405 op add :drawItemColor.15:col 0 1
+ 1406 jump *label215 lessThan 1 1
+ 1407 op sub :drawItemColor.15:y :updateDisplay:y 15
  1408 label *label215
  1409 label *label216
  1410 label *label211
-    * set :updateDisplay:y :drawItemColor.15:y
  1411 label *label203
  1412 drawflush display1
  1413 label *label31
 
  1423 set :drawBold.16:x 11
  1424 set :drawBold.16:y 206
  1425 set :drawBold.16:alignment @left
-    * set :drawText.46:x :drawBold.16:x
-    * set :drawText.46:y :drawBold.16:y
-    * set :drawText.46:alignment :drawBold.16:alignment
+ 1426 set :drawText.46:x 11
+ 1427 set :drawText.46:y 206
+ 1428 set :drawText.46:alignment @left
  1429 print "Resources"
-    * draw print :drawText.46:x :drawText.46:y :drawText.46:alignment
+ 1430 draw print :drawBold.16:x :drawBold.16:y :drawBold.16:alignment
  1431 label *label223
-    * op add :drawText.47:x :drawBold.16:x 1
-    * set :drawText.47:y :drawBold.16:y
-    * set :drawText.47:alignment :drawBold.16:alignment
+ 1432 op add :drawText.47:x 11 1
+ 1433 set :drawText.47:y 206
+ 1434 set :drawText.47:alignment @left
  1435 print "Resources"
-    * draw print :drawText.47:x :drawText.47:y :drawText.47:alignment
+ 1436 draw print 12 :drawBold.16:y :drawBold.16:alignment
  1437 label *label224
  1438 label *label222
  1439 draw col %[white]
-    * op sub :displayStorage:y :displayStorage:START 8
+ 1440 op sub :displayStorage:y 190 8
  1441 set :displayStorage:item @copper
  1442 setaddr *tmp506 *label228
  1443 jump *label225 always
 
  1491 label *label239
  1492 read :displayStorage:accumulator bank2 .lastTail
  1493 op add :displayStorage:x 25 .lastTail
-    * op sub :displayStorage:y.1 :displayStorage:START 8
+ 1494 op sub :displayStorage:y.1 190 8
  1495 set :displayStorage:i 0
  1496 label *label240
  1497 jump *label242 greaterThanEq :displayStorage:i 9
 
  1526 set :drawBold.17:x 90
  1527 set :drawBold.17:y 206
  1528 set :drawBold.17:alignment @center
-    * set :drawText.48:x :drawBold.17:x
-    * set :drawText.48:y :drawBold.17:y
-    * set :drawText.48:alignment :drawBold.17:alignment
+ 1529 set :drawText.48:x 90
+ 1530 set :drawText.48:y 206
+ 1531 set :drawText.48:alignment @center
  1532 print "Base map"
-    * draw print :drawText.48:x :drawText.48:y :drawText.48:alignment
+ 1533 draw print :drawBold.17:x :drawBold.17:y :drawBold.17:alignment
  1534 label *label252
-    * op add :drawText.49:x :drawBold.17:x 1
-    * set :drawText.49:y :drawBold.17:y
-    * set :drawText.49:alignment :drawBold.17:alignment
+ 1535 op add :drawText.49:x 90 1
+ 1536 set :drawText.49:y 206
+ 1537 set :drawText.49:alignment @center
  1538 print "Base map"
-    * draw print :drawText.49:x :drawText.49:y :drawText.49:alignment
+ 1539 draw print 91 :drawBold.17:y :drawBold.17:alignment
  1540 label *label253
  1541 label *label251
  1542 draw col %[white]
  1543 set :setBaseMapScale:size 220
  1544 draw reset
  1545 draw translate 90 105
-    * op div *tmp522 :setBaseMapScale:size 15
-    * op div *tmp523 *tmp522 2
-    * op div *tmp524 :setBaseMapScale:size 15
-    * op div *tmp525 *tmp524 2
-    * draw scale *tmp523 *tmp525
+ 1546 op div *tmp522 220 15
+ 1547 op div *tmp523 14.666666666666666 2
+ 1548 op div *tmp524 220 15
+ 1549 op div *tmp525 14.666666666666666 2
+ 1550 draw scale 7.333333333333333 7.333333333333333
  1551 label *label254
  1552 draw image 0 0 @core-shard 6 0
  1553 drawflush display1
 
  1557 set :setBaseMapScale.1:size 220
  1558 draw reset
  1559 draw translate 90 105
-    * op div *tmp526 :setBaseMapScale.1:size 15
-    * op div *tmp527 *tmp526 2
-    * op div *tmp528 :setBaseMapScale.1:size 15
-    * op div *tmp529 *tmp528 2
-    * draw scale *tmp527 *tmp529
+ 1560 op div *tmp526 220 15
+ 1561 op div *tmp527 14.666666666666666 2
+ 1562 op div *tmp528 220 15
+ 1563 op div *tmp529 14.666666666666666 2
+ 1564 draw scale 7.333333333333333 7.333333333333333
  1565 label *label255
  1566 label *label250
  1567 set :displayBaseMap:counter 0
 
  1718 set :setBaseMapScale.2:size 220
  1719 draw reset
  1720 draw translate 90 105
-    * op div *tmp537 :setBaseMapScale.2:size 15
-    * op div *tmp538 *tmp537 2
-    * op div *tmp539 :setBaseMapScale.2:size 15
-    * op div *tmp540 *tmp539 2
-    * draw scale *tmp538 *tmp540
+ 1721 op div *tmp537 220 15
+ 1722 op div *tmp538 14.666666666666666 2
+ 1723 op div *tmp539 220 15
+ 1724 op div *tmp540 14.666666666666666 2
+ 1725 draw scale 7.333333333333333 7.333333333333333
  1726 label *label301
  1727 set :displayBaseMap:counter 0
  1728 jump *label299 always
 
  1760 op sub :displayLog:page .page 3
  1761 read :displayLog:logPosition bank1 511
  1762 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp551 :displayLog:records 1
+ 1763 op sub *tmp551 510 :displayLog:logPosition
  1764 op idiv *tmp552 *tmp551 39
  1765 op add *tmp553 *tmp552 1
  1766 op max :displayLog:pages 1 *tmp553
 
  1774 set :drawBold.18:x 4
  1775 set :drawBold.18:y 206
  1776 set :drawBold.18:alignment @left
-    * set :drawText.50:x :drawBold.18:x
-    * set :drawText.50:y :drawBold.18:y
-    * set :drawText.50:alignment :drawBold.18:alignment
+ 1777 set :drawText.50:x 4
+ 1778 set :drawText.50:y 206
+ 1779 set :drawText.50:alignment @left
  1780 print "Build records"
-    * draw print :drawText.50:x :drawText.50:y :drawText.50:alignment
+ 1781 draw print :drawBold.18:x :drawBold.18:y :drawBold.18:alignment
  1782 label *label312
-    * op add :drawText.51:x :drawBold.18:x 1
-    * set :drawText.51:y :drawBold.18:y
-    * set :drawText.51:alignment :drawBold.18:alignment
+ 1783 op add :drawText.51:x 4 1
+ 1784 set :drawText.51:y 206
+ 1785 set :drawText.51:alignment @left
  1786 print "Build records"
-    * draw print :drawText.51:x :drawText.51:y :drawText.51:alignment
+ 1787 draw print 5 :drawBold.18:y :drawBold.18:alignment
  1788 label *label313
  1789 label *label311
-    * op add *tmp562 :displayLog:page 1
+ 1790 op sub *tmp562 .page 2
  1791 print *tmp562
  1792 print "/"
  1793 set :drawText.52:x 172
  1794 set :drawText.52:y 206
  1795 set :drawText.52:alignment @right
  1796 print :displayLog:pages
-    * draw print :drawText.52:x :drawText.52:y :drawText.52:alignment
+ 1797 draw print 172 206 @right
  1798 label *label314
  1799 set .lastRecord :displayLog:start
  1800 label *label309
 
  1805 set *tmp563 :displayLog:stop
  1806 op sub :displayLog:position .lastRecord 1
  1807 label *label316
-    * jump *label318 lessThan :displayLog:position *tmp563
+ 1808 jump *label318 lessThan :displayLog:position :displayLog:stop
  1809 read :displayLog:record bank1 :displayLog:position
  1810 op sub *tmp566 :displayLog:start :displayLog:position
  1811 op sub *tmp567 *tmp566 1
  1812 set :displayRecord:record :displayLog:record
  1813 set :displayRecord:index *tmp567
-    * op idiv :displayRecord:col :displayRecord:index 13
-    * op mod :displayRecord:row :displayRecord:index 13
+ 1814 op idiv :displayRecord:col *tmp567 13
+ 1815 op mod :displayRecord:row *tmp567 13
  1816 op mul *tmp570 58 :displayRecord:col
  1817 op add :displayRecord:x 11 *tmp570
  1818 op mul *tmp572 15 :displayRecord:row
  1819 op sub :displayRecord:y 189 *tmp572
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1820 op mod :displayRecord:id :displayLog:record 1000
  1821 jump *label320 lessThanEq :displayRecord:id @blockCount
  1822 op sub *tmp577 :displayRecord:id @blockCount
  1823 lookup unit *tmp576 *tmp577
 
  1826 lookup block *tmp576 :displayRecord:id
  1827 label *label321
  1828 set :displayRecord:icon *tmp576
-    * op div *tmp580 :displayRecord:record 1000
+ 1829 op div *tmp580 :displayLog:record 1000
  1830 op idiv :displayRecord:t *tmp580 120
  1831 op idiv :displayRecord:m :displayRecord:t 60
  1832 op mod :displayRecord:s :displayRecord:t 60
 
  1839 print :displayRecord:m
  1840 print ":"
  1841 print *tmp586
-    * draw image :displayRecord:x :displayRecord:y :displayRecord:icon 14 0
+ 1842 draw image :displayRecord:x :displayRecord:y *tmp576 14 0
  1843 op add *tmp587 :displayRecord:x 56
-    * op sub *tmp588 *tmp587 12
+ 1844 op add *tmp588 :displayRecord:x 44
  1845 op add *tmp589 :displayRecord:y 2
  1846 set :drawText.53:x *tmp588
  1847 set :drawText.53:y *tmp589
  1848 set :drawText.53:alignment @right
  1849 print :displayRecord:s
-    * draw print :drawText.53:x :drawText.53:y :drawText.53:alignment
+ 1850 draw print *tmp588 *tmp589 @right
  1851 label *label324
  1852 label *label319
  1853 drawflush display1
 
  1931 set :drawBold.19:x 25
  1932 set :drawBold.19:y 71
  1933 set :drawBold.19:alignment @center
-    * set :drawText.54:x :drawBold.19:x
-    * set :drawText.54:y :drawBold.19:y
-    * set :drawText.54:alignment :drawBold.19:alignment
+ 1934 set :drawText.54:x 25
+ 1935 set :drawText.54:y 71
+ 1936 set :drawText.54:alignment @center
  1937 print :drawHeader:m
  1938 print ":"
-    * print :drawHeader:zero
+ 1939 print *tmp609
  1940 print :drawHeader:s
-    * draw print :drawText.54:x :drawText.54:y :drawText.54:alignment
+ 1941 draw print :drawBold.19:x :drawBold.19:y :drawBold.19:alignment
  1942 label *label338
-    * op add :drawText.55:x :drawBold.19:x 1
-    * set :drawText.55:y :drawBold.19:y
-    * set :drawText.55:alignment :drawBold.19:alignment
+ 1943 op add :drawText.55:x 25 1
+ 1944 set :drawText.55:y 71
+ 1945 set :drawText.55:alignment @center
  1946 print :drawHeader:m
  1947 print ":"
-    * print :drawHeader:zero
+ 1948 print *tmp609
  1949 print :drawHeader:s
-    * draw print :drawText.55:x :drawText.55:y :drawText.55:alignment
+ 1950 draw print 26 :drawBold.19:y :drawBold.19:alignment
  1951 label *label339
  1952 label *label337
  1953 draw col %[white]
 
  1958 set :drawBold.20:x 42
  1959 set :drawBold.20:y 261
  1960 set :drawBold.20:alignment @bottom
-    * set :drawText.56:x :drawBold.20:x
-    * set :drawText.56:y :drawBold.20:y
-    * set :drawText.56:alignment :drawBold.20:alignment
+ 1961 set :drawText.56:x 42
+ 1962 set :drawText.56:y 261
+ 1963 set :drawText.56:alignment @bottom
  1964 print "Goal"
-    * draw print :drawText.56:x :drawText.56:y :drawText.56:alignment
+ 1965 draw print :drawBold.20:x :drawBold.20:y :drawBold.20:alignment
  1966 label *label341
-    * op add :drawText.57:x :drawBold.20:x 1
-    * set :drawText.57:y :drawBold.20:y
-    * set :drawText.57:alignment :drawBold.20:alignment
+ 1967 op add :drawText.57:x 42 1
+ 1968 set :drawText.57:y 261
+ 1969 set :drawText.57:alignment @bottom
  1970 print "Goal"
-    * draw print :drawText.57:x :drawText.57:y :drawText.57:alignment
+ 1971 draw print 43 :drawBold.20:y :drawBold.20:alignment
  1972 label *label342
  1973 label *label340
  1974 draw col %[white]
 
  2067 set :drawText.58:y 272
  2068 set :drawText.58:alignment @topRight
  2069 print ")"
-    * draw print :drawText.58:x :drawText.58:y :drawText.58:alignment
+ 2070 draw print 174 272 @topRight
  2071 label *label371
  2072 jump *label372 equal A¨SSJh-container30 null
  2073 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  2074 set :drawHeader:x.1 174
  2075 op log10 *tmp642 :drawHeader:count.1
  2076 op floor :drawHeader:len *tmp642
-    * set :drawText.59:x :drawHeader:x.1
+ 2077 set :drawText.59:x 174
  2078 set :drawText.59:y 255
  2079 set :drawText.59:alignment @topRight
  2080 print "x"
  2081 print :drawHeader:count.1
-    * draw print :drawText.59:x :drawText.59:y :drawText.59:alignment
+ 2082 draw print :drawHeader:x.1 255 @topRight
  2083 label *label374
-    * op sub *tmp644 :drawHeader:x.1 20
+ 2084 op sub *tmp644 174 20
  2085 op mul *tmp645 7 :drawHeader:len
-    * op sub *tmp646 *tmp644 *tmp645
+ 2086 op sub *tmp646 154 *tmp645
  2087 draw image *tmp646 246 @scrap 12 0
  2088 sensor :drawHeader:count.1 A¨SSJh-container30 @sand
  2089 set :drawHeader:x.1 124
  2090 op log10 *tmp648 :drawHeader:count.1
  2091 op floor :drawHeader:len *tmp648
-    * set :drawText.60:x :drawHeader:x.1
+ 2092 set :drawText.60:x 124
  2093 set :drawText.60:y 255
  2094 set :drawText.60:alignment @topRight
  2095 print "x"
  2096 print :drawHeader:count.1
-    * draw print :drawText.60:x :drawText.60:y :drawText.60:alignment
+ 2097 draw print :drawHeader:x.1 255 @topRight
  2098 label *label375
-    * op sub *tmp650 :drawHeader:x.1 20
+ 2099 op sub *tmp650 124 20
  2100 op mul *tmp651 7 :drawHeader:len
-    * op sub *tmp652 *tmp650 *tmp651
+ 2101 op sub *tmp652 104 *tmp651
  2102 draw image *tmp652 246 @sand 12 0
  2103 jump *label373 always
  2104 label *label372
 
  2108 set :drawHeader:x.2 174
  2109 op log10 *tmp656 :drawHeader:count.2
  2110 op floor :drawHeader:len.1 *tmp656
-    * set :drawText.61:x :drawHeader:x.2
+ 2111 set :drawText.61:x 174
  2112 set :drawText.61:y 255
  2113 set :drawText.61:alignment @topRight
  2114 print "x"
  2115 print :drawHeader:count.2
-    * draw print :drawText.61:x :drawText.61:y :drawText.61:alignment
+ 2116 draw print :drawHeader:x.2 255 @topRight
  2117 label *label378
-    * op sub *tmp658 :drawHeader:x.2 20
+ 2118 op sub *tmp658 174 20
  2119 op mul *tmp659 7 :drawHeader:len.1
-    * op sub *tmp660 *tmp658 *tmp659
+ 2120 op sub *tmp660 154 *tmp659
  2121 draw image *tmp660 246 @titanium 12 0
  2122 label *label376
  2123 label *label377
 
  2126 set :drawHeader:x.3 124
  2127 op log10 *tmp663 :drawHeader:count.3
  2128 op floor :drawHeader:len.2 *tmp663
-    * set :drawText.62:x :drawHeader:x.3
+ 2129 set :drawText.62:x 124
  2130 set :drawText.62:y 255
  2131 set :drawText.62:alignment @topRight
  2132 print "x"
  2133 print :drawHeader:count.3
-    * draw print :drawText.62:x :drawText.62:y :drawText.62:alignment
+ 2134 draw print :drawHeader:x.3 255 @topRight
  2135 label *label381
-    * op sub *tmp665 :drawHeader:x.3 20
+ 2136 op sub *tmp665 124 20
  2137 op mul *tmp666 7 :drawHeader:len.2
-    * op sub *tmp667 *tmp665 *tmp666
+ 2138 op sub *tmp667 104 *tmp666
  2139 draw image *tmp667 246 @thorium 12 0
  2140 label *label379
  2141 label *label380
 
  2145 set :drawUnitCount:type @poly
  2146 set :drawUnitCount:count .polys
  2147 jump *label383 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp670 :drawHeader:x.4 20
-    * draw image *tmp670 227 :drawUnitCount:type 12 0
-    * set :drawText.63:x :drawHeader:x.4
+ 2148 op sub *tmp670 174 20
+ 2149 draw image 154 227 @poly 12 0
+ 2150 set :drawText.63:x 174
  2151 set :drawText.63:y 229
  2152 set :drawText.63:alignment @right
  2153 print "x"
  2154 print :drawUnitCount:count
-    * draw print :drawText.63:x :drawText.63:y :drawText.63:alignment
+ 2155 draw print :drawHeader:x.4 229 @right
  2156 label *label385
-    * op sub :drawHeader:x.4 :drawHeader:x.4 30
+ 2157 op sub :drawHeader:x.4 174 30
  2158 label *label383
  2159 label *label384
  2160 label *label382
 
  2162 set :drawUnitCount.1:count .monos
  2163 jump *label387 lessThanEq :drawUnitCount.1:count 0
  2164 op sub *tmp673 :drawHeader:x.4 20
-    * draw image *tmp673 227 :drawUnitCount.1:type 12 0
+ 2165 draw image *tmp673 227 @mono 12 0
  2166 set :drawText.64:x :drawHeader:x.4
  2167 set :drawText.64:y 229
  2168 set :drawText.64:alignment @right
  2169 print "x"
  2170 print :drawUnitCount.1:count
-    * draw print :drawText.64:x :drawText.64:y :drawText.64:alignment
+ 2171 draw print :drawHeader:x.4 229 @right
  2172 label *label389
  2173 op sub :drawHeader:x.4 :drawHeader:x.4 30
  2174 label *label387
 
  2178 set :drawUnitCount.2:count .flares
  2179 jump *label391 lessThanEq :drawUnitCount.2:count 0
  2180 op sub *tmp676 :drawHeader:x.4 20
-    * draw image *tmp676 227 :drawUnitCount.2:type 12 0
+ 2181 draw image *tmp676 227 @flare 12 0
  2182 set :drawText.65:x :drawHeader:x.4
  2183 set :drawText.65:y 229
  2184 set :drawText.65:alignment @right
  2185 print "x"
  2186 print :drawUnitCount.2:count
-    * draw print :drawText.65:x :drawText.65:y :drawText.65:alignment
+ 2187 draw print :drawHeader:x.4 229 @right
  2188 label *label393
-    * op sub :drawHeader:x.4 :drawHeader:x.4 30
  2189 label *label391
  2190 label *label392
  2191 label *label390
 
  2195 end
  2196 label *label5
  2197 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :unpackCfg2:cfg
+ 2198 set :unpackCfg:cfg :drawBlock:cfg
  2199 set :unpackCfg:index 1
-    * set *tmp677 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp678 :unpackCfg:cfg *tmp677
+ 2200 set *tmp677 1
+ 2201 op add :unpackCfg:index 1 1
+ 2202 read *tmp678 :unpackCfg2:cfg *tmp677
  2203 op sub *tmp679 *tmp678 74
  2204 lookup block :unpackCfg:type *tmp679
-    * set *tmp681 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp682 :unpackCfg:cfg *tmp681
+ 2205 set *tmp681 2
+ 2206 op add :unpackCfg:index 2 1
+ 2207 read *tmp682 :unpackCfg2:cfg *tmp681
  2208 op sub *tmp683 *tmp682 74
  2209 op div :unpackCfg:x *tmp683 2
-    * set *tmp685 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp686 :unpackCfg:cfg *tmp685
+ 2210 set *tmp685 3
+ 2211 op add :unpackCfg:index 3 1
+ 2212 read *tmp686 :unpackCfg2:cfg *tmp685
  2213 op sub *tmp687 *tmp686 74
  2214 op div :unpackCfg:y *tmp687 2
-    * set *tmp689 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp690 :unpackCfg:cfg *tmp689
+ 2215 set *tmp689 4
+ 2216 op add :unpackCfg:index 4 1
+ 2217 read *tmp690 :unpackCfg2:cfg *tmp689
  2218 op sub :unpackCfg:rotation *tmp690 74
-    * set *tmp692 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp693 :unpackCfg:cfg *tmp692
+ 2219 set *tmp692 5
+ 2220 op add :unpackCfg:index 5 1
+ 2221 read *tmp693 :unpackCfg2:cfg *tmp692
  2222 op sub :unpackCfg:ind *tmp693 74
  2223 sensor :unpackCfg:size :unpackCfg:type @size
  2224 label *label396
 
  2229 set :unpackCfg2:size :unpackCfg:size
  2230 set :unpackCfg2:index :unpackCfg:ind
  2231 label *label395
-    * set :drawBlock:type :unpackCfg2:type
-    * set :drawBlock:x :unpackCfg2:x
-    * set :drawBlock:y :unpackCfg2:y
-    * set :drawBlock:rotation :unpackCfg2:rotation
-    * set :drawBlock:size :unpackCfg2:size
-    * set :drawBlock:index :unpackCfg2:index
-    * op shl *tmp703 1 :drawBlock:index
+ 2232 set :drawBlock:type :unpackCfg:type
+ 2233 set :drawBlock:x :unpackCfg:x
+ 2234 set :drawBlock:y :unpackCfg:y
+ 2235 set :drawBlock:rotation :unpackCfg:rotation
+ 2236 set :drawBlock:size :unpackCfg:size
+ 2237 set :drawBlock:index :unpackCfg:ind
+ 2238 op shl *tmp703 1 :unpackCfg2:index
  2239 op and :drawBlock:built .blocksBuilt *tmp703
  2240 op add *tmp705 :drawBlock:built .pageSwitched
  2241 jump *label397 notEqual *tmp705 0
 
  2249 set *tmp708 %80ff8080
  2250 label *label400
  2251 draw col *tmp708
-    * op mul *tmp709 2 :drawBlock:x
-    * op mul *tmp710 2 :drawBlock:y
-    * op mul *tmp711 2 :drawBlock:size
-    * op mul *tmp712 90 :drawBlock:rotation
-    * draw image *tmp709 *tmp710 :drawBlock:type *tmp711 *tmp712
+ 2252 op mul *tmp709 2 :unpackCfg2:x
+ 2253 op mul *tmp710 2 :unpackCfg2:y
+ 2254 op mul *tmp711 2 :unpackCfg2:size
+ 2255 op mul *tmp712 90 :unpackCfg2:rotation
+ 2256 draw image *tmp709 *tmp710 :unpackCfg2:type *tmp711 *tmp712
  2257 label *label394
  2258 return :drawBlock*retaddr
  2259 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-337 instructions):
 
    35 op div *tmp54 .animation 30
    36 op min *tmp55 *tmp54 1
    37 op max :animate:ratio 0 *tmp55
-    * set :lerp:from 42
-    * set :lerp:to 90
-    * set :lerp:ratio :animate:ratio
    38 op sub *tmp58 1 :animate:ratio
    39 op mul *tmp59 *tmp58 42
    40 op mul *tmp60 :animate:ratio 90
    41 op add *tmp57 *tmp59 *tmp60
    42 label *label25
-    * set :animate:x *tmp57
-    * set :lerp.1:from 237
-    * set :lerp.1:to 120
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :animate:ratio
    43 op mul *tmp64 *tmp58 237
    44 op mul *tmp65 :animate:ratio 120
    45 op add *tmp62 *tmp64 *tmp65
    46 label *label26
-    * set :animate:y *tmp62
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :animate:ratio
    47 op mul *tmp69 *tmp58 32
    48 op mul *tmp70 :animate:ratio 168
    49 op add *tmp67 *tmp69 *tmp70
    50 label *label27
-    * set :animate:size *tmp67
    51 draw image *tmp57 *tmp62 @mega *tmp67 0
    52 jump *label28 notEqual :animate:ratio 1
    53 setaddr :drawHeader*retaddr *label30 (h:*label30)
 
    72 jump *label34 equal *tmp77 false
    73 set :drawTitleRow:y 201
    74 set :drawTitleRow:alignment @bottomLeft
-    * set :drawText:x 22
-    * set :drawText:y :updateDisplay:y
-    * set :drawText:alignment @bottomLeft
+   75 set :drawText:y 201
    76 print "Locating ore..."
-    * draw print 22 :drawTitleRow:y :drawTitleRow:alignment
+   77 draw print 22 201 @bottomLeft
    78 label *label37
-    * set :drawText.1:x 23
-    * set :drawText.1:y :updateDisplay:y
-    * set :drawText.1:alignment @bottomLeft
+   79 set :drawText.1:y 201
    80 print "Locating ore..."
-    * draw print 23 :drawTitleRow:y :drawTitleRow:alignment
+   81 draw print 23 201 @bottomLeft
    82 label *label38
-    * op sub :drawTitleRow:y :updateDisplay:y 15
+   83 op sub :drawTitleRow:y 201 15
    84 label *label36
-    * set :updateDisplay:y :drawTitleRow:y
+   85 set :updateDisplay:y 186
    86 set :drawItem:col 0
-    * set :drawItem:y :drawTitleRow:y
+   87 set :drawItem:y 186
    88 set :drawItem:columns 1
    89 set :drawItem:item .nextBlock
    90 read :drawItem:current processor3 ".mapProgress"
    91 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:color1 %008000FF
-    * set :drawItemColor:color2 %00FF00FF
    92 set :drawItemColor:col 0
-    * set :drawItemColor:y :updateDisplay:y
+   93 set :drawItemColor:y :drawTitleRow:y
    94 set :drawItemColor:columns 1
-    * set :drawItemColor:item :drawItem:item
-    * set :drawItemColor:current :drawItem:current
-    * set :drawItemColor:target :drawItem:target
-    * op mul *tmp79 :drawItem:columns 176
-    * op mul *tmp80 :drawItemColor:columns 88
-    * op sub :drawItemColor:barLength 214 *tmp80
-    * op add :drawItemColor:textEnd 48 :drawItemColor:barLength
-    * op mul *tmp83 :drawItemColor:barLength :drawItem:current
+   95 op mul *tmp79 1 176
+   96 op mul *tmp80 1 88
+   97 op sub :drawItemColor:barLength 214 88
+   98 op add :drawItemColor:textEnd 48 126
+   99 op mul *tmp83 126 :drawItem:current
   100 op div *tmp84 *tmp83 :drawItem:target
-    * op min :drawItemColor:length :drawItemColor:barLength *tmp84
-    * op mul *tmp86 :drawItem:col 176
-    * op mul *tmp87 :drawItemColor:col 88
-    * op add :drawItemColor:iconX 11 *tmp87
-    * op mul *tmp89 :drawItem:col 176
-    * op div *tmp90 *tmp86 2
-    * op add :drawItemColor:barX 22 *tmp87
-    * op mul *tmp92 :drawItem:col 176
-    * op div *tmp93 *tmp86 2
-    * op add :drawItemColor:textX :drawItemColor:textEnd *tmp87
+  101 op min :drawItemColor:length 126 *tmp84
+  102 op mul *tmp86 0 176
+  103 op mul *tmp87 0 88
+  104 op add :drawItemColor:iconX 11 0
+  105 op mul *tmp89 0 176
+  106 op div *tmp90 0 2
+  107 op add :drawItemColor:barX 22 0
+  108 op mul *tmp92 0 176
+  109 op div *tmp93 0 2
+  110 op add :drawItemColor:textX 174 0
   111 draw col %[white]
-    * op add *tmp95 :drawItem:y 5
-    * draw image :drawItemColor:iconX *tmp95 :drawItem:item 16 0
+  112 op add *tmp95 :drawTitleRow:y 5
+  113 draw image 11 *tmp95 :drawItem:item 16 0
   114 draw col %008000FF
-    * draw rect :drawItemColor:barX :drawItem:y :drawItemColor:length 10
+  115 draw rect 22 :drawTitleRow:y :drawItemColor:length 10
   116 draw col %00FF00FF
-    * draw lineRect :drawItemColor:barX :drawItem:y :drawItemColor:barLength 10
-    * op add *tmp96 :drawItem:y 5
-    * op add *tmp97 *tmp95 2
-    * set :drawBold:x :drawItemColor:textX
+  117 draw lineRect 22 :drawTitleRow:y 126 10
+  118 op add *tmp96 :drawTitleRow:y 5
+  119 op add *tmp97 :drawItem:y 7
+  120 set :drawBold:x 174
   121 set :drawBold:y *tmp97
   122 set :drawBold:alignment @right
-    * set :drawText.2:x :drawItemColor:textX
-    * set :drawText.2:y *tmp97
-    * set :drawText.2:alignment @right
+  123 set :drawText.2:x 174
   124 print "x"
   125 read *tmp98 processor3 ".mapSpots"
   126 print *tmp98
-    * draw print :drawBold:x :drawBold:y :drawBold:alignment
+  127 draw print :drawItemColor:textX *tmp97 @right
   128 label *label42
-    * op add :drawText.3:x :drawItemColor:textX 1
-    * set :drawText.3:y *tmp97
-    * set :drawText.3:alignment @right
+  129 op add :drawText.3:x 174 1
   130 print "x"
   131 read *tmp100 processor3 ".mapSpots"
   132 print *tmp100
-    * draw print :drawText.3:x :drawBold:y :drawBold:alignment
+  133 draw print 175 *tmp97 @right
   134 label *label43
   135 label *label41
-    * op add :drawItemColor:col :drawItem:col 1
-    * jump *label44 lessThan :drawItemColor:col :drawItem:columns
-    * set :drawItemColor:col 0
-    * op sub :drawItemColor:y :drawItem:y 15
+  136 op add :drawItemColor:col 0 1
+  137 jump *label44 lessThan 1 1
+  138 op sub :drawItemColor:y :drawTitleRow:y 15
   139 label *label44
   140 label *label45
   141 label *label40
   142 set :drawItem:y :drawItemColor:y
   143 label *label39
-    * set :updateDisplay:y :drawItemColor:y
-    * op sub :updateDisplay:y :drawItem:y 35
+  144 op sub :updateDisplay:y :drawItemColor:y 35
   145 jump *label35 always
   146 label *label34
   147 jump *label46 equal .nextBlock null
   148 set :drawMaterials:count .totalTargets
   149 set :drawTitleRow.1:y 201
   150 set :drawTitleRow.1:alignment @bottomLeft
-    * set :drawText.4:x 22
-    * set :drawText.4:y :updateDisplay:y
-    * set :drawText.4:alignment @bottomLeft
+  151 set :drawText.4:y 201
   152 print "Materials"
-    * draw print 22 :drawTitleRow.1:y :drawTitleRow.1:alignment
+  153 draw print 22 201 @bottomLeft
   154 label *label49
-    * set :drawText.5:x 23
-    * set :drawText.5:y :updateDisplay:y
-    * set :drawText.5:alignment @bottomLeft
+  155 set :drawText.5:y 201
   156 print "Materials"
-    * draw print 23 :drawTitleRow.1:y :drawTitleRow.1:alignment
+  157 draw print 23 201 @bottomLeft
   158 label *label50
-    * op sub :drawTitleRow.1:y :updateDisplay:y 15
+  159 op sub :drawTitleRow.1:y 201 15
   160 label *label48
-    * set :updateDisplay:y :drawTitleRow.1:y
+  161 set :updateDisplay:y 186
   162 set :drawMaterials:columns 1
   163 jump *label51 equal :drawMaterials:count false
   164 set :drawMaterials:item @copper
 
   203 set :drawItem.1:item :drawMaterials:item
   204 set :drawItem.1:current *tmp110
   205 set :drawItem.1:target :drawMaterials:target
-    * set :drawItemColor.1:color1 %008000FF
-    * set :drawItemColor.1:color2 %00FF00FF
   206 set :drawItemColor.1:col :drawMaterials:col
   207 set :drawItemColor.1:y :updateDisplay:y
-    * set :drawItemColor.1:columns :drawMaterials:columns
-    * set :drawItemColor.1:item :drawMaterials:item
-    * set :drawItemColor.1:current *tmp110
-    * set :drawItemColor.1:target :drawMaterials:target
-    * op mul *tmp111 :drawItem.1:columns 176
-    * op mul *tmp112 :drawItemColor.1:columns 88
+  208 set :drawItemColor.1:columns 1
+  209 op mul *tmp111 1 176
+  210 op mul *tmp112 :drawMaterials:columns 88
   211 op sub :drawItemColor.1:barLength 214 *tmp112
   212 op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength :drawItem.1:current
-    * op div *tmp116 *tmp115 :drawItem.1:target
+  213 op mul *tmp115 :drawItemColor.1:barLength *tmp110
+  214 op div *tmp116 *tmp115 :drawMaterials:target
   215 op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawItem.1:col 176
-    * op mul *tmp119 :drawItemColor.1:col 88
+  216 op mul *tmp118 :drawMaterials:col 176
+  217 op mul *tmp119 :drawMaterials:col 88
   218 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawItem.1:col 176
-    * op div *tmp122 *tmp118 2
+  219 op mul *tmp121 :drawMaterials:col 176
+  220 op mul *tmp122 :drawItem.1:col 88
   221 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp124 :drawItem.1:col 176
-    * op div *tmp125 *tmp118 2
+  222 op mul *tmp124 :drawMaterials:col 176
+  223 op mul *tmp125 :drawItem.1:col 88
   224 op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
   225 draw col %[white]
-    * op add *tmp127 :drawItem.1:y 5
-    * draw image :drawItemColor.1:iconX *tmp127 :drawItem.1:item 16 0
+  226 op add *tmp127 :updateDisplay:y 5
+  227 draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0
   228 draw col %008000FF
-    * draw rect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:length 10
+  229 draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10
   230 draw col %00FF00FF
-    * draw lineRect :drawItemColor.1:barX :drawItem.1:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :drawItem.1:y 5
-    * op add *tmp129 *tmp127 2
+  231 draw lineRect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:barLength 10
+  232 op add *tmp128 :updateDisplay:y 5
+  233 op add *tmp129 :drawItem.1:y 7
   234 set :drawBold.1:x :drawItemColor.1:textX
   235 set :drawBold.1:y *tmp129
   236 set :drawBold.1:alignment @right
-    * set :drawText.6:x :drawItemColor.1:textX
-    * set :drawText.6:y *tmp129
-    * set :drawText.6:alignment @right
   237 print :drawMaterials:target
-    * draw print :drawBold.1:x :drawBold.1:y :drawBold.1:alignment
+  238 draw print :drawItemColor.1:textX *tmp129 @right
   239 label *label68
   240 op add :drawText.7:x :drawItemColor.1:textX 1
-    * set :drawText.7:y *tmp129
-    * set :drawText.7:alignment @right
   241 print :drawMaterials:target
-    * draw print :drawText.7:x :drawBold.1:y :drawBold.1:alignment
+  242 draw print :drawText.7:x *tmp129 @right
   243 label *label69
   244 label *label67
-    * op add :drawItemColor.1:col :drawItem.1:col 1
-    * jump *label70 lessThan :drawItemColor.1:col :drawItem.1:columns
+  245 op add :drawItemColor.1:col :drawMaterials:col 1
+  246 jump *label70 lessThan :drawItemColor.1:col 1
   247 set :drawItemColor.1:col 0
-    * op sub :drawItemColor.1:y :drawItem.1:y 15
+  248 op sub :drawItemColor.1:y :updateDisplay:y 15
   249 label *label70
   250 label *label71
   251 label *label66
-    * set :drawItem.1:col :drawItemColor.1:col
-    * set :drawItem.1:y :drawItemColor.1:y
   252 label *label65
   253 set :drawMaterials:col :drawItemColor.1:col
   254 set :updateDisplay:y :drawItemColor.1:y
 
   283 draw col %[white]
   284 set :drawTitleRow.2:y :updateDisplay:y
   285 set :drawTitleRow.2:alignment @bottomLeft
-    * set :drawText.8:x 22
-    * set :drawText.8:y :updateDisplay:y
-    * set :drawText.8:alignment @bottomLeft
   286 print "Air Factory"
-    * draw print 22 :drawTitleRow.2:y :drawTitleRow.2:alignment
+  287 draw print 22 :updateDisplay:y @bottomLeft
   288 label *label80
-    * set :drawText.9:x 23
-    * set :drawText.9:y :updateDisplay:y
-    * set :drawText.9:alignment @bottomLeft
   289 print "Air Factory"
-    * draw print 23 :drawTitleRow.2:y :drawTitleRow.2:alignment
+  290 draw print 23 :updateDisplay:y @bottomLeft
   291 label *label81
   292 op sub :drawTitleRow.2:y :updateDisplay:y 15
   293 label *label79
 
   302 set :drawItem.2:item @silicon
   303 set :drawItem.2:current *tmp146
   304 set :drawItem.2:target 15
-    * set :drawItemColor.2:color1 %008000FF
-    * set :drawItemColor.2:color2 %00FF00FF
   305 set :drawItemColor.2:col 0
-    * set :drawItemColor.2:y :updateDisplay:y
+  306 set :drawItemColor.2:y :drawTitleRow.2:y
   307 set :drawItemColor.2:columns 1
-    * set :drawItemColor.2:item @silicon
-    * set :drawItemColor.2:current *tmp146
-    * set :drawItemColor.2:target 15
-    * op mul *tmp147 :drawItem.2:columns 176
-    * op mul *tmp148 :drawItemColor.2:columns 88
-    * op sub :drawItemColor.2:barLength 214 *tmp148
-    * op add :drawItemColor.2:textEnd 48 :drawItemColor.2:barLength
-    * op mul *tmp151 :drawItemColor.2:barLength :drawItem.2:current
-    * op div *tmp152 *tmp151 :drawItem.2:target
-    * op min :drawItemColor.2:length :drawItemColor.2:barLength *tmp152
-    * op mul *tmp154 :drawItem.2:col 176
-    * op mul *tmp155 :drawItemColor.2:col 88
-    * op add :drawItemColor.2:iconX 11 *tmp155
-    * op mul *tmp157 :drawItem.2:col 176
-    * op div *tmp158 *tmp154 2
-    * op add :drawItemColor.2:barX 22 *tmp155
-    * op mul *tmp160 :drawItem.2:col 176
-    * op div *tmp161 *tmp154 2
-    * op add :drawItemColor.2:textX :drawItemColor.2:textEnd *tmp155
+  308 op mul *tmp147 1 176
+  309 op mul *tmp148 1 88
+  310 op sub :drawItemColor.2:barLength 214 88
+  311 op add :drawItemColor.2:textEnd 48 126
+  312 op mul *tmp151 126 *tmp146
+  313 op div *tmp152 *tmp151 15
+  314 op min :drawItemColor.2:length 126 *tmp152
+  315 op mul *tmp154 0 176
+  316 op mul *tmp155 0 88
+  317 op add :drawItemColor.2:iconX 11 0
+  318 op mul *tmp157 0 176
+  319 op div *tmp158 0 2
+  320 op add :drawItemColor.2:barX 22 0
+  321 op mul *tmp160 0 176
+  322 op div *tmp161 0 2
+  323 op add :drawItemColor.2:textX 174 0
   324 draw col %[white]
-    * op add *tmp163 :drawItem.2:y 5
-    * draw image :drawItemColor.2:iconX *tmp163 :drawItem.2:item 16 0
+  325 op add *tmp163 :drawTitleRow.2:y 5
+  326 draw image 11 *tmp163 @silicon 16 0
   327 draw col %008000FF
-    * draw rect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:length 10
+  328 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   329 draw col %00FF00FF
-    * draw lineRect :drawItemColor.2:barX :drawItem.2:y :drawItemColor.2:barLength 10
-    * op add *tmp164 :drawItem.2:y 5
-    * op add *tmp165 *tmp163 2
-    * set :drawBold.2:x :drawItemColor.2:textX
+  330 draw lineRect 22 :drawTitleRow.2:y 126 10
+  331 op add *tmp164 :drawTitleRow.2:y 5
+  332 op add *tmp165 :drawItem.2:y 7
+  333 set :drawBold.2:x 174
   334 set :drawBold.2:y *tmp165
   335 set :drawBold.2:alignment @right
-    * set :drawText.10:x :drawItemColor.2:textX
-    * set :drawText.10:y *tmp165
-    * set :drawText.10:alignment @right
+  336 set :drawText.10:x 174
   337 print 15
-    * draw print :drawBold.2:x :drawBold.2:y :drawBold.2:alignment
+  338 draw print :drawItemColor.2:textX *tmp165 @right
   339 label *label89
-    * op add :drawText.11:x :drawItemColor.2:textX 1
-    * set :drawText.11:y *tmp165
-    * set :drawText.11:alignment @right
+  340 op add :drawText.11:x 174 1
   341 print 15
-    * draw print :drawText.11:x :drawBold.2:y :drawBold.2:alignment
+  342 draw print 175 *tmp165 @right
   343 label *label90
   344 label *label88
-    * op add :drawItemColor.2:col :drawItem.2:col 1
-    * jump *label91 lessThan :drawItemColor.2:col :drawItem.2:columns
-    * set :drawItemColor.2:col 0
-    * op sub :drawItemColor.2:y :drawItem.2:y 15
+  345 op add :drawItemColor.2:col 0 1
+  346 jump *label91 lessThan 1 1
+  347 op sub :drawItemColor.2:y :drawTitleRow.2:y 15
   348 label *label91
   349 label *label92
   350 label *label87
   351 set :drawItem.2:y :drawItemColor.2:y
   352 label *label86
-    * set :updateDisplay:y :drawItemColor.2:y
-    * op sub :updateDisplay:y :drawItem.2:y 15
+  353 op sub :updateDisplay:y :drawItemColor.2:y 15
   354 jump *label85 always
   355 label *label84
   356 sensor *tmp169 A¾BFLW-air-factory13 @lead
 
   360 set :drawItem.3:item @lead
   361 set :drawItem.3:current *tmp169
   362 set :drawItem.3:target 15
-    * set :drawItemColor.3:color1 %008000FF
-    * set :drawItemColor.3:color2 %00FF00FF
   363 set :drawItemColor.3:col 0
-    * set :drawItemColor.3:y :updateDisplay:y
+  364 set :drawItemColor.3:y :drawTitleRow.2:y
   365 set :drawItemColor.3:columns 1
-    * set :drawItemColor.3:item @lead
-    * set :drawItemColor.3:current *tmp169
-    * set :drawItemColor.3:target 15
-    * op mul *tmp170 :drawItem.3:columns 176
-    * op mul *tmp171 :drawItemColor.3:columns 88
-    * op sub :drawItemColor.3:barLength 214 *tmp171
-    * op add :drawItemColor.3:textEnd 48 :drawItemColor.3:barLength
-    * op mul *tmp174 :drawItemColor.3:barLength :drawItem.3:current
-    * op div *tmp175 *tmp174 :drawItem.3:target
-    * op min :drawItemColor.3:length :drawItemColor.3:barLength *tmp175
-    * op mul *tmp177 :drawItem.3:col 176
-    * op mul *tmp178 :drawItemColor.3:col 88
-    * op add :drawItemColor.3:iconX 11 *tmp178
-    * op mul *tmp180 :drawItem.3:col 176
-    * op div *tmp181 *tmp177 2
-    * op add :drawItemColor.3:barX 22 *tmp178
-    * op mul *tmp183 :drawItem.3:col 176
-    * op div *tmp184 *tmp177 2
-    * op add :drawItemColor.3:textX :drawItemColor.3:textEnd *tmp178
+  366 op mul *tmp170 1 176
+  367 op mul *tmp171 1 88
+  368 op sub :drawItemColor.3:barLength 214 88
+  369 op add :drawItemColor.3:textEnd 48 126
+  370 op mul *tmp174 126 *tmp169
+  371 op div *tmp175 *tmp174 15
+  372 op min :drawItemColor.3:length 126 *tmp175
+  373 op mul *tmp177 0 176
+  374 op mul *tmp178 0 88
+  375 op add :drawItemColor.3:iconX 11 0
+  376 op mul *tmp180 0 176
+  377 op div *tmp181 0 2
+  378 op add :drawItemColor.3:barX 22 0
+  379 op mul *tmp183 0 176
+  380 op div *tmp184 0 2
+  381 op add :drawItemColor.3:textX 174 0
   382 draw col %[white]
-    * op add *tmp186 :drawItem.3:y 5
-    * draw image :drawItemColor.3:iconX *tmp186 :drawItem.3:item 16 0
+  383 op add *tmp186 :drawTitleRow.2:y 5
+  384 draw image 11 *tmp186 @lead 16 0
   385 draw col %008000FF
-    * draw rect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:length 10
+  386 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   387 draw col %00FF00FF
-    * draw lineRect :drawItemColor.3:barX :drawItem.3:y :drawItemColor.3:barLength 10
-    * op add *tmp187 :drawItem.3:y 5
-    * op add *tmp188 *tmp186 2
-    * set :drawBold.3:x :drawItemColor.3:textX
+  388 draw lineRect 22 :drawTitleRow.2:y 126 10
+  389 op add *tmp187 :drawTitleRow.2:y 5
+  390 op add *tmp188 :drawItem.3:y 7
+  391 set :drawBold.3:x 174
   392 set :drawBold.3:y *tmp188
   393 set :drawBold.3:alignment @right
-    * set :drawText.12:x :drawItemColor.3:textX
-    * set :drawText.12:y *tmp188
-    * set :drawText.12:alignment @right
+  394 set :drawText.12:x 174
   395 print 15
-    * draw print :drawBold.3:x :drawBold.3:y :drawBold.3:alignment
+  396 draw print :drawItemColor.3:textX *tmp188 @right
   397 label *label96
-    * op add :drawText.13:x :drawItemColor.3:textX 1
-    * set :drawText.13:y *tmp188
-    * set :drawText.13:alignment @right
+  398 op add :drawText.13:x 174 1
   399 print 15
-    * draw print :drawText.13:x :drawBold.3:y :drawBold.3:alignment
+  400 draw print 175 *tmp188 @right
   401 label *label97
   402 label *label95
-    * op add :drawItemColor.3:col :drawItem.3:col 1
-    * jump *label98 lessThan :drawItemColor.3:col :drawItem.3:columns
-    * set :drawItemColor.3:col 0
-    * op sub :drawItemColor.3:y :drawItem.3:y 15
+  403 op add :drawItemColor.3:col 0 1
+  404 jump *label98 lessThan 1 1
+  405 op sub :drawItemColor.3:y :drawTitleRow.2:y 15
   406 label *label98
   407 label *label99
   408 label *label94
 
   411 set :updateDisplay:y :drawItemColor.3:y
   412 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   413 set :drawItem.4:col 0
-    * set :drawItem.4:y :drawItem.3:y
+  414 set :drawItem.4:y :drawItemColor.3:y
   415 set :drawItem.4:columns 1
   416 set :drawItem.4:item @silicon
   417 set :drawItem.4:current *tmp192
   418 set :drawItem.4:target 30
-    * set :drawItemColor.4:color1 %008000FF
-    * set :drawItemColor.4:color2 %00FF00FF
   419 set :drawItemColor.4:col 0
-    * set :drawItemColor.4:y :updateDisplay:y
+  420 set :drawItemColor.4:y :drawItemColor.3:y
   421 set :drawItemColor.4:columns 1
-    * set :drawItemColor.4:item @silicon
-    * set :drawItemColor.4:current *tmp192
-    * set :drawItemColor.4:target 30
-    * op mul *tmp193 :drawItem.4:columns 176
-    * op mul *tmp194 :drawItemColor.4:columns 88
-    * op sub :drawItemColor.4:barLength 214 *tmp194
-    * op add :drawItemColor.4:textEnd 48 :drawItemColor.4:barLength
-    * op mul *tmp197 :drawItemColor.4:barLength :drawItem.4:current
-    * op div *tmp198 *tmp197 :drawItem.4:target
-    * op min :drawItemColor.4:length :drawItemColor.4:barLength *tmp198
-    * op mul *tmp200 :drawItem.4:col 176
-    * op mul *tmp201 :drawItemColor.4:col 88
-    * op add :drawItemColor.4:iconX 11 *tmp201
-    * op mul *tmp203 :drawItem.4:col 176
-    * op div *tmp204 *tmp200 2
-    * op add :drawItemColor.4:barX 22 *tmp201
-    * op mul *tmp206 :drawItem.4:col 176
-    * op div *tmp207 *tmp200 2
-    * op add :drawItemColor.4:textX :drawItemColor.4:textEnd *tmp201
+  422 op mul *tmp193 1 176
+  423 op mul *tmp194 1 88
+  424 op sub :drawItemColor.4:barLength 214 88
+  425 op add :drawItemColor.4:textEnd 48 126
+  426 op mul *tmp197 126 *tmp192
+  427 op div *tmp198 *tmp197 30
+  428 op min :drawItemColor.4:length 126 *tmp198
+  429 op mul *tmp200 0 176
+  430 op mul *tmp201 0 88
+  431 op add :drawItemColor.4:iconX 11 0
+  432 op mul *tmp203 0 176
+  433 op div *tmp204 0 2
+  434 op add :drawItemColor.4:barX 22 0
+  435 op mul *tmp206 0 176
+  436 op div *tmp207 0 2
+  437 op add :drawItemColor.4:textX 174 0
   438 draw col %[white]
-    * op add *tmp209 :drawItem.4:y 5
-    * draw image :drawItemColor.4:iconX *tmp209 :drawItem.4:item 16 0
+  439 op add *tmp209 :drawItem.3:y 5
+  440 draw image 11 *tmp209 @silicon 16 0
   441 draw col %008000FF
-    * draw rect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:length 10
+  442 draw rect 22 :drawItem.3:y :drawItemColor.4:length 10
   443 draw col %00FF00FF
-    * draw lineRect :drawItemColor.4:barX :drawItem.4:y :drawItemColor.4:barLength 10
-    * op add *tmp210 :drawItem.4:y 5
-    * op add *tmp211 *tmp209 2
-    * set :drawBold.4:x :drawItemColor.4:textX
+  444 draw lineRect 22 :drawItem.3:y 126 10
+  445 op add *tmp210 :drawItem.3:y 5
+  446 op add *tmp211 :drawItem.4:y 7
+  447 set :drawBold.4:x 174
   448 set :drawBold.4:y *tmp211
   449 set :drawBold.4:alignment @right
-    * set :drawText.14:x :drawItemColor.4:textX
-    * set :drawText.14:y *tmp211
-    * set :drawText.14:alignment @right
+  450 set :drawText.14:x 174
   451 print 30
-    * draw print :drawBold.4:x :drawBold.4:y :drawBold.4:alignment
+  452 draw print :drawItemColor.4:textX *tmp211 @right
   453 label *label103
-    * op add :drawText.15:x :drawItemColor.4:textX 1
-    * set :drawText.15:y *tmp211
-    * set :drawText.15:alignment @right
+  454 op add :drawText.15:x 174 1
   455 print 30
-    * draw print :drawText.15:x :drawBold.4:y :drawBold.4:alignment
+  456 draw print 175 *tmp211 @right
   457 label *label104
   458 label *label102
-    * op add :drawItemColor.4:col :drawItem.4:col 1
-    * jump *label105 lessThan :drawItemColor.4:col :drawItem.4:columns
-    * set :drawItemColor.4:col 0
-    * op sub :drawItemColor.4:y :drawItem.4:y 15
+  459 op add :drawItemColor.4:col 0 1
+  460 jump *label105 lessThan 1 1
+  461 op sub :drawItemColor.4:y :drawItem.3:y 15
   462 label *label105
   463 label *label106
   464 label *label101
-    * set :drawItem.4:y :drawItemColor.4:y
   465 label *label100
   466 set :updateDisplay:y :drawItemColor.4:y
   467 label *label85
 
   474 set :drawItem.5:item .nextFactory
   475 set :drawItem.5:current :drawAirFactory:progress
   476 set :drawItem.5:target 1
-    * set :drawItemColor.5:color1 %008000FF
-    * set :drawItemColor.5:color2 %00FF00FF
   477 set :drawItemColor.5:col 0
-    * set :drawItemColor.5:y :updateDisplay:y
+  478 set :drawItemColor.5:y :drawTitleRow.2:y
   479 set :drawItemColor.5:columns 1
-    * set :drawItemColor.5:item :drawItem.5:item
-    * set :drawItemColor.5:current :drawAirFactory:progress
-    * set :drawItemColor.5:target 1
-    * op mul *tmp217 :drawItem.5:columns 176
-    * op mul *tmp218 :drawItemColor.5:columns 88
-    * op sub :drawItemColor.5:barLength 214 *tmp218
-    * op add :drawItemColor.5:textEnd 48 :drawItemColor.5:barLength
-    * op mul *tmp221 :drawItemColor.5:barLength :drawItem.5:current
-    * op div *tmp222 *tmp221 :drawItem.5:target
-    * op min :drawItemColor.5:length :drawItemColor.5:barLength *tmp222
-    * op mul *tmp224 :drawItem.5:col 176
-    * op mul *tmp225 :drawItemColor.5:col 88
-    * op add :drawItemColor.5:iconX 11 *tmp225
-    * op mul *tmp227 :drawItem.5:col 176
-    * op div *tmp228 *tmp224 2
-    * op add :drawItemColor.5:barX 22 *tmp225
-    * op mul *tmp230 :drawItem.5:col 176
-    * op div *tmp231 *tmp224 2
-    * op add :drawItemColor.5:textX :drawItemColor.5:textEnd *tmp225
+  480 op mul *tmp217 1 176
+  481 op mul *tmp218 1 88
+  482 op sub :drawItemColor.5:barLength 214 88
+  483 op add :drawItemColor.5:textEnd 48 126
+  484 op mul *tmp221 126 :drawAirFactory:progress
+  485 op div *tmp222 *tmp221 1
+  486 op min :drawItemColor.5:length 126 *tmp222
+  487 op mul *tmp224 0 176
+  488 op mul *tmp225 0 88
+  489 op add :drawItemColor.5:iconX 11 0
+  490 op mul *tmp227 0 176
+  491 op div *tmp228 0 2
+  492 op add :drawItemColor.5:barX 22 0
+  493 op mul *tmp230 0 176
+  494 op div *tmp231 0 2
+  495 op add :drawItemColor.5:textX 174 0
   496 draw col %[white]
-    * op add *tmp233 :drawItem.5:y 5
-    * draw image :drawItemColor.5:iconX *tmp233 :drawItem.5:item 16 0
+  497 op add *tmp233 :drawTitleRow.2:y 5
+  498 draw image 11 *tmp233 :drawItem.5:item 16 0
   499 draw col %008000FF
-    * draw rect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:length 10
+  500 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   501 draw col %00FF00FF
-    * draw lineRect :drawItemColor.5:barX :drawItem.5:y :drawItemColor.5:barLength 10
-    * op add *tmp234 :drawItem.5:y 5
-    * op add *tmp235 *tmp233 2
-    * set :drawBold.5:x :drawItemColor.5:textX
+  502 draw lineRect 22 :drawTitleRow.2:y 126 10
+  503 op add *tmp234 :drawTitleRow.2:y 5
+  504 op add *tmp235 :drawItem.5:y 7
+  505 set :drawBold.5:x 174
   506 set :drawBold.5:y *tmp235
   507 set :drawBold.5:alignment @right
-    * set :drawText.16:x :drawItemColor.5:textX
-    * set :drawText.16:y *tmp235
-    * set :drawText.16:alignment @right
+  508 set :drawText.16:x 174
   509 print *tmp216
   510 print "%"
-    * draw print :drawBold.5:x :drawBold.5:y :drawBold.5:alignment
+  511 draw print :drawItemColor.5:textX *tmp235 @right
   512 label *label110
-    * op add :drawText.17:x :drawItemColor.5:textX 1
-    * set :drawText.17:y *tmp235
-    * set :drawText.17:alignment @right
+  513 op add :drawText.17:x 174 1
   514 print *tmp216
   515 print "%"
-    * draw print :drawText.17:x :drawBold.5:y :drawBold.5:alignment
+  516 draw print 175 *tmp235 @right
   517 label *label111
   518 label *label109
-    * op add :drawItemColor.5:col :drawItem.5:col 1
-    * jump *label112 lessThan :drawItemColor.5:col :drawItem.5:columns
-    * set :drawItemColor.5:col 0
-    * op sub :drawItemColor.5:y :drawItem.5:y 15
+  519 op add :drawItemColor.5:col 0 1
+  520 jump *label112 lessThan 1 1
+  521 op sub :drawItemColor.5:y :drawTitleRow.2:y 15
   522 label *label112
   523 label *label113
   524 label *label108
   525 set :drawItem.5:y :drawItemColor.5:y
   526 label *label107
-    * set :updateDisplay:y :drawItemColor.5:y
-    * op sub :updateDisplay:y :drawItem.5:y 15
+  527 op sub :updateDisplay:y :drawItemColor.5:y 15
   528 label *label83
   529 op sub :updateDisplay:y :updateDisplay:y 5
   530 label *label76
 
   535 draw col %[white]
   536 set :drawTitleRow.3:y :updateDisplay:y
   537 set :drawTitleRow.3:alignment @bottomLeft
-    * set :drawText.18:x 22
-    * set :drawText.18:y :updateDisplay:y
-    * set :drawText.18:alignment @bottomLeft
   538 print "Reconstructor"
-    * draw print 22 :drawTitleRow.3:y :drawTitleRow.3:alignment
+  539 draw print 22 :updateDisplay:y @bottomLeft
   540 label *label118
-    * set :drawText.19:x 23
-    * set :drawText.19:y :updateDisplay:y
-    * set :drawText.19:alignment @bottomLeft
   541 print "Reconstructor"
-    * draw print 23 :drawTitleRow.3:y :drawTitleRow.3:alignment
+  542 draw print 23 :updateDisplay:y @bottomLeft
   543 label *label119
   544 op sub :drawTitleRow.3:y :updateDisplay:y 15
   545 label *label117
 
   553 set :drawItem.6:item @graphite
   554 set :drawItem.6:current *tmp244
   555 set :drawItem.6:target 40
-    * set :drawItemColor.6:color1 %008000FF
-    * set :drawItemColor.6:color2 %00FF00FF
   556 set :drawItemColor.6:col 0
-    * set :drawItemColor.6:y :updateDisplay:y
+  557 set :drawItemColor.6:y :drawTitleRow.3:y
   558 set :drawItemColor.6:columns 1
-    * set :drawItemColor.6:item @graphite
-    * set :drawItemColor.6:current *tmp244
-    * set :drawItemColor.6:target 40
-    * op mul *tmp245 :drawItem.6:columns 176
-    * op mul *tmp246 :drawItemColor.6:columns 88
-    * op sub :drawItemColor.6:barLength 214 *tmp246
-    * op add :drawItemColor.6:textEnd 48 :drawItemColor.6:barLength
-    * op mul *tmp249 :drawItemColor.6:barLength :drawItem.6:current
-    * op div *tmp250 *tmp249 :drawItem.6:target
-    * op min :drawItemColor.6:length :drawItemColor.6:barLength *tmp250
-    * op mul *tmp252 :drawItem.6:col 176
-    * op mul *tmp253 :drawItemColor.6:col 88
-    * op add :drawItemColor.6:iconX 11 *tmp253
-    * op mul *tmp255 :drawItem.6:col 176
-    * op div *tmp256 *tmp252 2
-    * op add :drawItemColor.6:barX 22 *tmp253
-    * op mul *tmp258 :drawItem.6:col 176
-    * op div *tmp259 *tmp252 2
-    * op add :drawItemColor.6:textX :drawItemColor.6:textEnd *tmp253
+  559 op mul *tmp245 1 176
+  560 op mul *tmp246 1 88
+  561 op sub :drawItemColor.6:barLength 214 88
+  562 op add :drawItemColor.6:textEnd 48 126
+  563 op mul *tmp249 126 *tmp244
+  564 op div *tmp250 *tmp249 40
+  565 op min :drawItemColor.6:length 126 *tmp250
+  566 op mul *tmp252 0 176
+  567 op mul *tmp253 0 88
+  568 op add :drawItemColor.6:iconX 11 0
+  569 op mul *tmp255 0 176
+  570 op div *tmp256 0 2
+  571 op add :drawItemColor.6:barX 22 0
+  572 op mul *tmp258 0 176
+  573 op div *tmp259 0 2
+  574 op add :drawItemColor.6:textX 174 0
   575 draw col %[white]
-    * op add *tmp261 :drawItem.6:y 5
-    * draw image :drawItemColor.6:iconX *tmp261 :drawItem.6:item 16 0
+  576 op add *tmp261 :drawTitleRow.3:y 5
+  577 draw image 11 *tmp261 @graphite 16 0
   578 draw col %008000FF
-    * draw rect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:length 10
+  579 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   580 draw col %00FF00FF
-    * draw lineRect :drawItemColor.6:barX :drawItem.6:y :drawItemColor.6:barLength 10
-    * op add *tmp262 :drawItem.6:y 5
-    * op add *tmp263 *tmp261 2
-    * set :drawBold.6:x :drawItemColor.6:textX
+  581 draw lineRect 22 :drawTitleRow.3:y 126 10
+  582 op add *tmp262 :drawTitleRow.3:y 5
+  583 op add *tmp263 :drawItem.6:y 7
+  584 set :drawBold.6:x 174
   585 set :drawBold.6:y *tmp263
   586 set :drawBold.6:alignment @right
-    * set :drawText.20:x :drawItemColor.6:textX
-    * set :drawText.20:y *tmp263
-    * set :drawText.20:alignment @right
+  587 set :drawText.20:x 174
   588 print 40
-    * draw print :drawBold.6:x :drawBold.6:y :drawBold.6:alignment
+  589 draw print :drawItemColor.6:textX *tmp263 @right
   590 label *label125
-    * op add :drawText.21:x :drawItemColor.6:textX 1
-    * set :drawText.21:y *tmp263
-    * set :drawText.21:alignment @right
+  591 op add :drawText.21:x 174 1
   592 print 40
-    * draw print :drawText.21:x :drawBold.6:y :drawBold.6:alignment
+  593 draw print 175 *tmp263 @right
   594 label *label126
   595 label *label124
-    * op add :drawItemColor.6:col :drawItem.6:col 1
-    * jump *label127 lessThan :drawItemColor.6:col :drawItem.6:columns
-    * set :drawItemColor.6:col 0
-    * op sub :drawItemColor.6:y :drawItem.6:y 15
+  596 op add :drawItemColor.6:col 0 1
+  597 jump *label127 lessThan 1 1
+  598 op sub :drawItemColor.6:y :drawTitleRow.3:y 15
   599 label *label127
   600 label *label128
   601 label *label123
 
   604 set :updateDisplay:y :drawItemColor.6:y
   605 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
   606 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawItem.6:y
+  607 set :drawItem.7:y :drawItemColor.6:y
   608 set :drawItem.7:columns 1
   609 set :drawItem.7:item @silicon
   610 set :drawItem.7:current *tmp267
   611 set :drawItem.7:target 40
-    * set :drawItemColor.7:color1 %008000FF
-    * set :drawItemColor.7:color2 %00FF00FF
   612 set :drawItemColor.7:col 0
-    * set :drawItemColor.7:y :updateDisplay:y
+  613 set :drawItemColor.7:y :drawItemColor.6:y
   614 set :drawItemColor.7:columns 1
-    * set :drawItemColor.7:item @silicon
-    * set :drawItemColor.7:current *tmp267
-    * set :drawItemColor.7:target 40
-    * op mul *tmp268 :drawItem.7:columns 176
-    * op mul *tmp269 :drawItemColor.7:columns 88
-    * op sub :drawItemColor.7:barLength 214 *tmp269
-    * op add :drawItemColor.7:textEnd 48 :drawItemColor.7:barLength
-    * op mul *tmp272 :drawItemColor.7:barLength :drawItem.7:current
-    * op div *tmp273 *tmp272 :drawItem.7:target
-    * op min :drawItemColor.7:length :drawItemColor.7:barLength *tmp273
-    * op mul *tmp275 :drawItem.7:col 176
-    * op mul *tmp276 :drawItemColor.7:col 88
-    * op add :drawItemColor.7:iconX 11 *tmp276
-    * op mul *tmp278 :drawItem.7:col 176
-    * op div *tmp279 *tmp275 2
-    * op add :drawItemColor.7:barX 22 *tmp276
-    * op mul *tmp281 :drawItem.7:col 176
-    * op div *tmp282 *tmp275 2
-    * op add :drawItemColor.7:textX :drawItemColor.7:textEnd *tmp276
+  615 op mul *tmp268 1 176
+  616 op mul *tmp269 1 88
+  617 op sub :drawItemColor.7:barLength 214 88
+  618 op add :drawItemColor.7:textEnd 48 126
+  619 op mul *tmp272 126 *tmp267
+  620 op div *tmp273 *tmp272 40
+  621 op min :drawItemColor.7:length 126 *tmp273
+  622 op mul *tmp275 0 176
+  623 op mul *tmp276 0 88
+  624 op add :drawItemColor.7:iconX 11 0
+  625 op mul *tmp278 0 176
+  626 op div *tmp279 0 2
+  627 op add :drawItemColor.7:barX 22 0
+  628 op mul *tmp281 0 176
+  629 op div *tmp282 0 2
+  630 op add :drawItemColor.7:textX 174 0
   631 draw col %[white]
-    * op add *tmp284 :drawItem.7:y 5
-    * draw image :drawItemColor.7:iconX *tmp284 :drawItem.7:item 16 0
+  632 op add *tmp284 :drawItem.6:y 5
+  633 draw image 11 *tmp284 @silicon 16 0
   634 draw col %008000FF
-    * draw rect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:length 10
+  635 draw rect 22 :drawItem.6:y :drawItemColor.7:length 10
   636 draw col %00FF00FF
-    * draw lineRect :drawItemColor.7:barX :drawItem.7:y :drawItemColor.7:barLength 10
-    * op add *tmp285 :drawItem.7:y 5
-    * op add *tmp286 *tmp284 2
-    * set :drawBold.7:x :drawItemColor.7:textX
+  637 draw lineRect 22 :drawItem.6:y 126 10
+  638 op add *tmp285 :drawItem.6:y 5
+  639 op add *tmp286 :drawItem.7:y 7
+  640 set :drawBold.7:x 174
   641 set :drawBold.7:y *tmp286
   642 set :drawBold.7:alignment @right
-    * set :drawText.22:x :drawItemColor.7:textX
-    * set :drawText.22:y *tmp286
-    * set :drawText.22:alignment @right
+  643 set :drawText.22:x 174
   644 print 40
-    * draw print :drawBold.7:x :drawBold.7:y :drawBold.7:alignment
+  645 draw print :drawItemColor.7:textX *tmp286 @right
   646 label *label132
-    * op add :drawText.23:x :drawItemColor.7:textX 1
-    * set :drawText.23:y *tmp286
-    * set :drawText.23:alignment @right
+  647 op add :drawText.23:x 174 1
   648 print 40
-    * draw print :drawText.23:x :drawBold.7:y :drawBold.7:alignment
+  649 draw print 175 *tmp286 @right
   650 label *label133
   651 label *label131
-    * op add :drawItemColor.7:col :drawItem.7:col 1
-    * jump *label134 lessThan :drawItemColor.7:col :drawItem.7:columns
-    * set :drawItemColor.7:col 0
-    * op sub :drawItemColor.7:y :drawItem.7:y 15
+  652 op add :drawItemColor.7:col 0 1
+  653 jump *label134 lessThan 1 1
+  654 op sub :drawItemColor.7:y :drawItem.6:y 15
   655 label *label134
   656 label *label135
   657 label *label130
-    * set :drawItem.7:y :drawItemColor.7:y
   658 label *label129
   659 set :updateDisplay:y :drawItemColor.7:y
   660 jump *label121 always
 
   666 set :drawItem.8:item @poly
   667 set :drawItem.8:current :drawAddReco:progress
   668 set :drawItem.8:target 1
-    * set :drawItemColor.8:color1 %008000FF
-    * set :drawItemColor.8:color2 %00FF00FF
   669 set :drawItemColor.8:col 0
-    * set :drawItemColor.8:y :updateDisplay:y
+  670 set :drawItemColor.8:y :drawTitleRow.3:y
   671 set :drawItemColor.8:columns 1
-    * set :drawItemColor.8:item @poly
-    * set :drawItemColor.8:current :drawAddReco:progress
-    * set :drawItemColor.8:target 1
-    * op mul *tmp292 :drawItem.8:columns 176
-    * op mul *tmp293 :drawItemColor.8:columns 88
-    * op sub :drawItemColor.8:barLength 214 *tmp293
-    * op add :drawItemColor.8:textEnd 48 :drawItemColor.8:barLength
-    * op mul *tmp296 :drawItemColor.8:barLength :drawItem.8:current
-    * op div *tmp297 *tmp296 :drawItem.8:target
-    * op min :drawItemColor.8:length :drawItemColor.8:barLength *tmp297
-    * op mul *tmp299 :drawItem.8:col 176
-    * op mul *tmp300 :drawItemColor.8:col 88
-    * op add :drawItemColor.8:iconX 11 *tmp300
-    * op mul *tmp302 :drawItem.8:col 176
-    * op div *tmp303 *tmp299 2
-    * op add :drawItemColor.8:barX 22 *tmp300
-    * op mul *tmp305 :drawItem.8:col 176
-    * op div *tmp306 *tmp299 2
-    * op add :drawItemColor.8:textX :drawItemColor.8:textEnd *tmp300
+  672 op mul *tmp292 1 176
+  673 op mul *tmp293 1 88
+  674 op sub :drawItemColor.8:barLength 214 88
+  675 op add :drawItemColor.8:textEnd 48 126
+  676 op mul *tmp296 126 :drawAddReco:progress
+  677 op div *tmp297 *tmp296 1
+  678 op min :drawItemColor.8:length 126 *tmp297
+  679 op mul *tmp299 0 176
+  680 op mul *tmp300 0 88
+  681 op add :drawItemColor.8:iconX 11 0
+  682 op mul *tmp302 0 176
+  683 op div *tmp303 0 2
+  684 op add :drawItemColor.8:barX 22 0
+  685 op mul *tmp305 0 176
+  686 op div *tmp306 0 2
+  687 op add :drawItemColor.8:textX 174 0
   688 draw col %[white]
-    * op add *tmp308 :drawItem.8:y 5
-    * draw image :drawItemColor.8:iconX *tmp308 :drawItem.8:item 16 0
+  689 op add *tmp308 :drawTitleRow.3:y 5
+  690 draw image 11 *tmp308 @poly 16 0
   691 draw col %008000FF
-    * draw rect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:length 10
+  692 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   693 draw col %00FF00FF
-    * draw lineRect :drawItemColor.8:barX :drawItem.8:y :drawItemColor.8:barLength 10
-    * op add *tmp309 :drawItem.8:y 5
-    * op add *tmp310 *tmp308 2
-    * set :drawBold.8:x :drawItemColor.8:textX
+  694 draw lineRect 22 :drawTitleRow.3:y 126 10
+  695 op add *tmp309 :drawTitleRow.3:y 5
+  696 op add *tmp310 :drawItem.8:y 7
+  697 set :drawBold.8:x 174
   698 set :drawBold.8:y *tmp310
   699 set :drawBold.8:alignment @right
-    * set :drawText.24:x :drawItemColor.8:textX
-    * set :drawText.24:y *tmp310
-    * set :drawText.24:alignment @right
+  700 set :drawText.24:x 174
   701 print *tmp291
   702 print "%"
-    * draw print :drawBold.8:x :drawBold.8:y :drawBold.8:alignment
+  703 draw print :drawItemColor.8:textX *tmp310 @right
   704 label *label139
-    * op add :drawText.25:x :drawItemColor.8:textX 1
-    * set :drawText.25:y *tmp310
-    * set :drawText.25:alignment @right
+  705 op add :drawText.25:x 174 1
   706 print *tmp291
   707 print "%"
-    * draw print :drawText.25:x :drawBold.8:y :drawBold.8:alignment
+  708 draw print 175 *tmp310 @right
   709 label *label140
   710 label *label138
-    * op add :drawItemColor.8:col :drawItem.8:col 1
-    * jump *label141 lessThan :drawItemColor.8:col :drawItem.8:columns
-    * set :drawItemColor.8:col 0
-    * op sub :drawItemColor.8:y :drawItem.8:y 15
+  711 op add :drawItemColor.8:col 0 1
+  712 jump *label141 lessThan 1 1
+  713 op sub :drawItemColor.8:y :drawTitleRow.3:y 15
   714 label *label141
   715 label *label142
   716 label *label137
   717 set :drawItem.8:y :drawItemColor.8:y
   718 label *label136
-    * set :updateDisplay:y :drawItemColor.8:y
-    * op sub :updateDisplay:y :drawItem.8:y 15
+  719 op sub :updateDisplay:y :drawItemColor.8:y 15
   720 label *label121
   721 op sub :updateDisplay:y :updateDisplay:y 5
   722 label *label114
 
   728 op min :updateDisplay:y :updateDisplay:y 142
   729 set :drawTitleRow.4:y :updateDisplay:y
   730 set :drawTitleRow.4:alignment @bottomLeft
-    * set :drawText.26:x 22
-    * set :drawText.26:y :updateDisplay:y
-    * set :drawText.26:alignment @bottomLeft
   731 print "Reconstructor"
-    * draw print 22 :drawTitleRow.4:y :drawTitleRow.4:alignment
+  732 draw print 22 :updateDisplay:y @bottomLeft
   733 label *label147
-    * set :drawText.27:x 23
-    * set :drawText.27:y :updateDisplay:y
-    * set :drawText.27:alignment @bottomLeft
   734 print "Reconstructor"
-    * draw print 23 :drawTitleRow.4:y :drawTitleRow.4:alignment
+  735 draw print 23 :updateDisplay:y @bottomLeft
   736 label *label148
   737 op sub :drawTitleRow.4:y :updateDisplay:y 15
   738 label *label146
 
   746 set :drawItem.9:item @metaglass
   747 set :drawItem.9:current *tmp320
   748 set :drawItem.9:target 40
-    * set :drawItemColor.9:color1 %008000FF
-    * set :drawItemColor.9:color2 %00FF00FF
   749 set :drawItemColor.9:col 0
-    * set :drawItemColor.9:y :updateDisplay:y
+  750 set :drawItemColor.9:y :drawTitleRow.4:y
   751 set :drawItemColor.9:columns 1
-    * set :drawItemColor.9:item @metaglass
-    * set :drawItemColor.9:current *tmp320
-    * set :drawItemColor.9:target 40
-    * op mul *tmp321 :drawItem.9:columns 176
-    * op mul *tmp322 :drawItemColor.9:columns 88
-    * op sub :drawItemColor.9:barLength 214 *tmp322
-    * op add :drawItemColor.9:textEnd 48 :drawItemColor.9:barLength
-    * op mul *tmp325 :drawItemColor.9:barLength :drawItem.9:current
-    * op div *tmp326 *tmp325 :drawItem.9:target
-    * op min :drawItemColor.9:length :drawItemColor.9:barLength *tmp326
-    * op mul *tmp328 :drawItem.9:col 176
-    * op mul *tmp329 :drawItemColor.9:col 88
-    * op add :drawItemColor.9:iconX 11 *tmp329
-    * op mul *tmp331 :drawItem.9:col 176
-    * op div *tmp332 *tmp328 2
-    * op add :drawItemColor.9:barX 22 *tmp329
-    * op mul *tmp334 :drawItem.9:col 176
-    * op div *tmp335 *tmp328 2
-    * op add :drawItemColor.9:textX :drawItemColor.9:textEnd *tmp329
+  752 op mul *tmp321 1 176
+  753 op mul *tmp322 1 88
+  754 op sub :drawItemColor.9:barLength 214 88
+  755 op add :drawItemColor.9:textEnd 48 126
+  756 op mul *tmp325 126 *tmp320
+  757 op div *tmp326 *tmp325 40
+  758 op min :drawItemColor.9:length 126 *tmp326
+  759 op mul *tmp328 0 176
+  760 op mul *tmp329 0 88
+  761 op add :drawItemColor.9:iconX 11 0
+  762 op mul *tmp331 0 176
+  763 op div *tmp332 0 2
+  764 op add :drawItemColor.9:barX 22 0
+  765 op mul *tmp334 0 176
+  766 op div *tmp335 0 2
+  767 op add :drawItemColor.9:textX 174 0
   768 draw col %[white]
-    * op add *tmp337 :drawItem.9:y 5
-    * draw image :drawItemColor.9:iconX *tmp337 :drawItem.9:item 16 0
+  769 op add *tmp337 :drawTitleRow.4:y 5
+  770 draw image 11 *tmp337 @metaglass 16 0
   771 draw col %008000FF
-    * draw rect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:length 10
+  772 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   773 draw col %00FF00FF
-    * draw lineRect :drawItemColor.9:barX :drawItem.9:y :drawItemColor.9:barLength 10
-    * op add *tmp338 :drawItem.9:y 5
-    * op add *tmp339 *tmp337 2
-    * set :drawBold.9:x :drawItemColor.9:textX
+  774 draw lineRect 22 :drawTitleRow.4:y 126 10
+  775 op add *tmp338 :drawTitleRow.4:y 5
+  776 op add *tmp339 :drawItem.9:y 7
+  777 set :drawBold.9:x 174
   778 set :drawBold.9:y *tmp339
   779 set :drawBold.9:alignment @right
-    * set :drawText.28:x :drawItemColor.9:textX
-    * set :drawText.28:y *tmp339
-    * set :drawText.28:alignment @right
+  780 set :drawText.28:x 174
   781 print 40
-    * draw print :drawBold.9:x :drawBold.9:y :drawBold.9:alignment
+  782 draw print :drawItemColor.9:textX *tmp339 @right
   783 label *label154
-    * op add :drawText.29:x :drawItemColor.9:textX 1
-    * set :drawText.29:y *tmp339
-    * set :drawText.29:alignment @right
+  784 op add :drawText.29:x 174 1
   785 print 40
-    * draw print :drawText.29:x :drawBold.9:y :drawBold.9:alignment
+  786 draw print 175 *tmp339 @right
   787 label *label155
   788 label *label153
-    * op add :drawItemColor.9:col :drawItem.9:col 1
-    * jump *label156 lessThan :drawItemColor.9:col :drawItem.9:columns
-    * set :drawItemColor.9:col 0
-    * op sub :drawItemColor.9:y :drawItem.9:y 15
+  789 op add :drawItemColor.9:col 0 1
+  790 jump *label156 lessThan 1 1
+  791 op sub :drawItemColor.9:y :drawTitleRow.4:y 15
   792 label *label156
   793 label *label157
   794 label *label152
 
   797 set :updateDisplay:y :drawItemColor.9:y
   798 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
   799 set :drawItem.10:col 0
-    * set :drawItem.10:y :drawItem.9:y
+  800 set :drawItem.10:y :drawItemColor.9:y
   801 set :drawItem.10:columns 1
   802 set :drawItem.10:item @titanium
   803 set :drawItem.10:current *tmp343
   804 set :drawItem.10:target 80
-    * set :drawItemColor.10:color1 %008000FF
-    * set :drawItemColor.10:color2 %00FF00FF
   805 set :drawItemColor.10:col 0
-    * set :drawItemColor.10:y :updateDisplay:y
+  806 set :drawItemColor.10:y :drawItemColor.9:y
   807 set :drawItemColor.10:columns 1
-    * set :drawItemColor.10:item @titanium
-    * set :drawItemColor.10:current *tmp343
-    * set :drawItemColor.10:target 80
-    * op mul *tmp344 :drawItem.10:columns 176
-    * op mul *tmp345 :drawItemColor.10:columns 88
-    * op sub :drawItemColor.10:barLength 214 *tmp345
-    * op add :drawItemColor.10:textEnd 48 :drawItemColor.10:barLength
-    * op mul *tmp348 :drawItemColor.10:barLength :drawItem.10:current
-    * op div *tmp349 *tmp348 :drawItem.10:target
-    * op min :drawItemColor.10:length :drawItemColor.10:barLength *tmp349
-    * op mul *tmp351 :drawItem.10:col 176
-    * op mul *tmp352 :drawItemColor.10:col 88
-    * op add :drawItemColor.10:iconX 11 *tmp352
-    * op mul *tmp354 :drawItem.10:col 176
-    * op div *tmp355 *tmp351 2
-    * op add :drawItemColor.10:barX 22 *tmp352
-    * op mul *tmp357 :drawItem.10:col 176
-    * op div *tmp358 *tmp351 2
-    * op add :drawItemColor.10:textX :drawItemColor.10:textEnd *tmp352
+  808 op mul *tmp344 1 176
+  809 op mul *tmp345 1 88
+  810 op sub :drawItemColor.10:barLength 214 88
+  811 op add :drawItemColor.10:textEnd 48 126
+  812 op mul *tmp348 126 *tmp343
+  813 op div *tmp349 *tmp348 80
+  814 op min :drawItemColor.10:length 126 *tmp349
+  815 op mul *tmp351 0 176
+  816 op mul *tmp352 0 88
+  817 op add :drawItemColor.10:iconX 11 0
+  818 op mul *tmp354 0 176
+  819 op div *tmp355 0 2
+  820 op add :drawItemColor.10:barX 22 0
+  821 op mul *tmp357 0 176
+  822 op div *tmp358 0 2
+  823 op add :drawItemColor.10:textX 174 0
   824 draw col %[white]
-    * op add *tmp360 :drawItem.10:y 5
-    * draw image :drawItemColor.10:iconX *tmp360 :drawItem.10:item 16 0
+  825 op add *tmp360 :drawItem.9:y 5
+  826 draw image 11 *tmp360 @titanium 16 0
   827 draw col %008000FF
-    * draw rect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:length 10
+  828 draw rect 22 :drawItem.9:y :drawItemColor.10:length 10
   829 draw col %00FF00FF
-    * draw lineRect :drawItemColor.10:barX :drawItem.10:y :drawItemColor.10:barLength 10
-    * op add *tmp361 :drawItem.10:y 5
-    * op add *tmp362 *tmp360 2
-    * set :drawBold.10:x :drawItemColor.10:textX
+  830 draw lineRect 22 :drawItem.9:y 126 10
+  831 op add *tmp361 :drawItem.9:y 5
+  832 op add *tmp362 :drawItem.10:y 7
+  833 set :drawBold.10:x 174
   834 set :drawBold.10:y *tmp362
   835 set :drawBold.10:alignment @right
-    * set :drawText.30:x :drawItemColor.10:textX
-    * set :drawText.30:y *tmp362
-    * set :drawText.30:alignment @right
+  836 set :drawText.30:x 174
   837 print 80
-    * draw print :drawBold.10:x :drawBold.10:y :drawBold.10:alignment
+  838 draw print :drawItemColor.10:textX *tmp362 @right
   839 label *label161
-    * op add :drawText.31:x :drawItemColor.10:textX 1
-    * set :drawText.31:y *tmp362
-    * set :drawText.31:alignment @right
+  840 op add :drawText.31:x 174 1
   841 print 80
-    * draw print :drawText.31:x :drawBold.10:y :drawBold.10:alignment
+  842 draw print 175 *tmp362 @right
   843 label *label162
   844 label *label160
-    * op add :drawItemColor.10:col :drawItem.10:col 1
-    * jump *label163 lessThan :drawItemColor.10:col :drawItem.10:columns
-    * set :drawItemColor.10:col 0
-    * op sub :drawItemColor.10:y :drawItem.10:y 15
+  845 op add :drawItemColor.10:col 0 1
+  846 jump *label163 lessThan 1 1
+  847 op sub :drawItemColor.10:y :drawItem.9:y 15
   848 label *label163
   849 label *label164
   850 label *label159
 
   853 set :updateDisplay:y :drawItemColor.10:y
   854 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
   855 set :drawItem.11:col 0
-    * set :drawItem.11:y :drawItem.10:y
+  856 set :drawItem.11:y :drawItemColor.10:y
   857 set :drawItem.11:columns 1
   858 set :drawItem.11:item @silicon
   859 set :drawItem.11:current *tmp366
   860 set :drawItem.11:target 130
-    * set :drawItemColor.11:color1 %008000FF
-    * set :drawItemColor.11:color2 %00FF00FF
   861 set :drawItemColor.11:col 0
-    * set :drawItemColor.11:y :updateDisplay:y
+  862 set :drawItemColor.11:y :drawItemColor.10:y
   863 set :drawItemColor.11:columns 1
-    * set :drawItemColor.11:item @silicon
-    * set :drawItemColor.11:current *tmp366
-    * set :drawItemColor.11:target 130
-    * op mul *tmp367 :drawItem.11:columns 176
-    * op mul *tmp368 :drawItemColor.11:columns 88
-    * op sub :drawItemColor.11:barLength 214 *tmp368
-    * op add :drawItemColor.11:textEnd 48 :drawItemColor.11:barLength
-    * op mul *tmp371 :drawItemColor.11:barLength :drawItem.11:current
-    * op div *tmp372 *tmp371 :drawItem.11:target
-    * op min :drawItemColor.11:length :drawItemColor.11:barLength *tmp372
-    * op mul *tmp374 :drawItem.11:col 176
-    * op mul *tmp375 :drawItemColor.11:col 88
-    * op add :drawItemColor.11:iconX 11 *tmp375
-    * op mul *tmp377 :drawItem.11:col 176
-    * op div *tmp378 *tmp374 2
-    * op add :drawItemColor.11:barX 22 *tmp375
-    * op mul *tmp380 :drawItem.11:col 176
-    * op div *tmp381 *tmp374 2
-    * op add :drawItemColor.11:textX :drawItemColor.11:textEnd *tmp375
+  864 op mul *tmp367 1 176
+  865 op mul *tmp368 1 88
+  866 op sub :drawItemColor.11:barLength 214 88
+  867 op add :drawItemColor.11:textEnd 48 126
+  868 op mul *tmp371 126 *tmp366
+  869 op div *tmp372 *tmp371 130
+  870 op min :drawItemColor.11:length 126 *tmp372
+  871 op mul *tmp374 0 176
+  872 op mul *tmp375 0 88
+  873 op add :drawItemColor.11:iconX 11 0
+  874 op mul *tmp377 0 176
+  875 op div *tmp378 0 2
+  876 op add :drawItemColor.11:barX 22 0
+  877 op mul *tmp380 0 176
+  878 op div *tmp381 0 2
+  879 op add :drawItemColor.11:textX 174 0
   880 draw col %[white]
-    * op add *tmp383 :drawItem.11:y 5
-    * draw image :drawItemColor.11:iconX *tmp383 :drawItem.11:item 16 0
+  881 op add *tmp383 :drawItem.10:y 5
+  882 draw image 11 *tmp383 @silicon 16 0
   883 draw col %008000FF
-    * draw rect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:length 10
+  884 draw rect 22 :drawItem.10:y :drawItemColor.11:length 10
   885 draw col %00FF00FF
-    * draw lineRect :drawItemColor.11:barX :drawItem.11:y :drawItemColor.11:barLength 10
-    * op add *tmp384 :drawItem.11:y 5
-    * op add *tmp385 *tmp383 2
-    * set :drawBold.11:x :drawItemColor.11:textX
+  886 draw lineRect 22 :drawItem.10:y 126 10
+  887 op add *tmp384 :drawItem.10:y 5
+  888 op add *tmp385 :drawItem.11:y 7
+  889 set :drawBold.11:x 174
   890 set :drawBold.11:y *tmp385
   891 set :drawBold.11:alignment @right
-    * set :drawText.32:x :drawItemColor.11:textX
-    * set :drawText.32:y *tmp385
-    * set :drawText.32:alignment @right
+  892 set :drawText.32:x 174
   893 print 130
-    * draw print :drawBold.11:x :drawBold.11:y :drawBold.11:alignment
+  894 draw print :drawItemColor.11:textX *tmp385 @right
   895 label *label168
-    * op add :drawText.33:x :drawItemColor.11:textX 1
-    * set :drawText.33:y *tmp385
-    * set :drawText.33:alignment @right
+  896 op add :drawText.33:x 174 1
   897 print 130
-    * draw print :drawText.33:x :drawBold.11:y :drawBold.11:alignment
+  898 draw print 175 *tmp385 @right
   899 label *label169
   900 label *label167
-    * op add :drawItemColor.11:col :drawItem.11:col 1
-    * jump *label170 lessThan :drawItemColor.11:col :drawItem.11:columns
-    * set :drawItemColor.11:col 0
-    * op sub :drawItemColor.11:y :drawItem.11:y 15
+  901 op add :drawItemColor.11:col 0 1
+  902 jump *label170 lessThan 1 1
+  903 op sub :drawItemColor.11:y :drawItem.10:y 15
   904 label *label170
   905 label *label171
   906 label *label166
-    * set :drawItem.11:y :drawItemColor.11:y
   907 label *label165
   908 set :updateDisplay:y :drawItemColor.11:y
   909 jump *label150 always
 
   915 set :drawItem.12:item @mega
   916 set :drawItem.12:current :drawMultiReco:progress
   917 set :drawItem.12:target 1
-    * set :drawItemColor.12:color1 %008000FF
-    * set :drawItemColor.12:color2 %00FF00FF
   918 set :drawItemColor.12:col 0
-    * set :drawItemColor.12:y :updateDisplay:y
+  919 set :drawItemColor.12:y :drawTitleRow.4:y
   920 set :drawItemColor.12:columns 1
-    * set :drawItemColor.12:item @mega
-    * set :drawItemColor.12:current :drawMultiReco:progress
-    * set :drawItemColor.12:target 1
-    * op mul *tmp391 :drawItem.12:columns 176
-    * op mul *tmp392 :drawItemColor.12:columns 88
-    * op sub :drawItemColor.12:barLength 214 *tmp392
-    * op add :drawItemColor.12:textEnd 48 :drawItemColor.12:barLength
-    * op mul *tmp395 :drawItemColor.12:barLength :drawItem.12:current
-    * op div *tmp396 *tmp395 :drawItem.12:target
-    * op min :drawItemColor.12:length :drawItemColor.12:barLength *tmp396
-    * op mul *tmp398 :drawItem.12:col 176
-    * op mul *tmp399 :drawItemColor.12:col 88
-    * op add :drawItemColor.12:iconX 11 *tmp399
-    * op mul *tmp401 :drawItem.12:col 176
-    * op div *tmp402 *tmp398 2
-    * op add :drawItemColor.12:barX 22 *tmp399
-    * op mul *tmp404 :drawItem.12:col 176
-    * op div *tmp405 *tmp398 2
-    * op add :drawItemColor.12:textX :drawItemColor.12:textEnd *tmp399
+  921 op mul *tmp391 1 176
+  922 op mul *tmp392 1 88
+  923 op sub :drawItemColor.12:barLength 214 88
+  924 op add :drawItemColor.12:textEnd 48 126
+  925 op mul *tmp395 126 :drawMultiReco:progress
+  926 op div *tmp396 *tmp395 1
+  927 op min :drawItemColor.12:length 126 *tmp396
+  928 op mul *tmp398 0 176
+  929 op mul *tmp399 0 88
+  930 op add :drawItemColor.12:iconX 11 0
+  931 op mul *tmp401 0 176
+  932 op div *tmp402 0 2
+  933 op add :drawItemColor.12:barX 22 0
+  934 op mul *tmp404 0 176
+  935 op div *tmp405 0 2
+  936 op add :drawItemColor.12:textX 174 0
   937 draw col %[white]
-    * op add *tmp407 :drawItem.12:y 5
-    * draw image :drawItemColor.12:iconX *tmp407 :drawItem.12:item 16 0
+  938 op add *tmp407 :drawTitleRow.4:y 5
+  939 draw image 11 *tmp407 @mega 16 0
   940 draw col %008000FF
-    * draw rect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:length 10
+  941 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   942 draw col %00FF00FF
-    * draw lineRect :drawItemColor.12:barX :drawItem.12:y :drawItemColor.12:barLength 10
-    * op add *tmp408 :drawItem.12:y 5
-    * op add *tmp409 *tmp407 2
-    * set :drawBold.12:x :drawItemColor.12:textX
+  943 draw lineRect 22 :drawTitleRow.4:y 126 10
+  944 op add *tmp408 :drawTitleRow.4:y 5
+  945 op add *tmp409 :drawItem.12:y 7
+  946 set :drawBold.12:x 174
   947 set :drawBold.12:y *tmp409
   948 set :drawBold.12:alignment @right
-    * set :drawText.34:x :drawItemColor.12:textX
-    * set :drawText.34:y *tmp409
-    * set :drawText.34:alignment @right
+  949 set :drawText.34:x 174
   950 print *tmp390
   951 print "%"
-    * draw print :drawBold.12:x :drawBold.12:y :drawBold.12:alignment
+  952 draw print :drawItemColor.12:textX *tmp409 @right
   953 label *label175
-    * op add :drawText.35:x :drawItemColor.12:textX 1
-    * set :drawText.35:y *tmp409
-    * set :drawText.35:alignment @right
+  954 op add :drawText.35:x 174 1
   955 print *tmp390
   956 print "%"
-    * draw print :drawText.35:x :drawBold.12:y :drawBold.12:alignment
+  957 draw print 175 *tmp409 @right
   958 label *label176
   959 label *label174
-    * op add :drawItemColor.12:col :drawItem.12:col 1
-    * jump *label177 lessThan :drawItemColor.12:col :drawItem.12:columns
-    * set :drawItemColor.12:col 0
-    * op sub :drawItemColor.12:y :drawItem.12:y 15
+  960 op add :drawItemColor.12:col 0 1
+  961 jump *label177 lessThan 1 1
+  962 op sub :drawItemColor.12:y :drawTitleRow.4:y 15
   963 label *label177
   964 label *label178
   965 label *label173
   966 set :drawItem.12:y :drawItemColor.12:y
   967 label *label172
-    * set :updateDisplay:y :drawItemColor.12:y
-    * op sub :updateDisplay:y :drawItem.12:y 30
+  968 op sub :updateDisplay:y :drawItemColor.12:y 30
   969 label *label150
   970 op sub :updateDisplay:y :updateDisplay:y 5
   971 label *label143
 
   977 draw col %[white]
   978 set :drawTitleRow.5:y :updateDisplay:y
   979 set :drawTitleRow.5:alignment @bottomLeft
-    * set :drawText.36:x 22
-    * set :drawText.36:y :updateDisplay:y
-    * set :drawText.36:alignment @bottomLeft
   980 print "Builder"
-    * draw print 22 :drawTitleRow.5:y :drawTitleRow.5:alignment
+  981 draw print 22 :updateDisplay:y @bottomLeft
   982 label *label183
-    * set :drawText.37:x 23
-    * set :drawText.37:y :updateDisplay:y
-    * set :drawText.37:alignment @bottomLeft
   983 print "Builder"
-    * draw print 23 :drawTitleRow.5:y :drawTitleRow.5:alignment
+  984 draw print 23 :updateDisplay:y @bottomLeft
   985 label *label184
   986 op sub :drawTitleRow.5:y :updateDisplay:y 15
   987 label *label182
 
   991 set :drawUnit:items 0
   992 set :drawUnit:y :drawTitleRow.5:y
   993 set :drawItem.13:col 0
-    * set :drawItem.13:y :updateDisplay:y
+  994 set :drawItem.13:y :drawTitleRow.5:y
   995 set :drawItem.13:columns 1
   996 set :drawItem.13:item @poly
   997 set :drawItem.13:current 0
   998 set :drawItem.13:target .transportTarget
-    * set :drawItemColor.13:color1 %008000FF
-    * set :drawItemColor.13:color2 %00FF00FF
   999 set :drawItemColor.13:col 0
-    * set :drawItemColor.13:y :drawUnit:y
+ 1000 set :drawItemColor.13:y :drawTitleRow.5:y
  1001 set :drawItemColor.13:columns 1
-    * set :drawItemColor.13:item :drawUnit:item
-    * set :drawItemColor.13:current :drawUnit:items
-    * set :drawItemColor.13:target :drawItem.13:target
-    * op mul *tmp417 :drawItem.13:columns 176
-    * op mul *tmp418 :drawItemColor.13:columns 88
-    * op sub :drawItemColor.13:barLength 214 *tmp418
-    * op add :drawItemColor.13:textEnd 48 :drawItemColor.13:barLength
-    * op mul *tmp421 :drawItemColor.13:barLength :drawItem.13:current
-    * op div *tmp422 *tmp421 :drawItem.13:target
-    * op min :drawItemColor.13:length :drawItemColor.13:barLength *tmp422
-    * op mul *tmp424 :drawItem.13:col 176
-    * op mul *tmp425 :drawItemColor.13:col 88
-    * op add :drawItemColor.13:iconX 11 *tmp425
-    * op mul *tmp427 :drawItem.13:col 176
-    * op div *tmp428 *tmp424 2
-    * op add :drawItemColor.13:barX 22 *tmp425
-    * op mul *tmp430 :drawItem.13:col 176
-    * op div *tmp431 *tmp424 2
-    * op add :drawItemColor.13:textX :drawItemColor.13:textEnd *tmp425
+ 1002 set :drawItemColor.13:item @poly
+ 1003 set :drawItemColor.13:current 0
+ 1004 op mul *tmp417 1 176
+ 1005 op mul *tmp418 1 88
+ 1006 op sub :drawItemColor.13:barLength 214 88
+ 1007 op add :drawItemColor.13:textEnd 48 126
+ 1008 op mul *tmp421 126 0
+ 1009 op div *tmp422 0 :drawItem.13:target
+ 1010 op min :drawItemColor.13:length 126 *tmp422
+ 1011 op mul *tmp424 0 176
+ 1012 op mul *tmp425 0 88
+ 1013 op add :drawItemColor.13:iconX 11 0
+ 1014 op mul *tmp427 0 176
+ 1015 op div *tmp428 0 2
+ 1016 op add :drawItemColor.13:barX 22 0
+ 1017 op mul *tmp430 0 176
+ 1018 op div *tmp431 0 2
+ 1019 op add :drawItemColor.13:textX 174 0
  1020 draw col %[white]
-    * op add *tmp433 :drawItem.13:y 5
-    * draw image :drawItemColor.13:iconX *tmp433 :drawItem.13:item 16 0
+ 1021 op add *tmp433 :updateDisplay:y 5
+ 1022 draw image 11 *tmp433 @poly 16 0
  1023 draw col %008000FF
-    * draw rect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:length 10
+ 1024 draw rect 22 :updateDisplay:y :drawItemColor.13:length 10
  1025 draw col %00FF00FF
-    * draw lineRect :drawItemColor.13:barX :drawItem.13:y :drawItemColor.13:barLength 10
-    * op add *tmp434 :drawItem.13:y 5
-    * op add *tmp435 *tmp433 2
-    * set :drawBold.13:x :drawItemColor.13:textX
+ 1026 draw lineRect 22 :updateDisplay:y 126 10
+ 1027 op add *tmp434 :updateDisplay:y 5
+ 1028 op add *tmp435 :drawItem.13:y 7
+ 1029 set :drawBold.13:x 174
  1030 set :drawBold.13:y *tmp435
  1031 set :drawBold.13:alignment @right
-    * set :drawText.38:x :drawItemColor.13:textX
-    * set :drawText.38:y *tmp435
-    * set :drawText.38:alignment @right
+ 1032 set :drawText.38:x 174
  1033 print .transportTarget
-    * draw print :drawBold.13:x :drawBold.13:y :drawBold.13:alignment
+ 1034 draw print :drawItemColor.13:textX *tmp435 @right
  1035 label *label191
-    * op add :drawText.39:x :drawItemColor.13:textX 1
-    * set :drawText.39:y *tmp435
-    * set :drawText.39:alignment @right
+ 1036 op add :drawText.39:x 174 1
  1037 print .transportTarget
-    * draw print :drawText.39:x :drawBold.13:y :drawBold.13:alignment
+ 1038 draw print 175 *tmp435 @right
  1039 label *label192
  1040 label *label190
-    * op add :drawItemColor.13:col :drawItem.13:col 1
-    * jump *label193 lessThan :drawItemColor.13:col :drawItem.13:columns
-    * set :drawItemColor.13:col 0
-    * op sub :drawItemColor.13:y :drawItem.13:y 15
+ 1041 op add :drawItemColor.13:col 0 1
+ 1042 jump *label193 lessThan 1 1
+ 1043 op sub :drawItemColor.13:y :updateDisplay:y 15
  1044 label *label193
  1045 label *label194
  1046 label *label189
  1047 set :drawItem.13:y :drawItemColor.13:y
  1048 label *label188
-    * set :drawUnit:y :drawItemColor.13:y
  1049 label *label187
-    * set :updateDisplay:y :drawItem.13:y
+ 1050 set :updateDisplay:y :drawItemColor.13:y
  1051 jump *label186 always
  1052 label *label185
  1053 sensor :drawBuilder:unitItem @unit @firstItem
 
  1058 set :drawUnit.1:items *tmp444
  1059 set :drawUnit.1:y :drawTitleRow.5:y
  1060 set :drawItem.14:col 0
-    * set :drawItem.14:y :updateDisplay:y
+ 1061 set :drawItem.14:y :drawTitleRow.5:y
  1062 set :drawItem.14:columns 1
  1063 set :drawItem.14:item :drawUnit.1:item
  1064 set :drawItem.14:current *tmp444
  1065 set :drawItem.14:target .transportTarget
-    * set :drawItemColor.14:color1 %008000FF
-    * set :drawItemColor.14:color2 %00FF00FF
  1066 set :drawItemColor.14:col 0
-    * set :drawItemColor.14:y :drawUnit.1:y
+ 1067 set :drawItemColor.14:y :drawTitleRow.5:y
  1068 set :drawItemColor.14:columns 1
-    * set :drawItemColor.14:item :drawUnit.1:item
-    * set :drawItemColor.14:current :drawUnit.1:items
-    * set :drawItemColor.14:target :drawItem.14:target
-    * op mul *tmp445 :drawItem.14:columns 176
-    * op mul *tmp446 :drawItemColor.14:columns 88
-    * op sub :drawItemColor.14:barLength 214 *tmp446
-    * op add :drawItemColor.14:textEnd 48 :drawItemColor.14:barLength
-    * op mul *tmp449 :drawItemColor.14:barLength :drawItem.14:current
+ 1069 set :drawItemColor.14:current *tmp444
+ 1070 op mul *tmp445 1 176
+ 1071 op mul *tmp446 1 88
+ 1072 op sub :drawItemColor.14:barLength 214 88
+ 1073 op add :drawItemColor.14:textEnd 48 126
+ 1074 op mul *tmp449 126 *tmp444
  1075 op div *tmp450 *tmp449 :drawItem.14:target
-    * op min :drawItemColor.14:length :drawItemColor.14:barLength *tmp450
-    * op mul *tmp452 :drawItem.14:col 176
-    * op mul *tmp453 :drawItemColor.14:col 88
-    * op add :drawItemColor.14:iconX 11 *tmp453
-    * op mul *tmp455 :drawItem.14:col 176
-    * op div *tmp456 *tmp452 2
-    * op add :drawItemColor.14:barX 22 *tmp453
-    * op mul *tmp458 :drawItem.14:col 176
-    * op div *tmp459 *tmp452 2
-    * op add :drawItemColor.14:textX :drawItemColor.14:textEnd *tmp453
+ 1076 op min :drawItemColor.14:length 126 *tmp450
+ 1077 op mul *tmp452 0 176
+ 1078 op mul *tmp453 0 88
+ 1079 op add :drawItemColor.14:iconX 11 0
+ 1080 op mul *tmp455 0 176
+ 1081 op div *tmp456 0 2
+ 1082 op add :drawItemColor.14:barX 22 0
+ 1083 op mul *tmp458 0 176
+ 1084 op div *tmp459 0 2
+ 1085 op add :drawItemColor.14:textX 174 0
  1086 draw col %[white]
-    * op add *tmp461 :drawItem.14:y 5
-    * draw image :drawItemColor.14:iconX *tmp461 :drawItem.14:item 16 0
+ 1087 op add *tmp461 :updateDisplay:y 5
+ 1088 draw image 11 *tmp461 :drawUnit.1:item 16 0
  1089 draw col %008000FF
-    * draw rect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:length 10
+ 1090 draw rect 22 :updateDisplay:y :drawItemColor.14:length 10
  1091 draw col %00FF00FF
-    * draw lineRect :drawItemColor.14:barX :drawItem.14:y :drawItemColor.14:barLength 10
-    * op add *tmp462 :drawItem.14:y 5
-    * op add *tmp463 *tmp461 2
-    * set :drawBold.14:x :drawItemColor.14:textX
+ 1092 draw lineRect 22 :updateDisplay:y 126 10
+ 1093 op add *tmp462 :updateDisplay:y 5
+ 1094 op add *tmp463 :drawItem.14:y 7
+ 1095 set :drawBold.14:x 174
  1096 set :drawBold.14:y *tmp463
  1097 set :drawBold.14:alignment @right
-    * set :drawText.40:x :drawItemColor.14:textX
-    * set :drawText.40:y *tmp463
-    * set :drawText.40:alignment @right
+ 1098 set :drawText.40:x 174
  1099 print .transportTarget
-    * draw print :drawBold.14:x :drawBold.14:y :drawBold.14:alignment
+ 1100 draw print :drawItemColor.14:textX *tmp463 @right
  1101 label *label199
-    * op add :drawText.41:x :drawItemColor.14:textX 1
-    * set :drawText.41:y *tmp463
-    * set :drawText.41:alignment @right
+ 1102 op add :drawText.41:x 174 1
  1103 print .transportTarget
-    * draw print :drawText.41:x :drawBold.14:y :drawBold.14:alignment
+ 1104 draw print 175 *tmp463 @right
  1105 label *label200
  1106 label *label198
-    * op add :drawItemColor.14:col :drawItem.14:col 1
-    * jump *label201 lessThan :drawItemColor.14:col :drawItem.14:columns
-    * set :drawItemColor.14:col 0
-    * op sub :drawItemColor.14:y :drawItem.14:y 15
+ 1107 op add :drawItemColor.14:col 0 1
+ 1108 jump *label201 lessThan 1 1
+ 1109 op sub :drawItemColor.14:y :updateDisplay:y 15
  1110 label *label201
  1111 label *label202
  1112 label *label197
  1113 set :drawItem.14:y :drawItemColor.14:y
  1114 label *label196
-    * set :drawUnit.1:y :drawItemColor.14:y
  1115 label *label195
-    * set :updateDisplay:y :drawItem.14:y
+ 1116 set :updateDisplay:y :drawItemColor.14:y
  1117 label *label186
  1118 label *label179
  1119 jump *label204 greaterThanEq :updateDisplay:y 20
 
  1128 draw col %[white]
  1129 set :drawTitleRow.6:y 20
  1130 set :drawTitleRow.6:alignment @bottomLeft
-    * set :drawText.42:x 22
-    * set :drawText.42:y :updateDisplay:y
-    * set :drawText.42:alignment @bottomLeft
+ 1131 set :drawText.42:y 20
  1132 print "Power"
-    * draw print 22 :drawTitleRow.6:y :drawTitleRow.6:alignment
+ 1133 draw print 22 20 @bottomLeft
  1134 label *label209
-    * set :drawText.43:x 23
-    * set :drawText.43:y :updateDisplay:y
-    * set :drawText.43:alignment @bottomLeft
+ 1135 set :drawText.43:y 20
  1136 print "Power"
-    * draw print 23 :drawTitleRow.6:y :drawTitleRow.6:alignment
+ 1137 draw print 23 20 @bottomLeft
  1138 label *label210
-    * op sub :drawTitleRow.6:y :updateDisplay:y 15
+ 1139 op sub :drawTitleRow.6:y 20 15
  1140 label *label208
-    * set :updateDisplay:y :drawTitleRow.6:y
+ 1141 set :updateDisplay:y 5
  1142 sensor :drawPower:power AJTJK-battery1 @totalPower
  1143 op mul *tmp474 :drawPower:power 100
  1144 op idiv *tmp476 *tmp474 4000
-    * set :drawItemColor.15:color1 %808000FF
-    * set :drawItemColor.15:color2 %FFFF00FF
-    * set :drawItemColor.15:col 0
-    * set :drawItemColor.15:y :drawTitleRow.6:y
-    * set :drawItemColor.15:columns 1
-    * set :drawItemColor.15:item @battery
-    * set :drawItemColor.15:current :drawPower:power
-    * set :drawItemColor.15:target 4000
-    * op mul *tmp477 1 176
-    * op div *tmp478 176 2
-    * op sub :drawItemColor.15:barLength 214 88
-    * op add :drawItemColor.15:textEnd 48 126
+ 1145 set :drawItemColor.15:y 5
  1146 op mul *tmp481 126 :drawPower:power
-    * op div *tmp482 *tmp481 4000
+ 1147 op mul *tmp482 :drawPower:power 0.0315
  1148 op min :drawItemColor.15:length 126 *tmp482
-    * op mul *tmp484 0 176
-    * op div *tmp485 0 2
-    * op add :drawItemColor.15:iconX 11 0
-    * op mul *tmp487 0 176
-    * op div *tmp488 0 2
-    * op add :drawItemColor.15:barX 22 0
-    * op mul *tmp490 0 176
-    * op div *tmp491 0 2
  1149 op add :drawItemColor.15:textX 174 0
  1150 draw col %[white]
-    * op add *tmp493 :updateDisplay:y 5
+ 1151 op add *tmp493 :drawTitleRow.6:y 5
  1152 draw image 11 *tmp493 @battery 16 0
  1153 draw col %808000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.15:length 10
+ 1154 draw rect 22 :drawTitleRow.6:y :drawItemColor.15:length 10
  1155 draw col %FFFF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp494 :updateDisplay:y 5
-    * op add *tmp495 *tmp493 2
+ 1156 draw lineRect 22 :drawTitleRow.6:y 126 10
+ 1157 op add *tmp494 :drawTitleRow.6:y 5
+ 1158 op add *tmp495 :updateDisplay:y 7
  1159 set :drawBold.15:x 174
  1160 set :drawBold.15:y *tmp495
  1161 set :drawBold.15:alignment @right
-    * set :drawText.44:x :drawItemColor.15:textX
-    * set :drawText.44:y *tmp495
-    * set :drawText.44:alignment @right
+ 1162 set :drawText.44:x 174
  1163 print *tmp476
  1164 print "%"
-    * draw print :drawBold.15:x :drawBold.15:y :drawBold.15:alignment
+ 1165 draw print 174 *tmp495 @right
  1166 label *label213
-    * op add :drawText.45:x :drawItemColor.15:textX 1
-    * set :drawText.45:y *tmp495
-    * set :drawText.45:alignment @right
+ 1167 op add :drawText.45:x 174 1
  1168 print *tmp476
  1169 print "%"
-    * draw print :drawText.45:x :drawBold.15:y :drawBold.15:alignment
+ 1170 draw print 175 *tmp495 @right
  1171 label *label214
  1172 label *label212
-    * op add :drawItemColor.15:col 0 1
  1173 jump *label215 lessThan 1 1
-    * op sub :drawItemColor.15:y :updateDisplay:y 15
+ 1174 op sub :drawItemColor.15:y :drawTitleRow.6:y 15
  1175 label *label215
  1176 label *label216
  1177 label *label211
 
  1183 label *label18
  1184 jump *label217 notEqual .page 1
  1185 read :displayStorage:tail bank2 510
-    * set :displayStorage:START 190
  1186 jump *label220 equal .pageSwitched false
  1187 read .lastTail bank2 511
  1188 draw col %[gold]
  1189 set :drawBold.16:x 11
  1190 set :drawBold.16:y 206
  1191 set :drawBold.16:alignment @left
-    * set :drawText.46:x 11
-    * set :drawText.46:y 206
-    * set :drawText.46:alignment @left
  1192 print "Resources"
-    * draw print :drawBold.16:x :drawBold.16:y :drawBold.16:alignment
+ 1193 draw print 11 206 @left
  1194 label *label223
-    * op add :drawText.47:x 11 1
-    * set :drawText.47:y 206
-    * set :drawText.47:alignment @left
  1195 print "Resources"
-    * draw print 12 :drawBold.16:y :drawBold.16:alignment
+ 1196 draw print 12 206 @left
  1197 label *label224
  1198 label *label222
  1199 draw col %[white]
 
  1286 set :drawBold.17:x 90
  1287 set :drawBold.17:y 206
  1288 set :drawBold.17:alignment @center
-    * set :drawText.48:x 90
-    * set :drawText.48:y 206
-    * set :drawText.48:alignment @center
  1289 print "Base map"
-    * draw print :drawBold.17:x :drawBold.17:y :drawBold.17:alignment
+ 1290 draw print 90 206 @center
  1291 label *label252
-    * op add :drawText.49:x 90 1
-    * set :drawText.49:y 206
-    * set :drawText.49:alignment @center
  1292 print "Base map"
-    * draw print 91 :drawBold.17:y :drawBold.17:alignment
+ 1293 draw print 91 206 @center
  1294 label *label253
  1295 label *label251
  1296 draw col %[white]
-    * set :setBaseMapScale:size 220
  1297 draw reset
  1298 draw translate 90 105
-    * op div *tmp522 220 15
-    * op div *tmp523 14.666666666666666 2
-    * op div *tmp524 220 15
-    * op div *tmp525 14.666666666666666 2
  1299 draw scale 7.333333333333333 7.333333333333333
  1300 label *label254
  1301 draw image 0 0 @core-shard 6 0
 
  1303 set :displayBaseMap:limit 5
  1304 jump *label250 always
  1305 label *label249
-    * set :setBaseMapScale.1:size 220
  1306 draw reset
  1307 draw translate 90 105
-    * op div *tmp526 220 15
-    * op div *tmp527 14.666666666666666 2
-    * op div *tmp528 220 15
-    * op div *tmp529 14.666666666666666 2
  1308 draw scale 7.333333333333333 7.333333333333333
  1309 label *label255
  1310 label *label250
 
  1459 setaddr :drawHeader*retaddr *label300 (h:*label300)
  1460 call *label4 *invalid :drawHeader*retval (m:*label300) (h:*label300)
  1461 label *label300
-    * set :setBaseMapScale.2:size 220
  1462 draw reset
  1463 draw translate 90 105
-    * op div *tmp537 220 15
-    * op div *tmp538 14.666666666666666 2
-    * op div *tmp539 220 15
-    * op div *tmp540 14.666666666666666 2
  1464 draw scale 7.333333333333333 7.333333333333333
  1465 label *label301
  1466 set :displayBaseMap:counter 0
 
  1498 label *label245
  1499 op sub :displayLog:page .page 3
  1500 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1501 op sub *tmp551 510 :displayLog:logPosition
  1502 op idiv *tmp552 *tmp551 39
  1503 op add *tmp553 *tmp552 1
 
  1512 set :drawBold.18:x 4
  1513 set :drawBold.18:y 206
  1514 set :drawBold.18:alignment @left
-    * set :drawText.50:x 4
-    * set :drawText.50:y 206
-    * set :drawText.50:alignment @left
  1515 print "Build records"
-    * draw print :drawBold.18:x :drawBold.18:y :drawBold.18:alignment
+ 1516 draw print 4 206 @left
  1517 label *label312
-    * op add :drawText.51:x 4 1
-    * set :drawText.51:y 206
-    * set :drawText.51:alignment @left
  1518 print "Build records"
-    * draw print 5 :drawBold.18:y :drawBold.18:alignment
+ 1519 draw print 5 206 @left
  1520 label *label313
  1521 label *label311
  1522 op sub *tmp562 .page 2
  1523 print *tmp562
  1524 print "/"
-    * set :drawText.52:x 172
-    * set :drawText.52:y 206
-    * set :drawText.52:alignment @right
  1525 print :displayLog:pages
  1526 draw print 172 206 @right
  1527 label *label314
 
  1531 setaddr :drawHeader*retaddr *label315 (h:*label315)
  1532 call *label4 *invalid :drawHeader*retval (m:*label315) (h:*label315)
  1533 label *label315
-    * set *tmp563 :displayLog:stop
  1534 op sub :displayLog:position .lastRecord 1
  1535 label *label316
  1536 jump *label318 lessThan :displayLog:position :displayLog:stop
  1537 read :displayLog:record bank1 :displayLog:position
  1538 op sub *tmp566 :displayLog:start :displayLog:position
  1539 op sub *tmp567 *tmp566 1
-    * set :displayRecord:record :displayLog:record
-    * set :displayRecord:index *tmp567
  1540 op idiv :displayRecord:col *tmp567 13
  1541 op mod :displayRecord:row *tmp567 13
  1542 op mul *tmp570 58 :displayRecord:col
 
  1551 label *label320
  1552 lookup block *tmp576 :displayRecord:id
  1553 label *label321
-    * set :displayRecord:icon *tmp576
  1554 op div *tmp580 :displayLog:record 1000
  1555 op idiv :displayRecord:t *tmp580 120
  1556 op idiv :displayRecord:m :displayRecord:t 60
 
  1565 print ":"
  1566 print *tmp586
  1567 draw image :displayRecord:x :displayRecord:y *tmp576 14 0
-    * op add *tmp587 :displayRecord:x 56
  1568 op add *tmp588 :displayRecord:x 44
  1569 op add *tmp589 :displayRecord:y 2
-    * set :drawText.53:x *tmp588
-    * set :drawText.53:y *tmp589
-    * set :drawText.53:alignment @right
  1570 print :displayRecord:s
  1571 draw print *tmp588 *tmp589 @right
  1572 label *label324
 
  1648 label *label335
  1649 set *tmp609 ""
  1650 label *label336
-    * set :drawHeader:zero *tmp609
  1651 set :drawBold.19:x 25
  1652 set :drawBold.19:y 71
  1653 set :drawBold.19:alignment @center
-    * set :drawText.54:x 25
-    * set :drawText.54:y 71
-    * set :drawText.54:alignment @center
  1654 print :drawHeader:m
  1655 print ":"
  1656 print *tmp609
  1657 print :drawHeader:s
-    * draw print :drawBold.19:x :drawBold.19:y :drawBold.19:alignment
+ 1658 draw print 25 71 @center
  1659 label *label338
-    * op add :drawText.55:x 25 1
-    * set :drawText.55:y 71
-    * set :drawText.55:alignment @center
  1660 print :drawHeader:m
  1661 print ":"
  1662 print *tmp609
  1663 print :drawHeader:s
-    * draw print 26 :drawBold.19:y :drawBold.19:alignment
+ 1664 draw print 26 71 @center
  1665 label *label339
  1666 label *label337
  1667 draw col %[white]
 
  1672 set :drawBold.20:x 42
  1673 set :drawBold.20:y 261
  1674 set :drawBold.20:alignment @bottom
-    * set :drawText.56:x 42
-    * set :drawText.56:y 261
-    * set :drawText.56:alignment @bottom
  1675 print "Goal"
-    * draw print :drawBold.20:x :drawBold.20:y :drawBold.20:alignment
+ 1676 draw print 42 261 @bottom
  1677 label *label341
-    * op add :drawText.57:x 42 1
-    * set :drawText.57:y 261
-    * set :drawText.57:alignment @bottom
  1678 print "Goal"
-    * draw print 43 :drawBold.20:y :drawBold.20:alignment
+ 1679 draw print 43 261 @bottom
  1680 label *label342
  1681 label *label340
  1682 draw col %[white]
 
  1771 print *tmp637
  1772 print "."
  1773 print *tmp638
-    * set :drawText.58:x 174
-    * set :drawText.58:y 272
-    * set :drawText.58:alignment @topRight
  1774 print ")"
  1775 draw print 174 272 @topRight
  1776 label *label371
 
  1779 set :drawHeader:x.1 174
  1780 op log10 *tmp642 :drawHeader:count.1
  1781 op floor :drawHeader:len *tmp642
-    * set :drawText.59:x 174
-    * set :drawText.59:y 255
-    * set :drawText.59:alignment @topRight
  1782 print "x"
  1783 print :drawHeader:count.1
-    * draw print :drawHeader:x.1 255 @topRight
+ 1784 draw print 174 255 @topRight
  1785 label *label374
-    * op sub *tmp644 174 20
  1786 op mul *tmp645 7 :drawHeader:len
  1787 op sub *tmp646 154 *tmp645
  1788 draw image *tmp646 246 @scrap 12 0
 
  1790 set :drawHeader:x.1 124
  1791 op log10 *tmp648 :drawHeader:count.1
  1792 op floor :drawHeader:len *tmp648
-    * set :drawText.60:x 124
-    * set :drawText.60:y 255
-    * set :drawText.60:alignment @topRight
  1793 print "x"
  1794 print :drawHeader:count.1
-    * draw print :drawHeader:x.1 255 @topRight
+ 1795 draw print 124 255 @topRight
  1796 label *label375
-    * op sub *tmp650 124 20
  1797 op mul *tmp651 7 :drawHeader:len
  1798 op sub *tmp652 104 *tmp651
  1799 draw image *tmp652 246 @sand 12 0
 
  1805 set :drawHeader:x.2 174
  1806 op log10 *tmp656 :drawHeader:count.2
  1807 op floor :drawHeader:len.1 *tmp656
-    * set :drawText.61:x 174
-    * set :drawText.61:y 255
-    * set :drawText.61:alignment @topRight
  1808 print "x"
  1809 print :drawHeader:count.2
-    * draw print :drawHeader:x.2 255 @topRight
+ 1810 draw print 174 255 @topRight
  1811 label *label378
-    * op sub *tmp658 174 20
  1812 op mul *tmp659 7 :drawHeader:len.1
  1813 op sub *tmp660 154 *tmp659
  1814 draw image *tmp660 246 @titanium 12 0
 
  1819 set :drawHeader:x.3 124
  1820 op log10 *tmp663 :drawHeader:count.3
  1821 op floor :drawHeader:len.2 *tmp663
-    * set :drawText.62:x 124
-    * set :drawText.62:y 255
-    * set :drawText.62:alignment @topRight
  1822 print "x"
  1823 print :drawHeader:count.3
-    * draw print :drawHeader:x.3 255 @topRight
+ 1824 draw print 124 255 @topRight
  1825 label *label381
-    * op sub *tmp665 124 20
  1826 op mul *tmp666 7 :drawHeader:len.2
  1827 op sub *tmp667 104 *tmp666
  1828 draw image *tmp667 246 @thorium 12 0
 
  1831 label *label373
  1832 set :drawHeader:x.4 174
  1833 draw col %[white]
-    * set :drawUnitCount:type @poly
  1834 set :drawUnitCount:count .polys
  1835 jump *label383 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp670 174 20
  1836 draw image 154 227 @poly 12 0
-    * set :drawText.63:x 174
-    * set :drawText.63:y 229
-    * set :drawText.63:alignment @right
  1837 print "x"
  1838 print :drawUnitCount:count
-    * draw print :drawHeader:x.4 229 @right
+ 1839 draw print 174 229 @right
  1840 label *label385
  1841 op sub :drawHeader:x.4 174 30
  1842 label *label383
  1843 label *label384
  1844 label *label382
-    * set :drawUnitCount.1:type @mono
  1845 set :drawUnitCount.1:count .monos
  1846 jump *label387 lessThanEq :drawUnitCount.1:count 0
  1847 op sub *tmp673 :drawHeader:x.4 20
  1848 draw image *tmp673 227 @mono 12 0
-    * set :drawText.64:x :drawHeader:x.4
-    * set :drawText.64:y 229
-    * set :drawText.64:alignment @right
  1849 print "x"
  1850 print :drawUnitCount.1:count
  1851 draw print :drawHeader:x.4 229 @right
 
  1854 label *label387
  1855 label *label388
  1856 label *label386
-    * set :drawUnitCount.2:type @flare
  1857 set :drawUnitCount.2:count .flares
  1858 jump *label391 lessThanEq :drawUnitCount.2:count 0
  1859 op sub *tmp676 :drawHeader:x.4 20
  1860 draw image *tmp676 227 @flare 12 0
-    * set :drawText.65:x :drawHeader:x.4
-    * set :drawText.65:y 229
-    * set :drawText.65:alignment @right
  1861 print "x"
  1862 print :drawUnitCount.2:count
  1863 draw print :drawHeader:x.4 229 @right
 
  1871 end
  1872 label *label5
  1873 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 1
  1874 set *tmp677 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp678 :unpackCfg2:cfg *tmp677
+ 1875 read *tmp678 :drawBlock:cfg 1
  1876 op sub *tmp679 *tmp678 74
  1877 lookup block :unpackCfg:type *tmp679
  1878 set *tmp681 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp682 :unpackCfg2:cfg *tmp681
+ 1879 read *tmp682 :drawBlock:cfg 2
  1880 op sub *tmp683 *tmp682 74
  1881 op div :unpackCfg:x *tmp683 2
  1882 set *tmp685 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp686 :unpackCfg2:cfg *tmp685
+ 1883 read *tmp686 :drawBlock:cfg 3
  1884 op sub *tmp687 *tmp686 74
  1885 op div :unpackCfg:y *tmp687 2
  1886 set *tmp689 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp690 :unpackCfg2:cfg *tmp689
+ 1887 read *tmp690 :drawBlock:cfg 4
  1888 op sub :unpackCfg:rotation *tmp690 74
  1889 set *tmp692 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp693 :unpackCfg2:cfg *tmp692
+ 1890 read *tmp693 :drawBlock:cfg 5
  1891 op sub :unpackCfg:ind *tmp693 74
  1892 sensor :unpackCfg:size :unpackCfg:type @size
  1893 label *label396
 
  1898 set :unpackCfg2:size :unpackCfg:size
  1899 set :unpackCfg2:index :unpackCfg:ind
  1900 label *label395
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
-    * op shl *tmp703 1 :unpackCfg2:index
+ 1901 op shl *tmp703 1 :unpackCfg:ind
  1902 op and :drawBlock:built .blocksBuilt *tmp703
  1903 op add *tmp705 :drawBlock:built .pageSwitched
  1904 jump *label397 notEqual *tmp705 0
 
  1912 set *tmp708 %80ff8080
  1913 label *label400
  1914 draw col *tmp708
-    * op mul *tmp709 2 :unpackCfg2:x
-    * op mul *tmp710 2 :unpackCfg2:y
-    * op mul *tmp711 2 :unpackCfg2:size
-    * op mul *tmp712 90 :unpackCfg2:rotation
-    * draw image *tmp709 *tmp710 :unpackCfg2:type *tmp711 *tmp712
+ 1915 op mul *tmp709 2 :unpackCfg:x
+ 1916 op mul *tmp710 2 :unpackCfg:y
+ 1917 op mul *tmp711 2 :unpackCfg:size
+ 1918 op mul *tmp712 90 :unpackCfg:rotation
+ 1919 draw image *tmp709 *tmp710 :unpackCfg:type *tmp711 *tmp712
  1920 label *label394
  1921 return :drawBlock*retaddr
  1922 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-460 instructions):
 
    70 op equal *tmp76 .nextBlock @ore-titanium
    71 op or *tmp77 *tmp75 *tmp76
    72 jump *label34 equal *tmp77 false
-    * set :drawTitleRow:y 201
-    * set :drawTitleRow:alignment @bottomLeft
-    * set :drawText:y 201
    73 print "Locating ore..."
    74 draw print 22 201 @bottomLeft
    75 label *label37
-    * set :drawText.1:y 201
    76 print "Locating ore..."
    77 draw print 23 201 @bottomLeft
    78 label *label38
    79 op sub :drawTitleRow:y 201 15
    80 label *label36
-    * set :updateDisplay:y 186
-    * set :drawItem:col 0
    81 set :drawItem:y 186
-    * set :drawItem:columns 1
    82 set :drawItem:item .nextBlock
    83 read :drawItem:current processor3 ".mapProgress"
    84 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:col 0
-    * set :drawItemColor:y :drawTitleRow:y
-    * set :drawItemColor:columns 1
-    * op mul *tmp79 1 176
-    * op mul *tmp80 1 88
-    * op sub :drawItemColor:barLength 214 88
-    * op add :drawItemColor:textEnd 48 126
+   85 set :drawItemColor:y 186
    86 op mul *tmp83 126 :drawItem:current
    87 op div *tmp84 *tmp83 :drawItem:target
    88 op min :drawItemColor:length 126 *tmp84
-    * op mul *tmp86 0 176
-    * op mul *tmp87 0 88
-    * op add :drawItemColor:iconX 11 0
-    * op mul *tmp89 0 176
-    * op div *tmp90 0 2
-    * op add :drawItemColor:barX 22 0
-    * op mul *tmp92 0 176
-    * op div *tmp93 0 2
    89 op add :drawItemColor:textX 174 0
    90 draw col %[white]
-    * op add *tmp95 :drawTitleRow:y 5
-    * draw image 11 *tmp95 :drawItem:item 16 0
+   91 op add *tmp95 186 5
+   92 draw image 11 191 :drawItem:item 16 0
    93 draw col %008000FF
-    * draw rect 22 :drawTitleRow:y :drawItemColor:length 10
+   94 draw rect 22 186 :drawItemColor:length 10
    95 draw col %00FF00FF
-    * draw lineRect 22 :drawTitleRow:y 126 10
-    * op add *tmp96 :drawTitleRow:y 5
-    * op add *tmp97 :drawItem:y 7
-    * set :drawBold:x 174
-    * set :drawBold:y *tmp97
-    * set :drawBold:alignment @right
-    * set :drawText.2:x 174
+   96 draw lineRect 22 186 126 10
+   97 op add *tmp96 186 5
+   98 op add *tmp97 186 7
+   99 set :drawBold:y 193
   100 print "x"
   101 read *tmp98 processor3 ".mapSpots"
   102 print *tmp98
-    * draw print :drawItemColor:textX *tmp97 @right
+  103 draw print 174 193 @right
   104 label *label42
-    * op add :drawText.3:x 174 1
   105 print "x"
   106 read *tmp100 processor3 ".mapSpots"
   107 print *tmp100
-    * draw print 175 *tmp97 @right
+  108 draw print 175 193 @right
   109 label *label43
   110 label *label41
-    * op add :drawItemColor:col 0 1
   111 jump *label44 lessThan 1 1
-    * op sub :drawItemColor:y :drawTitleRow:y 15
+  112 op sub :drawItemColor:y 186 15
   113 label *label44
   114 label *label45
   115 label *label40
-    * set :drawItem:y :drawItemColor:y
+  116 set :drawItem:y 171
   117 label *label39
-    * op sub :updateDisplay:y :drawItemColor:y 35
+  118 op sub :updateDisplay:y 171 35
   119 jump *label35 always
   120 label *label34
   121 jump *label46 equal .nextBlock null
   122 set :drawMaterials:count .totalTargets
-    * set :drawTitleRow.1:y 201
-    * set :drawTitleRow.1:alignment @bottomLeft
-    * set :drawText.4:y 201
   123 print "Materials"
   124 draw print 22 201 @bottomLeft
   125 label *label49
-    * set :drawText.5:y 201
   126 print "Materials"
   127 draw print 23 201 @bottomLeft
   128 label *label50
-    * op sub :drawTitleRow.1:y 201 15
   129 label *label48
   130 set :updateDisplay:y 186
   131 set :drawMaterials:columns 1
 
   168 sensor *tmp110 .core :drawMaterials:item
   169 set :drawItem.1:col :drawMaterials:col
   170 set :drawItem.1:y :updateDisplay:y
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:item
-    * set :drawItem.1:current *tmp110
-    * set :drawItem.1:target :drawMaterials:target
-    * set :drawItemColor.1:col :drawMaterials:col
   171 set :drawItemColor.1:y :updateDisplay:y
-    * set :drawItemColor.1:columns 1
-    * op mul *tmp111 1 176
-    * op mul *tmp112 :drawMaterials:columns 88
-    * op sub :drawItemColor.1:barLength 214 *tmp112
-    * op add :drawItemColor.1:textEnd 48 :drawItemColor.1:barLength
-    * op mul *tmp115 :drawItemColor.1:barLength *tmp110
+  172 op mul *tmp112 1 88
+  173 op sub :drawItemColor.1:barLength 214 88
+  174 op add :drawItemColor.1:textEnd 48 126
+  175 op mul *tmp115 126 *tmp110
   176 op div *tmp116 *tmp115 :drawMaterials:target
-    * op min :drawItemColor.1:length :drawItemColor.1:barLength *tmp116
-    * op mul *tmp118 :drawMaterials:col 176
+  177 op min :drawItemColor.1:length 126 *tmp116
   178 op mul *tmp119 :drawMaterials:col 88
   179 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp121 :drawMaterials:col 176
-    * op mul *tmp122 :drawItem.1:col 88
+  180 op mul *tmp122 :drawMaterials:col 88
   181 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp124 :drawMaterials:col 176
-    * op mul *tmp125 :drawItem.1:col 88
-    * op add :drawItemColor.1:textX :drawItemColor.1:textEnd *tmp119
+  182 op mul *tmp125 :drawMaterials:col 88
+  183 op add :drawItemColor.1:textX 174 *tmp119
   184 draw col %[white]
   185 op add *tmp127 :updateDisplay:y 5
   186 draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0
   187 draw col %008000FF
   188 draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10
   189 draw col %00FF00FF
-    * draw lineRect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:barLength 10
-    * op add *tmp128 :updateDisplay:y 5
-    * op add *tmp129 :drawItem.1:y 7
-    * set :drawBold.1:x :drawItemColor.1:textX
-    * set :drawBold.1:y *tmp129
-    * set :drawBold.1:alignment @right
+  190 draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10
+  191 op add *tmp129 :updateDisplay:y 7
   192 print :drawMaterials:target
   193 draw print :drawItemColor.1:textX *tmp129 @right
   194 label *label68
 
   236 label *label77
   237 label *label78
   238 draw col %[white]
-    * set :drawTitleRow.2:y :updateDisplay:y
-    * set :drawTitleRow.2:alignment @bottomLeft
   239 print "Air Factory"
   240 draw print 22 :updateDisplay:y @bottomLeft
   241 label *label80
 
   244 label *label81
   245 op sub :drawTitleRow.2:y :updateDisplay:y 15
   246 label *label79
-    * set :updateDisplay:y :drawTitleRow.2:y
   247 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   248 jump *label82 notEqual :drawAirFactory:progress 0
   249 jump *label84 notEqual .nextFactory @flare
   250 sensor *tmp146 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.2:col 0
   251 set :drawItem.2:y :drawTitleRow.2:y
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item @silicon
-    * set :drawItem.2:current *tmp146
-    * set :drawItem.2:target 15
-    * set :drawItemColor.2:col 0
-    * set :drawItemColor.2:y :drawTitleRow.2:y
-    * set :drawItemColor.2:columns 1
-    * op mul *tmp147 1 176
-    * op mul *tmp148 1 88
-    * op sub :drawItemColor.2:barLength 214 88
-    * op add :drawItemColor.2:textEnd 48 126
   252 op mul *tmp151 126 *tmp146
-    * op div *tmp152 *tmp151 15
+  253 op mul *tmp152 *tmp146 8.4
   254 op min :drawItemColor.2:length 126 *tmp152
-    * op mul *tmp154 0 176
-    * op mul *tmp155 0 88
-    * op add :drawItemColor.2:iconX 11 0
-    * op mul *tmp157 0 176
-    * op div *tmp158 0 2
-    * op add :drawItemColor.2:barX 22 0
-    * op mul *tmp160 0 176
-    * op div *tmp161 0 2
   255 op add :drawItemColor.2:textX 174 0
   256 draw col %[white]
   257 op add *tmp163 :drawTitleRow.2:y 5
 
   260 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   261 draw col %00FF00FF
   262 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp164 :drawTitleRow.2:y 5
-    * op add *tmp165 :drawItem.2:y 7
-    * set :drawBold.2:x 174
-    * set :drawBold.2:y *tmp165
-    * set :drawBold.2:alignment @right
-    * set :drawText.10:x 174
+  263 op add *tmp165 :drawTitleRow.2:y 7
   264 print 15
-    * draw print :drawItemColor.2:textX *tmp165 @right
+  265 draw print 174 *tmp165 @right
   266 label *label89
-    * op add :drawText.11:x 174 1
   267 print 15
   268 draw print 175 *tmp165 @right
   269 label *label90
   270 label *label88
-    * op add :drawItemColor.2:col 0 1
   271 jump *label91 lessThan 1 1
   272 op sub :drawItemColor.2:y :drawTitleRow.2:y 15
   273 label *label91
   274 label *label92
   275 label *label87
-    * set :drawItem.2:y :drawItemColor.2:y
   276 label *label86
-    * op sub :updateDisplay:y :drawItemColor.2:y 15
+  277 op sub :updateDisplay:y :drawTitleRow.2:y 30
   278 jump *label85 always
   279 label *label84
   280 sensor *tmp169 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:col 0
   281 set :drawItem.3:y :drawTitleRow.2:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item @lead
-    * set :drawItem.3:current *tmp169
-    * set :drawItem.3:target 15
-    * set :drawItemColor.3:col 0
-    * set :drawItemColor.3:y :drawTitleRow.2:y
-    * set :drawItemColor.3:columns 1
-    * op mul *tmp170 1 176
-    * op mul *tmp171 1 88
-    * op sub :drawItemColor.3:barLength 214 88
-    * op add :drawItemColor.3:textEnd 48 126
   282 op mul *tmp174 126 *tmp169
-    * op div *tmp175 *tmp174 15
+  283 op mul *tmp175 *tmp169 8.4
   284 op min :drawItemColor.3:length 126 *tmp175
-    * op mul *tmp177 0 176
-    * op mul *tmp178 0 88
-    * op add :drawItemColor.3:iconX 11 0
-    * op mul *tmp180 0 176
-    * op div *tmp181 0 2
-    * op add :drawItemColor.3:barX 22 0
-    * op mul *tmp183 0 176
-    * op div *tmp184 0 2
   285 op add :drawItemColor.3:textX 174 0
   286 draw col %[white]
   287 op add *tmp186 :drawTitleRow.2:y 5
 
   290 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   291 draw col %00FF00FF
   292 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp187 :drawTitleRow.2:y 5
-    * op add *tmp188 :drawItem.3:y 7
-    * set :drawBold.3:x 174
-    * set :drawBold.3:y *tmp188
-    * set :drawBold.3:alignment @right
-    * set :drawText.12:x 174
+  293 op add *tmp188 :drawTitleRow.2:y 7
   294 print 15
-    * draw print :drawItemColor.3:textX *tmp188 @right
+  295 draw print 174 *tmp188 @right
   296 label *label96
-    * op add :drawText.13:x 174 1
   297 print 15
   298 draw print 175 *tmp188 @right
   299 label *label97
   300 label *label95
-    * op add :drawItemColor.3:col 0 1
   301 jump *label98 lessThan 1 1
   302 op sub :drawItemColor.3:y :drawTitleRow.2:y 15
   303 label *label98
 
   305 label *label94
   306 set :drawItem.3:y :drawItemColor.3:y
   307 label *label93
-    * set :updateDisplay:y :drawItemColor.3:y
   308 sensor *tmp192 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.4:col 0
   309 set :drawItem.4:y :drawItemColor.3:y
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @silicon
-    * set :drawItem.4:current *tmp192
-    * set :drawItem.4:target 30
-    * set :drawItemColor.4:col 0
-    * set :drawItemColor.4:y :drawItemColor.3:y
-    * set :drawItemColor.4:columns 1
-    * op mul *tmp193 1 176
-    * op mul *tmp194 1 88
-    * op sub :drawItemColor.4:barLength 214 88
-    * op add :drawItemColor.4:textEnd 48 126
   310 op mul *tmp197 126 *tmp192
-    * op div *tmp198 *tmp197 30
+  311 op mul *tmp198 *tmp192 4.2
   312 op min :drawItemColor.4:length 126 *tmp198
-    * op mul *tmp200 0 176
-    * op mul *tmp201 0 88
-    * op add :drawItemColor.4:iconX 11 0
-    * op mul *tmp203 0 176
-    * op div *tmp204 0 2
-    * op add :drawItemColor.4:barX 22 0
-    * op mul *tmp206 0 176
-    * op div *tmp207 0 2
   313 op add :drawItemColor.4:textX 174 0
   314 draw col %[white]
-    * op add *tmp209 :drawItem.3:y 5
+  315 op add *tmp209 :drawItemColor.3:y 5
   316 draw image 11 *tmp209 @silicon 16 0
   317 draw col %008000FF
-    * draw rect 22 :drawItem.3:y :drawItemColor.4:length 10
+  318 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   319 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.3:y 126 10
-    * op add *tmp210 :drawItem.3:y 5
-    * op add *tmp211 :drawItem.4:y 7
-    * set :drawBold.4:x 174
-    * set :drawBold.4:y *tmp211
-    * set :drawBold.4:alignment @right
-    * set :drawText.14:x 174
+  320 draw lineRect 22 :drawItemColor.3:y 126 10
+  321 op add *tmp210 :drawItemColor.3:y 5
+  322 op add *tmp211 :drawItemColor.3:y 7
   323 print 30
-    * draw print :drawItemColor.4:textX *tmp211 @right
+  324 draw print 174 *tmp211 @right
   325 label *label103
-    * op add :drawText.15:x 174 1
   326 print 30
   327 draw print 175 *tmp211 @right
   328 label *label104
   329 label *label102
-    * op add :drawItemColor.4:col 0 1
   330 jump *label105 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawItem.3:y 15
+  331 op sub :drawItemColor.4:y :drawItemColor.3:y 15
   332 label *label105
   333 label *label106
   334 label *label101
 
   338 jump *label83 always
   339 label *label82
   340 op idiv *tmp216 :drawAirFactory:progress 0.01
-    * set :drawItem.5:col 0
   341 set :drawItem.5:y :drawTitleRow.2:y
-    * set :drawItem.5:columns 1
   342 set :drawItem.5:item .nextFactory
-    * set :drawItem.5:current :drawAirFactory:progress
-    * set :drawItem.5:target 1
-    * set :drawItemColor.5:col 0
-    * set :drawItemColor.5:y :drawTitleRow.2:y
-    * set :drawItemColor.5:columns 1
-    * op mul *tmp217 1 176
-    * op mul *tmp218 1 88
-    * op sub :drawItemColor.5:barLength 214 88
-    * op add :drawItemColor.5:textEnd 48 126
   343 op mul *tmp221 126 :drawAirFactory:progress
-    * op div *tmp222 *tmp221 1
+  344 op mul *tmp222 :drawAirFactory:progress 126
   345 op min :drawItemColor.5:length 126 *tmp222
-    * op mul *tmp224 0 176
-    * op mul *tmp225 0 88
-    * op add :drawItemColor.5:iconX 11 0
-    * op mul *tmp227 0 176
-    * op div *tmp228 0 2
-    * op add :drawItemColor.5:barX 22 0
-    * op mul *tmp230 0 176
-    * op div *tmp231 0 2
   346 op add :drawItemColor.5:textX 174 0
   347 draw col %[white]
   348 op add *tmp233 :drawTitleRow.2:y 5
 
   351 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   352 draw col %00FF00FF
   353 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp234 :drawTitleRow.2:y 5
-    * op add *tmp235 :drawItem.5:y 7
-    * set :drawBold.5:x 174
-    * set :drawBold.5:y *tmp235
-    * set :drawBold.5:alignment @right
-    * set :drawText.16:x 174
+  354 op add *tmp235 :drawTitleRow.2:y 7
   355 print *tmp216
   356 print "%"
-    * draw print :drawItemColor.5:textX *tmp235 @right
+  357 draw print 174 *tmp235 @right
   358 label *label110
-    * op add :drawText.17:x 174 1
   359 print *tmp216
   360 print "%"
   361 draw print 175 *tmp235 @right
   362 label *label111
   363 label *label109
-    * op add :drawItemColor.5:col 0 1
   364 jump *label112 lessThan 1 1
   365 op sub :drawItemColor.5:y :drawTitleRow.2:y 15
   366 label *label112
   367 label *label113
   368 label *label108
-    * set :drawItem.5:y :drawItemColor.5:y
   369 label *label107
-    * op sub :updateDisplay:y :drawItemColor.5:y 15
+  370 op sub :updateDisplay:y :drawTitleRow.2:y 30
   371 label *label83
   372 op sub :updateDisplay:y :updateDisplay:y 5
   373 label *label76
 
   376 label *label115
   377 label *label116
   378 draw col %[white]
-    * set :drawTitleRow.3:y :updateDisplay:y
-    * set :drawTitleRow.3:alignment @bottomLeft
   379 print "Reconstructor"
   380 draw print 22 :updateDisplay:y @bottomLeft
   381 label *label118
 
   384 label *label119
   385 op sub :drawTitleRow.3:y :updateDisplay:y 15
   386 label *label117
-    * set :updateDisplay:y :drawTitleRow.3:y
   387 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   388 jump *label120 notEqual :drawAddReco:progress 0
   389 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
-    * set :drawItem.6:col 0
   390 set :drawItem.6:y :drawTitleRow.3:y
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @graphite
-    * set :drawItem.6:current *tmp244
-    * set :drawItem.6:target 40
-    * set :drawItemColor.6:col 0
-    * set :drawItemColor.6:y :drawTitleRow.3:y
-    * set :drawItemColor.6:columns 1
-    * op mul *tmp245 1 176
-    * op mul *tmp246 1 88
-    * op sub :drawItemColor.6:barLength 214 88
-    * op add :drawItemColor.6:textEnd 48 126
   391 op mul *tmp249 126 *tmp244
-    * op div *tmp250 *tmp249 40
+  392 op mul *tmp250 *tmp244 3.1500000000000004
   393 op min :drawItemColor.6:length 126 *tmp250
-    * op mul *tmp252 0 176
-    * op mul *tmp253 0 88
-    * op add :drawItemColor.6:iconX 11 0
-    * op mul *tmp255 0 176
-    * op div *tmp256 0 2
-    * op add :drawItemColor.6:barX 22 0
-    * op mul *tmp258 0 176
-    * op div *tmp259 0 2
   394 op add :drawItemColor.6:textX 174 0
   395 draw col %[white]
   396 op add *tmp261 :drawTitleRow.3:y 5
 
   399 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   400 draw col %00FF00FF
   401 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp262 :drawTitleRow.3:y 5
-    * op add *tmp263 :drawItem.6:y 7
-    * set :drawBold.6:x 174
-    * set :drawBold.6:y *tmp263
-    * set :drawBold.6:alignment @right
-    * set :drawText.20:x 174
+  402 op add *tmp263 :drawTitleRow.3:y 7
   403 print 40
-    * draw print :drawItemColor.6:textX *tmp263 @right
+  404 draw print 174 *tmp263 @right
   405 label *label125
-    * op add :drawText.21:x 174 1
   406 print 40
   407 draw print 175 *tmp263 @right
   408 label *label126
   409 label *label124
-    * op add :drawItemColor.6:col 0 1
   410 jump *label127 lessThan 1 1
   411 op sub :drawItemColor.6:y :drawTitleRow.3:y 15
   412 label *label127
 
   414 label *label123
   415 set :drawItem.6:y :drawItemColor.6:y
   416 label *label122
-    * set :updateDisplay:y :drawItemColor.6:y
   417 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
-    * set :drawItem.7:col 0
   418 set :drawItem.7:y :drawItemColor.6:y
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item @silicon
-    * set :drawItem.7:current *tmp267
-    * set :drawItem.7:target 40
-    * set :drawItemColor.7:col 0
-    * set :drawItemColor.7:y :drawItemColor.6:y
-    * set :drawItemColor.7:columns 1
-    * op mul *tmp268 1 176
-    * op mul *tmp269 1 88
-    * op sub :drawItemColor.7:barLength 214 88
-    * op add :drawItemColor.7:textEnd 48 126
   419 op mul *tmp272 126 *tmp267
-    * op div *tmp273 *tmp272 40
+  420 op mul *tmp273 *tmp267 3.1500000000000004
   421 op min :drawItemColor.7:length 126 *tmp273
-    * op mul *tmp275 0 176
-    * op mul *tmp276 0 88
-    * op add :drawItemColor.7:iconX 11 0
-    * op mul *tmp278 0 176
-    * op div *tmp279 0 2
-    * op add :drawItemColor.7:barX 22 0
-    * op mul *tmp281 0 176
-    * op div *tmp282 0 2
   422 op add :drawItemColor.7:textX 174 0
   423 draw col %[white]
-    * op add *tmp284 :drawItem.6:y 5
+  424 op add *tmp284 :drawItemColor.6:y 5
   425 draw image 11 *tmp284 @silicon 16 0
   426 draw col %008000FF
-    * draw rect 22 :drawItem.6:y :drawItemColor.7:length 10
+  427 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   428 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.6:y 126 10
-    * op add *tmp285 :drawItem.6:y 5
-    * op add *tmp286 :drawItem.7:y 7
-    * set :drawBold.7:x 174
-    * set :drawBold.7:y *tmp286
-    * set :drawBold.7:alignment @right
-    * set :drawText.22:x 174
+  429 draw lineRect 22 :drawItemColor.6:y 126 10
+  430 op add *tmp285 :drawItemColor.6:y 5
+  431 op add *tmp286 :drawItemColor.6:y 7
   432 print 40
-    * draw print :drawItemColor.7:textX *tmp286 @right
+  433 draw print 174 *tmp286 @right
   434 label *label132
-    * op add :drawText.23:x 174 1
   435 print 40
   436 draw print 175 *tmp286 @right
   437 label *label133
   438 label *label131
-    * op add :drawItemColor.7:col 0 1
   439 jump *label134 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawItem.6:y 15
+  440 op sub :drawItemColor.7:y :drawItemColor.6:y 15
   441 label *label134
   442 label *label135
   443 label *label130
 
   446 jump *label121 always
   447 label *label120
   448 op idiv *tmp291 :drawAddReco:progress 0.01
-    * set :drawItem.8:col 0
   449 set :drawItem.8:y :drawTitleRow.3:y
-    * set :drawItem.8:columns 1
-    * set :drawItem.8:item @poly
-    * set :drawItem.8:current :drawAddReco:progress
-    * set :drawItem.8:target 1
-    * set :drawItemColor.8:col 0
-    * set :drawItemColor.8:y :drawTitleRow.3:y
-    * set :drawItemColor.8:columns 1
-    * op mul *tmp292 1 176
-    * op mul *tmp293 1 88
-    * op sub :drawItemColor.8:barLength 214 88
-    * op add :drawItemColor.8:textEnd 48 126
   450 op mul *tmp296 126 :drawAddReco:progress
-    * op div *tmp297 *tmp296 1
+  451 op mul *tmp297 :drawAddReco:progress 126
   452 op min :drawItemColor.8:length 126 *tmp297
-    * op mul *tmp299 0 176
-    * op mul *tmp300 0 88
-    * op add :drawItemColor.8:iconX 11 0
-    * op mul *tmp302 0 176
-    * op div *tmp303 0 2
-    * op add :drawItemColor.8:barX 22 0
-    * op mul *tmp305 0 176
-    * op div *tmp306 0 2
   453 op add :drawItemColor.8:textX 174 0
   454 draw col %[white]
   455 op add *tmp308 :drawTitleRow.3:y 5
 
   458 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   459 draw col %00FF00FF
   460 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp309 :drawTitleRow.3:y 5
-    * op add *tmp310 :drawItem.8:y 7
-    * set :drawBold.8:x 174
-    * set :drawBold.8:y *tmp310
-    * set :drawBold.8:alignment @right
-    * set :drawText.24:x 174
+  461 op add *tmp310 :drawTitleRow.3:y 7
   462 print *tmp291
   463 print "%"
-    * draw print :drawItemColor.8:textX *tmp310 @right
+  464 draw print 174 *tmp310 @right
   465 label *label139
-    * op add :drawText.25:x 174 1
   466 print *tmp291
   467 print "%"
   468 draw print 175 *tmp310 @right
   469 label *label140
   470 label *label138
-    * op add :drawItemColor.8:col 0 1
   471 jump *label141 lessThan 1 1
   472 op sub :drawItemColor.8:y :drawTitleRow.3:y 15
   473 label *label141
   474 label *label142
   475 label *label137
-    * set :drawItem.8:y :drawItemColor.8:y
   476 label *label136
-    * op sub :updateDisplay:y :drawItemColor.8:y 15
+  477 op sub :updateDisplay:y :drawTitleRow.3:y 30
   478 label *label121
   479 op sub :updateDisplay:y :updateDisplay:y 5
   480 label *label114
 
   484 label *label145
   485 draw col %[white]
   486 op min :updateDisplay:y :updateDisplay:y 142
-    * set :drawTitleRow.4:y :updateDisplay:y
-    * set :drawTitleRow.4:alignment @bottomLeft
   487 print "Reconstructor"
   488 draw print 22 :updateDisplay:y @bottomLeft
   489 label *label147
 
   492 label *label148
   493 op sub :drawTitleRow.4:y :updateDisplay:y 15
   494 label *label146
-    * set :updateDisplay:y :drawTitleRow.4:y
   495 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   496 jump *label149 notEqual :drawMultiReco:progress 0
   497 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * set :drawItem.9:col 0
   498 set :drawItem.9:y :drawTitleRow.4:y
-    * set :drawItem.9:columns 1
-    * set :drawItem.9:item @metaglass
-    * set :drawItem.9:current *tmp320
-    * set :drawItem.9:target 40
-    * set :drawItemColor.9:col 0
-    * set :drawItemColor.9:y :drawTitleRow.4:y
-    * set :drawItemColor.9:columns 1
-    * op mul *tmp321 1 176
-    * op mul *tmp322 1 88
-    * op sub :drawItemColor.9:barLength 214 88
-    * op add :drawItemColor.9:textEnd 48 126
   499 op mul *tmp325 126 *tmp320
-    * op div *tmp326 *tmp325 40
+  500 op mul *tmp326 *tmp320 3.1500000000000004
   501 op min :drawItemColor.9:length 126 *tmp326
-    * op mul *tmp328 0 176
-    * op mul *tmp329 0 88
-    * op add :drawItemColor.9:iconX 11 0
-    * op mul *tmp331 0 176
-    * op div *tmp332 0 2
-    * op add :drawItemColor.9:barX 22 0
-    * op mul *tmp334 0 176
-    * op div *tmp335 0 2
   502 op add :drawItemColor.9:textX 174 0
   503 draw col %[white]
   504 op add *tmp337 :drawTitleRow.4:y 5
 
   507 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   508 draw col %00FF00FF
   509 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp338 :drawTitleRow.4:y 5
-    * op add *tmp339 :drawItem.9:y 7
-    * set :drawBold.9:x 174
-    * set :drawBold.9:y *tmp339
-    * set :drawBold.9:alignment @right
-    * set :drawText.28:x 174
+  510 op add *tmp339 :drawTitleRow.4:y 7
   511 print 40
-    * draw print :drawItemColor.9:textX *tmp339 @right
+  512 draw print 174 *tmp339 @right
   513 label *label154
-    * op add :drawText.29:x 174 1
   514 print 40
   515 draw print 175 *tmp339 @right
   516 label *label155
   517 label *label153
-    * op add :drawItemColor.9:col 0 1
   518 jump *label156 lessThan 1 1
   519 op sub :drawItemColor.9:y :drawTitleRow.4:y 15
   520 label *label156
 
   522 label *label152
   523 set :drawItem.9:y :drawItemColor.9:y
   524 label *label151
-    * set :updateDisplay:y :drawItemColor.9:y
   525 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
-    * set :drawItem.10:col 0
   526 set :drawItem.10:y :drawItemColor.9:y
-    * set :drawItem.10:columns 1
-    * set :drawItem.10:item @titanium
-    * set :drawItem.10:current *tmp343
-    * set :drawItem.10:target 80
-    * set :drawItemColor.10:col 0
-    * set :drawItemColor.10:y :drawItemColor.9:y
-    * set :drawItemColor.10:columns 1
-    * op mul *tmp344 1 176
-    * op mul *tmp345 1 88
-    * op sub :drawItemColor.10:barLength 214 88
-    * op add :drawItemColor.10:textEnd 48 126
   527 op mul *tmp348 126 *tmp343
-    * op div *tmp349 *tmp348 80
+  528 op div *tmp349 *tmp343 0.6349206349206349
   529 op min :drawItemColor.10:length 126 *tmp349
-    * op mul *tmp351 0 176
-    * op mul *tmp352 0 88
-    * op add :drawItemColor.10:iconX 11 0
-    * op mul *tmp354 0 176
-    * op div *tmp355 0 2
-    * op add :drawItemColor.10:barX 22 0
-    * op mul *tmp357 0 176
-    * op div *tmp358 0 2
   530 op add :drawItemColor.10:textX 174 0
   531 draw col %[white]
-    * op add *tmp360 :drawItem.9:y 5
+  532 op add *tmp360 :drawItemColor.9:y 5
   533 draw image 11 *tmp360 @titanium 16 0
   534 draw col %008000FF
-    * draw rect 22 :drawItem.9:y :drawItemColor.10:length 10
+  535 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   536 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.9:y 126 10
-    * op add *tmp361 :drawItem.9:y 5
-    * op add *tmp362 :drawItem.10:y 7
-    * set :drawBold.10:x 174
-    * set :drawBold.10:y *tmp362
-    * set :drawBold.10:alignment @right
-    * set :drawText.30:x 174
+  537 draw lineRect 22 :drawItemColor.9:y 126 10
+  538 op add *tmp361 :drawItemColor.9:y 5
+  539 op add *tmp362 :drawItemColor.9:y 7
   540 print 80
-    * draw print :drawItemColor.10:textX *tmp362 @right
+  541 draw print 174 *tmp362 @right
   542 label *label161
-    * op add :drawText.31:x 174 1
   543 print 80
   544 draw print 175 *tmp362 @right
   545 label *label162
   546 label *label160
-    * op add :drawItemColor.10:col 0 1
   547 jump *label163 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawItem.9:y 15
+  548 op sub :drawItemColor.10:y :drawItemColor.9:y 15
   549 label *label163
   550 label *label164
   551 label *label159
   552 set :drawItem.10:y :drawItemColor.10:y
   553 label *label158
-    * set :updateDisplay:y :drawItemColor.10:y
   554 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
-    * set :drawItem.11:col 0
   555 set :drawItem.11:y :drawItemColor.10:y
-    * set :drawItem.11:columns 1
-    * set :drawItem.11:item @silicon
-    * set :drawItem.11:current *tmp366
-    * set :drawItem.11:target 130
-    * set :drawItemColor.11:col 0
-    * set :drawItemColor.11:y :drawItemColor.10:y
-    * set :drawItemColor.11:columns 1
-    * op mul *tmp367 1 176
-    * op mul *tmp368 1 88
-    * op sub :drawItemColor.11:barLength 214 88
-    * op add :drawItemColor.11:textEnd 48 126
   556 op mul *tmp371 126 *tmp366
-    * op div *tmp372 *tmp371 130
+  557 op div *tmp372 *tmp366 1.0317460317460319
   558 op min :drawItemColor.11:length 126 *tmp372
-    * op mul *tmp374 0 176
-    * op mul *tmp375 0 88
-    * op add :drawItemColor.11:iconX 11 0
-    * op mul *tmp377 0 176
-    * op div *tmp378 0 2
-    * op add :drawItemColor.11:barX 22 0
-    * op mul *tmp380 0 176
-    * op div *tmp381 0 2
   559 op add :drawItemColor.11:textX 174 0
   560 draw col %[white]
-    * op add *tmp383 :drawItem.10:y 5
+  561 op add *tmp383 :drawItemColor.10:y 5
   562 draw image 11 *tmp383 @silicon 16 0
   563 draw col %008000FF
-    * draw rect 22 :drawItem.10:y :drawItemColor.11:length 10
+  564 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   565 draw col %00FF00FF
-    * draw lineRect 22 :drawItem.10:y 126 10
-    * op add *tmp384 :drawItem.10:y 5
-    * op add *tmp385 :drawItem.11:y 7
-    * set :drawBold.11:x 174
-    * set :drawBold.11:y *tmp385
-    * set :drawBold.11:alignment @right
-    * set :drawText.32:x 174
+  566 draw lineRect 22 :drawItemColor.10:y 126 10
+  567 op add *tmp384 :drawItemColor.10:y 5
+  568 op add *tmp385 :drawItemColor.10:y 7
   569 print 130
-    * draw print :drawItemColor.11:textX *tmp385 @right
+  570 draw print 174 *tmp385 @right
   571 label *label168
-    * op add :drawText.33:x 174 1
   572 print 130
   573 draw print 175 *tmp385 @right
   574 label *label169
   575 label *label167
-    * op add :drawItemColor.11:col 0 1
   576 jump *label170 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItem.10:y 15
+  577 op sub :drawItemColor.11:y :drawItemColor.10:y 15
   578 label *label170
   579 label *label171
   580 label *label166
 
   583 jump *label150 always
   584 label *label149
   585 op idiv *tmp390 :drawMultiReco:progress 0.01
-    * set :drawItem.12:col 0
   586 set :drawItem.12:y :drawTitleRow.4:y
-    * set :drawItem.12:columns 1
-    * set :drawItem.12:item @mega
-    * set :drawItem.12:current :drawMultiReco:progress
-    * set :drawItem.12:target 1
-    * set :drawItemColor.12:col 0
-    * set :drawItemColor.12:y :drawTitleRow.4:y
-    * set :drawItemColor.12:columns 1
-    * op mul *tmp391 1 176
-    * op mul *tmp392 1 88
-    * op sub :drawItemColor.12:barLength 214 88
-    * op add :drawItemColor.12:textEnd 48 126
   587 op mul *tmp395 126 :drawMultiReco:progress
-    * op div *tmp396 *tmp395 1
+  588 op mul *tmp396 :drawMultiReco:progress 126
   589 op min :drawItemColor.12:length 126 *tmp396
-    * op mul *tmp398 0 176
-    * op mul *tmp399 0 88
-    * op add :drawItemColor.12:iconX 11 0
-    * op mul *tmp401 0 176
-    * op div *tmp402 0 2
-    * op add :drawItemColor.12:barX 22 0
-    * op mul *tmp404 0 176
-    * op div *tmp405 0 2
   590 op add :drawItemColor.12:textX 174 0
   591 draw col %[white]
   592 op add *tmp407 :drawTitleRow.4:y 5
 
   595 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   596 draw col %00FF00FF
   597 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp408 :drawTitleRow.4:y 5
-    * op add *tmp409 :drawItem.12:y 7
-    * set :drawBold.12:x 174
-    * set :drawBold.12:y *tmp409
-    * set :drawBold.12:alignment @right
-    * set :drawText.34:x 174
+  598 op add *tmp409 :drawTitleRow.4:y 7
   599 print *tmp390
   600 print "%"
-    * draw print :drawItemColor.12:textX *tmp409 @right
+  601 draw print 174 *tmp409 @right
   602 label *label175
-    * op add :drawText.35:x 174 1
   603 print *tmp390
   604 print "%"
   605 draw print 175 *tmp409 @right
   606 label *label176
   607 label *label174
-    * op add :drawItemColor.12:col 0 1
   608 jump *label177 lessThan 1 1
   609 op sub :drawItemColor.12:y :drawTitleRow.4:y 15
   610 label *label177
   611 label *label178
   612 label *label173
-    * set :drawItem.12:y :drawItemColor.12:y
   613 label *label172
-    * op sub :updateDisplay:y :drawItemColor.12:y 30
+  614 op sub :updateDisplay:y :drawTitleRow.4:y 45
   615 label *label150
   616 op sub :updateDisplay:y :updateDisplay:y 5
   617 label *label143
 
   621 label *label180
   622 label *label181
   623 draw col %[white]
-    * set :drawTitleRow.5:y :updateDisplay:y
-    * set :drawTitleRow.5:alignment @bottomLeft
   624 print "Builder"
   625 draw print 22 :updateDisplay:y @bottomLeft
   626 label *label183
 
   631 label *label182
   632 set :updateDisplay:y :drawTitleRow.5:y
   633 jump *label185 notEqual .transportItem null
-    * set :drawUnit:item @poly
-    * set :drawUnit:items 0
-    * set :drawUnit:y :drawTitleRow.5:y
-    * set :drawItem.13:col 0
   634 set :drawItem.13:y :drawTitleRow.5:y
-    * set :drawItem.13:columns 1
-    * set :drawItem.13:item @poly
-    * set :drawItem.13:current 0
   635 set :drawItem.13:target .transportTarget
-    * set :drawItemColor.13:col 0
-    * set :drawItemColor.13:y :drawTitleRow.5:y
-    * set :drawItemColor.13:columns 1
-    * set :drawItemColor.13:item @poly
-    * set :drawItemColor.13:current 0
-    * op mul *tmp417 1 176
-    * op mul *tmp418 1 88
-    * op sub :drawItemColor.13:barLength 214 88
-    * op add :drawItemColor.13:textEnd 48 126
-    * op mul *tmp421 126 0
   636 op div *tmp422 0 :drawItem.13:target
   637 op min :drawItemColor.13:length 126 *tmp422
-    * op mul *tmp424 0 176
-    * op mul *tmp425 0 88
-    * op add :drawItemColor.13:iconX 11 0
-    * op mul *tmp427 0 176
-    * op div *tmp428 0 2
-    * op add :drawItemColor.13:barX 22 0
-    * op mul *tmp430 0 176
-    * op div *tmp431 0 2
   638 op add :drawItemColor.13:textX 174 0
   639 draw col %[white]
-    * op add *tmp433 :updateDisplay:y 5
+  640 op add *tmp433 :drawTitleRow.5:y 5
   641 draw image 11 *tmp433 @poly 16 0
   642 draw col %008000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.13:length 10
+  643 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   644 draw col %00FF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp434 :updateDisplay:y 5
-    * op add *tmp435 :drawItem.13:y 7
-    * set :drawBold.13:x 174
-    * set :drawBold.13:y *tmp435
-    * set :drawBold.13:alignment @right
-    * set :drawText.38:x 174
+  645 draw lineRect 22 :drawTitleRow.5:y 126 10
+  646 op add *tmp434 :drawTitleRow.5:y 5
+  647 op add *tmp435 :drawTitleRow.5:y 7
   648 print .transportTarget
-    * draw print :drawItemColor.13:textX *tmp435 @right
+  649 draw print 174 *tmp435 @right
   650 label *label191
-    * op add :drawText.39:x 174 1
   651 print .transportTarget
   652 draw print 175 *tmp435 @right
   653 label *label192
   654 label *label190
-    * op add :drawItemColor.13:col 0 1
   655 jump *label193 lessThan 1 1
-    * op sub :drawItemColor.13:y :updateDisplay:y 15
+  656 op sub :drawItemColor.13:y :drawTitleRow.5:y 15
   657 label *label193
   658 label *label194
   659 label *label189
-    * set :drawItem.13:y :drawItemColor.13:y
   660 label *label188
   661 label *label187
   662 set :updateDisplay:y :drawItemColor.13:y
 
   667 op equal *tmp443 :drawBuilder:unitItem .transportItem
   668 op mul *tmp444 *tmp442 *tmp443
   669 set :drawUnit.1:item .transportItem
-    * set :drawUnit.1:items *tmp444
-    * set :drawUnit.1:y :drawTitleRow.5:y
-    * set :drawItem.14:col 0
   670 set :drawItem.14:y :drawTitleRow.5:y
-    * set :drawItem.14:columns 1
-    * set :drawItem.14:item :drawUnit.1:item
-    * set :drawItem.14:current *tmp444
   671 set :drawItem.14:target .transportTarget
-    * set :drawItemColor.14:col 0
-    * set :drawItemColor.14:y :drawTitleRow.5:y
-    * set :drawItemColor.14:columns 1
-    * set :drawItemColor.14:current *tmp444
-    * op mul *tmp445 1 176
-    * op mul *tmp446 1 88
-    * op sub :drawItemColor.14:barLength 214 88
-    * op add :drawItemColor.14:textEnd 48 126
   672 op mul *tmp449 126 *tmp444
   673 op div *tmp450 *tmp449 :drawItem.14:target
   674 op min :drawItemColor.14:length 126 *tmp450
-    * op mul *tmp452 0 176
-    * op mul *tmp453 0 88
-    * op add :drawItemColor.14:iconX 11 0
-    * op mul *tmp455 0 176
-    * op div *tmp456 0 2
-    * op add :drawItemColor.14:barX 22 0
-    * op mul *tmp458 0 176
-    * op div *tmp459 0 2
   675 op add :drawItemColor.14:textX 174 0
   676 draw col %[white]
-    * op add *tmp461 :updateDisplay:y 5
+  677 op add *tmp461 :drawTitleRow.5:y 5
   678 draw image 11 *tmp461 :drawUnit.1:item 16 0
   679 draw col %008000FF
-    * draw rect 22 :updateDisplay:y :drawItemColor.14:length 10
+  680 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   681 draw col %00FF00FF
-    * draw lineRect 22 :updateDisplay:y 126 10
-    * op add *tmp462 :updateDisplay:y 5
-    * op add *tmp463 :drawItem.14:y 7
-    * set :drawBold.14:x 174
-    * set :drawBold.14:y *tmp463
-    * set :drawBold.14:alignment @right
-    * set :drawText.40:x 174
+  682 draw lineRect 22 :drawTitleRow.5:y 126 10
+  683 op add *tmp462 :drawTitleRow.5:y 5
+  684 op add *tmp463 :drawTitleRow.5:y 7
   685 print .transportTarget
-    * draw print :drawItemColor.14:textX *tmp463 @right
+  686 draw print 174 *tmp463 @right
   687 label *label199
-    * op add :drawText.41:x 174 1
   688 print .transportTarget
   689 draw print 175 *tmp463 @right
   690 label *label200
   691 label *label198
-    * op add :drawItemColor.14:col 0 1
   692 jump *label201 lessThan 1 1
-    * op sub :drawItemColor.14:y :updateDisplay:y 15
+  693 op sub :drawItemColor.14:y :drawTitleRow.5:y 15
   694 label *label201
   695 label *label202
   696 label *label197
-    * set :drawItem.14:y :drawItemColor.14:y
   697 label *label196
   698 label *label195
   699 set :updateDisplay:y :drawItemColor.14:y
 
   707 jump *label203 always
   708 label *label206
   709 label *label207
-    * set :updateDisplay:y 20
   710 draw col %[white]
-    * set :drawTitleRow.6:y 20
-    * set :drawTitleRow.6:alignment @bottomLeft
-    * set :drawText.42:y 20
   711 print "Power"
   712 draw print 22 20 @bottomLeft
   713 label *label209
-    * set :drawText.43:y 20
   714 print "Power"
   715 draw print 23 20 @bottomLeft
   716 label *label210
 
   720 sensor :drawPower:power AJTJK-battery1 @totalPower
   721 op mul *tmp474 :drawPower:power 100
   722 op idiv *tmp476 *tmp474 4000
-    * set :drawItemColor.15:y 5
-    * op mul *tmp481 126 :drawPower:power
   723 op mul *tmp482 :drawPower:power 0.0315
   724 op min :drawItemColor.15:length 126 *tmp482
-    * op add :drawItemColor.15:textX 174 0
   725 draw col %[white]
-    * op add *tmp493 :drawTitleRow.6:y 5
-    * draw image 11 *tmp493 @battery 16 0
+  726 op add *tmp493 5 5
+  727 draw image 11 10 @battery 16 0
   728 draw col %808000FF
-    * draw rect 22 :drawTitleRow.6:y :drawItemColor.15:length 10
+  729 draw rect 22 5 :drawItemColor.15:length 10
   730 draw col %FFFF00FF
-    * draw lineRect 22 :drawTitleRow.6:y 126 10
-    * op add *tmp494 :drawTitleRow.6:y 5
-    * op add *tmp495 :updateDisplay:y 7
-    * set :drawBold.15:x 174
-    * set :drawBold.15:y *tmp495
-    * set :drawBold.15:alignment @right
-    * set :drawText.44:x 174
+  731 draw lineRect 22 5 126 10
+  732 op add *tmp494 5 5
+  733 op add *tmp495 5 7
+  734 set :drawBold.15:y 12
   735 print *tmp476
   736 print "%"
-    * draw print 174 *tmp495 @right
+  737 draw print 174 12 @right
   738 label *label213
-    * op add :drawText.45:x 174 1
   739 print *tmp476
   740 print "%"
-    * draw print 175 *tmp495 @right
+  741 draw print 175 12 @right
   742 label *label214
   743 label *label212
   744 jump *label215 lessThan 1 1
-    * op sub :drawItemColor.15:y :drawTitleRow.6:y 15
+  745 op sub :drawItemColor.15:y 5 15
   746 label *label215
   747 label *label216
   748 label *label211
 
   757 jump *label220 equal .pageSwitched false
   758 read .lastTail bank2 511
   759 draw col %[gold]
-    * set :drawBold.16:x 11
-    * set :drawBold.16:y 206
-    * set :drawBold.16:alignment @left
   760 print "Resources"
   761 draw print 11 206 @left
   762 label *label223
 
   851 set :displayBaseMap:limit 0
   852 jump *label249 equal .pageSwitched false
   853 draw col %[gold]
-    * set :drawBold.17:x 90
-    * set :drawBold.17:y 206
-    * set :drawBold.17:alignment @center
   854 print "Base map"
   855 draw print 90 206 @center
   856 label *label252
 
  1074 op max :displayLog:stop :displayLog:logPosition *tmp558
  1075 jump *label309 equal .pageSwitched false
  1076 draw col %[gold]
-    * set :drawBold.18:x 4
-    * set :drawBold.18:y 206
-    * set :drawBold.18:alignment @left
  1077 print "Build records"
  1078 draw print 4 206 @left
  1079 label *label312
 
  1210 label *label335
  1211 set *tmp609 ""
  1212 label *label336
-    * set :drawBold.19:x 25
-    * set :drawBold.19:y 71
-    * set :drawBold.19:alignment @center
  1213 print :drawHeader:m
  1214 print ":"
  1215 print *tmp609
 
  1228 jump *label334 always
  1229 label *label333
  1230 draw col %[gold]
-    * set :drawBold.20:x 42
-    * set :drawBold.20:y 261
-    * set :drawBold.20:alignment @bottom
  1231 print "Goal"
  1232 draw print 42 261 @bottom
  1233 label *label341
 
  1332 label *label371
  1333 jump *label372 equal A¨SSJh-container30 null
  1334 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
-    * set :drawHeader:x.1 174
  1335 op log10 *tmp642 :drawHeader:count.1
  1336 op floor :drawHeader:len *tmp642
  1337 print "x"
 
  1342 op sub *tmp646 154 *tmp645
  1343 draw image *tmp646 246 @scrap 12 0
  1344 sensor :drawHeader:count.1 A¨SSJh-container30 @sand
-    * set :drawHeader:x.1 124
  1345 op log10 *tmp648 :drawHeader:count.1
  1346 op floor :drawHeader:len *tmp648
  1347 print "x"
 
  1356 jump *label376 equal .titaniumDrill false
  1357 sensor *tmp654 .titaniumDrill @titanium
  1358 op max :drawHeader:count.2 .titaniumDrillCount *tmp654
-    * set :drawHeader:x.2 174
  1359 op log10 *tmp656 :drawHeader:count.2
  1360 op floor :drawHeader:len.1 *tmp656
  1361 print "x"
 
  1369 label *label377
  1370 jump *label379 equal .thoriumContainer false
  1371 sensor :drawHeader:count.3 .thoriumContainer @thorium
-    * set :drawHeader:x.3 124
  1372 op log10 *tmp663 :drawHeader:count.3
  1373 op floor :drawHeader:len.2 *tmp663
  1374 print "x"
 
  1422 return :drawHeader*retaddr
  1423 end
  1424 label *label5
-    * set :unpackCfg2:cfg :drawBlock:cfg
-    * set *tmp677 1
  1425 read *tmp678 :drawBlock:cfg 1
  1426 op sub *tmp679 *tmp678 74
  1427 lookup block :unpackCfg:type *tmp679
-    * set *tmp681 2
  1428 read *tmp682 :drawBlock:cfg 2
  1429 op sub *tmp683 *tmp682 74
  1430 op div :unpackCfg:x *tmp683 2
-    * set *tmp685 3
  1431 read *tmp686 :drawBlock:cfg 3
  1432 op sub *tmp687 *tmp686 74
  1433 op div :unpackCfg:y *tmp687 2
-    * set *tmp689 4
  1434 read *tmp690 :drawBlock:cfg 4
  1435 op sub :unpackCfg:rotation *tmp690 74
-    * set *tmp692 5
  1436 read *tmp693 :drawBlock:cfg 5
  1437 op sub :unpackCfg:ind *tmp693 74
  1438 sensor :unpackCfg:size :unpackCfg:type @size
  1439 label *label396
-    * set :unpackCfg2:type :unpackCfg:type
-    * set :unpackCfg2:x :unpackCfg:x
-    * set :unpackCfg2:y :unpackCfg:y
-    * set :unpackCfg2:rotation :unpackCfg:rotation
-    * set :unpackCfg2:size :unpackCfg:size
-    * set :unpackCfg2:index :unpackCfg:ind
  1440 label *label395
  1441 op shl *tmp703 1 :unpackCfg:ind
  1442 op and :drawBlock:built .blocksBuilt *tmp703

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-66 instructions):
 
    76 print "Locating ore..."
    77 draw print 23 201 @bottomLeft
    78 label *label38
-    * op sub :drawTitleRow:y 201 15
    79 label *label36
-    * set :drawItem:y 186
    80 set :drawItem:item .nextBlock
    81 read :drawItem:current processor3 ".mapProgress"
    82 read :drawItem:target processor3 ".mapTotal"
-    * set :drawItemColor:y 186
    83 op mul *tmp83 126 :drawItem:current
    84 op div *tmp84 *tmp83 :drawItem:target
    85 op min :drawItemColor:length 126 *tmp84
-    * op add :drawItemColor:textX 174 0
    86 draw col %[white]
-    * op add *tmp95 186 5
    87 draw image 11 191 :drawItem:item 16 0
    88 draw col %008000FF
    89 draw rect 22 186 :drawItemColor:length 10
    90 draw col %00FF00FF
    91 draw lineRect 22 186 126 10
-    * op add *tmp96 186 5
-    * op add *tmp97 186 7
-    * set :drawBold:y 193
    92 print "x"
    93 read *tmp98 processor3 ".mapSpots"
    94 print *tmp98
 
   101 label *label43
   102 label *label41
   103 jump *label44 lessThan 1 1
-    * op sub :drawItemColor:y 186 15
   104 label *label44
   105 label *label45
   106 label *label40
-    * set :drawItem:y 171
   107 label *label39
   108 op sub :updateDisplay:y 171 35
   109 jump *label35 always
 
   118 label *label50
   119 label *label48
   120 set :updateDisplay:y 186
-    * set :drawMaterials:columns 1
   121 jump *label51 equal :drawMaterials:count false
   122 set :drawMaterials:item @copper
   123 set :drawMaterials:target .targetCopper
 
   155 label *label53
   156 jump *label63 lessThanEq :drawMaterials:target 0
   157 sensor *tmp110 .core :drawMaterials:item
-    * set :drawItem.1:col :drawMaterials:col
-    * set :drawItem.1:y :updateDisplay:y
   158 set :drawItemColor.1:y :updateDisplay:y
-    * op mul *tmp112 1 88
-    * op sub :drawItemColor.1:barLength 214 88
-    * op add :drawItemColor.1:textEnd 48 126
   159 op mul *tmp115 126 *tmp110
   160 op div *tmp116 *tmp115 :drawMaterials:target
   161 op min :drawItemColor.1:length 126 *tmp116
   162 op mul *tmp119 :drawMaterials:col 88
   163 op add :drawItemColor.1:iconX 11 *tmp119
-    * op mul *tmp122 :drawMaterials:col 88
   164 op add :drawItemColor.1:barX 22 *tmp119
-    * op mul *tmp125 :drawMaterials:col 88
   165 op add :drawItemColor.1:textX 174 *tmp119
   166 draw col %[white]
   167 op add *tmp127 :updateDisplay:y 5
 
   174 print :drawMaterials:target
   175 draw print :drawItemColor.1:textX *tmp129 @right
   176 label *label68
-    * op add :drawText.7:x :drawItemColor.1:textX 1
+  177 op add :drawText.7:x *tmp119 175
   178 print :drawMaterials:target
   179 draw print :drawText.7:x *tmp129 @right
   180 label *label69
 
   230 jump *label82 notEqual :drawAirFactory:progress 0
   231 jump *label84 notEqual .nextFactory @flare
   232 sensor *tmp146 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.2:y :drawTitleRow.2:y
-    * op mul *tmp151 126 *tmp146
   233 op mul *tmp152 *tmp146 8.4
   234 op min :drawItemColor.2:length 126 *tmp152
-    * op add :drawItemColor.2:textX 174 0
   235 draw col %[white]
-    * op add *tmp163 :drawTitleRow.2:y 5
+  236 op sub *tmp163 :updateDisplay:y 10
   237 draw image 11 *tmp163 @silicon 16 0
   238 draw col %008000FF
   239 draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10
   240 draw col %00FF00FF
   241 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp165 :drawTitleRow.2:y 7
+  242 op sub *tmp165 :updateDisplay:y 8
   243 print 15
   244 draw print 174 *tmp165 @right
   245 label *label89
 
   248 label *label90
   249 label *label88
   250 jump *label91 lessThan 1 1
-    * op sub :drawItemColor.2:y :drawTitleRow.2:y 15
+  251 op sub :drawItemColor.2:y :updateDisplay:y 30
   252 label *label91
   253 label *label92
   254 label *label87
 
   257 jump *label85 always
   258 label *label84
   259 sensor *tmp169 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:y :drawTitleRow.2:y
-    * op mul *tmp174 126 *tmp169
   260 op mul *tmp175 *tmp169 8.4
   261 op min :drawItemColor.3:length 126 *tmp175
-    * op add :drawItemColor.3:textX 174 0
   262 draw col %[white]
-    * op add *tmp186 :drawTitleRow.2:y 5
+  263 op sub *tmp186 :updateDisplay:y 10
   264 draw image 11 *tmp186 @lead 16 0
   265 draw col %008000FF
   266 draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10
   267 draw col %00FF00FF
   268 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp188 :drawTitleRow.2:y 7
+  269 op sub *tmp188 :updateDisplay:y 8
   270 print 15
   271 draw print 174 *tmp188 @right
   272 label *label96
 
   275 label *label97
   276 label *label95
   277 jump *label98 lessThan 1 1
-    * op sub :drawItemColor.3:y :drawTitleRow.2:y 15
+  278 op sub :drawItemColor.3:y :updateDisplay:y 30
   279 label *label98
   280 label *label99
   281 label *label94
-    * set :drawItem.3:y :drawItemColor.3:y
   282 label *label93
   283 sensor *tmp192 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.4:y :drawItemColor.3:y
-    * op mul *tmp197 126 *tmp192
   284 op mul *tmp198 *tmp192 4.2
   285 op min :drawItemColor.4:length 126 *tmp198
-    * op add :drawItemColor.4:textX 174 0
   286 draw col %[white]
-    * op add *tmp209 :drawItemColor.3:y 5
+  287 op sub *tmp209 :drawTitleRow.2:y 10
   288 draw image 11 *tmp209 @silicon 16 0
   289 draw col %008000FF
   290 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   291 draw col %00FF00FF
   292 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op add *tmp210 :drawItemColor.3:y 5
-    * op add *tmp211 :drawItemColor.3:y 7
+  293 op sub *tmp210 :drawTitleRow.2:y 10
+  294 op sub *tmp211 :drawTitleRow.2:y 8
   295 print 30
   296 draw print 174 *tmp211 @right
   297 label *label103
 
   300 label *label104
   301 label *label102
   302 jump *label105 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawItemColor.3:y 15
+  303 op sub :drawItemColor.4:y :drawTitleRow.2:y 30
   304 label *label105
   305 label *label106
   306 label *label101
 
   310 jump *label83 always
   311 label *label82
   312 op idiv *tmp216 :drawAirFactory:progress 0.01
-    * set :drawItem.5:y :drawTitleRow.2:y
   313 set :drawItem.5:item .nextFactory
   314 op mul *tmp221 126 :drawAirFactory:progress
   315 op mul *tmp222 :drawAirFactory:progress 126
-    * op min :drawItemColor.5:length 126 *tmp222
-    * op add :drawItemColor.5:textX 174 0
+  316 op min :drawItemColor.5:length 126 *tmp221
   317 draw col %[white]
-    * op add *tmp233 :drawTitleRow.2:y 5
+  318 op sub *tmp233 :updateDisplay:y 10
   319 draw image 11 *tmp233 :drawItem.5:item 16 0
   320 draw col %008000FF
   321 draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10
   322 draw col %00FF00FF
   323 draw lineRect 22 :drawTitleRow.2:y 126 10
-    * op add *tmp235 :drawTitleRow.2:y 7
+  324 op sub *tmp235 :updateDisplay:y 8
   325 print *tmp216
   326 print "%"
   327 draw print 174 *tmp235 @right
 
   332 label *label111
   333 label *label109
   334 jump *label112 lessThan 1 1
-    * op sub :drawItemColor.5:y :drawTitleRow.2:y 15
+  335 op sub :drawItemColor.5:y :updateDisplay:y 30
   336 label *label112
   337 label *label113
   338 label *label108
 
   357 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   358 jump *label120 notEqual :drawAddReco:progress 0
   359 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
-    * set :drawItem.6:y :drawTitleRow.3:y
-    * op mul *tmp249 126 *tmp244
   360 op mul *tmp250 *tmp244 3.1500000000000004
   361 op min :drawItemColor.6:length 126 *tmp250
-    * op add :drawItemColor.6:textX 174 0
   362 draw col %[white]
-    * op add *tmp261 :drawTitleRow.3:y 5
+  363 op sub *tmp261 :updateDisplay:y 10
   364 draw image 11 *tmp261 @graphite 16 0
   365 draw col %008000FF
   366 draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10
   367 draw col %00FF00FF
   368 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp263 :drawTitleRow.3:y 7
+  369 op sub *tmp263 :updateDisplay:y 8
   370 print 40
   371 draw print 174 *tmp263 @right
   372 label *label125
 
   375 label *label126
   376 label *label124
   377 jump *label127 lessThan 1 1
-    * op sub :drawItemColor.6:y :drawTitleRow.3:y 15
+  378 op sub :drawItemColor.6:y :updateDisplay:y 30
   379 label *label127
   380 label *label128
   381 label *label123
-    * set :drawItem.6:y :drawItemColor.6:y
   382 label *label122
   383 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
-    * set :drawItem.7:y :drawItemColor.6:y
-    * op mul *tmp272 126 *tmp267
   384 op mul *tmp273 *tmp267 3.1500000000000004
   385 op min :drawItemColor.7:length 126 *tmp273
-    * op add :drawItemColor.7:textX 174 0
   386 draw col %[white]
-    * op add *tmp284 :drawItemColor.6:y 5
+  387 op sub *tmp284 :drawTitleRow.3:y 10
   388 draw image 11 *tmp284 @silicon 16 0
   389 draw col %008000FF
   390 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   391 draw col %00FF00FF
   392 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op add *tmp285 :drawItemColor.6:y 5
-    * op add *tmp286 :drawItemColor.6:y 7
+  393 op sub *tmp285 :drawTitleRow.3:y 10
+  394 op sub *tmp286 :drawTitleRow.3:y 8
   395 print 40
   396 draw print 174 *tmp286 @right
   397 label *label132
 
   400 label *label133
   401 label *label131
   402 jump *label134 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawItemColor.6:y 15
+  403 op sub :drawItemColor.7:y :drawTitleRow.3:y 30
   404 label *label134
   405 label *label135
   406 label *label130
 
   409 jump *label121 always
   410 label *label120
   411 op idiv *tmp291 :drawAddReco:progress 0.01
-    * set :drawItem.8:y :drawTitleRow.3:y
   412 op mul *tmp296 126 :drawAddReco:progress
   413 op mul *tmp297 :drawAddReco:progress 126
-    * op min :drawItemColor.8:length 126 *tmp297
-    * op add :drawItemColor.8:textX 174 0
+  414 op min :drawItemColor.8:length 126 *tmp296
   415 draw col %[white]
-    * op add *tmp308 :drawTitleRow.3:y 5
+  416 op sub *tmp308 :updateDisplay:y 10
   417 draw image 11 *tmp308 @poly 16 0
   418 draw col %008000FF
   419 draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10
   420 draw col %00FF00FF
   421 draw lineRect 22 :drawTitleRow.3:y 126 10
-    * op add *tmp310 :drawTitleRow.3:y 7
+  422 op sub *tmp310 :updateDisplay:y 8
   423 print *tmp291
   424 print "%"
   425 draw print 174 *tmp310 @right
 
   430 label *label140
   431 label *label138
   432 jump *label141 lessThan 1 1
-    * op sub :drawItemColor.8:y :drawTitleRow.3:y 15
+  433 op sub :drawItemColor.8:y :updateDisplay:y 30
   434 label *label141
   435 label *label142
   436 label *label137
 
   456 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   457 jump *label149 notEqual :drawMultiReco:progress 0
   458 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * set :drawItem.9:y :drawTitleRow.4:y
-    * op mul *tmp325 126 *tmp320
   459 op mul *tmp326 *tmp320 3.1500000000000004
   460 op min :drawItemColor.9:length 126 *tmp326
-    * op add :drawItemColor.9:textX 174 0
   461 draw col %[white]
-    * op add *tmp337 :drawTitleRow.4:y 5
+  462 op sub *tmp337 :updateDisplay:y 10
   463 draw image 11 *tmp337 @metaglass 16 0
   464 draw col %008000FF
   465 draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10
   466 draw col %00FF00FF
   467 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp339 :drawTitleRow.4:y 7
+  468 op sub *tmp339 :updateDisplay:y 8
   469 print 40
   470 draw print 174 *tmp339 @right
   471 label *label154
 
   474 label *label155
   475 label *label153
   476 jump *label156 lessThan 1 1
-    * op sub :drawItemColor.9:y :drawTitleRow.4:y 15
+  477 op sub :drawItemColor.9:y :updateDisplay:y 30
   478 label *label156
   479 label *label157
   480 label *label152
-    * set :drawItem.9:y :drawItemColor.9:y
   481 label *label151
   482 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
-    * set :drawItem.10:y :drawItemColor.9:y
-    * op mul *tmp348 126 *tmp343
   483 op div *tmp349 *tmp343 0.6349206349206349
   484 op min :drawItemColor.10:length 126 *tmp349
-    * op add :drawItemColor.10:textX 174 0
   485 draw col %[white]
-    * op add *tmp360 :drawItemColor.9:y 5
+  486 op sub *tmp360 :drawTitleRow.4:y 10
   487 draw image 11 *tmp360 @titanium 16 0
   488 draw col %008000FF
   489 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   490 draw col %00FF00FF
   491 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op add *tmp361 :drawItemColor.9:y 5
-    * op add *tmp362 :drawItemColor.9:y 7
+  492 op sub *tmp361 :drawTitleRow.4:y 10
+  493 op sub *tmp362 :drawTitleRow.4:y 8
   494 print 80
   495 draw print 174 *tmp362 @right
   496 label *label161
 
   499 label *label162
   500 label *label160
   501 jump *label163 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawItemColor.9:y 15
+  502 op sub :drawItemColor.10:y :drawTitleRow.4:y 30
   503 label *label163
   504 label *label164
   505 label *label159
-    * set :drawItem.10:y :drawItemColor.10:y
   506 label *label158
   507 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
-    * set :drawItem.11:y :drawItemColor.10:y
-    * op mul *tmp371 126 *tmp366
   508 op div *tmp372 *tmp366 1.0317460317460319
   509 op min :drawItemColor.11:length 126 *tmp372
-    * op add :drawItemColor.11:textX 174 0
   510 draw col %[white]
-    * op add *tmp383 :drawItemColor.10:y 5
+  511 op sub *tmp383 :drawItemColor.9:y 10
   512 draw image 11 *tmp383 @silicon 16 0
   513 draw col %008000FF
   514 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   515 draw col %00FF00FF
   516 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op add *tmp384 :drawItemColor.10:y 5
-    * op add *tmp385 :drawItemColor.10:y 7
+  517 op sub *tmp384 :drawItemColor.9:y 10
+  518 op sub *tmp385 :drawItemColor.9:y 8
   519 print 130
   520 draw print 174 *tmp385 @right
   521 label *label168
 
   524 label *label169
   525 label *label167
   526 jump *label170 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItemColor.10:y 15
+  527 op sub :drawItemColor.11:y :drawItemColor.9:y 30
   528 label *label170
   529 label *label171
   530 label *label166
 
   533 jump *label150 always
   534 label *label149
   535 op idiv *tmp390 :drawMultiReco:progress 0.01
-    * set :drawItem.12:y :drawTitleRow.4:y
   536 op mul *tmp395 126 :drawMultiReco:progress
   537 op mul *tmp396 :drawMultiReco:progress 126
-    * op min :drawItemColor.12:length 126 *tmp396
-    * op add :drawItemColor.12:textX 174 0
+  538 op min :drawItemColor.12:length 126 *tmp395
   539 draw col %[white]
-    * op add *tmp407 :drawTitleRow.4:y 5
+  540 op sub *tmp407 :updateDisplay:y 10
   541 draw image 11 *tmp407 @mega 16 0
   542 draw col %008000FF
   543 draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10
   544 draw col %00FF00FF
   545 draw lineRect 22 :drawTitleRow.4:y 126 10
-    * op add *tmp409 :drawTitleRow.4:y 7
+  546 op sub *tmp409 :updateDisplay:y 8
   547 print *tmp390
   548 print "%"
   549 draw print 174 *tmp409 @right
 
   554 label *label176
   555 label *label174
   556 jump *label177 lessThan 1 1
-    * op sub :drawItemColor.12:y :drawTitleRow.4:y 15
+  557 op sub :drawItemColor.12:y :updateDisplay:y 30
   558 label *label177
   559 label *label178
   560 label *label173
 
   577 label *label184
   578 op sub :drawTitleRow.5:y :updateDisplay:y 15
   579 label *label182
-    * set :updateDisplay:y :drawTitleRow.5:y
   580 jump *label185 notEqual .transportItem null
-    * set :drawItem.13:y :drawTitleRow.5:y
   581 set :drawItem.13:target .transportTarget
   582 op div *tmp422 0 :drawItem.13:target
   583 op min :drawItemColor.13:length 126 *tmp422
-    * op add :drawItemColor.13:textX 174 0
   584 draw col %[white]
   585 op add *tmp433 :drawTitleRow.5:y 5
   586 draw image 11 *tmp433 @poly 16 0
 
   588 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   589 draw col %00FF00FF
   590 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp434 :drawTitleRow.5:y 5
   591 op add *tmp435 :drawTitleRow.5:y 7
   592 print .transportTarget
   593 draw print 174 *tmp435 @right
 
   611 op equal *tmp443 :drawBuilder:unitItem .transportItem
   612 op mul *tmp444 *tmp442 *tmp443
   613 set :drawUnit.1:item .transportItem
-    * set :drawItem.14:y :drawTitleRow.5:y
   614 set :drawItem.14:target .transportTarget
   615 op mul *tmp449 126 *tmp444
   616 op div *tmp450 *tmp449 :drawItem.14:target
   617 op min :drawItemColor.14:length 126 *tmp450
-    * op add :drawItemColor.14:textX 174 0
   618 draw col %[white]
   619 op add *tmp461 :drawTitleRow.5:y 5
   620 draw image 11 *tmp461 :drawUnit.1:item 16 0
 
   622 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   623 draw col %00FF00FF
   624 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp462 :drawTitleRow.5:y 5
   625 op add *tmp463 :drawTitleRow.5:y 7
   626 print .transportTarget
   627 draw print 174 *tmp463 @right
 
   655 print "Power"
   656 draw print 23 20 @bottomLeft
   657 label *label210
-    * op sub :drawTitleRow.6:y 20 15
   658 label *label208
-    * set :updateDisplay:y 5
   659 sensor :drawPower:power AJTJK-battery1 @totalPower
   660 op mul *tmp474 :drawPower:power 100
   661 op idiv *tmp476 *tmp474 4000
   662 op mul *tmp482 :drawPower:power 0.0315
   663 op min :drawItemColor.15:length 126 *tmp482
   664 draw col %[white]
-    * op add *tmp493 5 5
   665 draw image 11 10 @battery 16 0
   666 draw col %808000FF
   667 draw rect 22 5 :drawItemColor.15:length 10
   668 draw col %FFFF00FF
   669 draw lineRect 22 5 126 10
-    * op add *tmp494 5 5
-    * op add *tmp495 5 7
-    * set :drawBold.15:y 12
   670 print *tmp476
   671 print "%"
   672 draw print 174 12 @right
 
   677 label *label214
   678 label *label212
   679 jump *label215 lessThan 1 1
-    * op sub :drawItemColor.15:y 5 15
   680 label *label215
   681 label *label216
   682 label *label211
 
  1386 set *tmp708 %80ff8080
  1387 label *label400
  1388 draw col *tmp708
-    * op mul *tmp709 2 :unpackCfg:x
-    * op mul *tmp710 2 :unpackCfg:y
+ 1389 op div *tmp709 *tmp683 1
+ 1390 op div *tmp710 *tmp687 1
  1391 op mul *tmp711 2 :unpackCfg:size
  1392 op mul *tmp712 90 :unpackCfg:rotation
  1393 draw image *tmp709 *tmp710 :unpackCfg:type *tmp711 *tmp712

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-9 instructions):
 
   248 label *label90
   249 label *label88
   250 jump *label91 lessThan 1 1
-    * op sub :drawItemColor.2:y :updateDisplay:y 30
   251 label *label91
   252 label *label92
   253 label *label87
 
   283 op mul *tmp198 *tmp192 4.2
   284 op min :drawItemColor.4:length 126 *tmp198
   285 draw col %[white]
-    * op sub *tmp209 :drawTitleRow.2:y 10
+  286 op sub *tmp209 :updateDisplay:y 25
   287 draw image 11 *tmp209 @silicon 16 0
   288 draw col %008000FF
   289 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   290 draw col %00FF00FF
   291 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op sub *tmp210 :drawTitleRow.2:y 10
-    * op sub *tmp211 :drawTitleRow.2:y 8
+  292 op sub *tmp210 :updateDisplay:y 25
+  293 op sub *tmp211 :updateDisplay:y 23
   294 print 30
   295 draw print 174 *tmp211 @right
   296 label *label103
 
   299 label *label104
   300 label *label102
   301 jump *label105 lessThan 1 1
-    * op sub :drawItemColor.4:y :drawTitleRow.2:y 30
+  302 op sub :drawItemColor.4:y :updateDisplay:y 45
   303 label *label105
   304 label *label106
   305 label *label101
 
   311 op idiv *tmp216 :drawAirFactory:progress 0.01
   312 set :drawItem.5:item .nextFactory
   313 op mul *tmp221 126 :drawAirFactory:progress
-    * op mul *tmp222 :drawAirFactory:progress 126
   314 op min :drawItemColor.5:length 126 *tmp221
   315 draw col %[white]
   316 op sub *tmp233 :updateDisplay:y 10
 
   330 label *label111
   331 label *label109
   332 jump *label112 lessThan 1 1
-    * op sub :drawItemColor.5:y :updateDisplay:y 30
   333 label *label112
   334 label *label113
   335 label *label108
 
   381 op mul *tmp273 *tmp267 3.1500000000000004
   382 op min :drawItemColor.7:length 126 *tmp273
   383 draw col %[white]
-    * op sub *tmp284 :drawTitleRow.3:y 10
+  384 op sub *tmp284 :updateDisplay:y 25
   385 draw image 11 *tmp284 @silicon 16 0
   386 draw col %008000FF
   387 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   388 draw col %00FF00FF
   389 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op sub *tmp285 :drawTitleRow.3:y 10
-    * op sub *tmp286 :drawTitleRow.3:y 8
+  390 op sub *tmp285 :updateDisplay:y 25
+  391 op sub *tmp286 :updateDisplay:y 23
   392 print 40
   393 draw print 174 *tmp286 @right
   394 label *label132
 
   397 label *label133
   398 label *label131
   399 jump *label134 lessThan 1 1
-    * op sub :drawItemColor.7:y :drawTitleRow.3:y 30
+  400 op sub :drawItemColor.7:y :updateDisplay:y 45
   401 label *label134
   402 label *label135
   403 label *label130
 
   407 label *label120
   408 op idiv *tmp291 :drawAddReco:progress 0.01
   409 op mul *tmp296 126 :drawAddReco:progress
-    * op mul *tmp297 :drawAddReco:progress 126
   410 op min :drawItemColor.8:length 126 *tmp296
   411 draw col %[white]
   412 op sub *tmp308 :updateDisplay:y 10
 
   426 label *label140
   427 label *label138
   428 jump *label141 lessThan 1 1
-    * op sub :drawItemColor.8:y :updateDisplay:y 30
   429 label *label141
   430 label *label142
   431 label *label137
 
   478 op div *tmp349 *tmp343 0.6349206349206349
   479 op min :drawItemColor.10:length 126 *tmp349
   480 draw col %[white]
-    * op sub *tmp360 :drawTitleRow.4:y 10
+  481 op sub *tmp360 :updateDisplay:y 25
   482 draw image 11 *tmp360 @titanium 16 0
   483 draw col %008000FF
   484 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   485 draw col %00FF00FF
   486 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op sub *tmp361 :drawTitleRow.4:y 10
-    * op sub *tmp362 :drawTitleRow.4:y 8
+  487 op sub *tmp361 :updateDisplay:y 25
+  488 op sub *tmp362 :updateDisplay:y 23
   489 print 80
   490 draw print 174 *tmp362 @right
   491 label *label161
 
   494 label *label162
   495 label *label160
   496 jump *label163 lessThan 1 1
-    * op sub :drawItemColor.10:y :drawTitleRow.4:y 30
+  497 op sub :drawItemColor.10:y :updateDisplay:y 45
   498 label *label163
   499 label *label164
   500 label *label159
 
   503 op div *tmp372 *tmp366 1.0317460317460319
   504 op min :drawItemColor.11:length 126 *tmp372
   505 draw col %[white]
-    * op sub *tmp383 :drawItemColor.9:y 10
+  506 op sub *tmp383 :updateDisplay:y 40
   507 draw image 11 *tmp383 @silicon 16 0
   508 draw col %008000FF
   509 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   510 draw col %00FF00FF
   511 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op sub *tmp384 :drawItemColor.9:y 10
-    * op sub *tmp385 :drawItemColor.9:y 8
+  512 op sub *tmp384 :updateDisplay:y 40
+  513 op sub *tmp385 :updateDisplay:y 38
   514 print 130
   515 draw print 174 *tmp385 @right
   516 label *label168
 
   519 label *label169
   520 label *label167
   521 jump *label170 lessThan 1 1
-    * op sub :drawItemColor.11:y :drawItemColor.9:y 30
+  522 op sub :drawItemColor.11:y :updateDisplay:y 60
   523 label *label170
   524 label *label171
   525 label *label166
 
   529 label *label149
   530 op idiv *tmp390 :drawMultiReco:progress 0.01
   531 op mul *tmp395 126 :drawMultiReco:progress
-    * op mul *tmp396 :drawMultiReco:progress 126
   532 op min :drawItemColor.12:length 126 *tmp395
   533 draw col %[white]
   534 op sub *tmp407 :updateDisplay:y 10
 
   548 label *label176
   549 label *label174
   550 jump *label177 lessThan 1 1
-    * op sub :drawItemColor.12:y :updateDisplay:y 30
   551 label *label177
   552 label *label178
   553 label *label173
 
   575 op div *tmp422 0 :drawItem.13:target
   576 op min :drawItemColor.13:length 126 *tmp422
   577 draw col %[white]
-    * op add *tmp433 :drawTitleRow.5:y 5
+  578 op sub *tmp433 :updateDisplay:y 10
   579 draw image 11 *tmp433 @poly 16 0
   580 draw col %008000FF
   581 draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
   582 draw col %00FF00FF
   583 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp435 :drawTitleRow.5:y 7
+  584 op sub *tmp435 :updateDisplay:y 8
   585 print .transportTarget
   586 draw print 174 *tmp435 @right
   587 label *label191
 
   590 label *label192
   591 label *label190
   592 jump *label193 lessThan 1 1
-    * op sub :drawItemColor.13:y :drawTitleRow.5:y 15
+  593 op sub :drawItemColor.13:y :updateDisplay:y 30
   594 label *label193
   595 label *label194
   596 label *label189
 
   609 op div *tmp450 *tmp449 :drawItem.14:target
   610 op min :drawItemColor.14:length 126 *tmp450
   611 draw col %[white]
-    * op add *tmp461 :drawTitleRow.5:y 5
+  612 op sub *tmp461 :updateDisplay:y 10
   613 draw image 11 *tmp461 :drawUnit.1:item 16 0
   614 draw col %008000FF
   615 draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10
   616 draw col %00FF00FF
   617 draw lineRect 22 :drawTitleRow.5:y 126 10
-    * op add *tmp463 :drawTitleRow.5:y 7
+  618 op sub *tmp463 :updateDisplay:y 8
   619 print .transportTarget
   620 draw print 174 *tmp463 @right
   621 label *label199
 
   624 label *label200
   625 label *label198
   626 jump *label201 lessThan 1 1
-    * op sub :drawItemColor.14:y :drawTitleRow.5:y 15
+  627 op sub :drawItemColor.14:y :updateDisplay:y 30
   628 label *label201
   629 label *label202
   630 label *label197
 
  1354 lookup block :unpackCfg:type *tmp679
  1355 read *tmp682 :drawBlock:cfg 2
  1356 op sub *tmp683 *tmp682 74
-    * op div :unpackCfg:x *tmp683 2
  1357 read *tmp686 :drawBlock:cfg 3
  1358 op sub *tmp687 *tmp686 74
-    * op div :unpackCfg:y *tmp687 2
  1359 read *tmp690 :drawBlock:cfg 4
  1360 op sub :unpackCfg:rotation *tmp690 74
  1361 read *tmp693 :drawBlock:cfg 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-4 instructions):
 
   289 draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10
   290 draw col %00FF00FF
   291 draw lineRect 22 :drawItemColor.3:y 126 10
-    * op sub *tmp210 :updateDisplay:y 25
   292 op sub *tmp211 :updateDisplay:y 23
   293 print 30
   294 draw print 174 *tmp211 @right
 
   386 draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10
   387 draw col %00FF00FF
   388 draw lineRect 22 :drawItemColor.6:y 126 10
-    * op sub *tmp285 :updateDisplay:y 25
   389 op sub *tmp286 :updateDisplay:y 23
   390 print 40
   391 draw print 174 *tmp286 @right
 
   482 draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10
   483 draw col %00FF00FF
   484 draw lineRect 22 :drawItemColor.9:y 126 10
-    * op sub *tmp361 :updateDisplay:y 25
   485 op sub *tmp362 :updateDisplay:y 23
   486 print 80
   487 draw print 174 *tmp362 @right
 
   506 draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10
   507 draw col %00FF00FF
   508 draw lineRect 22 :drawItemColor.10:y 126 10
-    * op sub *tmp384 :updateDisplay:y 40
   509 op sub *tmp385 :updateDisplay:y 38
   510 print 130
   511 draw print 174 *tmp385 @right

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   745 op sub :displayStorage:y.1 190 8
   746 set :displayStorage:i 0
   747 label *label240
-    * jump *label242 greaterThanEq :displayStorage:i 9
+  748 label *label401
   749 op and *tmp513 :displayStorage:accumulator 0b11111
   750 op sub :displayStorage:value *tmp513 8
   751 jump *label243 lessThan :displayStorage:value 0
 
   760 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   761 label *label241
   762 op add :displayStorage:i :displayStorage:i 1
-    * jump *label240 always
+  763 jump *label401 lessThan :displayStorage:i 9
   764 label *label242
   765 drawflush display1
   766 op add .lastTail .lastTail 1
 
  1019 op sub :displayLog:position .lastRecord 1
  1020 label *label316
  1021 jump *label318 lessThan :displayLog:position :displayLog:stop
+ 1022 label *label402
  1023 read :displayLog:record bank1 :displayLog:position
  1024 op sub *tmp566 :displayLog:start :displayLog:position
  1025 op sub *tmp567 *tmp566 1
 
  1065 label *label326
  1066 label *label317
  1067 op sub :displayLog:position :displayLog:position 1
-    * jump *label316 always
+ 1068 jump *label402 greaterThanEq :displayLog:position :displayLog:stop
  1069 label *label318
  1070 op add .lastRecord :displayLog:stop 1
  1071 drawflush display1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-21 instructions):
 
   100 draw print 175 193 @right
   101 label *label43
   102 label *label41
-    * jump *label44 lessThan 1 1
-    * label *label44
-    * label *label45
   103 label *label40
   104 label *label39
   105 op sub :updateDisplay:y 171 35
 
   244 draw print 175 *tmp165 @right
   245 label *label90
   246 label *label88
-    * jump *label91 lessThan 1 1
-    * label *label91
-    * label *label92
   247 label *label87
   248 label *label86
   249 op sub :updateDisplay:y :drawTitleRow.2:y 30
 
   322 draw print 175 *tmp235 @right
   323 label *label111
   324 label *label109
-    * jump *label112 lessThan 1 1
-    * label *label112
-    * label *label113
   325 label *label108
   326 label *label107
   327 op sub :updateDisplay:y :drawTitleRow.2:y 30
 
   414 draw print 175 *tmp310 @right
   415 label *label140
   416 label *label138
-    * jump *label141 lessThan 1 1
-    * label *label141
-    * label *label142
   417 label *label137
   418 label *label136
   419 op sub :updateDisplay:y :drawTitleRow.3:y 30
 
   531 draw print 175 *tmp409 @right
   532 label *label176
   533 label *label174
-    * jump *label177 lessThan 1 1
-    * label *label177
-    * label *label178
   534 label *label173
   535 label *label172
   536 op sub :updateDisplay:y :drawTitleRow.4:y 45
 
   650 draw print 175 12 @right
   651 label *label214
   652 label *label212
-    * jump *label215 lessThan 1 1
-    * label *label215
-    * label *label216
   653 label *label211
   654 label *label203
   655 drawflush display1
 
   730 label *label401
   731 op and *tmp513 :displayStorage:accumulator 0b11111
   732 op sub :displayStorage:value *tmp513 8
-    * jump *label243 lessThan :displayStorage:value 0
-    * set *tmp516 %[green]
-    * jump *label244 always
-    * label *label243
-    * set *tmp516 %[red]
-    * label *label244
+  733 select *tmp516 greaterThanEq :displayStorage:value 0 %[green] %[red]
   734 draw col *tmp516
   735 draw rect :displayStorage:x :displayStorage:y.1 1 :displayStorage:value
   736 op sub :displayStorage:y.1 :displayStorage:y.1 21
 
  1018 op idiv :displayRecord:t *tmp580 120
  1019 op idiv :displayRecord:m :displayRecord:t 60
  1020 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label322 greaterThanEq :displayRecord:s 10
-    * set *tmp586 "0"
-    * jump *label323 always
-    * label *label322
-    * set *tmp586 ""
-    * label *label323
+ 1021 select *tmp586 lessThan :displayRecord:s 10 "0" ""
  1022 print :displayRecord:m
  1023 print ":"
  1024 print *tmp586
 
  1100 op idiv :drawHeader:t *tmp0 120
  1101 op idiv :drawHeader:m :drawHeader:t 60
  1102 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label335 greaterThanEq :drawHeader:s 10
-    * set *tmp609 "0"
-    * jump *label336 always
-    * label *label335
-    * set *tmp609 ""
-    * label *label336
+ 1103 select *tmp609 lessThan :drawHeader:s 10 "0" ""
  1104 print :drawHeader:m
  1105 print ":"
  1106 print *tmp609
 
  1199 op idiv :drawHeader:t.1 *tmp0 120
  1200 op idiv :drawHeader:m.1 :drawHeader:t.1 60
  1201 op mod :drawHeader:s.1 :drawHeader:t.1 60
-    * jump *label369 greaterThanEq :drawHeader:s.1 10
-    * set *tmp633 "0"
-    * jump *label370 always
-    * label *label369
-    * set *tmp633 ""
-    * label *label370
+ 1202 select *tmp633 lessThan :drawHeader:s.1 10 "0" ""
  1203 print :drawHeader:m.1
  1204 print ":"
  1205 print *tmp633
 
  1329 jump *label394 always
  1330 label *label397
  1331 label *label398
-    * jump *label399 equal :drawBlock:built false
-    * set *tmp708 %[white]
-    * jump *label400 always
-    * label *label399
-    * set *tmp708 %80ff8080
-    * label *label400
+ 1332 select *tmp708 notEqual :drawBlock:built false %[white] %80ff8080
  1333 draw col *tmp708
  1334 op div *tmp709 *tmp683 1
  1335 op div *tmp710 *tmp687 1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
  1007 op mul *tmp572 15 :displayRecord:row
  1008 op sub :displayRecord:y 189 *tmp572
  1009 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label320 lessThanEq :displayRecord:id @blockCount
+ 1010 lookup block *tmp576 :displayRecord:id
+ 1011 jump *label321 lessThanEq :displayRecord:id @blockCount
  1012 op sub *tmp577 :displayRecord:id @blockCount
  1013 lookup unit *tmp576 *tmp577
  1014 jump *label321 always
-    * label *label320
-    * lookup block *tmp576 :displayRecord:id
  1015 label *label321
  1016 op div *tmp580 :displayLog:record 1000
  1017 op idiv :displayRecord:t *tmp580 120

Modifications by Unroll iteration loop at Display.mnd:569:9 (-2 instructions):
 
   671 label *label222
   672 draw col %[white]
   673 op sub :displayStorage:y 190 8
-    * set :displayStorage:item @copper
-    * setaddr *tmp506 *label228
-    * jump *label225 always
-    * multilabel *label228 (m:marker1)
-    * set :displayStorage:item @lead
-    * setaddr *tmp506 *label229
-    * jump *label225 always
-    * multilabel *label229 (m:marker1)
-    * set :displayStorage:item @sand
-    * setaddr *tmp506 *label230
-    * jump *label225 always
-    * multilabel *label230 (m:marker1)
-    * set :displayStorage:item @coal
-    * setaddr *tmp506 *label231
-    * jump *label225 always
-    * multilabel *label231 (m:marker1)
-    * set :displayStorage:item @graphite
-    * setaddr *tmp506 *label232
-    * jump *label225 always
-    * multilabel *label232 (m:marker1)
-    * set :displayStorage:item @silicon
-    * setaddr *tmp506 *label233
-    * jump *label225 always
-    * multilabel *label233 (m:marker1)
-    * set :displayStorage:item @titanium
-    * setaddr *tmp506 *label234
-    * jump *label225 always
-    * multilabel *label234 (m:marker1)
-    * set :displayStorage:item @metaglass
-    * setaddr *tmp506 *label235
-    * jump *label225 always
-    * multilabel *label235 (m:marker1)
-    * set :displayStorage:item @thorium
-    * setaddr *tmp506 *label236
-    * label *label225
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
-    * label *label226
-    * multijump *tmp506 0 0 (m:marker1)
-    * multilabel *label236 (m:marker1)
-    * label *label227
+  674 set :displayStorage:item @copper
+  675 label *label403
+  676 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  677 op sub :displayStorage:y :displayStorage:y 21
+  678 label *label404
+  679 set :displayStorage:item @lead
+  680 label *label407
+  681 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  682 op sub :displayStorage:y :displayStorage:y 21
+  683 label *label408
+  684 set :displayStorage:item @sand
+  685 label *label411
+  686 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  687 op sub :displayStorage:y :displayStorage:y 21
+  688 label *label412
+  689 set :displayStorage:item @coal
+  690 label *label415
+  691 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  692 op sub :displayStorage:y :displayStorage:y 21
+  693 label *label416
+  694 set :displayStorage:item @graphite
+  695 label *label419
+  696 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  697 op sub :displayStorage:y :displayStorage:y 21
+  698 label *label420
+  699 set :displayStorage:item @silicon
+  700 label *label423
+  701 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  702 op sub :displayStorage:y :displayStorage:y 21
+  703 label *label424
+  704 set :displayStorage:item @titanium
+  705 label *label427
+  706 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  707 op sub :displayStorage:y :displayStorage:y 21
+  708 label *label428
+  709 set :displayStorage:item @metaglass
+  710 label *label431
+  711 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  712 op sub :displayStorage:y :displayStorage:y 21
+  713 label *label432
+  714 set :displayStorage:item @thorium
+  715 label *label435
+  716 draw image 12 :displayStorage:y :displayStorage:item 15 0
+  717 op sub :displayStorage:y :displayStorage:y 21
+  718 label *label436
+  719 label *label227
   720 label *label220
   721 label *label221
   722 setaddr :drawHeader*retaddr *label237 (h:*label237)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   673 op sub :displayStorage:y 190 8
   674 set :displayStorage:item @copper
   675 label *label403
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  676 draw image 12 182 @copper 15 0
+  677 op sub :displayStorage:y 182 21
   678 label *label404
   679 set :displayStorage:item @lead
   680 label *label407
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  681 draw image 12 161 @lead 15 0
+  682 op sub :displayStorage:y 161 21
   683 label *label408
   684 set :displayStorage:item @sand
   685 label *label411
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  686 draw image 12 140 @sand 15 0
+  687 op sub :displayStorage:y 140 21
   688 label *label412
   689 set :displayStorage:item @coal
   690 label *label415
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  691 draw image 12 119 @coal 15 0
+  692 op sub :displayStorage:y 119 21
   693 label *label416
   694 set :displayStorage:item @graphite
   695 label *label419
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  696 draw image 12 98 @graphite 15 0
+  697 op sub :displayStorage:y 98 21
   698 label *label420
   699 set :displayStorage:item @silicon
   700 label *label423
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  701 draw image 12 77 @silicon 15 0
+  702 op sub :displayStorage:y 77 21
   703 label *label424
   704 set :displayStorage:item @titanium
   705 label *label427
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  706 draw image 12 56 @titanium 15 0
+  707 op sub :displayStorage:y 56 21
   708 label *label428
   709 set :displayStorage:item @metaglass
   710 label *label431
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  711 draw image 12 35 @metaglass 15 0
+  712 op sub :displayStorage:y 35 21
   713 label *label432
   714 set :displayStorage:item @thorium
   715 label *label435
-    * draw image 12 :displayStorage:y :displayStorage:item 15 0
-    * op sub :displayStorage:y :displayStorage:y 21
+  716 draw image 12 14 @thorium 15 0
+  717 op sub :displayStorage:y 14 21
   718 label *label436
   719 label *label227
   720 label *label220

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
   670 label *label224
   671 label *label222
   672 draw col %[white]
-    * op sub :displayStorage:y 190 8
-    * set :displayStorage:item @copper
   673 label *label403
   674 draw image 12 182 @copper 15 0
-    * op sub :displayStorage:y 182 21
   675 label *label404
-    * set :displayStorage:item @lead
   676 label *label407
   677 draw image 12 161 @lead 15 0
-    * op sub :displayStorage:y 161 21
   678 label *label408
-    * set :displayStorage:item @sand
   679 label *label411
   680 draw image 12 140 @sand 15 0
-    * op sub :displayStorage:y 140 21
   681 label *label412
-    * set :displayStorage:item @coal
   682 label *label415
   683 draw image 12 119 @coal 15 0
-    * op sub :displayStorage:y 119 21
   684 label *label416
-    * set :displayStorage:item @graphite
   685 label *label419
   686 draw image 12 98 @graphite 15 0
-    * op sub :displayStorage:y 98 21
   687 label *label420
-    * set :displayStorage:item @silicon
   688 label *label423
   689 draw image 12 77 @silicon 15 0
-    * op sub :displayStorage:y 77 21
   690 label *label424
-    * set :displayStorage:item @titanium
   691 label *label427
   692 draw image 12 56 @titanium 15 0
-    * op sub :displayStorage:y 56 21
   693 label *label428
-    * set :displayStorage:item @metaglass
   694 label *label431
   695 draw image 12 35 @metaglass 15 0
-    * op sub :displayStorage:y 35 21
   696 label *label432
-    * set :displayStorage:item @thorium
   697 label *label435
   698 draw image 12 14 @thorium 15 0
-    * op sub :displayStorage:y 14 21
   699 label *label436
   700 label *label227
   701 label *label220

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   926 jump *label303 lessThan .recentBuildIndex 0
   927 set :displayBaseMap:index .recentBuildIndex
   928 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
+  929 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
   930 setaddr :drawBlock*retaddr *label305 (h:*label305)
   931 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)
   932 label *label305

Modifications by Unroll iteration loop at Display.mnd:154:17:
 
  1131 label *label347
  1132 jump *label349 notEqual :drawHeader:count 2
  1133 set :drawHeader:x 27
-    * set :drawHeader:goal .nextBlock
-    * setaddr *tmp620 *label354
-    * jump *label351 always
-    * multilabel *label354 (m:marker3)
-    * set :drawHeader:goal .nextFactory
-    * setaddr *tmp620 *label355
-    * jump *label351 always
-    * multilabel *label355 (m:marker3)
-    * set :drawHeader:goal .nextAddReco
-    * setaddr *tmp620 *label356
-    * label *label351
-    * jump *label357 equal :drawHeader:goal null
-    * draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
-    * label *label357
-    * label *label358
-    * label *label352
-    * multijump *tmp620 0 0 (m:marker3)
-    * multilabel *label356 (m:marker3)
-    * label *label353
+ 1134 set :drawHeader:goal .nextBlock
+ 1135 label *label440
+ 1136 jump *label441 equal :drawHeader:goal null
+ 1137 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1138 op add :drawHeader:x :drawHeader:x 30
+ 1139 label *label441
+ 1140 label *label442
+ 1141 label *label443
+ 1142 set :drawHeader:goal .nextFactory
+ 1143 label *label446
+ 1144 jump *label447 equal :drawHeader:goal null
+ 1145 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1146 op add :drawHeader:x :drawHeader:x 30
+ 1147 label *label447
+ 1148 label *label448
+ 1149 label *label449
+ 1150 set :drawHeader:goal .nextAddReco
+ 1151 label *label452
+ 1152 jump *label453 equal :drawHeader:goal null
+ 1153 draw image :drawHeader:x 240 :drawHeader:goal 25 0
+ 1154 op add :drawHeader:x :drawHeader:x 30
+ 1155 label *label453
+ 1156 label *label454
+ 1157 label *label455
+ 1158 label *label353
  1159 jump *label350 always
  1160 label *label349
  1161 jump *label359 notEqual :drawHeader:count 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
  1134 set :drawHeader:goal .nextBlock
  1135 label *label440
  1136 jump *label441 equal :drawHeader:goal null
-    * draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
+ 1137 draw image 27 240 :drawHeader:goal 25 0
+ 1138 op add :drawHeader:x 27 30
  1139 label *label441
  1140 label *label442
  1141 label *label443
 
  1151 label *label452
  1152 jump *label453 equal :drawHeader:goal null
  1153 draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * op add :drawHeader:x :drawHeader:x 30
  1154 label *label453
  1155 label *label454
  1156 label *label455

Modifications by Unroll iteration loop at Display.mnd:161:17:
 
  1158 jump *label350 always
  1159 label *label349
  1160 jump *label359 notEqual :drawHeader:count 1
-    * set :drawHeader:goal.1 .nextBlock
-    * setaddr *tmp625 *label364
-    * jump *label361 always
-    * multilabel *label364 (m:marker4)
-    * set :drawHeader:goal.1 .nextFactory
-    * setaddr *tmp625 *label365
-    * jump *label361 always
-    * multilabel *label365 (m:marker4)
-    * set :drawHeader:goal.1 .nextAddReco
-    * setaddr *tmp625 *label366
-    * label *label361
-    * jump *label367 equal :drawHeader:goal.1 null
-    * draw image 42 237 :drawHeader:goal.1 32 0
-    * jump *label363 always
-    * label *label367
-    * label *label368
-    * label *label362
-    * multijump *tmp625 0 0 (m:marker4)
-    * multilabel *label366 (m:marker4)
-    * label *label363
+ 1161 set :drawHeader:goal.1 .nextBlock
+ 1162 label *label459
+ 1163 jump *label460 equal :drawHeader:goal.1 null
+ 1164 draw image 42 237 :drawHeader:goal.1 32 0
+ 1165 jump *label363 always
+ 1166 label *label460
+ 1167 label *label461
+ 1168 label *label462
+ 1169 set :drawHeader:goal.1 .nextFactory
+ 1170 label *label465
+ 1171 jump *label466 equal :drawHeader:goal.1 null
+ 1172 draw image 42 237 :drawHeader:goal.1 32 0
+ 1173 jump *label363 always
+ 1174 label *label466
+ 1175 label *label467
+ 1176 label *label468
+ 1177 set :drawHeader:goal.1 .nextAddReco
+ 1178 label *label471
+ 1179 jump *label472 equal :drawHeader:goal.1 null
+ 1180 draw image 42 237 :drawHeader:goal.1 32 0
+ 1181 jump *label363 always
+ 1182 label *label472
+ 1183 label *label473
+ 1184 label *label474
+ 1185 label *label363
  1186 label *label359
  1187 label *label360
  1188 label *label350

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-9 instructions):
 
   267 draw print 175 *tmp188 @right
   268 label *label97
   269 label *label95
-    * jump *label98 lessThan 1 1
   270 op sub :drawItemColor.3:y :updateDisplay:y 30
   271 label *label98
   272 label *label99
 
   290 draw print 175 *tmp211 @right
   291 label *label104
   292 label *label102
-    * jump *label105 lessThan 1 1
   293 op sub :drawItemColor.4:y :updateDisplay:y 45
   294 label *label105
   295 label *label106
 
   359 draw print 175 *tmp263 @right
   360 label *label126
   361 label *label124
-    * jump *label127 lessThan 1 1
   362 op sub :drawItemColor.6:y :updateDisplay:y 30
   363 label *label127
   364 label *label128
 
   382 draw print 175 *tmp286 @right
   383 label *label133
   384 label *label131
-    * jump *label134 lessThan 1 1
   385 op sub :drawItemColor.7:y :updateDisplay:y 45
   386 label *label134
   387 label *label135
 
   450 draw print 175 *tmp339 @right
   451 label *label155
   452 label *label153
-    * jump *label156 lessThan 1 1
   453 op sub :drawItemColor.9:y :updateDisplay:y 30
   454 label *label156
   455 label *label157
 
   473 draw print 175 *tmp362 @right
   474 label *label162
   475 label *label160
-    * jump *label163 lessThan 1 1
   476 op sub :drawItemColor.10:y :updateDisplay:y 45
   477 label *label163
   478 label *label164
 
   496 draw print 175 *tmp385 @right
   497 label *label169
   498 label *label167
-    * jump *label170 lessThan 1 1
   499 op sub :drawItemColor.11:y :updateDisplay:y 60
   500 label *label170
   501 label *label171
 
   563 draw print 175 *tmp435 @right
   564 label *label192
   565 label *label190
-    * jump *label193 lessThan 1 1
   566 op sub :drawItemColor.13:y :updateDisplay:y 30
   567 label *label193
   568 label *label194
 
   596 draw print 175 *tmp463 @right
   597 label *label200
   598 label *label198
-    * jump *label201 lessThan 1 1
   599 op sub :drawItemColor.14:y :updateDisplay:y 30
   600 label *label201
   601 label *label202

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
   988 jump *label321 lessThanEq :displayRecord:id @blockCount
   989 op sub *tmp577 :displayRecord:id @blockCount
   990 lookup unit *tmp576 *tmp577
-    * jump *label321 always
   991 label *label321
   992 op div *tmp580 :displayLog:record 1000
   993 op idiv :displayRecord:t *tmp580 120
 
  1168 label *label471
  1169 jump *label472 equal :drawHeader:goal.1 null
  1170 draw image 42 237 :drawHeader:goal.1 32 0
-    * jump *label363 always
  1171 label *label472
  1172 label *label473
  1173 label *label474

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   546 label *label182
   547 jump *label185 notEqual .transportItem null
   548 set :drawItem.13:target .transportTarget
-    * op div *tmp422 0 :drawItem.13:target
+  549 set *tmp422 0
   550 op min :drawItemColor.13:length 126 *tmp422
   551 draw col %[white]
   552 op sub *tmp433 :updateDisplay:y 10
 
  1314 label *label398
  1315 select *tmp708 notEqual :drawBlock:built false %[white] %80ff8080
  1316 draw col *tmp708
-    * op div *tmp709 *tmp683 1
-    * op div *tmp710 *tmp687 1
+ 1317 set *tmp709 *tmp683
+ 1318 set *tmp710 *tmp687
  1319 op mul *tmp711 2 :unpackCfg:size
  1320 op mul *tmp712 90 :unpackCfg:rotation
  1321 draw image *tmp709 *tmp710 :unpackCfg:type *tmp711 *tmp712

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   545 op sub :drawTitleRow.5:y :updateDisplay:y 15
   546 label *label182
   547 jump *label185 notEqual .transportItem null
-    * set :drawItem.13:target .transportTarget
   548 set *tmp422 0
-    * op min :drawItemColor.13:length 126 *tmp422
+  549 op min :drawItemColor.13:length 126 0
   550 draw col %[white]
   551 op sub *tmp433 :updateDisplay:y 10
   552 draw image 11 *tmp433 @poly 16 0
   553 draw col %008000FF
-    * draw rect 22 :drawTitleRow.5:y :drawItemColor.13:length 10
+  554 draw rect 22 :drawTitleRow.5:y 0 10
   555 draw col %00FF00FF
   556 draw lineRect 22 :drawTitleRow.5:y 126 10
   557 op sub *tmp435 :updateDisplay:y 8
 
  1317 set *tmp710 *tmp687
  1318 op mul *tmp711 2 :unpackCfg:size
  1319 op mul *tmp712 90 :unpackCfg:rotation
-    * draw image *tmp709 *tmp710 :unpackCfg:type *tmp711 *tmp712
+ 1320 draw image *tmp683 *tmp687 :unpackCfg:type *tmp711 *tmp712
  1321 label *label394
  1322 return :drawBlock*retaddr
  1323 end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-4 instructions):
 
   545 op sub :drawTitleRow.5:y :updateDisplay:y 15
   546 label *label182
   547 jump *label185 notEqual .transportItem null
-    * set *tmp422 0
-    * op min :drawItemColor.13:length 126 0
   548 draw col %[white]
   549 op sub *tmp433 :updateDisplay:y 10
   550 draw image 11 *tmp433 @poly 16 0
 
  1311 label *label398
  1312 select *tmp708 notEqual :drawBlock:built false %[white] %80ff8080
  1313 draw col *tmp708
-    * set *tmp709 *tmp683
-    * set *tmp710 *tmp687
  1314 op mul *tmp711 2 :unpackCfg:size
  1315 op mul *tmp712 90 :unpackCfg:rotation
  1316 draw image *tmp683 *tmp687 :unpackCfg:type *tmp711 *tmp712

Modifications by Virtual Instruction Expansion (+1 instructions):
 
   914 jump *label303 lessThan .recentBuildIndex 0
   915 set :displayBaseMap:index .recentBuildIndex
   916 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:index
+  917 op mul *tmp1041 :displayBaseMap:index 2
+  918 multijump *label479 *tmp1041 0 (m:marker5)
+  919 multilabel *label479 (m:marker5)
+  920 set :drawBlock:cfg "AJEMJJ-graphite-press0"
+  921 jump *label478 always
+  922 multilabel *label480 (m:marker5)
+  923 set :drawBlock:cfg "AJTJK-battery1"
+  924 jump *label478 always
+  925 multilabel *label481 (m:marker5)
+  926 set :drawBlock:cfg "ALTJL-battery2"
+  927 jump *label478 always
+  928 multilabel *label482 (m:marker5)
+  929 set :drawBlock:cfg "AJRJM-combustion-generator3"
+  930 jump *label478 always
+  931 multilabel *label483 (m:marker5)
+  932 set :drawBlock:cfg "ALMQJN-silicon-smelter4"
+  933 jump *label478 always
+  934 multilabel *label484 (m:marker5)
+  935 set :drawBlock:cfg "A{LNJO-inverted-sorter5"
+  936 jump *label478 always
+  937 multilabel *label485 (m:marker5)
+  938 set :drawBlock:cfg "A©JNJP-unloader6"
+  939 jump *label478 always
+  940 multilabel *label486 (m:marker5)
+  941 set :drawBlock:cfg "A{HNJQ-inverted-sorter7"
+  942 jump *label478 always
+  943 multilabel *label487 (m:marker5)
+  944 set :drawBlock:cfg "AJPJR-underflow-gate8"
+  945 jump *label478 always
+  946 multilabel *label488 (m:marker5)
+  947 set :drawBlock:cfg "AÕFFJS-micro-processor9"
+  948 jump *label478 always
+  949 multilabel *label489 (m:marker5)
+  950 set :drawBlock:cfg "AFHJT-power-node10"
+  951 jump *label478 always
+  952 multilabel *label490 (m:marker5)
+  953 set :drawBlock:cfg "A©FJJU-unloader11"
+  954 jump *label478 always
+  955 multilabel *label491 (m:marker5)
+  956 set :drawBlock:cfg "A~DJJV-overflow-gate12"
+  957 jump *label478 always
+  958 multilabel *label492 (m:marker5)
+  959 set :drawBlock:cfg "A¾BFLW-air-factory13"
+  960 jump *label478 always
+  961 multilabel *label493 (m:marker5)
+  962 set :drawBlock:cfg "A©NHJX-unloader14"
+  963 jump *label478 always
+  964 multilabel *label494 (m:marker5)
+  965 set :drawBlock:cfg "A{NJJY-inverted-sorter15"
+  966 jump *label478 always
+  967 multilabel *label495 (m:marker5)
+  968 set :drawBlock:cfg "ANOMJZ-kiln16"
+  969 jump *label478 always
+  970 multilabel *label496 (m:marker5)
+  971 set :drawBlock:cfg "A¡AOJ[-water-extractor17"
+  972 jump *label478 always
+  973 multilabel *label497 (m:marker5)
+  974 set :drawBlock:cfg "AAKJ\-steam-generator18"
+  975 jump *label478 always
+  976 multilabel *label498 (m:marker5)
+  977 set :drawBlock:cfg "ALQIJ]-silicon-smelter19"
+  978 jump *label478 always
+  979 multilabel *label499 (m:marker5)
+  980 set :drawBlock:cfg "AKFRJ^-multi-press20"
+  981 jump *label478 always
+  982 multilabel *label500 (m:marker5)
+  983 set :drawBlock:cfg "A©HFJ_-unloader21"
+  984 jump *label478 always
+  985 multilabel *label501 (m:marker5)
+  986 set :drawBlock:cfg "A{HDJa-inverted-sorter23"
+  987 jump *label478 always
+  988 multilabel *label502 (m:marker5)
+  989 set :drawBlock:cfg "AÀF@Lb-additive-reconstructor24"
+  990 jump *label478 always
+  991 multilabel *label503 (m:marker5)
+  992 set :drawBlock:cfg "AÁNBJc-multiplicative-reconstructor25"
+  993 jump *label478 always
+  994 multilabel *label504 (m:marker5)
+  995 set :drawBlock:cfg "AXPRJd-pulverizer26"
+  996 jump *label478 always
+  997 multilabel *label505 (m:marker5)
+  998 set :drawBlock:cfg "A~PPJe-overflow-gate27"
+  999 jump *label478 always
+ 1000 multilabel *label506 (m:marker5)
+ 1001 set :drawBlock:cfg "APTJf-power-node28"
+ 1002 jump *label478 always
+ 1003 multilabel *label507 (m:marker5)
+ 1004 set :drawBlock:cfg "A©RPJg-unloader29"
+ 1005 jump *label478 always
+ 1006 multilabel *label508 (m:marker5)
+ 1007 set :drawBlock:cfg "A¨SSJh-container30"
+ 1008 jump *label478 always
+ 1009 multilabel *label509 (m:marker5)
+ 1010 set :drawBlock:cfg "AXTPJi-pulverizer31"
+ 1011 jump *label478 always
+ 1012 multilabel *label510 (m:marker5)
+ 1013 set :drawBlock:cfg "A~RNJj-overflow-gate32"
+ 1014 jump *label478 always
+ 1015 multilabel *label511 (m:marker5)
+ 1016 set :drawBlock:cfg "A~RLJk-overflow-gate33"
+ 1017 jump *label478 always
+ 1018 multilabel *label512 (m:marker5)
+ 1019 set :drawBlock:cfg "AXTNJl-pulverizer34"
+ 1020 jump *label478 always
+ 1021 multilabel *label513 (m:marker5)
+ 1022 set :drawBlock:cfg "AXTLJm-pulverizer35"
+ 1023 jump *label478 always
+ 1024 label *label478
  1025 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1026 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)
  1027 label *label305

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
  1020 jump *label478 always
  1021 multilabel *label513 (m:marker5)
  1022 set :drawBlock:cfg "AXTLJm-pulverizer35"
-    * jump *label478 always
  1023 label *label478
  1024 setaddr :drawBlock*retaddr *label305 (h:*label305)
  1025 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    15 label *label10
    16 ubind @poly
    17 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
-    * label *label11
    18 jump *label10 equal .core null
-    * label *label12
    19 label *label13
    20 sensor *tmp45 processor2 @bufferSize
    21 jump *label16 greaterThanEq *tmp45 200
 
    37 op mul *tmp59 *tmp58 42
    38 op mul *tmp60 :animate:ratio 90
    39 op add *tmp57 *tmp59 *tmp60
-    * label *label25
    40 op mul *tmp64 *tmp58 237
    41 op mul *tmp65 :animate:ratio 120
    42 op add *tmp62 *tmp64 *tmp65
-    * label *label26
    43 op mul *tmp69 *tmp58 32
    44 op mul *tmp70 :animate:ratio 168
    45 op add *tmp67 *tmp69 *tmp70
-    * label *label27
    46 draw image *tmp57 *tmp62 @mega *tmp67 0
    47 jump *label28 notEqual :animate:ratio 1
    48 setaddr :drawHeader*retaddr *label30 (h:*label30)
    49 call *label4 *invalid :drawHeader*retval (m:*label30) (h:*label30)
    50 label *label30
    51 label *label28
-    * label *label29
    52 drawflush display1
    53 op add .animation .animation 1
-    * label *label22
    54 jump *label21 always
    55 label *label20
    56 draw clear 0 0 32
 
    65 jump *label34 equal *tmp77 false
    66 print "Locating ore..."
    67 draw print 22 201 @bottomLeft
-    * label *label37
    68 print "Locating ore..."
    69 draw print 23 201 @bottomLeft
-    * label *label38
-    * label *label36
    70 set :drawItem:item .nextBlock
    71 read :drawItem:current processor3 ".mapProgress"
    72 read :drawItem:target processor3 ".mapTotal"
 
    83 read *tmp98 processor3 ".mapSpots"
    84 print *tmp98
    85 draw print 174 193 @right
-    * label *label42
    86 print "x"
    87 read *tmp100 processor3 ".mapSpots"
    88 print *tmp100
    89 draw print 175 193 @right
-    * label *label43
-    * label *label41
-    * label *label40
-    * label *label39
    90 op sub :updateDisplay:y 171 35
    91 jump *label35 always
    92 label *label34
 
    94 set :drawMaterials:count .totalTargets
    95 print "Materials"
    96 draw print 22 201 @bottomLeft
-    * label *label49
    97 print "Materials"
    98 draw print 23 201 @bottomLeft
-    * label *label50
-    * label *label48
    99 set :updateDisplay:y 186
   100 jump *label51 equal :drawMaterials:count false
   101 set :drawMaterials:item @copper
 
   152 op add *tmp129 :updateDisplay:y 7
   153 print :drawMaterials:target
   154 draw print :drawItemColor.1:textX *tmp129 @right
-    * label *label68
   155 op add :drawText.7:x *tmp119 175
   156 print :drawMaterials:target
   157 draw print :drawText.7:x *tmp129 @right
-    * label *label69
-    * label *label67
   158 op add :drawItemColor.1:col :drawMaterials:col 1
   159 jump *label70 lessThan :drawItemColor.1:col 1
   160 set :drawItemColor.1:col 0
   161 op sub :drawItemColor.1:y :updateDisplay:y 15
   162 label *label70
-    * label *label71
-    * label *label66
-    * label *label65
   163 set :drawMaterials:col :drawItemColor.1:col
   164 set :updateDisplay:y :drawItemColor.1:y
   165 op sub :drawMaterials:count :drawMaterials:count 1
   166 jump *label72 greaterThan :drawMaterials:count 0
   167 jump *label55 always
   168 label *label72
-    * label *label73
   169 label *label63
-    * label *label64
-    * label *label54
   170 multijump *tmp107 0 0 (m:marker0)
   171 multilabel *label62 (m:marker0)
   172 label *label55
   173 label *label51
-    * label *label52
   174 jump *label74 greaterThanEq .totalTargets 3
   175 op sub *tmp137 3 .totalTargets
   176 op mul *tmp138 *tmp137 15
   177 op sub :updateDisplay:y :updateDisplay:y *tmp138
   178 label *label74
-    * label *label75
   179 op sub :updateDisplay:y :updateDisplay:y 5
   180 label *label46
-    * label *label47
   181 label *label35
-    * label *label33
   182 jump *label77 notEqual .nextFactory null
   183 jump *label76 always
   184 label *label77
-    * label *label78
   185 draw col %[white]
   186 print "Air Factory"
   187 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label80
   188 print "Air Factory"
   189 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label81
   190 op sub :drawTitleRow.2:y :updateDisplay:y 15
-    * label *label79
   191 sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progress
   192 jump *label82 notEqual :drawAirFactory:progress 0
   193 jump *label84 notEqual .nextFactory @flare
 
   204 op sub *tmp165 :updateDisplay:y 8
   205 print 15
   206 draw print 174 *tmp165 @right
-    * label *label89
   207 print 15
   208 draw print 175 *tmp165 @right
-    * label *label90
-    * label *label88
-    * label *label87
-    * label *label86
   209 op sub :updateDisplay:y :drawTitleRow.2:y 30
   210 jump *label85 always
   211 label *label84
 
   222 op sub *tmp188 :updateDisplay:y 8
   223 print 15
   224 draw print 174 *tmp188 @right
-    * label *label96
   225 print 15
   226 draw print 175 *tmp188 @right
-    * label *label97
-    * label *label95
   227 op sub :drawItemColor.3:y :updateDisplay:y 30
-    * label *label98
-    * label *label99
-    * label *label94
-    * label *label93
   228 sensor *tmp192 A¾BFLW-air-factory13 @silicon
   229 op mul *tmp198 *tmp192 4.2
   230 op min :drawItemColor.4:length 126 *tmp198
 
   238 op sub *tmp211 :updateDisplay:y 23
   239 print 30
   240 draw print 174 *tmp211 @right
-    * label *label103
   241 print 30
   242 draw print 175 *tmp211 @right
-    * label *label104
-    * label *label102
   243 op sub :drawItemColor.4:y :updateDisplay:y 45
-    * label *label105
-    * label *label106
-    * label *label101
-    * label *label100
   244 set :updateDisplay:y :drawItemColor.4:y
   245 label *label85
   246 jump *label83 always
 
   260 print *tmp216
   261 print "%"
   262 draw print 174 *tmp235 @right
-    * label *label110
   263 print *tmp216
   264 print "%"
   265 draw print 175 *tmp235 @right
-    * label *label111
-    * label *label109
-    * label *label108
-    * label *label107
   266 op sub :updateDisplay:y :drawTitleRow.2:y 30
   267 label *label83
   268 op sub :updateDisplay:y :updateDisplay:y 5
 
   270 jump *label115 notEqual .nextAddReco null
   271 jump *label114 always
   272 label *label115
-    * label *label116
   273 draw col %[white]
   274 print "Reconstructor"
   275 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label118
   276 print "Reconstructor"
   277 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label119
   278 op sub :drawTitleRow.3:y :updateDisplay:y 15
-    * label *label117
   279 sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 @progress
   280 jump *label120 notEqual :drawAddReco:progress 0
   281 sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite
 
   291 op sub *tmp263 :updateDisplay:y 8
   292 print 40
   293 draw print 174 *tmp263 @right
-    * label *label125
   294 print 40
   295 draw print 175 *tmp263 @right
-    * label *label126
-    * label *label124
   296 op sub :drawItemColor.6:y :updateDisplay:y 30
-    * label *label127
-    * label *label128
-    * label *label123
-    * label *label122
   297 sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon
   298 op mul *tmp273 *tmp267 3.1500000000000004
   299 op min :drawItemColor.7:length 126 *tmp273
 
   307 op sub *tmp286 :updateDisplay:y 23
   308 print 40
   309 draw print 174 *tmp286 @right
-    * label *label132
   310 print 40
   311 draw print 175 *tmp286 @right
-    * label *label133
-    * label *label131
   312 op sub :drawItemColor.7:y :updateDisplay:y 45
-    * label *label134
-    * label *label135
-    * label *label130
-    * label *label129
   313 set :updateDisplay:y :drawItemColor.7:y
   314 jump *label121 always
   315 label *label120
 
   327 print *tmp291
   328 print "%"
   329 draw print 174 *tmp310 @right
-    * label *label139
   330 print *tmp291
   331 print "%"
   332 draw print 175 *tmp310 @right
-    * label *label140
-    * label *label138
-    * label *label137
-    * label *label136
   333 op sub :updateDisplay:y :drawTitleRow.3:y 30
   334 label *label121
   335 op sub :updateDisplay:y :updateDisplay:y 5
 
   337 jump *label144 notEqual .nextMultiReco null
   338 jump *label143 always
   339 label *label144
-    * label *label145
   340 draw col %[white]
   341 op min :updateDisplay:y :updateDisplay:y 142
   342 print "Reconstructor"
   343 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label147
   344 print "Reconstructor"
   345 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label148
   346 op sub :drawTitleRow.4:y :updateDisplay:y 15
-    * label *label146
   347 sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconstructor25 @progress
   348 jump *label149 notEqual :drawMultiReco:progress 0
   349 sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metaglass
 
   359 op sub *tmp339 :updateDisplay:y 8
   360 print 40
   361 draw print 174 *tmp339 @right
-    * label *label154
   362 print 40
   363 draw print 175 *tmp339 @right
-    * label *label155
-    * label *label153
   364 op sub :drawItemColor.9:y :updateDisplay:y 30
-    * label *label156
-    * label *label157
-    * label *label152
-    * label *label151
   365 sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titanium
   366 op div *tmp349 *tmp343 0.6349206349206349
   367 op min :drawItemColor.10:length 126 *tmp349
 
   375 op sub *tmp362 :updateDisplay:y 23
   376 print 80
   377 draw print 174 *tmp362 @right
-    * label *label161
   378 print 80
   379 draw print 175 *tmp362 @right
-    * label *label162
-    * label *label160
   380 op sub :drawItemColor.10:y :updateDisplay:y 45
-    * label *label163
-    * label *label164
-    * label *label159
-    * label *label158
   381 sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silicon
   382 op div *tmp372 *tmp366 1.0317460317460319
   383 op min :drawItemColor.11:length 126 *tmp372
 
   391 op sub *tmp385 :updateDisplay:y 38
   392 print 130
   393 draw print 174 *tmp385 @right
-    * label *label168
   394 print 130
   395 draw print 175 *tmp385 @right
-    * label *label169
-    * label *label167
   396 op sub :drawItemColor.11:y :updateDisplay:y 60
-    * label *label170
-    * label *label171
-    * label *label166
-    * label *label165
   397 set :updateDisplay:y :drawItemColor.11:y
   398 jump *label150 always
   399 label *label149
 
   411 print *tmp390
   412 print "%"
   413 draw print 174 *tmp409 @right
-    * label *label175
   414 print *tmp390
   415 print "%"
   416 draw print 175 *tmp409 @right
-    * label *label176
-    * label *label174
-    * label *label173
-    * label *label172
   417 op sub :updateDisplay:y :drawTitleRow.4:y 45
   418 label *label150
   419 op sub :updateDisplay:y :updateDisplay:y 5
 
   422 jump *label180 equal *tmp413 false
   423 jump *label179 always
   424 label *label180
-    * label *label181
   425 draw col %[white]
   426 print "Builder"
   427 draw print 22 :updateDisplay:y @bottomLeft
-    * label *label183
   428 print "Builder"
   429 draw print 23 :updateDisplay:y @bottomLeft
-    * label *label184
   430 op sub :drawTitleRow.5:y :updateDisplay:y 15
-    * label *label182
   431 jump *label185 notEqual .transportItem null
   432 draw col %[white]
   433 op sub *tmp433 :updateDisplay:y 10
 
   439 op sub *tmp435 :updateDisplay:y 8
   440 print .transportTarget
   441 draw print 174 *tmp435 @right
-    * label *label191
   442 print .transportTarget
   443 draw print 175 *tmp435 @right
-    * label *label192
-    * label *label190
   444 op sub :drawItemColor.13:y :updateDisplay:y 30
-    * label *label193
-    * label *label194
-    * label *label189
-    * label *label188
-    * label *label187
   445 set :updateDisplay:y :drawItemColor.13:y
   446 jump *label186 always
   447 label *label185
 
   464 op sub *tmp463 :updateDisplay:y 8
   465 print .transportTarget
   466 draw print 174 *tmp463 @right
-    * label *label199
   467 print .transportTarget
   468 draw print 175 *tmp463 @right
-    * label *label200
-    * label *label198
   469 op sub :drawItemColor.14:y :updateDisplay:y 30
-    * label *label201
-    * label *label202
-    * label *label197
-    * label *label196
-    * label *label195
   470 set :updateDisplay:y :drawItemColor.14:y
   471 label *label186
   472 label *label179
   473 jump *label204 greaterThanEq :updateDisplay:y 20
   474 jump *label203 always
   475 label *label204
-    * label *label205
   476 jump *label206 notEqual AJTJK-battery1 null
   477 jump *label203 always
   478 label *label206
-    * label *label207
   479 draw col %[white]
   480 print "Power"
   481 draw print 22 20 @bottomLeft
-    * label *label209
   482 print "Power"
   483 draw print 23 20 @bottomLeft
-    * label *label210
-    * label *label208
   484 sensor :drawPower:power AJTJK-battery1 @totalPower
   485 op mul *tmp474 :drawPower:power 100
   486 op idiv *tmp476 *tmp474 4000
 
   495 print *tmp476
   496 print "%"
   497 draw print 174 12 @right
-    * label *label213
   498 print *tmp476
   499 print "%"
   500 draw print 175 12 @right
-    * label *label214
-    * label *label212
-    * label *label211
   501 label *label203
   502 drawflush display1
-    * label *label31
   503 label *label21
   504 jump *label19 always
   505 label *label18
 
   510 draw col %[gold]
   511 print "Resources"
   512 draw print 11 206 @left
-    * label *label223
   513 print "Resources"
   514 draw print 12 206 @left
-    * label *label224
-    * label *label222
   515 draw col %[white]
-    * label *label403
   516 draw image 12 182 @copper 15 0
-    * label *label404
-    * label *label407
   517 draw image 12 161 @lead 15 0
-    * label *label408
-    * label *label411
   518 draw image 12 140 @sand 15 0
-    * label *label412
-    * label *label415
   519 draw image 12 119 @coal 15 0
-    * label *label416
-    * label *label419
   520 draw image 12 98 @graphite 15 0
-    * label *label420
-    * label *label423
   521 draw image 12 77 @silicon 15 0
-    * label *label424
-    * label *label427
   522 draw image 12 56 @titanium 15 0
-    * label *label428
-    * label *label431
   523 draw image 12 35 @metaglass 15 0
-    * label *label432
-    * label *label435
   524 draw image 12 14 @thorium 15 0
-    * label *label436
-    * label *label227
   525 label *label220
-    * label *label221
   526 setaddr :drawHeader*retaddr *label237 (h:*label237)
   527 call *label4 *invalid :drawHeader*retval (m:*label237) (h:*label237)
   528 label *label237
 
   530 jump *label238 lessThanEq .lastTail :displayStorage:tail
   531 jump *label219 always
   532 label *label238
-    * label *label239
   533 read :displayStorage:accumulator bank2 .lastTail
   534 op add :displayStorage:x 25 .lastTail
   535 op sub :displayStorage:y.1 190 8
   536 set :displayStorage:i 0
-    * label *label240
   537 label *label401
   538 op and *tmp513 :displayStorage:accumulator 0b11111
   539 op sub :displayStorage:value *tmp513 8
 
   542 draw rect :displayStorage:x :displayStorage:y.1 1 :displayStorage:value
   543 op sub :displayStorage:y.1 :displayStorage:y.1 21
   544 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label241
   545 op add :displayStorage:i :displayStorage:i 1
   546 jump *label401 lessThan :displayStorage:i 9
-    * label *label242
   547 drawflush display1
   548 op add .lastTail .lastTail 1
   549 label *label219
 
   558 draw col %[gold]
   559 print "Base map"
   560 draw print 90 206 @center
-    * label *label252
   561 print "Base map"
   562 draw print 91 206 @center
-    * label *label253
-    * label *label251
   563 draw col %[white]
   564 draw reset
   565 draw translate 90 105
   566 draw scale 7.333333333333333 7.333333333333333
-    * label *label254
   567 draw image 0 0 @core-shard 6 0
   568 drawflush display1
   569 set :displayBaseMap:limit 5
 
   572 draw reset
   573 draw translate 90 105
   574 draw scale 7.333333333333333 7.333333333333333
-    * label *label255
   575 label *label250
   576 set :displayBaseMap:counter 0
   577 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
 
   717 jump *label296 notEqual .scrap false
   718 jump *label258 always
   719 label *label296
-    * label *label297
   720 label *label294
-    * label *label295
   721 jump *label298 notEqual :displayBaseMap:counter :displayBaseMap:limit
   722 setaddr :drawHeader*retaddr *label300 (h:*label300)
   723 call *label4 *invalid :drawHeader*retval (m:*label300) (h:*label300)
 
   725 draw reset
   726 draw translate 90 105
   727 draw scale 7.333333333333333 7.333333333333333
-    * label *label301
   728 set :displayBaseMap:counter 0
   729 jump *label299 always
   730 label *label298
 
   848 call *label5 *invalid :drawBlock*retval (m:*label305) (h:*label305)
   849 label *label305
   850 label *label303
-    * label *label304
   851 sensor *tmp546 switch1 @enabled
   852 jump *label306 equal *tmp546 false
   853 draw clear 0 0 32
   854 drawflush display1
   855 jump *label258 always
   856 label *label306
-    * label *label307
   857 drawflush display1
-    * label *label257
   858 multijump *tmp530 0 0 (m:marker2)
   859 multilabel *label293 (m:marker2)
   860 label *label258
-    * label *label247
   861 jump *label246 always
   862 label *label245
   863 op sub :displayLog:page .page 3
 
   875 draw col %[gold]
   876 print "Build records"
   877 draw print 4 206 @left
-    * label *label312
   878 print "Build records"
   879 draw print 5 206 @left
-    * label *label313
-    * label *label311
   880 op sub *tmp562 .page 2
   881 print *tmp562
   882 print "/"
   883 print :displayLog:pages
   884 draw print 172 206 @right
-    * label *label314
   885 set .lastRecord :displayLog:start
   886 label *label309
-    * label *label310
   887 setaddr :drawHeader*retaddr *label315 (h:*label315)
   888 call *label4 *invalid :drawHeader*retval (m:*label315) (h:*label315)
   889 label *label315
   890 op sub :displayLog:position .lastRecord 1
-    * label *label316
   891 jump *label318 lessThan :displayLog:position :displayLog:stop
   892 label *label402
   893 read :displayLog:record bank1 :displayLog:position
 
   918 op add *tmp589 :displayRecord:y 2
   919 print :displayRecord:s
   920 draw print *tmp588 *tmp589 @right
-    * label *label324
-    * label *label319
   921 drawflush display1
   922 sensor *tmp590 switch1 @enabled
   923 jump *label325 equal *tmp590 false
   924 jump *label318 always
   925 label *label325
-    * label *label326
-    * label *label317
   926 op sub :displayLog:position :displayLog:position 1
   927 jump *label402 greaterThanEq :displayLog:position :displayLog:stop
   928 label *label318
   929 op add .lastRecord :displayLog:stop 1
   930 drawflush display1
-    * label *label308
   931 label *label246
   932 label *label218
   933 label *label19
   934 label *label16
-    * label *label17
   935 jump *label327 lessThanEq .megas 0
   936 print "[gold]All done.[]\nNothing more to see here.\nGo home."
   937 print "\n"
 
   955 print .status3
   956 print "\n"
   957 printflush message1
-    * label *label329
   958 label *label328
   959 sensor .pageSwitched switch1 @enabled
   960 jump *label330 equal .pageSwitched false
 
   965 draw reset
   966 draw clear 0 0 32
   967 label *label330
-    * label *label331
-    * label *label14
   968 jump *label13 always
-    * label *label15
-    * label *label9
   969 wait 1e12
   970 jump *label8 always
   971 end
 
   986 print *tmp609
   987 print :drawHeader:s
   988 draw print 25 71 @center
-    * label *label338
   989 print :drawHeader:m
   990 print ":"
   991 print *tmp609
   992 print :drawHeader:s
   993 draw print 26 71 @center
-    * label *label339
-    * label *label337
   994 draw col %[white]
   995 draw reset
   996 jump *label334 always
 
   998 draw col %[gold]
   999 print "Goal"
  1000 draw print 42 261 @bottom
-    * label *label341
  1001 print "Goal"
  1002 draw print 43 261 @bottom
-    * label *label342
-    * label *label340
  1003 draw col %[white]
  1004 jump *label343 equal .missing false
  1005 draw image 16 264 .missing 12 0
  1006 set .missing false
  1007 label *label343
-    * label *label344
  1008 jump *label345 equal .nextMultiReco false
  1009 draw image 42 237 .nextMultiReco 32 0
  1010 jump *label346 always
 
  1020 jump *label349 notEqual :drawHeader:count 2
  1021 set :drawHeader:x 27
  1022 set :drawHeader:goal .nextBlock
-    * label *label440
  1023 jump *label441 equal :drawHeader:goal null
  1024 draw image 27 240 :drawHeader:goal 25 0
  1025 op add :drawHeader:x 27 30
  1026 label *label441
-    * label *label442
-    * label *label443
  1027 set :drawHeader:goal .nextFactory
-    * label *label446
  1028 jump *label447 equal :drawHeader:goal null
  1029 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  1030 op add :drawHeader:x :drawHeader:x 30
  1031 label *label447
-    * label *label448
-    * label *label449
  1032 set :drawHeader:goal .nextAddReco
-    * label *label452
  1033 jump *label453 equal :drawHeader:goal null
  1034 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  1035 label *label453
-    * label *label454
-    * label *label455
-    * label *label353
  1036 jump *label350 always
  1037 label *label349
  1038 jump *label359 notEqual :drawHeader:count 1
  1039 set :drawHeader:goal.1 .nextBlock
-    * label *label459
  1040 jump *label460 equal :drawHeader:goal.1 null
  1041 draw image 42 237 :drawHeader:goal.1 32 0
  1042 jump *label363 always
  1043 label *label460
-    * label *label461
-    * label *label462
  1044 set :drawHeader:goal.1 .nextFactory
-    * label *label465
  1045 jump *label466 equal :drawHeader:goal.1 null
  1046 draw image 42 237 :drawHeader:goal.1 32 0
  1047 jump *label363 always
  1048 label *label466
-    * label *label467
-    * label *label468
  1049 set :drawHeader:goal.1 .nextAddReco
-    * label *label471
  1050 jump *label472 equal :drawHeader:goal.1 null
  1051 draw image 42 237 :drawHeader:goal.1 32 0
  1052 label *label472
-    * label *label473
-    * label *label474
  1053 label *label363
  1054 label *label359
-    * label *label360
  1055 label *label350
  1056 label *label348
  1057 label *label346
 
  1076 print *tmp638
  1077 print ")"
  1078 draw print 174 272 @topRight
-    * label *label371
  1079 jump *label372 equal A¨SSJh-container30 null
  1080 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap
  1081 op log10 *tmp642 :drawHeader:count.1
 
  1083 print "x"
  1084 print :drawHeader:count.1
  1085 draw print 174 255 @topRight
-    * label *label374
  1086 op mul *tmp645 7 :drawHeader:len
  1087 op sub *tmp646 154 *tmp645
  1088 draw image *tmp646 246 @scrap 12 0
 
  1092 print "x"
  1093 print :drawHeader:count.1
  1094 draw print 124 255 @topRight
-    * label *label375
  1095 op mul *tmp651 7 :drawHeader:len
  1096 op sub *tmp652 104 *tmp651
  1097 draw image *tmp652 246 @sand 12 0
 
  1105 print "x"
  1106 print :drawHeader:count.2
  1107 draw print 174 255 @topRight
-    * label *label378
  1108 op mul *tmp659 7 :drawHeader:len.1
  1109 op sub *tmp660 154 *tmp659
  1110 draw image *tmp660 246 @titanium 12 0
  1111 label *label376
-    * label *label377
  1112 jump *label379 equal .thoriumContainer false
  1113 sensor :drawHeader:count.3 .thoriumContainer @thorium
  1114 op log10 *tmp663 :drawHeader:count.3
 
  1116 print "x"
  1117 print :drawHeader:count.3
  1118 draw print 124 255 @topRight
-    * label *label381
  1119 op mul *tmp666 7 :drawHeader:len.2
  1120 op sub *tmp667 104 *tmp666
  1121 draw image *tmp667 246 @thorium 12 0
  1122 label *label379
-    * label *label380
  1123 label *label373
  1124 set :drawHeader:x.4 174
  1125 draw col %[white]
 
  1129 print "x"
  1130 print :drawUnitCount:count
  1131 draw print 174 229 @right
-    * label *label385
  1132 op sub :drawHeader:x.4 174 30
  1133 label *label383
-    * label *label384
-    * label *label382
  1134 set :drawUnitCount.1:count .monos
  1135 jump *label387 lessThanEq :drawUnitCount.1:count 0
  1136 op sub *tmp673 :drawHeader:x.4 20
 
  1138 print "x"
  1139 print :drawUnitCount.1:count
  1140 draw print :drawHeader:x.4 229 @right
-    * label *label389
  1141 op sub :drawHeader:x.4 :drawHeader:x.4 30
  1142 label *label387
-    * label *label388
-    * label *label386
  1143 set :drawUnitCount.2:count .flares
  1144 jump *label391 lessThanEq :drawUnitCount.2:count 0
  1145 op sub *tmp676 :drawHeader:x.4 20
 
  1147 print "x"
  1148 print :drawUnitCount.2:count
  1149 draw print :drawHeader:x.4 229 @right
-    * label *label393
  1150 label *label391
-    * label *label392
-    * label *label390
  1151 label *label334
-    * label *label332
  1152 return :drawHeader*retaddr
  1153 end
  1154 label *label5
 
  1164 read *tmp693 :drawBlock:cfg 5
  1165 op sub :unpackCfg:ind *tmp693 74
  1166 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label396
-    * label *label395
  1167 op shl *tmp703 1 :unpackCfg:ind
  1168 op and :drawBlock:built .blocksBuilt *tmp703
  1169 op add *tmp705 :drawBlock:built .pageSwitched
  1170 jump *label397 notEqual *tmp705 0
  1171 jump *label394 always
  1172 label *label397
-    * label *label398
  1173 select *tmp708 notEqual :drawBlock:built false %[white] %80ff8080
  1174 draw col *tmp708
  1175 op mul *tmp711 2 :unpackCfg:size

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-11 instructions):
 
   163 set :drawMaterials:col :drawItemColor.1:col
   164 set :updateDisplay:y :drawItemColor.1:y
   165 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label72 greaterThan :drawMaterials:count 0
-    * jump *label55 always
+  166 jump *label55 lessThanEq :drawMaterials:count 0
   167 label *label72
   168 label *label63
   169 multijump *tmp107 0 0 (m:marker0)
 
   178 op sub :updateDisplay:y :updateDisplay:y 5
   179 label *label46
   180 label *label35
-    * jump *label77 notEqual .nextFactory null
-    * jump *label76 always
+  181 jump *label76 equal .nextFactory null
   182 label *label77
   183 draw col %[white]
   184 print "Air Factory"
 
   265 label *label83
   266 op sub :updateDisplay:y :updateDisplay:y 5
   267 label *label76
-    * jump *label115 notEqual .nextAddReco null
-    * jump *label114 always
+  268 jump *label114 equal .nextAddReco null
   269 label *label115
   270 draw col %[white]
   271 print "Reconstructor"
 
   331 label *label121
   332 op sub :updateDisplay:y :updateDisplay:y 5
   333 label *label114
-    * jump *label144 notEqual .nextMultiReco null
-    * jump *label143 always
+  334 jump *label143 equal .nextMultiReco null
   335 label *label144
   336 draw col %[white]
   337 op min :updateDisplay:y :updateDisplay:y 142
 
   415 op sub :updateDisplay:y :updateDisplay:y 5
   416 label *label143
   417 sensor *tmp413 @unit @dead
-    * jump *label180 equal *tmp413 false
-    * jump *label179 always
+  418 jump *label179 notEqual *tmp413 false
   419 label *label180
   420 draw col %[white]
   421 print "Builder"
 
   465 set :updateDisplay:y :drawItemColor.14:y
   466 label *label186
   467 label *label179
-    * jump *label204 greaterThanEq :updateDisplay:y 20
-    * jump *label203 always
+  468 jump *label203 lessThan :updateDisplay:y 20
   469 label *label204
-    * jump *label206 notEqual AJTJK-battery1 null
-    * jump *label203 always
+  470 jump *label203 equal AJTJK-battery1 null
   471 label *label206
   472 draw col %[white]
   473 print "Power"
 
   520 call *label4 *invalid :drawHeader*retval (m:*label237) (h:*label237)
   521 label *label237
   522 drawflush display1
-    * jump *label238 lessThanEq .lastTail :displayStorage:tail
-    * jump *label219 always
+  523 jump *label219 greaterThan .lastTail :displayStorage:tail
   524 label *label238
   525 read :displayStorage:accumulator bank2 .lastTail
   526 op add :displayStorage:x 25 .lastTail
 
   706 setaddr *tmp530 *label293
   707 label *label256
   708 jump *label294 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
-    * jump *label296 notEqual .scrap false
-    * jump *label258 always
+  709 jump *label258 equal .scrap false
   710 label *label296
   711 label *label294
   712 jump *label298 notEqual :displayBaseMap:counter :displayBaseMap:limit
 
   911 draw print *tmp588 *tmp589 @right
   912 drawflush display1
   913 sensor *tmp590 switch1 @enabled
-    * jump *label325 equal *tmp590 false
-    * jump *label318 always
+  914 jump *label318 notEqual *tmp590 false
   915 label *label325
   916 op sub :displayLog:position :displayLog:position 1
   917 jump *label402 greaterThanEq :displayLog:position :displayLog:stop
 
  1157 op shl *tmp703 1 :unpackCfg:ind
  1158 op and :drawBlock:built .blocksBuilt *tmp703
  1159 op add *tmp705 :drawBlock:built .pageSwitched
-    * jump *label397 notEqual *tmp705 0
-    * jump *label394 always
+ 1160 jump *label394 equal *tmp705 0
  1161 label *label397
  1162 select *tmp708 notEqual :drawBlock:built false %[white] %80ff8080
  1163 draw col *tmp708

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   164 set :updateDisplay:y :drawItemColor.1:y
   165 op sub :drawMaterials:count :drawMaterials:count 1
   166 jump *label55 lessThanEq :drawMaterials:count 0
-    * label *label72
   167 label *label63
   168 multijump *tmp107 0 0 (m:marker0)
   169 multilabel *label62 (m:marker0)
 
   178 label *label46
   179 label *label35
   180 jump *label76 equal .nextFactory null
-    * label *label77
   181 draw col %[white]
   182 print "Air Factory"
   183 draw print 22 :updateDisplay:y @bottomLeft
 
   264 op sub :updateDisplay:y :updateDisplay:y 5
   265 label *label76
   266 jump *label114 equal .nextAddReco null
-    * label *label115
   267 draw col %[white]
   268 print "Reconstructor"
   269 draw print 22 :updateDisplay:y @bottomLeft
 
   329 op sub :updateDisplay:y :updateDisplay:y 5
   330 label *label114
   331 jump *label143 equal .nextMultiReco null
-    * label *label144
   332 draw col %[white]
   333 op min :updateDisplay:y :updateDisplay:y 142
   334 print "Reconstructor"
 
   412 label *label143
   413 sensor *tmp413 @unit @dead
   414 jump *label179 notEqual *tmp413 false
-    * label *label180
   415 draw col %[white]
   416 print "Builder"
   417 draw print 22 :updateDisplay:y @bottomLeft
 
   461 label *label186
   462 label *label179
   463 jump *label203 lessThan :updateDisplay:y 20
-    * label *label204
   464 jump *label203 equal AJTJK-battery1 null
-    * label *label206
   465 draw col %[white]
   466 print "Power"
   467 draw print 22 20 @bottomLeft
 
   514 label *label237
   515 drawflush display1
   516 jump *label219 greaterThan .lastTail :displayStorage:tail
-    * label *label238
   517 read :displayStorage:accumulator bank2 .lastTail
   518 op add :displayStorage:x 25 .lastTail
   519 op sub :displayStorage:y.1 190 8
 
   699 label *label256
   700 jump *label294 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
   701 jump *label258 equal .scrap false
-    * label *label296
   702 label *label294
   703 jump *label298 notEqual :displayBaseMap:counter :displayBaseMap:limit
   704 setaddr :drawHeader*retaddr *label300 (h:*label300)
 
   903 drawflush display1
   904 sensor *tmp590 switch1 @enabled
   905 jump *label318 notEqual *tmp590 false
-    * label *label325
   906 op sub :displayLog:position :displayLog:position 1
   907 jump *label402 greaterThanEq :displayLog:position :displayLog:stop
   908 label *label318
 
  1148 op and :drawBlock:built .blocksBuilt *tmp703
  1149 op add *tmp705 :drawBlock:built .pageSwitched
  1150 jump *label394 equal *tmp705 0
-    * label *label397
  1151 select *tmp708 notEqual :drawBlock:built false %[white] %80ff8080
  1152 draw col *tmp708
  1153 op mul *tmp711 2 :unpackCfg:size

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
    51 label *label28
    52 drawflush display1
    53 op add .animation .animation 1
-    * jump *label21 always
+   54 jump *label19 always
    55 label *label20
    56 draw clear 0 0 32
    57 setaddr :drawHeader*retaddr *label32 (h:*label32)
 
   203 print 15
   204 draw print 175 *tmp165 @right
   205 op sub :updateDisplay:y :drawTitleRow.2:y 30
-    * jump *label85 always
+  206 jump *label83 always
   207 label *label84
   208 sensor *tmp169 A¾BFLW-air-factory13 @lead
   209 op mul *tmp175 *tmp169 8.4
 
   513 call *label4 *invalid :drawHeader*retval (m:*label237) (h:*label237)
   514 label *label237
   515 drawflush display1
-    * jump *label219 greaterThan .lastTail :displayStorage:tail
+  516 jump *label218 greaterThan .lastTail :displayStorage:tail
   517 read :displayStorage:accumulator bank2 .lastTail
   518 op add :displayStorage:x 25 .lastTail
   519 op sub :displayStorage:y.1 190 8
 
   698 setaddr *tmp530 *label293
   699 label *label256
   700 jump *label294 notEqual :displayBaseMap:cfg "AXPRJd-pulverizer26"
-    * jump *label258 equal .scrap false
+  701 jump *label246 equal .scrap false
   702 label *label294
   703 jump *label298 notEqual :displayBaseMap:counter :displayBaseMap:limit
   704 setaddr :drawHeader*retaddr *label300 (h:*label300)
 
   834 jump *label306 equal *tmp546 false
   835 draw clear 0 0 32
   836 drawflush display1
-    * jump *label258 always
+  837 jump *label246 always
   838 label *label306
   839 drawflush display1
   840 multijump *tmp530 0 0 (m:marker2)
 
   937 printflush message1
   938 label *label328
   939 sensor .pageSwitched switch1 @enabled
-    * jump *label330 equal .pageSwitched false
+  940 jump *label13 equal .pageSwitched false
   941 control enabled switch1 false
   942 op add *tmp600 .page 1
   943 op mod .page *tmp600 .numPages
 
   973 draw print 26 71 @center
   974 draw col %[white]
   975 draw reset
-    * jump *label334 always
+  976 return :drawHeader*retaddr
   977 label *label333
   978 draw col %[gold]
   979 print "Goal"
 
  1010 op add :drawHeader:x :drawHeader:x 30
  1011 label *label447
  1012 set :drawHeader:goal .nextAddReco
-    * jump *label453 equal :drawHeader:goal null
+ 1013 jump *label350 equal :drawHeader:goal null
  1014 draw image :drawHeader:x 240 :drawHeader:goal 25 0
  1015 label *label453
  1016 jump *label350 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-5 instructions):
 
   238 draw print 175 *tmp211 @right
   239 op sub :drawItemColor.4:y :updateDisplay:y 45
   240 set :updateDisplay:y :drawItemColor.4:y
-    * label *label85
   241 jump *label83 always
   242 label *label82
   243 op idiv *tmp216 :drawAirFactory:progress 0.01
 
   485 draw print 175 12 @right
   486 label *label203
   487 drawflush display1
-    * label *label21
   488 jump *label19 always
   489 label *label18
   490 jump *label217 notEqual .page 1
 
   528 jump *label401 lessThan :displayStorage:i 9
   529 drawflush display1
   530 op add .lastTail .lastTail 1
-    * label *label219
   531 jump *label218 always
   532 label *label217
   533 jump *label245 notEqual .page 2
 
   836 drawflush display1
   837 multijump *tmp530 0 0 (m:marker2)
   838 multilabel *label293 (m:marker2)
-    * label *label258
   839 jump *label246 always
   840 label *label245
   841 op sub :displayLog:page .page 3
 
   940 drawflush null
   941 draw reset
   942 draw clear 0 0 32
-    * label *label330
   943 jump *label13 always
-    * wait 1e12
-    * jump *label8 always
-    * end
   944 label *label4
   945 draw reset
   946 draw color 0 0 32 255
 
  1004 set :drawHeader:goal .nextAddReco
  1005 jump *label350 equal :drawHeader:goal null
  1006 draw image :drawHeader:x 240 :drawHeader:goal 25 0
-    * label *label453
  1007 jump *label350 always
  1008 label *label349
  1009 jump *label359 notEqual :drawHeader:count 1
 
  1119 print :drawUnitCount.2:count
  1120 draw print :drawHeader:x.4 229 @right
  1121 label *label391
-    * label *label334
  1122 return :drawHeader*retaddr
-    * end
  1123 label *label5
  1124 read *tmp678 :drawBlock:cfg 1
  1125 op sub *tmp679 *tmp678 74
 
  1144 draw image *tmp683 *tmp687 :unpackCfg:type *tmp711 *tmp712
  1145 label *label394
  1146 return :drawBlock*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    11 set .animation -15
    12 set .pageSwitched false
    13 set *signature "0:v1"
-    * label *label8
    14 label *label10
    15 ubind @poly
    16 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    13 set *signature "0:v1"
    14 label *label10
    15 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
+   16 ulocate building core false @copper 0 0 0 .core
    17 jump *label10 equal .core null
    18 label *label13
    19 sensor *tmp45 processor2 @bufferSize

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
   908 label *label19
   909 label *label16
   910 jump *label327 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  911 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   912 printflush message1
   913 jump *label328 always
   914 label *label327
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  915 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  916 format .nextBlock
+  917 format .status1
+  918 format .status2
+  919 format .item2
+  920 format .block2
+  921 format .status3
   922 printflush message1
   923 label *label328
   924 sensor .pageSwitched switch1 @enabled
 
  1022 op mod :drawHeader:s.1 :drawHeader:t.1 60
  1023 select *tmp633 lessThan :drawHeader:s.1 10 "0" ""
  1024 print :drawHeader:m.1
-    * print ":"
-    * print *tmp633
-    * print :drawHeader:s.1
+ 1025 print ":{0}{0} (x{0}.{0})"
+ 1026 format *tmp633
+ 1027 format :drawHeader:s.1
  1028 op mul *tmp634 10 :drawHeader:t.1
  1029 op div *tmp635 *tmp634 :drawHeader:tt
  1030 op round :drawHeader:ratio *tmp635
  1031 op idiv *tmp637 :drawHeader:ratio 10
  1032 op mod *tmp638 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp637
-    * print "."
-    * print *tmp638
-    * print ")"
+ 1033 format *tmp637
+ 1034 format *tmp638
  1035 draw print 174 272 @topRight
  1036 jump *label372 equal A¨SSJh-container30 null
  1037 sensor :drawHeader:count.1 A¨SSJh-container30 @scrap

Final code before resolving virtual instructions:

        label *label7                                                Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp39 processor3 "*signature"                          ...
    1:  jump *label7 notEqual *tmp39 "3290b8c661787058:v1"           ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 4                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote var
    6:  set .monos 0                                                 ...
    7:  set .flares 0                                                ...
    8:  set .polys 1                                                 ...
    9:  set .megas 0                                                 ...
   10:  set .animation -15                                           Display.mnd: var animation = -15;
   11:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   12:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label10                                               Display.mnd: do
   13:  ubind @poly                                                  Display.mnd: ubind(@poly);
   14:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   15:  jump *label10 equal .core null                               Display.mnd: do
        label *label13                                               Display.mnd: while true do
   16:  sensor *tmp45 processor2 @bufferSize                         Display.mnd: if display.@bufferSize < 200 then
   17:  jump *label16 greaterThanEq *tmp45 200                       ...
   18:  jump *label18 notEqual .page 0                               Display.mnd: if page == 0 then
   19:  jump *label20 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   20:  jump *label23 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   21:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   22:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   23:  jump *label24 always 0 0                                     Display.mnd: if animation < 0 then
        label *label23                                               ...
   24:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   25:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label24                                               Display.mnd: if animation < 0 then
   26:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   27:  op div *tmp54 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   28:  op min *tmp55 *tmp54 1                                       ...
   29:  op max :animate:ratio 0 *tmp55                               ...
   30:  op sub *tmp58 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   31:  op mul *tmp59 *tmp58 42                                      ...
   32:  op mul *tmp60 :animate:ratio 90                              ...
   33:  op add *tmp57 *tmp59 *tmp60                                  ...
   34:  op mul *tmp64 *tmp58 237                                     ...
   35:  op mul *tmp65 :animate:ratio 120                             ...
   36:  op add *tmp62 *tmp64 *tmp65                                  ...
   37:  op mul *tmp69 *tmp58 32                                      ...
   38:  op mul *tmp70 :animate:ratio 168                             ...
   39:  op add *tmp67 *tmp69 *tmp70                                  ...
   40:  draw image *tmp57 *tmp62 @mega *tmp67 0 0                    Display.mnd: image(x, y, @mega, size, 0);
   41:  jump *label28 notEqual :animate:ratio 1                      Display.mnd: if ratio == 1 then drawHeader(); end;
   42:  setaddr :drawHeader*retaddr *label30                         ...
   43:  call *label4 *invalid :drawHeader*retval                     ...
        label *label30                                               ...
        label *label28                                               ...
   44:  drawflush display1                                           Display.mnd: drawflush(display1);
   45:  op add .animation .animation 1                               Display.mnd: animate();
   46:  jump *label19 always 0 0                                     Display.mnd: if megas > 0 then
        label *label20                                               ...
   47:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   48:  setaddr :drawHeader*retaddr *label32                         Display.mnd: drawHeader();
   49:  call *label4 *invalid :drawHeader*retval                     ...
        label *label32                                               ...
   50:  set :updateDisplay:y 201                                     Display.mnd: var y = HEADER2_Y;
   51:  set :drawMaterials:col 0                                     Display.mnd: var count, col = 0;
   52:  op equal *tmp75 .nextBlock @ore-thorium                      Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
   53:  op equal *tmp76 .nextBlock @ore-titanium                     ...
   54:  op or *tmp77 *tmp75 *tmp76                                   ...
   55:  jump *label34 equal *tmp77 false                             ...
   56:  print "Locating ore..."                                      Display.mnd: print(text);
   57:  draw print 22 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   58:  print "Locating ore..."                                      Display.mnd: print(text);
   59:  draw print 23 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   60:  set :drawItem:item .nextBlock                                Display.mnd: drawItem(in 0, in out y, 1, nextBlock, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
   61:  read :drawItem:current processor3 ".mapProgress"             ...
   62:  read :drawItem:target processor3 ".mapTotal"                 ...
   63:  op mul *tmp83 126 :drawItem:current                          Display.mnd: var length = min(barLength, barLength * current / target);
   64:  op div *tmp84 *tmp83 :drawItem:target                        ...
   65:  op min :drawItemColor:length 126 *tmp84                      ...
   66:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   67:  draw image 11 191 :drawItem:item 16 0 0                      Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   68:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
   69:  draw rect 22 186 :drawItemColor:length 10 0 0                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   70:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
   71:  draw lineRect 22 186 126 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   72:  print "x"                                                    Display.mnd: print(text);
   73:  read *tmp98 processor3 ".mapSpots"                           ...
   74:  print *tmp98                                                 ...
   75:  draw print 174 193 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
   76:  print "x"                                                    Display.mnd: print(text);
   77:  read *tmp100 processor3 ".mapSpots"                          ...
   78:  print *tmp100                                                ...
   79:  draw print 175 193 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
   80:  op sub :updateDisplay:y 171 35                               Display.mnd: y -= 2 * ROW_HEIGHT + SEPARATOR_Y;
   81:  jump *label35 always 0 0                                     Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
        label *label34                                               ...
   82:  jump *label46 equal .nextBlock null                          Display.mnd: elsif nextBlock != null then
   83:  set :drawMaterials:count .totalTargets                       Display.mnd: count = totalTargets;
   84:  print "Materials"                                            Display.mnd: print(text);
   85:  draw print 22 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   86:  print "Materials"                                            Display.mnd: print(text);
   87:  draw print 23 201 @bottomLeft 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
   88:  set :updateDisplay:y 186                                     Display.mnd: drawTitleRow(in out y, @bottomLeft, "Materials");
   89:  jump *label51 equal :drawMaterials:count false               Display.mnd: if count then
   90:  set :drawMaterials:item @copper                              Display.mnd: for var item, target in
   91:  set :drawMaterials:target .targetCopper                      ...
   92:  setaddr *tmp107 *label56                                     ...
   93:  jump *label53 always 0 0                                     ...
        multilabel *label56                                          ...
   94:  set :drawMaterials:item @lead                                ...
   95:  set :drawMaterials:target .targetLead                        ...
   96:  setaddr *tmp107 *label57                                     ...
   97:  jump *label53 always 0 0                                     ...
        multilabel *label57                                          ...
   98:  set :drawMaterials:item @graphite                            ...
   99:  set :drawMaterials:target .targetGraphite                    ...
  100:  setaddr *tmp107 *label58                                     ...
  101:  jump *label53 always 0 0                                     ...
        multilabel *label58                                          ...
  102:  set :drawMaterials:item @silicon                             ...
  103:  set :drawMaterials:target .targetSilicon                     ...
  104:  setaddr *tmp107 *label59                                     ...
  105:  jump *label53 always 0 0                                     ...
        multilabel *label59                                          ...
  106:  set :drawMaterials:item @titanium                            ...
  107:  set :drawMaterials:target .targetTitanium                    ...
  108:  setaddr *tmp107 *label60                                     ...
  109:  jump *label53 always 0 0                                     ...
        multilabel *label60                                          ...
  110:  set :drawMaterials:item @metaglass                           ...
  111:  set :drawMaterials:target .targetMetaglass                   ...
  112:  setaddr *tmp107 *label61                                     ...
  113:  jump *label53 always 0 0                                     ...
        multilabel *label61                                          ...
  114:  set :drawMaterials:item @thorium                             ...
  115:  set :drawMaterials:target .targetThorium                     ...
  116:  setaddr *tmp107 *label62                                     ...
        label *label53                                               ...
  117:  jump *label63 lessThanEq :drawMaterials:target 0             Display.mnd: if target > 0 then
  118:  sensor *tmp110 .core :drawMaterials:item                     Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  119:  set :drawItemColor.1:y :updateDisplay:y                      Display.mnd: drawItemColor(%008000FF, %00FF00FF, in out col, in out y, columns, item, current, target, text);
  120:  op mul *tmp115 126 *tmp110                                   Display.mnd: var length = min(barLength, barLength * current / target);
  121:  op div *tmp116 *tmp115 :drawMaterials:target                 ...
  122:  op min :drawItemColor.1:length 126 *tmp116                   ...
  123:  op mul *tmp119 :drawMaterials:col 88                         Display.mnd: var iconX = ICON_X + col * 176 / 2;
  124:  op add :drawItemColor.1:iconX 11 *tmp119                     ...
  125:  op add :drawItemColor.1:barX 22 *tmp119                      Display.mnd: var barX = BAR_X + col * 176 / 2;
  126:  op add :drawItemColor.1:textX 174 *tmp119                    Display.mnd: var textX = textEnd + col * 176 / 2;
  127:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  128:  op add *tmp127 :updateDisplay:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  129:  draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:ite ...
  130:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  131:  draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemCo Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  132:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  133:  draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10  Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  134:  op add *tmp129 :updateDisplay:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  135:  print :drawMaterials:target                                  Display.mnd: print(text);
  136:  draw print :drawItemColor.1:textX *tmp129 @right 0 0 0       Display.mnd: drawPrint(x, y, alignment);
  137:  op add :drawText.7:x *tmp119 175                             Display.mnd: drawText(x + 1, y, alignment, text);
  138:  print :drawMaterials:target                                  Display.mnd: print(text);
  139:  draw print :drawText.7:x *tmp129 @right 0 0 0                Display.mnd: drawPrint(x, y, alignment);
  140:  op add :drawItemColor.1:col :drawMaterials:col 1             Display.mnd: if ++col >= columns then
  141:  jump *label70 lessThan :drawItemColor.1:col 1                ...
  142:  set :drawItemColor.1:col 0                                   Display.mnd: col = 0;
  143:  op sub :drawItemColor.1:y :updateDisplay:y 15                Display.mnd: y -= ROW_HEIGHT;
        label *label70                                               Display.mnd: if ++col >= columns then
  144:  set :drawMaterials:col :drawItemColor.1:col                  Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  145:  set :updateDisplay:y :drawItemColor.1:y                      ...
  146:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  147:  jump *label55 lessThanEq :drawMaterials:count 0              ...
        label *label63                                               Display.mnd: if target > 0 then
  148:  multijump *tmp107 0 0                                        Display.mnd: for var item, target in
        multilabel *label62                                          ...
        label *label55                                               ...
        label *label51                                               Display.mnd: if count then
  149:  jump *label74 greaterThanEq .totalTargets 3                  Display.mnd: if totalTargets < 3 then
  150:  op sub *tmp137 3 .totalTargets                               Display.mnd: y -= (3 - totalTargets) * ROW_HEIGHT;
  151:  op mul *tmp138 *tmp137 15                                    ...
  152:  op sub :updateDisplay:y :updateDisplay:y *tmp138             ...
        label *label74                                               Display.mnd: if totalTargets < 3 then
  153:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label46                                               Display.mnd: elsif nextBlock != null then
        label *label35                                               Display.mnd: if nextBlock == @ore-thorium or nextBlock == @ore-titanium then
  154:  jump *label76 equal .nextFactory null                        Display.mnd: if nextFactory == null then return; end;
  155:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  156:  print "Air Factory"                                          Display.mnd: print(text);
  157:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  158:  print "Air Factory"                                          Display.mnd: print(text);
  159:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  160:  op sub :drawTitleRow.2:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  161:  sensor :drawAirFactory:progress A¾BFLW-air-factory13 @progre Display.mnd: var progress = air_factory.@progress;
  162:  jump *label82 notEqual :drawAirFactory:progress 0            Display.mnd: if progress == 0 then
  163:  jump *label84 notEqual .nextFactory @flare                   Display.mnd: if nextFactory == @flare then
  164:  sensor *tmp146 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 15, 15);
  165:  op mul *tmp152 *tmp146 8.4                                   Display.mnd: var length = min(barLength, barLength * current / target);
  166:  op min :drawItemColor.2:length 126 *tmp152                   ...
  167:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  168:  op sub *tmp163 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  169:  draw image 11 *tmp163 @silicon 16 0 0                        ...
  170:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  171:  draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  172:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  173:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  174:  op sub *tmp165 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  175:  print 15                                                     Display.mnd: print(text);
  176:  draw print 174 *tmp165 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  177:  print 15                                                     Display.mnd: print(text);
  178:  draw print 175 *tmp165 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  179:  op sub :updateDisplay:y :drawTitleRow.2:y 30                 Display.mnd: y -= ROW_HEIGHT;
  180:  jump *label83 always 0 0                                     Display.mnd: if nextFactory == @flare then
        label *label84                                               ...
  181:  sensor *tmp169 A¾BFLW-air-factory13 @lead                    Display.mnd: drawItem(in 0, in out y, 1, @lead, air_factory.@lead, 15, 15);
  182:  op mul *tmp175 *tmp169 8.4                                   Display.mnd: var length = min(barLength, barLength * current / target);
  183:  op min :drawItemColor.3:length 126 *tmp175                   ...
  184:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  185:  op sub *tmp186 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  186:  draw image 11 *tmp186 @lead 16 0 0                           ...
  187:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  188:  draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  189:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  190:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  191:  op sub *tmp188 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  192:  print 15                                                     Display.mnd: print(text);
  193:  draw print 174 *tmp188 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  194:  print 15                                                     Display.mnd: print(text);
  195:  draw print 175 *tmp188 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  196:  op sub :drawItemColor.3:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  197:  sensor *tmp192 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 30, 30);
  198:  op mul *tmp198 *tmp192 4.2                                   Display.mnd: var length = min(barLength, barLength * current / target);
  199:  op min :drawItemColor.4:length 126 *tmp198                   ...
  200:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  201:  op sub *tmp209 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  202:  draw image 11 *tmp209 @silicon 16 0 0                        ...
  203:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  204:  draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  205:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  206:  draw lineRect 22 :drawItemColor.3:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  207:  op sub *tmp211 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  208:  print 30                                                     Display.mnd: print(text);
  209:  draw print 174 *tmp211 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  210:  print 30                                                     Display.mnd: print(text);
  211:  draw print 175 *tmp211 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  212:  op sub :drawItemColor.4:y :updateDisplay:y 45                Display.mnd: y -= ROW_HEIGHT;
  213:  set :updateDisplay:y :drawItemColor.4:y                      Display.mnd: drawItem(in 0, in out y, 1, @silicon, air_factory.@silicon, 30, 30);
  214:  jump *label83 always 0 0                                     Display.mnd: if progress == 0 then
        label *label82                                               ...
  215:  op idiv *tmp216 :drawAirFactory:progress 0.01                Display.mnd: drawItem(in 0, in out y, 1, nextFactory, progress, 1.0, floor(100 * progress), "%");
  216:  set :drawItem.5:item .nextFactory                            ...
  217:  op mul *tmp221 126 :drawAirFactory:progress                  Display.mnd: var length = min(barLength, barLength * current / target);
  218:  op min :drawItemColor.5:length 126 *tmp221                   ...
  219:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  220:  op sub *tmp233 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  221:  draw image 11 *tmp233 :drawItem.5:item 16 0 0                ...
  222:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  223:  draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  224:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  225:  draw lineRect 22 :drawTitleRow.2:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  226:  op sub *tmp235 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  227:  print *tmp216                                                Display.mnd: print(text);
  228:  print "%"                                                    ...
  229:  draw print 174 *tmp235 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  230:  print *tmp216                                                Display.mnd: print(text);
  231:  print "%"                                                    ...
  232:  draw print 175 *tmp235 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  233:  op sub :updateDisplay:y :drawTitleRow.2:y 30                 Display.mnd: y -= ROW_HEIGHT;
        label *label83                                               Display.mnd: if progress == 0 then
  234:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label76                                               Display.mnd: drawAirFactory(ref y);
  235:  jump *label114 equal .nextAddReco null                       Display.mnd: if nextAddReco == null then return; end;
  236:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  237:  print "Reconstructor"                                        Display.mnd: print(text);
  238:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  239:  print "Reconstructor"                                        Display.mnd: print(text);
  240:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  241:  op sub :drawTitleRow.3:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  242:  sensor :drawAddReco:progress AÀF@Lb-additive-reconstructor24 Display.mnd: var progress = additive_rec.@progress;
  243:  jump *label120 notEqual :drawAddReco:progress 0              Display.mnd: if progress == 0 then
  244:  sensor *tmp244 AÀF@Lb-additive-reconstructor24 @graphite     Display.mnd: drawItem(in 0, in out y, 1, @graphite, additive_rec.@graphite, 40, 40);
  245:  op mul *tmp250 *tmp244 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  246:  op min :drawItemColor.6:length 126 *tmp250                   ...
  247:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  248:  op sub *tmp261 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  249:  draw image 11 *tmp261 @graphite 16 0 0                       ...
  250:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  251:  draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  252:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  253:  draw lineRect 22 :drawTitleRow.3:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  254:  op sub *tmp263 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  255:  print 40                                                     Display.mnd: print(text);
  256:  draw print 174 *tmp263 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  257:  print 40                                                     Display.mnd: print(text);
  258:  draw print 175 *tmp263 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  259:  op sub :drawItemColor.6:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  260:  sensor *tmp267 AÀF@Lb-additive-reconstructor24 @silicon      Display.mnd: drawItem(in 0, in out y, 1, @silicon, additive_rec.@silicon, 40, 40);
  261:  op mul *tmp273 *tmp267 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  262:  op min :drawItemColor.7:length 126 *tmp273                   ...
  263:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  264:  op sub *tmp284 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  265:  draw image 11 *tmp284 @silicon 16 0 0                        ...
  266:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  267:  draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  268:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  269:  draw lineRect 22 :drawItemColor.6:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  270:  op sub *tmp286 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  271:  print 40                                                     Display.mnd: print(text);
  272:  draw print 174 *tmp286 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  273:  print 40                                                     Display.mnd: print(text);
  274:  draw print 175 *tmp286 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  275:  op sub :drawItemColor.7:y :updateDisplay:y 45                Display.mnd: y -= ROW_HEIGHT;
  276:  set :updateDisplay:y :drawItemColor.7:y                      Display.mnd: drawItem(in 0, in out y, 1, @silicon, additive_rec.@silicon, 40, 40);
  277:  jump *label121 always 0 0                                    Display.mnd: if progress == 0 then
        label *label120                                              ...
  278:  op idiv *tmp291 :drawAddReco:progress 0.01                   Display.mnd: drawItem(in 0, in out y, 1, @poly, progress, 1.0, floor(100 * progress), "%");
  279:  op mul *tmp296 126 :drawAddReco:progress                     Display.mnd: var length = min(barLength, barLength * current / target);
  280:  op min :drawItemColor.8:length 126 *tmp296                   ...
  281:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  282:  op sub *tmp308 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  283:  draw image 11 *tmp308 @poly 16 0 0                           ...
  284:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  285:  draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  286:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  287:  draw lineRect 22 :drawTitleRow.3:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  288:  op sub *tmp310 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  289:  print *tmp291                                                Display.mnd: print(text);
  290:  print "%"                                                    ...
  291:  draw print 174 *tmp310 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  292:  print *tmp291                                                Display.mnd: print(text);
  293:  print "%"                                                    ...
  294:  draw print 175 *tmp310 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  295:  op sub :updateDisplay:y :drawTitleRow.3:y 30                 Display.mnd: y -= ROW_HEIGHT;
        label *label121                                              Display.mnd: if progress == 0 then
  296:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label114                                              Display.mnd: drawAddReco(ref y);
  297:  jump *label143 equal .nextMultiReco null                     Display.mnd: if nextMultiReco == null then return; end;
  298:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  299:  op min :updateDisplay:y :updateDisplay:y 142                 Display.mnd: y = min(y, HEADER1_Y1 - 5 * ROW_HEIGHT);
  300:  print "Reconstructor"                                        Display.mnd: print(text);
  301:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  302:  print "Reconstructor"                                        Display.mnd: print(text);
  303:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  304:  op sub :drawTitleRow.4:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  305:  sensor :drawMultiReco:progress AÁNBJc-multiplicative-reconst Display.mnd: var progress = multiplicative_rec.@progress;
  306:  jump *label149 notEqual :drawMultiReco:progress 0            Display.mnd: if progress == 0 then
  307:  sensor *tmp320 AÁNBJc-multiplicative-reconstructor25 @metagl Display.mnd: drawItem(in 0, in out y, 1, @metaglass, multiplicative_rec.@metaglass, 40, 40);
  308:  op mul *tmp326 *tmp320 3.1500000000000004                    Display.mnd: var length = min(barLength, barLength * current / target);
  309:  op min :drawItemColor.9:length 126 *tmp326                   ...
  310:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  311:  op sub *tmp337 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  312:  draw image 11 *tmp337 @metaglass 16 0 0                      ...
  313:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  314:  draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10 0  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  315:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  316:  draw lineRect 22 :drawTitleRow.4:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  317:  op sub *tmp339 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  318:  print 40                                                     Display.mnd: print(text);
  319:  draw print 174 *tmp339 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  320:  print 40                                                     Display.mnd: print(text);
  321:  draw print 175 *tmp339 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  322:  op sub :drawItemColor.9:y :updateDisplay:y 30                Display.mnd: y -= ROW_HEIGHT;
  323:  sensor *tmp343 AÁNBJc-multiplicative-reconstructor25 @titani Display.mnd: drawItem(in 0, in out y, 1, @titanium, multiplicative_rec.@titanium, 80, 80);
  324:  op div *tmp349 *tmp343 0.6349206349206349                    Display.mnd: var length = min(barLength, barLength * current / target);
  325:  op min :drawItemColor.10:length 126 *tmp349                  ...
  326:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  327:  op sub *tmp360 :updateDisplay:y 25                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  328:  draw image 11 *tmp360 @titanium 16 0 0                       ...
  329:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  330:  draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10  Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  331:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  332:  draw lineRect 22 :drawItemColor.9:y 126 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  333:  op sub *tmp362 :updateDisplay:y 23                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  334:  print 80                                                     Display.mnd: print(text);
  335:  draw print 174 *tmp362 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  336:  print 80                                                     Display.mnd: print(text);
  337:  draw print 175 *tmp362 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  338:  op sub :drawItemColor.10:y :updateDisplay:y 45               Display.mnd: y -= ROW_HEIGHT;
  339:  sensor *tmp366 AÁNBJc-multiplicative-reconstructor25 @silico Display.mnd: drawItem(in 0, in out y, 1, @silicon, multiplicative_rec.@silicon, 130, 130);
  340:  op div *tmp372 *tmp366 1.0317460317460319                    Display.mnd: var length = min(barLength, barLength * current / target);
  341:  op min :drawItemColor.11:length 126 *tmp372                  ...
  342:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  343:  op sub *tmp383 :updateDisplay:y 40                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  344:  draw image 11 *tmp383 @silicon 16 0 0                        ...
  345:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  346:  draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  347:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  348:  draw lineRect 22 :drawItemColor.10:y 126 10 0 0              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  349:  op sub *tmp385 :updateDisplay:y 38                           Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  350:  print 130                                                    Display.mnd: print(text);
  351:  draw print 174 *tmp385 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  352:  print 130                                                    Display.mnd: print(text);
  353:  draw print 175 *tmp385 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  354:  op sub :drawItemColor.11:y :updateDisplay:y 60               Display.mnd: y -= ROW_HEIGHT;
  355:  set :updateDisplay:y :drawItemColor.11:y                     Display.mnd: drawItem(in 0, in out y, 1, @silicon, multiplicative_rec.@silicon, 130, 130);
  356:  jump *label150 always 0 0                                    Display.mnd: if progress == 0 then
        label *label149                                              ...
  357:  op idiv *tmp390 :drawMultiReco:progress 0.01                 Display.mnd: drawItem(in 0, in out y, 1, @mega, progress, 1.0, floor(100 * progress), "%");
  358:  op mul *tmp395 126 :drawMultiReco:progress                   Display.mnd: var length = min(barLength, barLength * current / target);
  359:  op min :drawItemColor.12:length 126 *tmp395                  ...
  360:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  361:  op sub *tmp407 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  362:  draw image 11 *tmp407 @mega 16 0 0                           ...
  363:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  364:  draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  365:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  366:  draw lineRect 22 :drawTitleRow.4:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  367:  op sub *tmp409 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  368:  print *tmp390                                                Display.mnd: print(text);
  369:  print "%"                                                    ...
  370:  draw print 174 *tmp409 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  371:  print *tmp390                                                Display.mnd: print(text);
  372:  print "%"                                                    ...
  373:  draw print 175 *tmp409 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  374:  op sub :updateDisplay:y :drawTitleRow.4:y 45                 Display.mnd: y -= 2 * ROW_HEIGHT;
        label *label150                                              Display.mnd: if progress == 0 then
  375:  op sub :updateDisplay:y :updateDisplay:y 5                   Display.mnd: y -= SEPARATOR_Y;
        label *label143                                              Display.mnd: drawMultiReco(ref y);
  376:  sensor *tmp413 @unit @dead                                   Display.mnd: if @unit.@dead then return; end;
  377:  jump *label179 notEqual *tmp413 false                        ...
  378:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  379:  print "Builder"                                              Display.mnd: print(text);
  380:  draw print 22 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  381:  print "Builder"                                              Display.mnd: print(text);
  382:  draw print 23 :updateDisplay:y @bottomLeft 0 0 0             Display.mnd: drawPrint(x, y, alignment);
  383:  op sub :drawTitleRow.5:y :updateDisplay:y 15                 Display.mnd: y -= ROW_HEIGHT;
  384:  jump *label185 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  385:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  386:  op sub *tmp433 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  387:  draw image 11 *tmp433 @poly 16 0 0                           ...
  388:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  389:  draw rect 22 :drawTitleRow.5:y 0 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  390:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  391:  draw lineRect 22 :drawTitleRow.5:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  392:  op sub *tmp435 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  393:  print .transportTarget                                       Display.mnd: print(text);
  394:  draw print 174 *tmp435 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  395:  print .transportTarget                                       Display.mnd: print(text);
  396:  draw print 175 *tmp435 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  397:  op sub :drawItemColor.13:y :updateDisplay:y 30               Display.mnd: y -= ROW_HEIGHT;
  398:  set :updateDisplay:y :drawItemColor.13:y                     Display.mnd: drawUnit(@poly, 0, in out y);
  399:  jump *label186 always 0 0                                    Display.mnd: if transportItem == null then
        label *label185                                              ...
  400:  sensor :drawBuilder:unitItem @unit @firstItem                Display.mnd: var unitItem = @unit.@firstItem;
  401:  sensor *tmp442 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in out y);
  402:  op equal *tmp443 :drawBuilder:unitItem .transportItem        ...
  403:  op mul *tmp444 *tmp442 *tmp443                               ...
  404:  set :drawUnit.1:item .transportItem                          ...
  405:  set :drawItem.14:target .transportTarget                     Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  406:  op mul *tmp449 126 *tmp444                                   Display.mnd: var length = min(barLength, barLength * current / target);
  407:  op div *tmp450 *tmp449 :drawItem.14:target                   ...
  408:  op min :drawItemColor.14:length 126 *tmp450                  ...
  409:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  410:  op sub *tmp461 :updateDisplay:y 10                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  411:  draw image 11 *tmp461 :drawUnit.1:item 16 0 0                ...
  412:  draw col %008000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  413:  draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10 0 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  414:  draw col %00FF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  415:  draw lineRect 22 :drawTitleRow.5:y 126 10 0 0                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  416:  op sub *tmp463 :updateDisplay:y 8                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  417:  print .transportTarget                                       Display.mnd: print(text);
  418:  draw print 174 *tmp463 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  419:  print .transportTarget                                       Display.mnd: print(text);
  420:  draw print 175 *tmp463 @right 0 0 0                          Display.mnd: drawPrint(x, y, alignment);
  421:  op sub :drawItemColor.14:y :updateDisplay:y 30               Display.mnd: y -= ROW_HEIGHT;
  422:  set :updateDisplay:y :drawItemColor.14:y                     Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in out y);
        label *label186                                              Display.mnd: if transportItem == null then
        label *label179                                              Display.mnd: drawBuilder(ref y);
  423:  jump *label203 lessThan :updateDisplay:y 20                  Display.mnd: if y < ROW_HEIGHT + SEPARATOR_Y then return; end;
  424:  jump *label203 equal AJTJK-battery1 null                    Display.mnd: if battery1 == null then return; end;
  425:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  426:  print "Power"                                                Display.mnd: print(text);
  427:  draw print 22 20 @bottomLeft 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  428:  print "Power"                                                Display.mnd: print(text);
  429:  draw print 23 20 @bottomLeft 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  430:  sensor :drawPower:power AJTJK-battery1 @totalPower          Display.mnd: var power = battery1.@totalPower;
  431:  op mul *tmp474 :drawPower:power 100                          Display.mnd: drawItemColor(%808000FF, %FFFF00FF, in 0, in out y, 1, @battery, power, 4000, floor(power * 100 / 4000), "%");
  432:  op idiv *tmp476 *tmp474 4000                                 ...
  433:  op mul *tmp482 :drawPower:power 0.0315                       Display.mnd: var length = min(barLength, barLength * current / target);
  434:  op min :drawItemColor.15:length 126 *tmp482                  ...
  435:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  436:  draw image 11 10 @battery 16 0 0                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  437:  draw col %808000FF 0 0 0 0 0                                 Display.mnd: col(color1);
  438:  draw rect 22 5 :drawItemColor.15:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  439:  draw col %FFFF00FF 0 0 0 0 0                                 Display.mnd: col(color2);
  440:  draw lineRect 22 5 126 10 0 0                                Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  441:  print *tmp476                                                Display.mnd: print(text);
  442:  print "%"                                                    ...
  443:  draw print 174 12 @right 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  444:  print *tmp476                                                Display.mnd: print(text);
  445:  print "%"                                                    ...
  446:  draw print 175 12 @right 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
        label *label203                                              Display.mnd: drawPower(ref y);
  447:  drawflush display1                                           Display.mnd: drawflush(display1);
  448:  jump *label19 always 0 0                                     Display.mnd: if page == 0 then
        label *label18                                               ...
  449:  jump *label217 notEqual .page 1                              Display.mnd: elsif page == 1 then
  450:  read :displayStorage:tail bank2 510                          Display.mnd: var tail = bank2[510];
  451:  jump *label220 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  452:  read .lastTail bank2 511                                     Display.mnd: lastTail = bank2[511];
  453:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  454:  print "Resources"                                            Display.mnd: print(text);
  455:  draw print 11 206 @left 0 0 0                                Display.mnd: drawPrint(x, y, alignment);
  456:  print "Resources"                                            Display.mnd: print(text);
  457:  draw print 12 206 @left 0 0 0                                Display.mnd: drawPrint(x, y, alignment);
  458:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  459:  draw image 12 182 @copper 15 0 0                             Display.mnd: image(12, y, item, 15, 0);
  460:  draw image 12 161 @lead 15 0 0                               ...
  461:  draw image 12 140 @sand 15 0 0                               ...
  462:  draw image 12 119 @coal 15 0 0                               ...
  463:  draw image 12 98 @graphite 15 0 0                            ...
  464:  draw image 12 77 @silicon 15 0 0                             ...
  465:  draw image 12 56 @titanium 15 0 0                            ...
  466:  draw image 12 35 @metaglass 15 0 0                           ...
  467:  draw image 12 14 @thorium 15 0 0                             ...
        label *label220                                              Display.mnd: if pageSwitched then
  468:  setaddr :drawHeader*retaddr *label237                        Display.mnd: drawHeader();
  469:  call *label4 *invalid :drawHeader*retval                     ...
        label *label237                                              ...
  470:  drawflush display1                                           Display.mnd: drawflush(display1);
  471:  jump *label218 greaterThan .lastTail :displayStorage:tail    Display.mnd: if lastTail > tail then return; end;
  472:  read :displayStorage:accumulator bank2 .lastTail             Display.mnd: var accumulator = bank2[lastTail];
  473:  op add :displayStorage:x 25 .lastTail                        Display.mnd: var x = 25 + lastTail;
  474:  op sub :displayStorage:y.1 190 8                             Display.mnd: var y = START - 8;
  475:  set :displayStorage:i 0                                      Display.mnd: for var i in 0 ... 9 do
        label *label401                                              ...
  476:  op and *tmp513 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  477:  op sub :displayStorage:value *tmp513 8                       ...
  478:  select *tmp516 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  479:  draw col *tmp516 0 0 0 0 0                                   ...
  480:  draw rect :displayStorage:x :displayStorage:y.1 1 :displaySt Display.mnd: rect(x, y, 1, value);
  481:  op sub :displayStorage:y.1 :displayStorage:y.1 21            Display.mnd: y -= 21;
  482:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  483:  op add :displayStorage:i :displayStorage:i 1                 Display.mnd: for var i in 0 ... 9 do
  484:  jump *label401 lessThan :displayStorage:i 9                  ...
  485:  drawflush display1                                           Display.mnd: drawflush(display1);
  486:  op add .lastTail .lastTail 1                                 Display.mnd: displayStorage();
  487:  jump *label218 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label217                                              ...
  488:  jump *label245 notEqual .page 2                              Display.mnd: elsif page == 2 then
  489:  setaddr :drawHeader*retaddr *label248                        Display.mnd: drawHeader();
  490:  call *label4 *invalid :drawHeader*retval                     ...
        label *label248                                              ...
  491:  set :displayBaseMap:limit 0                                  Display.mnd: var limit = 0;
  492:  jump *label249 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  493:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  494:  print "Base map"                                             Display.mnd: print(text);
  495:  draw print 90 206 @center 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  496:  print "Base map"                                             Display.mnd: print(text);
  497:  draw print 91 206 @center 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  498:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  499:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  500:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  501:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  502:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  503:  drawflush display1                                           Display.mnd: drawflush(display1);
  504:  set :displayBaseMap:limit 5                                  Display.mnd: limit = 5;
  505:  jump *label250 always 0 0                                    Display.mnd: if pageSwitched then
        label *label249                                              ...
  506:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  507:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  508:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
        label *label250                                              Display.mnd: if pageSwitched then
  509:  set :displayBaseMap:counter 0                                Display.mnd: var counter = 0;
  510:  set :displayBaseMap:cfg "AJEMJJ-graphite-press0"             Display.mnd: for var cfg in BLOCKS do
  511:  setaddr *tmp530 *label259                                    ...
  512:  jump *label256 always 0 0                                    ...
        multilabel *label259                                         ...
  513:  set :displayBaseMap:cfg "AJTJK-battery1"                    ...
  514:  setaddr *tmp530 *label260                                    ...
  515:  jump *label256 always 0 0                                    ...
        multilabel *label260                                         ...
  516:  set :displayBaseMap:cfg "ALTJL-battery2"                    ...
  517:  setaddr *tmp530 *label261                                    ...
  518:  jump *label256 always 0 0                                    ...
        multilabel *label261                                         ...
  519:  set :displayBaseMap:cfg "AJRJM-combustion-generator3"       ...
  520:  setaddr *tmp530 *label262                                    ...
  521:  jump *label256 always 0 0                                    ...
        multilabel *label262                                         ...
  522:  set :displayBaseMap:cfg "ALMQJN-silicon-smelter4"            ...
  523:  setaddr *tmp530 *label263                                    ...
  524:  jump *label256 always 0 0                                    ...
        multilabel *label263                                         ...
  525:  set :displayBaseMap:cfg "A{LNJO-inverted-sorter5"            ...
  526:  setaddr *tmp530 *label264                                    ...
  527:  jump *label256 always 0 0                                    ...
        multilabel *label264                                         ...
  528:  set :displayBaseMap:cfg "A©JNJP-unloader6"                   ...
  529:  setaddr *tmp530 *label265                                    ...
  530:  jump *label256 always 0 0                                    ...
        multilabel *label265                                         ...
  531:  set :displayBaseMap:cfg "A{HNJQ-inverted-sorter7"            ...
  532:  setaddr *tmp530 *label266                                    ...
  533:  jump *label256 always 0 0                                    ...
        multilabel *label266                                         ...
  534:  set :displayBaseMap:cfg "AJPJR-underflow-gate8"             ...
  535:  setaddr *tmp530 *label267                                    ...
  536:  jump *label256 always 0 0                                    ...
        multilabel *label267                                         ...
  537:  set :displayBaseMap:cfg "AÕFFJS-micro-processor9"            ...
  538:  setaddr *tmp530 *label268                                    ...
  539:  jump *label256 always 0 0                                    ...
        multilabel *label268                                         ...
  540:  set :displayBaseMap:cfg "AFHJT-power-node10"                ...
  541:  setaddr *tmp530 *label269                                    ...
  542:  jump *label256 always 0 0                                    ...
        multilabel *label269                                         ...
  543:  set :displayBaseMap:cfg "A©FJJU-unloader11"                  ...
  544:  setaddr *tmp530 *label270                                    ...
  545:  jump *label256 always 0 0                                    ...
        multilabel *label270                                         ...
  546:  set :displayBaseMap:cfg "A~DJJV-overflow-gate12"             ...
  547:  setaddr *tmp530 *label271                                    ...
  548:  jump *label256 always 0 0                                    ...
        multilabel *label271                                         ...
  549:  set :displayBaseMap:cfg "A¾BFLW-air-factory13"               ...
  550:  setaddr *tmp530 *label272                                    ...
  551:  jump *label256 always 0 0                                    ...
        multilabel *label272                                         ...
  552:  set :displayBaseMap:cfg "A©NHJX-unloader14"                  ...
  553:  setaddr *tmp530 *label273                                    ...
  554:  jump *label256 always 0 0                                    ...
        multilabel *label273                                         ...
  555:  set :displayBaseMap:cfg "A{NJJY-inverted-sorter15"           ...
  556:  setaddr *tmp530 *label274                                    ...
  557:  jump *label256 always 0 0                                    ...
        multilabel *label274                                         ...
  558:  set :displayBaseMap:cfg "ANOMJZ-kiln16"                      ...
  559:  setaddr *tmp530 *label275                                    ...
  560:  jump *label256 always 0 0                                    ...
        multilabel *label275                                         ...
  561:  set :displayBaseMap:cfg "A¡AOJ[-water-extractor17"           ...
  562:  setaddr *tmp530 *label276                                    ...
  563:  jump *label256 always 0 0                                    ...
        multilabel *label276                                         ...
  564:  set :displayBaseMap:cfg "AAKJ\-steam-generator18"           ...
  565:  setaddr *tmp530 *label277                                    ...
  566:  jump *label256 always 0 0                                    ...
        multilabel *label277                                         ...
  567:  set :displayBaseMap:cfg "ALQIJ]-silicon-smelter19"           ...
  568:  setaddr *tmp530 *label278                                    ...
  569:  jump *label256 always 0 0                                    ...
        multilabel *label278                                         ...
  570:  set :displayBaseMap:cfg "AKFRJ^-multi-press20"               ...
  571:  setaddr *tmp530 *label279                                    ...
  572:  jump *label256 always 0 0                                    ...
        multilabel *label279                                         ...
  573:  set :displayBaseMap:cfg "A©HFJ_-unloader21"                  ...
  574:  setaddr *tmp530 *label280                                    ...
  575:  jump *label256 always 0 0                                    ...
        multilabel *label280                                         ...
  576:  set :displayBaseMap:cfg "A{HDJa-inverted-sorter23"           ...
  577:  setaddr *tmp530 *label281                                    ...
  578:  jump *label256 always 0 0                                    ...
        multilabel *label281                                         ...
  579:  set :displayBaseMap:cfg "AÀF@Lb-additive-reconstructor24"    ...
  580:  setaddr *tmp530 *label282                                    ...
  581:  jump *label256 always 0 0                                    ...
        multilabel *label282                                         ...
  582:  set :displayBaseMap:cfg "AÁNBJc-multiplicative-reconstructor ...
  583:  setaddr *tmp530 *label283                                    ...
  584:  jump *label256 always 0 0                                    ...
        multilabel *label283                                         ...
  585:  set :displayBaseMap:cfg "AXPRJd-pulverizer26"                ...
  586:  setaddr *tmp530 *label284                                    ...
  587:  jump *label256 always 0 0                                    ...
        multilabel *label284                                         ...
  588:  set :displayBaseMap:cfg "A~PPJe-overflow-gate27"             ...
  589:  setaddr *tmp530 *label285                                    ...
  590:  jump *label256 always 0 0                                    ...
        multilabel *label285                                         ...
  591:  set :displayBaseMap:cfg "APTJf-power-node28"                ...
  592:  setaddr *tmp530 *label286                                    ...
  593:  jump *label256 always 0 0                                    ...
        multilabel *label286                                         ...
  594:  set :displayBaseMap:cfg "A©RPJg-unloader29"                  ...
  595:  setaddr *tmp530 *label287                                    ...
  596:  jump *label256 always 0 0                                    ...
        multilabel *label287                                         ...
  597:  set :displayBaseMap:cfg "A¨SSJh-container30"                 ...
  598:  setaddr *tmp530 *label288                                    ...
  599:  jump *label256 always 0 0                                    ...
        multilabel *label288                                         ...
  600:  set :displayBaseMap:cfg "AXTPJi-pulverizer31"                ...
  601:  setaddr *tmp530 *label289                                    ...
  602:  jump *label256 always 0 0                                    ...
        multilabel *label289                                         ...
  603:  set :displayBaseMap:cfg "A~RNJj-overflow-gate32"             ...
  604:  setaddr *tmp530 *label290                                    ...
  605:  jump *label256 always 0 0                                    ...
        multilabel *label290                                         ...
  606:  set :displayBaseMap:cfg "A~RLJk-overflow-gate33"             ...
  607:  setaddr *tmp530 *label291                                    ...
  608:  jump *label256 always 0 0                                    ...
        multilabel *label291                                         ...
  609:  set :displayBaseMap:cfg "AXTNJl-pulverizer34"                ...
  610:  setaddr *tmp530 *label292                                    ...
  611:  jump *label256 always 0 0                                    ...
        multilabel *label292                                         ...
  612:  set :displayBaseMap:cfg "AXTLJm-pulverizer35"                ...
  613:  setaddr *tmp530 *label293                                    ...
        label *label256                                              ...
  614:  jump *label294 notEqual :displayBaseMap:cfg "AXPRJd-pulveriz Display.mnd: if cfg == PULVERIZER1 then
  615:  jump *label246 equal .scrap false                            Display.mnd: if not scrap then break; end;
        label *label294                                              Display.mnd: if cfg == PULVERIZER1 then
  616:  jump *label298 notEqual :displayBaseMap:counter :displayBase Display.mnd: if counter == limit then
  617:  setaddr :drawHeader*retaddr *label300                        Display.mnd: drawHeader();
  618:  call *label4 *invalid :drawHeader*retval                     ...
        label *label300                                              ...
  619:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  620:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  621:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  622:  set :displayBaseMap:counter 0                                Display.mnd: counter = 0;
  623:  jump *label299 always 0 0                                    Display.mnd: if counter == limit then
        label *label298                                              ...
  624:  op add :displayBaseMap:counter :displayBaseMap:counter 1     ...
        label *label299                                              ...
  625:  set :drawBlock:cfg :displayBaseMap:cfg                       Display.mnd: drawBlock(cfg);
  626:  setaddr :drawBlock*retaddr *label302                         ...
  627:  call *label5 *invalid :drawBlock*retval                      ...
        label *label302                                              ...
  628:  jump *label303 lessThan .recentBuildIndex 0                  Display.mnd: if recentBuildIndex >= 0 then
  629:  set :displayBaseMap:index .recentBuildIndex                  Display.mnd: var index = recentBuildIndex;
  630:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  631:  op mul *tmp1041 :displayBaseMap:index 2                      Display.mnd: drawBlock(BLOCKS[index]);
  632:  multijump *label479 *tmp1041 0                               ...
        multilabel *label479                                         ...
  633:  set :drawBlock:cfg "AJEMJJ-graphite-press0"                  ...
  634:  jump *label478 always 0 0                                    ...
        multilabel *label480                                         ...
  635:  set :drawBlock:cfg "AJTJK-battery1"                         ...
  636:  jump *label478 always 0 0                                    ...
        multilabel *label481                                         ...
  637:  set :drawBlock:cfg "ALTJL-battery2"                         ...
  638:  jump *label478 always 0 0                                    ...
        multilabel *label482                                         ...
  639:  set :drawBlock:cfg "AJRJM-combustion-generator3"            ...
  640:  jump *label478 always 0 0                                    ...
        multilabel *label483                                         ...
  641:  set :drawBlock:cfg "ALMQJN-silicon-smelter4"                 ...
  642:  jump *label478 always 0 0                                    ...
        multilabel *label484                                         ...
  643:  set :drawBlock:cfg "A{LNJO-inverted-sorter5"                 ...
  644:  jump *label478 always 0 0                                    ...
        multilabel *label485                                         ...
  645:  set :drawBlock:cfg "A©JNJP-unloader6"                        ...
  646:  jump *label478 always 0 0                                    ...
        multilabel *label486                                         ...
  647:  set :drawBlock:cfg "A{HNJQ-inverted-sorter7"                 ...
  648:  jump *label478 always 0 0                                    ...
        multilabel *label487                                         ...
  649:  set :drawBlock:cfg "AJPJR-underflow-gate8"                  ...
  650:  jump *label478 always 0 0                                    ...
        multilabel *label488                                         ...
  651:  set :drawBlock:cfg "AÕFFJS-micro-processor9"                 ...
  652:  jump *label478 always 0 0                                    ...
        multilabel *label489                                         ...
  653:  set :drawBlock:cfg "AFHJT-power-node10"                     ...
  654:  jump *label478 always 0 0                                    ...
        multilabel *label490                                         ...
  655:  set :drawBlock:cfg "A©FJJU-unloader11"                       ...
  656:  jump *label478 always 0 0                                    ...
        multilabel *label491                                         ...
  657:  set :drawBlock:cfg "A~DJJV-overflow-gate12"                  ...
  658:  jump *label478 always 0 0                                    ...
        multilabel *label492                                         ...
  659:  set :drawBlock:cfg "A¾BFLW-air-factory13"                    ...
  660:  jump *label478 always 0 0                                    ...
        multilabel *label493                                         ...
  661:  set :drawBlock:cfg "A©NHJX-unloader14"                       ...
  662:  jump *label478 always 0 0                                    ...
        multilabel *label494                                         ...
  663:  set :drawBlock:cfg "A{NJJY-inverted-sorter15"                ...
  664:  jump *label478 always 0 0                                    ...
        multilabel *label495                                         ...
  665:  set :drawBlock:cfg "ANOMJZ-kiln16"                           ...
  666:  jump *label478 always 0 0                                    ...
        multilabel *label496                                         ...
  667:  set :drawBlock:cfg "A¡AOJ[-water-extractor17"                ...
  668:  jump *label478 always 0 0                                    ...
        multilabel *label497                                         ...
  669:  set :drawBlock:cfg "AAKJ\-steam-generator18"                ...
  670:  jump *label478 always 0 0                                    ...
        multilabel *label498                                         ...
  671:  set :drawBlock:cfg "ALQIJ]-silicon-smelter19"                ...
  672:  jump *label478 always 0 0                                    ...
        multilabel *label499                                         ...
  673:  set :drawBlock:cfg "AKFRJ^-multi-press20"                    ...
  674:  jump *label478 always 0 0                                    ...
        multilabel *label500                                         ...
  675:  set :drawBlock:cfg "A©HFJ_-unloader21"                       ...
  676:  jump *label478 always 0 0                                    ...
        multilabel *label501                                         ...
  677:  set :drawBlock:cfg "A{HDJa-inverted-sorter23"                ...
  678:  jump *label478 always 0 0                                    ...
        multilabel *label502                                         ...
  679:  set :drawBlock:cfg "AÀF@Lb-additive-reconstructor24"         ...
  680:  jump *label478 always 0 0                                    ...
        multilabel *label503                                         ...
  681:  set :drawBlock:cfg "AÁNBJc-multiplicative-reconstructor25"   ...
  682:  jump *label478 always 0 0                                    ...
        multilabel *label504                                         ...
  683:  set :drawBlock:cfg "AXPRJd-pulverizer26"                     ...
  684:  jump *label478 always 0 0                                    ...
        multilabel *label505                                         ...
  685:  set :drawBlock:cfg "A~PPJe-overflow-gate27"                  ...
  686:  jump *label478 always 0 0                                    ...
        multilabel *label506                                         ...
  687:  set :drawBlock:cfg "APTJf-power-node28"                     ...
  688:  jump *label478 always 0 0                                    ...
        multilabel *label507                                         ...
  689:  set :drawBlock:cfg "A©RPJg-unloader29"                       ...
  690:  jump *label478 always 0 0                                    ...
        multilabel *label508                                         ...
  691:  set :drawBlock:cfg "A¨SSJh-container30"                      ...
  692:  jump *label478 always 0 0                                    ...
        multilabel *label509                                         ...
  693:  set :drawBlock:cfg "AXTPJi-pulverizer31"                     ...
  694:  jump *label478 always 0 0                                    ...
        multilabel *label510                                         ...
  695:  set :drawBlock:cfg "A~RNJj-overflow-gate32"                  ...
  696:  jump *label478 always 0 0                                    ...
        multilabel *label511                                         ...
  697:  set :drawBlock:cfg "A~RLJk-overflow-gate33"                  ...
  698:  jump *label478 always 0 0                                    ...
        multilabel *label512                                         ...
  699:  set :drawBlock:cfg "AXTNJl-pulverizer34"                     ...
  700:  jump *label478 always 0 0                                    ...
        multilabel *label513                                         ...
  701:  set :drawBlock:cfg "AXTLJm-pulverizer35"                     ...
        label *label478                                              ...
  702:  setaddr :drawBlock*retaddr *label305                         ...
  703:  call *label5 *invalid :drawBlock*retval                      ...
        label *label305                                              ...
        label *label303                                              Display.mnd: if recentBuildIndex >= 0 then
  704:  sensor *tmp546 switch1 @enabled                              Display.mnd: if switch1.enabled then
  705:  jump *label306 equal *tmp546 false                           ...
  706:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  707:  drawflush display1                                           Display.mnd: drawflush(display1);
  708:  jump *label246 always 0 0                                    Display.mnd: break;
        label *label306                                              Display.mnd: if switch1.enabled then
  709:  drawflush display1                                           Display.mnd: drawflush(display1);
  710:  multijump *tmp530 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label293                                         ...
  711:  jump *label246 always 0 0                                    Display.mnd: elsif page == 2 then
        label *label245                                              ...
  712:  op sub :displayLog:page .page 3                              Display.mnd: displayLog(page - 3);
  713:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  714:  op sub *tmp551 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ RECORDS_PER_PAGE + 1);
  715:  op idiv *tmp552 *tmp551 39                                   ...
  716:  op add *tmp553 *tmp552 1                                     ...
  717:  op max :displayLog:pages 1 *tmp553                           ...
  718:  op add .numPages :displayLog:pages 3                         Display.mnd: numPages = pages + 3;
  719:  op mul *tmp556 39 :displayLog:page                           Display.mnd: var start = 511 - RECORDS_PER_PAGE * page;
  720:  op sub :displayLog:start 511 *tmp556                         ...
  721:  op sub *tmp558 :displayLog:start 39                          Display.mnd: var stop = max(logPosition, start - RECORDS_PER_PAGE);
  722:  op max :displayLog:stop :displayLog:logPosition *tmp558      ...
  723:  jump *label309 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  724:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  725:  print "Build records"                                        Display.mnd: print(text);
  726:  draw print 4 206 @left 0 0 0                                 Display.mnd: drawPrint(x, y, alignment);
  727:  print "Build records"                                        Display.mnd: print(text);
  728:  draw print 5 206 @left 0 0 0                                 Display.mnd: drawPrint(x, y, alignment);
  729:  op sub *tmp562 .page 2                                       Display.mnd: print(page + 1, "/");
  730:  print *tmp562                                                ...
  731:  print "/"                                                    ...
  732:  print :displayLog:pages                                      Display.mnd: print(text);
  733:  draw print 172 206 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  734:  set .lastRecord :displayLog:start                            Display.mnd: lastRecord = start;
        label *label309                                              Display.mnd: if pageSwitched then
  735:  setaddr :drawHeader*retaddr *label315                        Display.mnd: drawHeader();
  736:  call *label4 *invalid :drawHeader*retval                     ...
        label *label315                                              ...
  737:  op sub :displayLog:position .lastRecord 1                    Display.mnd: for var position in stop ... lastRecord descending do
  738:  jump *label318 lessThan :displayLog:position :displayLog:sto ...
        label *label402                                              ...
  739:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  740:  op sub *tmp566 :displayLog:start :displayLog:position        Display.mnd: displayRecord(record, start - position - 1);
  741:  op sub *tmp567 *tmp566 1                                     ...
  742:  op idiv :displayRecord:col *tmp567 13                        Display.mnd: var col = index \ RECORDS_PER_COLUMN;
  743:  op mod :displayRecord:row *tmp567 13                         Display.mnd: var row = index % RECORDS_PER_COLUMN;
  744:  op mul *tmp570 58 :displayRecord:col                         Display.mnd: var x = 11 + 58 * col;
  745:  op add :displayRecord:x 11 *tmp570                           ...
  746:  op mul *tmp572 15 :displayRecord:row                         Display.mnd: var y = HEADER1_Y1 - 13 - 15 - 15 * row;
  747:  op sub :displayRecord:y 189 *tmp572                          ...
  748:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  749:  lookup block *tmp576 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  750:  jump *label321 lessThanEq :displayRecord:id @blockCount      ...
  751:  op sub *tmp577 :displayRecord:id @blockCount                 ...
  752:  lookup unit *tmp576 *tmp577                                  ...
        label *label321                                              ...
  753:  op div *tmp580 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  754:  op idiv :displayRecord:t *tmp580 120                         ...
  755:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  756:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  757:  select *tmp586 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  758:  print :displayRecord:m                                       ...
  759:  print ":"                                                    ...
  760:  print *tmp586                                                ...
  761:  draw image :displayRecord:x :displayRecord:y *tmp576 14 0 0  Display.mnd: image(x, y, icon, 14, 0);
  762:  op add *tmp588 :displayRecord:x 44                           Display.mnd: drawText(x + 56 - 12, y + 2, @right, s);
  763:  op add *tmp589 :displayRecord:y 2                            ...
  764:  print :displayRecord:s                                       Display.mnd: print(text);
  765:  draw print *tmp588 *tmp589 @right 0 0 0                      Display.mnd: drawPrint(x, y, alignment);
  766:  drawflush display1                                           Display.mnd: drawflush(display1);
  767:  sensor *tmp590 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  768:  jump *label318 notEqual *tmp590 false                        ...
  769:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... lastRecord descending do
  770:  jump *label402 greaterThanEq :displayLog:position :displayLo ...
        label *label318                                              ...
  771:  op add .lastRecord :displayLog:stop 1                        Display.mnd: lastRecord = stop + 1;
  772:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label246                                              Display.mnd: elsif page == 2 then
        label *label218                                              Display.mnd: elsif page == 1 then
        label *label19                                               Display.mnd: if page == 0 then
        label *label16                                               Display.mnd: if display.@bufferSize < 200 then
  773:  jump *label327 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  774:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  775:  printflush message1                                          Display.mnd: printflush(message1);
  776:  jump *label328 always 0 0                                    Display.mnd: if megas > 0 then
        label *label327                                              ...
  777:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  778:  format .nextBlock                                            ...
  779:  format .status1                                              Display.mnd: println(status1);
  780:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  781:  format .item2                                                ...
  782:  format .block2                                               ...
  783:  format .status3                                              Display.mnd: println(status3);
  784:  printflush message1                                          Display.mnd: printflush(message1);
        label *label328                                              Display.mnd: if megas > 0 then
  785:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  786:  jump *label13 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  787:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  788:  op add *tmp600 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  789:  op mod .page *tmp600 .numPages                               ...
  790:  drawflush null                                               Display.mnd: drawflush(null);
  791:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  792:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  793:  jump *label13 always 0 0                                     Display.mnd: while true do
        label *label4                                                Display.mnd: void drawHeader()
  794:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  795:  draw color 0 0 32 255 0 0                                    Display.mnd: color(0, 0, 32, 255);
  796:  draw rect 0 217 200 300 0 0                                  Display.mnd: rect(0, HEADER1_Y1, 200, 300);
  797:  jump *label333 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  798:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  799:  draw scale 3.5 3.5 0 0 0 0                                   Display.mnd: scale(3.5, 3.5);
  800:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  801:  op idiv :drawHeader:t *tmp0 120                              ...
  802:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
  803:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
  804:  select *tmp609 lessThan :drawHeader:s 10 "0" ""              Display.mnd: var zero = s < 10 ? "0" : "";
  805:  print :drawHeader:m                                          Display.mnd: print(text);
  806:  print ":"                                                    ...
  807:  print *tmp609                                                ...
  808:  print :drawHeader:s                                          ...
  809:  draw print 25 71 @center 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  810:  print :drawHeader:m                                          Display.mnd: print(text);
  811:  print ":"                                                    ...
  812:  print *tmp609                                                ...
  813:  print :drawHeader:s                                          ...
  814:  draw print 26 71 @center 0 0 0                               Display.mnd: drawPrint(x, y, alignment);
  815:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  816:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  817:  return :drawHeader*retaddr                                   Display.mnd: if megas > 0 then
        label *label333                                              ...
  818:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  819:  print "Goal"                                                 Display.mnd: print(text);
  820:  draw print 42 261 @bottom 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  821:  print "Goal"                                                 Display.mnd: print(text);
  822:  draw print 43 261 @bottom 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  823:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  824:  jump *label343 equal .missing false                          Display.mnd: if missing then
  825:  draw image 16 264 .missing 12 0 0                            Display.mnd: image(16, 264, missing, 12, 0);
  826:  set .missing false                                           Display.mnd: missing = false;
        label *label343                                              Display.mnd: if missing then
  827:  jump *label345 equal .nextMultiReco false                    Display.mnd: if nextMultiReco then
  828:  draw image 42 237 .nextMultiReco 32 0 0                      Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextMultiReco, 32, 0);
  829:  jump *label346 always 0 0                                    Display.mnd: if nextMultiReco then
        label *label345                                              ...
  830:  op add *tmp614 .nextBlock .nextFactory                       Display.mnd: var count = nextBlock + nextFactory + nextAddReco;
  831:  op add :drawHeader:count *tmp614 .nextAddReco                ...
  832:  jump *label347 notEqual :drawHeader:count 3                  Display.mnd: if count == 3 then
  833:  draw image 22 244 .nextBlock 18 0 0                          Display.mnd: image(HEADER_X - 20, HEADER1_Y - 17, nextBlock, 18, 0);
  834:  draw image 42 244 .nextFactory 18 0 0                        Display.mnd: image(HEADER_X +  0, HEADER1_Y - 17, nextFactory, 18, 0);
  835:  draw image 62 244 .nextAddReco 18 0 0                        Display.mnd: image(HEADER_X + 20, HEADER1_Y - 17, nextAddReco, 18, 0);
  836:  jump *label348 always 0 0                                    Display.mnd: if count == 3 then
        label *label347                                              ...
  837:  jump *label349 notEqual :drawHeader:count 2                  Display.mnd: elsif count == 2 then
  838:  set :drawHeader:x 27                                         Display.mnd: var x = HEADER_X - 15;
  839:  set :drawHeader:goal .nextBlock                              Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  840:  jump *label441 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  841:  draw image 27 240 :drawHeader:goal 25 0 0                    Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  842:  op add :drawHeader:x 27 30                                   Display.mnd: x += 30;
        label *label441                                              Display.mnd: if goal != null then
  843:  set :drawHeader:goal .nextFactory                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  844:  jump *label447 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  845:  draw image :drawHeader:x 240 :drawHeader:goal 25 0 0         Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  846:  op add :drawHeader:x :drawHeader:x 30                        Display.mnd: x += 30;
        label *label447                                              Display.mnd: if goal != null then
  847:  set :drawHeader:goal .nextAddReco                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  848:  jump *label350 equal :drawHeader:goal null                   Display.mnd: if goal != null then
  849:  draw image :drawHeader:x 240 :drawHeader:goal 25 0 0         Display.mnd: image(x, HEADER1_Y - 21, goal, 25, 0);
  850:  jump *label350 always 0 0                                    Display.mnd: elsif count == 2 then
        label *label349                                              ...
  851:  jump *label359 notEqual :drawHeader:count 1                  Display.mnd: elsif count == 1 then
  852:  set :drawHeader:goal.1 .nextBlock                            Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  853:  jump *label460 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  854:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
  855:  jump *label363 always 0 0                                    Display.mnd: break;
        label *label460                                              Display.mnd: if goal != null then
  856:  set :drawHeader:goal.1 .nextFactory                          Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  857:  jump *label466 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  858:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
  859:  jump *label363 always 0 0                                    Display.mnd: break;
        label *label466                                              Display.mnd: if goal != null then
  860:  set :drawHeader:goal.1 .nextAddReco                          Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
  861:  jump *label472 equal :drawHeader:goal.1 null                 Display.mnd: if goal != null then
  862:  draw image 42 237 :drawHeader:goal.1 32 0 0                  Display.mnd: image(HEADER_X, HEADER1_Y - 24, goal, 32, 0);
        label *label472                                              Display.mnd: if goal != null then
        label *label363                                              Display.mnd: for var goal in nextBlock, nextFactory, nextAddReco do
        label *label359                                              Display.mnd: elsif count == 1 then
        label *label350                                              Display.mnd: elsif count == 2 then
        label *label348                                              Display.mnd: if count == 3 then
        label *label346                                              Display.mnd: if nextMultiReco then
  863:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
  864:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  865:  op idiv :drawHeader:t.1 *tmp0 120                            ...
  866:  op idiv :drawHeader:m.1 :drawHeader:t.1 60                   Display.mnd: var m = t \ 60;
  867:  op mod :drawHeader:s.1 :drawHeader:t.1 60                    Display.mnd: var s = t % 60;
  868:  select *tmp633 lessThan :drawHeader:s.1 10 "0" ""            Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
  869:  print :drawHeader:m.1                                        ...
  870:  print ":{0}{0} (x{0}.{0})"                                   ...
  871:  format *tmp633                                               ...
  872:  format :drawHeader:s.1                                       ...
  873:  op mul *tmp634 10 :drawHeader:t.1                            Display.mnd: var ratio = round(10 * t / tt);
  874:  op div *tmp635 *tmp634 :drawHeader:tt                        ...
  875:  op round :drawHeader:ratio *tmp635 0                         ...
  876:  op idiv *tmp637 :drawHeader:ratio 10                         Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
  877:  op mod *tmp638 :drawHeader:ratio 10                          ...
  878:  format *tmp637                                               ...
  879:  format *tmp638                                               ...
  880:  draw print 174 272 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  881:  jump *label372 equal A¨SSJh-container30 null                 Display.mnd: if container_a != null then
  882:  sensor :drawHeader:count.1 A¨SSJh-container30 @scrap         Display.mnd: var count = container_a.@scrap;
  883:  op log10 *tmp642 :drawHeader:count.1 0                       Display.mnd: var len = floor(log10(count));
  884:  op floor :drawHeader:len *tmp642 0                           ...
  885:  print "x"                                                    Display.mnd: print(text);
  886:  print :drawHeader:count.1                                    ...
  887:  draw print 174 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  888:  op mul *tmp645 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @scrap, 12, 0);
  889:  op sub *tmp646 154 *tmp645                                   ...
  890:  draw image *tmp646 246 @scrap 12 0 0                         ...
  891:  sensor :drawHeader:count.1 A¨SSJh-container30 @sand          Display.mnd: count = container_a.@sand;
  892:  op log10 *tmp648 :drawHeader:count.1 0                       Display.mnd: len = floor(log10(count));
  893:  op floor :drawHeader:len *tmp648 0                           ...
  894:  print "x"                                                    Display.mnd: print(text);
  895:  print :drawHeader:count.1                                    ...
  896:  draw print 124 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  897:  op mul *tmp651 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @sand, 12, 0);
  898:  op sub *tmp652 104 *tmp651                                   ...
  899:  draw image *tmp652 246 @sand 12 0 0                          ...
  900:  jump *label373 always 0 0                                    Display.mnd: if container_a != null then
        label *label372                                              ...
  901:  jump *label376 equal .titaniumDrill false                    Display.mnd: if titaniumDrill then
  902:  sensor *tmp654 .titaniumDrill @titanium                      Display.mnd: var count = max(titaniumDrillCount, titaniumDrill.@titanium);
  903:  op max :drawHeader:count.2 .titaniumDrillCount *tmp654       ...
  904:  op log10 *tmp656 :drawHeader:count.2 0                       Display.mnd: var len = floor(log10(count));
  905:  op floor :drawHeader:len.1 *tmp656 0                         ...
  906:  print "x"                                                    Display.mnd: print(text);
  907:  print :drawHeader:count.2                                    ...
  908:  draw print 174 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  909:  op mul *tmp659 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 246, @titanium, 12, 0);
  910:  op sub *tmp660 154 *tmp659                                   ...
  911:  draw image *tmp660 246 @titanium 12 0 0                      ...
        label *label376                                              Display.mnd: if titaniumDrill then
  912:  jump *label379 equal .thoriumContainer false                 Display.mnd: if thoriumContainer then
  913:  sensor :drawHeader:count.3 .thoriumContainer @thorium        Display.mnd: var count = thoriumContainer.@thorium;
  914:  op log10 *tmp663 :drawHeader:count.3 0                       Display.mnd: var len = floor(log10(count));
  915:  op floor :drawHeader:len.2 *tmp663 0                         ...
  916:  print "x"                                                    Display.mnd: print(text);
  917:  print :drawHeader:count.3                                    ...
  918:  draw print 124 255 @topRight 0 0 0                           Display.mnd: drawPrint(x, y, alignment);
  919:  op mul *tmp666 7 :drawHeader:len.2                           Display.mnd: image(x - 20 - 7 * len, 246, @thorium, 12, 0);
  920:  op sub *tmp667 104 *tmp666                                   ...
  921:  draw image *tmp667 246 @thorium 12 0 0                       ...
        label *label379                                              Display.mnd: if thoriumContainer then
        label *label373                                              Display.mnd: if container_a != null then
  922:  set :drawHeader:x.4 174                                      Display.mnd: var x = 174;
  923:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  924:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  925:  jump *label383 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  926:  draw image 154 227 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  927:  print "x"                                                    Display.mnd: print(text);
  928:  print :drawUnitCount:count                                   ...
  929:  draw print 174 229 @right 0 0 0                              Display.mnd: drawPrint(x, y, alignment);
  930:  op sub :drawHeader:x.4 174 30                                Display.mnd: x -= 30;
        label *label383                                              Display.mnd: if count > 0 then
  931:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  932:  jump *label387 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  933:  op sub *tmp673 :drawHeader:x.4 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  934:  draw image *tmp673 227 @mono 12 0 0                          ...
  935:  print "x"                                                    Display.mnd: print(text);
  936:  print :drawUnitCount.1:count                                 ...
  937:  draw print :drawHeader:x.4 229 @right 0 0 0                  Display.mnd: drawPrint(x, y, alignment);
  938:  op sub :drawHeader:x.4 :drawHeader:x.4 30                    Display.mnd: x -= 30;
        label *label387                                              Display.mnd: if count > 0 then
  939:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  940:  jump *label391 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  941:  op sub *tmp676 :drawHeader:x.4 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  942:  draw image *tmp676 227 @flare 12 0 0                         ...
  943:  print "x"                                                    Display.mnd: print(text);
  944:  print :drawUnitCount.2:count                                 ...
  945:  draw print :drawHeader:x.4 229 @right 0 0 0                  Display.mnd: drawPrint(x, y, alignment);
        label *label391                                              Display.mnd: if count > 0 then
  946:  return :drawHeader*retaddr                                   Display.mnd: void drawHeader()
        label *label5                                                Display.mnd: void drawBlock(cfg)
  947:  read *tmp678 :drawBlock:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  948:  op sub *tmp679 *tmp678 74                                    ...
  949:  lookup block :unpackCfg:type *tmp679                         ...
  950:  read *tmp682 :drawBlock:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  951:  op sub *tmp683 *tmp682 74                                    ...
  952:  read *tmp686 :drawBlock:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  953:  op sub *tmp687 *tmp686 74                                    ...
  954:  read *tmp690 :drawBlock:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  955:  op sub :unpackCfg:rotation *tmp690 74                        ...
  956:  read *tmp693 :drawBlock:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  957:  op sub :unpackCfg:ind *tmp693 74                             ...
  958:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  959:  op shl *tmp703 1 :unpackCfg:ind                              Display.mnd: var built = blocksBuilt & (1 << index);
  960:  op and :drawBlock:built .blocksBuilt *tmp703                 ...
  961:  op add *tmp705 :drawBlock:built .pageSwitched                Display.mnd: if built + pageSwitched == 0 then return; end;
  962:  jump *label394 equal *tmp705 0                               ...
  963:  select *tmp708 notEqual :drawBlock:built false %[white] %80f Display.mnd: col(built ? %[white] : %80ff8080);
  964:  draw col *tmp708 0 0 0 0 0                                   ...
  965:  op mul *tmp711 2 :unpackCfg:size                             Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  966:  op mul *tmp712 90 :unpackCfg:rotation                        ...
  967:  draw image *tmp683 *tmp687 :unpackCfg:type *tmp711 *tmp712 0 ...
        label *label394                                              Display.mnd: void drawBlock(cfg)
  968:  return :drawBlock*retaddr                                    ...


Performance: parsed in 668 ms, compiled in 435 ms, optimized in 3,463 ms, run in 13 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp39 processor3 "*signature":
Variable 'processor3' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
