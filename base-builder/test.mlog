read *tmp13 processor1 "*signature"
jump 0 notEqual *tmp13 "385702d66f725e74:v1"
set x 85
set y 100
ubind @poly
op add *tmp14 y 5
ucontrol move x *tmp14 0 0 0
ucontrol within x *tmp14 2 *tmp16 0
jump 6 equal *tmp16 false
set :start @tick
write @unit processor1 ":createTerrainMask:unit"
write x processor1 ":createTerrainMask:x"
write y processor1 ":createTerrainMask:y"
write false processor1 ":createTerrainMask*finished"
write 1 processor1 "@counter"
op add *tmp23 y 4
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp23 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
op or :createAdjacentMask:row2 *tmp51 *tmp53
op add *tmp25 y 3
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp25 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
op or :createAdjacentMask:row1 *tmp51 *tmp53
op add *tmp27 y 2
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op and :createAdjacentMask:result :createAdjacentMask:mask 0xFE
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp27 y 1
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op shl *tmp34 :createAdjacentMask:result 7
op and *tmp35 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp34 *tmp35
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp52 x 4
ucontrol getBlock *tmp52 y 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 y 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op shl *tmp34 :createAdjacentMask:result 7
op and *tmp35 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp34 *tmp35
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp27 y -1
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op shl *tmp34 :createAdjacentMask:result 7
op and *tmp35 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp34 *tmp35
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp27 y -2
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op shl *tmp34 :createAdjacentMask:result 7
op and *tmp35 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp34 *tmp35
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp27 y -3
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op shl *tmp34 :createAdjacentMask:result 7
op and *tmp35 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp34 *tmp35
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp27 y -4
op add *tmp52 x 4
ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x 1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
ucontrol getBlock x *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -1
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -2
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -3
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp51 :createBlockMaskRow:result 1
op add *tmp52 x -4
ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
op or :createBlockMaskRow:result *tmp51 *tmp53
op shl *tmp29 :createAdjacentMask:row1 1
op or *tmp30 :createAdjacentMask:row2 *tmp29
op shr *tmp31 :createAdjacentMask:row1 1
op or *tmp32 *tmp30 *tmp31
op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
op shl *tmp34 :createAdjacentMask:result 7
op and *tmp35 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp34 *tmp35
op shr *tmp22 :createAdjacentMask:result 1
wait 1e-15
read *tmp38 processor1 ":createTerrainMask*finished"
jump 387 equal *tmp38 false
set :finish @tick
draw reset 0 0 0 0 0 0
draw translate 6 6 0 0 0 0
draw clear 0 0 0 0 0 0
op and *tmp43 *tmp22 4398046511104
jump 398 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 399 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 60 8 8 0 0
op and *tmp43 *tmp22 8796093022208
jump 404 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 405 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 60 8 8 0 0
op and *tmp43 *tmp22 17592186044416
jump 410 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 411 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 60 8 8 0 0
op and *tmp43 *tmp22 35184372088832
jump 416 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 417 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 60 8 8 0 0
op and *tmp43 *tmp22 70368744177664
jump 422 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 423 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 60 8 8 0 0
op and *tmp43 *tmp22 140737488355328
jump 428 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 429 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 60 8 8 0 0
op and *tmp43 *tmp22 281474976710656
jump 434 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 435 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 60 8 8 0 0
op and *tmp43 *tmp22 34359738368
jump 440 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 441 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 50 8 8 0 0
op and *tmp43 *tmp22 68719476736
jump 446 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 447 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 50 8 8 0 0
op and *tmp43 *tmp22 137438953472
jump 452 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 453 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 50 8 8 0 0
op and *tmp43 *tmp22 274877906944
jump 458 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 459 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 50 8 8 0 0
op and *tmp43 *tmp22 549755813888
jump 464 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 465 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 50 8 8 0 0
op and *tmp43 *tmp22 1099511627776
jump 470 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 471 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 50 8 8 0 0
op and *tmp43 *tmp22 2199023255552
jump 476 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 477 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 50 8 8 0 0
op and *tmp43 *tmp22 268435456
jump 482 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 483 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 40 8 8 0 0
op and *tmp43 *tmp22 536870912
jump 488 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 489 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 40 8 8 0 0
op and *tmp43 *tmp22 1073741824
jump 494 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 495 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 40 8 8 0 0
op and *tmp43 *tmp22 2147483648
jump 500 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 501 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 40 8 8 0 0
op and *tmp43 *tmp22 4294967296
jump 506 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 507 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 40 8 8 0 0
op and *tmp43 *tmp22 8589934592
jump 512 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 513 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 40 8 8 0 0
op and *tmp43 *tmp22 17179869184
jump 518 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 519 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 40 8 8 0 0
op and *tmp43 *tmp22 2097152
jump 524 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 525 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 30 8 8 0 0
op and *tmp43 *tmp22 4194304
jump 530 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 531 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 30 8 8 0 0
op and *tmp43 *tmp22 8388608
jump 536 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 537 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 30 8 8 0 0
op and *tmp43 *tmp22 16777216
jump 542 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 543 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 30 8 8 0 0
op and *tmp43 *tmp22 33554432
jump 548 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 549 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 30 8 8 0 0
op and *tmp43 *tmp22 67108864
jump 554 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 555 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 30 8 8 0 0
op and *tmp43 *tmp22 134217728
jump 560 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 561 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 30 8 8 0 0
op and *tmp43 *tmp22 16384
jump 566 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 567 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 20 8 8 0 0
op and *tmp43 *tmp22 32768
jump 572 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 573 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 20 8 8 0 0
op and *tmp43 *tmp22 65536
jump 578 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 579 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 20 8 8 0 0
op and *tmp43 *tmp22 131072
jump 584 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 585 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 20 8 8 0 0
op and *tmp43 *tmp22 262144
jump 590 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 591 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 20 8 8 0 0
op and *tmp43 *tmp22 524288
jump 596 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 597 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 20 8 8 0 0
op and *tmp43 *tmp22 1048576
jump 602 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 603 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 20 8 8 0 0
op and *tmp43 *tmp22 128
jump 608 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 609 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 10 8 8 0 0
op and *tmp43 *tmp22 256
jump 614 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 615 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 10 8 8 0 0
op and *tmp43 *tmp22 512
jump 620 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 621 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 10 8 8 0 0
op and *tmp43 *tmp22 1024
jump 626 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 627 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 10 8 8 0 0
op and *tmp43 *tmp22 2048
jump 632 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 633 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 10 8 8 0 0
op and *tmp43 *tmp22 4096
jump 638 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 639 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 10 8 8 0 0
op and *tmp43 *tmp22 8192
jump 644 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 645 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 10 8 8 0 0
op and *tmp43 *tmp22 1
jump 650 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 651 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 0 0 8 8 0 0
op and *tmp43 *tmp22 2
jump 656 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 657 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 10 0 8 8 0 0
op and *tmp43 *tmp22 4
jump 662 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 663 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 20 0 8 8 0 0
op and *tmp43 *tmp22 8
jump 668 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 669 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 30 0 8 8 0 0
op and *tmp43 *tmp22 16
jump 674 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 675 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 40 0 8 8 0 0
op and *tmp43 *tmp22 32
jump 680 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 681 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 50 0 8 8 0 0
op and *tmp43 *tmp22 64
jump 686 equal *tmp43 false
draw col %[red] 0 0 0 0 0
jump 687 always 0 0
draw col %[green] 0 0 0 0 0
draw rect 60 0 8 8 0 0
drawflush display1
print *tmp22
print "\n"
op sub *tmp47 :finish :start
op div *tmp49 *tmp47 0.06
op round *tmp50 *tmp49 0
print *tmp50
printflush message1

