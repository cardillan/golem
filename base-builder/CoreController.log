   498 instructions before optimizations.
    47 instructions eliminated by Temp Variables Elimination (6 iterations).
     1 instructions eliminated by Case Expression Optimization.
    63 instructions eliminated by Dead Code Elimination (7 iterations).
     5 instructions eliminated by Jump Normalization (5 iterations).
    30 instructions eliminated by Jump Optimization (5 iterations).
    23 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     4 instructions modified by Expression Optimization (3 iterations).
    28 instructions eliminated by If Expression Optimization (5 iterations).
    41 instructions eliminated by Data Flow Optimization (4 passes, 15 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
    66 instructions added by Function Inlining (6 iterations).
     6 function calls inlined by Function Inlining.
     4 instructions eliminated by Jump Straightening (5 iterations).
    17 instructions updated by Jump Threading.
    50 instructions eliminated by Unreachable Code Elimination (2 iterations).
   272 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 707):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +62, benefit       76.6, efficiency      1.235
  * Inline function 'logUnit' defined at CoreController.mnd:47:1 size    -1, benefit       76.6, efficiency   Infinity (-5 instructions)
    Inline function 'log' defined at CoreController.mnd:43:1     size    -1, benefit       76.6, efficiency   Infinity
    Inline function call at CoreController.mnd:82:9              size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:82:9              size   +21, benefit       10.9, efficiency      0.521
    Inline function call at CoreController.mnd:163:17            size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:217:17            size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:52:5              size    +3, benefit       76.6, efficiency     25.521
    Inline function call at CoreController.mnd:48:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 712):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +65, benefit       76.6, efficiency      1.178
  * Inline function 'log' defined at CoreController.mnd:43:1     size    -1, benefit       76.6, efficiency   Infinity (-4 instructions)
    Inline function call at CoreController.mnd:82:9              size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:82:9              size   +22, benefit       10.9, efficiency      0.497
    Inline function call at CoreController.mnd:163:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:217:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:48:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 716):
  * Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +80, benefit       76.6, efficiency      0.957 (+70 instructions)
    Inline function call at CoreController.mnd:82:9              size   +27, benefit       21.9, efficiency      0.810
    Inline function call at CoreController.mnd:82:9              size   +27, benefit       10.9, efficiency      0.405
    Inline function call at CoreController.mnd:163:17            size   +27, benefit       21.9, efficiency      0.810
    Inline function call at CoreController.mnd:217:17            size   +27, benefit       21.9, efficiency      0.810

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   525 setaddr :logUnit*retaddr *label100 (h:*label100)
   526 call *label7 *invalid :logUnit*retval (m:*label100) (h:*label100)
   527 label *label100
-    * set *tmp245 :factoryUnitFinished:unit
-    * jump *label103 equal *tmp245 @flare
+  528 jump *label103 equal :factoryUnitFinished:unit @flare
   529 jump *label102 always
   530 label *label103
   531 op add *tmp246 .flares 1
 
   534 set *tmp244 *tmp246
   535 jump *label101 always
   536 label *label102
-    * jump *label105 equal *tmp245 @mono
+  537 jump *label105 equal :factoryUnitFinished:unit @mono
   538 jump *label104 always
   539 label *label105
   540 op add *tmp247 .monos 1
 
   543 set *tmp244 *tmp247
   544 jump *label101 always
   545 label *label104
-    * jump *label107 equal *tmp245 @poly
+  546 jump *label107 equal :factoryUnitFinished:unit @poly
   547 jump *label106 always
   548 label *label107
   549 op add *tmp248 .polys 1
 
   552 set *tmp244 *tmp248
   553 jump *label101 always
   554 label *label106
-    * jump *label109 equal *tmp245 @mega
+  555 jump *label109 equal :factoryUnitFinished:unit @mega
   556 jump *label108 always
   557 label *label109
   558 op add *tmp249 .megas 1

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-41 instructions):
 
    85 set .enableWater *tmp70
    86 set *tmp73 A¡ASJ\-water-extractor18
    87 control enabled *tmp73 .enableWater
-    * set *tmp54 .enableWater
    88 jump *label17 always
    89 label *label16
    90 set *tmp75 AJRJM-combustion-generator3
    91 op lessThan *tmp77 :backgroundProcess:power 809
    92 control enabled *tmp75 *tmp77
-    * set *tmp54 *tmp77
    93 label *label17
    94 op lessThan *tmp78 .flares .flareTarget
    95 op notEqual *tmp79 .airFactoryTarget @mono
 
   106 set *tmp84 A©FJJU-unloader11
   107 control config *tmp84 @coal
   108 jump *label24 always
-    * set *tmp83 null
   109 jump *label26 always
   110 label *label25
-    * set *tmp83 null
   111 label *label26
   112 sensor *tmp86 AAKJ]-steam-generator19 @coal
   113 op mul *tmp87 5 AAKJ]-steam-generator19
 
   116 set *tmp90 A©FJJU-unloader11
   117 control config *tmp90 @coal
   118 jump *label24 always
-    * set *tmp89 null
   119 jump *label28 always
   120 label *label27
-    * set *tmp89 null
   121 label *label28
   122 op lessThan *tmp92 :handleAirFactory:power 200
   123 jump *label29 equal *tmp92 false
   124 set *tmp94 A¾BFLW-air-factory13
   125 control enabled *tmp94 false
-    * set *tmp93 false
   126 jump *label30 always
   127 label *label29
   128 op greaterThan *tmp96 :handleAirFactory:power 500
 
   134 label *label31
   135 set *tmp97 null
   136 label *label32
-    * set *tmp93 *tmp97
   137 label *label30
   138 set *tmp100 A¾BFLW-air-factory13
   139 control config *tmp100 :handleAirFactory:unit
 
   149 set *tmp105 A©FJJU-unloader11
   150 control config *tmp105 @coal
   151 jump *label24 always
-    * set *tmp104 null
   152 jump *label34 always
   153 label *label33
-    * set *tmp104 null
   154 label *label34
   155 set .lastProgress :handleAirFactory:factoryProgress
   156 jump *label36 equal :handleAirFactory:lead false
 
   174 label *label40
   175 set *tmp113 null
   176 label *label41
-    * set *tmp107 *tmp113
   177 jump *label37 always
   178 label *label36
-    * set *tmp107 null
   179 label *label37
   180 sensor *tmp116 .core @silicon
   181 op greaterThan *tmp117 *tmp116 0
 
   197 label *label45
   198 control config *tmp119 *tmp123
   199 label *label24
-    * set *tmp81 null
   200 jump *label23 always
   201 label *label22
   202 op lessThan *tmp124 .monos .monoTarget
 
   214 set *tmp130 A©FJJU-unloader11
   215 control config *tmp130 @coal
   216 jump *label48 always
-    * set *tmp129 null
   217 jump *label50 always
   218 label *label49
-    * set *tmp129 null
   219 label *label50
   220 sensor *tmp132 AAKJ]-steam-generator19 @coal
   221 op mul *tmp133 5 AAKJ]-steam-generator19
 
   224 set *tmp136 A©FJJU-unloader11
   225 control config *tmp136 @coal
   226 jump *label48 always
-    * set *tmp135 null
   227 jump *label52 always
   228 label *label51
-    * set *tmp135 null
   229 label *label52
   230 op lessThan *tmp138 :handleAirFactory.1:power 200
   231 jump *label53 equal *tmp138 false
   232 set *tmp140 A¾BFLW-air-factory13
   233 control enabled *tmp140 false
-    * set *tmp139 false
   234 jump *label54 always
   235 label *label53
   236 op greaterThan *tmp142 :handleAirFactory.1:power 500
 
   242 label *label55
   243 set *tmp143 null
   244 label *label56
-    * set *tmp139 *tmp143
   245 label *label54
   246 set *tmp146 A¾BFLW-air-factory13
   247 control config *tmp146 :handleAirFactory.1:unit
 
   257 set *tmp151 A©FJJU-unloader11
   258 control config *tmp151 @coal
   259 jump *label48 always
-    * set *tmp150 null
   260 jump *label58 always
   261 label *label57
-    * set *tmp150 null
   262 label *label58
   263 set .lastProgress :handleAirFactory.1:factoryProgress
   264 jump *label60 equal :handleAirFactory.1:lead false
 
   282 label *label64
   283 set *tmp159 null
   284 label *label65
-    * set *tmp153 *tmp159
   285 jump *label61 always
   286 label *label60
-    * set *tmp153 null
   287 label *label61
   288 sensor *tmp162 .core @silicon
   289 op greaterThan *tmp163 *tmp162 0
 
   318 control config *tmp174 @coal
   319 set *tmp127 @coal
   320 label *label47
-    * set *tmp81 *tmp127
   321 label *label23
   322 op lessThan *tmp176 .polys .polyTarget
   323 jump *label70 equal *tmp176 false
 
   332 label *label74
   333 set .recoEntered false
   334 set .lastRecoProgress 0
-    * set *tmp180 0
   335 jump *label73 always
   336 label *label72
   337 set .lastRecoProgress :backgroundProcess:recoProgress
-    * set *tmp180 :backgroundProcess:recoProgress
   338 label *label73
   339 sensor *tmp181 AÀF@Lb-additive-reconstructor24 @silicon
   340 set :backgroundProcess:s *tmp181
 
   363 set .monos *tmp193
   364 write *tmp193 .display ".monos"
   365 set .recoEntered true
-    * set *tmp188 true
   366 jump *label78 always
   367 label *label77
-    * set *tmp188 null
   368 label *label78
   369 set *tmp194 A{HDJa-inverted-sorter23
   370 control enabled *tmp194 false
 
   403 label *label83
   404 set *tmp186 *tmp199
   405 label *label76
-    * set *tmp177 *tmp186
   406 jump *label71 always
   407 label *label70
   408 write null .display ".nextAddReco"
   409 set *tmp216 A{HDJa-inverted-sorter23
   410 control enabled *tmp216 false
-    * set *tmp177 false
   411 label *label71
   412 jump *label86 equal AÁNBJc-multiplicative-reconstructor25 false
   413 write @mega .display ".nextMultiReco"
 
   416 op lessThan *tmp220 *tmp219 40
   417 jump *label88 equal *tmp220 false
   418 set :backgroundProcess:c @metaglass
-    * set *tmp221 :backgroundProcess:c
   419 jump *label89 always
   420 label *label88
   421 sensor *tmp222 .core @titanium
 
   441 label *label93
   442 set *tmp226 *tmp231
   443 label *label91
-    * set *tmp221 *tmp226
   444 label *label89
   445 set *tmp232 A©NHJX-unloader14
   446 control config *tmp232 :backgroundProcess:c
 
   466 set .smelterTarget 0
   467 set .pressTarget 0
   468 set .kilnTarget 0
-    * set *tmp240 0
   469 jump *label98 always
   470 label *label97
-    * set *tmp240 null
   471 label *label98
   472 set .lastMultiProgress :backgroundProcess:multiProgress
   473 set *tmp238 :backgroundProcess:multiProgress
   474 label *label95
-    * set *tmp218 *tmp238
   475 jump *label87 always
   476 label *label86
-    * set *tmp218 null
   477 label *label87
   478 op sub *tmp243 @tick :backgroundProcess:ticks
   479 set .loopTicks *tmp243
 
   495 op add *tmp246 .flares 1
   496 set .flares *tmp246
   497 write *tmp246 .display ".flares"
-    * set *tmp244 *tmp246
   498 jump *label101 always
   499 label *label102
   500 jump *label105 equal :factoryUnitFinished:unit @mono
 
   503 op add *tmp247 .monos 1
   504 set .monos *tmp247
   505 write *tmp247 .display ".monos"
-    * set *tmp244 *tmp247
   506 jump *label101 always
   507 label *label104
   508 jump *label107 equal :factoryUnitFinished:unit @poly
 
   511 op add *tmp248 .polys 1
   512 set .polys *tmp248
   513 write *tmp248 .display ".polys"
-    * set *tmp244 *tmp248
   514 jump *label101 always
   515 label *label106
   516 jump *label109 equal :factoryUnitFinished:unit @mega
 
   519 op add *tmp249 .megas 1
   520 set .megas *tmp249
   521 write *tmp249 .display ".megas"
-    * set *tmp244 *tmp249
   522 jump *label101 always
   523 label *label108
-    * set *tmp244 null
   524 label *label101
   525 label *label99
   526 return :factoryUnitFinished*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-16 instructions):
 
   129 jump *label31 equal *tmp96 false
   130 set *tmp98 A¾BFLW-air-factory13
   131 control enabled *tmp98 true
-    * set *tmp97 true
   132 jump *label32 always
   133 label *label31
-    * set *tmp97 null
   134 label *label32
   135 label *label30
   136 set *tmp100 A¾BFLW-air-factory13
 
   167 set *tmp114 A©FJJU-unloader11
   168 control config *tmp114 @lead
   169 jump *label24 always
-    * set *tmp113 null
   170 jump *label41 always
   171 label *label40
-    * set *tmp113 null
   172 label *label41
   173 jump *label37 always
   174 label *label36
 
   233 jump *label55 equal *tmp142 false
   234 set *tmp144 A¾BFLW-air-factory13
   235 control enabled *tmp144 true
-    * set *tmp143 true
   236 jump *label56 always
   237 label *label55
-    * set *tmp143 null
   238 label *label56
   239 label *label54
   240 set *tmp146 A¾BFLW-air-factory13
 
   271 set *tmp160 A©FJJU-unloader11
   272 control config *tmp160 @lead
   273 jump *label48 always
-    * set *tmp159 null
   274 jump *label65 always
   275 label *label64
-    * set *tmp159 null
   276 label *label65
   277 jump *label61 always
   278 label *label60
 
   297 label *label69
   298 control config *tmp165 *tmp169
   299 label *label48
-    * set *tmp127 null
   300 jump *label47 always
   301 label *label46
   302 set .airFactoryTarget null
 
   307 control config *tmp172 @flare
   308 set *tmp174 A©FJJU-unloader11
   309 control config *tmp174 @coal
-    * set *tmp127 @coal
   310 label *label47
   311 label *label23
   312 op lessThan *tmp176 .polys .polyTarget
 
   358 label *label78
   359 set *tmp194 A{HDJa-inverted-sorter23
   360 control enabled *tmp194 false
-    * set *tmp186 false
   361 jump *label76 always
   362 label *label75
   363 op greaterThan *tmp196 :backgroundProcess:coreSilicon .siliconReserve
 
   390 label *label85
   391 set *tmp199 *tmp208
   392 label *label83
-    * set *tmp186 *tmp199
   393 label *label76
   394 jump *label71 always
   395 label *label70
 
   412 op land *tmp225 *tmp222 *tmp224
   413 jump *label90 equal *tmp225 false
   414 set :backgroundProcess:c @titanium
-    * set *tmp226 :backgroundProcess:c
   415 jump *label91 always
   416 label *label90
   417 sensor *tmp227 .core @silicon
 
   426 set :backgroundProcess:c @coal
   427 set *tmp231 :backgroundProcess:c
   428 label *label93
-    * set *tmp226 *tmp231
   429 label *label91
   430 label *label89
   431 set *tmp232 A©NHJX-unloader14
 
   442 call *label8 *invalid :factoryUnitFinished*retval (m:*label96) (h:*label96)
   443 label *label96
   444 set .lastMultiProgress 0
-    * set *tmp238 0
   445 jump *label95 always
   446 label *label94
   447 op greaterThan *tmp239 :backgroundProcess:multiProgress 0
 
   455 label *label97
   456 label *label98
   457 set .lastMultiProgress :backgroundProcess:multiProgress
-    * set *tmp238 :backgroundProcess:multiProgress
   458 label *label95
   459 jump *label87 always
   460 label *label86

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-4 instructions):
 
   369 set *tmp202 A{HDJa-inverted-sorter23
   370 set *tmp204 .canConsume
   371 control enabled *tmp202 *tmp204
-    * set *tmp199 *tmp204
   372 jump *label83 always
   373 label *label82
   374 op greaterThan *tmp205 :backgroundProcess:coreGraphite .graphiteReserve
 
   387 control enabled *tmp214 false
   388 set *tmp208 false
   389 label *label85
-    * set *tmp199 *tmp208
   390 label *label83
   391 label *label76
   392 jump *label71 always
 
   418 op land *tmp230 *tmp227 *tmp229
   419 jump *label92 equal *tmp230 false
   420 set :backgroundProcess:c @silicon
-    * set *tmp231 :backgroundProcess:c
   421 jump *label93 always
   422 label *label92
   423 set :backgroundProcess:c @coal
-    * set *tmp231 :backgroundProcess:c
   424 label *label93
   425 label *label91
   426 label *label89

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   380 set *tmp211 A{HDJa-inverted-sorter23
   381 set *tmp213 .canConsume
   382 control enabled *tmp211 *tmp213
-    * set *tmp208 *tmp213
   383 jump *label85 always
   384 label *label84
   385 set *tmp214 A{HDJa-inverted-sorter23
   386 control enabled *tmp214 false
-    * set *tmp208 false
   387 label *label85
   388 label *label83
   389 label *label76

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-47 instructions):
 
    28 op equal *tmp33 .finished false
    29 jump *label15 equal *tmp33 false
    30 set :backgroundProcess:ticks @tick
-    * sensor *tmp34 .core @silicon
-    * set :backgroundProcess:coreSilicon *tmp34
-    * sensor *tmp35 .core @graphite
-    * set :backgroundProcess:coreGraphite *tmp35
+   31 sensor :backgroundProcess:coreSilicon .core @silicon
+   32 sensor :backgroundProcess:coreGraphite .core @graphite
    33 set *tmp36 ALQIJ^-silicon-smelter20
    34 set *tmp38 ALMQJN-silicon-smelter4
    35 op lessThan *tmp40 :backgroundProcess:coreSilicon .smelterTarget
 
    47 sensor *tmp51 .core @metaglass
    48 op lessThan *tmp52 *tmp51 .kilnTarget
    49 control enabled *tmp49 *tmp52
-    * sensor *tmp53 AJTJK-battery1 @totalPower
-    * set :backgroundProcess:power *tmp53
+   50 sensor :backgroundProcess:power AJTJK-battery1 @totalPower
    51 jump *label16 equal AAKJ]-steam-generator19 false
    52 set *tmp55 AJRJM-combustion-generator3
    53 op lessThan *tmp57 :backgroundProcess:power 9
 
    61 set *tmp64 AXTLJm-pulverizer35
    62 op greaterThan *tmp66 :backgroundProcess:power 1000
    63 control enabled *tmp64 *tmp66
-    * sensor *tmp67 AÜAOJ[-liquid-container17 @totalLiquids
-    * set :backgroundProcess:water *tmp67
-    * op max *tmp68 .waterMax :backgroundProcess:water
-    * set .waterMax *tmp68
+   64 sensor :backgroundProcess:water AÜAOJ[-liquid-container17 @totalLiquids
+   65 op max .waterMax .waterMax :backgroundProcess:water
    66 op lessThan *tmp69 :backgroundProcess:water 250
    67 jump *label18 equal *tmp69 false
    68 set *tmp70 true
 
    78 set *tmp70 *tmp72
    79 label *label19
    80 set .enableWater *tmp70
-    * set *tmp73 A¡ASJ\-water-extractor18
-    * control enabled *tmp73 .enableWater
+   81 control enabled A¡ASJ\-water-extractor18 .enableWater
    82 jump *label17 always
    83 label *label16
    84 set *tmp75 AJRJM-combustion-generator3
 
    97 set :handleAirFactory:lead 0
    98 op equal *tmp82 .canConsume false
    99 jump *label25 equal *tmp82 false
-    * set *tmp84 A©FJJU-unloader11
-    * control config *tmp84 @coal
+  100 control config A©FJJU-unloader11 @coal
   101 jump *label24 always
   102 jump *label26 always
   103 label *label25
 
   106 op mul *tmp87 5 AAKJ]-steam-generator19
   107 op lessThan *tmp88 *tmp86 *tmp87
   108 jump *label27 equal *tmp88 false
-    * set *tmp90 A©FJJU-unloader11
-    * control config *tmp90 @coal
+  109 control config A©FJJU-unloader11 @coal
   110 jump *label24 always
   111 jump *label28 always
   112 label *label27
   113 label *label28
   114 op lessThan *tmp92 :handleAirFactory:power 200
   115 jump *label29 equal *tmp92 false
-    * set *tmp94 A¾BFLW-air-factory13
-    * control enabled *tmp94 false
+  116 control enabled A¾BFLW-air-factory13 false
   117 jump *label30 always
   118 label *label29
   119 op greaterThan *tmp96 :handleAirFactory:power 500
   120 jump *label31 equal *tmp96 false
-    * set *tmp98 A¾BFLW-air-factory13
-    * control enabled *tmp98 true
+  121 control enabled A¾BFLW-air-factory13 true
   122 jump *label32 always
   123 label *label31
   124 label *label32
   125 label *label30
-    * set *tmp100 A¾BFLW-air-factory13
-    * control config *tmp100 :handleAirFactory:unit
-    * sensor *tmp102 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory:factoryProgress *tmp102
+  126 control config A¾BFLW-air-factory13 :handleAirFactory:unit
+  127 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   128 op greaterThan *tmp103 .lastProgress :handleAirFactory:factoryProgress
   129 jump *label33 equal *tmp103 false
   130 set :factoryUnitFinished:unit :handleAirFactory:unit
 
   132 call *label8 *invalid :factoryUnitFinished*retval (m:*label35) (h:*label35)
   133 label *label35
   134 set .lastProgress 0
-    * set *tmp105 A©FJJU-unloader11
-    * control config *tmp105 @coal
+  135 control config A©FJJU-unloader11 @coal
   136 jump *label24 always
   137 jump *label34 always
   138 label *label33
 
   151 sensor *tmp111 A¾BFLW-air-factory13 @lead
   152 op lessThan *tmp112 *tmp111 :handleAirFactory:leadLimit
   153 jump *label40 equal *tmp112 false
-    * set *tmp114 A©FJJU-unloader11
-    * control config *tmp114 @lead
+  154 control config A©FJJU-unloader11 @lead
   155 jump *label24 always
   156 jump *label41 always
   157 label *label40
 
   193 set :handleAirFactory.1:lead 15
   194 op equal *tmp128 .canConsume false
   195 jump *label49 equal *tmp128 false
-    * set *tmp130 A©FJJU-unloader11
-    * control config *tmp130 @coal
+  196 control config A©FJJU-unloader11 @coal
   197 jump *label48 always
   198 jump *label50 always
   199 label *label49
 
   202 op mul *tmp133 5 AAKJ]-steam-generator19
   203 op lessThan *tmp134 *tmp132 *tmp133
   204 jump *label51 equal *tmp134 false
-    * set *tmp136 A©FJJU-unloader11
-    * control config *tmp136 @coal
+  205 control config A©FJJU-unloader11 @coal
   206 jump *label48 always
   207 jump *label52 always
   208 label *label51
   209 label *label52
   210 op lessThan *tmp138 :handleAirFactory.1:power 200
   211 jump *label53 equal *tmp138 false
-    * set *tmp140 A¾BFLW-air-factory13
-    * control enabled *tmp140 false
+  212 control enabled A¾BFLW-air-factory13 false
   213 jump *label54 always
   214 label *label53
   215 op greaterThan *tmp142 :handleAirFactory.1:power 500
   216 jump *label55 equal *tmp142 false
-    * set *tmp144 A¾BFLW-air-factory13
-    * control enabled *tmp144 true
+  217 control enabled A¾BFLW-air-factory13 true
   218 jump *label56 always
   219 label *label55
   220 label *label56
   221 label *label54
-    * set *tmp146 A¾BFLW-air-factory13
-    * control config *tmp146 :handleAirFactory.1:unit
-    * sensor *tmp148 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory.1:factoryProgress *tmp148
+  222 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  223 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   224 op greaterThan *tmp149 .lastProgress :handleAirFactory.1:factoryProgress
   225 jump *label57 equal *tmp149 false
   226 set :factoryUnitFinished:unit :handleAirFactory.1:unit
 
   228 call *label8 *invalid :factoryUnitFinished*retval (m:*label59) (h:*label59)
   229 label *label59
   230 set .lastProgress 0
-    * set *tmp151 A©FJJU-unloader11
-    * control config *tmp151 @coal
+  231 control config A©FJJU-unloader11 @coal
   232 jump *label48 always
   233 jump *label58 always
   234 label *label57
 
   247 sensor *tmp157 A¾BFLW-air-factory13 @lead
   248 op lessThan *tmp158 *tmp157 :handleAirFactory.1:leadLimit
   249 jump *label64 equal *tmp158 false
-    * set *tmp160 A©FJJU-unloader11
-    * control config *tmp160 @lead
+  250 control config A©FJJU-unloader11 @lead
   251 jump *label48 always
   252 jump *label65 always
   253 label *label64
 
   279 label *label46
   280 set .airFactoryTarget null
   281 write .airFactoryTarget .display ".nextFactory"
-    * set *tmp170 A¾BFLW-air-factory13
-    * control enabled *tmp170 false
-    * set *tmp172 A¾BFLW-air-factory13
-    * control config *tmp172 @flare
-    * set *tmp174 A©FJJU-unloader11
-    * control config *tmp174 @coal
+  282 control enabled A¾BFLW-air-factory13 false
+  283 control config A¾BFLW-air-factory13 @flare
+  284 control config A©FJJU-unloader11 @coal
   285 label *label47
   286 label *label23
   287 op lessThan *tmp176 .polys .polyTarget
   288 jump *label70 equal *tmp176 false
   289 write @poly .display ".nextAddReco"
-    * sensor *tmp178 AÀF@Lb-additive-reconstructor24 @progress
-    * set :backgroundProcess:recoProgress *tmp178
+  290 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   291 op greaterThan *tmp179 .lastRecoProgress :backgroundProcess:recoProgress
   292 jump *label72 equal *tmp179 false
   293 set :factoryUnitFinished:unit @poly
 
   300 label *label72
   301 set .lastRecoProgress :backgroundProcess:recoProgress
   302 label *label73
-    * sensor *tmp181 AÀF@Lb-additive-reconstructor24 @silicon
-    * set :backgroundProcess:s *tmp181
-    * sensor *tmp182 AÀF@Lb-additive-reconstructor24 @graphite
-    * set :backgroundProcess:g *tmp182
+  303 sensor :backgroundProcess:s AÀF@Lb-additive-reconstructor24 @silicon
+  304 sensor :backgroundProcess:g AÀF@Lb-additive-reconstructor24 @graphite
   305 op greaterThanEq *tmp183 :backgroundProcess:s 40
   306 op greaterThanEq *tmp184 :backgroundProcess:g 40
   307 op land *tmp185 *tmp183 *tmp184
   308 jump *label75 equal *tmp185 false
   309 op equal *tmp187 .recoEntered false
   310 jump *label77 equal *tmp187 false
-    * sensor *tmp189 AÀF@Lb-additive-reconstructor24 @x
-    * set :backgroundProcess:x *tmp189
-    * sensor *tmp190 AÀF@Lb-additive-reconstructor24 @y
-    * set :backgroundProcess:y *tmp190
+  311 sensor :backgroundProcess:x AÀF@Lb-additive-reconstructor24 @x
+  312 sensor :backgroundProcess:y AÀF@Lb-additive-reconstructor24 @y
   313 ubind @mono
   314 label *label79
   315 ucontrol move :backgroundProcess:x :backgroundProcess:y
 
   326 jump *label78 always
   327 label *label77
   328 label *label78
-    * set *tmp194 A{HDJa-inverted-sorter23
-    * control enabled *tmp194 false
+  329 control enabled A{HDJa-inverted-sorter23 false
   330 jump *label76 always
   331 label *label75
   332 op greaterThan *tmp196 :backgroundProcess:coreSilicon .siliconReserve
   333 op mul *tmp197 40 *tmp196
   334 op lessThan *tmp198 :backgroundProcess:s *tmp197
   335 jump *label82 equal *tmp198 false
-    * set *tmp200 A©HFJ`-unloader22
-    * control config *tmp200 @silicon
-    * set *tmp202 A{HDJa-inverted-sorter23
-    * set *tmp204 .canConsume
-    * control enabled *tmp202 *tmp204
+  336 control config A©HFJ`-unloader22 @silicon
+  337 control enabled A{HDJa-inverted-sorter23 .canConsume
   338 jump *label83 always
   339 label *label82
   340 op greaterThan *tmp205 :backgroundProcess:coreGraphite .graphiteReserve
   341 op mul *tmp206 40 *tmp205
   342 op lessThan *tmp207 :backgroundProcess:g *tmp206
   343 jump *label84 equal *tmp207 false
-    * set *tmp209 A©HFJ`-unloader22
-    * control config *tmp209 @graphite
-    * set *tmp211 A{HDJa-inverted-sorter23
-    * set *tmp213 .canConsume
-    * control enabled *tmp211 *tmp213
+  344 control config A©HFJ`-unloader22 @graphite
+  345 control enabled A{HDJa-inverted-sorter23 .canConsume
   346 jump *label85 always
   347 label *label84
-    * set *tmp214 A{HDJa-inverted-sorter23
-    * control enabled *tmp214 false
+  348 control enabled A{HDJa-inverted-sorter23 false
   349 label *label85
   350 label *label83
   351 label *label76
   352 jump *label71 always
   353 label *label70
   354 write null .display ".nextAddReco"
-    * set *tmp216 A{HDJa-inverted-sorter23
-    * control enabled *tmp216 false
+  355 control enabled A{HDJa-inverted-sorter23 false
   356 label *label71
   357 jump *label86 equal AÁNBJc-multiplicative-reconstructor25 false
   358 write @mega .display ".nextMultiReco"
 
   383 label *label93
   384 label *label91
   385 label *label89
-    * set *tmp232 A©NHJX-unloader14
-    * control config *tmp232 :backgroundProcess:c
-    * set *tmp234 A©HFJ`-unloader22
-    * control config *tmp234 :backgroundProcess:c
-    * sensor *tmp236 AÁNBJc-multiplicative-reconstructor25 @progress
-    * set :backgroundProcess:multiProgress *tmp236
+  386 control config A©NHJX-unloader14 :backgroundProcess:c
+  387 control config A©HFJ`-unloader22 :backgroundProcess:c
+  388 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
   389 op greaterThan *tmp237 .lastMultiProgress :backgroundProcess:multiProgress
   390 jump *label94 equal *tmp237 false
   391 write null .display ".nextMultiReco"
 
   398 label *label94
   399 op greaterThan *tmp239 :backgroundProcess:multiProgress 0
   400 jump *label97 equal *tmp239 false
-    * set *tmp241 A©RPJg-unloader29
-    * control enabled *tmp241 false
+  401 control enabled A©RPJg-unloader29 false
   402 set .smelterTarget 0
   403 set .pressTarget 0
   404 set .kilnTarget 0
 
   410 jump *label87 always
   411 label *label86
   412 label *label87
-    * op sub *tmp243 @tick :backgroundProcess:ticks
-    * set .loopTicks *tmp243
+  413 op sub .loopTicks @tick :backgroundProcess:ticks
   414 label *label14
   415 jump *label13 always
   416 label *label15
 
   461 end
   462 label *label7
   463 sensor *tmp250 :logUnit:unit @id
-    * op add *tmp251 @blockCount *tmp250
-    * set :log:encodedId *tmp251
+  464 op add :log:encodedId @blockCount *tmp250
   465 setaddr :log*retaddr *label111 (h:*label111)
   466 call *label6 *invalid :log*retval (m:*label111) (h:*label111)
   467 label *label111
 
   481 return :log*retaddr
   482 end
   483 label *label0
-    * set *tmp284 A©FJJU-unloader11
-    * control config *tmp284 @coal
-    * set *tmp286 A{HDJa-inverted-sorter23
-    * control enabled *tmp286 false
+  484 control config A©FJJU-unloader11 @coal
+  485 control enabled A{HDJa-inverted-sorter23 false
   486 set .canConsume false
   487 label *label114
   488 set :buildStart*finished true

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-4 instructions):
 
   423 setaddr :logUnit*retaddr *label100 (h:*label100)
   424 call *label7 *invalid :logUnit*retval (m:*label100) (h:*label100)
   425 label *label100
-    * jump *label103 equal :factoryUnitFinished:unit @flare
-    * jump *label102 always
+  426 jump *label102 notEqual :factoryUnitFinished:unit @flare
   427 label *label103
   428 op add *tmp246 .flares 1
   429 set .flares *tmp246
   430 write *tmp246 .display ".flares"
   431 jump *label101 always
   432 label *label102
-    * jump *label105 equal :factoryUnitFinished:unit @mono
-    * jump *label104 always
+  433 jump *label104 notEqual :factoryUnitFinished:unit @mono
   434 label *label105
   435 op add *tmp247 .monos 1
   436 set .monos *tmp247
   437 write *tmp247 .display ".monos"
   438 jump *label101 always
   439 label *label104
-    * jump *label107 equal :factoryUnitFinished:unit @poly
-    * jump *label106 always
+  440 jump *label106 notEqual :factoryUnitFinished:unit @poly
   441 label *label107
   442 op add *tmp248 .polys 1
   443 set .polys *tmp248
   444 write *tmp248 .display ".polys"
   445 jump *label101 always
   446 label *label106
-    * jump *label109 equal :factoryUnitFinished:unit @mega
-    * jump *label108 always
+  447 jump *label108 notEqual :factoryUnitFinished:unit @mega
   448 label *label109
   449 op add *tmp249 .megas 1
   450 set .megas *tmp249

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-30 instructions):
 
    25 set *signature "eb9ab5a008f372ac:v1"
    26 label *label11
    27 label *label13
-    * op equal *tmp33 .finished false
-    * jump *label15 equal *tmp33 false
+   28 jump *label15 notEqual .finished false
    29 set :backgroundProcess:ticks @tick
    30 sensor :backgroundProcess:coreSilicon .core @silicon
    31 sensor :backgroundProcess:coreGraphite .core @graphite
 
    62 control enabled *tmp64 *tmp66
    63 sensor :backgroundProcess:water AÜAOJ[-liquid-container17 @totalLiquids
    64 op max .waterMax .waterMax :backgroundProcess:water
-    * op lessThan *tmp69 :backgroundProcess:water 250
-    * jump *label18 equal *tmp69 false
+   65 jump *label18 greaterThanEq :backgroundProcess:water 250
    66 set *tmp70 true
    67 jump *label19 always
    68 label *label18
-    * op greaterThan *tmp71 :backgroundProcess:water 500
-    * jump *label20 equal *tmp71 false
+   69 jump *label20 lessThanEq :backgroundProcess:water 500
    70 set *tmp72 false
    71 jump *label21 always
    72 label *label20
 
    92 set :handleAirFactory:power :backgroundProcess:power
    93 set :handleAirFactory:silicon 15
    94 set :handleAirFactory:lead 0
-    * op equal *tmp82 .canConsume false
-    * jump *label25 equal *tmp82 false
+   95 jump *label25 notEqual .canConsume false
    96 control config A©FJJU-unloader11 @coal
    97 jump *label24 always
    98 jump *label26 always
 
   100 label *label26
   101 sensor *tmp86 AAKJ]-steam-generator19 @coal
   102 op mul *tmp87 5 AAKJ]-steam-generator19
-    * op lessThan *tmp88 *tmp86 *tmp87
-    * jump *label27 equal *tmp88 false
+  103 jump *label27 greaterThanEq *tmp86 *tmp87
   104 control config A©FJJU-unloader11 @coal
   105 jump *label24 always
   106 jump *label28 always
   107 label *label27
   108 label *label28
-    * op lessThan *tmp92 :handleAirFactory:power 200
-    * jump *label29 equal *tmp92 false
+  109 jump *label29 greaterThanEq :handleAirFactory:power 200
   110 control enabled A¾BFLW-air-factory13 false
   111 jump *label30 always
   112 label *label29
-    * op greaterThan *tmp96 :handleAirFactory:power 500
-    * jump *label31 equal *tmp96 false
+  113 jump *label31 lessThanEq :handleAirFactory:power 500
   114 control enabled A¾BFLW-air-factory13 true
   115 jump *label32 always
   116 label *label31
 
   118 label *label30
   119 control config A¾BFLW-air-factory13 :handleAirFactory:unit
   120 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp103 .lastProgress :handleAirFactory:factoryProgress
-    * jump *label33 equal *tmp103 false
+  121 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
   122 set :factoryUnitFinished:unit :handleAirFactory:unit
   123 setaddr :factoryUnitFinished*retaddr *label35 (h:*label35)
   124 call *label8 *invalid :factoryUnitFinished*retval (m:*label35) (h:*label35)
 
   132 set .lastProgress :handleAirFactory:factoryProgress
   133 jump *label36 equal :handleAirFactory:lead false
   134 sensor *tmp108 .core @lead
-    * op greaterThan *tmp109 *tmp108 0
-    * jump *label38 equal *tmp109 false
+  135 jump *label38 lessThanEq *tmp108 0
   136 set *tmp110 :handleAirFactory:lead
   137 jump *label39 always
   138 label *label38
 
   140 label *label39
   141 set :handleAirFactory:leadLimit *tmp110
   142 sensor *tmp111 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp112 *tmp111 :handleAirFactory:leadLimit
-    * jump *label40 equal *tmp112 false
+  143 jump *label40 greaterThanEq *tmp111 :handleAirFactory:leadLimit
   144 control config A©FJJU-unloader11 @lead
   145 jump *label24 always
   146 jump *label41 always
 
   150 label *label36
   151 label *label37
   152 sensor *tmp116 .core @silicon
-    * op greaterThan *tmp117 *tmp116 0
-    * jump *label42 equal *tmp117 false
+  153 jump *label42 lessThanEq *tmp116 0
   154 set *tmp118 :handleAirFactory:silicon
   155 jump *label43 always
   156 label *label42
 
   159 set :handleAirFactory:siliconLimit *tmp118
   160 set *tmp119 A©FJJU-unloader11
   161 sensor *tmp121 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp122 *tmp121 :handleAirFactory:siliconLimit
-    * jump *label44 equal *tmp122 false
+  162 jump *label44 greaterThanEq *tmp121 :handleAirFactory:siliconLimit
   163 set *tmp123 @silicon
   164 jump *label45 always
   165 label *label44
 
   179 set :handleAirFactory.1:power :backgroundProcess:power
   180 set :handleAirFactory.1:silicon 30
   181 set :handleAirFactory.1:lead 15
-    * op equal *tmp128 .canConsume false
-    * jump *label49 equal *tmp128 false
+  182 jump *label49 notEqual .canConsume false
   183 control config A©FJJU-unloader11 @coal
   184 jump *label48 always
   185 jump *label50 always
 
   187 label *label50
   188 sensor *tmp132 AAKJ]-steam-generator19 @coal
   189 op mul *tmp133 5 AAKJ]-steam-generator19
-    * op lessThan *tmp134 *tmp132 *tmp133
-    * jump *label51 equal *tmp134 false
+  190 jump *label51 greaterThanEq *tmp132 *tmp133
   191 control config A©FJJU-unloader11 @coal
   192 jump *label48 always
   193 jump *label52 always
   194 label *label51
   195 label *label52
-    * op lessThan *tmp138 :handleAirFactory.1:power 200
-    * jump *label53 equal *tmp138 false
+  196 jump *label53 greaterThanEq :handleAirFactory.1:power 200
   197 control enabled A¾BFLW-air-factory13 false
   198 jump *label54 always
   199 label *label53
-    * op greaterThan *tmp142 :handleAirFactory.1:power 500
-    * jump *label55 equal *tmp142 false
+  200 jump *label55 lessThanEq :handleAirFactory.1:power 500
   201 control enabled A¾BFLW-air-factory13 true
   202 jump *label56 always
   203 label *label55
 
   205 label *label54
   206 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
   207 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp149 .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label57 equal *tmp149 false
+  208 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   209 set :factoryUnitFinished:unit :handleAirFactory.1:unit
   210 setaddr :factoryUnitFinished*retaddr *label59 (h:*label59)
   211 call *label8 *invalid :factoryUnitFinished*retval (m:*label59) (h:*label59)
 
   219 set .lastProgress :handleAirFactory.1:factoryProgress
   220 jump *label60 equal :handleAirFactory.1:lead false
   221 sensor *tmp154 .core @lead
-    * op greaterThan *tmp155 *tmp154 0
-    * jump *label62 equal *tmp155 false
+  222 jump *label62 lessThanEq *tmp154 0
   223 set *tmp156 :handleAirFactory.1:lead
   224 jump *label63 always
   225 label *label62
 
   227 label *label63
   228 set :handleAirFactory.1:leadLimit *tmp156
   229 sensor *tmp157 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp158 *tmp157 :handleAirFactory.1:leadLimit
-    * jump *label64 equal *tmp158 false
+  230 jump *label64 greaterThanEq *tmp157 :handleAirFactory.1:leadLimit
   231 control config A©FJJU-unloader11 @lead
   232 jump *label48 always
   233 jump *label65 always
 
   237 label *label60
   238 label *label61
   239 sensor *tmp162 .core @silicon
-    * op greaterThan *tmp163 *tmp162 0
-    * jump *label66 equal *tmp163 false
+  240 jump *label66 lessThanEq *tmp162 0
   241 set *tmp164 :handleAirFactory.1:silicon
   242 jump *label67 always
   243 label *label66
 
   246 set :handleAirFactory.1:siliconLimit *tmp164
   247 set *tmp165 A©FJJU-unloader11
   248 sensor *tmp167 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp168 *tmp167 :handleAirFactory.1:siliconLimit
-    * jump *label68 equal *tmp168 false
+  249 jump *label68 greaterThanEq *tmp167 :handleAirFactory.1:siliconLimit
   250 set *tmp169 @silicon
   251 jump *label69 always
   252 label *label68
 
   263 control config A©FJJU-unloader11 @coal
   264 label *label47
   265 label *label23
-    * op lessThan *tmp176 .polys .polyTarget
-    * jump *label70 equal *tmp176 false
+  266 jump *label70 greaterThanEq .polys .polyTarget
   267 write @poly .display ".nextAddReco"
   268 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
-    * op greaterThan *tmp179 .lastRecoProgress :backgroundProcess:recoProgress
-    * jump *label72 equal *tmp179 false
+  269 jump *label72 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   270 set :factoryUnitFinished:unit @poly
   271 setaddr :factoryUnitFinished*retaddr *label74 (h:*label74)
   272 call *label8 *invalid :factoryUnitFinished*retval (m:*label74) (h:*label74)
 
   283 op greaterThanEq *tmp184 :backgroundProcess:g 40
   284 op land *tmp185 *tmp183 *tmp184
   285 jump *label75 equal *tmp185 false
-    * op equal *tmp187 .recoEntered false
-    * jump *label77 equal *tmp187 false
+  286 jump *label77 notEqual .recoEntered false
   287 sensor :backgroundProcess:x AÀF@Lb-additive-reconstructor24 @x
   288 sensor :backgroundProcess:y AÀF@Lb-additive-reconstructor24 @y
   289 ubind @mono
 
   292 ucontrol payEnter
   293 label *label80
   294 sensor *tmp191 @unit @dead
-    * op equal *tmp192 *tmp191 false
-    * jump *label79 notEqual *tmp192 false
+  295 jump *label79 equal *tmp191 false
   296 label *label81
   297 op sub *tmp193 .monos 1
   298 set .monos *tmp193
 
   306 label *label75
   307 op greaterThan *tmp196 :backgroundProcess:coreSilicon .siliconReserve
   308 op mul *tmp197 40 *tmp196
-    * op lessThan *tmp198 :backgroundProcess:s *tmp197
-    * jump *label82 equal *tmp198 false
+  309 jump *label82 greaterThanEq :backgroundProcess:s *tmp197
   310 control config A©HFJ`-unloader22 @silicon
   311 control enabled A{HDJa-inverted-sorter23 .canConsume
   312 jump *label83 always
   313 label *label82
   314 op greaterThan *tmp205 :backgroundProcess:coreGraphite .graphiteReserve
   315 op mul *tmp206 40 *tmp205
-    * op lessThan *tmp207 :backgroundProcess:g *tmp206
-    * jump *label84 equal *tmp207 false
+  316 jump *label84 greaterThanEq :backgroundProcess:g *tmp206
   317 control config A©HFJ`-unloader22 @graphite
   318 control enabled A{HDJa-inverted-sorter23 .canConsume
   319 jump *label85 always
 
   331 write @mega .display ".nextMultiReco"
   332 set :backgroundProcess:c null
   333 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * op lessThan *tmp220 *tmp219 40
-    * jump *label88 equal *tmp220 false
+  334 jump *label88 greaterThanEq *tmp219 40
   335 set :backgroundProcess:c @metaglass
   336 jump *label89 always
   337 label *label88
 
   358 control config A©NHJX-unloader14 :backgroundProcess:c
   359 control config A©HFJ`-unloader22 :backgroundProcess:c
   360 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
-    * op greaterThan *tmp237 .lastMultiProgress :backgroundProcess:multiProgress
-    * jump *label94 equal *tmp237 false
+  361 jump *label94 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   362 write null .display ".nextMultiReco"
   363 set :factoryUnitFinished:unit @mega
   364 setaddr :factoryUnitFinished*retaddr *label96 (h:*label96)
 
   367 set .lastMultiProgress 0
   368 jump *label95 always
   369 label *label94
-    * op greaterThan *tmp239 :backgroundProcess:multiProgress 0
-    * jump *label97 equal *tmp239 false
+  370 jump *label97 lessThanEq :backgroundProcess:multiProgress 0
   371 control enabled A©RPJg-unloader29 false
   372 set .smelterTarget 0
   373 set .pressTarget 0

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-16 instructions):
 
    95 jump *label25 notEqual .canConsume false
    96 control config A©FJJU-unloader11 @coal
    97 jump *label24 always
-    * jump *label26 always
    98 label *label25
    99 label *label26
   100 sensor *tmp86 AAKJ]-steam-generator19 @coal
 
   102 jump *label27 greaterThanEq *tmp86 *tmp87
   103 control config A©FJJU-unloader11 @coal
   104 jump *label24 always
-    * jump *label28 always
   105 label *label27
   106 label *label28
   107 jump *label29 greaterThanEq :handleAirFactory:power 200
 
   110 label *label29
   111 jump *label31 lessThanEq :handleAirFactory:power 500
   112 control enabled A¾BFLW-air-factory13 true
-    * jump *label32 always
   113 label *label31
   114 label *label32
   115 label *label30
 
   123 set .lastProgress 0
   124 control config A©FJJU-unloader11 @coal
   125 jump *label24 always
-    * jump *label34 always
   126 label *label33
   127 label *label34
   128 set .lastProgress :handleAirFactory:factoryProgress
 
   139 jump *label40 greaterThanEq *tmp111 :handleAirFactory:leadLimit
   140 control config A©FJJU-unloader11 @lead
   141 jump *label24 always
-    * jump *label41 always
   142 label *label40
   143 label *label41
-    * jump *label37 always
   144 label *label36
   145 label *label37
   146 sensor *tmp116 .core @silicon
 
   176 jump *label49 notEqual .canConsume false
   177 control config A©FJJU-unloader11 @coal
   178 jump *label48 always
-    * jump *label50 always
   179 label *label49
   180 label *label50
   181 sensor *tmp132 AAKJ]-steam-generator19 @coal
 
   183 jump *label51 greaterThanEq *tmp132 *tmp133
   184 control config A©FJJU-unloader11 @coal
   185 jump *label48 always
-    * jump *label52 always
   186 label *label51
   187 label *label52
   188 jump *label53 greaterThanEq :handleAirFactory.1:power 200
 
   191 label *label53
   192 jump *label55 lessThanEq :handleAirFactory.1:power 500
   193 control enabled A¾BFLW-air-factory13 true
-    * jump *label56 always
   194 label *label55
   195 label *label56
   196 label *label54
 
   204 set .lastProgress 0
   205 control config A©FJJU-unloader11 @coal
   206 jump *label48 always
-    * jump *label58 always
   207 label *label57
   208 label *label58
   209 set .lastProgress :handleAirFactory.1:factoryProgress
 
   220 jump *label64 greaterThanEq *tmp157 :handleAirFactory.1:leadLimit
   221 control config A©FJJU-unloader11 @lead
   222 jump *label48 always
-    * jump *label65 always
   223 label *label64
   224 label *label65
-    * jump *label61 always
   225 label *label60
   226 label *label61
   227 sensor *tmp162 .core @silicon
 
   286 set .monos *tmp193
   287 write *tmp193 .display ".monos"
   288 set .recoEntered true
-    * jump *label78 always
   289 label *label77
   290 label *label78
   291 control enabled A{HDJa-inverted-sorter23 false
 
   359 set .smelterTarget 0
   360 set .pressTarget 0
   361 set .kilnTarget 0
-    * jump *label98 always
   362 label *label97
   363 label *label98
   364 set .lastMultiProgress :backgroundProcess:multiProgress
   365 label *label95
-    * jump *label87 always
   366 label *label86
   367 label *label87
   368 op sub .loopTicks @tick :backgroundProcess:ticks
 
   404 op add *tmp249 .megas 1
   405 set .megas *tmp249
   406 write *tmp249 .display ".megas"
-    * jump *label101 always
   407 label *label108
   408 label *label101
   409 label *label99

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    75 set *tmp70 *tmp72
    76 label *label19
    77 set .enableWater *tmp70
-    * control enabled A¡ASJ\-water-extractor18 .enableWater
+   78 control enabled A¡ASJ\-water-extractor18 *tmp70
    79 jump *label17 always
    80 label *label16
    81 set *tmp75 AJRJM-combustion-generator3
 
    87 op land *tmp80 *tmp78 *tmp79
    88 jump *label22 equal *tmp80 false
    89 set .airFactoryTarget @flare
-    * write .airFactoryTarget .display ".nextFactory"
+   90 write @flare .display ".nextFactory"
    91 set :handleAirFactory:unit @flare
    92 set :handleAirFactory:power :backgroundProcess:power
    93 set :handleAirFactory:silicon 15
 
   104 jump *label24 always
   105 label *label27
   106 label *label28
-    * jump *label29 greaterThanEq :handleAirFactory:power 200
+  107 jump *label29 greaterThanEq :backgroundProcess:power 200
   108 control enabled A¾BFLW-air-factory13 false
   109 jump *label30 always
   110 label *label29
-    * jump *label31 lessThanEq :handleAirFactory:power 500
+  111 jump *label31 lessThanEq :backgroundProcess:power 500
   112 control enabled A¾BFLW-air-factory13 true
   113 label *label31
   114 label *label32
   115 label *label30
-    * control config A¾BFLW-air-factory13 :handleAirFactory:unit
+  116 control config A¾BFLW-air-factory13 @flare
   117 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   118 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory:unit
+  119 set :factoryUnitFinished:unit @flare
   120 setaddr :factoryUnitFinished*retaddr *label35 (h:*label35)
   121 call *label8 *invalid :factoryUnitFinished*retval (m:*label35) (h:*label35)
   122 label *label35
 
   126 label *label33
   127 label *label34
   128 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label36 equal :handleAirFactory:lead false
+  129 jump *label36 equal 0 false
   130 sensor *tmp108 .core @lead
   131 jump *label38 lessThanEq *tmp108 0
-    * set *tmp110 :handleAirFactory:lead
+  132 set *tmp110 0
   133 jump *label39 always
   134 label *label38
   135 set *tmp110 0
   136 label *label39
-    * set :handleAirFactory:leadLimit *tmp110
+  137 set :handleAirFactory:leadLimit :handleAirFactory:lead
   138 sensor *tmp111 A¾BFLW-air-factory13 @lead
-    * jump *label40 greaterThanEq *tmp111 :handleAirFactory:leadLimit
+  139 jump *label40 greaterThanEq *tmp111 *tmp110
   140 control config A©FJJU-unloader11 @lead
   141 jump *label24 always
   142 label *label40
 
   145 label *label37
   146 sensor *tmp116 .core @silicon
   147 jump *label42 lessThanEq *tmp116 0
-    * set *tmp118 :handleAirFactory:silicon
+  148 set *tmp118 15
   149 jump *label43 always
   150 label *label42
   151 set *tmp118 0
 
   153 set :handleAirFactory:siliconLimit *tmp118
   154 set *tmp119 A©FJJU-unloader11
   155 sensor *tmp121 A¾BFLW-air-factory13 @silicon
-    * jump *label44 greaterThanEq *tmp121 :handleAirFactory:siliconLimit
+  156 jump *label44 greaterThanEq *tmp121 *tmp118
   157 set *tmp123 @silicon
   158 jump *label45 always
   159 label *label44
 
   168 op land *tmp126 *tmp124 *tmp125
   169 jump *label46 equal *tmp126 false
   170 set .airFactoryTarget @mono
-    * write .airFactoryTarget .display ".nextFactory"
+  171 write @mono .display ".nextFactory"
   172 set :handleAirFactory.1:unit @mono
   173 set :handleAirFactory.1:power :backgroundProcess:power
   174 set :handleAirFactory.1:silicon 30
 
   185 jump *label48 always
   186 label *label51
   187 label *label52
-    * jump *label53 greaterThanEq :handleAirFactory.1:power 200
+  188 jump *label53 greaterThanEq :backgroundProcess:power 200
   189 control enabled A¾BFLW-air-factory13 false
   190 jump *label54 always
   191 label *label53
-    * jump *label55 lessThanEq :handleAirFactory.1:power 500
+  192 jump *label55 lessThanEq :backgroundProcess:power 500
   193 control enabled A¾BFLW-air-factory13 true
   194 label *label55
   195 label *label56
   196 label *label54
-    * control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  197 control config A¾BFLW-air-factory13 @mono
   198 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   199 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory.1:unit
+  200 set :factoryUnitFinished:unit @mono
   201 setaddr :factoryUnitFinished*retaddr *label59 (h:*label59)
   202 call *label8 *invalid :factoryUnitFinished*retval (m:*label59) (h:*label59)
   203 label *label59
 
   207 label *label57
   208 label *label58
   209 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label60 equal :handleAirFactory.1:lead false
+  210 jump *label60 equal 15 false
   211 sensor *tmp154 .core @lead
   212 jump *label62 lessThanEq *tmp154 0
-    * set *tmp156 :handleAirFactory.1:lead
+  213 set *tmp156 15
   214 jump *label63 always
   215 label *label62
   216 set *tmp156 0
   217 label *label63
   218 set :handleAirFactory.1:leadLimit *tmp156
   219 sensor *tmp157 A¾BFLW-air-factory13 @lead
-    * jump *label64 greaterThanEq *tmp157 :handleAirFactory.1:leadLimit
+  220 jump *label64 greaterThanEq *tmp157 *tmp156
   221 control config A©FJJU-unloader11 @lead
   222 jump *label48 always
   223 label *label64
 
   226 label *label61
   227 sensor *tmp162 .core @silicon
   228 jump *label66 lessThanEq *tmp162 0
-    * set *tmp164 :handleAirFactory.1:silicon
+  229 set *tmp164 30
   230 jump *label67 always
   231 label *label66
   232 set *tmp164 0
 
   234 set :handleAirFactory.1:siliconLimit *tmp164
   235 set *tmp165 A©FJJU-unloader11
   236 sensor *tmp167 A¾BFLW-air-factory13 @silicon
-    * jump *label68 greaterThanEq *tmp167 :handleAirFactory.1:siliconLimit
+  237 jump *label68 greaterThanEq *tmp167 *tmp164
   238 set *tmp169 @silicon
   239 jump *label69 always
   240 label *label68
 
   245 jump *label47 always
   246 label *label46
   247 set .airFactoryTarget null
-    * write .airFactoryTarget .display ".nextFactory"
+  248 write null .display ".nextFactory"
   249 control enabled A¾BFLW-air-factory13 false
   250 control config A¾BFLW-air-factory13 @flare
   251 control config A©FJJU-unloader11 @coal
 
   316 label *label71
   317 jump *label86 equal AÁNBJc-multiplicative-reconstructor25 false
   318 write @mega .display ".nextMultiReco"
-    * set :backgroundProcess:c null
   319 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @metaglass
   320 jump *label88 greaterThanEq *tmp219 40
   321 set :backgroundProcess:c @metaglass
 
   425 read *tmp255 .timer "time"
   426 op mul *tmp256 *tmp255 1000
   427 op add *tmp257 :log:encodedId *tmp256
-    * write *tmp257 .bank *tmp253
+  428 write *tmp257 .bank *tmp252
   429 label *label112
   430 return :log*retaddr
   431 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-12 instructions):
 
    88 jump *label22 equal *tmp80 false
    89 set .airFactoryTarget @flare
    90 write @flare .display ".nextFactory"
-    * set :handleAirFactory:unit @flare
-    * set :handleAirFactory:power :backgroundProcess:power
-    * set :handleAirFactory:silicon 15
    91 set :handleAirFactory:lead 0
    92 jump *label25 notEqual .canConsume false
    93 control config A©FJJU-unloader11 @coal
 
   129 set *tmp110 0
   130 jump *label39 always
   131 label *label38
-    * set *tmp110 0
   132 label *label39
-    * set :handleAirFactory:leadLimit :handleAirFactory:lead
+  133 set :handleAirFactory:leadLimit 0
   134 sensor *tmp111 A¾BFLW-air-factory13 @lead
-    * jump *label40 greaterThanEq *tmp111 *tmp110
+  135 jump *label40 greaterThanEq *tmp111 0
   136 control config A©FJJU-unloader11 @lead
   137 jump *label24 always
   138 label *label40
 
   146 label *label42
   147 set *tmp118 0
   148 label *label43
-    * set :handleAirFactory:siliconLimit *tmp118
   149 set *tmp119 A©FJJU-unloader11
   150 sensor *tmp121 A¾BFLW-air-factory13 @silicon
   151 jump *label44 greaterThanEq *tmp121 *tmp118
 
   164 jump *label46 equal *tmp126 false
   165 set .airFactoryTarget @mono
   166 write @mono .display ".nextFactory"
-    * set :handleAirFactory.1:unit @mono
-    * set :handleAirFactory.1:power :backgroundProcess:power
-    * set :handleAirFactory.1:silicon 30
-    * set :handleAirFactory.1:lead 15
   167 jump *label49 notEqual .canConsume false
   168 control config A©FJJU-unloader11 @coal
   169 jump *label48 always
 
   206 label *label62
   207 set *tmp156 0
   208 label *label63
-    * set :handleAirFactory.1:leadLimit *tmp156
   209 sensor *tmp157 A¾BFLW-air-factory13 @lead
   210 jump *label64 greaterThanEq *tmp157 *tmp156
   211 control config A©FJJU-unloader11 @lead
 
   221 label *label66
   222 set *tmp164 0
   223 label *label67
-    * set :handleAirFactory.1:siliconLimit *tmp164
   224 set *tmp165 A©FJJU-unloader11
   225 sensor *tmp167 A¾BFLW-air-factory13 @silicon
   226 jump *label68 greaterThanEq *tmp167 *tmp164
 
   410 read *tmp32 .bank 511
   411 op sub *tmp252 *tmp32 1
   412 write *tmp252 .bank 511
-    * set *tmp253 *tmp252
   413 read *tmp255 .timer "time"
   414 op mul *tmp256 *tmp255 1000
   415 op add *tmp257 :log:encodedId *tmp256

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
 
    88 jump *label22 equal *tmp80 false
    89 set .airFactoryTarget @flare
    90 write @flare .display ".nextFactory"
-    * set :handleAirFactory:lead 0
    91 jump *label25 notEqual .canConsume false
    92 control config A©FJJU-unloader11 @coal
    93 jump *label24 always
 
   125 jump *label36 equal 0 false
   126 sensor *tmp108 .core @lead
   127 jump *label38 lessThanEq *tmp108 0
-    * set *tmp110 0
   128 jump *label39 always
   129 label *label38
   130 label *label39
-    * set :handleAirFactory:leadLimit 0
   131 sensor *tmp111 A¾BFLW-air-factory13 @lead
   132 jump *label40 greaterThanEq *tmp111 0
   133 control config A©FJJU-unloader11 @lead

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    26 label *label11
    27 label *label13
    28 jump *label15 notEqual .finished false
+   29 label *label116
    30 set :backgroundProcess:ticks @tick
    31 sensor :backgroundProcess:coreSilicon .core @silicon
    32 sensor :backgroundProcess:coreGraphite .core @graphite
 
   353 label *label87
   354 op sub .loopTicks @tick :backgroundProcess:ticks
   355 label *label14
-    * jump *label13 always
+  356 jump *label116 equal .finished false
   357 label *label15
   358 label *label12
   359 wait 1e12

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-23 instructions):
 
    67 set *tmp70 true
    68 jump *label19 always
    69 label *label18
-    * jump *label20 lessThanEq :backgroundProcess:water 500
-    * set *tmp72 false
-    * jump *label21 always
-    * label *label20
-    * set *tmp72 .enableWater
-    * label *label21
+   70 select *tmp72 greaterThan :backgroundProcess:water 500 false .enableWater
    71 set *tmp70 *tmp72
    72 label *label19
    73 set .enableWater *tmp70
 
   119 label *label34
   120 set .lastProgress :handleAirFactory:factoryProgress
   121 jump *label36 equal 0 false
-    * sensor *tmp108 .core @lead
-    * jump *label38 lessThanEq *tmp108 0
-    * jump *label39 always
-    * label *label38
-    * label *label39
+  122 sensor *tmp108 .core @lead
   123 sensor *tmp111 A¾BFLW-air-factory13 @lead
   124 jump *label40 greaterThanEq *tmp111 0
   125 control config A©FJJU-unloader11 @lead
 
   128 label *label41
   129 label *label36
   130 label *label37
-    * sensor *tmp116 .core @silicon
-    * jump *label42 lessThanEq *tmp116 0
-    * set *tmp118 15
-    * jump *label43 always
-    * label *label42
-    * set *tmp118 0
-    * label *label43
+  131 sensor *tmp116 .core @silicon
+  132 select *tmp118 greaterThan *tmp116 0 15 0
   133 set *tmp119 A©FJJU-unloader11
-    * sensor *tmp121 A¾BFLW-air-factory13 @silicon
-    * jump *label44 greaterThanEq *tmp121 *tmp118
-    * set *tmp123 @silicon
-    * jump *label45 always
-    * label *label44
-    * set *tmp123 @coal
-    * label *label45
+  134 sensor *tmp121 A¾BFLW-air-factory13 @silicon
+  135 select *tmp123 lessThan *tmp121 *tmp118 @silicon @coal
   136 control config *tmp119 *tmp123
   137 label *label24
   138 jump *label23 always
 
   178 label *label58
   179 set .lastProgress :handleAirFactory.1:factoryProgress
   180 jump *label60 equal 15 false
-    * sensor *tmp154 .core @lead
-    * jump *label62 lessThanEq *tmp154 0
-    * set *tmp156 15
-    * jump *label63 always
-    * label *label62
-    * set *tmp156 0
-    * label *label63
+  181 sensor *tmp154 .core @lead
+  182 select *tmp156 greaterThan *tmp154 0 15 0
   183 sensor *tmp157 A¾BFLW-air-factory13 @lead
   184 jump *label64 greaterThanEq *tmp157 *tmp156
   185 control config A©FJJU-unloader11 @lead
 
   188 label *label65
   189 label *label60
   190 label *label61
-    * sensor *tmp162 .core @silicon
-    * jump *label66 lessThanEq *tmp162 0
-    * set *tmp164 30
-    * jump *label67 always
-    * label *label66
-    * set *tmp164 0
-    * label *label67
+  191 sensor *tmp162 .core @silicon
+  192 select *tmp164 greaterThan *tmp162 0 30 0
   193 set *tmp165 A©FJJU-unloader11
-    * sensor *tmp167 A¾BFLW-air-factory13 @silicon
-    * jump *label68 greaterThanEq *tmp167 *tmp164
-    * set *tmp169 @silicon
-    * jump *label69 always
-    * label *label68
-    * set *tmp169 @coal
-    * label *label69
+  194 sensor *tmp167 A¾BFLW-air-factory13 @silicon
+  195 select *tmp169 lessThan *tmp167 *tmp164 @silicon @coal
   196 control config *tmp165 *tmp169
   197 label *label48
   198 jump *label47 always
 
   282 set :backgroundProcess:c @titanium
   283 jump *label91 always
   284 label *label90
-    * sensor *tmp227 .core @silicon
-    * sensor *tmp228 AÁNBJc-multiplicative-reconstructor25 @silicon
-    * op lessThan *tmp229 *tmp228 130
-    * op land *tmp230 *tmp227 *tmp229
-    * jump *label92 equal *tmp230 false
-    * set :backgroundProcess:c @silicon
-    * jump *label93 always
-    * label *label92
-    * set :backgroundProcess:c @coal
-    * label *label93
+  285 sensor *tmp227 .core @silicon
+  286 sensor *tmp228 AÁNBJc-multiplicative-reconstructor25 @silicon
+  287 op lessThan *tmp229 *tmp228 130
+  288 op land *tmp230 *tmp227 *tmp229
+  289 select :backgroundProcess:c notEqual *tmp230 false @silicon @coal
   290 label *label91
   291 label *label89
   292 control config A©NHJX-unloader14 :backgroundProcess:c

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2 (-3 instructions):
 
    63 control enabled *tmp64 *tmp66
    64 sensor :backgroundProcess:water AÜAOJ[-liquid-container17 @totalLiquids
    65 op max .waterMax .waterMax :backgroundProcess:water
-    * jump *label18 greaterThanEq :backgroundProcess:water 250
-    * set *tmp70 true
-    * jump *label19 always
-    * label *label18
-    * select *tmp72 greaterThan :backgroundProcess:water 500 false .enableWater
-    * set *tmp70 *tmp72
-    * label *label19
+   66 select *tmp314 greaterThan :backgroundProcess:water 500 false .enableWater
+   67 select *tmp70 lessThan :backgroundProcess:water 250 true *tmp314
    68 set .enableWater *tmp70
    69 control enabled A¡ASJ\-water-extractor18 *tmp70
    70 jump *label17 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 3 (-2 instructions):
 
   264 label *label71
   265 jump *label86 equal AÁNBJc-multiplicative-reconstructor25 false
   266 write @mega .display ".nextMultiReco"
+  267 set :backgroundProcess:c @metaglass
   268 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * jump *label88 greaterThanEq *tmp219 40
-    * set :backgroundProcess:c @metaglass
-    * jump *label89 always
+  269 jump *label89 lessThan *tmp219 40
   270 label *label88
+  271 set :backgroundProcess:c @titanium
   272 sensor *tmp222 .core @titanium
   273 sensor *tmp223 AÁNBJc-multiplicative-reconstructor25 @titanium
   274 op lessThan *tmp224 *tmp223 80
   275 op land *tmp225 *tmp222 *tmp224
-    * jump *label90 equal *tmp225 false
-    * set :backgroundProcess:c @titanium
-    * jump *label91 always
+  276 jump *label91 notEqual *tmp225 false
   277 label *label90
   278 sensor *tmp227 .core @silicon
   279 sensor *tmp228 AÁNBJc-multiplicative-reconstructor25 @silicon

Modifications by Inline function 'logUnit' defined at CoreController.mnd:47:1 (-4 instructions):
 
   315 end
   316 label *label8
   317 set :logUnit:unit :factoryUnitFinished:unit
-    * setaddr :logUnit*retaddr *label100 (h:*label100)
-    * call *label7 *invalid :logUnit*retval (m:*label100) (h:*label100)
-    * label *label100
+  318 label *label117
+  319 sensor *tmp250 :logUnit:unit @id
+  320 op add :log:encodedId @blockCount *tmp250
+  321 setaddr :log*retaddr *label118 (h:*label118)
+  322 call *label6 *invalid :log*retval (m:*label118) (h:*label118)
+  323 label *label118
+  324 label *label119
   325 jump *label102 notEqual :factoryUnitFinished:unit @flare
   326 label *label103
   327 op add *tmp246 .flares 1
 
   353 label *label99
   354 return :factoryUnitFinished*retaddr
   355 end
-    * label *label7
-    * sensor *tmp250 :logUnit:unit @id
-    * op add :log:encodedId @blockCount *tmp250
-    * setaddr :log*retaddr *label111 (h:*label111)
-    * call *label6 *invalid :log*retval (m:*label111) (h:*label111)
-    * label *label111
-    * label *label110
-    * return :logUnit*retaddr
-    * end
   356 label *label6
   357 read *tmp32 .bank 511
   358 op sub *tmp252 *tmp32 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   316 label *label8
   317 set :logUnit:unit :factoryUnitFinished:unit
   318 label *label117
-    * sensor *tmp250 :logUnit:unit @id
+  319 sensor *tmp250 :factoryUnitFinished:unit @id
   320 op add :log:encodedId @blockCount *tmp250
   321 setaddr :log*retaddr *label118 (h:*label118)
   322 call *label6 *invalid :log*retval (m:*label118) (h:*label118)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   314 jump *label11 always
   315 end
   316 label *label8
-    * set :logUnit:unit :factoryUnitFinished:unit
   317 label *label117
   318 sensor *tmp250 :factoryUnitFinished:unit @id
   319 op add :log:encodedId @blockCount *tmp250

Modifications by Inline function 'log' defined at CoreController.mnd:43:1 (-4 instructions):
 
   317 label *label117
   318 sensor *tmp250 :factoryUnitFinished:unit @id
   319 op add :log:encodedId @blockCount *tmp250
-    * setaddr :log*retaddr *label118 (h:*label118)
-    * call *label6 *invalid :log*retval (m:*label118) (h:*label118)
-    * label *label118
+  320 label *label120
+  321 read *tmp32 .bank 511
+  322 op sub *tmp252 *tmp32 1
+  323 write *tmp252 .bank 511
+  324 read *tmp255 .timer "time"
+  325 op mul *tmp256 *tmp255 1000
+  326 op add *tmp257 :log:encodedId *tmp256
+  327 write *tmp257 .bank *tmp252
+  328 label *label121
   329 label *label119
   330 jump *label102 notEqual :factoryUnitFinished:unit @flare
   331 label *label103
 
   358 label *label99
   359 return :factoryUnitFinished*retaddr
   360 end
-    * label *label6
-    * read *tmp32 .bank 511
-    * op sub *tmp252 *tmp32 1
-    * write *tmp252 .bank 511
-    * read *tmp255 .timer "time"
-    * op mul *tmp256 *tmp255 1000
-    * op add *tmp257 :log:encodedId *tmp256
-    * write *tmp257 .bank *tmp252
-    * label *label112
-    * return :log*retaddr
-    * end
   361 label *label0
   362 control config A©FJJU-unloader11 @coal
   363 control enabled A{HDJa-inverted-sorter23 false

Modifications by Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 (+74 instructions):
 
   104 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   105 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
   106 set :factoryUnitFinished:unit @flare
-    * setaddr :factoryUnitFinished*retaddr *label35 (h:*label35)
-    * call *label8 *invalid :factoryUnitFinished*retval (m:*label35) (h:*label35)
-    * label *label35
+  107 label *label122
+  108 label *label123
+  109 sensor *tmp250 :factoryUnitFinished:unit @id
+  110 op add :log:encodedId @blockCount *tmp250
+  111 label *label124
+  112 read *tmp32 .bank 511
+  113 op sub *tmp252 *tmp32 1
+  114 write *tmp252 .bank 511
+  115 read *tmp255 .timer "time"
+  116 op mul *tmp256 *tmp255 1000
+  117 op add *tmp257 :log:encodedId *tmp256
+  118 write *tmp257 .bank *tmp252
+  119 label *label125
+  120 label *label126
+  121 jump *label128 notEqual :factoryUnitFinished:unit @flare
+  122 label *label127
+  123 op add *tmp246 .flares 1
+  124 set .flares *tmp246
+  125 write *tmp246 .display ".flares"
+  126 jump *label135 always
+  127 label *label128
+  128 jump *label130 notEqual :factoryUnitFinished:unit @mono
+  129 label *label129
+  130 op add *tmp247 .monos 1
+  131 set .monos *tmp247
+  132 write *tmp247 .display ".monos"
+  133 jump *label135 always
+  134 label *label130
+  135 jump *label132 notEqual :factoryUnitFinished:unit @poly
+  136 label *label131
+  137 op add *tmp248 .polys 1
+  138 set .polys *tmp248
+  139 write *tmp248 .display ".polys"
+  140 jump *label135 always
+  141 label *label132
+  142 jump *label134 notEqual :factoryUnitFinished:unit @mega
+  143 label *label133
+  144 op add *tmp249 .megas 1
+  145 set .megas *tmp249
+  146 write *tmp249 .display ".megas"
+  147 label *label134
+  148 label *label135
+  149 label *label136
   150 set .lastProgress 0
   151 control config A©FJJU-unloader11 @coal
   152 jump *label24 always
 
   203 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   204 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   205 set :factoryUnitFinished:unit @mono
-    * setaddr :factoryUnitFinished*retaddr *label59 (h:*label59)
-    * call *label8 *invalid :factoryUnitFinished*retval (m:*label59) (h:*label59)
-    * label *label59
+  206 label *label137
+  207 label *label138
+  208 sensor *tmp250 :factoryUnitFinished:unit @id
+  209 op add :log:encodedId @blockCount *tmp250
+  210 label *label139
+  211 read *tmp32 .bank 511
+  212 op sub *tmp252 *tmp32 1
+  213 write *tmp252 .bank 511
+  214 read *tmp255 .timer "time"
+  215 op mul *tmp256 *tmp255 1000
+  216 op add *tmp257 :log:encodedId *tmp256
+  217 write *tmp257 .bank *tmp252
+  218 label *label140
+  219 label *label141
+  220 jump *label143 notEqual :factoryUnitFinished:unit @flare
+  221 label *label142
+  222 op add *tmp246 .flares 1
+  223 set .flares *tmp246
+  224 write *tmp246 .display ".flares"
+  225 jump *label150 always
+  226 label *label143
+  227 jump *label145 notEqual :factoryUnitFinished:unit @mono
+  228 label *label144
+  229 op add *tmp247 .monos 1
+  230 set .monos *tmp247
+  231 write *tmp247 .display ".monos"
+  232 jump *label150 always
+  233 label *label145
+  234 jump *label147 notEqual :factoryUnitFinished:unit @poly
+  235 label *label146
+  236 op add *tmp248 .polys 1
+  237 set .polys *tmp248
+  238 write *tmp248 .display ".polys"
+  239 jump *label150 always
+  240 label *label147
+  241 jump *label149 notEqual :factoryUnitFinished:unit @mega
+  242 label *label148
+  243 op add *tmp249 .megas 1
+  244 set .megas *tmp249
+  245 write *tmp249 .display ".megas"
+  246 label *label149
+  247 label *label150
+  248 label *label151
   249 set .lastProgress 0
   250 control config A©FJJU-unloader11 @coal
   251 jump *label48 always
 
   284 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   285 jump *label72 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   286 set :factoryUnitFinished:unit @poly
-    * setaddr :factoryUnitFinished*retaddr *label74 (h:*label74)
-    * call *label8 *invalid :factoryUnitFinished*retval (m:*label74) (h:*label74)
-    * label *label74
+  287 label *label152
+  288 label *label153
+  289 sensor *tmp250 :factoryUnitFinished:unit @id
+  290 op add :log:encodedId @blockCount *tmp250
+  291 label *label154
+  292 read *tmp32 .bank 511
+  293 op sub *tmp252 *tmp32 1
+  294 write *tmp252 .bank 511
+  295 read *tmp255 .timer "time"
+  296 op mul *tmp256 *tmp255 1000
+  297 op add *tmp257 :log:encodedId *tmp256
+  298 write *tmp257 .bank *tmp252
+  299 label *label155
+  300 label *label156
+  301 jump *label158 notEqual :factoryUnitFinished:unit @flare
+  302 label *label157
+  303 op add *tmp246 .flares 1
+  304 set .flares *tmp246
+  305 write *tmp246 .display ".flares"
+  306 jump *label165 always
+  307 label *label158
+  308 jump *label160 notEqual :factoryUnitFinished:unit @mono
+  309 label *label159
+  310 op add *tmp247 .monos 1
+  311 set .monos *tmp247
+  312 write *tmp247 .display ".monos"
+  313 jump *label165 always
+  314 label *label160
+  315 jump *label162 notEqual :factoryUnitFinished:unit @poly
+  316 label *label161
+  317 op add *tmp248 .polys 1
+  318 set .polys *tmp248
+  319 write *tmp248 .display ".polys"
+  320 jump *label165 always
+  321 label *label162
+  322 jump *label164 notEqual :factoryUnitFinished:unit @mega
+  323 label *label163
+  324 op add *tmp249 .megas 1
+  325 set .megas *tmp249
+  326 write *tmp249 .display ".megas"
+  327 label *label164
+  328 label *label165
+  329 label *label166
   330 set .recoEntered false
   331 set .lastRecoProgress 0
   332 jump *label73 always
 
   408 jump *label94 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   409 write null .display ".nextMultiReco"
   410 set :factoryUnitFinished:unit @mega
-    * setaddr :factoryUnitFinished*retaddr *label96 (h:*label96)
-    * call *label8 *invalid :factoryUnitFinished*retval (m:*label96) (h:*label96)
-    * label *label96
+  411 label *label167
+  412 label *label168
+  413 sensor *tmp250 :factoryUnitFinished:unit @id
+  414 op add :log:encodedId @blockCount *tmp250
+  415 label *label169
+  416 read *tmp32 .bank 511
+  417 op sub *tmp252 *tmp32 1
+  418 write *tmp252 .bank 511
+  419 read *tmp255 .timer "time"
+  420 op mul *tmp256 *tmp255 1000
+  421 op add *tmp257 :log:encodedId *tmp256
+  422 write *tmp257 .bank *tmp252
+  423 label *label170
+  424 label *label171
+  425 jump *label173 notEqual :factoryUnitFinished:unit @flare
+  426 label *label172
+  427 op add *tmp246 .flares 1
+  428 set .flares *tmp246
+  429 write *tmp246 .display ".flares"
+  430 jump *label180 always
+  431 label *label173
+  432 jump *label175 notEqual :factoryUnitFinished:unit @mono
+  433 label *label174
+  434 op add *tmp247 .monos 1
+  435 set .monos *tmp247
+  436 write *tmp247 .display ".monos"
+  437 jump *label180 always
+  438 label *label175
+  439 jump *label177 notEqual :factoryUnitFinished:unit @poly
+  440 label *label176
+  441 op add *tmp248 .polys 1
+  442 set .polys *tmp248
+  443 write *tmp248 .display ".polys"
+  444 jump *label180 always
+  445 label *label177
+  446 jump *label179 notEqual :factoryUnitFinished:unit @mega
+  447 label *label178
+  448 op add *tmp249 .megas 1
+  449 set .megas *tmp249
+  450 write *tmp249 .display ".megas"
+  451 label *label179
+  452 label *label180
+  453 label *label181
   454 set .lastMultiProgress 0
   455 jump *label95 always
   456 label *label94
 
   473 wait 1e12
   474 jump *label11 always
   475 end
-    * label *label8
-    * label *label117
-    * sensor *tmp250 :factoryUnitFinished:unit @id
-    * op add :log:encodedId @blockCount *tmp250
-    * label *label120
-    * read *tmp32 .bank 511
-    * op sub *tmp252 *tmp32 1
-    * write *tmp252 .bank 511
-    * read *tmp255 .timer "time"
-    * op mul *tmp256 *tmp255 1000
-    * op add *tmp257 :log:encodedId *tmp256
-    * write *tmp257 .bank *tmp252
-    * label *label121
-    * label *label119
-    * jump *label102 notEqual :factoryUnitFinished:unit @flare
-    * label *label103
-    * op add *tmp246 .flares 1
-    * set .flares *tmp246
-    * write *tmp246 .display ".flares"
-    * jump *label101 always
-    * label *label102
-    * jump *label104 notEqual :factoryUnitFinished:unit @mono
-    * label *label105
-    * op add *tmp247 .monos 1
-    * set .monos *tmp247
-    * write *tmp247 .display ".monos"
-    * jump *label101 always
-    * label *label104
-    * jump *label106 notEqual :factoryUnitFinished:unit @poly
-    * label *label107
-    * op add *tmp248 .polys 1
-    * set .polys *tmp248
-    * write *tmp248 .display ".polys"
-    * jump *label101 always
-    * label *label106
-    * jump *label108 notEqual :factoryUnitFinished:unit @mega
-    * label *label109
-    * op add *tmp249 .megas 1
-    * set .megas *tmp249
-    * write *tmp249 .display ".megas"
-    * label *label108
-    * label *label101
-    * label *label99
-    * return :factoryUnitFinished*retaddr
-    * end
   476 label *label0
   477 control config A©FJJU-unloader11 @coal
   478 control enabled A{HDJa-inverted-sorter23 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   106 set :factoryUnitFinished:unit @flare
   107 label *label122
   108 label *label123
-    * sensor *tmp250 :factoryUnitFinished:unit @id
+  109 sensor *tmp250 @flare @id
   110 op add :log:encodedId @blockCount *tmp250
   111 label *label124
   112 read *tmp32 .bank 511
 
   118 write *tmp257 .bank *tmp252
   119 label *label125
   120 label *label126
-    * jump *label128 notEqual :factoryUnitFinished:unit @flare
+  121 jump *label128 notEqual @flare @flare
   122 label *label127
   123 op add *tmp246 .flares 1
   124 set .flares *tmp246
   125 write *tmp246 .display ".flares"
   126 jump *label135 always
   127 label *label128
-    * jump *label130 notEqual :factoryUnitFinished:unit @mono
+  128 jump *label130 notEqual @flare @mono
   129 label *label129
   130 op add *tmp247 .monos 1
   131 set .monos *tmp247
   132 write *tmp247 .display ".monos"
   133 jump *label135 always
   134 label *label130
-    * jump *label132 notEqual :factoryUnitFinished:unit @poly
+  135 jump *label132 notEqual @flare @poly
   136 label *label131
   137 op add *tmp248 .polys 1
   138 set .polys *tmp248
   139 write *tmp248 .display ".polys"
   140 jump *label135 always
   141 label *label132
-    * jump *label134 notEqual :factoryUnitFinished:unit @mega
+  142 jump *label134 notEqual @flare @mega
   143 label *label133
   144 op add *tmp249 .megas 1
   145 set .megas *tmp249
 
   205 set :factoryUnitFinished:unit @mono
   206 label *label137
   207 label *label138
-    * sensor *tmp250 :factoryUnitFinished:unit @id
+  208 sensor *tmp250 @mono @id
   209 op add :log:encodedId @blockCount *tmp250
   210 label *label139
   211 read *tmp32 .bank 511
 
   217 write *tmp257 .bank *tmp252
   218 label *label140
   219 label *label141
-    * jump *label143 notEqual :factoryUnitFinished:unit @flare
+  220 jump *label143 notEqual @mono @flare
   221 label *label142
   222 op add *tmp246 .flares 1
   223 set .flares *tmp246
   224 write *tmp246 .display ".flares"
   225 jump *label150 always
   226 label *label143
-    * jump *label145 notEqual :factoryUnitFinished:unit @mono
+  227 jump *label145 notEqual @mono @mono
   228 label *label144
   229 op add *tmp247 .monos 1
   230 set .monos *tmp247
   231 write *tmp247 .display ".monos"
   232 jump *label150 always
   233 label *label145
-    * jump *label147 notEqual :factoryUnitFinished:unit @poly
+  234 jump *label147 notEqual @mono @poly
   235 label *label146
   236 op add *tmp248 .polys 1
   237 set .polys *tmp248
   238 write *tmp248 .display ".polys"
   239 jump *label150 always
   240 label *label147
-    * jump *label149 notEqual :factoryUnitFinished:unit @mega
+  241 jump *label149 notEqual @mono @mega
   242 label *label148
   243 op add *tmp249 .megas 1
   244 set .megas *tmp249
 
   286 set :factoryUnitFinished:unit @poly
   287 label *label152
   288 label *label153
-    * sensor *tmp250 :factoryUnitFinished:unit @id
+  289 sensor *tmp250 @poly @id
   290 op add :log:encodedId @blockCount *tmp250
   291 label *label154
   292 read *tmp32 .bank 511
 
   298 write *tmp257 .bank *tmp252
   299 label *label155
   300 label *label156
-    * jump *label158 notEqual :factoryUnitFinished:unit @flare
+  301 jump *label158 notEqual @poly @flare
   302 label *label157
   303 op add *tmp246 .flares 1
   304 set .flares *tmp246
   305 write *tmp246 .display ".flares"
   306 jump *label165 always
   307 label *label158
-    * jump *label160 notEqual :factoryUnitFinished:unit @mono
+  308 jump *label160 notEqual @poly @mono
   309 label *label159
   310 op add *tmp247 .monos 1
   311 set .monos *tmp247
   312 write *tmp247 .display ".monos"
   313 jump *label165 always
   314 label *label160
-    * jump *label162 notEqual :factoryUnitFinished:unit @poly
+  315 jump *label162 notEqual @poly @poly
   316 label *label161
   317 op add *tmp248 .polys 1
   318 set .polys *tmp248
   319 write *tmp248 .display ".polys"
   320 jump *label165 always
   321 label *label162
-    * jump *label164 notEqual :factoryUnitFinished:unit @mega
+  322 jump *label164 notEqual @poly @mega
   323 label *label163
   324 op add *tmp249 .megas 1
   325 set .megas *tmp249
 
   410 set :factoryUnitFinished:unit @mega
   411 label *label167
   412 label *label168
-    * sensor *tmp250 :factoryUnitFinished:unit @id
+  413 sensor *tmp250 @mega @id
   414 op add :log:encodedId @blockCount *tmp250
   415 label *label169
   416 read *tmp32 .bank 511
 
   422 write *tmp257 .bank *tmp252
   423 label *label170
   424 label *label171
-    * jump *label173 notEqual :factoryUnitFinished:unit @flare
+  425 jump *label173 notEqual @mega @flare
   426 label *label172
   427 op add *tmp246 .flares 1
   428 set .flares *tmp246
   429 write *tmp246 .display ".flares"
   430 jump *label180 always
   431 label *label173
-    * jump *label175 notEqual :factoryUnitFinished:unit @mono
+  432 jump *label175 notEqual @mega @mono
   433 label *label174
   434 op add *tmp247 .monos 1
   435 set .monos *tmp247
   436 write *tmp247 .display ".monos"
   437 jump *label180 always
   438 label *label175
-    * jump *label177 notEqual :factoryUnitFinished:unit @poly
+  439 jump *label177 notEqual @mega @poly
   440 label *label176
   441 op add *tmp248 .polys 1
   442 set .polys *tmp248
   443 write *tmp248 .display ".polys"
   444 jump *label180 always
   445 label *label177
-    * jump *label179 notEqual :factoryUnitFinished:unit @mega
+  446 jump *label179 notEqual @mega @mega
   447 label *label178
   448 op add *tmp249 .megas 1
   449 set .megas *tmp249

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   103 control config A¾BFLW-air-factory13 @flare
   104 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   105 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit @flare
   106 label *label122
   107 label *label123
   108 sensor *tmp250 @flare @id
 
   201 control config A¾BFLW-air-factory13 @mono
   202 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   203 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit @mono
   204 label *label137
   205 label *label138
   206 sensor *tmp250 @mono @id
 
   281 write @poly .display ".nextAddReco"
   282 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   283 jump *label72 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * set :factoryUnitFinished:unit @poly
   284 label *label152
   285 label *label153
   286 sensor *tmp250 @poly @id
 
   404 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
   405 jump *label94 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   406 write null .display ".nextMultiReco"
-    * set :factoryUnitFinished:unit @mega
   407 label *label167
   408 label *label168
   409 sensor *tmp250 @mega @id

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-5 instructions):
 
   117 write *tmp257 .bank *tmp252
   118 label *label125
   119 label *label126
-    * jump *label128 notEqual @flare @flare
   120 label *label127
   121 op add *tmp246 .flares 1
   122 set .flares *tmp246
   123 write *tmp246 .display ".flares"
   124 jump *label135 always
   125 label *label128
-    * jump *label130 notEqual @flare @mono
+  126 jump *label130 always
   127 label *label129
   128 op add *tmp247 .monos 1
   129 set .monos *tmp247
   130 write *tmp247 .display ".monos"
   131 jump *label135 always
   132 label *label130
-    * jump *label132 notEqual @flare @poly
+  133 jump *label132 always
   134 label *label131
   135 op add *tmp248 .polys 1
   136 set .polys *tmp248
   137 write *tmp248 .display ".polys"
   138 jump *label135 always
   139 label *label132
-    * jump *label134 notEqual @flare @mega
+  140 jump *label134 always
   141 label *label133
   142 op add *tmp249 .megas 1
   143 set .megas *tmp249
 
   151 label *label33
   152 label *label34
   153 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label36 equal 0 false
+  154 jump *label36 always
   155 sensor *tmp108 .core @lead
   156 sensor *tmp111 A¾BFLW-air-factory13 @lead
   157 jump *label40 greaterThanEq *tmp111 0
 
   214 write *tmp257 .bank *tmp252
   215 label *label140
   216 label *label141
-    * jump *label143 notEqual @mono @flare
+  217 jump *label143 always
   218 label *label142
   219 op add *tmp246 .flares 1
   220 set .flares *tmp246
   221 write *tmp246 .display ".flares"
   222 jump *label150 always
   223 label *label143
-    * jump *label145 notEqual @mono @mono
   224 label *label144
   225 op add *tmp247 .monos 1
   226 set .monos *tmp247
   227 write *tmp247 .display ".monos"
   228 jump *label150 always
   229 label *label145
-    * jump *label147 notEqual @mono @poly
+  230 jump *label147 always
   231 label *label146
   232 op add *tmp248 .polys 1
   233 set .polys *tmp248
   234 write *tmp248 .display ".polys"
   235 jump *label150 always
   236 label *label147
-    * jump *label149 notEqual @mono @mega
+  237 jump *label149 always
   238 label *label148
   239 op add *tmp249 .megas 1
   240 set .megas *tmp249
 
   248 label *label57
   249 label *label58
   250 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label60 equal 15 false
   251 sensor *tmp154 .core @lead
   252 select *tmp156 greaterThan *tmp154 0 15 0
   253 sensor *tmp157 A¾BFLW-air-factory13 @lead
 
   292 write *tmp257 .bank *tmp252
   293 label *label155
   294 label *label156
-    * jump *label158 notEqual @poly @flare
+  295 jump *label158 always
   296 label *label157
   297 op add *tmp246 .flares 1
   298 set .flares *tmp246
   299 write *tmp246 .display ".flares"
   300 jump *label165 always
   301 label *label158
-    * jump *label160 notEqual @poly @mono
+  302 jump *label160 always
   303 label *label159
   304 op add *tmp247 .monos 1
   305 set .monos *tmp247
   306 write *tmp247 .display ".monos"
   307 jump *label165 always
   308 label *label160
-    * jump *label162 notEqual @poly @poly
   309 label *label161
   310 op add *tmp248 .polys 1
   311 set .polys *tmp248
   312 write *tmp248 .display ".polys"
   313 jump *label165 always
   314 label *label162
-    * jump *label164 notEqual @poly @mega
+  315 jump *label164 always
   316 label *label163
   317 op add *tmp249 .megas 1
   318 set .megas *tmp249
 
   414 write *tmp257 .bank *tmp252
   415 label *label170
   416 label *label171
-    * jump *label173 notEqual @mega @flare
+  417 jump *label173 always
   418 label *label172
   419 op add *tmp246 .flares 1
   420 set .flares *tmp246
   421 write *tmp246 .display ".flares"
   422 jump *label180 always
   423 label *label173
-    * jump *label175 notEqual @mega @mono
+  424 jump *label175 always
   425 label *label174
   426 op add *tmp247 .monos 1
   427 set .monos *tmp247
   428 write *tmp247 .display ".monos"
   429 jump *label180 always
   430 label *label175
-    * jump *label177 notEqual @mega @poly
+  431 jump *label177 always
   432 label *label176
   433 op add *tmp248 .polys 1
   434 set .polys *tmp248
   435 write *tmp248 .display ".polys"
   436 jump *label180 always
   437 label *label177
-    * jump *label179 notEqual @mega @mega
   438 label *label178
   439 op add *tmp249 .megas 1
   440 set .megas *tmp249

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   105 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
   106 label *label122
   107 label *label123
-    * sensor *tmp250 @flare @id
+  108 set *tmp250 15
   109 op add :log:encodedId @blockCount *tmp250
   110 label *label124
   111 read *tmp32 .bank 511
 
   202 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   203 label *label137
   204 label *label138
-    * sensor *tmp250 @mono @id
+  205 set *tmp250 20
   206 op add :log:encodedId @blockCount *tmp250
   207 label *label139
   208 read *tmp32 .bank 511
 
   280 jump *label72 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   281 label *label152
   282 label *label153
-    * sensor *tmp250 @poly @id
+  283 set *tmp250 21
   284 op add :log:encodedId @blockCount *tmp250
   285 label *label154
   286 read *tmp32 .bank 511
 
   402 write null .display ".nextMultiReco"
   403 label *label167
   404 label *label168
-    * sensor *tmp250 @mega @id
+  405 set *tmp250 22
   406 op add :log:encodedId @blockCount *tmp250
   407 label *label169
   408 read *tmp32 .bank 511

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-12 instructions):
 
   106 label *label122
   107 label *label123
   108 set *tmp250 15
-    * op add :log:encodedId @blockCount *tmp250
+  109 op add :log:encodedId @blockCount 15
   110 label *label124
   111 read *tmp32 .bank 511
   112 op sub *tmp252 *tmp32 1
   113 write *tmp252 .bank 511
   114 read *tmp255 .timer "time"
   115 op mul *tmp256 *tmp255 1000
-    * op add *tmp257 :log:encodedId *tmp256
+  116 op add *tmp257 275 *tmp256
   117 write *tmp257 .bank *tmp252
   118 label *label125
   119 label *label126
 
   125 label *label128
   126 jump *label130 always
   127 label *label129
-    * op add *tmp247 .monos 1
   128 set .monos *tmp247
   129 write *tmp247 .display ".monos"
   130 jump *label135 always
   131 label *label130
   132 jump *label132 always
   133 label *label131
-    * op add *tmp248 .polys 1
   134 set .polys *tmp248
   135 write *tmp248 .display ".polys"
   136 jump *label135 always
   137 label *label132
   138 jump *label134 always
   139 label *label133
-    * op add *tmp249 .megas 1
   140 set .megas *tmp249
   141 write *tmp249 .display ".megas"
   142 label *label134
 
   200 label *label137
   201 label *label138
   202 set *tmp250 20
-    * op add :log:encodedId @blockCount *tmp250
+  203 op add :log:encodedId @blockCount 20
   204 label *label139
   205 read *tmp32 .bank 511
   206 op sub *tmp252 *tmp32 1
   207 write *tmp252 .bank 511
   208 read *tmp255 .timer "time"
   209 op mul *tmp256 *tmp255 1000
-    * op add *tmp257 :log:encodedId *tmp256
+  210 op add *tmp257 280 *tmp256
   211 write *tmp257 .bank *tmp252
   212 label *label140
   213 label *label141
   214 jump *label143 always
   215 label *label142
-    * op add *tmp246 .flares 1
   216 set .flares *tmp246
   217 write *tmp246 .display ".flares"
   218 jump *label150 always
 
   225 label *label145
   226 jump *label147 always
   227 label *label146
-    * op add *tmp248 .polys 1
   228 set .polys *tmp248
   229 write *tmp248 .display ".polys"
   230 jump *label150 always
   231 label *label147
   232 jump *label149 always
   233 label *label148
-    * op add *tmp249 .megas 1
   234 set .megas *tmp249
   235 write *tmp249 .display ".megas"
   236 label *label149
 
   275 label *label152
   276 label *label153
   277 set *tmp250 21
-    * op add :log:encodedId @blockCount *tmp250
+  278 op add :log:encodedId @blockCount 21
   279 label *label154
   280 read *tmp32 .bank 511
   281 op sub *tmp252 *tmp32 1
   282 write *tmp252 .bank 511
   283 read *tmp255 .timer "time"
   284 op mul *tmp256 *tmp255 1000
-    * op add *tmp257 :log:encodedId *tmp256
+  285 op add *tmp257 281 *tmp256
   286 write *tmp257 .bank *tmp252
   287 label *label155
   288 label *label156
   289 jump *label158 always
   290 label *label157
-    * op add *tmp246 .flares 1
   291 set .flares *tmp246
   292 write *tmp246 .display ".flares"
   293 jump *label165 always
   294 label *label158
   295 jump *label160 always
   296 label *label159
-    * op add *tmp247 .monos 1
   297 set .monos *tmp247
   298 write *tmp247 .display ".monos"
   299 jump *label165 always
 
   306 label *label162
   307 jump *label164 always
   308 label *label163
-    * op add *tmp249 .megas 1
   309 set .megas *tmp249
   310 write *tmp249 .display ".megas"
   311 label *label164
 
   394 label *label167
   395 label *label168
   396 set *tmp250 22
-    * op add :log:encodedId @blockCount *tmp250
+  397 op add :log:encodedId @blockCount 22
   398 label *label169
   399 read *tmp32 .bank 511
   400 op sub *tmp252 *tmp32 1
   401 write *tmp252 .bank 511
   402 read *tmp255 .timer "time"
   403 op mul *tmp256 *tmp255 1000
-    * op add *tmp257 :log:encodedId *tmp256
+  404 op add *tmp257 282 *tmp256
   405 write *tmp257 .bank *tmp252
   406 label *label170
   407 label *label171
   408 jump *label173 always
   409 label *label172
-    * op add *tmp246 .flares 1
   410 set .flares *tmp246
   411 write *tmp246 .display ".flares"
   412 jump *label180 always
   413 label *label173
   414 jump *label175 always
   415 label *label174
-    * op add *tmp247 .monos 1
   416 set .monos *tmp247
   417 write *tmp247 .display ".monos"
   418 jump *label180 always
   419 label *label175
   420 jump *label177 always
   421 label *label176
-    * op add *tmp248 .polys 1
   422 set .polys *tmp248
   423 write *tmp248 .display ".polys"
   424 jump *label180 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
   105 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
   106 label *label122
   107 label *label123
-    * set *tmp250 15
-    * op add :log:encodedId @blockCount 15
   108 label *label124
   109 read *tmp32 .bank 511
   110 op sub *tmp252 *tmp32 1
 
   197 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   198 label *label137
   199 label *label138
-    * set *tmp250 20
-    * op add :log:encodedId @blockCount 20
   200 label *label139
   201 read *tmp32 .bank 511
   202 op sub *tmp252 *tmp32 1
 
   270 jump *label72 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   271 label *label152
   272 label *label153
-    * set *tmp250 21
-    * op add :log:encodedId @blockCount 21
   273 label *label154
   274 read *tmp32 .bank 511
   275 op sub *tmp252 *tmp32 1
 
   387 write null .display ".nextMultiReco"
   388 label *label167
   389 label *label168
-    * set *tmp250 22
-    * op add :log:encodedId @blockCount 22
   390 label *label169
   391 read *tmp32 .bank 511
   392 op sub *tmp252 *tmp32 1

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    24 set .enableWater true
    25 set *signature "eb9ab5a008f372ac:v1"
    26 label *label11
-    * label *label13
    27 jump *label15 notEqual .finished false
    28 label *label116
    29 set :backgroundProcess:ticks @tick
 
    82 control config A©FJJU-unloader11 @coal
    83 jump *label24 always
    84 label *label25
-    * label *label26
    85 sensor *tmp86 AAKJ]-steam-generator19 @coal
    86 op mul *tmp87 5 AAKJ]-steam-generator19
    87 jump *label27 greaterThanEq *tmp86 *tmp87
    88 control config A©FJJU-unloader11 @coal
    89 jump *label24 always
    90 label *label27
-    * label *label28
    91 jump *label29 greaterThanEq :backgroundProcess:power 200
    92 control enabled A¾BFLW-air-factory13 false
    93 jump *label30 always
 
    95 jump *label31 lessThanEq :backgroundProcess:power 500
    96 control enabled A¾BFLW-air-factory13 true
    97 label *label31
-    * label *label32
    98 label *label30
    99 control config A¾BFLW-air-factory13 @flare
   100 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   101 jump *label33 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * label *label122
-    * label *label123
-    * label *label124
   102 read *tmp32 .bank 511
   103 op sub *tmp252 *tmp32 1
   104 write *tmp252 .bank 511
 
   106 op mul *tmp256 *tmp255 1000
   107 op add *tmp257 275 *tmp256
   108 write *tmp257 .bank *tmp252
-    * label *label125
-    * label *label126
-    * label *label127
   109 op add *tmp246 .flares 1
   110 set .flares *tmp246
   111 write *tmp246 .display ".flares"
   112 jump *label135 always
-    * label *label128
   113 jump *label130 always
-    * label *label129
   114 set .monos *tmp247
   115 write *tmp247 .display ".monos"
   116 jump *label135 always
   117 label *label130
   118 jump *label132 always
-    * label *label131
   119 set .polys *tmp248
   120 write *tmp248 .display ".polys"
   121 jump *label135 always
   122 label *label132
   123 jump *label134 always
-    * label *label133
   124 set .megas *tmp249
   125 write *tmp249 .display ".megas"
   126 label *label134
   127 label *label135
-    * label *label136
   128 set .lastProgress 0
   129 control config A©FJJU-unloader11 @coal
   130 jump *label24 always
   131 label *label33
-    * label *label34
   132 set .lastProgress :handleAirFactory:factoryProgress
   133 jump *label36 always
   134 sensor *tmp108 .core @lead
 
   137 control config A©FJJU-unloader11 @lead
   138 jump *label24 always
   139 label *label40
-    * label *label41
   140 label *label36
-    * label *label37
   141 sensor *tmp116 .core @silicon
   142 select *tmp118 greaterThan *tmp116 0 15 0
   143 set *tmp119 A©FJJU-unloader11
 
   157 control config A©FJJU-unloader11 @coal
   158 jump *label48 always
   159 label *label49
-    * label *label50
   160 sensor *tmp132 AAKJ]-steam-generator19 @coal
   161 op mul *tmp133 5 AAKJ]-steam-generator19
   162 jump *label51 greaterThanEq *tmp132 *tmp133
   163 control config A©FJJU-unloader11 @coal
   164 jump *label48 always
   165 label *label51
-    * label *label52
   166 jump *label53 greaterThanEq :backgroundProcess:power 200
   167 control enabled A¾BFLW-air-factory13 false
   168 jump *label54 always
 
   170 jump *label55 lessThanEq :backgroundProcess:power 500
   171 control enabled A¾BFLW-air-factory13 true
   172 label *label55
-    * label *label56
   173 label *label54
   174 control config A¾BFLW-air-factory13 @mono
   175 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   176 jump *label57 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * label *label137
-    * label *label138
-    * label *label139
   177 read *tmp32 .bank 511
   178 op sub *tmp252 *tmp32 1
   179 write *tmp252 .bank 511
 
   181 op mul *tmp256 *tmp255 1000
   182 op add *tmp257 280 *tmp256
   183 write *tmp257 .bank *tmp252
-    * label *label140
-    * label *label141
   184 jump *label143 always
-    * label *label142
   185 set .flares *tmp246
   186 write *tmp246 .display ".flares"
   187 jump *label150 always
   188 label *label143
-    * label *label144
   189 op add *tmp247 .monos 1
   190 set .monos *tmp247
   191 write *tmp247 .display ".monos"
   192 jump *label150 always
-    * label *label145
   193 jump *label147 always
-    * label *label146
   194 set .polys *tmp248
   195 write *tmp248 .display ".polys"
   196 jump *label150 always
   197 label *label147
   198 jump *label149 always
-    * label *label148
   199 set .megas *tmp249
   200 write *tmp249 .display ".megas"
   201 label *label149
   202 label *label150
-    * label *label151
   203 set .lastProgress 0
   204 control config A©FJJU-unloader11 @coal
   205 jump *label48 always
   206 label *label57
-    * label *label58
   207 set .lastProgress :handleAirFactory.1:factoryProgress
   208 sensor *tmp154 .core @lead
   209 select *tmp156 greaterThan *tmp154 0 15 0
 
   212 control config A©FJJU-unloader11 @lead
   213 jump *label48 always
   214 label *label64
-    * label *label65
-    * label *label60
-    * label *label61
   215 sensor *tmp162 .core @silicon
   216 select *tmp164 greaterThan *tmp162 0 30 0
   217 set *tmp165 A©FJJU-unloader11
 
   232 write @poly .display ".nextAddReco"
   233 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   234 jump *label72 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * label *label152
-    * label *label153
-    * label *label154
   235 read *tmp32 .bank 511
   236 op sub *tmp252 *tmp32 1
   237 write *tmp252 .bank 511
 
   239 op mul *tmp256 *tmp255 1000
   240 op add *tmp257 281 *tmp256
   241 write *tmp257 .bank *tmp252
-    * label *label155
-    * label *label156
   242 jump *label158 always
-    * label *label157
   243 set .flares *tmp246
   244 write *tmp246 .display ".flares"
   245 jump *label165 always
   246 label *label158
   247 jump *label160 always
-    * label *label159
   248 set .monos *tmp247
   249 write *tmp247 .display ".monos"
   250 jump *label165 always
   251 label *label160
-    * label *label161
   252 op add *tmp248 .polys 1
   253 set .polys *tmp248
   254 write *tmp248 .display ".polys"
   255 jump *label165 always
-    * label *label162
   256 jump *label164 always
-    * label *label163
   257 set .megas *tmp249
   258 write *tmp249 .display ".megas"
   259 label *label164
   260 label *label165
-    * label *label166
   261 set .recoEntered false
   262 set .lastRecoProgress 0
   263 jump *label73 always
 
   277 label *label79
   278 ucontrol move :backgroundProcess:x :backgroundProcess:y
   279 ucontrol payEnter
-    * label *label80
   280 sensor *tmp191 @unit @dead
   281 jump *label79 equal *tmp191 false
-    * label *label81
   282 op sub *tmp193 .monos 1
   283 set .monos *tmp193
   284 write *tmp193 .display ".monos"
   285 set .recoEntered true
   286 label *label77
-    * label *label78
   287 control enabled A{HDJa-inverted-sorter23 false
   288 jump *label76 always
   289 label *label75
 
   315 set :backgroundProcess:c @metaglass
   316 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @metaglass
   317 jump *label89 lessThan *tmp219 40
-    * label *label88
   318 set :backgroundProcess:c @titanium
   319 sensor *tmp222 .core @titanium
   320 sensor *tmp223 AÁNBJc-multiplicative-reconstructor25 @titanium
   321 op lessThan *tmp224 *tmp223 80
   322 op land *tmp225 *tmp222 *tmp224
   323 jump *label91 notEqual *tmp225 false
-    * label *label90
   324 sensor *tmp227 .core @silicon
   325 sensor *tmp228 AÁNBJc-multiplicative-reconstructor25 @silicon
   326 op lessThan *tmp229 *tmp228 130
 
   333 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
   334 jump *label94 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   335 write null .display ".nextMultiReco"
-    * label *label167
-    * label *label168
-    * label *label169
   336 read *tmp32 .bank 511
   337 op sub *tmp252 *tmp32 1
   338 write *tmp252 .bank 511
 
   340 op mul *tmp256 *tmp255 1000
   341 op add *tmp257 282 *tmp256
   342 write *tmp257 .bank *tmp252
-    * label *label170
-    * label *label171
   343 jump *label173 always
-    * label *label172
   344 set .flares *tmp246
   345 write *tmp246 .display ".flares"
   346 jump *label180 always
   347 label *label173
   348 jump *label175 always
-    * label *label174
   349 set .monos *tmp247
   350 write *tmp247 .display ".monos"
   351 jump *label180 always
   352 label *label175
   353 jump *label177 always
-    * label *label176
   354 set .polys *tmp248
   355 write *tmp248 .display ".polys"
   356 jump *label180 always
   357 label *label177
-    * label *label178
   358 op add *tmp249 .megas 1
   359 set .megas *tmp249
   360 write *tmp249 .display ".megas"
-    * label *label179
   361 label *label180
-    * label *label181
   362 set .lastMultiProgress 0
   363 jump *label95 always
   364 label *label94
 
   368 set .pressTarget 0
   369 set .kilnTarget 0
   370 label *label97
-    * label *label98
   371 set .lastMultiProgress :backgroundProcess:multiProgress
   372 label *label95
   373 label *label86
-    * label *label87
   374 op sub .loopTicks @tick :backgroundProcess:ticks
-    * label *label14
   375 jump *label116 equal .finished false
   376 label *label15
-    * label *label12
   377 wait 1e12
   378 jump *label11 always
   379 end
 
   381 control config A©FJJU-unloader11 @coal
   382 control enabled A{HDJa-inverted-sorter23 false
   383 set .canConsume false
-    * label *label114
   384 set :buildStart*finished true
   385 jump *label11 always
   386 end
   387 label *label2
   388 set .canConsume true
-    * label *label115
   389 set :buildStop*finished true
   390 jump *label11 always
   391 end

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    80 write @flare .display ".nextFactory"
    81 jump *label25 notEqual .canConsume false
    82 control config A©FJJU-unloader11 @coal
-    * jump *label24 always
+   83 jump *label23 always
    84 label *label25
    85 sensor *tmp86 AAKJ]-steam-generator19 @coal
    86 op mul *tmp87 5 AAKJ]-steam-generator19
    87 jump *label27 greaterThanEq *tmp86 *tmp87
    88 control config A©FJJU-unloader11 @coal
-    * jump *label24 always
+   89 jump *label23 always
    90 label *label27
    91 jump *label29 greaterThanEq :backgroundProcess:power 200
    92 control enabled A¾BFLW-air-factory13 false
 
   110 set .flares *tmp246
   111 write *tmp246 .display ".flares"
   112 jump *label135 always
-    * jump *label130 always
+  113 jump *label134 always
   114 set .monos *tmp247
   115 write *tmp247 .display ".monos"
   116 jump *label135 always
   117 label *label130
-    * jump *label132 always
+  118 jump *label134 always
   119 set .polys *tmp248
   120 write *tmp248 .display ".polys"
   121 jump *label135 always
 
   127 label *label135
   128 set .lastProgress 0
   129 control config A©FJJU-unloader11 @coal
-    * jump *label24 always
+  130 jump *label23 always
   131 label *label33
   132 set .lastProgress :handleAirFactory:factoryProgress
   133 jump *label36 always
 
   135 sensor *tmp111 A¾BFLW-air-factory13 @lead
   136 jump *label40 greaterThanEq *tmp111 0
   137 control config A©FJJU-unloader11 @lead
-    * jump *label24 always
+  138 jump *label23 always
   139 label *label40
   140 label *label36
   141 sensor *tmp116 .core @silicon
 
   155 write @mono .display ".nextFactory"
   156 jump *label49 notEqual .canConsume false
   157 control config A©FJJU-unloader11 @coal
-    * jump *label48 always
+  158 jump *label47 always
   159 label *label49
   160 sensor *tmp132 AAKJ]-steam-generator19 @coal
   161 op mul *tmp133 5 AAKJ]-steam-generator19
   162 jump *label51 greaterThanEq *tmp132 *tmp133
   163 control config A©FJJU-unloader11 @coal
-    * jump *label48 always
+  164 jump *label47 always
   165 label *label51
   166 jump *label53 greaterThanEq :backgroundProcess:power 200
   167 control enabled A¾BFLW-air-factory13 false
 
   190 set .monos *tmp247
   191 write *tmp247 .display ".monos"
   192 jump *label150 always
-    * jump *label147 always
+  193 jump *label149 always
   194 set .polys *tmp248
   195 write *tmp248 .display ".polys"
   196 jump *label150 always
 
   202 label *label150
   203 set .lastProgress 0
   204 control config A©FJJU-unloader11 @coal
-    * jump *label48 always
+  205 jump *label47 always
   206 label *label57
   207 set .lastProgress :handleAirFactory.1:factoryProgress
   208 sensor *tmp154 .core @lead
 
   210 sensor *tmp157 A¾BFLW-air-factory13 @lead
   211 jump *label64 greaterThanEq *tmp157 *tmp156
   212 control config A©FJJU-unloader11 @lead
-    * jump *label48 always
+  213 jump *label47 always
   214 label *label64
   215 sensor *tmp162 .core @silicon
   216 select *tmp164 greaterThan *tmp162 0 30 0
 
   239 op mul *tmp256 *tmp255 1000
   240 op add *tmp257 281 *tmp256
   241 write *tmp257 .bank *tmp252
-    * jump *label158 always
+  242 jump *label160 always
   243 set .flares *tmp246
   244 write *tmp246 .display ".flares"
   245 jump *label165 always
 
   285 set .recoEntered true
   286 label *label77
   287 control enabled A{HDJa-inverted-sorter23 false
-    * jump *label76 always
+  288 jump *label71 always
   289 label *label75
   290 op greaterThan *tmp196 :backgroundProcess:coreSilicon .siliconReserve
   291 op mul *tmp197 40 *tmp196
   292 jump *label82 greaterThanEq :backgroundProcess:s *tmp197
   293 control config A©HFJ`-unloader22 @silicon
   294 control enabled A{HDJa-inverted-sorter23 .canConsume
-    * jump *label83 always
+  295 jump *label71 always
   296 label *label82
   297 op greaterThan *tmp205 :backgroundProcess:coreGraphite .graphiteReserve
   298 op mul *tmp206 40 *tmp205
   299 jump *label84 greaterThanEq :backgroundProcess:g *tmp206
   300 control config A©HFJ`-unloader22 @graphite
   301 control enabled A{HDJa-inverted-sorter23 .canConsume
-    * jump *label85 always
+  302 jump *label71 always
   303 label *label84
   304 control enabled A{HDJa-inverted-sorter23 false
   305 label *label85
 
   340 op mul *tmp256 *tmp255 1000
   341 op add *tmp257 282 *tmp256
   342 write *tmp257 .bank *tmp252
-    * jump *label173 always
+  343 jump *label177 always
   344 set .flares *tmp246
   345 write *tmp246 .display ".flares"
   346 jump *label180 always
   347 label *label173
-    * jump *label175 always
+  348 jump *label177 always
   349 set .monos *tmp247
   350 write *tmp247 .display ".monos"
   351 jump *label180 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-50 instructions):
 
   110 set .flares *tmp246
   111 write *tmp246 .display ".flares"
   112 jump *label135 always
-    * jump *label134 always
-    * set .monos *tmp247
-    * write *tmp247 .display ".monos"
-    * jump *label135 always
-    * label *label130
-    * jump *label134 always
-    * set .polys *tmp248
-    * write *tmp248 .display ".polys"
-    * jump *label135 always
-    * label *label132
-    * jump *label134 always
-    * set .megas *tmp249
-    * write *tmp249 .display ".megas"
-    * label *label134
   113 label *label135
   114 set .lastProgress 0
   115 control config A©FJJU-unloader11 @coal
 
   117 label *label33
   118 set .lastProgress :handleAirFactory:factoryProgress
   119 jump *label36 always
-    * sensor *tmp108 .core @lead
-    * sensor *tmp111 A¾BFLW-air-factory13 @lead
-    * jump *label40 greaterThanEq *tmp111 0
-    * control config A©FJJU-unloader11 @lead
-    * jump *label23 always
-    * label *label40
   120 label *label36
   121 sensor *tmp116 .core @silicon
   122 select *tmp118 greaterThan *tmp116 0 15 0
 
   124 sensor *tmp121 A¾BFLW-air-factory13 @silicon
   125 select *tmp123 lessThan *tmp121 *tmp118 @silicon @coal
   126 control config *tmp119 *tmp123
-    * label *label24
   127 jump *label23 always
   128 label *label22
   129 op lessThan *tmp124 .monos .monoTarget
 
   161 op add *tmp257 280 *tmp256
   162 write *tmp257 .bank *tmp252
   163 jump *label143 always
-    * set .flares *tmp246
-    * write *tmp246 .display ".flares"
-    * jump *label150 always
   164 label *label143
   165 op add *tmp247 .monos 1
   166 set .monos *tmp247
   167 write *tmp247 .display ".monos"
   168 jump *label150 always
-    * jump *label149 always
-    * set .polys *tmp248
-    * write *tmp248 .display ".polys"
-    * jump *label150 always
-    * label *label147
-    * jump *label149 always
-    * set .megas *tmp249
-    * write *tmp249 .display ".megas"
-    * label *label149
   169 label *label150
   170 set .lastProgress 0
   171 control config A©FJJU-unloader11 @coal
 
   185 sensor *tmp167 A¾BFLW-air-factory13 @silicon
   186 select *tmp169 lessThan *tmp167 *tmp164 @silicon @coal
   187 control config *tmp165 *tmp169
-    * label *label48
   188 jump *label47 always
   189 label *label46
   190 set .airFactoryTarget null
 
   206 op add *tmp257 281 *tmp256
   207 write *tmp257 .bank *tmp252
   208 jump *label160 always
-    * set .flares *tmp246
-    * write *tmp246 .display ".flares"
-    * jump *label165 always
-    * label *label158
-    * jump *label160 always
-    * set .monos *tmp247
-    * write *tmp247 .display ".monos"
-    * jump *label165 always
   209 label *label160
   210 op add *tmp248 .polys 1
   211 set .polys *tmp248
   212 write *tmp248 .display ".polys"
   213 jump *label165 always
-    * jump *label164 always
-    * set .megas *tmp249
-    * write *tmp249 .display ".megas"
-    * label *label164
   214 label *label165
   215 set .recoEntered false
   216 set .lastRecoProgress 0
 
   256 jump *label71 always
   257 label *label84
   258 control enabled A{HDJa-inverted-sorter23 false
-    * label *label85
-    * label *label83
-    * label *label76
   259 jump *label71 always
   260 label *label70
   261 write null .display ".nextAddReco"
 
   292 op add *tmp257 282 *tmp256
   293 write *tmp257 .bank *tmp252
   294 jump *label177 always
-    * set .flares *tmp246
-    * write *tmp246 .display ".flares"
-    * jump *label180 always
-    * label *label173
-    * jump *label177 always
-    * set .monos *tmp247
-    * write *tmp247 .display ".monos"
-    * jump *label180 always
-    * label *label175
-    * jump *label177 always
-    * set .polys *tmp248
-    * write *tmp248 .display ".polys"
-    * jump *label180 always
   295 label *label177
   296 op add *tmp249 .megas 1
   297 set .megas *tmp249
 
   314 label *label15
   315 wait 1e12
   316 jump *label11 always
-    * end
   317 label *label0
   318 control config A©FJJU-unloader11 @coal
   319 control enabled A{HDJa-inverted-sorter23 false
   320 set .canConsume false
   321 set :buildStart*finished true
   322 jump *label11 always
-    * end
   323 label *label2
   324 set .canConsume true
   325 set :buildStop*finished true
   326 jump *label11 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   296 op add *tmp249 .megas 1
   297 set .megas *tmp249
   298 write *tmp249 .display ".megas"
-    * label *label180
   299 set .lastMultiProgress 0
   300 jump *label95 always
   301 label *label94

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-7 instructions):
 
   109 op add *tmp246 .flares 1
   110 set .flares *tmp246
   111 write *tmp246 .display ".flares"
-    * jump *label135 always
   112 label *label135
   113 set .lastProgress 0
   114 control config A©FJJU-unloader11 @coal
   115 jump *label23 always
   116 label *label33
   117 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label36 always
   118 label *label36
   119 sensor *tmp116 .core @silicon
   120 select *tmp118 greaterThan *tmp116 0 15 0
 
   158 op mul *tmp256 *tmp255 1000
   159 op add *tmp257 280 *tmp256
   160 write *tmp257 .bank *tmp252
-    * jump *label143 always
   161 label *label143
   162 op add *tmp247 .monos 1
   163 set .monos *tmp247
   164 write *tmp247 .display ".monos"
-    * jump *label150 always
   165 label *label150
   166 set .lastProgress 0
   167 control config A©FJJU-unloader11 @coal
 
   201 op mul *tmp256 *tmp255 1000
   202 op add *tmp257 281 *tmp256
   203 write *tmp257 .bank *tmp252
-    * jump *label160 always
   204 label *label160
   205 op add *tmp248 .polys 1
   206 set .polys *tmp248
   207 write *tmp248 .display ".polys"
-    * jump *label165 always
   208 label *label165
   209 set .recoEntered false
   210 set .lastRecoProgress 0
 
   285 op mul *tmp256 *tmp255 1000
   286 op add *tmp257 282 *tmp256
   287 write *tmp257 .bank *tmp252
-    * jump *label177 always
   288 label *label177
   289 op add *tmp249 .megas 1
   290 set .megas *tmp249

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
   109 op add *tmp246 .flares 1
   110 set .flares *tmp246
   111 write *tmp246 .display ".flares"
-    * label *label135
   112 set .lastProgress 0
   113 control config A©FJJU-unloader11 @coal
   114 jump *label23 always
   115 label *label33
   116 set .lastProgress :handleAirFactory:factoryProgress
-    * label *label36
   117 sensor *tmp116 .core @silicon
   118 select *tmp118 greaterThan *tmp116 0 15 0
   119 set *tmp119 A©FJJU-unloader11
 
   156 op mul *tmp256 *tmp255 1000
   157 op add *tmp257 280 *tmp256
   158 write *tmp257 .bank *tmp252
-    * label *label143
   159 op add *tmp247 .monos 1
   160 set .monos *tmp247
   161 write *tmp247 .display ".monos"
-    * label *label150
   162 set .lastProgress 0
   163 control config A©FJJU-unloader11 @coal
   164 jump *label47 always
 
   197 op mul *tmp256 *tmp255 1000
   198 op add *tmp257 281 *tmp256
   199 write *tmp257 .bank *tmp252
-    * label *label160
   200 op add *tmp248 .polys 1
   201 set .polys *tmp248
   202 write *tmp248 .display ".polys"
-    * label *label165
   203 set .recoEntered false
   204 set .lastRecoProgress 0
   205 jump *label73 always
 
   279 op mul *tmp256 *tmp255 1000
   280 op add *tmp257 282 *tmp256
   281 write *tmp257 .bank *tmp252
-    * label *label177
   282 op add *tmp249 .megas 1
   283 set .megas *tmp249
   284 write *tmp249 .display ".megas"

Final code before resolving virtual instructions:

    0:  jump *label10 always 0 0                                     CoreController.mnd: #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label2 always 0 0                                      ...
        label *label10                                               ...
    3:  set .finished false                                          CoreController.mnd: remote var
    4:  set .flares 0                                                ...
    5:  set .monos 0                                                 ...
    6:  set .polys 1                                                 ...
    7:  set .megas 0                                                 ...
    8:  set .pressTarget 20                                          ...
    9:  set .smelterTarget 20                                        ...
   10:  set .kilnTarget 20                                           ...
   11:  set .flareTarget 0                                           ...
   12:  set .monoTarget 0                                            ...
   13:  set .polyTarget 0                                            ...
   14:  set .megaTarget 0                                            ...
   15:  set .powerTarget 1609                                        ...
   16:  set .lastProgress 0                                          CoreController.mnd: volatile var lastProgress = 0, lastRecoProgress = 0, lastMultiProgress = 0;
   17:  set .lastRecoProgress 0                                      ...
   18:  set .lastMultiProgress 0                                     ...
   19:  set .recoEntered false                                       CoreController.mnd: volatile var recoEntered = false;
   20:  set .canConsume true                                         CoreController.mnd: volatile var canConsume = true;
   21:  set .airFactoryTarget null                                   CoreController.mnd: var airFactoryTarget = null;
   22:  set .waterMax 0                                              CoreController.mnd: var waterMax = 0;
   23:  set .enableWater true                                        CoreController.mnd: var enableWater = true;
   24:  set *signature "eb9ab5a008f372ac:v1"                         CoreController.mnd: #set target = 8;
        label *label11                                               ...
   25:  jump *label15 notEqual .finished false                       CoreController.mnd: while !finished do
        label *label116                                              ...
   26:  set :backgroundProcess:ticks @tick                           CoreController.mnd: var ticks = @tick;
   27:  sensor :backgroundProcess:coreSilicon .core @silicon         CoreController.mnd: var coreSilicon = core.@silicon;
   28:  sensor :backgroundProcess:coreGraphite .core @graphite       CoreController.mnd: var coreGraphite = core.@graphite;
   29:  set *tmp36 ALQIJ^-silicon-smelter20                          CoreController.mnd: smelter2.enabled = smelter.enabled = coreSilicon < smelterTarget;
   30:  set *tmp38 ALMQJN-silicon-smelter4                           ...
   31:  op lessThan *tmp40 :backgroundProcess:coreSilicon .smelterTa ...
   32:  control enabled *tmp38 *tmp40 0 0 0                          ...
   33:  control enabled *tmp36 *tmp40 0 0 0                          ...
   34:  set *tmp41 AJEMJJ-graphite-press0                            CoreController.mnd: press.enabled = !multipress and coreGraphite < pressTarget;
   35:  op equal *tmp43 AKFRJ_-multi-press21 false                   ...
   36:  op lessThan *tmp44 :backgroundProcess:coreGraphite .pressTar ...
   37:  op land *tmp45 *tmp43 *tmp44                                 ...
   38:  control enabled *tmp41 *tmp45 0 0 0                          ...
   39:  set *tmp46 AKFRJ_-multi-press21                              CoreController.mnd: multipress.enabled = coreGraphite < pressTarget;
   40:  op lessThan *tmp48 :backgroundProcess:coreGraphite .pressTar ...
   41:  control enabled *tmp46 *tmp48 0 0 0                          ...
   42:  set *tmp49 ANOMJZ-kiln16                                     CoreController.mnd: kiln.enabled = core.@metaglass < kilnTarget;
   43:  sensor *tmp51 .core @metaglass                               ...
   44:  op lessThan *tmp52 *tmp51 .kilnTarget                        ...
   45:  control enabled *tmp49 *tmp52 0 0 0                          ...
   46:  sensor :backgroundProcess:power AJTJK-battery1 @totalPower  CoreController.mnd: var power = battery1.@totalPower;
   47:  jump *label16 equal AAKJ]-steam-generator19 false           CoreController.mnd: if steam_gen then
   48:  set *tmp55 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 9;
   49:  op lessThan *tmp57 :backgroundProcess:power 9                ...
   50:  control enabled *tmp55 *tmp57 0 0 0                          ...
   51:  set *tmp58 AAKJ]-steam-generator19                          CoreController.mnd: steam_gen.enabled = power < powerTarget;
   52:  op lessThan *tmp60 :backgroundProcess:power .powerTarget     ...
   53:  control enabled *tmp58 *tmp60 0 0 0                          ...
   54:  set *tmp61 AXTNJl-pulverizer34                               CoreController.mnd: pulverizer3.enabled = power > 900;
   55:  op greaterThan *tmp63 :backgroundProcess:power 900           ...
   56:  control enabled *tmp61 *tmp63 0 0 0                          ...
   57:  set *tmp64 AXTLJm-pulverizer35                               CoreController.mnd: pulverizer4.enabled = power > 1000;
   58:  op greaterThan *tmp66 :backgroundProcess:power 1000          ...
   59:  control enabled *tmp64 *tmp66 0 0 0                          ...
   60:  sensor :backgroundProcess:water AÜAOJ[-liquid-container17 @t CoreController.mnd: var water = liquid_container.@totalLiquids;
   61:  op max .waterMax .waterMax :backgroundProcess:water          CoreController.mnd: waterMax = max(waterMax, water);
   62:  select *tmp314 greaterThan :backgroundProcess:water 500 fals CoreController.mnd: enableWater = water < 250 ? true : water > 500 ? false : enableWater;
   63:  select *tmp70 lessThan :backgroundProcess:water 250 true *tm ...
   64:  set .enableWater *tmp70                                      ...
   65:  control enabled A¡ASJ\-water-extractor18 *tmp70 0 0 0        CoreController.mnd: water_ext.enabled = enableWater;
   66:  jump *label17 always 0 0                                     CoreController.mnd: if steam_gen then
        label *label16                                               ...
   67:  set *tmp75 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 809;
   68:  op lessThan *tmp77 :backgroundProcess:power 809              ...
   69:  control enabled *tmp75 *tmp77 0 0 0                          ...
        label *label17                                               CoreController.mnd: if steam_gen then
   70:  op lessThan *tmp78 .flares .flareTarget                      CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
   71:  op notEqual *tmp79 .airFactoryTarget @mono                   ...
   72:  op land *tmp80 *tmp78 *tmp79                                 ...
   73:  jump *label22 equal *tmp80 false                             ...
   74:  set .airFactoryTarget @flare                                 CoreController.mnd: display.nextFactory = airFactoryTarget = @flare;
   75:  write @flare .display ".nextFactory"                         ...
   76:  jump *label25 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
   77:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   78:  jump *label23 always 0 0                                     CoreController.mnd: return;
        label *label25                                               CoreController.mnd: if !canConsume then
   79:  sensor *tmp86 AAKJ]-steam-generator19 @coal                 CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   80:  op mul *tmp87 5 AAKJ]-steam-generator19                     ...
   81:  jump *label27 greaterThanEq *tmp86 *tmp87                    ...
   82:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   83:  jump *label23 always 0 0                                     CoreController.mnd: return;
        label *label27                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   84:  jump *label29 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
   85:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
   86:  jump *label30 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label29                                               ...
   87:  jump *label31 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
   88:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label31                                               CoreController.mnd: elsif power > 500 then
        label *label30                                               CoreController.mnd: if power < 200 then
   89:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = unit;
   90:  sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory1 CoreController.mnd: var factoryProgress = air_factory.@progress;
   91:  jump *label33 lessThanEq .lastProgress :handleAirFactory:fac CoreController.mnd: if lastProgress > factoryProgress then
   92:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
   93:  op sub *tmp252 *tmp32 1                                      ...
   94:  write *tmp252 .bank 511                                      ...
   95:  read *tmp255 .timer "time"                                   ...
   96:  op mul *tmp256 *tmp255 1000                                  ...
   97:  op add *tmp257 275 *tmp256                                   ...
   98:  write *tmp257 .bank *tmp252                                  ...
   99:  op add *tmp246 .flares 1                                     CoreController.mnd: when @flare then display.flares = ++flares;
  100:  set .flares *tmp246                                          ...
  101:  write *tmp246 .display ".flares"                             ...
  102:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
  103:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  104:  jump *label23 always 0 0                                     CoreController.mnd: return;
        label *label33                                               CoreController.mnd: if lastProgress > factoryProgress then
  105:  set .lastProgress :handleAirFactory:factoryProgress          CoreController.mnd: lastProgress = factoryProgress;
  106:  sensor *tmp116 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
  107:  select *tmp118 greaterThan *tmp116 0 15 0                    ...
  108:  set *tmp119 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
  109:  sensor *tmp121 A¾BFLW-air-factory13 @silicon                 ...
  110:  select *tmp123 lessThan *tmp121 *tmp118 @silicon @coal       ...
  111:  control config *tmp119 *tmp123 0 0 0                         ...
  112:  jump *label23 always 0 0                                     CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
        label *label22                                               ...
  113:  op lessThan *tmp124 .monos .monoTarget                       CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
  114:  op notEqual *tmp125 .airFactoryTarget @flare                 ...
  115:  op land *tmp126 *tmp124 *tmp125                              ...
  116:  jump *label46 equal *tmp126 false                            ...
  117:  set .airFactoryTarget @mono                                  CoreController.mnd: display.nextFactory = airFactoryTarget = @mono;
  118:  write @mono .display ".nextFactory"                          ...
  119:  jump *label49 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
  120:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  121:  jump *label47 always 0 0                                     CoreController.mnd: return;
        label *label49                                               CoreController.mnd: if !canConsume then
  122:  sensor *tmp132 AAKJ]-steam-generator19 @coal                CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  123:  op mul *tmp133 5 AAKJ]-steam-generator19                    ...
  124:  jump *label51 greaterThanEq *tmp132 *tmp133                  ...
  125:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  126:  jump *label47 always 0 0                                     CoreController.mnd: return;
        label *label51                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  127:  jump *label53 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
  128:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  129:  jump *label54 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label53                                               ...
  130:  jump *label55 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
  131:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label55                                               CoreController.mnd: elsif power > 500 then
        label *label54                                               CoreController.mnd: if power < 200 then
  132:  control config A¾BFLW-air-factory13 @mono 0 0 0              CoreController.mnd: air_factory.config = unit;
  133:  sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factor CoreController.mnd: var factoryProgress = air_factory.@progress;
  134:  jump *label57 lessThanEq .lastProgress :handleAirFactory.1:f CoreController.mnd: if lastProgress > factoryProgress then
  135:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  136:  op sub *tmp252 *tmp32 1                                      ...
  137:  write *tmp252 .bank 511                                      ...
  138:  read *tmp255 .timer "time"                                   ...
  139:  op mul *tmp256 *tmp255 1000                                  ...
  140:  op add *tmp257 280 *tmp256                                   ...
  141:  write *tmp257 .bank *tmp252                                  ...
  142:  op add *tmp247 .monos 1                                      CoreController.mnd: when @mono  then display.monos = ++monos;
  143:  set .monos *tmp247                                           ...
  144:  write *tmp247 .display ".monos"                              ...
  145:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
  146:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  147:  jump *label47 always 0 0                                     CoreController.mnd: return;
        label *label57                                               CoreController.mnd: if lastProgress > factoryProgress then
  148:  set .lastProgress :handleAirFactory.1:factoryProgress        CoreController.mnd: lastProgress = factoryProgress;
  149:  sensor *tmp154 .core @lead                                   CoreController.mnd: var leadLimit = core.@lead > 0 ? lead : 0;
  150:  select *tmp156 greaterThan *tmp154 0 15 0                    ...
  151:  sensor *tmp157 A¾BFLW-air-factory13 @lead                    CoreController.mnd: if air_factory.@lead < leadLimit then
  152:  jump *label64 greaterThanEq *tmp157 *tmp156                  ...
  153:  control config A©FJJU-unloader11 @lead 0 0 0                 CoreController.mnd: unloader2.config = @lead;
  154:  jump *label47 always 0 0                                     CoreController.mnd: return;
        label *label64                                               CoreController.mnd: if air_factory.@lead < leadLimit then
  155:  sensor *tmp162 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
  156:  select *tmp164 greaterThan *tmp162 0 30 0                    ...
  157:  set *tmp165 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
  158:  sensor *tmp167 A¾BFLW-air-factory13 @silicon                 ...
  159:  select *tmp169 lessThan *tmp167 *tmp164 @silicon @coal       ...
  160:  control config *tmp165 *tmp169 0 0 0                         ...
  161:  jump *label47 always 0 0                                     CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
        label *label46                                               ...
  162:  set .airFactoryTarget null                                   CoreController.mnd: display.nextFactory = airFactoryTarget = null;
  163:  write null .display ".nextFactory"                           ...
  164:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  165:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = @flare;
  166:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
        label *label47                                               CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
        label *label23                                               CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
  167:  jump *label70 greaterThanEq .polys .polyTarget               CoreController.mnd: if polys < polyTarget then
  168:  write @poly .display ".nextAddReco"                          CoreController.mnd: display.nextAddReco = @poly;
  169:  sensor :backgroundProcess:recoProgress AÀF@Lb-additive-recon CoreController.mnd: var recoProgress = additive_rec.@progress;
  170:  jump *label72 lessThanEq .lastRecoProgress :backgroundProces CoreController.mnd: if lastRecoProgress > recoProgress then
  171:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  172:  op sub *tmp252 *tmp32 1                                      ...
  173:  write *tmp252 .bank 511                                      ...
  174:  read *tmp255 .timer "time"                                   ...
  175:  op mul *tmp256 *tmp255 1000                                  ...
  176:  op add *tmp257 281 *tmp256                                   ...
  177:  write *tmp257 .bank *tmp252                                  ...
  178:  op add *tmp248 .polys 1                                      CoreController.mnd: when @poly  then display.polys = ++polys;
  179:  set .polys *tmp248                                           ...
  180:  write *tmp248 .display ".polys"                              ...
  181:  set .recoEntered false                                       CoreController.mnd: recoEntered = false;
  182:  set .lastRecoProgress 0                                      CoreController.mnd: lastRecoProgress = 0;
  183:  jump *label73 always 0 0                                     CoreController.mnd: if lastRecoProgress > recoProgress then
        label *label72                                               ...
  184:  set .lastRecoProgress :backgroundProcess:recoProgress        CoreController.mnd: lastRecoProgress = recoProgress;
        label *label73                                               CoreController.mnd: if lastRecoProgress > recoProgress then
  185:  sensor :backgroundProcess:s AÀF@Lb-additive-reconstructor24  CoreController.mnd: var s = additive_rec.@silicon;
  186:  sensor :backgroundProcess:g AÀF@Lb-additive-reconstructor24  CoreController.mnd: var g = additive_rec.@graphite;
  187:  op greaterThanEq *tmp183 :backgroundProcess:s 40             CoreController.mnd: if s >= 40 and g >= 40 then
  188:  op greaterThanEq *tmp184 :backgroundProcess:g 40             ...
  189:  op land *tmp185 *tmp183 *tmp184                              ...
  190:  jump *label75 equal *tmp185 false                            ...
  191:  jump *label77 notEqual .recoEntered false                    CoreController.mnd: if not recoEntered then
  192:  sensor :backgroundProcess:x AÀF@Lb-additive-reconstructor24  CoreController.mnd: var x = additive_rec.@x;
  193:  sensor :backgroundProcess:y AÀF@Lb-additive-reconstructor24  CoreController.mnd: var y = additive_rec.@y;
  194:  ubind @mono                                                  CoreController.mnd: ubind(@mono);
        label *label79                                               CoreController.mnd: do
  195:  ucontrol move :backgroundProcess:x :backgroundProcess:y 0 0  CoreController.mnd: move(x, y);
  196:  ucontrol payEnter 0 0 0 0 0                                  CoreController.mnd: payEnter();
  197:  sensor *tmp191 @unit @dead                                   CoreController.mnd: while !@unit.@dead;
  198:  jump *label79 equal *tmp191 false                            CoreController.mnd: do
  199:  op sub *tmp193 .monos 1                                      CoreController.mnd: display.monos = --monos;
  200:  set .monos *tmp193                                           ...
  201:  write *tmp193 .display ".monos"                              ...
  202:  set .recoEntered true                                        CoreController.mnd: recoEntered = true;
        label *label77                                               CoreController.mnd: if not recoEntered then
  203:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  204:  jump *label71 always 0 0                                     CoreController.mnd: if s >= 40 and g >= 40 then
        label *label75                                               ...
  205:  op greaterThan *tmp196 :backgroundProcess:coreSilicon .silic CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
  206:  op mul *tmp197 40 *tmp196                                    ...
  207:  jump *label82 greaterThanEq :backgroundProcess:s *tmp197     ...
  208:  control config A©HFJ`-unloader22 @silicon 0 0 0              CoreController.mnd: unloader4.config = @silicon;
  209:  control enabled A{HDJa-inverted-sorter23 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  210:  jump *label71 always 0 0                                     CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
        label *label82                                               ...
  211:  op greaterThan *tmp205 :backgroundProcess:coreGraphite .grap CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
  212:  op mul *tmp206 40 *tmp205                                    ...
  213:  jump *label84 greaterThanEq :backgroundProcess:g *tmp206     ...
  214:  control config A©HFJ`-unloader22 @graphite 0 0 0             CoreController.mnd: unloader4.config = @graphite;
  215:  control enabled A{HDJa-inverted-sorter23 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  216:  jump *label71 always 0 0                                     CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
        label *label84                                               ...
  217:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  218:  jump *label71 always 0 0                                     CoreController.mnd: if polys < polyTarget then
        label *label70                                               ...
  219:  write null .display ".nextAddReco"                           CoreController.mnd: display.nextAddReco = null;
  220:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
        label *label71                                               CoreController.mnd: if polys < polyTarget then
  221:  jump *label86 equal AÁNBJc-multiplicative-reconstructor25 fa CoreController.mnd: if multiplicative_rec then
  222:  write @mega .display ".nextMultiReco"                        CoreController.mnd: display.nextMultiReco = @mega;
  223:  set :backgroundProcess:c @metaglass                          CoreController.mnd: c = @metaglass;
  224:  sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @metagl CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  225:  jump *label89 lessThan *tmp219 40                            ...
  226:  set :backgroundProcess:c @titanium                           CoreController.mnd: c = @titanium;
  227:  sensor *tmp222 .core @titanium                               CoreController.mnd: elsif core.@titanium and multiplicative_rec.@titanium < 80 then
  228:  sensor *tmp223 AÁNBJc-multiplicative-reconstructor25 @titani ...
  229:  op lessThan *tmp224 *tmp223 80                               ...
  230:  op land *tmp225 *tmp222 *tmp224                              ...
  231:  jump *label91 notEqual *tmp225 false                         ...
  232:  sensor *tmp227 .core @silicon                                CoreController.mnd: elsif core.@silicon and multiplicative_rec.@silicon < 130 then
  233:  sensor *tmp228 AÁNBJc-multiplicative-reconstructor25 @silico ...
  234:  op lessThan *tmp229 *tmp228 130                              ...
  235:  op land *tmp230 *tmp227 *tmp229                              ...
  236:  select :backgroundProcess:c notEqual *tmp230 false @silicon  ...
        label *label91                                               CoreController.mnd: elsif core.@titanium and multiplicative_rec.@titanium < 80 then
        label *label89                                               CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  237:  control config A©NHJX-unloader14 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader3.config = c;
  238:  control config A©HFJ`-unloader22 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader4.config = c;
  239:  sensor :backgroundProcess:multiProgress AÁNBJc-multiplicativ CoreController.mnd: var multiProgress = multiplicative_rec.@progress;
  240:  jump *label94 lessThanEq .lastMultiProgress :backgroundProce CoreController.mnd: if lastMultiProgress > multiProgress then
  241:  write null .display ".nextMultiReco"                         CoreController.mnd: display.nextMultiReco = null;
  242:  read *tmp32 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  243:  op sub *tmp252 *tmp32 1                                      ...
  244:  write *tmp252 .bank 511                                      ...
  245:  read *tmp255 .timer "time"                                   ...
  246:  op mul *tmp256 *tmp255 1000                                  ...
  247:  op add *tmp257 282 *tmp256                                   ...
  248:  write *tmp257 .bank *tmp252                                  ...
  249:  op add *tmp249 .megas 1                                      CoreController.mnd: when @mega  then display.megas = ++megas;
  250:  set .megas *tmp249                                           ...
  251:  write *tmp249 .display ".megas"                              ...
  252:  set .lastMultiProgress 0                                     CoreController.mnd: lastMultiProgress = 0;
  253:  jump *label95 always 0 0                                     CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label94                                               ...
  254:  jump *label97 lessThanEq :backgroundProcess:multiProgress 0  CoreController.mnd: if multiProgress > 0 then
  255:  control enabled A©RPJg-unloader29 false 0 0 0                CoreController.mnd: unloader_a.enabled = false;
  256:  set .smelterTarget 0                                         CoreController.mnd: smelterTarget = 0;
  257:  set .pressTarget 0                                           CoreController.mnd: pressTarget = 0;
  258:  set .kilnTarget 0                                            CoreController.mnd: kilnTarget = 0;
        label *label97                                               CoreController.mnd: if multiProgress > 0 then
  259:  set .lastMultiProgress :backgroundProcess:multiProgress      CoreController.mnd: lastMultiProgress = multiProgress;
        label *label95                                               CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label86                                               CoreController.mnd: if multiplicative_rec then
  260:  op sub .loopTicks @tick :backgroundProcess:ticks             CoreController.mnd: loopTicks = @tick - ticks;
  261:  jump *label116 equal .finished false                         CoreController.mnd: while !finished do
        label *label15                                               ...
  262:  wait 1e12                                                    CoreController.mnd: #set target = 8;
  263:  jump *label11 always 0 0                                     ...
        label *label0                                                CoreController.mnd: remote void buildStart()
  264:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  265:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  266:  set .canConsume false                                        CoreController.mnd: canConsume = false;
  267:  set :buildStart*finished true                                CoreController.mnd: remote void buildStart()
  268:  jump *label11 always 0 0                                     ...
        label *label2                                                CoreController.mnd: remote void buildStop()
  269:  set .canConsume true                                         CoreController.mnd: canConsume = true;
  270:  set :buildStop*finished true                                 CoreController.mnd: remote void buildStop()
  271:  jump *label11 always 0 0                                     ...


Performance: parsed in 652 ms, compiled in 324 ms, optimized in 855 ms, run in 30 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (26 steps):
The program didn't generate any output.
Execution exception at instruction 27: sensor :backgroundProcess:coreSilicon .core @silicon:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
