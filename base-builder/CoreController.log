   463 instructions before optimizations.
    43 instructions eliminated by Temp Variables Elimination (7 iterations).
     1 instructions eliminated by Case Expression Optimization.
    61 instructions eliminated by Dead Code Elimination (7 iterations).
     5 instructions eliminated by Jump Normalization (5 iterations).
    27 instructions eliminated by Jump Optimization (5 iterations).
    22 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     4 instructions modified by Expression Optimization (3 iterations).
    22 instructions eliminated by If Expression Optimization (4 iterations).
    41 instructions eliminated by Data Flow Optimization (4 passes, 15 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
    66 instructions added by Function Inlining (6 iterations).
     6 function calls inlined by Function Inlining.
     4 instructions eliminated by Jump Straightening (5 iterations).
    17 instructions updated by Jump Threading.
    50 instructions eliminated by Unreachable Code Elimination (2 iterations).
   253 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 726):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:52:1 size   +62, benefit       76.6, efficiency      1.235
  * Inline function 'logUnit' defined at CoreController.mnd:48:1 size    -1, benefit       76.6, efficiency   Infinity (-5 instructions)
    Inline function 'log' defined at CoreController.mnd:44:1     size    -1, benefit       76.6, efficiency   Infinity
    Inline function call at CoreController.mnd:83:9              size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:83:9              size   +21, benefit       10.9, efficiency      0.521
    Inline function call at CoreController.mnd:155:17            size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:209:17            size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:53:5              size    +3, benefit       76.6, efficiency     25.521
    Inline function call at CoreController.mnd:49:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 731):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:52:1 size   +65, benefit       76.6, efficiency      1.178
  * Inline function 'log' defined at CoreController.mnd:44:1     size    -1, benefit       76.6, efficiency   Infinity (-4 instructions)
    Inline function call at CoreController.mnd:83:9              size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:83:9              size   +22, benefit       10.9, efficiency      0.497
    Inline function call at CoreController.mnd:155:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:209:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:49:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 735):
  * Inline function 'factoryUnitFinished' defined at CoreController.mnd:52:1 size   +80, benefit       76.6, efficiency      0.957 (+70 instructions)
    Inline function call at CoreController.mnd:83:9              size   +27, benefit       21.9, efficiency      0.810
    Inline function call at CoreController.mnd:83:9              size   +27, benefit       10.9, efficiency      0.405
    Inline function call at CoreController.mnd:155:17            size   +27, benefit       21.9, efficiency      0.810
    Inline function call at CoreController.mnd:209:17            size   +27, benefit       21.9, efficiency      0.810

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   484 setaddr :logUnit*retaddr *label92 (h:*label92)
   485 call *label5 *invalid :logUnit*retval (m:*label92) (h:*label92)
   486 label *label92
-    * set *tmp225 :factoryUnitFinished:unit
-    * jump *label95 equal *tmp225 @flare
+  487 jump *label95 equal :factoryUnitFinished:unit @flare
   488 jump *label94 always
   489 label *label95
   490 op add *tmp226 .flares 1
 
   493 set *tmp224 *tmp226
   494 jump *label93 always
   495 label *label94
-    * jump *label97 equal *tmp225 @mono
+  496 jump *label97 equal :factoryUnitFinished:unit @mono
   497 jump *label96 always
   498 label *label97
   499 op add *tmp227 .monos 1
 
   502 set *tmp224 *tmp227
   503 jump *label93 always
   504 label *label96
-    * jump *label99 equal *tmp225 @poly
+  505 jump *label99 equal :factoryUnitFinished:unit @poly
   506 jump *label98 always
   507 label *label99
   508 op add *tmp228 .polys 1
 
   511 set *tmp224 *tmp228
   512 jump *label93 always
   513 label *label98
-    * jump *label101 equal *tmp225 @mega
+  514 jump *label101 equal :factoryUnitFinished:unit @mega
   515 jump *label100 always
   516 label *label101
   517 op add *tmp229 .megas 1

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-39 instructions):
 
    56 set *tmp56 AAKJ\-steam-generator18
    57 op lessThan *tmp58 :backgroundProcess:power .powerTarget
    58 control enabled *tmp56 *tmp58
-    * set *tmp52 *tmp58
    59 jump *label15 always
    60 label *label14
    61 set *tmp59 AJRJM-combustion-generator3
    62 op lessThan *tmp61 :backgroundProcess:power 809
    63 control enabled *tmp59 *tmp61
-    * set *tmp52 *tmp61
    64 label *label15
    65 op lessThan *tmp62 .flares .flareTarget
    66 op notEqual *tmp63 .airFactoryTarget @mono
 
    77 set *tmp68 A©FJJU-unloader11
    78 control config *tmp68 @coal
    79 jump *label18 always
-    * set *tmp67 null
    80 jump *label20 always
    81 label *label19
-    * set *tmp67 null
    82 label *label20
    83 sensor *tmp70 AAKJ\-steam-generator18 @coal
    84 op mul *tmp71 5 AAKJ\-steam-generator18
 
    87 set *tmp74 A©FJJU-unloader11
    88 control config *tmp74 @coal
    89 jump *label18 always
-    * set *tmp73 null
    90 jump *label22 always
    91 label *label21
-    * set *tmp73 null
    92 label *label22
    93 op lessThan *tmp76 :handleAirFactory:power 200
    94 jump *label23 equal *tmp76 false
    95 set *tmp78 A¾BFLW-air-factory13
    96 control enabled *tmp78 false
-    * set *tmp77 false
    97 jump *label24 always
    98 label *label23
    99 op greaterThan *tmp80 :handleAirFactory:power 500
 
   105 label *label25
   106 set *tmp81 null
   107 label *label26
-    * set *tmp77 *tmp81
   108 label *label24
   109 set *tmp84 A¾BFLW-air-factory13
   110 control config *tmp84 :handleAirFactory:unit
 
   120 set *tmp89 A©FJJU-unloader11
   121 control config *tmp89 @coal
   122 jump *label18 always
-    * set *tmp88 null
   123 jump *label28 always
   124 label *label27
-    * set *tmp88 null
   125 label *label28
   126 set .lastProgress :handleAirFactory:factoryProgress
   127 jump *label30 equal :handleAirFactory:lead false
 
   145 label *label34
   146 set *tmp97 null
   147 label *label35
-    * set *tmp91 *tmp97
   148 jump *label31 always
   149 label *label30
-    * set *tmp91 null
   150 label *label31
   151 sensor *tmp100 .core @silicon
   152 op greaterThan *tmp101 *tmp100 0
 
   168 label *label39
   169 control config *tmp103 *tmp107
   170 label *label18
-    * set *tmp65 null
   171 jump *label17 always
   172 label *label16
   173 op lessThan *tmp108 .monos .monoTarget
 
   185 set *tmp114 A©FJJU-unloader11
   186 control config *tmp114 @coal
   187 jump *label42 always
-    * set *tmp113 null
   188 jump *label44 always
   189 label *label43
-    * set *tmp113 null
   190 label *label44
   191 sensor *tmp116 AAKJ\-steam-generator18 @coal
   192 op mul *tmp117 5 AAKJ\-steam-generator18
 
   195 set *tmp120 A©FJJU-unloader11
   196 control config *tmp120 @coal
   197 jump *label42 always
-    * set *tmp119 null
   198 jump *label46 always
   199 label *label45
-    * set *tmp119 null
   200 label *label46
   201 op lessThan *tmp122 :handleAirFactory.1:power 200
   202 jump *label47 equal *tmp122 false
   203 set *tmp124 A¾BFLW-air-factory13
   204 control enabled *tmp124 false
-    * set *tmp123 false
   205 jump *label48 always
   206 label *label47
   207 op greaterThan *tmp126 :handleAirFactory.1:power 500
 
   213 label *label49
   214 set *tmp127 null
   215 label *label50
-    * set *tmp123 *tmp127
   216 label *label48
   217 set *tmp130 A¾BFLW-air-factory13
   218 control config *tmp130 :handleAirFactory.1:unit
 
   228 set *tmp135 A©FJJU-unloader11
   229 control config *tmp135 @coal
   230 jump *label42 always
-    * set *tmp134 null
   231 jump *label52 always
   232 label *label51
-    * set *tmp134 null
   233 label *label52
   234 set .lastProgress :handleAirFactory.1:factoryProgress
   235 jump *label54 equal :handleAirFactory.1:lead false
 
   253 label *label58
   254 set *tmp143 null
   255 label *label59
-    * set *tmp137 *tmp143
   256 jump *label55 always
   257 label *label54
-    * set *tmp137 null
   258 label *label55
   259 sensor *tmp146 .core @silicon
   260 op greaterThan *tmp147 *tmp146 0
 
   289 control config *tmp158 @coal
   290 set *tmp111 @coal
   291 label *label41
-    * set *tmp65 *tmp111
   292 label *label17
   293 op lessThan *tmp160 .polys .polyTarget
   294 jump *label64 equal *tmp160 false
 
   303 label *label68
   304 set .recoEntered false
   305 set .lastRecoProgress 0
-    * set *tmp164 0
   306 jump *label67 always
   307 label *label66
   308 set .lastRecoProgress :backgroundProcess:recoProgress
-    * set *tmp164 :backgroundProcess:recoProgress
   309 label *label67
   310 sensor *tmp165 AÀF@Lc-additive-reconstructor25 @silicon
   311 set :backgroundProcess:s *tmp165
 
   334 set .monos *tmp177
   335 write *tmp177 .display ".monos"
   336 set .recoEntered true
-    * set *tmp172 true
   337 jump *label72 always
   338 label *label71
-    * set *tmp172 null
   339 label *label72
   340 set *tmp178 A{HDJb-inverted-sorter24
   341 control enabled *tmp178 false
 
   374 label *label77
   375 set *tmp170 *tmp183
   376 label *label70
-    * set *tmp161 *tmp170
   377 jump *label65 always
   378 label *label64
   379 write null .display ".nextAddReco"
   380 set *tmp200 A{HDJb-inverted-sorter24
   381 control enabled *tmp200 false
-    * set *tmp161 false
   382 label *label65
   383 jump *label80 equal AÁNBJd-multiplicative-reconstructor26 false
   384 write @mega .display ".nextMultiReco"
 
   387 op lessThan *tmp204 *tmp203 40
   388 jump *label82 equal *tmp204 false
   389 set :backgroundProcess:c @metaglass
-    * set *tmp205 :backgroundProcess:c
   390 jump *label83 always
   391 label *label82
   392 sensor *tmp206 .core @titanium
 
   412 label *label87
   413 set *tmp210 *tmp215
   414 label *label85
-    * set *tmp205 *tmp210
   415 label *label83
   416 set *tmp216 A©NHJX-unloader14
   417 control config *tmp216 :backgroundProcess:c
 
   433 set .lastMultiProgress :backgroundProcess:multiProgress
   434 set *tmp222 :backgroundProcess:multiProgress
   435 label *label89
-    * set *tmp202 *tmp222
   436 jump *label81 always
   437 label *label80
-    * set *tmp202 null
   438 label *label81
   439 op sub *tmp223 @tick :backgroundProcess:ticks
   440 set .loopTicks *tmp223
 
   456 op add *tmp226 .flares 1
   457 set .flares *tmp226
   458 write *tmp226 .display ".flares"
-    * set *tmp224 *tmp226
   459 jump *label93 always
   460 label *label94
   461 jump *label97 equal :factoryUnitFinished:unit @mono
 
   464 op add *tmp227 .monos 1
   465 set .monos *tmp227
   466 write *tmp227 .display ".monos"
-    * set *tmp224 *tmp227
   467 jump *label93 always
   468 label *label96
   469 jump *label99 equal :factoryUnitFinished:unit @poly
 
   472 op add *tmp228 .polys 1
   473 set .polys *tmp228
   474 write *tmp228 .display ".polys"
-    * set *tmp224 *tmp228
   475 jump *label93 always
   476 label *label98
   477 jump *label101 equal :factoryUnitFinished:unit @mega
 
   480 op add *tmp229 .megas 1
   481 set .megas *tmp229
   482 write *tmp229 .display ".megas"
-    * set *tmp224 *tmp229
   483 jump *label93 always
   484 label *label100
-    * set *tmp224 null
   485 label *label93
   486 label *label91
   487 return :factoryUnitFinished*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-16 instructions):
 
   100 jump *label25 equal *tmp80 false
   101 set *tmp82 A¾BFLW-air-factory13
   102 control enabled *tmp82 true
-    * set *tmp81 true
   103 jump *label26 always
   104 label *label25
-    * set *tmp81 null
   105 label *label26
   106 label *label24
   107 set *tmp84 A¾BFLW-air-factory13
 
   138 set *tmp98 A©FJJU-unloader11
   139 control config *tmp98 @lead
   140 jump *label18 always
-    * set *tmp97 null
   141 jump *label35 always
   142 label *label34
-    * set *tmp97 null
   143 label *label35
   144 jump *label31 always
   145 label *label30
 
   204 jump *label49 equal *tmp126 false
   205 set *tmp128 A¾BFLW-air-factory13
   206 control enabled *tmp128 true
-    * set *tmp127 true
   207 jump *label50 always
   208 label *label49
-    * set *tmp127 null
   209 label *label50
   210 label *label48
   211 set *tmp130 A¾BFLW-air-factory13
 
   242 set *tmp144 A©FJJU-unloader11
   243 control config *tmp144 @lead
   244 jump *label42 always
-    * set *tmp143 null
   245 jump *label59 always
   246 label *label58
-    * set *tmp143 null
   247 label *label59
   248 jump *label55 always
   249 label *label54
 
   268 label *label63
   269 control config *tmp149 *tmp153
   270 label *label42
-    * set *tmp111 null
   271 jump *label41 always
   272 label *label40
   273 set .airFactoryTarget null
 
   278 control config *tmp156 @flare
   279 set *tmp158 A©FJJU-unloader11
   280 control config *tmp158 @coal
-    * set *tmp111 @coal
   281 label *label41
   282 label *label17
   283 op lessThan *tmp160 .polys .polyTarget
 
   329 label *label72
   330 set *tmp178 A{HDJb-inverted-sorter24
   331 control enabled *tmp178 false
-    * set *tmp170 false
   332 jump *label70 always
   333 label *label69
   334 op greaterThan *tmp180 :backgroundProcess:coreSilicon .siliconReserve
 
   361 label *label79
   362 set *tmp183 *tmp192
   363 label *label77
-    * set *tmp170 *tmp183
   364 label *label70
   365 jump *label65 always
   366 label *label64
 
   383 op land *tmp209 *tmp206 *tmp208
   384 jump *label84 equal *tmp209 false
   385 set :backgroundProcess:c @titanium
-    * set *tmp210 :backgroundProcess:c
   386 jump *label85 always
   387 label *label84
   388 sensor *tmp211 .core @silicon
 
   397 set :backgroundProcess:c @coal
   398 set *tmp215 :backgroundProcess:c
   399 label *label87
-    * set *tmp210 *tmp215
   400 label *label85
   401 label *label83
   402 set *tmp216 A©NHJX-unloader14
 
   413 call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)
   414 label *label90
   415 set .lastMultiProgress 0
-    * set *tmp222 0
   416 jump *label89 always
   417 label *label88
   418 set .lastMultiProgress :backgroundProcess:multiProgress
-    * set *tmp222 :backgroundProcess:multiProgress
   419 label *label89
   420 jump *label81 always
   421 label *label80

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-4 instructions):
 
   340 set *tmp186 A{HDJb-inverted-sorter24
   341 set *tmp188 .canConsume
   342 control enabled *tmp186 *tmp188
-    * set *tmp183 *tmp188
   343 jump *label77 always
   344 label *label76
   345 op greaterThan *tmp189 :backgroundProcess:coreGraphite .graphiteReserve
 
   358 control enabled *tmp198 false
   359 set *tmp192 false
   360 label *label79
-    * set *tmp183 *tmp192
   361 label *label77
   362 label *label70
   363 jump *label65 always
 
   389 op land *tmp214 *tmp211 *tmp213
   390 jump *label86 equal *tmp214 false
   391 set :backgroundProcess:c @silicon
-    * set *tmp215 :backgroundProcess:c
   392 jump *label87 always
   393 label *label86
   394 set :backgroundProcess:c @coal
-    * set *tmp215 :backgroundProcess:c
   395 label *label87
   396 label *label85
   397 label *label83

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   351 set *tmp195 A{HDJb-inverted-sorter24
   352 set *tmp197 .canConsume
   353 control enabled *tmp195 *tmp197
-    * set *tmp192 *tmp197
   354 jump *label79 always
   355 label *label78
   356 set *tmp198 A{HDJb-inverted-sorter24
   357 control enabled *tmp198 false
-    * set *tmp192 false
   358 label *label79
   359 label *label77
   360 label *label70

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-42 instructions):
 
    26 op equal *tmp31 .finished false
    27 jump *label13 equal *tmp31 false
    28 set :backgroundProcess:ticks @tick
-    * sensor *tmp32 .core @silicon
-    * set :backgroundProcess:coreSilicon *tmp32
-    * sensor *tmp33 .core @graphite
-    * set :backgroundProcess:coreGraphite *tmp33
+   29 sensor :backgroundProcess:coreSilicon .core @silicon
+   30 sensor :backgroundProcess:coreGraphite .core @graphite
    31 set *tmp34 ALQIJ^-silicon-smelter20
    32 set *tmp36 ALMQJN-silicon-smelter4
    33 op lessThan *tmp38 :backgroundProcess:coreSilicon .smelterTarget
 
    45 sensor *tmp49 .core @metaglass
    46 op lessThan *tmp50 *tmp49 .kilnTarget
    47 control enabled *tmp47 *tmp50
-    * sensor *tmp51 AJTJK-battery1 @totalPower
-    * set :backgroundProcess:power *tmp51
+   48 sensor :backgroundProcess:power AJTJK-battery1 @totalPower
    49 jump *label14 equal AAKJ\-steam-generator18 false
    50 set *tmp53 AJRJM-combustion-generator3
    51 op lessThan *tmp55 :backgroundProcess:power 9
 
    71 set :handleAirFactory:lead 0
    72 op equal *tmp66 .canConsume false
    73 jump *label19 equal *tmp66 false
-    * set *tmp68 A©FJJU-unloader11
-    * control config *tmp68 @coal
+   74 control config A©FJJU-unloader11 @coal
    75 jump *label18 always
    76 jump *label20 always
    77 label *label19
 
    80 op mul *tmp71 5 AAKJ\-steam-generator18
    81 op lessThan *tmp72 *tmp70 *tmp71
    82 jump *label21 equal *tmp72 false
-    * set *tmp74 A©FJJU-unloader11
-    * control config *tmp74 @coal
+   83 control config A©FJJU-unloader11 @coal
    84 jump *label18 always
    85 jump *label22 always
    86 label *label21
    87 label *label22
    88 op lessThan *tmp76 :handleAirFactory:power 200
    89 jump *label23 equal *tmp76 false
-    * set *tmp78 A¾BFLW-air-factory13
-    * control enabled *tmp78 false
+   90 control enabled A¾BFLW-air-factory13 false
    91 jump *label24 always
    92 label *label23
    93 op greaterThan *tmp80 :handleAirFactory:power 500
    94 jump *label25 equal *tmp80 false
-    * set *tmp82 A¾BFLW-air-factory13
-    * control enabled *tmp82 true
+   95 control enabled A¾BFLW-air-factory13 true
    96 jump *label26 always
    97 label *label25
    98 label *label26
    99 label *label24
-    * set *tmp84 A¾BFLW-air-factory13
-    * control config *tmp84 :handleAirFactory:unit
-    * sensor *tmp86 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory:factoryProgress *tmp86
+  100 control config A¾BFLW-air-factory13 :handleAirFactory:unit
+  101 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   102 op greaterThan *tmp87 .lastProgress :handleAirFactory:factoryProgress
   103 jump *label27 equal *tmp87 false
   104 set :factoryUnitFinished:unit :handleAirFactory:unit
 
   106 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
   107 label *label29
   108 set .lastProgress 0
-    * set *tmp89 A©FJJU-unloader11
-    * control config *tmp89 @coal
+  109 control config A©FJJU-unloader11 @coal
   110 jump *label18 always
   111 jump *label28 always
   112 label *label27
 
   125 sensor *tmp95 A¾BFLW-air-factory13 @lead
   126 op lessThan *tmp96 *tmp95 :handleAirFactory:leadLimit
   127 jump *label34 equal *tmp96 false
-    * set *tmp98 A©FJJU-unloader11
-    * control config *tmp98 @lead
+  128 control config A©FJJU-unloader11 @lead
   129 jump *label18 always
   130 jump *label35 always
   131 label *label34
 
   167 set :handleAirFactory.1:lead 15
   168 op equal *tmp112 .canConsume false
   169 jump *label43 equal *tmp112 false
-    * set *tmp114 A©FJJU-unloader11
-    * control config *tmp114 @coal
+  170 control config A©FJJU-unloader11 @coal
   171 jump *label42 always
   172 jump *label44 always
   173 label *label43
 
   176 op mul *tmp117 5 AAKJ\-steam-generator18
   177 op lessThan *tmp118 *tmp116 *tmp117
   178 jump *label45 equal *tmp118 false
-    * set *tmp120 A©FJJU-unloader11
-    * control config *tmp120 @coal
+  179 control config A©FJJU-unloader11 @coal
   180 jump *label42 always
   181 jump *label46 always
   182 label *label45
   183 label *label46
   184 op lessThan *tmp122 :handleAirFactory.1:power 200
   185 jump *label47 equal *tmp122 false
-    * set *tmp124 A¾BFLW-air-factory13
-    * control enabled *tmp124 false
+  186 control enabled A¾BFLW-air-factory13 false
   187 jump *label48 always
   188 label *label47
   189 op greaterThan *tmp126 :handleAirFactory.1:power 500
   190 jump *label49 equal *tmp126 false
-    * set *tmp128 A¾BFLW-air-factory13
-    * control enabled *tmp128 true
+  191 control enabled A¾BFLW-air-factory13 true
   192 jump *label50 always
   193 label *label49
   194 label *label50
   195 label *label48
-    * set *tmp130 A¾BFLW-air-factory13
-    * control config *tmp130 :handleAirFactory.1:unit
-    * sensor *tmp132 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory.1:factoryProgress *tmp132
+  196 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  197 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   198 op greaterThan *tmp133 .lastProgress :handleAirFactory.1:factoryProgress
   199 jump *label51 equal *tmp133 false
   200 set :factoryUnitFinished:unit :handleAirFactory.1:unit
 
   202 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
   203 label *label53
   204 set .lastProgress 0
-    * set *tmp135 A©FJJU-unloader11
-    * control config *tmp135 @coal
+  205 control config A©FJJU-unloader11 @coal
   206 jump *label42 always
   207 jump *label52 always
   208 label *label51
 
   221 sensor *tmp141 A¾BFLW-air-factory13 @lead
   222 op lessThan *tmp142 *tmp141 :handleAirFactory.1:leadLimit
   223 jump *label58 equal *tmp142 false
-    * set *tmp144 A©FJJU-unloader11
-    * control config *tmp144 @lead
+  224 control config A©FJJU-unloader11 @lead
   225 jump *label42 always
   226 jump *label59 always
   227 label *label58
 
   253 label *label40
   254 set .airFactoryTarget null
   255 write .airFactoryTarget .display ".nextFactory"
-    * set *tmp154 A¾BFLW-air-factory13
-    * control enabled *tmp154 false
-    * set *tmp156 A¾BFLW-air-factory13
-    * control config *tmp156 @flare
-    * set *tmp158 A©FJJU-unloader11
-    * control config *tmp158 @coal
+  256 control enabled A¾BFLW-air-factory13 false
+  257 control config A¾BFLW-air-factory13 @flare
+  258 control config A©FJJU-unloader11 @coal
   259 label *label41
   260 label *label17
   261 op lessThan *tmp160 .polys .polyTarget
   262 jump *label64 equal *tmp160 false
   263 write @poly .display ".nextAddReco"
-    * sensor *tmp162 AÀF@Lc-additive-reconstructor25 @progress
-    * set :backgroundProcess:recoProgress *tmp162
+  264 sensor :backgroundProcess:recoProgress AÀF@Lc-additive-reconstructor25 @progress
   265 op greaterThan *tmp163 .lastRecoProgress :backgroundProcess:recoProgress
   266 jump *label66 equal *tmp163 false
   267 set :factoryUnitFinished:unit @poly
 
   274 label *label66
   275 set .lastRecoProgress :backgroundProcess:recoProgress
   276 label *label67
-    * sensor *tmp165 AÀF@Lc-additive-reconstructor25 @silicon
-    * set :backgroundProcess:s *tmp165
-    * sensor *tmp166 AÀF@Lc-additive-reconstructor25 @graphite
-    * set :backgroundProcess:g *tmp166
+  277 sensor :backgroundProcess:s AÀF@Lc-additive-reconstructor25 @silicon
+  278 sensor :backgroundProcess:g AÀF@Lc-additive-reconstructor25 @graphite
   279 op greaterThanEq *tmp167 :backgroundProcess:s 40
   280 op greaterThanEq *tmp168 :backgroundProcess:g 40
   281 op land *tmp169 *tmp167 *tmp168
   282 jump *label69 equal *tmp169 false
   283 op equal *tmp171 .recoEntered false
   284 jump *label71 equal *tmp171 false
-    * sensor *tmp173 AÀF@Lc-additive-reconstructor25 @x
-    * set :backgroundProcess:x *tmp173
-    * sensor *tmp174 AÀF@Lc-additive-reconstructor25 @y
-    * set :backgroundProcess:y *tmp174
+  285 sensor :backgroundProcess:x AÀF@Lc-additive-reconstructor25 @x
+  286 sensor :backgroundProcess:y AÀF@Lc-additive-reconstructor25 @y
   287 ubind @mono
   288 label *label73
   289 ucontrol move :backgroundProcess:x :backgroundProcess:y
 
   300 jump *label72 always
   301 label *label71
   302 label *label72
-    * set *tmp178 A{HDJb-inverted-sorter24
-    * control enabled *tmp178 false
+  303 control enabled A{HDJb-inverted-sorter24 false
   304 jump *label70 always
   305 label *label69
   306 op greaterThan *tmp180 :backgroundProcess:coreSilicon .siliconReserve
   307 op mul *tmp181 40 *tmp180
   308 op lessThan *tmp182 :backgroundProcess:s *tmp181
   309 jump *label76 equal *tmp182 false
-    * set *tmp184 A©HFJa-unloader23
-    * control config *tmp184 @silicon
+  310 control config A©HFJa-unloader23 @silicon
   311 set *tmp186 A{HDJb-inverted-sorter24
-    * set *tmp188 .canConsume
-    * control enabled *tmp186 *tmp188
+  312 control enabled *tmp186 .canConsume
   313 jump *label77 always
   314 label *label76
   315 op greaterThan *tmp189 :backgroundProcess:coreGraphite .graphiteReserve
   316 op mul *tmp190 40 *tmp189
   317 op lessThan *tmp191 :backgroundProcess:g *tmp190
   318 jump *label78 equal *tmp191 false
-    * set *tmp193 A©HFJa-unloader23
-    * control config *tmp193 @graphite
-    * set *tmp195 A{HDJb-inverted-sorter24
-    * set *tmp197 .canConsume
-    * control enabled *tmp195 *tmp197
+  319 control config A©HFJa-unloader23 @graphite
+  320 control enabled A{HDJb-inverted-sorter24 .canConsume
   321 jump *label79 always
   322 label *label78
-    * set *tmp198 A{HDJb-inverted-sorter24
-    * control enabled *tmp198 false
+  323 control enabled A{HDJb-inverted-sorter24 false
   324 label *label79
   325 label *label77
   326 label *label70
   327 jump *label65 always
   328 label *label64
   329 write null .display ".nextAddReco"
-    * set *tmp200 A{HDJb-inverted-sorter24
-    * control enabled *tmp200 false
+  330 control enabled A{HDJb-inverted-sorter24 false
   331 label *label65
   332 jump *label80 equal AÁNBJd-multiplicative-reconstructor26 false
   333 write @mega .display ".nextMultiReco"
 
   358 label *label87
   359 label *label85
   360 label *label83
-    * set *tmp216 A©NHJX-unloader14
-    * control config *tmp216 :backgroundProcess:c
-    * set *tmp218 A©HFJa-unloader23
-    * control config *tmp218 :backgroundProcess:c
-    * sensor *tmp220 AÁNBJd-multiplicative-reconstructor26 @progress
-    * set :backgroundProcess:multiProgress *tmp220
+  361 control config A©NHJX-unloader14 :backgroundProcess:c
+  362 control config A©HFJa-unloader23 :backgroundProcess:c
+  363 sensor :backgroundProcess:multiProgress AÁNBJd-multiplicative-reconstructor26 @progress
   364 op greaterThan *tmp221 .lastMultiProgress :backgroundProcess:multiProgress
   365 jump *label88 equal *tmp221 false
   366 write null .display ".nextMultiReco"
 
   376 jump *label81 always
   377 label *label80
   378 label *label81
-    * op sub *tmp223 @tick :backgroundProcess:ticks
-    * set .loopTicks *tmp223
+  379 op sub .loopTicks @tick :backgroundProcess:ticks
   380 label *label12
   381 jump *label11 always
   382 label *label13
 
   427 end
   428 label *label5
   429 sensor *tmp230 :logUnit:unit @id
-    * op add *tmp231 @blockCount *tmp230
-    * set :log:encodedId *tmp231
+  430 op add :log:encodedId @blockCount *tmp230
   431 setaddr :log*retaddr *label103 (h:*label103)
   432 call *label4 *invalid :log*retval (m:*label103) (h:*label103)
   433 label *label103
 
   447 return :log*retaddr
   448 end
   449 label *label0
-    * set *tmp264 A©FJJU-unloader11
-    * control config *tmp264 @coal
-    * set *tmp266 A{HDJb-inverted-sorter24
-    * control enabled *tmp266 false
+  450 control config A©FJJU-unloader11 @coal
+  451 control enabled A{HDJb-inverted-sorter24 false
   452 set .canConsume false
   453 label *label106
   454 set :buildStart*finished true

Modifications by Initial phase, Temp Variables Elimination, iteration 2 (-1 instructions):
 
   308 op lessThan *tmp182 :backgroundProcess:s *tmp181
   309 jump *label76 equal *tmp182 false
   310 control config A©HFJa-unloader23 @silicon
-    * set *tmp186 A{HDJb-inverted-sorter24
-    * control enabled *tmp186 .canConsume
+  311 control enabled A{HDJb-inverted-sorter24 .canConsume
   312 jump *label77 always
   313 label *label76
   314 op greaterThan *tmp189 :backgroundProcess:coreGraphite .graphiteReserve

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-4 instructions):
 
   388 setaddr :logUnit*retaddr *label92 (h:*label92)
   389 call *label5 *invalid :logUnit*retval (m:*label92) (h:*label92)
   390 label *label92
-    * jump *label95 equal :factoryUnitFinished:unit @flare
-    * jump *label94 always
+  391 jump *label94 notEqual :factoryUnitFinished:unit @flare
   392 label *label95
   393 op add *tmp226 .flares 1
   394 set .flares *tmp226
   395 write *tmp226 .display ".flares"
   396 jump *label93 always
   397 label *label94
-    * jump *label97 equal :factoryUnitFinished:unit @mono
-    * jump *label96 always
+  398 jump *label96 notEqual :factoryUnitFinished:unit @mono
   399 label *label97
   400 op add *tmp227 .monos 1
   401 set .monos *tmp227
   402 write *tmp227 .display ".monos"
   403 jump *label93 always
   404 label *label96
-    * jump *label99 equal :factoryUnitFinished:unit @poly
-    * jump *label98 always
+  405 jump *label98 notEqual :factoryUnitFinished:unit @poly
   406 label *label99
   407 op add *tmp228 .polys 1
   408 set .polys *tmp228
   409 write *tmp228 .display ".polys"
   410 jump *label93 always
   411 label *label98
-    * jump *label101 equal :factoryUnitFinished:unit @mega
-    * jump *label100 always
+  412 jump *label100 notEqual :factoryUnitFinished:unit @mega
   413 label *label101
   414 op add *tmp229 .megas 1
   415 set .megas *tmp229

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-27 instructions):
 
    23 set *signature "eb9ab5a008f372ac:v1"
    24 label *label9
    25 label *label11
-    * op equal *tmp31 .finished false
-    * jump *label13 equal *tmp31 false
+   26 jump *label13 notEqual .finished false
    27 set :backgroundProcess:ticks @tick
    28 sensor :backgroundProcess:coreSilicon .core @silicon
    29 sensor :backgroundProcess:coreGraphite .core @graphite
 
    68 set :handleAirFactory:power :backgroundProcess:power
    69 set :handleAirFactory:silicon 15
    70 set :handleAirFactory:lead 0
-    * op equal *tmp66 .canConsume false
-    * jump *label19 equal *tmp66 false
+   71 jump *label19 notEqual .canConsume false
    72 control config A©FJJU-unloader11 @coal
    73 jump *label18 always
    74 jump *label20 always
 
    76 label *label20
    77 sensor *tmp70 AAKJ\-steam-generator18 @coal
    78 op mul *tmp71 5 AAKJ\-steam-generator18
-    * op lessThan *tmp72 *tmp70 *tmp71
-    * jump *label21 equal *tmp72 false
+   79 jump *label21 greaterThanEq *tmp70 *tmp71
    80 control config A©FJJU-unloader11 @coal
    81 jump *label18 always
    82 jump *label22 always
    83 label *label21
    84 label *label22
-    * op lessThan *tmp76 :handleAirFactory:power 200
-    * jump *label23 equal *tmp76 false
+   85 jump *label23 greaterThanEq :handleAirFactory:power 200
    86 control enabled A¾BFLW-air-factory13 false
    87 jump *label24 always
    88 label *label23
-    * op greaterThan *tmp80 :handleAirFactory:power 500
-    * jump *label25 equal *tmp80 false
+   89 jump *label25 lessThanEq :handleAirFactory:power 500
    90 control enabled A¾BFLW-air-factory13 true
    91 jump *label26 always
    92 label *label25
 
    94 label *label24
    95 control config A¾BFLW-air-factory13 :handleAirFactory:unit
    96 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp87 .lastProgress :handleAirFactory:factoryProgress
-    * jump *label27 equal *tmp87 false
+   97 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    98 set :factoryUnitFinished:unit :handleAirFactory:unit
    99 setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
   100 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
 
   108 set .lastProgress :handleAirFactory:factoryProgress
   109 jump *label30 equal :handleAirFactory:lead false
   110 sensor *tmp92 .core @lead
-    * op greaterThan *tmp93 *tmp92 0
-    * jump *label32 equal *tmp93 false
+  111 jump *label32 lessThanEq *tmp92 0
   112 set *tmp94 :handleAirFactory:lead
   113 jump *label33 always
   114 label *label32
 
   116 label *label33
   117 set :handleAirFactory:leadLimit *tmp94
   118 sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp96 *tmp95 :handleAirFactory:leadLimit
-    * jump *label34 equal *tmp96 false
+  119 jump *label34 greaterThanEq *tmp95 :handleAirFactory:leadLimit
   120 control config A©FJJU-unloader11 @lead
   121 jump *label18 always
   122 jump *label35 always
 
   126 label *label30
   127 label *label31
   128 sensor *tmp100 .core @silicon
-    * op greaterThan *tmp101 *tmp100 0
-    * jump *label36 equal *tmp101 false
+  129 jump *label36 lessThanEq *tmp100 0
   130 set *tmp102 :handleAirFactory:silicon
   131 jump *label37 always
   132 label *label36
 
   135 set :handleAirFactory:siliconLimit *tmp102
   136 set *tmp103 A©FJJU-unloader11
   137 sensor *tmp105 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp106 *tmp105 :handleAirFactory:siliconLimit
-    * jump *label38 equal *tmp106 false
+  138 jump *label38 greaterThanEq *tmp105 :handleAirFactory:siliconLimit
   139 set *tmp107 @silicon
   140 jump *label39 always
   141 label *label38
 
   155 set :handleAirFactory.1:power :backgroundProcess:power
   156 set :handleAirFactory.1:silicon 30
   157 set :handleAirFactory.1:lead 15
-    * op equal *tmp112 .canConsume false
-    * jump *label43 equal *tmp112 false
+  158 jump *label43 notEqual .canConsume false
   159 control config A©FJJU-unloader11 @coal
   160 jump *label42 always
   161 jump *label44 always
 
   163 label *label44
   164 sensor *tmp116 AAKJ\-steam-generator18 @coal
   165 op mul *tmp117 5 AAKJ\-steam-generator18
-    * op lessThan *tmp118 *tmp116 *tmp117
-    * jump *label45 equal *tmp118 false
+  166 jump *label45 greaterThanEq *tmp116 *tmp117
   167 control config A©FJJU-unloader11 @coal
   168 jump *label42 always
   169 jump *label46 always
   170 label *label45
   171 label *label46
-    * op lessThan *tmp122 :handleAirFactory.1:power 200
-    * jump *label47 equal *tmp122 false
+  172 jump *label47 greaterThanEq :handleAirFactory.1:power 200
   173 control enabled A¾BFLW-air-factory13 false
   174 jump *label48 always
   175 label *label47
-    * op greaterThan *tmp126 :handleAirFactory.1:power 500
-    * jump *label49 equal *tmp126 false
+  176 jump *label49 lessThanEq :handleAirFactory.1:power 500
   177 control enabled A¾BFLW-air-factory13 true
   178 jump *label50 always
   179 label *label49
 
   181 label *label48
   182 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
   183 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp133 .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label51 equal *tmp133 false
+  184 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   185 set :factoryUnitFinished:unit :handleAirFactory.1:unit
   186 setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
   187 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
 
   195 set .lastProgress :handleAirFactory.1:factoryProgress
   196 jump *label54 equal :handleAirFactory.1:lead false
   197 sensor *tmp138 .core @lead
-    * op greaterThan *tmp139 *tmp138 0
-    * jump *label56 equal *tmp139 false
+  198 jump *label56 lessThanEq *tmp138 0
   199 set *tmp140 :handleAirFactory.1:lead
   200 jump *label57 always
   201 label *label56
 
   203 label *label57
   204 set :handleAirFactory.1:leadLimit *tmp140
   205 sensor *tmp141 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp142 *tmp141 :handleAirFactory.1:leadLimit
-    * jump *label58 equal *tmp142 false
+  206 jump *label58 greaterThanEq *tmp141 :handleAirFactory.1:leadLimit
   207 control config A©FJJU-unloader11 @lead
   208 jump *label42 always
   209 jump *label59 always
 
   213 label *label54
   214 label *label55
   215 sensor *tmp146 .core @silicon
-    * op greaterThan *tmp147 *tmp146 0
-    * jump *label60 equal *tmp147 false
+  216 jump *label60 lessThanEq *tmp146 0
   217 set *tmp148 :handleAirFactory.1:silicon
   218 jump *label61 always
   219 label *label60
 
   222 set :handleAirFactory.1:siliconLimit *tmp148
   223 set *tmp149 A©FJJU-unloader11
   224 sensor *tmp151 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp152 *tmp151 :handleAirFactory.1:siliconLimit
-    * jump *label62 equal *tmp152 false
+  225 jump *label62 greaterThanEq *tmp151 :handleAirFactory.1:siliconLimit
   226 set *tmp153 @silicon
   227 jump *label63 always
   228 label *label62
 
   239 control config A©FJJU-unloader11 @coal
   240 label *label41
   241 label *label17
-    * op lessThan *tmp160 .polys .polyTarget
-    * jump *label64 equal *tmp160 false
+  242 jump *label64 greaterThanEq .polys .polyTarget
   243 write @poly .display ".nextAddReco"
   244 sensor :backgroundProcess:recoProgress AÀF@Lc-additive-reconstructor25 @progress
-    * op greaterThan *tmp163 .lastRecoProgress :backgroundProcess:recoProgress
-    * jump *label66 equal *tmp163 false
+  245 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   246 set :factoryUnitFinished:unit @poly
   247 setaddr :factoryUnitFinished*retaddr *label68 (h:*label68)
   248 call *label6 *invalid :factoryUnitFinished*retval (m:*label68) (h:*label68)
 
   259 op greaterThanEq *tmp168 :backgroundProcess:g 40
   260 op land *tmp169 *tmp167 *tmp168
   261 jump *label69 equal *tmp169 false
-    * op equal *tmp171 .recoEntered false
-    * jump *label71 equal *tmp171 false
+  262 jump *label71 notEqual .recoEntered false
   263 sensor :backgroundProcess:x AÀF@Lc-additive-reconstructor25 @x
   264 sensor :backgroundProcess:y AÀF@Lc-additive-reconstructor25 @y
   265 ubind @mono
 
   268 ucontrol payEnter
   269 label *label74
   270 sensor *tmp175 @unit @dead
-    * op equal *tmp176 *tmp175 false
-    * jump *label73 notEqual *tmp176 false
+  271 jump *label73 equal *tmp175 false
   272 label *label75
   273 op sub *tmp177 .monos 1
   274 set .monos *tmp177
 
   282 label *label69
   283 op greaterThan *tmp180 :backgroundProcess:coreSilicon .siliconReserve
   284 op mul *tmp181 40 *tmp180
-    * op lessThan *tmp182 :backgroundProcess:s *tmp181
-    * jump *label76 equal *tmp182 false
+  285 jump *label76 greaterThanEq :backgroundProcess:s *tmp181
   286 control config A©HFJa-unloader23 @silicon
   287 control enabled A{HDJb-inverted-sorter24 .canConsume
   288 jump *label77 always
   289 label *label76
   290 op greaterThan *tmp189 :backgroundProcess:coreGraphite .graphiteReserve
   291 op mul *tmp190 40 *tmp189
-    * op lessThan *tmp191 :backgroundProcess:g *tmp190
-    * jump *label78 equal *tmp191 false
+  292 jump *label78 greaterThanEq :backgroundProcess:g *tmp190
   293 control config A©HFJa-unloader23 @graphite
   294 control enabled A{HDJb-inverted-sorter24 .canConsume
   295 jump *label79 always
 
   307 write @mega .display ".nextMultiReco"
   308 set :backgroundProcess:c null
   309 sensor *tmp203 AÁNBJd-multiplicative-reconstructor26 @metaglass
-    * op lessThan *tmp204 *tmp203 40
-    * jump *label82 equal *tmp204 false
+  310 jump *label82 greaterThanEq *tmp203 40
   311 set :backgroundProcess:c @metaglass
   312 jump *label83 always
   313 label *label82
 
   334 control config A©NHJX-unloader14 :backgroundProcess:c
   335 control config A©HFJa-unloader23 :backgroundProcess:c
   336 sensor :backgroundProcess:multiProgress AÁNBJd-multiplicative-reconstructor26 @progress
-    * op greaterThan *tmp221 .lastMultiProgress :backgroundProcess:multiProgress
-    * jump *label88 equal *tmp221 false
+  337 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   338 write null .display ".nextMultiReco"
   339 set :factoryUnitFinished:unit @mega
   340 setaddr :factoryUnitFinished*retaddr *label90 (h:*label90)

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-15 instructions):
 
    71 jump *label19 notEqual .canConsume false
    72 control config A©FJJU-unloader11 @coal
    73 jump *label18 always
-    * jump *label20 always
    74 label *label19
    75 label *label20
    76 sensor *tmp70 AAKJ\-steam-generator18 @coal
 
    78 jump *label21 greaterThanEq *tmp70 *tmp71
    79 control config A©FJJU-unloader11 @coal
    80 jump *label18 always
-    * jump *label22 always
    81 label *label21
    82 label *label22
    83 jump *label23 greaterThanEq :handleAirFactory:power 200
 
    86 label *label23
    87 jump *label25 lessThanEq :handleAirFactory:power 500
    88 control enabled A¾BFLW-air-factory13 true
-    * jump *label26 always
    89 label *label25
    90 label *label26
    91 label *label24
 
    99 set .lastProgress 0
   100 control config A©FJJU-unloader11 @coal
   101 jump *label18 always
-    * jump *label28 always
   102 label *label27
   103 label *label28
   104 set .lastProgress :handleAirFactory:factoryProgress
 
   115 jump *label34 greaterThanEq *tmp95 :handleAirFactory:leadLimit
   116 control config A©FJJU-unloader11 @lead
   117 jump *label18 always
-    * jump *label35 always
   118 label *label34
   119 label *label35
-    * jump *label31 always
   120 label *label30
   121 label *label31
   122 sensor *tmp100 .core @silicon
 
   152 jump *label43 notEqual .canConsume false
   153 control config A©FJJU-unloader11 @coal
   154 jump *label42 always
-    * jump *label44 always
   155 label *label43
   156 label *label44
   157 sensor *tmp116 AAKJ\-steam-generator18 @coal
 
   159 jump *label45 greaterThanEq *tmp116 *tmp117
   160 control config A©FJJU-unloader11 @coal
   161 jump *label42 always
-    * jump *label46 always
   162 label *label45
   163 label *label46
   164 jump *label47 greaterThanEq :handleAirFactory.1:power 200
 
   167 label *label47
   168 jump *label49 lessThanEq :handleAirFactory.1:power 500
   169 control enabled A¾BFLW-air-factory13 true
-    * jump *label50 always
   170 label *label49
   171 label *label50
   172 label *label48
 
   180 set .lastProgress 0
   181 control config A©FJJU-unloader11 @coal
   182 jump *label42 always
-    * jump *label52 always
   183 label *label51
   184 label *label52
   185 set .lastProgress :handleAirFactory.1:factoryProgress
 
   196 jump *label58 greaterThanEq *tmp141 :handleAirFactory.1:leadLimit
   197 control config A©FJJU-unloader11 @lead
   198 jump *label42 always
-    * jump *label59 always
   199 label *label58
   200 label *label59
-    * jump *label55 always
   201 label *label54
   202 label *label55
   203 sensor *tmp146 .core @silicon
 
   262 set .monos *tmp177
   263 write *tmp177 .display ".monos"
   264 set .recoEntered true
-    * jump *label72 always
   265 label *label71
   266 label *label72
   267 control enabled A{HDJb-inverted-sorter24 false
 
   332 label *label88
   333 set .lastMultiProgress :backgroundProcess:multiProgress
   334 label *label89
-    * jump *label81 always
   335 label *label80
   336 label *label81
   337 op sub .loopTicks @tick :backgroundProcess:ticks
 
   373 op add *tmp229 .megas 1
   374 set .megas *tmp229
   375 write *tmp229 .display ".megas"
-    * jump *label93 always
   376 label *label100
   377 label *label93
   378 label *label91

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    63 op land *tmp64 *tmp62 *tmp63
    64 jump *label16 equal *tmp64 false
    65 set .airFactoryTarget @flare
-    * write .airFactoryTarget .display ".nextFactory"
+   66 write @flare .display ".nextFactory"
    67 set :handleAirFactory:unit @flare
    68 set :handleAirFactory:power :backgroundProcess:power
    69 set :handleAirFactory:silicon 15
 
    80 jump *label18 always
    81 label *label21
    82 label *label22
-    * jump *label23 greaterThanEq :handleAirFactory:power 200
+   83 jump *label23 greaterThanEq :backgroundProcess:power 200
    84 control enabled A¾BFLW-air-factory13 false
    85 jump *label24 always
    86 label *label23
-    * jump *label25 lessThanEq :handleAirFactory:power 500
+   87 jump *label25 lessThanEq :backgroundProcess:power 500
    88 control enabled A¾BFLW-air-factory13 true
    89 label *label25
    90 label *label26
    91 label *label24
-    * control config A¾BFLW-air-factory13 :handleAirFactory:unit
+   92 control config A¾BFLW-air-factory13 @flare
    93 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    94 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory:unit
+   95 set :factoryUnitFinished:unit @flare
    96 setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
    97 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
    98 label *label29
 
   102 label *label27
   103 label *label28
   104 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 equal :handleAirFactory:lead false
+  105 jump *label30 equal 0 false
   106 sensor *tmp92 .core @lead
   107 jump *label32 lessThanEq *tmp92 0
-    * set *tmp94 :handleAirFactory:lead
+  108 set *tmp94 0
   109 jump *label33 always
   110 label *label32
   111 set *tmp94 0
   112 label *label33
-    * set :handleAirFactory:leadLimit *tmp94
+  113 set :handleAirFactory:leadLimit :handleAirFactory:lead
   114 sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp95 :handleAirFactory:leadLimit
+  115 jump *label34 greaterThanEq *tmp95 *tmp94
   116 control config A©FJJU-unloader11 @lead
   117 jump *label18 always
   118 label *label34
 
   121 label *label31
   122 sensor *tmp100 .core @silicon
   123 jump *label36 lessThanEq *tmp100 0
-    * set *tmp102 :handleAirFactory:silicon
+  124 set *tmp102 15
   125 jump *label37 always
   126 label *label36
   127 set *tmp102 0
 
   129 set :handleAirFactory:siliconLimit *tmp102
   130 set *tmp103 A©FJJU-unloader11
   131 sensor *tmp105 A¾BFLW-air-factory13 @silicon
-    * jump *label38 greaterThanEq *tmp105 :handleAirFactory:siliconLimit
+  132 jump *label38 greaterThanEq *tmp105 *tmp102
   133 set *tmp107 @silicon
   134 jump *label39 always
   135 label *label38
 
   144 op land *tmp110 *tmp108 *tmp109
   145 jump *label40 equal *tmp110 false
   146 set .airFactoryTarget @mono
-    * write .airFactoryTarget .display ".nextFactory"
+  147 write @mono .display ".nextFactory"
   148 set :handleAirFactory.1:unit @mono
   149 set :handleAirFactory.1:power :backgroundProcess:power
   150 set :handleAirFactory.1:silicon 30
 
   161 jump *label42 always
   162 label *label45
   163 label *label46
-    * jump *label47 greaterThanEq :handleAirFactory.1:power 200
+  164 jump *label47 greaterThanEq :backgroundProcess:power 200
   165 control enabled A¾BFLW-air-factory13 false
   166 jump *label48 always
   167 label *label47
-    * jump *label49 lessThanEq :handleAirFactory.1:power 500
+  168 jump *label49 lessThanEq :backgroundProcess:power 500
   169 control enabled A¾BFLW-air-factory13 true
   170 label *label49
   171 label *label50
   172 label *label48
-    * control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  173 control config A¾BFLW-air-factory13 @mono
   174 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   175 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory.1:unit
+  176 set :factoryUnitFinished:unit @mono
   177 setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
   178 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
   179 label *label53
 
   183 label *label51
   184 label *label52
   185 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label54 equal :handleAirFactory.1:lead false
+  186 jump *label54 equal 15 false
   187 sensor *tmp138 .core @lead
   188 jump *label56 lessThanEq *tmp138 0
-    * set *tmp140 :handleAirFactory.1:lead
+  189 set *tmp140 15
   190 jump *label57 always
   191 label *label56
   192 set *tmp140 0
   193 label *label57
   194 set :handleAirFactory.1:leadLimit *tmp140
   195 sensor *tmp141 A¾BFLW-air-factory13 @lead
-    * jump *label58 greaterThanEq *tmp141 :handleAirFactory.1:leadLimit
+  196 jump *label58 greaterThanEq *tmp141 *tmp140
   197 control config A©FJJU-unloader11 @lead
   198 jump *label42 always
   199 label *label58
 
   202 label *label55
   203 sensor *tmp146 .core @silicon
   204 jump *label60 lessThanEq *tmp146 0
-    * set *tmp148 :handleAirFactory.1:silicon
+  205 set *tmp148 30
   206 jump *label61 always
   207 label *label60
   208 set *tmp148 0
 
   210 set :handleAirFactory.1:siliconLimit *tmp148
   211 set *tmp149 A©FJJU-unloader11
   212 sensor *tmp151 A¾BFLW-air-factory13 @silicon
-    * jump *label62 greaterThanEq *tmp151 :handleAirFactory.1:siliconLimit
+  213 jump *label62 greaterThanEq *tmp151 *tmp148
   214 set *tmp153 @silicon
   215 jump *label63 always
   216 label *label62
 
   221 jump *label41 always
   222 label *label40
   223 set .airFactoryTarget null
-    * write .airFactoryTarget .display ".nextFactory"
+  224 write null .display ".nextFactory"
   225 control enabled A¾BFLW-air-factory13 false
   226 control config A¾BFLW-air-factory13 @flare
   227 control config A©FJJU-unloader11 @coal
 
   292 label *label65
   293 jump *label80 equal AÁNBJd-multiplicative-reconstructor26 false
   294 write @mega .display ".nextMultiReco"
-    * set :backgroundProcess:c null
   295 sensor *tmp203 AÁNBJd-multiplicative-reconstructor26 @metaglass
   296 jump *label82 greaterThanEq *tmp203 40
   297 set :backgroundProcess:c @metaglass
 
   394 read *tmp235 .timer "time"
   395 op mul *tmp236 *tmp235 1000
   396 op add *tmp237 :log:encodedId *tmp236
-    * write *tmp237 .bank *tmp233
+  397 write *tmp237 .bank *tmp232
   398 label *label104
   399 return :log*retaddr
   400 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-12 instructions):
 
    64 jump *label16 equal *tmp64 false
    65 set .airFactoryTarget @flare
    66 write @flare .display ".nextFactory"
-    * set :handleAirFactory:unit @flare
-    * set :handleAirFactory:power :backgroundProcess:power
-    * set :handleAirFactory:silicon 15
    67 set :handleAirFactory:lead 0
    68 jump *label19 notEqual .canConsume false
    69 control config A©FJJU-unloader11 @coal
 
   105 set *tmp94 0
   106 jump *label33 always
   107 label *label32
-    * set *tmp94 0
   108 label *label33
-    * set :handleAirFactory:leadLimit :handleAirFactory:lead
+  109 set :handleAirFactory:leadLimit 0
   110 sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp95 *tmp94
+  111 jump *label34 greaterThanEq *tmp95 0
   112 control config A©FJJU-unloader11 @lead
   113 jump *label18 always
   114 label *label34
 
   122 label *label36
   123 set *tmp102 0
   124 label *label37
-    * set :handleAirFactory:siliconLimit *tmp102
   125 set *tmp103 A©FJJU-unloader11
   126 sensor *tmp105 A¾BFLW-air-factory13 @silicon
   127 jump *label38 greaterThanEq *tmp105 *tmp102
 
   140 jump *label40 equal *tmp110 false
   141 set .airFactoryTarget @mono
   142 write @mono .display ".nextFactory"
-    * set :handleAirFactory.1:unit @mono
-    * set :handleAirFactory.1:power :backgroundProcess:power
-    * set :handleAirFactory.1:silicon 30
-    * set :handleAirFactory.1:lead 15
   143 jump *label43 notEqual .canConsume false
   144 control config A©FJJU-unloader11 @coal
   145 jump *label42 always
 
   182 label *label56
   183 set *tmp140 0
   184 label *label57
-    * set :handleAirFactory.1:leadLimit *tmp140
   185 sensor *tmp141 A¾BFLW-air-factory13 @lead
   186 jump *label58 greaterThanEq *tmp141 *tmp140
   187 control config A©FJJU-unloader11 @lead
 
   197 label *label60
   198 set *tmp148 0
   199 label *label61
-    * set :handleAirFactory.1:siliconLimit *tmp148
   200 set *tmp149 A©FJJU-unloader11
   201 sensor *tmp151 A¾BFLW-air-factory13 @silicon
   202 jump *label62 greaterThanEq *tmp151 *tmp148
 
   379 read *tmp30 .bank 511
   380 op sub *tmp232 *tmp30 1
   381 write *tmp232 .bank 511
-    * set *tmp233 *tmp232
   382 read *tmp235 .timer "time"
   383 op mul *tmp236 *tmp235 1000
   384 op add *tmp237 :log:encodedId *tmp236

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
 
    64 jump *label16 equal *tmp64 false
    65 set .airFactoryTarget @flare
    66 write @flare .display ".nextFactory"
-    * set :handleAirFactory:lead 0
    67 jump *label19 notEqual .canConsume false
    68 control config A©FJJU-unloader11 @coal
    69 jump *label18 always
 
   101 jump *label30 equal 0 false
   102 sensor *tmp92 .core @lead
   103 jump *label32 lessThanEq *tmp92 0
-    * set *tmp94 0
   104 jump *label33 always
   105 label *label32
   106 label *label33
-    * set :handleAirFactory:leadLimit 0
   107 sensor *tmp95 A¾BFLW-air-factory13 @lead
   108 jump *label34 greaterThanEq *tmp95 0
   109 control config A©FJJU-unloader11 @lead

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    24 label *label9
    25 label *label11
    26 jump *label13 notEqual .finished false
+   27 label *label108
    28 set :backgroundProcess:ticks @tick
    29 sensor :backgroundProcess:coreSilicon .core @silicon
    30 sensor :backgroundProcess:coreGraphite .core @graphite
 
   322 label *label81
   323 op sub .loopTicks @tick :backgroundProcess:ticks
   324 label *label12
-    * jump *label11 always
+  325 jump *label108 equal .finished false
   326 label *label13
   327 label *label10
   328 wait 1e12

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-20 instructions):
 
   100 label *label28
   101 set .lastProgress :handleAirFactory:factoryProgress
   102 jump *label30 equal 0 false
-    * sensor *tmp92 .core @lead
-    * jump *label32 lessThanEq *tmp92 0
-    * jump *label33 always
-    * label *label32
-    * label *label33
+  103 sensor *tmp92 .core @lead
   104 sensor *tmp95 A¾BFLW-air-factory13 @lead
   105 jump *label34 greaterThanEq *tmp95 0
   106 control config A©FJJU-unloader11 @lead
 
   109 label *label35
   110 label *label30
   111 label *label31
-    * sensor *tmp100 .core @silicon
-    * jump *label36 lessThanEq *tmp100 0
-    * set *tmp102 15
-    * jump *label37 always
-    * label *label36
-    * set *tmp102 0
-    * label *label37
+  112 sensor *tmp100 .core @silicon
+  113 select *tmp102 greaterThan *tmp100 0 15 0
   114 set *tmp103 A©FJJU-unloader11
-    * sensor *tmp105 A¾BFLW-air-factory13 @silicon
-    * jump *label38 greaterThanEq *tmp105 *tmp102
-    * set *tmp107 @silicon
-    * jump *label39 always
-    * label *label38
-    * set *tmp107 @coal
-    * label *label39
+  115 sensor *tmp105 A¾BFLW-air-factory13 @silicon
+  116 select *tmp107 lessThan *tmp105 *tmp102 @silicon @coal
   117 control config *tmp103 *tmp107
   118 label *label18
   119 jump *label17 always
 
   159 label *label52
   160 set .lastProgress :handleAirFactory.1:factoryProgress
   161 jump *label54 equal 15 false
-    * sensor *tmp138 .core @lead
-    * jump *label56 lessThanEq *tmp138 0
-    * set *tmp140 15
-    * jump *label57 always
-    * label *label56
-    * set *tmp140 0
-    * label *label57
+  162 sensor *tmp138 .core @lead
+  163 select *tmp140 greaterThan *tmp138 0 15 0
   164 sensor *tmp141 A¾BFLW-air-factory13 @lead
   165 jump *label58 greaterThanEq *tmp141 *tmp140
   166 control config A©FJJU-unloader11 @lead
 
   169 label *label59
   170 label *label54
   171 label *label55
-    * sensor *tmp146 .core @silicon
-    * jump *label60 lessThanEq *tmp146 0
-    * set *tmp148 30
-    * jump *label61 always
-    * label *label60
-    * set *tmp148 0
-    * label *label61
+  172 sensor *tmp146 .core @silicon
+  173 select *tmp148 greaterThan *tmp146 0 30 0
   174 set *tmp149 A©FJJU-unloader11
-    * sensor *tmp151 A¾BFLW-air-factory13 @silicon
-    * jump *label62 greaterThanEq *tmp151 *tmp148
-    * set *tmp153 @silicon
-    * jump *label63 always
-    * label *label62
-    * set *tmp153 @coal
-    * label *label63
+  175 sensor *tmp151 A¾BFLW-air-factory13 @silicon
+  176 select *tmp153 lessThan *tmp151 *tmp148 @silicon @coal
   177 control config *tmp149 *tmp153
   178 label *label42
   179 jump *label41 always
 
   263 set :backgroundProcess:c @titanium
   264 jump *label85 always
   265 label *label84
-    * sensor *tmp211 .core @silicon
-    * sensor *tmp212 AÁNBJd-multiplicative-reconstructor26 @silicon
-    * op lessThan *tmp213 *tmp212 130
-    * op land *tmp214 *tmp211 *tmp213
-    * jump *label86 equal *tmp214 false
-    * set :backgroundProcess:c @silicon
-    * jump *label87 always
-    * label *label86
-    * set :backgroundProcess:c @coal
-    * label *label87
+  266 sensor *tmp211 .core @silicon
+  267 sensor *tmp212 AÁNBJd-multiplicative-reconstructor26 @silicon
+  268 op lessThan *tmp213 *tmp212 130
+  269 op land *tmp214 *tmp211 *tmp213
+  270 select :backgroundProcess:c notEqual *tmp214 false @silicon @coal
   271 label *label85
   272 label *label83
   273 control config A©NHJX-unloader14 :backgroundProcess:c

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2 (-2 instructions):
 
   250 label *label65
   251 jump *label80 equal AÁNBJd-multiplicative-reconstructor26 false
   252 write @mega .display ".nextMultiReco"
+  253 set :backgroundProcess:c @metaglass
   254 sensor *tmp203 AÁNBJd-multiplicative-reconstructor26 @metaglass
-    * jump *label82 greaterThanEq *tmp203 40
-    * set :backgroundProcess:c @metaglass
-    * jump *label83 always
+  255 jump *label83 lessThan *tmp203 40
   256 label *label82
+  257 set :backgroundProcess:c @titanium
   258 sensor *tmp206 .core @titanium
   259 sensor *tmp207 AÁNBJd-multiplicative-reconstructor26 @titanium
   260 op lessThan *tmp208 *tmp207 80
   261 op land *tmp209 *tmp206 *tmp208
-    * jump *label84 equal *tmp209 false
-    * set :backgroundProcess:c @titanium
-    * jump *label85 always
+  262 jump *label85 notEqual *tmp209 false
   263 label *label84
   264 sensor *tmp211 .core @silicon
   265 sensor *tmp212 AÁNBJd-multiplicative-reconstructor26 @silicon

Modifications by Inline function 'logUnit' defined at CoreController.mnd:48:1 (-4 instructions):
 
   294 end
   295 label *label6
   296 set :logUnit:unit :factoryUnitFinished:unit
-    * setaddr :logUnit*retaddr *label92 (h:*label92)
-    * call *label5 *invalid :logUnit*retval (m:*label92) (h:*label92)
-    * label *label92
+  297 label *label109
+  298 sensor *tmp230 :logUnit:unit @id
+  299 op add :log:encodedId @blockCount *tmp230
+  300 setaddr :log*retaddr *label110 (h:*label110)
+  301 call *label4 *invalid :log*retval (m:*label110) (h:*label110)
+  302 label *label110
+  303 label *label111
   304 jump *label94 notEqual :factoryUnitFinished:unit @flare
   305 label *label95
   306 op add *tmp226 .flares 1
 
   332 label *label91
   333 return :factoryUnitFinished*retaddr
   334 end
-    * label *label5
-    * sensor *tmp230 :logUnit:unit @id
-    * op add :log:encodedId @blockCount *tmp230
-    * setaddr :log*retaddr *label103 (h:*label103)
-    * call *label4 *invalid :log*retval (m:*label103) (h:*label103)
-    * label *label103
-    * label *label102
-    * return :logUnit*retaddr
-    * end
   335 label *label4
   336 read *tmp30 .bank 511
   337 op sub *tmp232 *tmp30 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   295 label *label6
   296 set :logUnit:unit :factoryUnitFinished:unit
   297 label *label109
-    * sensor *tmp230 :logUnit:unit @id
+  298 sensor *tmp230 :factoryUnitFinished:unit @id
   299 op add :log:encodedId @blockCount *tmp230
   300 setaddr :log*retaddr *label110 (h:*label110)
   301 call *label4 *invalid :log*retval (m:*label110) (h:*label110)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   293 jump *label9 always
   294 end
   295 label *label6
-    * set :logUnit:unit :factoryUnitFinished:unit
   296 label *label109
   297 sensor *tmp230 :factoryUnitFinished:unit @id
   298 op add :log:encodedId @blockCount *tmp230

Modifications by Inline function 'log' defined at CoreController.mnd:44:1 (-4 instructions):
 
   296 label *label109
   297 sensor *tmp230 :factoryUnitFinished:unit @id
   298 op add :log:encodedId @blockCount *tmp230
-    * setaddr :log*retaddr *label110 (h:*label110)
-    * call *label4 *invalid :log*retval (m:*label110) (h:*label110)
-    * label *label110
+  299 label *label112
+  300 read *tmp30 .bank 511
+  301 op sub *tmp232 *tmp30 1
+  302 write *tmp232 .bank 511
+  303 read *tmp235 .timer "time"
+  304 op mul *tmp236 *tmp235 1000
+  305 op add *tmp237 :log:encodedId *tmp236
+  306 write *tmp237 .bank *tmp232
+  307 label *label113
   308 label *label111
   309 jump *label94 notEqual :factoryUnitFinished:unit @flare
   310 label *label95
 
   337 label *label91
   338 return :factoryUnitFinished*retaddr
   339 end
-    * label *label4
-    * read *tmp30 .bank 511
-    * op sub *tmp232 *tmp30 1
-    * write *tmp232 .bank 511
-    * read *tmp235 .timer "time"
-    * op mul *tmp236 *tmp235 1000
-    * op add *tmp237 :log:encodedId *tmp236
-    * write *tmp237 .bank *tmp232
-    * label *label104
-    * return :log*retaddr
-    * end
   340 label *label0
   341 control config A©FJJU-unloader11 @coal
   342 control enabled A{HDJb-inverted-sorter24 false

Modifications by Inline function 'factoryUnitFinished' defined at CoreController.mnd:52:1 (+74 instructions):
 
    90 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    91 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    92 set :factoryUnitFinished:unit @flare
-    * setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
-    * label *label29
+   93 label *label114
+   94 label *label115
+   95 sensor *tmp230 :factoryUnitFinished:unit @id
+   96 op add :log:encodedId @blockCount *tmp230
+   97 label *label116
+   98 read *tmp30 .bank 511
+   99 op sub *tmp232 *tmp30 1
+  100 write *tmp232 .bank 511
+  101 read *tmp235 .timer "time"
+  102 op mul *tmp236 *tmp235 1000
+  103 op add *tmp237 :log:encodedId *tmp236
+  104 write *tmp237 .bank *tmp232
+  105 label *label117
+  106 label *label118
+  107 jump *label120 notEqual :factoryUnitFinished:unit @flare
+  108 label *label119
+  109 op add *tmp226 .flares 1
+  110 set .flares *tmp226
+  111 write *tmp226 .display ".flares"
+  112 jump *label127 always
+  113 label *label120
+  114 jump *label122 notEqual :factoryUnitFinished:unit @mono
+  115 label *label121
+  116 op add *tmp227 .monos 1
+  117 set .monos *tmp227
+  118 write *tmp227 .display ".monos"
+  119 jump *label127 always
+  120 label *label122
+  121 jump *label124 notEqual :factoryUnitFinished:unit @poly
+  122 label *label123
+  123 op add *tmp228 .polys 1
+  124 set .polys *tmp228
+  125 write *tmp228 .display ".polys"
+  126 jump *label127 always
+  127 label *label124
+  128 jump *label126 notEqual :factoryUnitFinished:unit @mega
+  129 label *label125
+  130 op add *tmp229 .megas 1
+  131 set .megas *tmp229
+  132 write *tmp229 .display ".megas"
+  133 label *label126
+  134 label *label127
+  135 label *label128
   136 set .lastProgress 0
   137 control config A©FJJU-unloader11 @coal
   138 jump *label18 always
 
   189 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   190 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   191 set :factoryUnitFinished:unit @mono
-    * setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
-    * label *label53
+  192 label *label129
+  193 label *label130
+  194 sensor *tmp230 :factoryUnitFinished:unit @id
+  195 op add :log:encodedId @blockCount *tmp230
+  196 label *label131
+  197 read *tmp30 .bank 511
+  198 op sub *tmp232 *tmp30 1
+  199 write *tmp232 .bank 511
+  200 read *tmp235 .timer "time"
+  201 op mul *tmp236 *tmp235 1000
+  202 op add *tmp237 :log:encodedId *tmp236
+  203 write *tmp237 .bank *tmp232
+  204 label *label132
+  205 label *label133
+  206 jump *label135 notEqual :factoryUnitFinished:unit @flare
+  207 label *label134
+  208 op add *tmp226 .flares 1
+  209 set .flares *tmp226
+  210 write *tmp226 .display ".flares"
+  211 jump *label142 always
+  212 label *label135
+  213 jump *label137 notEqual :factoryUnitFinished:unit @mono
+  214 label *label136
+  215 op add *tmp227 .monos 1
+  216 set .monos *tmp227
+  217 write *tmp227 .display ".monos"
+  218 jump *label142 always
+  219 label *label137
+  220 jump *label139 notEqual :factoryUnitFinished:unit @poly
+  221 label *label138
+  222 op add *tmp228 .polys 1
+  223 set .polys *tmp228
+  224 write *tmp228 .display ".polys"
+  225 jump *label142 always
+  226 label *label139
+  227 jump *label141 notEqual :factoryUnitFinished:unit @mega
+  228 label *label140
+  229 op add *tmp229 .megas 1
+  230 set .megas *tmp229
+  231 write *tmp229 .display ".megas"
+  232 label *label141
+  233 label *label142
+  234 label *label143
   235 set .lastProgress 0
   236 control config A©FJJU-unloader11 @coal
   237 jump *label42 always
 
   270 sensor :backgroundProcess:recoProgress AÀF@Lc-additive-reconstructor25 @progress
   271 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   272 set :factoryUnitFinished:unit @poly
-    * setaddr :factoryUnitFinished*retaddr *label68 (h:*label68)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label68) (h:*label68)
-    * label *label68
+  273 label *label144
+  274 label *label145
+  275 sensor *tmp230 :factoryUnitFinished:unit @id
+  276 op add :log:encodedId @blockCount *tmp230
+  277 label *label146
+  278 read *tmp30 .bank 511
+  279 op sub *tmp232 *tmp30 1
+  280 write *tmp232 .bank 511
+  281 read *tmp235 .timer "time"
+  282 op mul *tmp236 *tmp235 1000
+  283 op add *tmp237 :log:encodedId *tmp236
+  284 write *tmp237 .bank *tmp232
+  285 label *label147
+  286 label *label148
+  287 jump *label150 notEqual :factoryUnitFinished:unit @flare
+  288 label *label149
+  289 op add *tmp226 .flares 1
+  290 set .flares *tmp226
+  291 write *tmp226 .display ".flares"
+  292 jump *label157 always
+  293 label *label150
+  294 jump *label152 notEqual :factoryUnitFinished:unit @mono
+  295 label *label151
+  296 op add *tmp227 .monos 1
+  297 set .monos *tmp227
+  298 write *tmp227 .display ".monos"
+  299 jump *label157 always
+  300 label *label152
+  301 jump *label154 notEqual :factoryUnitFinished:unit @poly
+  302 label *label153
+  303 op add *tmp228 .polys 1
+  304 set .polys *tmp228
+  305 write *tmp228 .display ".polys"
+  306 jump *label157 always
+  307 label *label154
+  308 jump *label156 notEqual :factoryUnitFinished:unit @mega
+  309 label *label155
+  310 op add *tmp229 .megas 1
+  311 set .megas *tmp229
+  312 write *tmp229 .display ".megas"
+  313 label *label156
+  314 label *label157
+  315 label *label158
   316 set .recoEntered false
   317 set .lastRecoProgress 0
   318 jump *label67 always
 
   394 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   395 write null .display ".nextMultiReco"
   396 set :factoryUnitFinished:unit @mega
-    * setaddr :factoryUnitFinished*retaddr *label90 (h:*label90)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)
-    * label *label90
+  397 label *label159
+  398 label *label160
+  399 sensor *tmp230 :factoryUnitFinished:unit @id
+  400 op add :log:encodedId @blockCount *tmp230
+  401 label *label161
+  402 read *tmp30 .bank 511
+  403 op sub *tmp232 *tmp30 1
+  404 write *tmp232 .bank 511
+  405 read *tmp235 .timer "time"
+  406 op mul *tmp236 *tmp235 1000
+  407 op add *tmp237 :log:encodedId *tmp236
+  408 write *tmp237 .bank *tmp232
+  409 label *label162
+  410 label *label163
+  411 jump *label165 notEqual :factoryUnitFinished:unit @flare
+  412 label *label164
+  413 op add *tmp226 .flares 1
+  414 set .flares *tmp226
+  415 write *tmp226 .display ".flares"
+  416 jump *label172 always
+  417 label *label165
+  418 jump *label167 notEqual :factoryUnitFinished:unit @mono
+  419 label *label166
+  420 op add *tmp227 .monos 1
+  421 set .monos *tmp227
+  422 write *tmp227 .display ".monos"
+  423 jump *label172 always
+  424 label *label167
+  425 jump *label169 notEqual :factoryUnitFinished:unit @poly
+  426 label *label168
+  427 op add *tmp228 .polys 1
+  428 set .polys *tmp228
+  429 write *tmp228 .display ".polys"
+  430 jump *label172 always
+  431 label *label169
+  432 jump *label171 notEqual :factoryUnitFinished:unit @mega
+  433 label *label170
+  434 op add *tmp229 .megas 1
+  435 set .megas *tmp229
+  436 write *tmp229 .display ".megas"
+  437 label *label171
+  438 label *label172
+  439 label *label173
   440 set .lastMultiProgress 0
   441 jump *label89 always
   442 label *label88
 
   452 wait 1e12
   453 jump *label9 always
   454 end
-    * label *label6
-    * label *label109
-    * sensor *tmp230 :factoryUnitFinished:unit @id
-    * op add :log:encodedId @blockCount *tmp230
-    * label *label112
-    * read *tmp30 .bank 511
-    * op sub *tmp232 *tmp30 1
-    * write *tmp232 .bank 511
-    * read *tmp235 .timer "time"
-    * op mul *tmp236 *tmp235 1000
-    * op add *tmp237 :log:encodedId *tmp236
-    * write *tmp237 .bank *tmp232
-    * label *label113
-    * label *label111
-    * jump *label94 notEqual :factoryUnitFinished:unit @flare
-    * label *label95
-    * op add *tmp226 .flares 1
-    * set .flares *tmp226
-    * write *tmp226 .display ".flares"
-    * jump *label93 always
-    * label *label94
-    * jump *label96 notEqual :factoryUnitFinished:unit @mono
-    * label *label97
-    * op add *tmp227 .monos 1
-    * set .monos *tmp227
-    * write *tmp227 .display ".monos"
-    * jump *label93 always
-    * label *label96
-    * jump *label98 notEqual :factoryUnitFinished:unit @poly
-    * label *label99
-    * op add *tmp228 .polys 1
-    * set .polys *tmp228
-    * write *tmp228 .display ".polys"
-    * jump *label93 always
-    * label *label98
-    * jump *label100 notEqual :factoryUnitFinished:unit @mega
-    * label *label101
-    * op add *tmp229 .megas 1
-    * set .megas *tmp229
-    * write *tmp229 .display ".megas"
-    * label *label100
-    * label *label93
-    * label *label91
-    * return :factoryUnitFinished*retaddr
-    * end
   455 label *label0
   456 control config A©FJJU-unloader11 @coal
   457 control enabled A{HDJb-inverted-sorter24 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    92 set :factoryUnitFinished:unit @flare
    93 label *label114
    94 label *label115
-    * sensor *tmp230 :factoryUnitFinished:unit @id
+   95 sensor *tmp230 @flare @id
    96 op add :log:encodedId @blockCount *tmp230
    97 label *label116
    98 read *tmp30 .bank 511
 
   104 write *tmp237 .bank *tmp232
   105 label *label117
   106 label *label118
-    * jump *label120 notEqual :factoryUnitFinished:unit @flare
+  107 jump *label120 notEqual @flare @flare
   108 label *label119
   109 op add *tmp226 .flares 1
   110 set .flares *tmp226
   111 write *tmp226 .display ".flares"
   112 jump *label127 always
   113 label *label120
-    * jump *label122 notEqual :factoryUnitFinished:unit @mono
+  114 jump *label122 notEqual @flare @mono
   115 label *label121
   116 op add *tmp227 .monos 1
   117 set .monos *tmp227
   118 write *tmp227 .display ".monos"
   119 jump *label127 always
   120 label *label122
-    * jump *label124 notEqual :factoryUnitFinished:unit @poly
+  121 jump *label124 notEqual @flare @poly
   122 label *label123
   123 op add *tmp228 .polys 1
   124 set .polys *tmp228
   125 write *tmp228 .display ".polys"
   126 jump *label127 always
   127 label *label124
-    * jump *label126 notEqual :factoryUnitFinished:unit @mega
+  128 jump *label126 notEqual @flare @mega
   129 label *label125
   130 op add *tmp229 .megas 1
   131 set .megas *tmp229
 
   191 set :factoryUnitFinished:unit @mono
   192 label *label129
   193 label *label130
-    * sensor *tmp230 :factoryUnitFinished:unit @id
+  194 sensor *tmp230 @mono @id
   195 op add :log:encodedId @blockCount *tmp230
   196 label *label131
   197 read *tmp30 .bank 511
 
   203 write *tmp237 .bank *tmp232
   204 label *label132
   205 label *label133
-    * jump *label135 notEqual :factoryUnitFinished:unit @flare
+  206 jump *label135 notEqual @mono @flare
   207 label *label134
   208 op add *tmp226 .flares 1
   209 set .flares *tmp226
   210 write *tmp226 .display ".flares"
   211 jump *label142 always
   212 label *label135
-    * jump *label137 notEqual :factoryUnitFinished:unit @mono
+  213 jump *label137 notEqual @mono @mono
   214 label *label136
   215 op add *tmp227 .monos 1
   216 set .monos *tmp227
   217 write *tmp227 .display ".monos"
   218 jump *label142 always
   219 label *label137
-    * jump *label139 notEqual :factoryUnitFinished:unit @poly
+  220 jump *label139 notEqual @mono @poly
   221 label *label138
   222 op add *tmp228 .polys 1
   223 set .polys *tmp228
   224 write *tmp228 .display ".polys"
   225 jump *label142 always
   226 label *label139
-    * jump *label141 notEqual :factoryUnitFinished:unit @mega
+  227 jump *label141 notEqual @mono @mega
   228 label *label140
   229 op add *tmp229 .megas 1
   230 set .megas *tmp229
 
   272 set :factoryUnitFinished:unit @poly
   273 label *label144
   274 label *label145
-    * sensor *tmp230 :factoryUnitFinished:unit @id
+  275 sensor *tmp230 @poly @id
   276 op add :log:encodedId @blockCount *tmp230
   277 label *label146
   278 read *tmp30 .bank 511
 
   284 write *tmp237 .bank *tmp232
   285 label *label147
   286 label *label148
-    * jump *label150 notEqual :factoryUnitFinished:unit @flare
+  287 jump *label150 notEqual @poly @flare
   288 label *label149
   289 op add *tmp226 .flares 1
   290 set .flares *tmp226
   291 write *tmp226 .display ".flares"
   292 jump *label157 always
   293 label *label150
-    * jump *label152 notEqual :factoryUnitFinished:unit @mono
+  294 jump *label152 notEqual @poly @mono
   295 label *label151
   296 op add *tmp227 .monos 1
   297 set .monos *tmp227
   298 write *tmp227 .display ".monos"
   299 jump *label157 always
   300 label *label152
-    * jump *label154 notEqual :factoryUnitFinished:unit @poly
+  301 jump *label154 notEqual @poly @poly
   302 label *label153
   303 op add *tmp228 .polys 1
   304 set .polys *tmp228
   305 write *tmp228 .display ".polys"
   306 jump *label157 always
   307 label *label154
-    * jump *label156 notEqual :factoryUnitFinished:unit @mega
+  308 jump *label156 notEqual @poly @mega
   309 label *label155
   310 op add *tmp229 .megas 1
   311 set .megas *tmp229
 
   396 set :factoryUnitFinished:unit @mega
   397 label *label159
   398 label *label160
-    * sensor *tmp230 :factoryUnitFinished:unit @id
+  399 sensor *tmp230 @mega @id
   400 op add :log:encodedId @blockCount *tmp230
   401 label *label161
   402 read *tmp30 .bank 511
 
   408 write *tmp237 .bank *tmp232
   409 label *label162
   410 label *label163
-    * jump *label165 notEqual :factoryUnitFinished:unit @flare
+  411 jump *label165 notEqual @mega @flare
   412 label *label164
   413 op add *tmp226 .flares 1
   414 set .flares *tmp226
   415 write *tmp226 .display ".flares"
   416 jump *label172 always
   417 label *label165
-    * jump *label167 notEqual :factoryUnitFinished:unit @mono
+  418 jump *label167 notEqual @mega @mono
   419 label *label166
   420 op add *tmp227 .monos 1
   421 set .monos *tmp227
   422 write *tmp227 .display ".monos"
   423 jump *label172 always
   424 label *label167
-    * jump *label169 notEqual :factoryUnitFinished:unit @poly
+  425 jump *label169 notEqual @mega @poly
   426 label *label168
   427 op add *tmp228 .polys 1
   428 set .polys *tmp228
   429 write *tmp228 .display ".polys"
   430 jump *label172 always
   431 label *label169
-    * jump *label171 notEqual :factoryUnitFinished:unit @mega
+  432 jump *label171 notEqual @mega @mega
   433 label *label170
   434 op add *tmp229 .megas 1
   435 set .megas *tmp229

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    89 control config A¾BFLW-air-factory13 @flare
    90 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    91 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit @flare
    92 label *label114
    93 label *label115
    94 sensor *tmp230 @flare @id
 
   187 control config A¾BFLW-air-factory13 @mono
   188 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   189 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit @mono
   190 label *label129
   191 label *label130
   192 sensor *tmp230 @mono @id
 
   267 write @poly .display ".nextAddReco"
   268 sensor :backgroundProcess:recoProgress AÀF@Lc-additive-reconstructor25 @progress
   269 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * set :factoryUnitFinished:unit @poly
   270 label *label144
   271 label *label145
   272 sensor *tmp230 @poly @id
 
   390 sensor :backgroundProcess:multiProgress AÁNBJd-multiplicative-reconstructor26 @progress
   391 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   392 write null .display ".nextMultiReco"
-    * set :factoryUnitFinished:unit @mega
   393 label *label159
   394 label *label160
   395 sensor *tmp230 @mega @id

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-5 instructions):
 
   103 write *tmp237 .bank *tmp232
   104 label *label117
   105 label *label118
-    * jump *label120 notEqual @flare @flare
   106 label *label119
   107 op add *tmp226 .flares 1
   108 set .flares *tmp226
   109 write *tmp226 .display ".flares"
   110 jump *label127 always
   111 label *label120
-    * jump *label122 notEqual @flare @mono
+  112 jump *label122 always
   113 label *label121
   114 op add *tmp227 .monos 1
   115 set .monos *tmp227
   116 write *tmp227 .display ".monos"
   117 jump *label127 always
   118 label *label122
-    * jump *label124 notEqual @flare @poly
+  119 jump *label124 always
   120 label *label123
   121 op add *tmp228 .polys 1
   122 set .polys *tmp228
   123 write *tmp228 .display ".polys"
   124 jump *label127 always
   125 label *label124
-    * jump *label126 notEqual @flare @mega
+  126 jump *label126 always
   127 label *label125
   128 op add *tmp229 .megas 1
   129 set .megas *tmp229
 
   137 label *label27
   138 label *label28
   139 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 equal 0 false
+  140 jump *label30 always
   141 sensor *tmp92 .core @lead
   142 sensor *tmp95 A¾BFLW-air-factory13 @lead
   143 jump *label34 greaterThanEq *tmp95 0
 
   200 write *tmp237 .bank *tmp232
   201 label *label132
   202 label *label133
-    * jump *label135 notEqual @mono @flare
+  203 jump *label135 always
   204 label *label134
   205 op add *tmp226 .flares 1
   206 set .flares *tmp226
   207 write *tmp226 .display ".flares"
   208 jump *label142 always
   209 label *label135
-    * jump *label137 notEqual @mono @mono
   210 label *label136
   211 op add *tmp227 .monos 1
   212 set .monos *tmp227
   213 write *tmp227 .display ".monos"
   214 jump *label142 always
   215 label *label137
-    * jump *label139 notEqual @mono @poly
+  216 jump *label139 always
   217 label *label138
   218 op add *tmp228 .polys 1
   219 set .polys *tmp228
   220 write *tmp228 .display ".polys"
   221 jump *label142 always
   222 label *label139
-    * jump *label141 notEqual @mono @mega
+  223 jump *label141 always
   224 label *label140
   225 op add *tmp229 .megas 1
   226 set .megas *tmp229
 
   234 label *label51
   235 label *label52
   236 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label54 equal 15 false
   237 sensor *tmp138 .core @lead
   238 select *tmp140 greaterThan *tmp138 0 15 0
   239 sensor *tmp141 A¾BFLW-air-factory13 @lead
 
   278 write *tmp237 .bank *tmp232
   279 label *label147
   280 label *label148
-    * jump *label150 notEqual @poly @flare
+  281 jump *label150 always
   282 label *label149
   283 op add *tmp226 .flares 1
   284 set .flares *tmp226
   285 write *tmp226 .display ".flares"
   286 jump *label157 always
   287 label *label150
-    * jump *label152 notEqual @poly @mono
+  288 jump *label152 always
   289 label *label151
   290 op add *tmp227 .monos 1
   291 set .monos *tmp227
   292 write *tmp227 .display ".monos"
   293 jump *label157 always
   294 label *label152
-    * jump *label154 notEqual @poly @poly
   295 label *label153
   296 op add *tmp228 .polys 1
   297 set .polys *tmp228
   298 write *tmp228 .display ".polys"
   299 jump *label157 always
   300 label *label154
-    * jump *label156 notEqual @poly @mega
+  301 jump *label156 always
   302 label *label155
   303 op add *tmp229 .megas 1
   304 set .megas *tmp229
 
   400 write *tmp237 .bank *tmp232
   401 label *label162
   402 label *label163
-    * jump *label165 notEqual @mega @flare
+  403 jump *label165 always
   404 label *label164
   405 op add *tmp226 .flares 1
   406 set .flares *tmp226
   407 write *tmp226 .display ".flares"
   408 jump *label172 always
   409 label *label165
-    * jump *label167 notEqual @mega @mono
+  410 jump *label167 always
   411 label *label166
   412 op add *tmp227 .monos 1
   413 set .monos *tmp227
   414 write *tmp227 .display ".monos"
   415 jump *label172 always
   416 label *label167
-    * jump *label169 notEqual @mega @poly
+  417 jump *label169 always
   418 label *label168
   419 op add *tmp228 .polys 1
   420 set .polys *tmp228
   421 write *tmp228 .display ".polys"
   422 jump *label172 always
   423 label *label169
-    * jump *label171 notEqual @mega @mega
   424 label *label170
   425 op add *tmp229 .megas 1
   426 set .megas *tmp229

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    91 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    92 label *label114
    93 label *label115
-    * sensor *tmp230 @flare @id
+   94 set *tmp230 15
    95 op add :log:encodedId @blockCount *tmp230
    96 label *label116
    97 read *tmp30 .bank 511
 
   188 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   189 label *label129
   190 label *label130
-    * sensor *tmp230 @mono @id
+  191 set *tmp230 20
   192 op add :log:encodedId @blockCount *tmp230
   193 label *label131
   194 read *tmp30 .bank 511
 
   266 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   267 label *label144
   268 label *label145
-    * sensor *tmp230 @poly @id
+  269 set *tmp230 21
   270 op add :log:encodedId @blockCount *tmp230
   271 label *label146
   272 read *tmp30 .bank 511
 
   388 write null .display ".nextMultiReco"
   389 label *label159
   390 label *label160
-    * sensor *tmp230 @mega @id
+  391 set *tmp230 22
   392 op add :log:encodedId @blockCount *tmp230
   393 label *label161
   394 read *tmp30 .bank 511

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-12 instructions):
 
    92 label *label114
    93 label *label115
    94 set *tmp230 15
-    * op add :log:encodedId @blockCount *tmp230
+   95 op add :log:encodedId @blockCount 15
    96 label *label116
    97 read *tmp30 .bank 511
    98 op sub *tmp232 *tmp30 1
    99 write *tmp232 .bank 511
   100 read *tmp235 .timer "time"
   101 op mul *tmp236 *tmp235 1000
-    * op add *tmp237 :log:encodedId *tmp236
+  102 op add *tmp237 275 *tmp236
   103 write *tmp237 .bank *tmp232
   104 label *label117
   105 label *label118
 
   111 label *label120
   112 jump *label122 always
   113 label *label121
-    * op add *tmp227 .monos 1
   114 set .monos *tmp227
   115 write *tmp227 .display ".monos"
   116 jump *label127 always
   117 label *label122
   118 jump *label124 always
   119 label *label123
-    * op add *tmp228 .polys 1
   120 set .polys *tmp228
   121 write *tmp228 .display ".polys"
   122 jump *label127 always
   123 label *label124
   124 jump *label126 always
   125 label *label125
-    * op add *tmp229 .megas 1
   126 set .megas *tmp229
   127 write *tmp229 .display ".megas"
   128 label *label126
 
   186 label *label129
   187 label *label130
   188 set *tmp230 20
-    * op add :log:encodedId @blockCount *tmp230
+  189 op add :log:encodedId @blockCount 20
   190 label *label131
   191 read *tmp30 .bank 511
   192 op sub *tmp232 *tmp30 1
   193 write *tmp232 .bank 511
   194 read *tmp235 .timer "time"
   195 op mul *tmp236 *tmp235 1000
-    * op add *tmp237 :log:encodedId *tmp236
+  196 op add *tmp237 280 *tmp236
   197 write *tmp237 .bank *tmp232
   198 label *label132
   199 label *label133
   200 jump *label135 always
   201 label *label134
-    * op add *tmp226 .flares 1
   202 set .flares *tmp226
   203 write *tmp226 .display ".flares"
   204 jump *label142 always
 
   211 label *label137
   212 jump *label139 always
   213 label *label138
-    * op add *tmp228 .polys 1
   214 set .polys *tmp228
   215 write *tmp228 .display ".polys"
   216 jump *label142 always
   217 label *label139
   218 jump *label141 always
   219 label *label140
-    * op add *tmp229 .megas 1
   220 set .megas *tmp229
   221 write *tmp229 .display ".megas"
   222 label *label141
 
   261 label *label144
   262 label *label145
   263 set *tmp230 21
-    * op add :log:encodedId @blockCount *tmp230
+  264 op add :log:encodedId @blockCount 21
   265 label *label146
   266 read *tmp30 .bank 511
   267 op sub *tmp232 *tmp30 1
   268 write *tmp232 .bank 511
   269 read *tmp235 .timer "time"
   270 op mul *tmp236 *tmp235 1000
-    * op add *tmp237 :log:encodedId *tmp236
+  271 op add *tmp237 281 *tmp236
   272 write *tmp237 .bank *tmp232
   273 label *label147
   274 label *label148
   275 jump *label150 always
   276 label *label149
-    * op add *tmp226 .flares 1
   277 set .flares *tmp226
   278 write *tmp226 .display ".flares"
   279 jump *label157 always
   280 label *label150
   281 jump *label152 always
   282 label *label151
-    * op add *tmp227 .monos 1
   283 set .monos *tmp227
   284 write *tmp227 .display ".monos"
   285 jump *label157 always
 
   292 label *label154
   293 jump *label156 always
   294 label *label155
-    * op add *tmp229 .megas 1
   295 set .megas *tmp229
   296 write *tmp229 .display ".megas"
   297 label *label156
 
   380 label *label159
   381 label *label160
   382 set *tmp230 22
-    * op add :log:encodedId @blockCount *tmp230
+  383 op add :log:encodedId @blockCount 22
   384 label *label161
   385 read *tmp30 .bank 511
   386 op sub *tmp232 *tmp30 1
   387 write *tmp232 .bank 511
   388 read *tmp235 .timer "time"
   389 op mul *tmp236 *tmp235 1000
-    * op add *tmp237 :log:encodedId *tmp236
+  390 op add *tmp237 282 *tmp236
   391 write *tmp237 .bank *tmp232
   392 label *label162
   393 label *label163
   394 jump *label165 always
   395 label *label164
-    * op add *tmp226 .flares 1
   396 set .flares *tmp226
   397 write *tmp226 .display ".flares"
   398 jump *label172 always
   399 label *label165
   400 jump *label167 always
   401 label *label166
-    * op add *tmp227 .monos 1
   402 set .monos *tmp227
   403 write *tmp227 .display ".monos"
   404 jump *label172 always
   405 label *label167
   406 jump *label169 always
   407 label *label168
-    * op add *tmp228 .polys 1
   408 set .polys *tmp228
   409 write *tmp228 .display ".polys"
   410 jump *label172 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
    91 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    92 label *label114
    93 label *label115
-    * set *tmp230 15
-    * op add :log:encodedId @blockCount 15
    94 label *label116
    95 read *tmp30 .bank 511
    96 op sub *tmp232 *tmp30 1
 
   183 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   184 label *label129
   185 label *label130
-    * set *tmp230 20
-    * op add :log:encodedId @blockCount 20
   186 label *label131
   187 read *tmp30 .bank 511
   188 op sub *tmp232 *tmp30 1
 
   256 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   257 label *label144
   258 label *label145
-    * set *tmp230 21
-    * op add :log:encodedId @blockCount 21
   259 label *label146
   260 read *tmp30 .bank 511
   261 op sub *tmp232 *tmp30 1
 
   373 write null .display ".nextMultiReco"
   374 label *label159
   375 label *label160
-    * set *tmp230 22
-    * op add :log:encodedId @blockCount 22
   376 label *label161
   377 read *tmp30 .bank 511
   378 op sub *tmp232 *tmp30 1

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    22 set .airFactoryTarget null
    23 set *signature "eb9ab5a008f372ac:v1"
    24 label *label9
-    * label *label11
    25 jump *label13 notEqual .finished false
    26 label *label108
    27 set :backgroundProcess:ticks @tick
 
    68 control config A©FJJU-unloader11 @coal
    69 jump *label18 always
    70 label *label19
-    * label *label20
    71 sensor *tmp70 AAKJ\-steam-generator18 @coal
    72 op mul *tmp71 5 AAKJ\-steam-generator18
    73 jump *label21 greaterThanEq *tmp70 *tmp71
    74 control config A©FJJU-unloader11 @coal
    75 jump *label18 always
    76 label *label21
-    * label *label22
    77 jump *label23 greaterThanEq :backgroundProcess:power 200
    78 control enabled A¾BFLW-air-factory13 false
    79 jump *label24 always
 
    81 jump *label25 lessThanEq :backgroundProcess:power 500
    82 control enabled A¾BFLW-air-factory13 true
    83 label *label25
-    * label *label26
    84 label *label24
    85 control config A¾BFLW-air-factory13 @flare
    86 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    87 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * label *label114
-    * label *label115
-    * label *label116
    88 read *tmp30 .bank 511
    89 op sub *tmp232 *tmp30 1
    90 write *tmp232 .bank 511
 
    92 op mul *tmp236 *tmp235 1000
    93 op add *tmp237 275 *tmp236
    94 write *tmp237 .bank *tmp232
-    * label *label117
-    * label *label118
-    * label *label119
    95 op add *tmp226 .flares 1
    96 set .flares *tmp226
    97 write *tmp226 .display ".flares"
    98 jump *label127 always
-    * label *label120
    99 jump *label122 always
-    * label *label121
   100 set .monos *tmp227
   101 write *tmp227 .display ".monos"
   102 jump *label127 always
   103 label *label122
   104 jump *label124 always
-    * label *label123
   105 set .polys *tmp228
   106 write *tmp228 .display ".polys"
   107 jump *label127 always
   108 label *label124
   109 jump *label126 always
-    * label *label125
   110 set .megas *tmp229
   111 write *tmp229 .display ".megas"
   112 label *label126
   113 label *label127
-    * label *label128
   114 set .lastProgress 0
   115 control config A©FJJU-unloader11 @coal
   116 jump *label18 always
   117 label *label27
-    * label *label28
   118 set .lastProgress :handleAirFactory:factoryProgress
   119 jump *label30 always
   120 sensor *tmp92 .core @lead
 
   123 control config A©FJJU-unloader11 @lead
   124 jump *label18 always
   125 label *label34
-    * label *label35
   126 label *label30
-    * label *label31
   127 sensor *tmp100 .core @silicon
   128 select *tmp102 greaterThan *tmp100 0 15 0
   129 set *tmp103 A©FJJU-unloader11
 
   143 control config A©FJJU-unloader11 @coal
   144 jump *label42 always
   145 label *label43
-    * label *label44
   146 sensor *tmp116 AAKJ\-steam-generator18 @coal
   147 op mul *tmp117 5 AAKJ\-steam-generator18
   148 jump *label45 greaterThanEq *tmp116 *tmp117
   149 control config A©FJJU-unloader11 @coal
   150 jump *label42 always
   151 label *label45
-    * label *label46
   152 jump *label47 greaterThanEq :backgroundProcess:power 200
   153 control enabled A¾BFLW-air-factory13 false
   154 jump *label48 always
 
   156 jump *label49 lessThanEq :backgroundProcess:power 500
   157 control enabled A¾BFLW-air-factory13 true
   158 label *label49
-    * label *label50
   159 label *label48
   160 control config A¾BFLW-air-factory13 @mono
   161 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   162 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * label *label129
-    * label *label130
-    * label *label131
   163 read *tmp30 .bank 511
   164 op sub *tmp232 *tmp30 1
   165 write *tmp232 .bank 511
 
   167 op mul *tmp236 *tmp235 1000
   168 op add *tmp237 280 *tmp236
   169 write *tmp237 .bank *tmp232
-    * label *label132
-    * label *label133
   170 jump *label135 always
-    * label *label134
   171 set .flares *tmp226
   172 write *tmp226 .display ".flares"
   173 jump *label142 always
   174 label *label135
-    * label *label136
   175 op add *tmp227 .monos 1
   176 set .monos *tmp227
   177 write *tmp227 .display ".monos"
   178 jump *label142 always
-    * label *label137
   179 jump *label139 always
-    * label *label138
   180 set .polys *tmp228
   181 write *tmp228 .display ".polys"
   182 jump *label142 always
   183 label *label139
   184 jump *label141 always
-    * label *label140
   185 set .megas *tmp229
   186 write *tmp229 .display ".megas"
   187 label *label141
   188 label *label142
-    * label *label143
   189 set .lastProgress 0
   190 control config A©FJJU-unloader11 @coal
   191 jump *label42 always
   192 label *label51
-    * label *label52
   193 set .lastProgress :handleAirFactory.1:factoryProgress
   194 sensor *tmp138 .core @lead
   195 select *tmp140 greaterThan *tmp138 0 15 0
 
   198 control config A©FJJU-unloader11 @lead
   199 jump *label42 always
   200 label *label58
-    * label *label59
-    * label *label54
-    * label *label55
   201 sensor *tmp146 .core @silicon
   202 select *tmp148 greaterThan *tmp146 0 30 0
   203 set *tmp149 A©FJJU-unloader11
 
   218 write @poly .display ".nextAddReco"
   219 sensor :backgroundProcess:recoProgress AÀF@Lc-additive-reconstructor25 @progress
   220 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * label *label144
-    * label *label145
-    * label *label146
   221 read *tmp30 .bank 511
   222 op sub *tmp232 *tmp30 1
   223 write *tmp232 .bank 511
 
   225 op mul *tmp236 *tmp235 1000
   226 op add *tmp237 281 *tmp236
   227 write *tmp237 .bank *tmp232
-    * label *label147
-    * label *label148
   228 jump *label150 always
-    * label *label149
   229 set .flares *tmp226
   230 write *tmp226 .display ".flares"
   231 jump *label157 always
   232 label *label150
   233 jump *label152 always
-    * label *label151
   234 set .monos *tmp227
   235 write *tmp227 .display ".monos"
   236 jump *label157 always
   237 label *label152
-    * label *label153
   238 op add *tmp228 .polys 1
   239 set .polys *tmp228
   240 write *tmp228 .display ".polys"
   241 jump *label157 always
-    * label *label154
   242 jump *label156 always
-    * label *label155
   243 set .megas *tmp229
   244 write *tmp229 .display ".megas"
   245 label *label156
   246 label *label157
-    * label *label158
   247 set .recoEntered false
   248 set .lastRecoProgress 0
   249 jump *label67 always
 
   263 label *label73
   264 ucontrol move :backgroundProcess:x :backgroundProcess:y
   265 ucontrol payEnter
-    * label *label74
   266 sensor *tmp175 @unit @dead
   267 jump *label73 equal *tmp175 false
-    * label *label75
   268 op sub *tmp177 .monos 1
   269 set .monos *tmp177
   270 write *tmp177 .display ".monos"
   271 set .recoEntered true
   272 label *label71
-    * label *label72
   273 control enabled A{HDJb-inverted-sorter24 false
   274 jump *label70 always
   275 label *label69
 
   301 set :backgroundProcess:c @metaglass
   302 sensor *tmp203 AÁNBJd-multiplicative-reconstructor26 @metaglass
   303 jump *label83 lessThan *tmp203 40
-    * label *label82
   304 set :backgroundProcess:c @titanium
   305 sensor *tmp206 .core @titanium
   306 sensor *tmp207 AÁNBJd-multiplicative-reconstructor26 @titanium
   307 op lessThan *tmp208 *tmp207 80
   308 op land *tmp209 *tmp206 *tmp208
   309 jump *label85 notEqual *tmp209 false
-    * label *label84
   310 sensor *tmp211 .core @silicon
   311 sensor *tmp212 AÁNBJd-multiplicative-reconstructor26 @silicon
   312 op lessThan *tmp213 *tmp212 130
 
   319 sensor :backgroundProcess:multiProgress AÁNBJd-multiplicative-reconstructor26 @progress
   320 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   321 write null .display ".nextMultiReco"
-    * label *label159
-    * label *label160
-    * label *label161
   322 read *tmp30 .bank 511
   323 op sub *tmp232 *tmp30 1
   324 write *tmp232 .bank 511
 
   326 op mul *tmp236 *tmp235 1000
   327 op add *tmp237 282 *tmp236
   328 write *tmp237 .bank *tmp232
-    * label *label162
-    * label *label163
   329 jump *label165 always
-    * label *label164
   330 set .flares *tmp226
   331 write *tmp226 .display ".flares"
   332 jump *label172 always
   333 label *label165
   334 jump *label167 always
-    * label *label166
   335 set .monos *tmp227
   336 write *tmp227 .display ".monos"
   337 jump *label172 always
   338 label *label167
   339 jump *label169 always
-    * label *label168
   340 set .polys *tmp228
   341 write *tmp228 .display ".polys"
   342 jump *label172 always
   343 label *label169
-    * label *label170
   344 op add *tmp229 .megas 1
   345 set .megas *tmp229
   346 write *tmp229 .display ".megas"
-    * label *label171
   347 label *label172
-    * label *label173
   348 set .lastMultiProgress 0
   349 jump *label89 always
   350 label *label88
   351 set .lastMultiProgress :backgroundProcess:multiProgress
   352 label *label89
   353 label *label80
-    * label *label81
   354 op sub .loopTicks @tick :backgroundProcess:ticks
-    * label *label12
   355 jump *label108 equal .finished false
   356 label *label13
-    * label *label10
   357 wait 1e12
   358 jump *label9 always
   359 end
 
   361 control config A©FJJU-unloader11 @coal
   362 control enabled A{HDJb-inverted-sorter24 false
   363 set .canConsume false
-    * label *label106
   364 set :buildStart*finished true
   365 jump *label9 always
   366 end
   367 label *label1
   368 set .canConsume true
-    * label *label107
   369 set :buildStop*finished true
   370 jump *label9 always
   371 end

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    66 write @flare .display ".nextFactory"
    67 jump *label19 notEqual .canConsume false
    68 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+   69 jump *label17 always
    70 label *label19
    71 sensor *tmp70 AAKJ\-steam-generator18 @coal
    72 op mul *tmp71 5 AAKJ\-steam-generator18
    73 jump *label21 greaterThanEq *tmp70 *tmp71
    74 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+   75 jump *label17 always
    76 label *label21
    77 jump *label23 greaterThanEq :backgroundProcess:power 200
    78 control enabled A¾BFLW-air-factory13 false
 
    96 set .flares *tmp226
    97 write *tmp226 .display ".flares"
    98 jump *label127 always
-    * jump *label122 always
+   99 jump *label126 always
   100 set .monos *tmp227
   101 write *tmp227 .display ".monos"
   102 jump *label127 always
   103 label *label122
-    * jump *label124 always
+  104 jump *label126 always
   105 set .polys *tmp228
   106 write *tmp228 .display ".polys"
   107 jump *label127 always
 
   113 label *label127
   114 set .lastProgress 0
   115 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+  116 jump *label17 always
   117 label *label27
   118 set .lastProgress :handleAirFactory:factoryProgress
   119 jump *label30 always
 
   121 sensor *tmp95 A¾BFLW-air-factory13 @lead
   122 jump *label34 greaterThanEq *tmp95 0
   123 control config A©FJJU-unloader11 @lead
-    * jump *label18 always
+  124 jump *label17 always
   125 label *label34
   126 label *label30
   127 sensor *tmp100 .core @silicon
 
   141 write @mono .display ".nextFactory"
   142 jump *label43 notEqual .canConsume false
   143 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  144 jump *label41 always
   145 label *label43
   146 sensor *tmp116 AAKJ\-steam-generator18 @coal
   147 op mul *tmp117 5 AAKJ\-steam-generator18
   148 jump *label45 greaterThanEq *tmp116 *tmp117
   149 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  150 jump *label41 always
   151 label *label45
   152 jump *label47 greaterThanEq :backgroundProcess:power 200
   153 control enabled A¾BFLW-air-factory13 false
 
   176 set .monos *tmp227
   177 write *tmp227 .display ".monos"
   178 jump *label142 always
-    * jump *label139 always
+  179 jump *label141 always
   180 set .polys *tmp228
   181 write *tmp228 .display ".polys"
   182 jump *label142 always
 
   188 label *label142
   189 set .lastProgress 0
   190 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  191 jump *label41 always
   192 label *label51
   193 set .lastProgress :handleAirFactory.1:factoryProgress
   194 sensor *tmp138 .core @lead
 
   196 sensor *tmp141 A¾BFLW-air-factory13 @lead
   197 jump *label58 greaterThanEq *tmp141 *tmp140
   198 control config A©FJJU-unloader11 @lead
-    * jump *label42 always
+  199 jump *label41 always
   200 label *label58
   201 sensor *tmp146 .core @silicon
   202 select *tmp148 greaterThan *tmp146 0 30 0
 
   225 op mul *tmp236 *tmp235 1000
   226 op add *tmp237 281 *tmp236
   227 write *tmp237 .bank *tmp232
-    * jump *label150 always
+  228 jump *label152 always
   229 set .flares *tmp226
   230 write *tmp226 .display ".flares"
   231 jump *label157 always
 
   271 set .recoEntered true
   272 label *label71
   273 control enabled A{HDJb-inverted-sorter24 false
-    * jump *label70 always
+  274 jump *label65 always
   275 label *label69
   276 op greaterThan *tmp180 :backgroundProcess:coreSilicon .siliconReserve
   277 op mul *tmp181 40 *tmp180
   278 jump *label76 greaterThanEq :backgroundProcess:s *tmp181
   279 control config A©HFJa-unloader23 @silicon
   280 control enabled A{HDJb-inverted-sorter24 .canConsume
-    * jump *label77 always
+  281 jump *label65 always
   282 label *label76
   283 op greaterThan *tmp189 :backgroundProcess:coreGraphite .graphiteReserve
   284 op mul *tmp190 40 *tmp189
   285 jump *label78 greaterThanEq :backgroundProcess:g *tmp190
   286 control config A©HFJa-unloader23 @graphite
   287 control enabled A{HDJb-inverted-sorter24 .canConsume
-    * jump *label79 always
+  288 jump *label65 always
   289 label *label78
   290 control enabled A{HDJb-inverted-sorter24 false
   291 label *label79
 
   326 op mul *tmp236 *tmp235 1000
   327 op add *tmp237 282 *tmp236
   328 write *tmp237 .bank *tmp232
-    * jump *label165 always
+  329 jump *label169 always
   330 set .flares *tmp226
   331 write *tmp226 .display ".flares"
   332 jump *label172 always
   333 label *label165
-    * jump *label167 always
+  334 jump *label169 always
   335 set .monos *tmp227
   336 write *tmp227 .display ".monos"
   337 jump *label172 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-50 instructions):
 
    96 set .flares *tmp226
    97 write *tmp226 .display ".flares"
    98 jump *label127 always
-    * jump *label126 always
-    * set .monos *tmp227
-    * write *tmp227 .display ".monos"
-    * jump *label127 always
-    * label *label122
-    * jump *label126 always
-    * set .polys *tmp228
-    * write *tmp228 .display ".polys"
-    * jump *label127 always
-    * label *label124
-    * jump *label126 always
-    * set .megas *tmp229
-    * write *tmp229 .display ".megas"
-    * label *label126
    99 label *label127
   100 set .lastProgress 0
   101 control config A©FJJU-unloader11 @coal
 
   103 label *label27
   104 set .lastProgress :handleAirFactory:factoryProgress
   105 jump *label30 always
-    * sensor *tmp92 .core @lead
-    * sensor *tmp95 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp95 0
-    * control config A©FJJU-unloader11 @lead
-    * jump *label17 always
-    * label *label34
   106 label *label30
   107 sensor *tmp100 .core @silicon
   108 select *tmp102 greaterThan *tmp100 0 15 0
 
   110 sensor *tmp105 A¾BFLW-air-factory13 @silicon
   111 select *tmp107 lessThan *tmp105 *tmp102 @silicon @coal
   112 control config *tmp103 *tmp107
-    * label *label18
   113 jump *label17 always
   114 label *label16
   115 op lessThan *tmp108 .monos .monoTarget
 
   147 op add *tmp237 280 *tmp236
   148 write *tmp237 .bank *tmp232
   149 jump *label135 always
-    * set .flares *tmp226
-    * write *tmp226 .display ".flares"
-    * jump *label142 always
   150 label *label135
   151 op add *tmp227 .monos 1
   152 set .monos *tmp227
   153 write *tmp227 .display ".monos"
   154 jump *label142 always
-    * jump *label141 always
-    * set .polys *tmp228
-    * write *tmp228 .display ".polys"
-    * jump *label142 always
-    * label *label139
-    * jump *label141 always
-    * set .megas *tmp229
-    * write *tmp229 .display ".megas"
-    * label *label141
   155 label *label142
   156 set .lastProgress 0
   157 control config A©FJJU-unloader11 @coal
 
   171 sensor *tmp151 A¾BFLW-air-factory13 @silicon
   172 select *tmp153 lessThan *tmp151 *tmp148 @silicon @coal
   173 control config *tmp149 *tmp153
-    * label *label42
   174 jump *label41 always
   175 label *label40
   176 set .airFactoryTarget null
 
   192 op add *tmp237 281 *tmp236
   193 write *tmp237 .bank *tmp232
   194 jump *label152 always
-    * set .flares *tmp226
-    * write *tmp226 .display ".flares"
-    * jump *label157 always
-    * label *label150
-    * jump *label152 always
-    * set .monos *tmp227
-    * write *tmp227 .display ".monos"
-    * jump *label157 always
   195 label *label152
   196 op add *tmp228 .polys 1
   197 set .polys *tmp228
   198 write *tmp228 .display ".polys"
   199 jump *label157 always
-    * jump *label156 always
-    * set .megas *tmp229
-    * write *tmp229 .display ".megas"
-    * label *label156
   200 label *label157
   201 set .recoEntered false
   202 set .lastRecoProgress 0
 
   242 jump *label65 always
   243 label *label78
   244 control enabled A{HDJb-inverted-sorter24 false
-    * label *label79
-    * label *label77
-    * label *label70
   245 jump *label65 always
   246 label *label64
   247 write null .display ".nextAddReco"
 
   278 op add *tmp237 282 *tmp236
   279 write *tmp237 .bank *tmp232
   280 jump *label169 always
-    * set .flares *tmp226
-    * write *tmp226 .display ".flares"
-    * jump *label172 always
-    * label *label165
-    * jump *label169 always
-    * set .monos *tmp227
-    * write *tmp227 .display ".monos"
-    * jump *label172 always
-    * label *label167
-    * jump *label169 always
-    * set .polys *tmp228
-    * write *tmp228 .display ".polys"
-    * jump *label172 always
   281 label *label169
   282 op add *tmp229 .megas 1
   283 set .megas *tmp229
 
   294 label *label13
   295 wait 1e12
   296 jump *label9 always
-    * end
   297 label *label0
   298 control config A©FJJU-unloader11 @coal
   299 control enabled A{HDJb-inverted-sorter24 false
   300 set .canConsume false
   301 set :buildStart*finished true
   302 jump *label9 always
-    * end
   303 label *label1
   304 set .canConsume true
   305 set :buildStop*finished true
   306 jump *label9 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   282 op add *tmp229 .megas 1
   283 set .megas *tmp229
   284 write *tmp229 .display ".megas"
-    * label *label172
   285 set .lastMultiProgress 0
   286 jump *label89 always
   287 label *label88

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-7 instructions):
 
    95 op add *tmp226 .flares 1
    96 set .flares *tmp226
    97 write *tmp226 .display ".flares"
-    * jump *label127 always
    98 label *label127
    99 set .lastProgress 0
   100 control config A©FJJU-unloader11 @coal
   101 jump *label17 always
   102 label *label27
   103 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 always
   104 label *label30
   105 sensor *tmp100 .core @silicon
   106 select *tmp102 greaterThan *tmp100 0 15 0
 
   144 op mul *tmp236 *tmp235 1000
   145 op add *tmp237 280 *tmp236
   146 write *tmp237 .bank *tmp232
-    * jump *label135 always
   147 label *label135
   148 op add *tmp227 .monos 1
   149 set .monos *tmp227
   150 write *tmp227 .display ".monos"
-    * jump *label142 always
   151 label *label142
   152 set .lastProgress 0
   153 control config A©FJJU-unloader11 @coal
 
   187 op mul *tmp236 *tmp235 1000
   188 op add *tmp237 281 *tmp236
   189 write *tmp237 .bank *tmp232
-    * jump *label152 always
   190 label *label152
   191 op add *tmp228 .polys 1
   192 set .polys *tmp228
   193 write *tmp228 .display ".polys"
-    * jump *label157 always
   194 label *label157
   195 set .recoEntered false
   196 set .lastRecoProgress 0
 
   271 op mul *tmp236 *tmp235 1000
   272 op add *tmp237 282 *tmp236
   273 write *tmp237 .bank *tmp232
-    * jump *label169 always
   274 label *label169
   275 op add *tmp229 .megas 1
   276 set .megas *tmp229

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    95 op add *tmp226 .flares 1
    96 set .flares *tmp226
    97 write *tmp226 .display ".flares"
-    * label *label127
    98 set .lastProgress 0
    99 control config A©FJJU-unloader11 @coal
   100 jump *label17 always
   101 label *label27
   102 set .lastProgress :handleAirFactory:factoryProgress
-    * label *label30
   103 sensor *tmp100 .core @silicon
   104 select *tmp102 greaterThan *tmp100 0 15 0
   105 set *tmp103 A©FJJU-unloader11
 
   142 op mul *tmp236 *tmp235 1000
   143 op add *tmp237 280 *tmp236
   144 write *tmp237 .bank *tmp232
-    * label *label135
   145 op add *tmp227 .monos 1
   146 set .monos *tmp227
   147 write *tmp227 .display ".monos"
-    * label *label142
   148 set .lastProgress 0
   149 control config A©FJJU-unloader11 @coal
   150 jump *label41 always
 
   183 op mul *tmp236 *tmp235 1000
   184 op add *tmp237 281 *tmp236
   185 write *tmp237 .bank *tmp232
-    * label *label152
   186 op add *tmp228 .polys 1
   187 set .polys *tmp228
   188 write *tmp228 .display ".polys"
-    * label *label157
   189 set .recoEntered false
   190 set .lastRecoProgress 0
   191 jump *label67 always
 
   265 op mul *tmp236 *tmp235 1000
   266 op add *tmp237 282 *tmp236
   267 write *tmp237 .bank *tmp232
-    * label *label169
   268 op add *tmp229 .megas 1
   269 set .megas *tmp229
   270 write *tmp229 .display ".megas"

Final code before resolving virtual instructions:

    0:  jump *label8 always 0 0                                      CoreController.mnd: #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
        label *label8                                                ...
    3:  set .finished false                                          CoreController.mnd: remote var
    4:  set .flares 0                                                ...
    5:  set .monos 0                                                 ...
    6:  set .polys 1                                                 ...
    7:  set .megas 0                                                 ...
    8:  set .pressTarget 20                                          ...
    9:  set .smelterTarget 20                                        ...
   10:  set .kilnTarget 20                                           ...
   11:  set .flareTarget 0                                           ...
   12:  set .monoTarget 0                                            ...
   13:  set .polyTarget 0                                            ...
   14:  set .megaTarget 0                                            ...
   15:  set .powerTarget 1009                                        ...
   16:  set .lastProgress 0                                          CoreController.mnd: volatile var lastProgress = 0, lastRecoProgress = 0, lastMultiProgress = 0;
   17:  set .lastRecoProgress 0                                      ...
   18:  set .lastMultiProgress 0                                     ...
   19:  set .recoEntered false                                       CoreController.mnd: volatile var recoEntered = false;
   20:  set .canConsume true                                         CoreController.mnd: volatile var canConsume = true;
   21:  set .airFactoryTarget null                                   CoreController.mnd: var airFactoryTarget = null;
   22:  set *signature "eb9ab5a008f372ac:v1"                         CoreController.mnd: #set target = 8;
        label *label9                                                ...
   23:  jump *label13 notEqual .finished false                       CoreController.mnd: while !finished do
        label *label108                                              ...
   24:  set :backgroundProcess:ticks @tick                           CoreController.mnd: var ticks = @tick;
   25:  sensor :backgroundProcess:coreSilicon .core @silicon         CoreController.mnd: var coreSilicon = core.@silicon;
   26:  sensor :backgroundProcess:coreGraphite .core @graphite       CoreController.mnd: var coreGraphite = core.@graphite;
   27:  set *tmp34 ALQIJ^-silicon-smelter20                          CoreController.mnd: smelter2.enabled = smelter.enabled = coreSilicon < smelterTarget;
   28:  set *tmp36 ALMQJN-silicon-smelter4                           ...
   29:  op lessThan *tmp38 :backgroundProcess:coreSilicon .smelterTa ...
   30:  control enabled *tmp36 *tmp38 0 0 0                          ...
   31:  control enabled *tmp34 *tmp38 0 0 0                          ...
   32:  set *tmp39 AJEMJJ-graphite-press0                            CoreController.mnd: press.enabled = !multipress and coreGraphite < pressTarget;
   33:  op equal *tmp41 AKFRJ_-multi-press21 false                   ...
   34:  op lessThan *tmp42 :backgroundProcess:coreGraphite .pressTar ...
   35:  op land *tmp43 *tmp41 *tmp42                                 ...
   36:  control enabled *tmp39 *tmp43 0 0 0                          ...
   37:  set *tmp44 AKFRJ_-multi-press21                              CoreController.mnd: multipress.enabled = coreGraphite < pressTarget;
   38:  op lessThan *tmp46 :backgroundProcess:coreGraphite .pressTar ...
   39:  control enabled *tmp44 *tmp46 0 0 0                          ...
   40:  set *tmp47 ANOMJZ-kiln16                                     CoreController.mnd: kiln.enabled = core.@metaglass < kilnTarget;
   41:  sensor *tmp49 .core @metaglass                               ...
   42:  op lessThan *tmp50 *tmp49 .kilnTarget                        ...
   43:  control enabled *tmp47 *tmp50 0 0 0                          ...
   44:  sensor :backgroundProcess:power AJTJK-battery1 @totalPower  CoreController.mnd: var power = battery1.@totalPower;
   45:  jump *label14 equal AAKJ\-steam-generator18 false           CoreController.mnd: if steam_gen then
   46:  set *tmp53 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 9;
   47:  op lessThan *tmp55 :backgroundProcess:power 9                ...
   48:  control enabled *tmp53 *tmp55 0 0 0                          ...
   49:  set *tmp56 AAKJ\-steam-generator18                          CoreController.mnd: steam_gen.enabled = power < powerTarget;
   50:  op lessThan *tmp58 :backgroundProcess:power .powerTarget     ...
   51:  control enabled *tmp56 *tmp58 0 0 0                          ...
   52:  jump *label15 always 0 0                                     CoreController.mnd: if steam_gen then
        label *label14                                               ...
   53:  set *tmp59 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 809;
   54:  op lessThan *tmp61 :backgroundProcess:power 809              ...
   55:  control enabled *tmp59 *tmp61 0 0 0                          ...
        label *label15                                               CoreController.mnd: if steam_gen then
   56:  op lessThan *tmp62 .flares .flareTarget                      CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
   57:  op notEqual *tmp63 .airFactoryTarget @mono                   ...
   58:  op land *tmp64 *tmp62 *tmp63                                 ...
   59:  jump *label16 equal *tmp64 false                             ...
   60:  set .airFactoryTarget @flare                                 CoreController.mnd: display.nextFactory = airFactoryTarget = @flare;
   61:  write @flare .display ".nextFactory"                         ...
   62:  jump *label19 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
   63:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   64:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label19                                               CoreController.mnd: if !canConsume then
   65:  sensor *tmp70 AAKJ\-steam-generator18 @coal                 CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   66:  op mul *tmp71 5 AAKJ\-steam-generator18                     ...
   67:  jump *label21 greaterThanEq *tmp70 *tmp71                    ...
   68:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   69:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label21                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   70:  jump *label23 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
   71:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
   72:  jump *label24 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label23                                               ...
   73:  jump *label25 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
   74:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label25                                               CoreController.mnd: elsif power > 500 then
        label *label24                                               CoreController.mnd: if power < 200 then
   75:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = unit;
   76:  sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory1 CoreController.mnd: var factoryProgress = air_factory.@progress;
   77:  jump *label27 lessThanEq .lastProgress :handleAirFactory:fac CoreController.mnd: if lastProgress > factoryProgress then
   78:  read *tmp30 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
   79:  op sub *tmp232 *tmp30 1                                      ...
   80:  write *tmp232 .bank 511                                      ...
   81:  read *tmp235 .timer "time"                                   ...
   82:  op mul *tmp236 *tmp235 1000                                  ...
   83:  op add *tmp237 275 *tmp236                                   ...
   84:  write *tmp237 .bank *tmp232                                  ...
   85:  op add *tmp226 .flares 1                                     CoreController.mnd: when @flare then display.flares = ++flares;
   86:  set .flares *tmp226                                          ...
   87:  write *tmp226 .display ".flares"                             ...
   88:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
   89:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   90:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label27                                               CoreController.mnd: if lastProgress > factoryProgress then
   91:  set .lastProgress :handleAirFactory:factoryProgress          CoreController.mnd: lastProgress = factoryProgress;
   92:  sensor *tmp100 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
   93:  select *tmp102 greaterThan *tmp100 0 15 0                    ...
   94:  set *tmp103 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
   95:  sensor *tmp105 A¾BFLW-air-factory13 @silicon                 ...
   96:  select *tmp107 lessThan *tmp105 *tmp102 @silicon @coal       ...
   97:  control config *tmp103 *tmp107 0 0 0                         ...
   98:  jump *label17 always 0 0                                     CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
        label *label16                                               ...
   99:  op lessThan *tmp108 .monos .monoTarget                       CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
  100:  op notEqual *tmp109 .airFactoryTarget @flare                 ...
  101:  op land *tmp110 *tmp108 *tmp109                              ...
  102:  jump *label40 equal *tmp110 false                            ...
  103:  set .airFactoryTarget @mono                                  CoreController.mnd: display.nextFactory = airFactoryTarget = @mono;
  104:  write @mono .display ".nextFactory"                          ...
  105:  jump *label43 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
  106:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  107:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label43                                               CoreController.mnd: if !canConsume then
  108:  sensor *tmp116 AAKJ\-steam-generator18 @coal                CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  109:  op mul *tmp117 5 AAKJ\-steam-generator18                    ...
  110:  jump *label45 greaterThanEq *tmp116 *tmp117                  ...
  111:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  112:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label45                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  113:  jump *label47 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
  114:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  115:  jump *label48 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label47                                               ...
  116:  jump *label49 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
  117:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label49                                               CoreController.mnd: elsif power > 500 then
        label *label48                                               CoreController.mnd: if power < 200 then
  118:  control config A¾BFLW-air-factory13 @mono 0 0 0              CoreController.mnd: air_factory.config = unit;
  119:  sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factor CoreController.mnd: var factoryProgress = air_factory.@progress;
  120:  jump *label51 lessThanEq .lastProgress :handleAirFactory.1:f CoreController.mnd: if lastProgress > factoryProgress then
  121:  read *tmp30 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  122:  op sub *tmp232 *tmp30 1                                      ...
  123:  write *tmp232 .bank 511                                      ...
  124:  read *tmp235 .timer "time"                                   ...
  125:  op mul *tmp236 *tmp235 1000                                  ...
  126:  op add *tmp237 280 *tmp236                                   ...
  127:  write *tmp237 .bank *tmp232                                  ...
  128:  op add *tmp227 .monos 1                                      CoreController.mnd: when @mono  then display.monos = ++monos;
  129:  set .monos *tmp227                                           ...
  130:  write *tmp227 .display ".monos"                              ...
  131:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
  132:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  133:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label51                                               CoreController.mnd: if lastProgress > factoryProgress then
  134:  set .lastProgress :handleAirFactory.1:factoryProgress        CoreController.mnd: lastProgress = factoryProgress;
  135:  sensor *tmp138 .core @lead                                   CoreController.mnd: var leadLimit = core.@lead > 0 ? lead : 0;
  136:  select *tmp140 greaterThan *tmp138 0 15 0                    ...
  137:  sensor *tmp141 A¾BFLW-air-factory13 @lead                    CoreController.mnd: if air_factory.@lead < leadLimit then
  138:  jump *label58 greaterThanEq *tmp141 *tmp140                  ...
  139:  control config A©FJJU-unloader11 @lead 0 0 0                 CoreController.mnd: unloader2.config = @lead;
  140:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label58                                               CoreController.mnd: if air_factory.@lead < leadLimit then
  141:  sensor *tmp146 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
  142:  select *tmp148 greaterThan *tmp146 0 30 0                    ...
  143:  set *tmp149 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
  144:  sensor *tmp151 A¾BFLW-air-factory13 @silicon                 ...
  145:  select *tmp153 lessThan *tmp151 *tmp148 @silicon @coal       ...
  146:  control config *tmp149 *tmp153 0 0 0                         ...
  147:  jump *label41 always 0 0                                     CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
        label *label40                                               ...
  148:  set .airFactoryTarget null                                   CoreController.mnd: display.nextFactory = airFactoryTarget = null;
  149:  write null .display ".nextFactory"                           ...
  150:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  151:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = @flare;
  152:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
        label *label41                                               CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
        label *label17                                               CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
  153:  jump *label64 greaterThanEq .polys .polyTarget               CoreController.mnd: if polys < polyTarget then
  154:  write @poly .display ".nextAddReco"                          CoreController.mnd: display.nextAddReco = @poly;
  155:  sensor :backgroundProcess:recoProgress AÀF@Lc-additive-recon CoreController.mnd: var recoProgress = additive_rec.@progress;
  156:  jump *label66 lessThanEq .lastRecoProgress :backgroundProces CoreController.mnd: if lastRecoProgress > recoProgress then
  157:  read *tmp30 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  158:  op sub *tmp232 *tmp30 1                                      ...
  159:  write *tmp232 .bank 511                                      ...
  160:  read *tmp235 .timer "time"                                   ...
  161:  op mul *tmp236 *tmp235 1000                                  ...
  162:  op add *tmp237 281 *tmp236                                   ...
  163:  write *tmp237 .bank *tmp232                                  ...
  164:  op add *tmp228 .polys 1                                      CoreController.mnd: when @poly  then display.polys = ++polys;
  165:  set .polys *tmp228                                           ...
  166:  write *tmp228 .display ".polys"                              ...
  167:  set .recoEntered false                                       CoreController.mnd: recoEntered = false;
  168:  set .lastRecoProgress 0                                      CoreController.mnd: lastRecoProgress = 0;
  169:  jump *label67 always 0 0                                     CoreController.mnd: if lastRecoProgress > recoProgress then
        label *label66                                               ...
  170:  set .lastRecoProgress :backgroundProcess:recoProgress        CoreController.mnd: lastRecoProgress = recoProgress;
        label *label67                                               CoreController.mnd: if lastRecoProgress > recoProgress then
  171:  sensor :backgroundProcess:s AÀF@Lc-additive-reconstructor25  CoreController.mnd: var s = additive_rec.@silicon;
  172:  sensor :backgroundProcess:g AÀF@Lc-additive-reconstructor25  CoreController.mnd: var g = additive_rec.@graphite;
  173:  op greaterThanEq *tmp167 :backgroundProcess:s 40             CoreController.mnd: if s >= 40 and g >= 40 then
  174:  op greaterThanEq *tmp168 :backgroundProcess:g 40             ...
  175:  op land *tmp169 *tmp167 *tmp168                              ...
  176:  jump *label69 equal *tmp169 false                            ...
  177:  jump *label71 notEqual .recoEntered false                    CoreController.mnd: if not recoEntered then
  178:  sensor :backgroundProcess:x AÀF@Lc-additive-reconstructor25  CoreController.mnd: var x = additive_rec.@x;
  179:  sensor :backgroundProcess:y AÀF@Lc-additive-reconstructor25  CoreController.mnd: var y = additive_rec.@y;
  180:  ubind @mono                                                  CoreController.mnd: ubind(@mono);
        label *label73                                               CoreController.mnd: do
  181:  ucontrol move :backgroundProcess:x :backgroundProcess:y 0 0  CoreController.mnd: move(x, y);
  182:  ucontrol payEnter 0 0 0 0 0                                  CoreController.mnd: payEnter();
  183:  sensor *tmp175 @unit @dead                                   CoreController.mnd: while !@unit.@dead;
  184:  jump *label73 equal *tmp175 false                            CoreController.mnd: do
  185:  op sub *tmp177 .monos 1                                      CoreController.mnd: display.monos = --monos;
  186:  set .monos *tmp177                                           ...
  187:  write *tmp177 .display ".monos"                              ...
  188:  set .recoEntered true                                        CoreController.mnd: recoEntered = true;
        label *label71                                               CoreController.mnd: if not recoEntered then
  189:  control enabled A{HDJb-inverted-sorter24 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  190:  jump *label65 always 0 0                                     CoreController.mnd: if s >= 40 and g >= 40 then
        label *label69                                               ...
  191:  op greaterThan *tmp180 :backgroundProcess:coreSilicon .silic CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
  192:  op mul *tmp181 40 *tmp180                                    ...
  193:  jump *label76 greaterThanEq :backgroundProcess:s *tmp181     ...
  194:  control config A©HFJa-unloader23 @silicon 0 0 0              CoreController.mnd: unloader4.config = @silicon;
  195:  control enabled A{HDJb-inverted-sorter24 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  196:  jump *label65 always 0 0                                     CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
        label *label76                                               ...
  197:  op greaterThan *tmp189 :backgroundProcess:coreGraphite .grap CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
  198:  op mul *tmp190 40 *tmp189                                    ...
  199:  jump *label78 greaterThanEq :backgroundProcess:g *tmp190     ...
  200:  control config A©HFJa-unloader23 @graphite 0 0 0             CoreController.mnd: unloader4.config = @graphite;
  201:  control enabled A{HDJb-inverted-sorter24 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  202:  jump *label65 always 0 0                                     CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
        label *label78                                               ...
  203:  control enabled A{HDJb-inverted-sorter24 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  204:  jump *label65 always 0 0                                     CoreController.mnd: if polys < polyTarget then
        label *label64                                               ...
  205:  write null .display ".nextAddReco"                           CoreController.mnd: display.nextAddReco = null;
  206:  control enabled A{HDJb-inverted-sorter24 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
        label *label65                                               CoreController.mnd: if polys < polyTarget then
  207:  jump *label80 equal AÁNBJd-multiplicative-reconstructor26 fa CoreController.mnd: if multiplicative_rec then
  208:  write @mega .display ".nextMultiReco"                        CoreController.mnd: display.nextMultiReco = @mega;
  209:  set :backgroundProcess:c @metaglass                          CoreController.mnd: c = @metaglass;
  210:  sensor *tmp203 AÁNBJd-multiplicative-reconstructor26 @metagl CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  211:  jump *label83 lessThan *tmp203 40                            ...
  212:  set :backgroundProcess:c @titanium                           CoreController.mnd: c = @titanium;
  213:  sensor *tmp206 .core @titanium                               CoreController.mnd: elsif core.@titanium and multiplicative_rec.@titanium < 80 then
  214:  sensor *tmp207 AÁNBJd-multiplicative-reconstructor26 @titani ...
  215:  op lessThan *tmp208 *tmp207 80                               ...
  216:  op land *tmp209 *tmp206 *tmp208                              ...
  217:  jump *label85 notEqual *tmp209 false                         ...
  218:  sensor *tmp211 .core @silicon                                CoreController.mnd: elsif core.@silicon and multiplicative_rec.@silicon < 130 then
  219:  sensor *tmp212 AÁNBJd-multiplicative-reconstructor26 @silico ...
  220:  op lessThan *tmp213 *tmp212 130                              ...
  221:  op land *tmp214 *tmp211 *tmp213                              ...
  222:  select :backgroundProcess:c notEqual *tmp214 false @silicon  ...
        label *label85                                               CoreController.mnd: elsif core.@titanium and multiplicative_rec.@titanium < 80 then
        label *label83                                               CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  223:  control config A©NHJX-unloader14 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader3.config = c;
  224:  control config A©HFJa-unloader23 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader4.config = c;
  225:  sensor :backgroundProcess:multiProgress AÁNBJd-multiplicativ CoreController.mnd: var multiProgress = multiplicative_rec.@progress;
  226:  jump *label88 lessThanEq .lastMultiProgress :backgroundProce CoreController.mnd: if lastMultiProgress > multiProgress then
  227:  write null .display ".nextMultiReco"                         CoreController.mnd: display.nextMultiReco = null;
  228:  read *tmp30 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  229:  op sub *tmp232 *tmp30 1                                      ...
  230:  write *tmp232 .bank 511                                      ...
  231:  read *tmp235 .timer "time"                                   ...
  232:  op mul *tmp236 *tmp235 1000                                  ...
  233:  op add *tmp237 282 *tmp236                                   ...
  234:  write *tmp237 .bank *tmp232                                  ...
  235:  op add *tmp229 .megas 1                                      CoreController.mnd: when @mega  then display.megas = ++megas;
  236:  set .megas *tmp229                                           ...
  237:  write *tmp229 .display ".megas"                              ...
  238:  set .lastMultiProgress 0                                     CoreController.mnd: lastMultiProgress = 0;
  239:  jump *label89 always 0 0                                     CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label88                                               ...
  240:  set .lastMultiProgress :backgroundProcess:multiProgress      CoreController.mnd: lastMultiProgress = multiProgress;
        label *label89                                               CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label80                                               CoreController.mnd: if multiplicative_rec then
  241:  op sub .loopTicks @tick :backgroundProcess:ticks             CoreController.mnd: loopTicks = @tick - ticks;
  242:  jump *label108 equal .finished false                         CoreController.mnd: while !finished do
        label *label13                                               ...
  243:  wait 1e12                                                    CoreController.mnd: #set target = 8;
  244:  jump *label9 always 0 0                                      ...
        label *label0                                                CoreController.mnd: remote void buildStart()
  245:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  246:  control enabled A{HDJb-inverted-sorter24 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  247:  set .canConsume false                                        CoreController.mnd: canConsume = false;
  248:  set :buildStart*finished true                                CoreController.mnd: remote void buildStart()
  249:  jump *label9 always 0 0                                      ...
        label *label1                                                CoreController.mnd: remote void buildStop()
  250:  set .canConsume true                                         CoreController.mnd: canConsume = true;
  251:  set :buildStop*finished true                                 CoreController.mnd: remote void buildStop()
  252:  jump *label9 always 0 0                                      ...


Performance: parsed in 672 ms, compiled in 286 ms, optimized in 722 ms, run in 26 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (24 steps):
The program didn't generate any output.
Execution exception at instruction 25: sensor :backgroundProcess:coreSilicon .core @silicon:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
