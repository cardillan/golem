   479 instructions before optimizations.
    44 instructions eliminated by Temp Variables Elimination (6 iterations).
     1 instructions eliminated by Case Expression Optimization.
    63 instructions eliminated by Dead Code Elimination (7 iterations).
     5 instructions eliminated by Jump Normalization (5 iterations).
    28 instructions eliminated by Jump Optimization (5 iterations).
    23 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     4 instructions modified by Expression Optimization (3 iterations).
    22 instructions eliminated by If Expression Optimization (4 iterations).
    41 instructions eliminated by Data Flow Optimization (4 passes, 15 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
    66 instructions added by Function Inlining (6 iterations).
     6 function calls inlined by Function Inlining.
     4 instructions eliminated by Jump Straightening (5 iterations).
    17 instructions updated by Jump Threading.
    50 instructions eliminated by Unreachable Code Elimination (2 iterations).
   264 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 715):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +62, benefit       76.6, efficiency      1.235
  * Inline function 'logUnit' defined at CoreController.mnd:47:1 size    -1, benefit       76.6, efficiency   Infinity (-5 instructions)
    Inline function 'log' defined at CoreController.mnd:43:1     size    -1, benefit       76.6, efficiency   Infinity
    Inline function call at CoreController.mnd:82:9              size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:82:9              size   +21, benefit       10.9, efficiency      0.521
    Inline function call at CoreController.mnd:156:17            size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:210:17            size   +21, benefit       21.9, efficiency      1.042
    Inline function call at CoreController.mnd:52:5              size    +3, benefit       76.6, efficiency     25.521
    Inline function call at CoreController.mnd:48:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 720):
    Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +65, benefit       76.6, efficiency      1.178
  * Inline function 'log' defined at CoreController.mnd:43:1     size    -1, benefit       76.6, efficiency   Infinity (-4 instructions)
    Inline function call at CoreController.mnd:82:9              size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:82:9              size   +22, benefit       10.9, efficiency      0.497
    Inline function call at CoreController.mnd:156:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:210:17            size   +22, benefit       21.9, efficiency      0.994
    Inline function call at CoreController.mnd:48:5              size    +6, benefit       76.6, efficiency     12.760

Pass 1: speed optimization selection (cost limit 724):
  * Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 size   +80, benefit       76.6, efficiency      0.957 (+70 instructions)
    Inline function call at CoreController.mnd:82:9              size   +27, benefit       21.9, efficiency      0.810
    Inline function call at CoreController.mnd:82:9              size   +27, benefit       10.9, efficiency      0.405
    Inline function call at CoreController.mnd:156:17            size   +27, benefit       21.9, efficiency      0.810
    Inline function call at CoreController.mnd:210:17            size   +27, benefit       21.9, efficiency      0.810

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
   502 setaddr :logUnit*retaddr *label94 (h:*label94)
   503 call *label5 *invalid :logUnit*retval (m:*label94) (h:*label94)
   504 label *label94
-    * set *tmp236 :factoryUnitFinished:unit
-    * jump *label97 equal *tmp236 @flare
+  505 jump *label97 equal :factoryUnitFinished:unit @flare
   506 jump *label96 always
   507 label *label97
   508 op add *tmp237 .flares 1
 
   511 set *tmp235 *tmp237
   512 jump *label95 always
   513 label *label96
-    * jump *label99 equal *tmp236 @mono
+  514 jump *label99 equal :factoryUnitFinished:unit @mono
   515 jump *label98 always
   516 label *label99
   517 op add *tmp238 .monos 1
 
   520 set *tmp235 *tmp238
   521 jump *label95 always
   522 label *label98
-    * jump *label101 equal *tmp236 @poly
+  523 jump *label101 equal :factoryUnitFinished:unit @poly
   524 jump *label100 always
   525 label *label101
   526 op add *tmp239 .polys 1
 
   529 set *tmp235 *tmp239
   530 jump *label95 always
   531 label *label100
-    * jump *label103 equal *tmp236 @mega
+  532 jump *label103 equal :factoryUnitFinished:unit @mega
   533 jump *label102 always
   534 label *label103
   535 op add *tmp240 .megas 1

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-41 instructions):
 
    62 set *tmp63 AXTLJm-pulverizer35
    63 op greaterThan *tmp65 :backgroundProcess:power 1000
    64 control enabled *tmp63 *tmp65
-    * set *tmp53 *tmp65
    65 jump *label15 always
    66 label *label14
    67 set *tmp66 AJRJM-combustion-generator3
    68 op lessThan *tmp68 :backgroundProcess:power 809
    69 control enabled *tmp66 *tmp68
-    * set *tmp53 *tmp68
    70 label *label15
    71 op lessThan *tmp69 .flares .flareTarget
    72 op notEqual *tmp70 .airFactoryTarget @mono
 
    83 set *tmp75 A©FJJU-unloader11
    84 control config *tmp75 @coal
    85 jump *label18 always
-    * set *tmp74 null
    86 jump *label20 always
    87 label *label19
-    * set *tmp74 null
    88 label *label20
    89 sensor *tmp77 AAKJ\-steam-generator18 @coal
    90 op mul *tmp78 5 AAKJ\-steam-generator18
 
    93 set *tmp81 A©FJJU-unloader11
    94 control config *tmp81 @coal
    95 jump *label18 always
-    * set *tmp80 null
    96 jump *label22 always
    97 label *label21
-    * set *tmp80 null
    98 label *label22
    99 op lessThan *tmp83 :handleAirFactory:power 200
   100 jump *label23 equal *tmp83 false
   101 set *tmp85 A¾BFLW-air-factory13
   102 control enabled *tmp85 false
-    * set *tmp84 false
   103 jump *label24 always
   104 label *label23
   105 op greaterThan *tmp87 :handleAirFactory:power 500
 
   111 label *label25
   112 set *tmp88 null
   113 label *label26
-    * set *tmp84 *tmp88
   114 label *label24
   115 set *tmp91 A¾BFLW-air-factory13
   116 control config *tmp91 :handleAirFactory:unit
 
   126 set *tmp96 A©FJJU-unloader11
   127 control config *tmp96 @coal
   128 jump *label18 always
-    * set *tmp95 null
   129 jump *label28 always
   130 label *label27
-    * set *tmp95 null
   131 label *label28
   132 set .lastProgress :handleAirFactory:factoryProgress
   133 jump *label30 equal :handleAirFactory:lead false
 
   151 label *label34
   152 set *tmp104 null
   153 label *label35
-    * set *tmp98 *tmp104
   154 jump *label31 always
   155 label *label30
-    * set *tmp98 null
   156 label *label31
   157 sensor *tmp107 .core @silicon
   158 op greaterThan *tmp108 *tmp107 0
 
   174 label *label39
   175 control config *tmp110 *tmp114
   176 label *label18
-    * set *tmp72 null
   177 jump *label17 always
   178 label *label16
   179 op lessThan *tmp115 .monos .monoTarget
 
   191 set *tmp121 A©FJJU-unloader11
   192 control config *tmp121 @coal
   193 jump *label42 always
-    * set *tmp120 null
   194 jump *label44 always
   195 label *label43
-    * set *tmp120 null
   196 label *label44
   197 sensor *tmp123 AAKJ\-steam-generator18 @coal
   198 op mul *tmp124 5 AAKJ\-steam-generator18
 
   201 set *tmp127 A©FJJU-unloader11
   202 control config *tmp127 @coal
   203 jump *label42 always
-    * set *tmp126 null
   204 jump *label46 always
   205 label *label45
-    * set *tmp126 null
   206 label *label46
   207 op lessThan *tmp129 :handleAirFactory.1:power 200
   208 jump *label47 equal *tmp129 false
   209 set *tmp131 A¾BFLW-air-factory13
   210 control enabled *tmp131 false
-    * set *tmp130 false
   211 jump *label48 always
   212 label *label47
   213 op greaterThan *tmp133 :handleAirFactory.1:power 500
 
   219 label *label49
   220 set *tmp134 null
   221 label *label50
-    * set *tmp130 *tmp134
   222 label *label48
   223 set *tmp137 A¾BFLW-air-factory13
   224 control config *tmp137 :handleAirFactory.1:unit
 
   234 set *tmp142 A©FJJU-unloader11
   235 control config *tmp142 @coal
   236 jump *label42 always
-    * set *tmp141 null
   237 jump *label52 always
   238 label *label51
-    * set *tmp141 null
   239 label *label52
   240 set .lastProgress :handleAirFactory.1:factoryProgress
   241 jump *label54 equal :handleAirFactory.1:lead false
 
   259 label *label58
   260 set *tmp150 null
   261 label *label59
-    * set *tmp144 *tmp150
   262 jump *label55 always
   263 label *label54
-    * set *tmp144 null
   264 label *label55
   265 sensor *tmp153 .core @silicon
   266 op greaterThan *tmp154 *tmp153 0
 
   295 control config *tmp165 @coal
   296 set *tmp118 @coal
   297 label *label41
-    * set *tmp72 *tmp118
   298 label *label17
   299 op lessThan *tmp167 .polys .polyTarget
   300 jump *label64 equal *tmp167 false
 
   309 label *label68
   310 set .recoEntered false
   311 set .lastRecoProgress 0
-    * set *tmp171 0
   312 jump *label67 always
   313 label *label66
   314 set .lastRecoProgress :backgroundProcess:recoProgress
-    * set *tmp171 :backgroundProcess:recoProgress
   315 label *label67
   316 sensor *tmp172 AÀF@Lb-additive-reconstructor24 @silicon
   317 set :backgroundProcess:s *tmp172
 
   340 set .monos *tmp184
   341 write *tmp184 .display ".monos"
   342 set .recoEntered true
-    * set *tmp179 true
   343 jump *label72 always
   344 label *label71
-    * set *tmp179 null
   345 label *label72
   346 set *tmp185 A{HDJa-inverted-sorter23
   347 control enabled *tmp185 false
 
   380 label *label77
   381 set *tmp177 *tmp190
   382 label *label70
-    * set *tmp168 *tmp177
   383 jump *label65 always
   384 label *label64
   385 write null .display ".nextAddReco"
   386 set *tmp207 A{HDJa-inverted-sorter23
   387 control enabled *tmp207 false
-    * set *tmp168 false
   388 label *label65
   389 jump *label80 equal AÁNBJc-multiplicative-reconstructor25 false
   390 write @mega .display ".nextMultiReco"
 
   393 op lessThan *tmp211 *tmp210 40
   394 jump *label82 equal *tmp211 false
   395 set :backgroundProcess:c @metaglass
-    * set *tmp212 :backgroundProcess:c
   396 jump *label83 always
   397 label *label82
   398 sensor *tmp213 .core @titanium
 
   418 label *label87
   419 set *tmp217 *tmp222
   420 label *label85
-    * set *tmp212 *tmp217
   421 label *label83
   422 set *tmp223 A©NHJX-unloader14
   423 control config *tmp223 :backgroundProcess:c
 
   443 set .smelterTarget 0
   444 set .pressTarget 0
   445 set .kilnTarget 0
-    * set *tmp231 0
   446 jump *label92 always
   447 label *label91
-    * set *tmp231 null
   448 label *label92
   449 set .lastMultiProgress :backgroundProcess:multiProgress
   450 set *tmp229 :backgroundProcess:multiProgress
   451 label *label89
-    * set *tmp209 *tmp229
   452 jump *label81 always
   453 label *label80
-    * set *tmp209 null
   454 label *label81
   455 op sub *tmp234 @tick :backgroundProcess:ticks
   456 set .loopTicks *tmp234
 
   472 op add *tmp237 .flares 1
   473 set .flares *tmp237
   474 write *tmp237 .display ".flares"
-    * set *tmp235 *tmp237
   475 jump *label95 always
   476 label *label96
   477 jump *label99 equal :factoryUnitFinished:unit @mono
 
   480 op add *tmp238 .monos 1
   481 set .monos *tmp238
   482 write *tmp238 .display ".monos"
-    * set *tmp235 *tmp238
   483 jump *label95 always
   484 label *label98
   485 jump *label101 equal :factoryUnitFinished:unit @poly
 
   488 op add *tmp239 .polys 1
   489 set .polys *tmp239
   490 write *tmp239 .display ".polys"
-    * set *tmp235 *tmp239
   491 jump *label95 always
   492 label *label100
   493 jump *label103 equal :factoryUnitFinished:unit @mega
 
   496 op add *tmp240 .megas 1
   497 set .megas *tmp240
   498 write *tmp240 .display ".megas"
-    * set *tmp235 *tmp240
   499 jump *label95 always
   500 label *label102
-    * set *tmp235 null
   501 label *label95
   502 label *label93
   503 return :factoryUnitFinished*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-16 instructions):
 
   106 jump *label25 equal *tmp87 false
   107 set *tmp89 A¾BFLW-air-factory13
   108 control enabled *tmp89 true
-    * set *tmp88 true
   109 jump *label26 always
   110 label *label25
-    * set *tmp88 null
   111 label *label26
   112 label *label24
   113 set *tmp91 A¾BFLW-air-factory13
 
   144 set *tmp105 A©FJJU-unloader11
   145 control config *tmp105 @lead
   146 jump *label18 always
-    * set *tmp104 null
   147 jump *label35 always
   148 label *label34
-    * set *tmp104 null
   149 label *label35
   150 jump *label31 always
   151 label *label30
 
   210 jump *label49 equal *tmp133 false
   211 set *tmp135 A¾BFLW-air-factory13
   212 control enabled *tmp135 true
-    * set *tmp134 true
   213 jump *label50 always
   214 label *label49
-    * set *tmp134 null
   215 label *label50
   216 label *label48
   217 set *tmp137 A¾BFLW-air-factory13
 
   248 set *tmp151 A©FJJU-unloader11
   249 control config *tmp151 @lead
   250 jump *label42 always
-    * set *tmp150 null
   251 jump *label59 always
   252 label *label58
-    * set *tmp150 null
   253 label *label59
   254 jump *label55 always
   255 label *label54
 
   274 label *label63
   275 control config *tmp156 *tmp160
   276 label *label42
-    * set *tmp118 null
   277 jump *label41 always
   278 label *label40
   279 set .airFactoryTarget null
 
   284 control config *tmp163 @flare
   285 set *tmp165 A©FJJU-unloader11
   286 control config *tmp165 @coal
-    * set *tmp118 @coal
   287 label *label41
   288 label *label17
   289 op lessThan *tmp167 .polys .polyTarget
 
   335 label *label72
   336 set *tmp185 A{HDJa-inverted-sorter23
   337 control enabled *tmp185 false
-    * set *tmp177 false
   338 jump *label70 always
   339 label *label69
   340 op greaterThan *tmp187 :backgroundProcess:coreSilicon .siliconReserve
 
   367 label *label79
   368 set *tmp190 *tmp199
   369 label *label77
-    * set *tmp177 *tmp190
   370 label *label70
   371 jump *label65 always
   372 label *label64
 
   389 op land *tmp216 *tmp213 *tmp215
   390 jump *label84 equal *tmp216 false
   391 set :backgroundProcess:c @titanium
-    * set *tmp217 :backgroundProcess:c
   392 jump *label85 always
   393 label *label84
   394 sensor *tmp218 .core @silicon
 
   403 set :backgroundProcess:c @coal
   404 set *tmp222 :backgroundProcess:c
   405 label *label87
-    * set *tmp217 *tmp222
   406 label *label85
   407 label *label83
   408 set *tmp223 A©NHJX-unloader14
 
   419 call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)
   420 label *label90
   421 set .lastMultiProgress 0
-    * set *tmp229 0
   422 jump *label89 always
   423 label *label88
   424 op greaterThan *tmp230 :backgroundProcess:multiProgress 0
 
   432 label *label91
   433 label *label92
   434 set .lastMultiProgress :backgroundProcess:multiProgress
-    * set *tmp229 :backgroundProcess:multiProgress
   435 label *label89
   436 jump *label81 always
   437 label *label80

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-4 instructions):
 
   346 set *tmp193 A{HDJa-inverted-sorter23
   347 set *tmp195 .canConsume
   348 control enabled *tmp193 *tmp195
-    * set *tmp190 *tmp195
   349 jump *label77 always
   350 label *label76
   351 op greaterThan *tmp196 :backgroundProcess:coreGraphite .graphiteReserve
 
   364 control enabled *tmp205 false
   365 set *tmp199 false
   366 label *label79
-    * set *tmp190 *tmp199
   367 label *label77
   368 label *label70
   369 jump *label65 always
 
   395 op land *tmp221 *tmp218 *tmp220
   396 jump *label86 equal *tmp221 false
   397 set :backgroundProcess:c @silicon
-    * set *tmp222 :backgroundProcess:c
   398 jump *label87 always
   399 label *label86
   400 set :backgroundProcess:c @coal
-    * set *tmp222 :backgroundProcess:c
   401 label *label87
   402 label *label85
   403 label *label83

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   357 set *tmp202 A{HDJa-inverted-sorter23
   358 set *tmp204 .canConsume
   359 control enabled *tmp202 *tmp204
-    * set *tmp199 *tmp204
   360 jump *label79 always
   361 label *label78
   362 set *tmp205 A{HDJa-inverted-sorter23
   363 control enabled *tmp205 false
-    * set *tmp199 false
   364 label *label79
   365 label *label77
   366 label *label70

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-44 instructions):
 
    26 op equal *tmp32 .finished false
    27 jump *label13 equal *tmp32 false
    28 set :backgroundProcess:ticks @tick
-    * sensor *tmp33 .core @silicon
-    * set :backgroundProcess:coreSilicon *tmp33
-    * sensor *tmp34 .core @graphite
-    * set :backgroundProcess:coreGraphite *tmp34
+   29 sensor :backgroundProcess:coreSilicon .core @silicon
+   30 sensor :backgroundProcess:coreGraphite .core @graphite
    31 set *tmp35 ALQIJ]-silicon-smelter19
    32 set *tmp37 ALMQJN-silicon-smelter4
    33 op lessThan *tmp39 :backgroundProcess:coreSilicon .smelterTarget
 
    45 sensor *tmp50 .core @metaglass
    46 op lessThan *tmp51 *tmp50 .kilnTarget
    47 control enabled *tmp48 *tmp51
-    * sensor *tmp52 AJTJK-battery1 @totalPower
-    * set :backgroundProcess:power *tmp52
+   48 sensor :backgroundProcess:power AJTJK-battery1 @totalPower
    49 jump *label14 equal AAKJ\-steam-generator18 false
    50 set *tmp54 AJRJM-combustion-generator3
    51 op lessThan *tmp56 :backgroundProcess:power 9
 
    77 set :handleAirFactory:lead 0
    78 op equal *tmp73 .canConsume false
    79 jump *label19 equal *tmp73 false
-    * set *tmp75 A©FJJU-unloader11
-    * control config *tmp75 @coal
+   80 control config A©FJJU-unloader11 @coal
    81 jump *label18 always
    82 jump *label20 always
    83 label *label19
 
    86 op mul *tmp78 5 AAKJ\-steam-generator18
    87 op lessThan *tmp79 *tmp77 *tmp78
    88 jump *label21 equal *tmp79 false
-    * set *tmp81 A©FJJU-unloader11
-    * control config *tmp81 @coal
+   89 control config A©FJJU-unloader11 @coal
    90 jump *label18 always
    91 jump *label22 always
    92 label *label21
    93 label *label22
    94 op lessThan *tmp83 :handleAirFactory:power 200
    95 jump *label23 equal *tmp83 false
-    * set *tmp85 A¾BFLW-air-factory13
-    * control enabled *tmp85 false
+   96 control enabled A¾BFLW-air-factory13 false
    97 jump *label24 always
    98 label *label23
    99 op greaterThan *tmp87 :handleAirFactory:power 500
   100 jump *label25 equal *tmp87 false
-    * set *tmp89 A¾BFLW-air-factory13
-    * control enabled *tmp89 true
+  101 control enabled A¾BFLW-air-factory13 true
   102 jump *label26 always
   103 label *label25
   104 label *label26
   105 label *label24
-    * set *tmp91 A¾BFLW-air-factory13
-    * control config *tmp91 :handleAirFactory:unit
-    * sensor *tmp93 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory:factoryProgress *tmp93
+  106 control config A¾BFLW-air-factory13 :handleAirFactory:unit
+  107 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   108 op greaterThan *tmp94 .lastProgress :handleAirFactory:factoryProgress
   109 jump *label27 equal *tmp94 false
   110 set :factoryUnitFinished:unit :handleAirFactory:unit
 
   112 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
   113 label *label29
   114 set .lastProgress 0
-    * set *tmp96 A©FJJU-unloader11
-    * control config *tmp96 @coal
+  115 control config A©FJJU-unloader11 @coal
   116 jump *label18 always
   117 jump *label28 always
   118 label *label27
 
   131 sensor *tmp102 A¾BFLW-air-factory13 @lead
   132 op lessThan *tmp103 *tmp102 :handleAirFactory:leadLimit
   133 jump *label34 equal *tmp103 false
-    * set *tmp105 A©FJJU-unloader11
-    * control config *tmp105 @lead
+  134 control config A©FJJU-unloader11 @lead
   135 jump *label18 always
   136 jump *label35 always
   137 label *label34
 
   173 set :handleAirFactory.1:lead 15
   174 op equal *tmp119 .canConsume false
   175 jump *label43 equal *tmp119 false
-    * set *tmp121 A©FJJU-unloader11
-    * control config *tmp121 @coal
+  176 control config A©FJJU-unloader11 @coal
   177 jump *label42 always
   178 jump *label44 always
   179 label *label43
 
   182 op mul *tmp124 5 AAKJ\-steam-generator18
   183 op lessThan *tmp125 *tmp123 *tmp124
   184 jump *label45 equal *tmp125 false
-    * set *tmp127 A©FJJU-unloader11
-    * control config *tmp127 @coal
+  185 control config A©FJJU-unloader11 @coal
   186 jump *label42 always
   187 jump *label46 always
   188 label *label45
   189 label *label46
   190 op lessThan *tmp129 :handleAirFactory.1:power 200
   191 jump *label47 equal *tmp129 false
-    * set *tmp131 A¾BFLW-air-factory13
-    * control enabled *tmp131 false
+  192 control enabled A¾BFLW-air-factory13 false
   193 jump *label48 always
   194 label *label47
   195 op greaterThan *tmp133 :handleAirFactory.1:power 500
   196 jump *label49 equal *tmp133 false
-    * set *tmp135 A¾BFLW-air-factory13
-    * control enabled *tmp135 true
+  197 control enabled A¾BFLW-air-factory13 true
   198 jump *label50 always
   199 label *label49
   200 label *label50
   201 label *label48
-    * set *tmp137 A¾BFLW-air-factory13
-    * control config *tmp137 :handleAirFactory.1:unit
-    * sensor *tmp139 A¾BFLW-air-factory13 @progress
-    * set :handleAirFactory.1:factoryProgress *tmp139
+  202 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  203 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   204 op greaterThan *tmp140 .lastProgress :handleAirFactory.1:factoryProgress
   205 jump *label51 equal *tmp140 false
   206 set :factoryUnitFinished:unit :handleAirFactory.1:unit
 
   208 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
   209 label *label53
   210 set .lastProgress 0
-    * set *tmp142 A©FJJU-unloader11
-    * control config *tmp142 @coal
+  211 control config A©FJJU-unloader11 @coal
   212 jump *label42 always
   213 jump *label52 always
   214 label *label51
 
   227 sensor *tmp148 A¾BFLW-air-factory13 @lead
   228 op lessThan *tmp149 *tmp148 :handleAirFactory.1:leadLimit
   229 jump *label58 equal *tmp149 false
-    * set *tmp151 A©FJJU-unloader11
-    * control config *tmp151 @lead
+  230 control config A©FJJU-unloader11 @lead
   231 jump *label42 always
   232 jump *label59 always
   233 label *label58
 
   259 label *label40
   260 set .airFactoryTarget null
   261 write .airFactoryTarget .display ".nextFactory"
-    * set *tmp161 A¾BFLW-air-factory13
-    * control enabled *tmp161 false
-    * set *tmp163 A¾BFLW-air-factory13
-    * control config *tmp163 @flare
-    * set *tmp165 A©FJJU-unloader11
-    * control config *tmp165 @coal
+  262 control enabled A¾BFLW-air-factory13 false
+  263 control config A¾BFLW-air-factory13 @flare
+  264 control config A©FJJU-unloader11 @coal
   265 label *label41
   266 label *label17
   267 op lessThan *tmp167 .polys .polyTarget
   268 jump *label64 equal *tmp167 false
   269 write @poly .display ".nextAddReco"
-    * sensor *tmp169 AÀF@Lb-additive-reconstructor24 @progress
-    * set :backgroundProcess:recoProgress *tmp169
+  270 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   271 op greaterThan *tmp170 .lastRecoProgress :backgroundProcess:recoProgress
   272 jump *label66 equal *tmp170 false
   273 set :factoryUnitFinished:unit @poly
 
   280 label *label66
   281 set .lastRecoProgress :backgroundProcess:recoProgress
   282 label *label67
-    * sensor *tmp172 AÀF@Lb-additive-reconstructor24 @silicon
-    * set :backgroundProcess:s *tmp172
-    * sensor *tmp173 AÀF@Lb-additive-reconstructor24 @graphite
-    * set :backgroundProcess:g *tmp173
+  283 sensor :backgroundProcess:s AÀF@Lb-additive-reconstructor24 @silicon
+  284 sensor :backgroundProcess:g AÀF@Lb-additive-reconstructor24 @graphite
   285 op greaterThanEq *tmp174 :backgroundProcess:s 40
   286 op greaterThanEq *tmp175 :backgroundProcess:g 40
   287 op land *tmp176 *tmp174 *tmp175
   288 jump *label69 equal *tmp176 false
   289 op equal *tmp178 .recoEntered false
   290 jump *label71 equal *tmp178 false
-    * sensor *tmp180 AÀF@Lb-additive-reconstructor24 @x
-    * set :backgroundProcess:x *tmp180
-    * sensor *tmp181 AÀF@Lb-additive-reconstructor24 @y
-    * set :backgroundProcess:y *tmp181
+  291 sensor :backgroundProcess:x AÀF@Lb-additive-reconstructor24 @x
+  292 sensor :backgroundProcess:y AÀF@Lb-additive-reconstructor24 @y
   293 ubind @mono
   294 label *label73
   295 ucontrol move :backgroundProcess:x :backgroundProcess:y
 
   306 jump *label72 always
   307 label *label71
   308 label *label72
-    * set *tmp185 A{HDJa-inverted-sorter23
-    * control enabled *tmp185 false
+  309 control enabled A{HDJa-inverted-sorter23 false
   310 jump *label70 always
   311 label *label69
   312 op greaterThan *tmp187 :backgroundProcess:coreSilicon .siliconReserve
   313 op mul *tmp188 40 *tmp187
   314 op lessThan *tmp189 :backgroundProcess:s *tmp188
   315 jump *label76 equal *tmp189 false
-    * set *tmp191 A©HFJ_-unloader21
-    * control config *tmp191 @silicon
-    * set *tmp193 A{HDJa-inverted-sorter23
-    * set *tmp195 .canConsume
-    * control enabled *tmp193 *tmp195
+  316 control config A©HFJ_-unloader21 @silicon
+  317 control enabled A{HDJa-inverted-sorter23 .canConsume
   318 jump *label77 always
   319 label *label76
   320 op greaterThan *tmp196 :backgroundProcess:coreGraphite .graphiteReserve
   321 op mul *tmp197 40 *tmp196
   322 op lessThan *tmp198 :backgroundProcess:g *tmp197
   323 jump *label78 equal *tmp198 false
-    * set *tmp200 A©HFJ_-unloader21
-    * control config *tmp200 @graphite
-    * set *tmp202 A{HDJa-inverted-sorter23
-    * set *tmp204 .canConsume
-    * control enabled *tmp202 *tmp204
+  324 control config A©HFJ_-unloader21 @graphite
+  325 control enabled A{HDJa-inverted-sorter23 .canConsume
   326 jump *label79 always
   327 label *label78
-    * set *tmp205 A{HDJa-inverted-sorter23
-    * control enabled *tmp205 false
+  328 control enabled A{HDJa-inverted-sorter23 false
   329 label *label79
   330 label *label77
   331 label *label70
   332 jump *label65 always
   333 label *label64
   334 write null .display ".nextAddReco"
-    * set *tmp207 A{HDJa-inverted-sorter23
-    * control enabled *tmp207 false
+  335 control enabled A{HDJa-inverted-sorter23 false
   336 label *label65
   337 jump *label80 equal AÁNBJc-multiplicative-reconstructor25 false
   338 write @mega .display ".nextMultiReco"
 
   363 label *label87
   364 label *label85
   365 label *label83
-    * set *tmp223 A©NHJX-unloader14
-    * control config *tmp223 :backgroundProcess:c
-    * set *tmp225 A©HFJ_-unloader21
-    * control config *tmp225 :backgroundProcess:c
-    * sensor *tmp227 AÁNBJc-multiplicative-reconstructor25 @progress
-    * set :backgroundProcess:multiProgress *tmp227
+  366 control config A©NHJX-unloader14 :backgroundProcess:c
+  367 control config A©HFJ_-unloader21 :backgroundProcess:c
+  368 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
   369 op greaterThan *tmp228 .lastMultiProgress :backgroundProcess:multiProgress
   370 jump *label88 equal *tmp228 false
   371 write null .display ".nextMultiReco"
 
   378 label *label88
   379 op greaterThan *tmp230 :backgroundProcess:multiProgress 0
   380 jump *label91 equal *tmp230 false
-    * set *tmp232 A©RPJg-unloader29
-    * control enabled *tmp232 false
+  381 control enabled A©RPJg-unloader29 false
   382 set .smelterTarget 0
   383 set .pressTarget 0
   384 set .kilnTarget 0
 
   390 jump *label81 always
   391 label *label80
   392 label *label81
-    * op sub *tmp234 @tick :backgroundProcess:ticks
-    * set .loopTicks *tmp234
+  393 op sub .loopTicks @tick :backgroundProcess:ticks
   394 label *label12
   395 jump *label11 always
   396 label *label13
 
   441 end
   442 label *label5
   443 sensor *tmp241 :logUnit:unit @id
-    * op add *tmp242 @blockCount *tmp241
-    * set :log:encodedId *tmp242
+  444 op add :log:encodedId @blockCount *tmp241
   445 setaddr :log*retaddr *label105 (h:*label105)
   446 call *label4 *invalid :log*retval (m:*label105) (h:*label105)
   447 label *label105
 
   461 return :log*retaddr
   462 end
   463 label *label0
-    * set *tmp275 A©FJJU-unloader11
-    * control config *tmp275 @coal
-    * set *tmp277 A{HDJa-inverted-sorter23
-    * control enabled *tmp277 false
+  464 control config A©FJJU-unloader11 @coal
+  465 control enabled A{HDJa-inverted-sorter23 false
   466 set .canConsume false
   467 label *label108
   468 set :buildStart*finished true

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-4 instructions):
 
   403 setaddr :logUnit*retaddr *label94 (h:*label94)
   404 call *label5 *invalid :logUnit*retval (m:*label94) (h:*label94)
   405 label *label94
-    * jump *label97 equal :factoryUnitFinished:unit @flare
-    * jump *label96 always
+  406 jump *label96 notEqual :factoryUnitFinished:unit @flare
   407 label *label97
   408 op add *tmp237 .flares 1
   409 set .flares *tmp237
   410 write *tmp237 .display ".flares"
   411 jump *label95 always
   412 label *label96
-    * jump *label99 equal :factoryUnitFinished:unit @mono
-    * jump *label98 always
+  413 jump *label98 notEqual :factoryUnitFinished:unit @mono
   414 label *label99
   415 op add *tmp238 .monos 1
   416 set .monos *tmp238
   417 write *tmp238 .display ".monos"
   418 jump *label95 always
   419 label *label98
-    * jump *label101 equal :factoryUnitFinished:unit @poly
-    * jump *label100 always
+  420 jump *label100 notEqual :factoryUnitFinished:unit @poly
   421 label *label101
   422 op add *tmp239 .polys 1
   423 set .polys *tmp239
   424 write *tmp239 .display ".polys"
   425 jump *label95 always
   426 label *label100
-    * jump *label103 equal :factoryUnitFinished:unit @mega
-    * jump *label102 always
+  427 jump *label102 notEqual :factoryUnitFinished:unit @mega
   428 label *label103
   429 op add *tmp240 .megas 1
   430 set .megas *tmp240

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-28 instructions):
 
    23 set *signature "eb9ab5a008f372ac:v1"
    24 label *label9
    25 label *label11
-    * op equal *tmp32 .finished false
-    * jump *label13 equal *tmp32 false
+   26 jump *label13 notEqual .finished false
    27 set :backgroundProcess:ticks @tick
    28 sensor :backgroundProcess:coreSilicon .core @silicon
    29 sensor :backgroundProcess:coreGraphite .core @graphite
 
    74 set :handleAirFactory:power :backgroundProcess:power
    75 set :handleAirFactory:silicon 15
    76 set :handleAirFactory:lead 0
-    * op equal *tmp73 .canConsume false
-    * jump *label19 equal *tmp73 false
+   77 jump *label19 notEqual .canConsume false
    78 control config A©FJJU-unloader11 @coal
    79 jump *label18 always
    80 jump *label20 always
 
    82 label *label20
    83 sensor *tmp77 AAKJ\-steam-generator18 @coal
    84 op mul *tmp78 5 AAKJ\-steam-generator18
-    * op lessThan *tmp79 *tmp77 *tmp78
-    * jump *label21 equal *tmp79 false
+   85 jump *label21 greaterThanEq *tmp77 *tmp78
    86 control config A©FJJU-unloader11 @coal
    87 jump *label18 always
    88 jump *label22 always
    89 label *label21
    90 label *label22
-    * op lessThan *tmp83 :handleAirFactory:power 200
-    * jump *label23 equal *tmp83 false
+   91 jump *label23 greaterThanEq :handleAirFactory:power 200
    92 control enabled A¾BFLW-air-factory13 false
    93 jump *label24 always
    94 label *label23
-    * op greaterThan *tmp87 :handleAirFactory:power 500
-    * jump *label25 equal *tmp87 false
+   95 jump *label25 lessThanEq :handleAirFactory:power 500
    96 control enabled A¾BFLW-air-factory13 true
    97 jump *label26 always
    98 label *label25
 
   100 label *label24
   101 control config A¾BFLW-air-factory13 :handleAirFactory:unit
   102 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp94 .lastProgress :handleAirFactory:factoryProgress
-    * jump *label27 equal *tmp94 false
+  103 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
   104 set :factoryUnitFinished:unit :handleAirFactory:unit
   105 setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
   106 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
 
   114 set .lastProgress :handleAirFactory:factoryProgress
   115 jump *label30 equal :handleAirFactory:lead false
   116 sensor *tmp99 .core @lead
-    * op greaterThan *tmp100 *tmp99 0
-    * jump *label32 equal *tmp100 false
+  117 jump *label32 lessThanEq *tmp99 0
   118 set *tmp101 :handleAirFactory:lead
   119 jump *label33 always
   120 label *label32
 
   122 label *label33
   123 set :handleAirFactory:leadLimit *tmp101
   124 sensor *tmp102 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp103 *tmp102 :handleAirFactory:leadLimit
-    * jump *label34 equal *tmp103 false
+  125 jump *label34 greaterThanEq *tmp102 :handleAirFactory:leadLimit
   126 control config A©FJJU-unloader11 @lead
   127 jump *label18 always
   128 jump *label35 always
 
   132 label *label30
   133 label *label31
   134 sensor *tmp107 .core @silicon
-    * op greaterThan *tmp108 *tmp107 0
-    * jump *label36 equal *tmp108 false
+  135 jump *label36 lessThanEq *tmp107 0
   136 set *tmp109 :handleAirFactory:silicon
   137 jump *label37 always
   138 label *label36
 
   141 set :handleAirFactory:siliconLimit *tmp109
   142 set *tmp110 A©FJJU-unloader11
   143 sensor *tmp112 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp113 *tmp112 :handleAirFactory:siliconLimit
-    * jump *label38 equal *tmp113 false
+  144 jump *label38 greaterThanEq *tmp112 :handleAirFactory:siliconLimit
   145 set *tmp114 @silicon
   146 jump *label39 always
   147 label *label38
 
   161 set :handleAirFactory.1:power :backgroundProcess:power
   162 set :handleAirFactory.1:silicon 30
   163 set :handleAirFactory.1:lead 15
-    * op equal *tmp119 .canConsume false
-    * jump *label43 equal *tmp119 false
+  164 jump *label43 notEqual .canConsume false
   165 control config A©FJJU-unloader11 @coal
   166 jump *label42 always
   167 jump *label44 always
 
   169 label *label44
   170 sensor *tmp123 AAKJ\-steam-generator18 @coal
   171 op mul *tmp124 5 AAKJ\-steam-generator18
-    * op lessThan *tmp125 *tmp123 *tmp124
-    * jump *label45 equal *tmp125 false
+  172 jump *label45 greaterThanEq *tmp123 *tmp124
   173 control config A©FJJU-unloader11 @coal
   174 jump *label42 always
   175 jump *label46 always
   176 label *label45
   177 label *label46
-    * op lessThan *tmp129 :handleAirFactory.1:power 200
-    * jump *label47 equal *tmp129 false
+  178 jump *label47 greaterThanEq :handleAirFactory.1:power 200
   179 control enabled A¾BFLW-air-factory13 false
   180 jump *label48 always
   181 label *label47
-    * op greaterThan *tmp133 :handleAirFactory.1:power 500
-    * jump *label49 equal *tmp133 false
+  182 jump *label49 lessThanEq :handleAirFactory.1:power 500
   183 control enabled A¾BFLW-air-factory13 true
   184 jump *label50 always
   185 label *label49
 
   187 label *label48
   188 control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
   189 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
-    * op greaterThan *tmp140 .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label51 equal *tmp140 false
+  190 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   191 set :factoryUnitFinished:unit :handleAirFactory.1:unit
   192 setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
   193 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
 
   201 set .lastProgress :handleAirFactory.1:factoryProgress
   202 jump *label54 equal :handleAirFactory.1:lead false
   203 sensor *tmp145 .core @lead
-    * op greaterThan *tmp146 *tmp145 0
-    * jump *label56 equal *tmp146 false
+  204 jump *label56 lessThanEq *tmp145 0
   205 set *tmp147 :handleAirFactory.1:lead
   206 jump *label57 always
   207 label *label56
 
   209 label *label57
   210 set :handleAirFactory.1:leadLimit *tmp147
   211 sensor *tmp148 A¾BFLW-air-factory13 @lead
-    * op lessThan *tmp149 *tmp148 :handleAirFactory.1:leadLimit
-    * jump *label58 equal *tmp149 false
+  212 jump *label58 greaterThanEq *tmp148 :handleAirFactory.1:leadLimit
   213 control config A©FJJU-unloader11 @lead
   214 jump *label42 always
   215 jump *label59 always
 
   219 label *label54
   220 label *label55
   221 sensor *tmp153 .core @silicon
-    * op greaterThan *tmp154 *tmp153 0
-    * jump *label60 equal *tmp154 false
+  222 jump *label60 lessThanEq *tmp153 0
   223 set *tmp155 :handleAirFactory.1:silicon
   224 jump *label61 always
   225 label *label60
 
   228 set :handleAirFactory.1:siliconLimit *tmp155
   229 set *tmp156 A©FJJU-unloader11
   230 sensor *tmp158 A¾BFLW-air-factory13 @silicon
-    * op lessThan *tmp159 *tmp158 :handleAirFactory.1:siliconLimit
-    * jump *label62 equal *tmp159 false
+  231 jump *label62 greaterThanEq *tmp158 :handleAirFactory.1:siliconLimit
   232 set *tmp160 @silicon
   233 jump *label63 always
   234 label *label62
 
   245 control config A©FJJU-unloader11 @coal
   246 label *label41
   247 label *label17
-    * op lessThan *tmp167 .polys .polyTarget
-    * jump *label64 equal *tmp167 false
+  248 jump *label64 greaterThanEq .polys .polyTarget
   249 write @poly .display ".nextAddReco"
   250 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
-    * op greaterThan *tmp170 .lastRecoProgress :backgroundProcess:recoProgress
-    * jump *label66 equal *tmp170 false
+  251 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   252 set :factoryUnitFinished:unit @poly
   253 setaddr :factoryUnitFinished*retaddr *label68 (h:*label68)
   254 call *label6 *invalid :factoryUnitFinished*retval (m:*label68) (h:*label68)
 
   265 op greaterThanEq *tmp175 :backgroundProcess:g 40
   266 op land *tmp176 *tmp174 *tmp175
   267 jump *label69 equal *tmp176 false
-    * op equal *tmp178 .recoEntered false
-    * jump *label71 equal *tmp178 false
+  268 jump *label71 notEqual .recoEntered false
   269 sensor :backgroundProcess:x AÀF@Lb-additive-reconstructor24 @x
   270 sensor :backgroundProcess:y AÀF@Lb-additive-reconstructor24 @y
   271 ubind @mono
 
   274 ucontrol payEnter
   275 label *label74
   276 sensor *tmp182 @unit @dead
-    * op equal *tmp183 *tmp182 false
-    * jump *label73 notEqual *tmp183 false
+  277 jump *label73 equal *tmp182 false
   278 label *label75
   279 op sub *tmp184 .monos 1
   280 set .monos *tmp184
 
   288 label *label69
   289 op greaterThan *tmp187 :backgroundProcess:coreSilicon .siliconReserve
   290 op mul *tmp188 40 *tmp187
-    * op lessThan *tmp189 :backgroundProcess:s *tmp188
-    * jump *label76 equal *tmp189 false
+  291 jump *label76 greaterThanEq :backgroundProcess:s *tmp188
   292 control config A©HFJ_-unloader21 @silicon
   293 control enabled A{HDJa-inverted-sorter23 .canConsume
   294 jump *label77 always
   295 label *label76
   296 op greaterThan *tmp196 :backgroundProcess:coreGraphite .graphiteReserve
   297 op mul *tmp197 40 *tmp196
-    * op lessThan *tmp198 :backgroundProcess:g *tmp197
-    * jump *label78 equal *tmp198 false
+  298 jump *label78 greaterThanEq :backgroundProcess:g *tmp197
   299 control config A©HFJ_-unloader21 @graphite
   300 control enabled A{HDJa-inverted-sorter23 .canConsume
   301 jump *label79 always
 
   313 write @mega .display ".nextMultiReco"
   314 set :backgroundProcess:c null
   315 sensor *tmp210 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * op lessThan *tmp211 *tmp210 40
-    * jump *label82 equal *tmp211 false
+  316 jump *label82 greaterThanEq *tmp210 40
   317 set :backgroundProcess:c @metaglass
   318 jump *label83 always
   319 label *label82
 
   340 control config A©NHJX-unloader14 :backgroundProcess:c
   341 control config A©HFJ_-unloader21 :backgroundProcess:c
   342 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
-    * op greaterThan *tmp228 .lastMultiProgress :backgroundProcess:multiProgress
-    * jump *label88 equal *tmp228 false
+  343 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   344 write null .display ".nextMultiReco"
   345 set :factoryUnitFinished:unit @mega
   346 setaddr :factoryUnitFinished*retaddr *label90 (h:*label90)
 
   349 set .lastMultiProgress 0
   350 jump *label89 always
   351 label *label88
-    * op greaterThan *tmp230 :backgroundProcess:multiProgress 0
-    * jump *label91 equal *tmp230 false
+  352 jump *label91 lessThanEq :backgroundProcess:multiProgress 0
   353 control enabled A©RPJg-unloader29 false
   354 set .smelterTarget 0
   355 set .pressTarget 0

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-16 instructions):
 
    77 jump *label19 notEqual .canConsume false
    78 control config A©FJJU-unloader11 @coal
    79 jump *label18 always
-    * jump *label20 always
    80 label *label19
    81 label *label20
    82 sensor *tmp77 AAKJ\-steam-generator18 @coal
 
    84 jump *label21 greaterThanEq *tmp77 *tmp78
    85 control config A©FJJU-unloader11 @coal
    86 jump *label18 always
-    * jump *label22 always
    87 label *label21
    88 label *label22
    89 jump *label23 greaterThanEq :handleAirFactory:power 200
 
    92 label *label23
    93 jump *label25 lessThanEq :handleAirFactory:power 500
    94 control enabled A¾BFLW-air-factory13 true
-    * jump *label26 always
    95 label *label25
    96 label *label26
    97 label *label24
 
   105 set .lastProgress 0
   106 control config A©FJJU-unloader11 @coal
   107 jump *label18 always
-    * jump *label28 always
   108 label *label27
   109 label *label28
   110 set .lastProgress :handleAirFactory:factoryProgress
 
   121 jump *label34 greaterThanEq *tmp102 :handleAirFactory:leadLimit
   122 control config A©FJJU-unloader11 @lead
   123 jump *label18 always
-    * jump *label35 always
   124 label *label34
   125 label *label35
-    * jump *label31 always
   126 label *label30
   127 label *label31
   128 sensor *tmp107 .core @silicon
 
   158 jump *label43 notEqual .canConsume false
   159 control config A©FJJU-unloader11 @coal
   160 jump *label42 always
-    * jump *label44 always
   161 label *label43
   162 label *label44
   163 sensor *tmp123 AAKJ\-steam-generator18 @coal
 
   165 jump *label45 greaterThanEq *tmp123 *tmp124
   166 control config A©FJJU-unloader11 @coal
   167 jump *label42 always
-    * jump *label46 always
   168 label *label45
   169 label *label46
   170 jump *label47 greaterThanEq :handleAirFactory.1:power 200
 
   173 label *label47
   174 jump *label49 lessThanEq :handleAirFactory.1:power 500
   175 control enabled A¾BFLW-air-factory13 true
-    * jump *label50 always
   176 label *label49
   177 label *label50
   178 label *label48
 
   186 set .lastProgress 0
   187 control config A©FJJU-unloader11 @coal
   188 jump *label42 always
-    * jump *label52 always
   189 label *label51
   190 label *label52
   191 set .lastProgress :handleAirFactory.1:factoryProgress
 
   202 jump *label58 greaterThanEq *tmp148 :handleAirFactory.1:leadLimit
   203 control config A©FJJU-unloader11 @lead
   204 jump *label42 always
-    * jump *label59 always
   205 label *label58
   206 label *label59
-    * jump *label55 always
   207 label *label54
   208 label *label55
   209 sensor *tmp153 .core @silicon
 
   268 set .monos *tmp184
   269 write *tmp184 .display ".monos"
   270 set .recoEntered true
-    * jump *label72 always
   271 label *label71
   272 label *label72
   273 control enabled A{HDJa-inverted-sorter23 false
 
   341 set .smelterTarget 0
   342 set .pressTarget 0
   343 set .kilnTarget 0
-    * jump *label92 always
   344 label *label91
   345 label *label92
   346 set .lastMultiProgress :backgroundProcess:multiProgress
   347 label *label89
-    * jump *label81 always
   348 label *label80
   349 label *label81
   350 op sub .loopTicks @tick :backgroundProcess:ticks
 
   386 op add *tmp240 .megas 1
   387 set .megas *tmp240
   388 write *tmp240 .display ".megas"
-    * jump *label95 always
   389 label *label102
   390 label *label95
   391 label *label93

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    69 op land *tmp71 *tmp69 *tmp70
    70 jump *label16 equal *tmp71 false
    71 set .airFactoryTarget @flare
-    * write .airFactoryTarget .display ".nextFactory"
+   72 write @flare .display ".nextFactory"
    73 set :handleAirFactory:unit @flare
    74 set :handleAirFactory:power :backgroundProcess:power
    75 set :handleAirFactory:silicon 15
 
    86 jump *label18 always
    87 label *label21
    88 label *label22
-    * jump *label23 greaterThanEq :handleAirFactory:power 200
+   89 jump *label23 greaterThanEq :backgroundProcess:power 200
    90 control enabled A¾BFLW-air-factory13 false
    91 jump *label24 always
    92 label *label23
-    * jump *label25 lessThanEq :handleAirFactory:power 500
+   93 jump *label25 lessThanEq :backgroundProcess:power 500
    94 control enabled A¾BFLW-air-factory13 true
    95 label *label25
    96 label *label26
    97 label *label24
-    * control config A¾BFLW-air-factory13 :handleAirFactory:unit
+   98 control config A¾BFLW-air-factory13 @flare
    99 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
   100 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory:unit
+  101 set :factoryUnitFinished:unit @flare
   102 setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
   103 call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
   104 label *label29
 
   108 label *label27
   109 label *label28
   110 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 equal :handleAirFactory:lead false
+  111 jump *label30 equal 0 false
   112 sensor *tmp99 .core @lead
   113 jump *label32 lessThanEq *tmp99 0
-    * set *tmp101 :handleAirFactory:lead
+  114 set *tmp101 0
   115 jump *label33 always
   116 label *label32
   117 set *tmp101 0
   118 label *label33
-    * set :handleAirFactory:leadLimit *tmp101
+  119 set :handleAirFactory:leadLimit :handleAirFactory:lead
   120 sensor *tmp102 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp102 :handleAirFactory:leadLimit
+  121 jump *label34 greaterThanEq *tmp102 *tmp101
   122 control config A©FJJU-unloader11 @lead
   123 jump *label18 always
   124 label *label34
 
   127 label *label31
   128 sensor *tmp107 .core @silicon
   129 jump *label36 lessThanEq *tmp107 0
-    * set *tmp109 :handleAirFactory:silicon
+  130 set *tmp109 15
   131 jump *label37 always
   132 label *label36
   133 set *tmp109 0
 
   135 set :handleAirFactory:siliconLimit *tmp109
   136 set *tmp110 A©FJJU-unloader11
   137 sensor *tmp112 A¾BFLW-air-factory13 @silicon
-    * jump *label38 greaterThanEq *tmp112 :handleAirFactory:siliconLimit
+  138 jump *label38 greaterThanEq *tmp112 *tmp109
   139 set *tmp114 @silicon
   140 jump *label39 always
   141 label *label38
 
   150 op land *tmp117 *tmp115 *tmp116
   151 jump *label40 equal *tmp117 false
   152 set .airFactoryTarget @mono
-    * write .airFactoryTarget .display ".nextFactory"
+  153 write @mono .display ".nextFactory"
   154 set :handleAirFactory.1:unit @mono
   155 set :handleAirFactory.1:power :backgroundProcess:power
   156 set :handleAirFactory.1:silicon 30
 
   167 jump *label42 always
   168 label *label45
   169 label *label46
-    * jump *label47 greaterThanEq :handleAirFactory.1:power 200
+  170 jump *label47 greaterThanEq :backgroundProcess:power 200
   171 control enabled A¾BFLW-air-factory13 false
   172 jump *label48 always
   173 label *label47
-    * jump *label49 lessThanEq :handleAirFactory.1:power 500
+  174 jump *label49 lessThanEq :backgroundProcess:power 500
   175 control enabled A¾BFLW-air-factory13 true
   176 label *label49
   177 label *label50
   178 label *label48
-    * control config A¾BFLW-air-factory13 :handleAirFactory.1:unit
+  179 control config A¾BFLW-air-factory13 @mono
   180 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   181 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit :handleAirFactory.1:unit
+  182 set :factoryUnitFinished:unit @mono
   183 setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
   184 call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
   185 label *label53
 
   189 label *label51
   190 label *label52
   191 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label54 equal :handleAirFactory.1:lead false
+  192 jump *label54 equal 15 false
   193 sensor *tmp145 .core @lead
   194 jump *label56 lessThanEq *tmp145 0
-    * set *tmp147 :handleAirFactory.1:lead
+  195 set *tmp147 15
   196 jump *label57 always
   197 label *label56
   198 set *tmp147 0
   199 label *label57
   200 set :handleAirFactory.1:leadLimit *tmp147
   201 sensor *tmp148 A¾BFLW-air-factory13 @lead
-    * jump *label58 greaterThanEq *tmp148 :handleAirFactory.1:leadLimit
+  202 jump *label58 greaterThanEq *tmp148 *tmp147
   203 control config A©FJJU-unloader11 @lead
   204 jump *label42 always
   205 label *label58
 
   208 label *label55
   209 sensor *tmp153 .core @silicon
   210 jump *label60 lessThanEq *tmp153 0
-    * set *tmp155 :handleAirFactory.1:silicon
+  211 set *tmp155 30
   212 jump *label61 always
   213 label *label60
   214 set *tmp155 0
 
   216 set :handleAirFactory.1:siliconLimit *tmp155
   217 set *tmp156 A©FJJU-unloader11
   218 sensor *tmp158 A¾BFLW-air-factory13 @silicon
-    * jump *label62 greaterThanEq *tmp158 :handleAirFactory.1:siliconLimit
+  219 jump *label62 greaterThanEq *tmp158 *tmp155
   220 set *tmp160 @silicon
   221 jump *label63 always
   222 label *label62
 
   227 jump *label41 always
   228 label *label40
   229 set .airFactoryTarget null
-    * write .airFactoryTarget .display ".nextFactory"
+  230 write null .display ".nextFactory"
   231 control enabled A¾BFLW-air-factory13 false
   232 control config A¾BFLW-air-factory13 @flare
   233 control config A©FJJU-unloader11 @coal
 
   298 label *label65
   299 jump *label80 equal AÁNBJc-multiplicative-reconstructor25 false
   300 write @mega .display ".nextMultiReco"
-    * set :backgroundProcess:c null
   301 sensor *tmp210 AÁNBJc-multiplicative-reconstructor25 @metaglass
   302 jump *label82 greaterThanEq *tmp210 40
   303 set :backgroundProcess:c @metaglass
 
   407 read *tmp246 .timer "time"
   408 op mul *tmp247 *tmp246 1000
   409 op add *tmp248 :log:encodedId *tmp247
-    * write *tmp248 .bank *tmp244
+  410 write *tmp248 .bank *tmp243
   411 label *label106
   412 return :log*retaddr
   413 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-12 instructions):
 
    70 jump *label16 equal *tmp71 false
    71 set .airFactoryTarget @flare
    72 write @flare .display ".nextFactory"
-    * set :handleAirFactory:unit @flare
-    * set :handleAirFactory:power :backgroundProcess:power
-    * set :handleAirFactory:silicon 15
    73 set :handleAirFactory:lead 0
    74 jump *label19 notEqual .canConsume false
    75 control config A©FJJU-unloader11 @coal
 
   111 set *tmp101 0
   112 jump *label33 always
   113 label *label32
-    * set *tmp101 0
   114 label *label33
-    * set :handleAirFactory:leadLimit :handleAirFactory:lead
+  115 set :handleAirFactory:leadLimit 0
   116 sensor *tmp102 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp102 *tmp101
+  117 jump *label34 greaterThanEq *tmp102 0
   118 control config A©FJJU-unloader11 @lead
   119 jump *label18 always
   120 label *label34
 
   128 label *label36
   129 set *tmp109 0
   130 label *label37
-    * set :handleAirFactory:siliconLimit *tmp109
   131 set *tmp110 A©FJJU-unloader11
   132 sensor *tmp112 A¾BFLW-air-factory13 @silicon
   133 jump *label38 greaterThanEq *tmp112 *tmp109
 
   146 jump *label40 equal *tmp117 false
   147 set .airFactoryTarget @mono
   148 write @mono .display ".nextFactory"
-    * set :handleAirFactory.1:unit @mono
-    * set :handleAirFactory.1:power :backgroundProcess:power
-    * set :handleAirFactory.1:silicon 30
-    * set :handleAirFactory.1:lead 15
   149 jump *label43 notEqual .canConsume false
   150 control config A©FJJU-unloader11 @coal
   151 jump *label42 always
 
   188 label *label56
   189 set *tmp147 0
   190 label *label57
-    * set :handleAirFactory.1:leadLimit *tmp147
   191 sensor *tmp148 A¾BFLW-air-factory13 @lead
   192 jump *label58 greaterThanEq *tmp148 *tmp147
   193 control config A©FJJU-unloader11 @lead
 
   203 label *label60
   204 set *tmp155 0
   205 label *label61
-    * set :handleAirFactory.1:siliconLimit *tmp155
   206 set *tmp156 A©FJJU-unloader11
   207 sensor *tmp158 A¾BFLW-air-factory13 @silicon
   208 jump *label62 greaterThanEq *tmp158 *tmp155
 
   392 read *tmp31 .bank 511
   393 op sub *tmp243 *tmp31 1
   394 write *tmp243 .bank 511
-    * set *tmp244 *tmp243
   395 read *tmp246 .timer "time"
   396 op mul *tmp247 *tmp246 1000
   397 op add *tmp248 :log:encodedId *tmp247

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-3 instructions):
 
    70 jump *label16 equal *tmp71 false
    71 set .airFactoryTarget @flare
    72 write @flare .display ".nextFactory"
-    * set :handleAirFactory:lead 0
    73 jump *label19 notEqual .canConsume false
    74 control config A©FJJU-unloader11 @coal
    75 jump *label18 always
 
   107 jump *label30 equal 0 false
   108 sensor *tmp99 .core @lead
   109 jump *label32 lessThanEq *tmp99 0
-    * set *tmp101 0
   110 jump *label33 always
   111 label *label32
   112 label *label33
-    * set :handleAirFactory:leadLimit 0
   113 sensor *tmp102 A¾BFLW-air-factory13 @lead
   114 jump *label34 greaterThanEq *tmp102 0
   115 control config A©FJJU-unloader11 @lead

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    24 label *label9
    25 label *label11
    26 jump *label13 notEqual .finished false
+   27 label *label110
    28 set :backgroundProcess:ticks @tick
    29 sensor :backgroundProcess:coreSilicon .core @silicon
    30 sensor :backgroundProcess:coreGraphite .core @graphite
 
   335 label *label81
   336 op sub .loopTicks @tick :backgroundProcess:ticks
   337 label *label12
-    * jump *label11 always
+  338 jump *label110 equal .finished false
   339 label *label13
   340 label *label10
   341 wait 1e12

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-20 instructions):
 
   106 label *label28
   107 set .lastProgress :handleAirFactory:factoryProgress
   108 jump *label30 equal 0 false
-    * sensor *tmp99 .core @lead
-    * jump *label32 lessThanEq *tmp99 0
-    * jump *label33 always
-    * label *label32
-    * label *label33
+  109 sensor *tmp99 .core @lead
   110 sensor *tmp102 A¾BFLW-air-factory13 @lead
   111 jump *label34 greaterThanEq *tmp102 0
   112 control config A©FJJU-unloader11 @lead
 
   115 label *label35
   116 label *label30
   117 label *label31
-    * sensor *tmp107 .core @silicon
-    * jump *label36 lessThanEq *tmp107 0
-    * set *tmp109 15
-    * jump *label37 always
-    * label *label36
-    * set *tmp109 0
-    * label *label37
+  118 sensor *tmp107 .core @silicon
+  119 select *tmp109 greaterThan *tmp107 0 15 0
   120 set *tmp110 A©FJJU-unloader11
-    * sensor *tmp112 A¾BFLW-air-factory13 @silicon
-    * jump *label38 greaterThanEq *tmp112 *tmp109
-    * set *tmp114 @silicon
-    * jump *label39 always
-    * label *label38
-    * set *tmp114 @coal
-    * label *label39
+  121 sensor *tmp112 A¾BFLW-air-factory13 @silicon
+  122 select *tmp114 lessThan *tmp112 *tmp109 @silicon @coal
   123 control config *tmp110 *tmp114
   124 label *label18
   125 jump *label17 always
 
   165 label *label52
   166 set .lastProgress :handleAirFactory.1:factoryProgress
   167 jump *label54 equal 15 false
-    * sensor *tmp145 .core @lead
-    * jump *label56 lessThanEq *tmp145 0
-    * set *tmp147 15
-    * jump *label57 always
-    * label *label56
-    * set *tmp147 0
-    * label *label57
+  168 sensor *tmp145 .core @lead
+  169 select *tmp147 greaterThan *tmp145 0 15 0
   170 sensor *tmp148 A¾BFLW-air-factory13 @lead
   171 jump *label58 greaterThanEq *tmp148 *tmp147
   172 control config A©FJJU-unloader11 @lead
 
   175 label *label59
   176 label *label54
   177 label *label55
-    * sensor *tmp153 .core @silicon
-    * jump *label60 lessThanEq *tmp153 0
-    * set *tmp155 30
-    * jump *label61 always
-    * label *label60
-    * set *tmp155 0
-    * label *label61
+  178 sensor *tmp153 .core @silicon
+  179 select *tmp155 greaterThan *tmp153 0 30 0
   180 set *tmp156 A©FJJU-unloader11
-    * sensor *tmp158 A¾BFLW-air-factory13 @silicon
-    * jump *label62 greaterThanEq *tmp158 *tmp155
-    * set *tmp160 @silicon
-    * jump *label63 always
-    * label *label62
-    * set *tmp160 @coal
-    * label *label63
+  181 sensor *tmp158 A¾BFLW-air-factory13 @silicon
+  182 select *tmp160 lessThan *tmp158 *tmp155 @silicon @coal
   183 control config *tmp156 *tmp160
   184 label *label42
   185 jump *label41 always
 
   269 set :backgroundProcess:c @titanium
   270 jump *label85 always
   271 label *label84
-    * sensor *tmp218 .core @silicon
-    * sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @silicon
-    * op lessThan *tmp220 *tmp219 130
-    * op land *tmp221 *tmp218 *tmp220
-    * jump *label86 equal *tmp221 false
-    * set :backgroundProcess:c @silicon
-    * jump *label87 always
-    * label *label86
-    * set :backgroundProcess:c @coal
-    * label *label87
+  272 sensor *tmp218 .core @silicon
+  273 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @silicon
+  274 op lessThan *tmp220 *tmp219 130
+  275 op land *tmp221 *tmp218 *tmp220
+  276 select :backgroundProcess:c notEqual *tmp221 false @silicon @coal
   277 label *label85
   278 label *label83
   279 control config A©NHJX-unloader14 :backgroundProcess:c

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2 (-2 instructions):
 
   256 label *label65
   257 jump *label80 equal AÁNBJc-multiplicative-reconstructor25 false
   258 write @mega .display ".nextMultiReco"
+  259 set :backgroundProcess:c @metaglass
   260 sensor *tmp210 AÁNBJc-multiplicative-reconstructor25 @metaglass
-    * jump *label82 greaterThanEq *tmp210 40
-    * set :backgroundProcess:c @metaglass
-    * jump *label83 always
+  261 jump *label83 lessThan *tmp210 40
   262 label *label82
+  263 set :backgroundProcess:c @titanium
   264 sensor *tmp213 .core @titanium
   265 sensor *tmp214 AÁNBJc-multiplicative-reconstructor25 @titanium
   266 op lessThan *tmp215 *tmp214 80
   267 op land *tmp216 *tmp213 *tmp215
-    * jump *label84 equal *tmp216 false
-    * set :backgroundProcess:c @titanium
-    * jump *label85 always
+  268 jump *label85 notEqual *tmp216 false
   269 label *label84
   270 sensor *tmp218 .core @silicon
   271 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @silicon

Modifications by Inline function 'logUnit' defined at CoreController.mnd:47:1 (-4 instructions):
 
   307 end
   308 label *label6
   309 set :logUnit:unit :factoryUnitFinished:unit
-    * setaddr :logUnit*retaddr *label94 (h:*label94)
-    * call *label5 *invalid :logUnit*retval (m:*label94) (h:*label94)
-    * label *label94
+  310 label *label111
+  311 sensor *tmp241 :logUnit:unit @id
+  312 op add :log:encodedId @blockCount *tmp241
+  313 setaddr :log*retaddr *label112 (h:*label112)
+  314 call *label4 *invalid :log*retval (m:*label112) (h:*label112)
+  315 label *label112
+  316 label *label113
   317 jump *label96 notEqual :factoryUnitFinished:unit @flare
   318 label *label97
   319 op add *tmp237 .flares 1
 
   345 label *label93
   346 return :factoryUnitFinished*retaddr
   347 end
-    * label *label5
-    * sensor *tmp241 :logUnit:unit @id
-    * op add :log:encodedId @blockCount *tmp241
-    * setaddr :log*retaddr *label105 (h:*label105)
-    * call *label4 *invalid :log*retval (m:*label105) (h:*label105)
-    * label *label105
-    * label *label104
-    * return :logUnit*retaddr
-    * end
   348 label *label4
   349 read *tmp31 .bank 511
   350 op sub *tmp243 *tmp31 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   308 label *label6
   309 set :logUnit:unit :factoryUnitFinished:unit
   310 label *label111
-    * sensor *tmp241 :logUnit:unit @id
+  311 sensor *tmp241 :factoryUnitFinished:unit @id
   312 op add :log:encodedId @blockCount *tmp241
   313 setaddr :log*retaddr *label112 (h:*label112)
   314 call *label4 *invalid :log*retval (m:*label112) (h:*label112)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   306 jump *label9 always
   307 end
   308 label *label6
-    * set :logUnit:unit :factoryUnitFinished:unit
   309 label *label111
   310 sensor *tmp241 :factoryUnitFinished:unit @id
   311 op add :log:encodedId @blockCount *tmp241

Modifications by Inline function 'log' defined at CoreController.mnd:43:1 (-4 instructions):
 
   309 label *label111
   310 sensor *tmp241 :factoryUnitFinished:unit @id
   311 op add :log:encodedId @blockCount *tmp241
-    * setaddr :log*retaddr *label112 (h:*label112)
-    * call *label4 *invalid :log*retval (m:*label112) (h:*label112)
-    * label *label112
+  312 label *label114
+  313 read *tmp31 .bank 511
+  314 op sub *tmp243 *tmp31 1
+  315 write *tmp243 .bank 511
+  316 read *tmp246 .timer "time"
+  317 op mul *tmp247 *tmp246 1000
+  318 op add *tmp248 :log:encodedId *tmp247
+  319 write *tmp248 .bank *tmp243
+  320 label *label115
   321 label *label113
   322 jump *label96 notEqual :factoryUnitFinished:unit @flare
   323 label *label97
 
   350 label *label93
   351 return :factoryUnitFinished*retaddr
   352 end
-    * label *label4
-    * read *tmp31 .bank 511
-    * op sub *tmp243 *tmp31 1
-    * write *tmp243 .bank 511
-    * read *tmp246 .timer "time"
-    * op mul *tmp247 *tmp246 1000
-    * op add *tmp248 :log:encodedId *tmp247
-    * write *tmp248 .bank *tmp243
-    * label *label106
-    * return :log*retaddr
-    * end
   353 label *label0
   354 control config A©FJJU-unloader11 @coal
   355 control enabled A{HDJa-inverted-sorter23 false

Modifications by Inline function 'factoryUnitFinished' defined at CoreController.mnd:51:1 (+74 instructions):
 
    96 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    97 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    98 set :factoryUnitFinished:unit @flare
-    * setaddr :factoryUnitFinished*retaddr *label29 (h:*label29)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label29) (h:*label29)
-    * label *label29
+   99 label *label116
+  100 label *label117
+  101 sensor *tmp241 :factoryUnitFinished:unit @id
+  102 op add :log:encodedId @blockCount *tmp241
+  103 label *label118
+  104 read *tmp31 .bank 511
+  105 op sub *tmp243 *tmp31 1
+  106 write *tmp243 .bank 511
+  107 read *tmp246 .timer "time"
+  108 op mul *tmp247 *tmp246 1000
+  109 op add *tmp248 :log:encodedId *tmp247
+  110 write *tmp248 .bank *tmp243
+  111 label *label119
+  112 label *label120
+  113 jump *label122 notEqual :factoryUnitFinished:unit @flare
+  114 label *label121
+  115 op add *tmp237 .flares 1
+  116 set .flares *tmp237
+  117 write *tmp237 .display ".flares"
+  118 jump *label129 always
+  119 label *label122
+  120 jump *label124 notEqual :factoryUnitFinished:unit @mono
+  121 label *label123
+  122 op add *tmp238 .monos 1
+  123 set .monos *tmp238
+  124 write *tmp238 .display ".monos"
+  125 jump *label129 always
+  126 label *label124
+  127 jump *label126 notEqual :factoryUnitFinished:unit @poly
+  128 label *label125
+  129 op add *tmp239 .polys 1
+  130 set .polys *tmp239
+  131 write *tmp239 .display ".polys"
+  132 jump *label129 always
+  133 label *label126
+  134 jump *label128 notEqual :factoryUnitFinished:unit @mega
+  135 label *label127
+  136 op add *tmp240 .megas 1
+  137 set .megas *tmp240
+  138 write *tmp240 .display ".megas"
+  139 label *label128
+  140 label *label129
+  141 label *label130
   142 set .lastProgress 0
   143 control config A©FJJU-unloader11 @coal
   144 jump *label18 always
 
   195 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   196 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   197 set :factoryUnitFinished:unit @mono
-    * setaddr :factoryUnitFinished*retaddr *label53 (h:*label53)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label53) (h:*label53)
-    * label *label53
+  198 label *label131
+  199 label *label132
+  200 sensor *tmp241 :factoryUnitFinished:unit @id
+  201 op add :log:encodedId @blockCount *tmp241
+  202 label *label133
+  203 read *tmp31 .bank 511
+  204 op sub *tmp243 *tmp31 1
+  205 write *tmp243 .bank 511
+  206 read *tmp246 .timer "time"
+  207 op mul *tmp247 *tmp246 1000
+  208 op add *tmp248 :log:encodedId *tmp247
+  209 write *tmp248 .bank *tmp243
+  210 label *label134
+  211 label *label135
+  212 jump *label137 notEqual :factoryUnitFinished:unit @flare
+  213 label *label136
+  214 op add *tmp237 .flares 1
+  215 set .flares *tmp237
+  216 write *tmp237 .display ".flares"
+  217 jump *label144 always
+  218 label *label137
+  219 jump *label139 notEqual :factoryUnitFinished:unit @mono
+  220 label *label138
+  221 op add *tmp238 .monos 1
+  222 set .monos *tmp238
+  223 write *tmp238 .display ".monos"
+  224 jump *label144 always
+  225 label *label139
+  226 jump *label141 notEqual :factoryUnitFinished:unit @poly
+  227 label *label140
+  228 op add *tmp239 .polys 1
+  229 set .polys *tmp239
+  230 write *tmp239 .display ".polys"
+  231 jump *label144 always
+  232 label *label141
+  233 jump *label143 notEqual :factoryUnitFinished:unit @mega
+  234 label *label142
+  235 op add *tmp240 .megas 1
+  236 set .megas *tmp240
+  237 write *tmp240 .display ".megas"
+  238 label *label143
+  239 label *label144
+  240 label *label145
   241 set .lastProgress 0
   242 control config A©FJJU-unloader11 @coal
   243 jump *label42 always
 
   276 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   277 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   278 set :factoryUnitFinished:unit @poly
-    * setaddr :factoryUnitFinished*retaddr *label68 (h:*label68)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label68) (h:*label68)
-    * label *label68
+  279 label *label146
+  280 label *label147
+  281 sensor *tmp241 :factoryUnitFinished:unit @id
+  282 op add :log:encodedId @blockCount *tmp241
+  283 label *label148
+  284 read *tmp31 .bank 511
+  285 op sub *tmp243 *tmp31 1
+  286 write *tmp243 .bank 511
+  287 read *tmp246 .timer "time"
+  288 op mul *tmp247 *tmp246 1000
+  289 op add *tmp248 :log:encodedId *tmp247
+  290 write *tmp248 .bank *tmp243
+  291 label *label149
+  292 label *label150
+  293 jump *label152 notEqual :factoryUnitFinished:unit @flare
+  294 label *label151
+  295 op add *tmp237 .flares 1
+  296 set .flares *tmp237
+  297 write *tmp237 .display ".flares"
+  298 jump *label159 always
+  299 label *label152
+  300 jump *label154 notEqual :factoryUnitFinished:unit @mono
+  301 label *label153
+  302 op add *tmp238 .monos 1
+  303 set .monos *tmp238
+  304 write *tmp238 .display ".monos"
+  305 jump *label159 always
+  306 label *label154
+  307 jump *label156 notEqual :factoryUnitFinished:unit @poly
+  308 label *label155
+  309 op add *tmp239 .polys 1
+  310 set .polys *tmp239
+  311 write *tmp239 .display ".polys"
+  312 jump *label159 always
+  313 label *label156
+  314 jump *label158 notEqual :factoryUnitFinished:unit @mega
+  315 label *label157
+  316 op add *tmp240 .megas 1
+  317 set .megas *tmp240
+  318 write *tmp240 .display ".megas"
+  319 label *label158
+  320 label *label159
+  321 label *label160
   322 set .recoEntered false
   323 set .lastRecoProgress 0
   324 jump *label67 always
 
   400 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   401 write null .display ".nextMultiReco"
   402 set :factoryUnitFinished:unit @mega
-    * setaddr :factoryUnitFinished*retaddr *label90 (h:*label90)
-    * call *label6 *invalid :factoryUnitFinished*retval (m:*label90) (h:*label90)
-    * label *label90
+  403 label *label161
+  404 label *label162
+  405 sensor *tmp241 :factoryUnitFinished:unit @id
+  406 op add :log:encodedId @blockCount *tmp241
+  407 label *label163
+  408 read *tmp31 .bank 511
+  409 op sub *tmp243 *tmp31 1
+  410 write *tmp243 .bank 511
+  411 read *tmp246 .timer "time"
+  412 op mul *tmp247 *tmp246 1000
+  413 op add *tmp248 :log:encodedId *tmp247
+  414 write *tmp248 .bank *tmp243
+  415 label *label164
+  416 label *label165
+  417 jump *label167 notEqual :factoryUnitFinished:unit @flare
+  418 label *label166
+  419 op add *tmp237 .flares 1
+  420 set .flares *tmp237
+  421 write *tmp237 .display ".flares"
+  422 jump *label174 always
+  423 label *label167
+  424 jump *label169 notEqual :factoryUnitFinished:unit @mono
+  425 label *label168
+  426 op add *tmp238 .monos 1
+  427 set .monos *tmp238
+  428 write *tmp238 .display ".monos"
+  429 jump *label174 always
+  430 label *label169
+  431 jump *label171 notEqual :factoryUnitFinished:unit @poly
+  432 label *label170
+  433 op add *tmp239 .polys 1
+  434 set .polys *tmp239
+  435 write *tmp239 .display ".polys"
+  436 jump *label174 always
+  437 label *label171
+  438 jump *label173 notEqual :factoryUnitFinished:unit @mega
+  439 label *label172
+  440 op add *tmp240 .megas 1
+  441 set .megas *tmp240
+  442 write *tmp240 .display ".megas"
+  443 label *label173
+  444 label *label174
+  445 label *label175
   446 set .lastMultiProgress 0
   447 jump *label89 always
   448 label *label88
 
   465 wait 1e12
   466 jump *label9 always
   467 end
-    * label *label6
-    * label *label111
-    * sensor *tmp241 :factoryUnitFinished:unit @id
-    * op add :log:encodedId @blockCount *tmp241
-    * label *label114
-    * read *tmp31 .bank 511
-    * op sub *tmp243 *tmp31 1
-    * write *tmp243 .bank 511
-    * read *tmp246 .timer "time"
-    * op mul *tmp247 *tmp246 1000
-    * op add *tmp248 :log:encodedId *tmp247
-    * write *tmp248 .bank *tmp243
-    * label *label115
-    * label *label113
-    * jump *label96 notEqual :factoryUnitFinished:unit @flare
-    * label *label97
-    * op add *tmp237 .flares 1
-    * set .flares *tmp237
-    * write *tmp237 .display ".flares"
-    * jump *label95 always
-    * label *label96
-    * jump *label98 notEqual :factoryUnitFinished:unit @mono
-    * label *label99
-    * op add *tmp238 .monos 1
-    * set .monos *tmp238
-    * write *tmp238 .display ".monos"
-    * jump *label95 always
-    * label *label98
-    * jump *label100 notEqual :factoryUnitFinished:unit @poly
-    * label *label101
-    * op add *tmp239 .polys 1
-    * set .polys *tmp239
-    * write *tmp239 .display ".polys"
-    * jump *label95 always
-    * label *label100
-    * jump *label102 notEqual :factoryUnitFinished:unit @mega
-    * label *label103
-    * op add *tmp240 .megas 1
-    * set .megas *tmp240
-    * write *tmp240 .display ".megas"
-    * label *label102
-    * label *label95
-    * label *label93
-    * return :factoryUnitFinished*retaddr
-    * end
   468 label *label0
   469 control config A©FJJU-unloader11 @coal
   470 control enabled A{HDJa-inverted-sorter23 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    98 set :factoryUnitFinished:unit @flare
    99 label *label116
   100 label *label117
-    * sensor *tmp241 :factoryUnitFinished:unit @id
+  101 sensor *tmp241 @flare @id
   102 op add :log:encodedId @blockCount *tmp241
   103 label *label118
   104 read *tmp31 .bank 511
 
   110 write *tmp248 .bank *tmp243
   111 label *label119
   112 label *label120
-    * jump *label122 notEqual :factoryUnitFinished:unit @flare
+  113 jump *label122 notEqual @flare @flare
   114 label *label121
   115 op add *tmp237 .flares 1
   116 set .flares *tmp237
   117 write *tmp237 .display ".flares"
   118 jump *label129 always
   119 label *label122
-    * jump *label124 notEqual :factoryUnitFinished:unit @mono
+  120 jump *label124 notEqual @flare @mono
   121 label *label123
   122 op add *tmp238 .monos 1
   123 set .monos *tmp238
   124 write *tmp238 .display ".monos"
   125 jump *label129 always
   126 label *label124
-    * jump *label126 notEqual :factoryUnitFinished:unit @poly
+  127 jump *label126 notEqual @flare @poly
   128 label *label125
   129 op add *tmp239 .polys 1
   130 set .polys *tmp239
   131 write *tmp239 .display ".polys"
   132 jump *label129 always
   133 label *label126
-    * jump *label128 notEqual :factoryUnitFinished:unit @mega
+  134 jump *label128 notEqual @flare @mega
   135 label *label127
   136 op add *tmp240 .megas 1
   137 set .megas *tmp240
 
   197 set :factoryUnitFinished:unit @mono
   198 label *label131
   199 label *label132
-    * sensor *tmp241 :factoryUnitFinished:unit @id
+  200 sensor *tmp241 @mono @id
   201 op add :log:encodedId @blockCount *tmp241
   202 label *label133
   203 read *tmp31 .bank 511
 
   209 write *tmp248 .bank *tmp243
   210 label *label134
   211 label *label135
-    * jump *label137 notEqual :factoryUnitFinished:unit @flare
+  212 jump *label137 notEqual @mono @flare
   213 label *label136
   214 op add *tmp237 .flares 1
   215 set .flares *tmp237
   216 write *tmp237 .display ".flares"
   217 jump *label144 always
   218 label *label137
-    * jump *label139 notEqual :factoryUnitFinished:unit @mono
+  219 jump *label139 notEqual @mono @mono
   220 label *label138
   221 op add *tmp238 .monos 1
   222 set .monos *tmp238
   223 write *tmp238 .display ".monos"
   224 jump *label144 always
   225 label *label139
-    * jump *label141 notEqual :factoryUnitFinished:unit @poly
+  226 jump *label141 notEqual @mono @poly
   227 label *label140
   228 op add *tmp239 .polys 1
   229 set .polys *tmp239
   230 write *tmp239 .display ".polys"
   231 jump *label144 always
   232 label *label141
-    * jump *label143 notEqual :factoryUnitFinished:unit @mega
+  233 jump *label143 notEqual @mono @mega
   234 label *label142
   235 op add *tmp240 .megas 1
   236 set .megas *tmp240
 
   278 set :factoryUnitFinished:unit @poly
   279 label *label146
   280 label *label147
-    * sensor *tmp241 :factoryUnitFinished:unit @id
+  281 sensor *tmp241 @poly @id
   282 op add :log:encodedId @blockCount *tmp241
   283 label *label148
   284 read *tmp31 .bank 511
 
   290 write *tmp248 .bank *tmp243
   291 label *label149
   292 label *label150
-    * jump *label152 notEqual :factoryUnitFinished:unit @flare
+  293 jump *label152 notEqual @poly @flare
   294 label *label151
   295 op add *tmp237 .flares 1
   296 set .flares *tmp237
   297 write *tmp237 .display ".flares"
   298 jump *label159 always
   299 label *label152
-    * jump *label154 notEqual :factoryUnitFinished:unit @mono
+  300 jump *label154 notEqual @poly @mono
   301 label *label153
   302 op add *tmp238 .monos 1
   303 set .monos *tmp238
   304 write *tmp238 .display ".monos"
   305 jump *label159 always
   306 label *label154
-    * jump *label156 notEqual :factoryUnitFinished:unit @poly
+  307 jump *label156 notEqual @poly @poly
   308 label *label155
   309 op add *tmp239 .polys 1
   310 set .polys *tmp239
   311 write *tmp239 .display ".polys"
   312 jump *label159 always
   313 label *label156
-    * jump *label158 notEqual :factoryUnitFinished:unit @mega
+  314 jump *label158 notEqual @poly @mega
   315 label *label157
   316 op add *tmp240 .megas 1
   317 set .megas *tmp240
 
   402 set :factoryUnitFinished:unit @mega
   403 label *label161
   404 label *label162
-    * sensor *tmp241 :factoryUnitFinished:unit @id
+  405 sensor *tmp241 @mega @id
   406 op add :log:encodedId @blockCount *tmp241
   407 label *label163
   408 read *tmp31 .bank 511
 
   414 write *tmp248 .bank *tmp243
   415 label *label164
   416 label *label165
-    * jump *label167 notEqual :factoryUnitFinished:unit @flare
+  417 jump *label167 notEqual @mega @flare
   418 label *label166
   419 op add *tmp237 .flares 1
   420 set .flares *tmp237
   421 write *tmp237 .display ".flares"
   422 jump *label174 always
   423 label *label167
-    * jump *label169 notEqual :factoryUnitFinished:unit @mono
+  424 jump *label169 notEqual @mega @mono
   425 label *label168
   426 op add *tmp238 .monos 1
   427 set .monos *tmp238
   428 write *tmp238 .display ".monos"
   429 jump *label174 always
   430 label *label169
-    * jump *label171 notEqual :factoryUnitFinished:unit @poly
+  431 jump *label171 notEqual @mega @poly
   432 label *label170
   433 op add *tmp239 .polys 1
   434 set .polys *tmp239
   435 write *tmp239 .display ".polys"
   436 jump *label174 always
   437 label *label171
-    * jump *label173 notEqual :factoryUnitFinished:unit @mega
+  438 jump *label173 notEqual @mega @mega
   439 label *label172
   440 op add *tmp240 .megas 1
   441 set .megas *tmp240

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    95 control config A¾BFLW-air-factory13 @flare
    96 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    97 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * set :factoryUnitFinished:unit @flare
    98 label *label116
    99 label *label117
   100 sensor *tmp241 @flare @id
 
   193 control config A¾BFLW-air-factory13 @mono
   194 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   195 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * set :factoryUnitFinished:unit @mono
   196 label *label131
   197 label *label132
   198 sensor *tmp241 @mono @id
 
   273 write @poly .display ".nextAddReco"
   274 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   275 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * set :factoryUnitFinished:unit @poly
   276 label *label146
   277 label *label147
   278 sensor *tmp241 @poly @id
 
   396 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
   397 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   398 write null .display ".nextMultiReco"
-    * set :factoryUnitFinished:unit @mega
   399 label *label161
   400 label *label162
   401 sensor *tmp241 @mega @id

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-5 instructions):
 
   109 write *tmp248 .bank *tmp243
   110 label *label119
   111 label *label120
-    * jump *label122 notEqual @flare @flare
   112 label *label121
   113 op add *tmp237 .flares 1
   114 set .flares *tmp237
   115 write *tmp237 .display ".flares"
   116 jump *label129 always
   117 label *label122
-    * jump *label124 notEqual @flare @mono
+  118 jump *label124 always
   119 label *label123
   120 op add *tmp238 .monos 1
   121 set .monos *tmp238
   122 write *tmp238 .display ".monos"
   123 jump *label129 always
   124 label *label124
-    * jump *label126 notEqual @flare @poly
+  125 jump *label126 always
   126 label *label125
   127 op add *tmp239 .polys 1
   128 set .polys *tmp239
   129 write *tmp239 .display ".polys"
   130 jump *label129 always
   131 label *label126
-    * jump *label128 notEqual @flare @mega
+  132 jump *label128 always
   133 label *label127
   134 op add *tmp240 .megas 1
   135 set .megas *tmp240
 
   143 label *label27
   144 label *label28
   145 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 equal 0 false
+  146 jump *label30 always
   147 sensor *tmp99 .core @lead
   148 sensor *tmp102 A¾BFLW-air-factory13 @lead
   149 jump *label34 greaterThanEq *tmp102 0
 
   206 write *tmp248 .bank *tmp243
   207 label *label134
   208 label *label135
-    * jump *label137 notEqual @mono @flare
+  209 jump *label137 always
   210 label *label136
   211 op add *tmp237 .flares 1
   212 set .flares *tmp237
   213 write *tmp237 .display ".flares"
   214 jump *label144 always
   215 label *label137
-    * jump *label139 notEqual @mono @mono
   216 label *label138
   217 op add *tmp238 .monos 1
   218 set .monos *tmp238
   219 write *tmp238 .display ".monos"
   220 jump *label144 always
   221 label *label139
-    * jump *label141 notEqual @mono @poly
+  222 jump *label141 always
   223 label *label140
   224 op add *tmp239 .polys 1
   225 set .polys *tmp239
   226 write *tmp239 .display ".polys"
   227 jump *label144 always
   228 label *label141
-    * jump *label143 notEqual @mono @mega
+  229 jump *label143 always
   230 label *label142
   231 op add *tmp240 .megas 1
   232 set .megas *tmp240
 
   240 label *label51
   241 label *label52
   242 set .lastProgress :handleAirFactory.1:factoryProgress
-    * jump *label54 equal 15 false
   243 sensor *tmp145 .core @lead
   244 select *tmp147 greaterThan *tmp145 0 15 0
   245 sensor *tmp148 A¾BFLW-air-factory13 @lead
 
   284 write *tmp248 .bank *tmp243
   285 label *label149
   286 label *label150
-    * jump *label152 notEqual @poly @flare
+  287 jump *label152 always
   288 label *label151
   289 op add *tmp237 .flares 1
   290 set .flares *tmp237
   291 write *tmp237 .display ".flares"
   292 jump *label159 always
   293 label *label152
-    * jump *label154 notEqual @poly @mono
+  294 jump *label154 always
   295 label *label153
   296 op add *tmp238 .monos 1
   297 set .monos *tmp238
   298 write *tmp238 .display ".monos"
   299 jump *label159 always
   300 label *label154
-    * jump *label156 notEqual @poly @poly
   301 label *label155
   302 op add *tmp239 .polys 1
   303 set .polys *tmp239
   304 write *tmp239 .display ".polys"
   305 jump *label159 always
   306 label *label156
-    * jump *label158 notEqual @poly @mega
+  307 jump *label158 always
   308 label *label157
   309 op add *tmp240 .megas 1
   310 set .megas *tmp240
 
   406 write *tmp248 .bank *tmp243
   407 label *label164
   408 label *label165
-    * jump *label167 notEqual @mega @flare
+  409 jump *label167 always
   410 label *label166
   411 op add *tmp237 .flares 1
   412 set .flares *tmp237
   413 write *tmp237 .display ".flares"
   414 jump *label174 always
   415 label *label167
-    * jump *label169 notEqual @mega @mono
+  416 jump *label169 always
   417 label *label168
   418 op add *tmp238 .monos 1
   419 set .monos *tmp238
   420 write *tmp238 .display ".monos"
   421 jump *label174 always
   422 label *label169
-    * jump *label171 notEqual @mega @poly
+  423 jump *label171 always
   424 label *label170
   425 op add *tmp239 .polys 1
   426 set .polys *tmp239
   427 write *tmp239 .display ".polys"
   428 jump *label174 always
   429 label *label171
-    * jump *label173 notEqual @mega @mega
   430 label *label172
   431 op add *tmp240 .megas 1
   432 set .megas *tmp240

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    97 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    98 label *label116
    99 label *label117
-    * sensor *tmp241 @flare @id
+  100 set *tmp241 15
   101 op add :log:encodedId @blockCount *tmp241
   102 label *label118
   103 read *tmp31 .bank 511
 
   194 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   195 label *label131
   196 label *label132
-    * sensor *tmp241 @mono @id
+  197 set *tmp241 20
   198 op add :log:encodedId @blockCount *tmp241
   199 label *label133
   200 read *tmp31 .bank 511
 
   272 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   273 label *label146
   274 label *label147
-    * sensor *tmp241 @poly @id
+  275 set *tmp241 21
   276 op add :log:encodedId @blockCount *tmp241
   277 label *label148
   278 read *tmp31 .bank 511
 
   394 write null .display ".nextMultiReco"
   395 label *label161
   396 label *label162
-    * sensor *tmp241 @mega @id
+  397 set *tmp241 22
   398 op add :log:encodedId @blockCount *tmp241
   399 label *label163
   400 read *tmp31 .bank 511

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-12 instructions):
 
    98 label *label116
    99 label *label117
   100 set *tmp241 15
-    * op add :log:encodedId @blockCount *tmp241
+  101 op add :log:encodedId @blockCount 15
   102 label *label118
   103 read *tmp31 .bank 511
   104 op sub *tmp243 *tmp31 1
   105 write *tmp243 .bank 511
   106 read *tmp246 .timer "time"
   107 op mul *tmp247 *tmp246 1000
-    * op add *tmp248 :log:encodedId *tmp247
+  108 op add *tmp248 275 *tmp247
   109 write *tmp248 .bank *tmp243
   110 label *label119
   111 label *label120
 
   117 label *label122
   118 jump *label124 always
   119 label *label123
-    * op add *tmp238 .monos 1
   120 set .monos *tmp238
   121 write *tmp238 .display ".monos"
   122 jump *label129 always
   123 label *label124
   124 jump *label126 always
   125 label *label125
-    * op add *tmp239 .polys 1
   126 set .polys *tmp239
   127 write *tmp239 .display ".polys"
   128 jump *label129 always
   129 label *label126
   130 jump *label128 always
   131 label *label127
-    * op add *tmp240 .megas 1
   132 set .megas *tmp240
   133 write *tmp240 .display ".megas"
   134 label *label128
 
   192 label *label131
   193 label *label132
   194 set *tmp241 20
-    * op add :log:encodedId @blockCount *tmp241
+  195 op add :log:encodedId @blockCount 20
   196 label *label133
   197 read *tmp31 .bank 511
   198 op sub *tmp243 *tmp31 1
   199 write *tmp243 .bank 511
   200 read *tmp246 .timer "time"
   201 op mul *tmp247 *tmp246 1000
-    * op add *tmp248 :log:encodedId *tmp247
+  202 op add *tmp248 280 *tmp247
   203 write *tmp248 .bank *tmp243
   204 label *label134
   205 label *label135
   206 jump *label137 always
   207 label *label136
-    * op add *tmp237 .flares 1
   208 set .flares *tmp237
   209 write *tmp237 .display ".flares"
   210 jump *label144 always
 
   217 label *label139
   218 jump *label141 always
   219 label *label140
-    * op add *tmp239 .polys 1
   220 set .polys *tmp239
   221 write *tmp239 .display ".polys"
   222 jump *label144 always
   223 label *label141
   224 jump *label143 always
   225 label *label142
-    * op add *tmp240 .megas 1
   226 set .megas *tmp240
   227 write *tmp240 .display ".megas"
   228 label *label143
 
   267 label *label146
   268 label *label147
   269 set *tmp241 21
-    * op add :log:encodedId @blockCount *tmp241
+  270 op add :log:encodedId @blockCount 21
   271 label *label148
   272 read *tmp31 .bank 511
   273 op sub *tmp243 *tmp31 1
   274 write *tmp243 .bank 511
   275 read *tmp246 .timer "time"
   276 op mul *tmp247 *tmp246 1000
-    * op add *tmp248 :log:encodedId *tmp247
+  277 op add *tmp248 281 *tmp247
   278 write *tmp248 .bank *tmp243
   279 label *label149
   280 label *label150
   281 jump *label152 always
   282 label *label151
-    * op add *tmp237 .flares 1
   283 set .flares *tmp237
   284 write *tmp237 .display ".flares"
   285 jump *label159 always
   286 label *label152
   287 jump *label154 always
   288 label *label153
-    * op add *tmp238 .monos 1
   289 set .monos *tmp238
   290 write *tmp238 .display ".monos"
   291 jump *label159 always
 
   298 label *label156
   299 jump *label158 always
   300 label *label157
-    * op add *tmp240 .megas 1
   301 set .megas *tmp240
   302 write *tmp240 .display ".megas"
   303 label *label158
 
   386 label *label161
   387 label *label162
   388 set *tmp241 22
-    * op add :log:encodedId @blockCount *tmp241
+  389 op add :log:encodedId @blockCount 22
   390 label *label163
   391 read *tmp31 .bank 511
   392 op sub *tmp243 *tmp31 1
   393 write *tmp243 .bank 511
   394 read *tmp246 .timer "time"
   395 op mul *tmp247 *tmp246 1000
-    * op add *tmp248 :log:encodedId *tmp247
+  396 op add *tmp248 282 *tmp247
   397 write *tmp248 .bank *tmp243
   398 label *label164
   399 label *label165
   400 jump *label167 always
   401 label *label166
-    * op add *tmp237 .flares 1
   402 set .flares *tmp237
   403 write *tmp237 .display ".flares"
   404 jump *label174 always
   405 label *label167
   406 jump *label169 always
   407 label *label168
-    * op add *tmp238 .monos 1
   408 set .monos *tmp238
   409 write *tmp238 .display ".monos"
   410 jump *label174 always
   411 label *label169
   412 jump *label171 always
   413 label *label170
-    * op add *tmp239 .polys 1
   414 set .polys *tmp239
   415 write *tmp239 .display ".polys"
   416 jump *label174 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
    97 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
    98 label *label116
    99 label *label117
-    * set *tmp241 15
-    * op add :log:encodedId @blockCount 15
   100 label *label118
   101 read *tmp31 .bank 511
   102 op sub *tmp243 *tmp31 1
 
   189 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
   190 label *label131
   191 label *label132
-    * set *tmp241 20
-    * op add :log:encodedId @blockCount 20
   192 label *label133
   193 read *tmp31 .bank 511
   194 op sub *tmp243 *tmp31 1
 
   262 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
   263 label *label146
   264 label *label147
-    * set *tmp241 21
-    * op add :log:encodedId @blockCount 21
   265 label *label148
   266 read *tmp31 .bank 511
   267 op sub *tmp243 *tmp31 1
 
   379 write null .display ".nextMultiReco"
   380 label *label161
   381 label *label162
-    * set *tmp241 22
-    * op add :log:encodedId @blockCount 22
   382 label *label163
   383 read *tmp31 .bank 511
   384 op sub *tmp243 *tmp31 1

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    22 set .airFactoryTarget null
    23 set *signature "eb9ab5a008f372ac:v1"
    24 label *label9
-    * label *label11
    25 jump *label13 notEqual .finished false
    26 label *label110
    27 set :backgroundProcess:ticks @tick
 
    74 control config A©FJJU-unloader11 @coal
    75 jump *label18 always
    76 label *label19
-    * label *label20
    77 sensor *tmp77 AAKJ\-steam-generator18 @coal
    78 op mul *tmp78 5 AAKJ\-steam-generator18
    79 jump *label21 greaterThanEq *tmp77 *tmp78
    80 control config A©FJJU-unloader11 @coal
    81 jump *label18 always
    82 label *label21
-    * label *label22
    83 jump *label23 greaterThanEq :backgroundProcess:power 200
    84 control enabled A¾BFLW-air-factory13 false
    85 jump *label24 always
 
    87 jump *label25 lessThanEq :backgroundProcess:power 500
    88 control enabled A¾BFLW-air-factory13 true
    89 label *label25
-    * label *label26
    90 label *label24
    91 control config A¾BFLW-air-factory13 @flare
    92 sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory13 @progress
    93 jump *label27 lessThanEq .lastProgress :handleAirFactory:factoryProgress
-    * label *label116
-    * label *label117
-    * label *label118
    94 read *tmp31 .bank 511
    95 op sub *tmp243 *tmp31 1
    96 write *tmp243 .bank 511
 
    98 op mul *tmp247 *tmp246 1000
    99 op add *tmp248 275 *tmp247
   100 write *tmp248 .bank *tmp243
-    * label *label119
-    * label *label120
-    * label *label121
   101 op add *tmp237 .flares 1
   102 set .flares *tmp237
   103 write *tmp237 .display ".flares"
   104 jump *label129 always
-    * label *label122
   105 jump *label124 always
-    * label *label123
   106 set .monos *tmp238
   107 write *tmp238 .display ".monos"
   108 jump *label129 always
   109 label *label124
   110 jump *label126 always
-    * label *label125
   111 set .polys *tmp239
   112 write *tmp239 .display ".polys"
   113 jump *label129 always
   114 label *label126
   115 jump *label128 always
-    * label *label127
   116 set .megas *tmp240
   117 write *tmp240 .display ".megas"
   118 label *label128
   119 label *label129
-    * label *label130
   120 set .lastProgress 0
   121 control config A©FJJU-unloader11 @coal
   122 jump *label18 always
   123 label *label27
-    * label *label28
   124 set .lastProgress :handleAirFactory:factoryProgress
   125 jump *label30 always
   126 sensor *tmp99 .core @lead
 
   129 control config A©FJJU-unloader11 @lead
   130 jump *label18 always
   131 label *label34
-    * label *label35
   132 label *label30
-    * label *label31
   133 sensor *tmp107 .core @silicon
   134 select *tmp109 greaterThan *tmp107 0 15 0
   135 set *tmp110 A©FJJU-unloader11
 
   149 control config A©FJJU-unloader11 @coal
   150 jump *label42 always
   151 label *label43
-    * label *label44
   152 sensor *tmp123 AAKJ\-steam-generator18 @coal
   153 op mul *tmp124 5 AAKJ\-steam-generator18
   154 jump *label45 greaterThanEq *tmp123 *tmp124
   155 control config A©FJJU-unloader11 @coal
   156 jump *label42 always
   157 label *label45
-    * label *label46
   158 jump *label47 greaterThanEq :backgroundProcess:power 200
   159 control enabled A¾BFLW-air-factory13 false
   160 jump *label48 always
 
   162 jump *label49 lessThanEq :backgroundProcess:power 500
   163 control enabled A¾BFLW-air-factory13 true
   164 label *label49
-    * label *label50
   165 label *label48
   166 control config A¾BFLW-air-factory13 @mono
   167 sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factory13 @progress
   168 jump *label51 lessThanEq .lastProgress :handleAirFactory.1:factoryProgress
-    * label *label131
-    * label *label132
-    * label *label133
   169 read *tmp31 .bank 511
   170 op sub *tmp243 *tmp31 1
   171 write *tmp243 .bank 511
 
   173 op mul *tmp247 *tmp246 1000
   174 op add *tmp248 280 *tmp247
   175 write *tmp248 .bank *tmp243
-    * label *label134
-    * label *label135
   176 jump *label137 always
-    * label *label136
   177 set .flares *tmp237
   178 write *tmp237 .display ".flares"
   179 jump *label144 always
   180 label *label137
-    * label *label138
   181 op add *tmp238 .monos 1
   182 set .monos *tmp238
   183 write *tmp238 .display ".monos"
   184 jump *label144 always
-    * label *label139
   185 jump *label141 always
-    * label *label140
   186 set .polys *tmp239
   187 write *tmp239 .display ".polys"
   188 jump *label144 always
   189 label *label141
   190 jump *label143 always
-    * label *label142
   191 set .megas *tmp240
   192 write *tmp240 .display ".megas"
   193 label *label143
   194 label *label144
-    * label *label145
   195 set .lastProgress 0
   196 control config A©FJJU-unloader11 @coal
   197 jump *label42 always
   198 label *label51
-    * label *label52
   199 set .lastProgress :handleAirFactory.1:factoryProgress
   200 sensor *tmp145 .core @lead
   201 select *tmp147 greaterThan *tmp145 0 15 0
 
   204 control config A©FJJU-unloader11 @lead
   205 jump *label42 always
   206 label *label58
-    * label *label59
-    * label *label54
-    * label *label55
   207 sensor *tmp153 .core @silicon
   208 select *tmp155 greaterThan *tmp153 0 30 0
   209 set *tmp156 A©FJJU-unloader11
 
   224 write @poly .display ".nextAddReco"
   225 sensor :backgroundProcess:recoProgress AÀF@Lb-additive-reconstructor24 @progress
   226 jump *label66 lessThanEq .lastRecoProgress :backgroundProcess:recoProgress
-    * label *label146
-    * label *label147
-    * label *label148
   227 read *tmp31 .bank 511
   228 op sub *tmp243 *tmp31 1
   229 write *tmp243 .bank 511
 
   231 op mul *tmp247 *tmp246 1000
   232 op add *tmp248 281 *tmp247
   233 write *tmp248 .bank *tmp243
-    * label *label149
-    * label *label150
   234 jump *label152 always
-    * label *label151
   235 set .flares *tmp237
   236 write *tmp237 .display ".flares"
   237 jump *label159 always
   238 label *label152
   239 jump *label154 always
-    * label *label153
   240 set .monos *tmp238
   241 write *tmp238 .display ".monos"
   242 jump *label159 always
   243 label *label154
-    * label *label155
   244 op add *tmp239 .polys 1
   245 set .polys *tmp239
   246 write *tmp239 .display ".polys"
   247 jump *label159 always
-    * label *label156
   248 jump *label158 always
-    * label *label157
   249 set .megas *tmp240
   250 write *tmp240 .display ".megas"
   251 label *label158
   252 label *label159
-    * label *label160
   253 set .recoEntered false
   254 set .lastRecoProgress 0
   255 jump *label67 always
 
   269 label *label73
   270 ucontrol move :backgroundProcess:x :backgroundProcess:y
   271 ucontrol payEnter
-    * label *label74
   272 sensor *tmp182 @unit @dead
   273 jump *label73 equal *tmp182 false
-    * label *label75
   274 op sub *tmp184 .monos 1
   275 set .monos *tmp184
   276 write *tmp184 .display ".monos"
   277 set .recoEntered true
   278 label *label71
-    * label *label72
   279 control enabled A{HDJa-inverted-sorter23 false
   280 jump *label70 always
   281 label *label69
 
   307 set :backgroundProcess:c @metaglass
   308 sensor *tmp210 AÁNBJc-multiplicative-reconstructor25 @metaglass
   309 jump *label83 lessThan *tmp210 40
-    * label *label82
   310 set :backgroundProcess:c @titanium
   311 sensor *tmp213 .core @titanium
   312 sensor *tmp214 AÁNBJc-multiplicative-reconstructor25 @titanium
   313 op lessThan *tmp215 *tmp214 80
   314 op land *tmp216 *tmp213 *tmp215
   315 jump *label85 notEqual *tmp216 false
-    * label *label84
   316 sensor *tmp218 .core @silicon
   317 sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @silicon
   318 op lessThan *tmp220 *tmp219 130
 
   325 sensor :backgroundProcess:multiProgress AÁNBJc-multiplicative-reconstructor25 @progress
   326 jump *label88 lessThanEq .lastMultiProgress :backgroundProcess:multiProgress
   327 write null .display ".nextMultiReco"
-    * label *label161
-    * label *label162
-    * label *label163
   328 read *tmp31 .bank 511
   329 op sub *tmp243 *tmp31 1
   330 write *tmp243 .bank 511
 
   332 op mul *tmp247 *tmp246 1000
   333 op add *tmp248 282 *tmp247
   334 write *tmp248 .bank *tmp243
-    * label *label164
-    * label *label165
   335 jump *label167 always
-    * label *label166
   336 set .flares *tmp237
   337 write *tmp237 .display ".flares"
   338 jump *label174 always
   339 label *label167
   340 jump *label169 always
-    * label *label168
   341 set .monos *tmp238
   342 write *tmp238 .display ".monos"
   343 jump *label174 always
   344 label *label169
   345 jump *label171 always
-    * label *label170
   346 set .polys *tmp239
   347 write *tmp239 .display ".polys"
   348 jump *label174 always
   349 label *label171
-    * label *label172
   350 op add *tmp240 .megas 1
   351 set .megas *tmp240
   352 write *tmp240 .display ".megas"
-    * label *label173
   353 label *label174
-    * label *label175
   354 set .lastMultiProgress 0
   355 jump *label89 always
   356 label *label88
 
   360 set .pressTarget 0
   361 set .kilnTarget 0
   362 label *label91
-    * label *label92
   363 set .lastMultiProgress :backgroundProcess:multiProgress
   364 label *label89
   365 label *label80
-    * label *label81
   366 op sub .loopTicks @tick :backgroundProcess:ticks
-    * label *label12
   367 jump *label110 equal .finished false
   368 label *label13
-    * label *label10
   369 wait 1e12
   370 jump *label9 always
   371 end
 
   373 control config A©FJJU-unloader11 @coal
   374 control enabled A{HDJa-inverted-sorter23 false
   375 set .canConsume false
-    * label *label108
   376 set :buildStart*finished true
   377 jump *label9 always
   378 end
   379 label *label1
   380 set .canConsume true
-    * label *label109
   381 set :buildStop*finished true
   382 jump *label9 always
   383 end

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    72 write @flare .display ".nextFactory"
    73 jump *label19 notEqual .canConsume false
    74 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+   75 jump *label17 always
    76 label *label19
    77 sensor *tmp77 AAKJ\-steam-generator18 @coal
    78 op mul *tmp78 5 AAKJ\-steam-generator18
    79 jump *label21 greaterThanEq *tmp77 *tmp78
    80 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+   81 jump *label17 always
    82 label *label21
    83 jump *label23 greaterThanEq :backgroundProcess:power 200
    84 control enabled A¾BFLW-air-factory13 false
 
   102 set .flares *tmp237
   103 write *tmp237 .display ".flares"
   104 jump *label129 always
-    * jump *label124 always
+  105 jump *label128 always
   106 set .monos *tmp238
   107 write *tmp238 .display ".monos"
   108 jump *label129 always
   109 label *label124
-    * jump *label126 always
+  110 jump *label128 always
   111 set .polys *tmp239
   112 write *tmp239 .display ".polys"
   113 jump *label129 always
 
   119 label *label129
   120 set .lastProgress 0
   121 control config A©FJJU-unloader11 @coal
-    * jump *label18 always
+  122 jump *label17 always
   123 label *label27
   124 set .lastProgress :handleAirFactory:factoryProgress
   125 jump *label30 always
 
   127 sensor *tmp102 A¾BFLW-air-factory13 @lead
   128 jump *label34 greaterThanEq *tmp102 0
   129 control config A©FJJU-unloader11 @lead
-    * jump *label18 always
+  130 jump *label17 always
   131 label *label34
   132 label *label30
   133 sensor *tmp107 .core @silicon
 
   147 write @mono .display ".nextFactory"
   148 jump *label43 notEqual .canConsume false
   149 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  150 jump *label41 always
   151 label *label43
   152 sensor *tmp123 AAKJ\-steam-generator18 @coal
   153 op mul *tmp124 5 AAKJ\-steam-generator18
   154 jump *label45 greaterThanEq *tmp123 *tmp124
   155 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  156 jump *label41 always
   157 label *label45
   158 jump *label47 greaterThanEq :backgroundProcess:power 200
   159 control enabled A¾BFLW-air-factory13 false
 
   182 set .monos *tmp238
   183 write *tmp238 .display ".monos"
   184 jump *label144 always
-    * jump *label141 always
+  185 jump *label143 always
   186 set .polys *tmp239
   187 write *tmp239 .display ".polys"
   188 jump *label144 always
 
   194 label *label144
   195 set .lastProgress 0
   196 control config A©FJJU-unloader11 @coal
-    * jump *label42 always
+  197 jump *label41 always
   198 label *label51
   199 set .lastProgress :handleAirFactory.1:factoryProgress
   200 sensor *tmp145 .core @lead
 
   202 sensor *tmp148 A¾BFLW-air-factory13 @lead
   203 jump *label58 greaterThanEq *tmp148 *tmp147
   204 control config A©FJJU-unloader11 @lead
-    * jump *label42 always
+  205 jump *label41 always
   206 label *label58
   207 sensor *tmp153 .core @silicon
   208 select *tmp155 greaterThan *tmp153 0 30 0
 
   231 op mul *tmp247 *tmp246 1000
   232 op add *tmp248 281 *tmp247
   233 write *tmp248 .bank *tmp243
-    * jump *label152 always
+  234 jump *label154 always
   235 set .flares *tmp237
   236 write *tmp237 .display ".flares"
   237 jump *label159 always
 
   277 set .recoEntered true
   278 label *label71
   279 control enabled A{HDJa-inverted-sorter23 false
-    * jump *label70 always
+  280 jump *label65 always
   281 label *label69
   282 op greaterThan *tmp187 :backgroundProcess:coreSilicon .siliconReserve
   283 op mul *tmp188 40 *tmp187
   284 jump *label76 greaterThanEq :backgroundProcess:s *tmp188
   285 control config A©HFJ_-unloader21 @silicon
   286 control enabled A{HDJa-inverted-sorter23 .canConsume
-    * jump *label77 always
+  287 jump *label65 always
   288 label *label76
   289 op greaterThan *tmp196 :backgroundProcess:coreGraphite .graphiteReserve
   290 op mul *tmp197 40 *tmp196
   291 jump *label78 greaterThanEq :backgroundProcess:g *tmp197
   292 control config A©HFJ_-unloader21 @graphite
   293 control enabled A{HDJa-inverted-sorter23 .canConsume
-    * jump *label79 always
+  294 jump *label65 always
   295 label *label78
   296 control enabled A{HDJa-inverted-sorter23 false
   297 label *label79
 
   332 op mul *tmp247 *tmp246 1000
   333 op add *tmp248 282 *tmp247
   334 write *tmp248 .bank *tmp243
-    * jump *label167 always
+  335 jump *label171 always
   336 set .flares *tmp237
   337 write *tmp237 .display ".flares"
   338 jump *label174 always
   339 label *label167
-    * jump *label169 always
+  340 jump *label171 always
   341 set .monos *tmp238
   342 write *tmp238 .display ".monos"
   343 jump *label174 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-50 instructions):
 
   102 set .flares *tmp237
   103 write *tmp237 .display ".flares"
   104 jump *label129 always
-    * jump *label128 always
-    * set .monos *tmp238
-    * write *tmp238 .display ".monos"
-    * jump *label129 always
-    * label *label124
-    * jump *label128 always
-    * set .polys *tmp239
-    * write *tmp239 .display ".polys"
-    * jump *label129 always
-    * label *label126
-    * jump *label128 always
-    * set .megas *tmp240
-    * write *tmp240 .display ".megas"
-    * label *label128
   105 label *label129
   106 set .lastProgress 0
   107 control config A©FJJU-unloader11 @coal
 
   109 label *label27
   110 set .lastProgress :handleAirFactory:factoryProgress
   111 jump *label30 always
-    * sensor *tmp99 .core @lead
-    * sensor *tmp102 A¾BFLW-air-factory13 @lead
-    * jump *label34 greaterThanEq *tmp102 0
-    * control config A©FJJU-unloader11 @lead
-    * jump *label17 always
-    * label *label34
   112 label *label30
   113 sensor *tmp107 .core @silicon
   114 select *tmp109 greaterThan *tmp107 0 15 0
 
   116 sensor *tmp112 A¾BFLW-air-factory13 @silicon
   117 select *tmp114 lessThan *tmp112 *tmp109 @silicon @coal
   118 control config *tmp110 *tmp114
-    * label *label18
   119 jump *label17 always
   120 label *label16
   121 op lessThan *tmp115 .monos .monoTarget
 
   153 op add *tmp248 280 *tmp247
   154 write *tmp248 .bank *tmp243
   155 jump *label137 always
-    * set .flares *tmp237
-    * write *tmp237 .display ".flares"
-    * jump *label144 always
   156 label *label137
   157 op add *tmp238 .monos 1
   158 set .monos *tmp238
   159 write *tmp238 .display ".monos"
   160 jump *label144 always
-    * jump *label143 always
-    * set .polys *tmp239
-    * write *tmp239 .display ".polys"
-    * jump *label144 always
-    * label *label141
-    * jump *label143 always
-    * set .megas *tmp240
-    * write *tmp240 .display ".megas"
-    * label *label143
   161 label *label144
   162 set .lastProgress 0
   163 control config A©FJJU-unloader11 @coal
 
   177 sensor *tmp158 A¾BFLW-air-factory13 @silicon
   178 select *tmp160 lessThan *tmp158 *tmp155 @silicon @coal
   179 control config *tmp156 *tmp160
-    * label *label42
   180 jump *label41 always
   181 label *label40
   182 set .airFactoryTarget null
 
   198 op add *tmp248 281 *tmp247
   199 write *tmp248 .bank *tmp243
   200 jump *label154 always
-    * set .flares *tmp237
-    * write *tmp237 .display ".flares"
-    * jump *label159 always
-    * label *label152
-    * jump *label154 always
-    * set .monos *tmp238
-    * write *tmp238 .display ".monos"
-    * jump *label159 always
   201 label *label154
   202 op add *tmp239 .polys 1
   203 set .polys *tmp239
   204 write *tmp239 .display ".polys"
   205 jump *label159 always
-    * jump *label158 always
-    * set .megas *tmp240
-    * write *tmp240 .display ".megas"
-    * label *label158
   206 label *label159
   207 set .recoEntered false
   208 set .lastRecoProgress 0
 
   248 jump *label65 always
   249 label *label78
   250 control enabled A{HDJa-inverted-sorter23 false
-    * label *label79
-    * label *label77
-    * label *label70
   251 jump *label65 always
   252 label *label64
   253 write null .display ".nextAddReco"
 
   284 op add *tmp248 282 *tmp247
   285 write *tmp248 .bank *tmp243
   286 jump *label171 always
-    * set .flares *tmp237
-    * write *tmp237 .display ".flares"
-    * jump *label174 always
-    * label *label167
-    * jump *label171 always
-    * set .monos *tmp238
-    * write *tmp238 .display ".monos"
-    * jump *label174 always
-    * label *label169
-    * jump *label171 always
-    * set .polys *tmp239
-    * write *tmp239 .display ".polys"
-    * jump *label174 always
   287 label *label171
   288 op add *tmp240 .megas 1
   289 set .megas *tmp240
 
   306 label *label13
   307 wait 1e12
   308 jump *label9 always
-    * end
   309 label *label0
   310 control config A©FJJU-unloader11 @coal
   311 control enabled A{HDJa-inverted-sorter23 false
   312 set .canConsume false
   313 set :buildStart*finished true
   314 jump *label9 always
-    * end
   315 label *label1
   316 set .canConsume true
   317 set :buildStop*finished true
   318 jump *label9 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   288 op add *tmp240 .megas 1
   289 set .megas *tmp240
   290 write *tmp240 .display ".megas"
-    * label *label174
   291 set .lastMultiProgress 0
   292 jump *label89 always
   293 label *label88

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-7 instructions):
 
   101 op add *tmp237 .flares 1
   102 set .flares *tmp237
   103 write *tmp237 .display ".flares"
-    * jump *label129 always
   104 label *label129
   105 set .lastProgress 0
   106 control config A©FJJU-unloader11 @coal
   107 jump *label17 always
   108 label *label27
   109 set .lastProgress :handleAirFactory:factoryProgress
-    * jump *label30 always
   110 label *label30
   111 sensor *tmp107 .core @silicon
   112 select *tmp109 greaterThan *tmp107 0 15 0
 
   150 op mul *tmp247 *tmp246 1000
   151 op add *tmp248 280 *tmp247
   152 write *tmp248 .bank *tmp243
-    * jump *label137 always
   153 label *label137
   154 op add *tmp238 .monos 1
   155 set .monos *tmp238
   156 write *tmp238 .display ".monos"
-    * jump *label144 always
   157 label *label144
   158 set .lastProgress 0
   159 control config A©FJJU-unloader11 @coal
 
   193 op mul *tmp247 *tmp246 1000
   194 op add *tmp248 281 *tmp247
   195 write *tmp248 .bank *tmp243
-    * jump *label154 always
   196 label *label154
   197 op add *tmp239 .polys 1
   198 set .polys *tmp239
   199 write *tmp239 .display ".polys"
-    * jump *label159 always
   200 label *label159
   201 set .recoEntered false
   202 set .lastRecoProgress 0
 
   277 op mul *tmp247 *tmp246 1000
   278 op add *tmp248 282 *tmp247
   279 write *tmp248 .bank *tmp243
-    * jump *label171 always
   280 label *label171
   281 op add *tmp240 .megas 1
   282 set .megas *tmp240

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
   101 op add *tmp237 .flares 1
   102 set .flares *tmp237
   103 write *tmp237 .display ".flares"
-    * label *label129
   104 set .lastProgress 0
   105 control config A©FJJU-unloader11 @coal
   106 jump *label17 always
   107 label *label27
   108 set .lastProgress :handleAirFactory:factoryProgress
-    * label *label30
   109 sensor *tmp107 .core @silicon
   110 select *tmp109 greaterThan *tmp107 0 15 0
   111 set *tmp110 A©FJJU-unloader11
 
   148 op mul *tmp247 *tmp246 1000
   149 op add *tmp248 280 *tmp247
   150 write *tmp248 .bank *tmp243
-    * label *label137
   151 op add *tmp238 .monos 1
   152 set .monos *tmp238
   153 write *tmp238 .display ".monos"
-    * label *label144
   154 set .lastProgress 0
   155 control config A©FJJU-unloader11 @coal
   156 jump *label41 always
 
   189 op mul *tmp247 *tmp246 1000
   190 op add *tmp248 281 *tmp247
   191 write *tmp248 .bank *tmp243
-    * label *label154
   192 op add *tmp239 .polys 1
   193 set .polys *tmp239
   194 write *tmp239 .display ".polys"
-    * label *label159
   195 set .recoEntered false
   196 set .lastRecoProgress 0
   197 jump *label67 always
 
   271 op mul *tmp247 *tmp246 1000
   272 op add *tmp248 282 *tmp247
   273 write *tmp248 .bank *tmp243
-    * label *label171
   274 op add *tmp240 .megas 1
   275 set .megas *tmp240
   276 write *tmp240 .display ".megas"

Final code before resolving virtual instructions:

    0:  jump *label8 always 0 0                                      CoreController.mnd: #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
        label *label8                                                ...
    3:  set .finished false                                          CoreController.mnd: remote var
    4:  set .flares 0                                                ...
    5:  set .monos 0                                                 ...
    6:  set .polys 1                                                 ...
    7:  set .megas 0                                                 ...
    8:  set .pressTarget 20                                          ...
    9:  set .smelterTarget 20                                        ...
   10:  set .kilnTarget 20                                           ...
   11:  set .flareTarget 0                                           ...
   12:  set .monoTarget 0                                            ...
   13:  set .polyTarget 0                                            ...
   14:  set .megaTarget 0                                            ...
   15:  set .powerTarget 1609                                        ...
   16:  set .lastProgress 0                                          CoreController.mnd: volatile var lastProgress = 0, lastRecoProgress = 0, lastMultiProgress = 0;
   17:  set .lastRecoProgress 0                                      ...
   18:  set .lastMultiProgress 0                                     ...
   19:  set .recoEntered false                                       CoreController.mnd: volatile var recoEntered = false;
   20:  set .canConsume true                                         CoreController.mnd: volatile var canConsume = true;
   21:  set .airFactoryTarget null                                   CoreController.mnd: var airFactoryTarget = null;
   22:  set *signature "eb9ab5a008f372ac:v1"                         CoreController.mnd: #set target = 8;
        label *label9                                                ...
   23:  jump *label13 notEqual .finished false                       CoreController.mnd: while !finished do
        label *label110                                              ...
   24:  set :backgroundProcess:ticks @tick                           CoreController.mnd: var ticks = @tick;
   25:  sensor :backgroundProcess:coreSilicon .core @silicon         CoreController.mnd: var coreSilicon = core.@silicon;
   26:  sensor :backgroundProcess:coreGraphite .core @graphite       CoreController.mnd: var coreGraphite = core.@graphite;
   27:  set *tmp35 ALQIJ]-silicon-smelter19                          CoreController.mnd: smelter2.enabled = smelter.enabled = coreSilicon < smelterTarget;
   28:  set *tmp37 ALMQJN-silicon-smelter4                           ...
   29:  op lessThan *tmp39 :backgroundProcess:coreSilicon .smelterTa ...
   30:  control enabled *tmp37 *tmp39 0 0 0                          ...
   31:  control enabled *tmp35 *tmp39 0 0 0                          ...
   32:  set *tmp40 AJEMJJ-graphite-press0                            CoreController.mnd: press.enabled = !multipress and coreGraphite < pressTarget;
   33:  op equal *tmp42 AKFRJ^-multi-press20 false                   ...
   34:  op lessThan *tmp43 :backgroundProcess:coreGraphite .pressTar ...
   35:  op land *tmp44 *tmp42 *tmp43                                 ...
   36:  control enabled *tmp40 *tmp44 0 0 0                          ...
   37:  set *tmp45 AKFRJ^-multi-press20                              CoreController.mnd: multipress.enabled = coreGraphite < pressTarget;
   38:  op lessThan *tmp47 :backgroundProcess:coreGraphite .pressTar ...
   39:  control enabled *tmp45 *tmp47 0 0 0                          ...
   40:  set *tmp48 ANOMJZ-kiln16                                     CoreController.mnd: kiln.enabled = core.@metaglass < kilnTarget;
   41:  sensor *tmp50 .core @metaglass                               ...
   42:  op lessThan *tmp51 *tmp50 .kilnTarget                        ...
   43:  control enabled *tmp48 *tmp51 0 0 0                          ...
   44:  sensor :backgroundProcess:power AJTJK-battery1 @totalPower  CoreController.mnd: var power = battery1.@totalPower;
   45:  jump *label14 equal AAKJ\-steam-generator18 false           CoreController.mnd: if steam_gen then
   46:  set *tmp54 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 9;
   47:  op lessThan *tmp56 :backgroundProcess:power 9                ...
   48:  control enabled *tmp54 *tmp56 0 0 0                          ...
   49:  set *tmp57 AAKJ\-steam-generator18                          CoreController.mnd: steam_gen.enabled = power < powerTarget;
   50:  op lessThan *tmp59 :backgroundProcess:power .powerTarget     ...
   51:  control enabled *tmp57 *tmp59 0 0 0                          ...
   52:  set *tmp60 AXTNJl-pulverizer34                               CoreController.mnd: pulverizer3.enabled = power > 900;
   53:  op greaterThan *tmp62 :backgroundProcess:power 900           ...
   54:  control enabled *tmp60 *tmp62 0 0 0                          ...
   55:  set *tmp63 AXTLJm-pulverizer35                               CoreController.mnd: pulverizer4.enabled = power > 1000;
   56:  op greaterThan *tmp65 :backgroundProcess:power 1000          ...
   57:  control enabled *tmp63 *tmp65 0 0 0                          ...
   58:  jump *label15 always 0 0                                     CoreController.mnd: if steam_gen then
        label *label14                                               ...
   59:  set *tmp66 AJRJM-combustion-generator3                      CoreController.mnd: generator.enabled = power < 809;
   60:  op lessThan *tmp68 :backgroundProcess:power 809              ...
   61:  control enabled *tmp66 *tmp68 0 0 0                          ...
        label *label15                                               CoreController.mnd: if steam_gen then
   62:  op lessThan *tmp69 .flares .flareTarget                      CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
   63:  op notEqual *tmp70 .airFactoryTarget @mono                   ...
   64:  op land *tmp71 *tmp69 *tmp70                                 ...
   65:  jump *label16 equal *tmp71 false                             ...
   66:  set .airFactoryTarget @flare                                 CoreController.mnd: display.nextFactory = airFactoryTarget = @flare;
   67:  write @flare .display ".nextFactory"                         ...
   68:  jump *label19 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
   69:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   70:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label19                                               CoreController.mnd: if !canConsume then
   71:  sensor *tmp77 AAKJ\-steam-generator18 @coal                 CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   72:  op mul *tmp78 5 AAKJ\-steam-generator18                     ...
   73:  jump *label21 greaterThanEq *tmp77 *tmp78                    ...
   74:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   75:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label21                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
   76:  jump *label23 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
   77:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
   78:  jump *label24 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label23                                               ...
   79:  jump *label25 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
   80:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label25                                               CoreController.mnd: elsif power > 500 then
        label *label24                                               CoreController.mnd: if power < 200 then
   81:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = unit;
   82:  sensor :handleAirFactory:factoryProgress A¾BFLW-air-factory1 CoreController.mnd: var factoryProgress = air_factory.@progress;
   83:  jump *label27 lessThanEq .lastProgress :handleAirFactory:fac CoreController.mnd: if lastProgress > factoryProgress then
   84:  read *tmp31 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
   85:  op sub *tmp243 *tmp31 1                                      ...
   86:  write *tmp243 .bank 511                                      ...
   87:  read *tmp246 .timer "time"                                   ...
   88:  op mul *tmp247 *tmp246 1000                                  ...
   89:  op add *tmp248 275 *tmp247                                   ...
   90:  write *tmp248 .bank *tmp243                                  ...
   91:  op add *tmp237 .flares 1                                     CoreController.mnd: when @flare then display.flares = ++flares;
   92:  set .flares *tmp237                                          ...
   93:  write *tmp237 .display ".flares"                             ...
   94:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
   95:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
   96:  jump *label17 always 0 0                                     CoreController.mnd: return;
        label *label27                                               CoreController.mnd: if lastProgress > factoryProgress then
   97:  set .lastProgress :handleAirFactory:factoryProgress          CoreController.mnd: lastProgress = factoryProgress;
   98:  sensor *tmp107 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
   99:  select *tmp109 greaterThan *tmp107 0 15 0                    ...
  100:  set *tmp110 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
  101:  sensor *tmp112 A¾BFLW-air-factory13 @silicon                 ...
  102:  select *tmp114 lessThan *tmp112 *tmp109 @silicon @coal       ...
  103:  control config *tmp110 *tmp114 0 0 0                         ...
  104:  jump *label17 always 0 0                                     CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
        label *label16                                               ...
  105:  op lessThan *tmp115 .monos .monoTarget                       CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
  106:  op notEqual *tmp116 .airFactoryTarget @flare                 ...
  107:  op land *tmp117 *tmp115 *tmp116                              ...
  108:  jump *label40 equal *tmp117 false                            ...
  109:  set .airFactoryTarget @mono                                  CoreController.mnd: display.nextFactory = airFactoryTarget = @mono;
  110:  write @mono .display ".nextFactory"                          ...
  111:  jump *label43 notEqual .canConsume false                     CoreController.mnd: if !canConsume then
  112:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  113:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label43                                               CoreController.mnd: if !canConsume then
  114:  sensor *tmp123 AAKJ\-steam-generator18 @coal                CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  115:  op mul *tmp124 5 AAKJ\-steam-generator18                    ...
  116:  jump *label45 greaterThanEq *tmp123 *tmp124                  ...
  117:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  118:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label45                                               CoreController.mnd: if steam_gen.@coal < 5 * steam_gen then
  119:  jump *label47 greaterThanEq :backgroundProcess:power 200     CoreController.mnd: if power < 200 then
  120:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  121:  jump *label48 always 0 0                                     CoreController.mnd: if power < 200 then
        label *label47                                               ...
  122:  jump *label49 lessThanEq :backgroundProcess:power 500        CoreController.mnd: elsif power > 500 then
  123:  control enabled A¾BFLW-air-factory13 true 0 0 0              CoreController.mnd: air_factory.enabled = true;
        label *label49                                               CoreController.mnd: elsif power > 500 then
        label *label48                                               CoreController.mnd: if power < 200 then
  124:  control config A¾BFLW-air-factory13 @mono 0 0 0              CoreController.mnd: air_factory.config = unit;
  125:  sensor :handleAirFactory.1:factoryProgress A¾BFLW-air-factor CoreController.mnd: var factoryProgress = air_factory.@progress;
  126:  jump *label51 lessThanEq .lastProgress :handleAirFactory.1:f CoreController.mnd: if lastProgress > factoryProgress then
  127:  read *tmp31 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  128:  op sub *tmp243 *tmp31 1                                      ...
  129:  write *tmp243 .bank 511                                      ...
  130:  read *tmp246 .timer "time"                                   ...
  131:  op mul *tmp247 *tmp246 1000                                  ...
  132:  op add *tmp248 280 *tmp247                                   ...
  133:  write *tmp248 .bank *tmp243                                  ...
  134:  op add *tmp238 .monos 1                                      CoreController.mnd: when @mono  then display.monos = ++monos;
  135:  set .monos *tmp238                                           ...
  136:  write *tmp238 .display ".monos"                              ...
  137:  set .lastProgress 0                                          CoreController.mnd: lastProgress = 0;
  138:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  139:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label51                                               CoreController.mnd: if lastProgress > factoryProgress then
  140:  set .lastProgress :handleAirFactory.1:factoryProgress        CoreController.mnd: lastProgress = factoryProgress;
  141:  sensor *tmp145 .core @lead                                   CoreController.mnd: var leadLimit = core.@lead > 0 ? lead : 0;
  142:  select *tmp147 greaterThan *tmp145 0 15 0                    ...
  143:  sensor *tmp148 A¾BFLW-air-factory13 @lead                    CoreController.mnd: if air_factory.@lead < leadLimit then
  144:  jump *label58 greaterThanEq *tmp148 *tmp147                  ...
  145:  control config A©FJJU-unloader11 @lead 0 0 0                 CoreController.mnd: unloader2.config = @lead;
  146:  jump *label41 always 0 0                                     CoreController.mnd: return;
        label *label58                                               CoreController.mnd: if air_factory.@lead < leadLimit then
  147:  sensor *tmp153 .core @silicon                                CoreController.mnd: var siliconLimit = core.@silicon > 0 ? silicon : 0;
  148:  select *tmp155 greaterThan *tmp153 0 30 0                    ...
  149:  set *tmp156 A©FJJU-unloader11                                CoreController.mnd: unloader2.config = air_factory.@silicon < siliconLimit ? @silicon : @coal;
  150:  sensor *tmp158 A¾BFLW-air-factory13 @silicon                 ...
  151:  select *tmp160 lessThan *tmp158 *tmp155 @silicon @coal       ...
  152:  control config *tmp156 *tmp160 0 0 0                         ...
  153:  jump *label41 always 0 0                                     CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
        label *label40                                               ...
  154:  set .airFactoryTarget null                                   CoreController.mnd: display.nextFactory = airFactoryTarget = null;
  155:  write null .display ".nextFactory"                           ...
  156:  control enabled A¾BFLW-air-factory13 false 0 0 0             CoreController.mnd: air_factory.enabled = false;
  157:  control config A¾BFLW-air-factory13 @flare 0 0 0             CoreController.mnd: air_factory.config = @flare;
  158:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
        label *label41                                               CoreController.mnd: elsif monos < monoTarget and airFactoryTarget != @flare then
        label *label17                                               CoreController.mnd: if flares < flareTarget and airFactoryTarget != @mono then
  159:  jump *label64 greaterThanEq .polys .polyTarget               CoreController.mnd: if polys < polyTarget then
  160:  write @poly .display ".nextAddReco"                          CoreController.mnd: display.nextAddReco = @poly;
  161:  sensor :backgroundProcess:recoProgress AÀF@Lb-additive-recon CoreController.mnd: var recoProgress = additive_rec.@progress;
  162:  jump *label66 lessThanEq .lastRecoProgress :backgroundProces CoreController.mnd: if lastRecoProgress > recoProgress then
  163:  read *tmp31 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  164:  op sub *tmp243 *tmp31 1                                      ...
  165:  write *tmp243 .bank 511                                      ...
  166:  read *tmp246 .timer "time"                                   ...
  167:  op mul *tmp247 *tmp246 1000                                  ...
  168:  op add *tmp248 281 *tmp247                                   ...
  169:  write *tmp248 .bank *tmp243                                  ...
  170:  op add *tmp239 .polys 1                                      CoreController.mnd: when @poly  then display.polys = ++polys;
  171:  set .polys *tmp239                                           ...
  172:  write *tmp239 .display ".polys"                              ...
  173:  set .recoEntered false                                       CoreController.mnd: recoEntered = false;
  174:  set .lastRecoProgress 0                                      CoreController.mnd: lastRecoProgress = 0;
  175:  jump *label67 always 0 0                                     CoreController.mnd: if lastRecoProgress > recoProgress then
        label *label66                                               ...
  176:  set .lastRecoProgress :backgroundProcess:recoProgress        CoreController.mnd: lastRecoProgress = recoProgress;
        label *label67                                               CoreController.mnd: if lastRecoProgress > recoProgress then
  177:  sensor :backgroundProcess:s AÀF@Lb-additive-reconstructor24  CoreController.mnd: var s = additive_rec.@silicon;
  178:  sensor :backgroundProcess:g AÀF@Lb-additive-reconstructor24  CoreController.mnd: var g = additive_rec.@graphite;
  179:  op greaterThanEq *tmp174 :backgroundProcess:s 40             CoreController.mnd: if s >= 40 and g >= 40 then
  180:  op greaterThanEq *tmp175 :backgroundProcess:g 40             ...
  181:  op land *tmp176 *tmp174 *tmp175                              ...
  182:  jump *label69 equal *tmp176 false                            ...
  183:  jump *label71 notEqual .recoEntered false                    CoreController.mnd: if not recoEntered then
  184:  sensor :backgroundProcess:x AÀF@Lb-additive-reconstructor24  CoreController.mnd: var x = additive_rec.@x;
  185:  sensor :backgroundProcess:y AÀF@Lb-additive-reconstructor24  CoreController.mnd: var y = additive_rec.@y;
  186:  ubind @mono                                                  CoreController.mnd: ubind(@mono);
        label *label73                                               CoreController.mnd: do
  187:  ucontrol move :backgroundProcess:x :backgroundProcess:y 0 0  CoreController.mnd: move(x, y);
  188:  ucontrol payEnter 0 0 0 0 0                                  CoreController.mnd: payEnter();
  189:  sensor *tmp182 @unit @dead                                   CoreController.mnd: while !@unit.@dead;
  190:  jump *label73 equal *tmp182 false                            CoreController.mnd: do
  191:  op sub *tmp184 .monos 1                                      CoreController.mnd: display.monos = --monos;
  192:  set .monos *tmp184                                           ...
  193:  write *tmp184 .display ".monos"                              ...
  194:  set .recoEntered true                                        CoreController.mnd: recoEntered = true;
        label *label71                                               CoreController.mnd: if not recoEntered then
  195:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  196:  jump *label65 always 0 0                                     CoreController.mnd: if s >= 40 and g >= 40 then
        label *label69                                               ...
  197:  op greaterThan *tmp187 :backgroundProcess:coreSilicon .silic CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
  198:  op mul *tmp188 40 *tmp187                                    ...
  199:  jump *label76 greaterThanEq :backgroundProcess:s *tmp188     ...
  200:  control config A©HFJ_-unloader21 @silicon 0 0 0              CoreController.mnd: unloader4.config = @silicon;
  201:  control enabled A{HDJa-inverted-sorter23 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  202:  jump *label65 always 0 0                                     CoreController.mnd: elsif s < 40 * (coreSilicon > siliconReserve) then
        label *label76                                               ...
  203:  op greaterThan *tmp196 :backgroundProcess:coreGraphite .grap CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
  204:  op mul *tmp197 40 *tmp196                                    ...
  205:  jump *label78 greaterThanEq :backgroundProcess:g *tmp197     ...
  206:  control config A©HFJ_-unloader21 @graphite 0 0 0             CoreController.mnd: unloader4.config = @graphite;
  207:  control enabled A{HDJa-inverted-sorter23 .canConsume 0 0 0   CoreController.mnd: inverted_sort4.enabled = canConsume;
  208:  jump *label65 always 0 0                                     CoreController.mnd: elsif g < 40 * (coreGraphite > graphiteReserve) then
        label *label78                                               ...
  209:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  210:  jump *label65 always 0 0                                     CoreController.mnd: if polys < polyTarget then
        label *label64                                               ...
  211:  write null .display ".nextAddReco"                           CoreController.mnd: display.nextAddReco = null;
  212:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
        label *label65                                               CoreController.mnd: if polys < polyTarget then
  213:  jump *label80 equal AÁNBJc-multiplicative-reconstructor25 fa CoreController.mnd: if multiplicative_rec then
  214:  write @mega .display ".nextMultiReco"                        CoreController.mnd: display.nextMultiReco = @mega;
  215:  set :backgroundProcess:c @metaglass                          CoreController.mnd: c = @metaglass;
  216:  sensor *tmp210 AÁNBJc-multiplicative-reconstructor25 @metagl CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  217:  jump *label83 lessThan *tmp210 40                            ...
  218:  set :backgroundProcess:c @titanium                           CoreController.mnd: c = @titanium;
  219:  sensor *tmp213 .core @titanium                               CoreController.mnd: elsif core.@titanium and multiplicative_rec.@titanium < 80 then
  220:  sensor *tmp214 AÁNBJc-multiplicative-reconstructor25 @titani ...
  221:  op lessThan *tmp215 *tmp214 80                               ...
  222:  op land *tmp216 *tmp213 *tmp215                              ...
  223:  jump *label85 notEqual *tmp216 false                         ...
  224:  sensor *tmp218 .core @silicon                                CoreController.mnd: elsif core.@silicon and multiplicative_rec.@silicon < 130 then
  225:  sensor *tmp219 AÁNBJc-multiplicative-reconstructor25 @silico ...
  226:  op lessThan *tmp220 *tmp219 130                              ...
  227:  op land *tmp221 *tmp218 *tmp220                              ...
  228:  select :backgroundProcess:c notEqual *tmp221 false @silicon  ...
        label *label85                                               CoreController.mnd: elsif core.@titanium and multiplicative_rec.@titanium < 80 then
        label *label83                                               CoreController.mnd: if multiplicative_rec.@metaglass < 40 then
  229:  control config A©NHJX-unloader14 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader3.config = c;
  230:  control config A©HFJ_-unloader21 :backgroundProcess:c 0 0 0  CoreController.mnd: unloader4.config = c;
  231:  sensor :backgroundProcess:multiProgress AÁNBJc-multiplicativ CoreController.mnd: var multiProgress = multiplicative_rec.@progress;
  232:  jump *label88 lessThanEq .lastMultiProgress :backgroundProce CoreController.mnd: if lastMultiProgress > multiProgress then
  233:  write null .display ".nextMultiReco"                         CoreController.mnd: display.nextMultiReco = null;
  234:  read *tmp31 .bank 511                                        CoreController.mnd: bank[--logPosition] = encodedId + timer.read("time") * 1000;
  235:  op sub *tmp243 *tmp31 1                                      ...
  236:  write *tmp243 .bank 511                                      ...
  237:  read *tmp246 .timer "time"                                   ...
  238:  op mul *tmp247 *tmp246 1000                                  ...
  239:  op add *tmp248 282 *tmp247                                   ...
  240:  write *tmp248 .bank *tmp243                                  ...
  241:  op add *tmp240 .megas 1                                      CoreController.mnd: when @mega  then display.megas = ++megas;
  242:  set .megas *tmp240                                           ...
  243:  write *tmp240 .display ".megas"                              ...
  244:  set .lastMultiProgress 0                                     CoreController.mnd: lastMultiProgress = 0;
  245:  jump *label89 always 0 0                                     CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label88                                               ...
  246:  jump *label91 lessThanEq :backgroundProcess:multiProgress 0  CoreController.mnd: if multiProgress > 0 then
  247:  control enabled A©RPJg-unloader29 false 0 0 0                CoreController.mnd: unloader_a.enabled = false;
  248:  set .smelterTarget 0                                         CoreController.mnd: smelterTarget = 0;
  249:  set .pressTarget 0                                           CoreController.mnd: pressTarget = 0;
  250:  set .kilnTarget 0                                            CoreController.mnd: kilnTarget = 0;
        label *label91                                               CoreController.mnd: if multiProgress > 0 then
  251:  set .lastMultiProgress :backgroundProcess:multiProgress      CoreController.mnd: lastMultiProgress = multiProgress;
        label *label89                                               CoreController.mnd: if lastMultiProgress > multiProgress then
        label *label80                                               CoreController.mnd: if multiplicative_rec then
  252:  op sub .loopTicks @tick :backgroundProcess:ticks             CoreController.mnd: loopTicks = @tick - ticks;
  253:  jump *label110 equal .finished false                         CoreController.mnd: while !finished do
        label *label13                                               ...
  254:  wait 1e12                                                    CoreController.mnd: #set target = 8;
  255:  jump *label9 always 0 0                                      ...
        label *label0                                                CoreController.mnd: remote void buildStart()
  256:  control config A©FJJU-unloader11 @coal 0 0 0                 CoreController.mnd: unloader2.config = @coal;
  257:  control enabled A{HDJa-inverted-sorter23 false 0 0 0         CoreController.mnd: inverted_sort4.enabled = false;
  258:  set .canConsume false                                        CoreController.mnd: canConsume = false;
  259:  set :buildStart*finished true                                CoreController.mnd: remote void buildStart()
  260:  jump *label9 always 0 0                                      ...
        label *label1                                                CoreController.mnd: remote void buildStop()
  261:  set .canConsume true                                         CoreController.mnd: canConsume = true;
  262:  set :buildStop*finished true                                 CoreController.mnd: remote void buildStop()
  263:  jump *label9 always 0 0                                      ...


Performance: parsed in 522 ms, compiled in 228 ms, optimized in 651 ms, run in 24 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (24 steps):
The program didn't generate any output.
Execution exception at instruction 25: sensor :backgroundProcess:coreSilicon .core @silicon:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
