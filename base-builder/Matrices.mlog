jump 3 always 0 0
jump 6 always 0 0
jump 434 always 0 0
set *signature "385702d66f725e74:v1"
wait 1e12
jump 4 always 0 0
ubind :createTerrainMask:unit
op add *tmp2 :createTerrainMask:y 3
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op shl *tmp0 :isSolid:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y 2
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y 1
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y -1
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y -2
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y -3
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask*retval *tmp0 :isSolid:result
set :createTerrainMask*finished true
jump 4 always 0 0
op sub :tileValue:x :computeRowValues:x 2
set :tileValue:y :computeRowValues:y
set :tileValue:ore :computeRowValues:ore
ucontrol getBlock :tileValue:x :tileValue:y type building floor
select value equal floor :tileValue:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue:result notEqual solid false 0.09803921568627451 value
op sub :tileValue.1:x :computeRowValues:x 1
set :tileValue.1:y :computeRowValues:y
set :tileValue.1:ore :computeRowValues:ore
ucontrol getBlock :tileValue.1:x :tileValue.1:y type building floor
select value equal floor :tileValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.1:result notEqual solid false 0.09803921568627451 value
set :tileValue.2:x :computeRowValues:x
set :tileValue.2:y :computeRowValues:y
set :tileValue.2:ore :computeRowValues:ore
ucontrol getBlock :tileValue.2:x :tileValue.2:y type building floor
select value equal floor :tileValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.2:result notEqual solid false 0.09803921568627451 value
op add :tileValue.3:x :computeRowValues:x 1
set :tileValue.3:y :computeRowValues:y
set :tileValue.3:ore :computeRowValues:ore
ucontrol getBlock :tileValue.3:x :tileValue.3:y type building floor
select value equal floor :tileValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.3:result notEqual solid false 0.09803921568627451 value
op add :tileValue.4:x :computeRowValues:x 2
set :tileValue.4:y :computeRowValues:y
set :tileValue.4:ore :computeRowValues:ore
ucontrol getBlock :tileValue.4:x :tileValue.4:y type building floor
select value equal floor :tileValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.4:result notEqual solid false 0.09803921568627451 value
jump 398 notEqual :computeRowValues:size 2
op add *tmp17 :tileValue:result :tileValue.1:result
op add *tmp18 :tileValue.1:result :tileValue.2:result
op add *tmp19 :tileValue.2:result :tileValue.3:result
op add *tmp20 :tileValue.3:result :tileValue.4:result
packcolor :computeRowValues*retval *tmp17 *tmp18 *tmp19 *tmp20
set @counter :computeRowValues*retaddr
jump 406 notEqual :computeRowValues:size 3
op add *tmp24 :tileValue.1:result :tileValue.2:result
op add *tmp25 :tileValue:result *tmp24
op add *tmp27 *tmp24 :tileValue.3:result
op add *tmp28 :tileValue.2:result :tileValue.3:result
op add *tmp29 *tmp28 :tileValue.4:result
packcolor :computeRowValues*retval *tmp25 *tmp27 *tmp29 0
set @counter :computeRowValues*retaddr
op sub :tileValue.5:x :computeRowValues:x 3
set :tileValue.5:y :computeRowValues:y
set :tileValue.5:ore :computeRowValues:ore
ucontrol getBlock :tileValue.5:x :tileValue.5:y type building floor
select value equal floor :tileValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.5:result notEqual solid false 0.09803921568627451 value
op add :tileValue.6:x :computeRowValues:x 3
set :tileValue.6:y :computeRowValues:y
set :tileValue.6:ore :computeRowValues:ore
ucontrol getBlock :tileValue.6:x :tileValue.6:y type building floor
select value equal floor :tileValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :tileValue:result :tileValue.1:result
op add *tmp36 *tmp35 :tileValue.2:result
op add *tmp37 :tileValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :tileValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :tileValue.2:result :tileValue.3:result
op add *tmp44 *tmp43 :tileValue.4:result
op add *tmp45 :tileValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :tileValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :computeRowValues*retval *tmp38 *tmp42 *tmp46 *tmp50
set @counter :computeRowValues*retaddr
ubind :findBestPosition:unit
op sub *tmp52 :findBestPosition:y 2
op sub :tileValue:x :findBestPosition:x 2
set :tileValue:y *tmp52
set :tileValue:ore :findBestPosition:ore
ucontrol getBlock :tileValue:x :tileValue:y type building floor
select value equal floor :tileValue:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue:result notEqual solid false 0.09803921568627451 value
op sub :tileValue.1:x :findBestPosition:x 1
set :tileValue.1:y *tmp52
set :tileValue.1:ore :findBestPosition:ore
ucontrol getBlock :tileValue.1:x :tileValue.1:y type building floor
select value equal floor :tileValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.1:result notEqual solid false 0.09803921568627451 value
set :tileValue.2:x :findBestPosition:x
set :tileValue.2:y *tmp52
set :tileValue.2:ore :findBestPosition:ore
ucontrol getBlock :tileValue.2:x :tileValue.2:y type building floor
select value equal floor :tileValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.2:result notEqual solid false 0.09803921568627451 value
op add :tileValue.3:x :findBestPosition:x 1
set :tileValue.3:y *tmp52
set :tileValue.3:ore :findBestPosition:ore
ucontrol getBlock :tileValue.3:x :tileValue.3:y type building floor
select value equal floor :tileValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.3:result notEqual solid false 0.09803921568627451 value
op add :tileValue.4:x :findBestPosition:x 2
set :tileValue.4:y *tmp52
set :tileValue.4:ore :findBestPosition:ore
ucontrol getBlock :tileValue.4:x :tileValue.4:y type building floor
select value equal floor :tileValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.4:result notEqual solid false 0.09803921568627451 value
jump 478 notEqual :findBestPosition:size 2
op add *tmp17 :tileValue:result :tileValue.1:result
op add *tmp18 :tileValue.1:result :tileValue.2:result
op add *tmp19 :tileValue.2:result :tileValue.3:result
op add *tmp20 :tileValue.3:result :tileValue.4:result
packcolor :findBestPosition:y1 *tmp17 *tmp18 *tmp19 *tmp20
jump 513 always 0 0
jump 486 notEqual :findBestPosition:size 3
op add *tmp24 :tileValue.1:result :tileValue.2:result
op add *tmp25 :tileValue:result *tmp24
op add *tmp27 *tmp24 :tileValue.3:result
op add *tmp28 :tileValue.2:result :tileValue.3:result
op add *tmp29 *tmp28 :tileValue.4:result
packcolor :findBestPosition:y1 *tmp25 *tmp27 *tmp29 0
jump 513 always 0 0
op sub :tileValue.5:x :findBestPosition:x 3
set :tileValue.5:y *tmp52
set :tileValue.5:ore :findBestPosition:ore
ucontrol getBlock :tileValue.5:x :tileValue.5:y type building floor
select value equal floor :tileValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.5:result notEqual solid false 0.09803921568627451 value
op add :tileValue.6:x :findBestPosition:x 3
set :tileValue.6:y *tmp52
set :tileValue.6:ore :findBestPosition:ore
ucontrol getBlock :tileValue.6:x :tileValue.6:y type building floor
select value equal floor :tileValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :tileValue:result :tileValue.1:result
op add *tmp36 *tmp35 :tileValue.2:result
op add *tmp37 :tileValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :tileValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :tileValue.2:result :tileValue.3:result
op add *tmp44 *tmp43 :tileValue.4:result
op add *tmp45 :tileValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :tileValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y1 *tmp38 *tmp42 *tmp46 *tmp50
op sub *tmp54 :findBestPosition:y 1
op sub :tileValue:x :findBestPosition:x 2
set :tileValue:y *tmp54
set :tileValue:ore :findBestPosition:ore
ucontrol getBlock :tileValue:x :tileValue:y type building floor
select value equal floor :tileValue:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue:result notEqual solid false 0.09803921568627451 value
op sub :tileValue.1:x :findBestPosition:x 1
set :tileValue.1:y *tmp54
set :tileValue.1:ore :findBestPosition:ore
ucontrol getBlock :tileValue.1:x :tileValue.1:y type building floor
select value equal floor :tileValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.1:result notEqual solid false 0.09803921568627451 value
set :tileValue.2:x :findBestPosition:x
set :tileValue.2:y *tmp54
set :tileValue.2:ore :findBestPosition:ore
ucontrol getBlock :tileValue.2:x :tileValue.2:y type building floor
select value equal floor :tileValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.2:result notEqual solid false 0.09803921568627451 value
op add :tileValue.3:x :findBestPosition:x 1
set :tileValue.3:y *tmp54
set :tileValue.3:ore :findBestPosition:ore
ucontrol getBlock :tileValue.3:x :tileValue.3:y type building floor
select value equal floor :tileValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.3:result notEqual solid false 0.09803921568627451 value
op add :tileValue.4:x :findBestPosition:x 2
set :tileValue.4:y *tmp54
set :tileValue.4:ore :findBestPosition:ore
ucontrol getBlock :tileValue.4:x :tileValue.4:y type building floor
select value equal floor :tileValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.4:result notEqual solid false 0.09803921568627451 value
jump 556 notEqual :findBestPosition:size 2
op add *tmp17 :tileValue:result :tileValue.1:result
op add *tmp18 :tileValue.1:result :tileValue.2:result
op add *tmp19 :tileValue.2:result :tileValue.3:result
op add *tmp20 :tileValue.3:result :tileValue.4:result
packcolor :findBestPosition:y2 *tmp17 *tmp18 *tmp19 *tmp20
jump 591 always 0 0
jump 564 notEqual :findBestPosition:size 3
op add *tmp24 :tileValue.1:result :tileValue.2:result
op add *tmp25 :tileValue:result *tmp24
op add *tmp27 *tmp24 :tileValue.3:result
op add *tmp28 :tileValue.2:result :tileValue.3:result
op add *tmp29 *tmp28 :tileValue.4:result
packcolor :findBestPosition:y2 *tmp25 *tmp27 *tmp29 0
jump 591 always 0 0
op sub :tileValue.5:x :findBestPosition:x 3
set :tileValue.5:y *tmp54
set :tileValue.5:ore :findBestPosition:ore
ucontrol getBlock :tileValue.5:x :tileValue.5:y type building floor
select value equal floor :tileValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.5:result notEqual solid false 0.09803921568627451 value
op add :tileValue.6:x :findBestPosition:x 3
set :tileValue.6:y *tmp54
set :tileValue.6:ore :findBestPosition:ore
ucontrol getBlock :tileValue.6:x :tileValue.6:y type building floor
select value equal floor :tileValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :tileValue:result :tileValue.1:result
op add *tmp36 *tmp35 :tileValue.2:result
op add *tmp37 :tileValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :tileValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :tileValue.2:result :tileValue.3:result
op add *tmp44 *tmp43 :tileValue.4:result
op add *tmp45 :tileValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :tileValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y2 *tmp38 *tmp42 *tmp46 *tmp50
op sub :tileValue:x :findBestPosition:x 2
set :tileValue:y :findBestPosition:y
set :tileValue:ore :findBestPosition:ore
ucontrol getBlock :tileValue:x :tileValue:y type building floor
select value equal floor :tileValue:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue:result notEqual solid false 0.09803921568627451 value
op sub :tileValue.1:x :findBestPosition:x 1
set :tileValue.1:y :findBestPosition:y
set :tileValue.1:ore :findBestPosition:ore
ucontrol getBlock :tileValue.1:x :tileValue.1:y type building floor
select value equal floor :tileValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.1:result notEqual solid false 0.09803921568627451 value
set :tileValue.2:x :findBestPosition:x
set :tileValue.2:y :findBestPosition:y
set :tileValue.2:ore :findBestPosition:ore
ucontrol getBlock :tileValue.2:x :tileValue.2:y type building floor
select value equal floor :tileValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.2:result notEqual solid false 0.09803921568627451 value
op add :tileValue.3:x :findBestPosition:x 1
set :tileValue.3:y :findBestPosition:y
set :tileValue.3:ore :findBestPosition:ore
ucontrol getBlock :tileValue.3:x :tileValue.3:y type building floor
select value equal floor :tileValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.3:result notEqual solid false 0.09803921568627451 value
op add :tileValue.4:x :findBestPosition:x 2
set :tileValue.4:y :findBestPosition:y
set :tileValue.4:ore :findBestPosition:ore
ucontrol getBlock :tileValue.4:x :tileValue.4:y type building floor
select value equal floor :tileValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.4:result notEqual solid false 0.09803921568627451 value
jump 633 notEqual :findBestPosition:size 2
op add *tmp17 :tileValue:result :tileValue.1:result
op add *tmp18 :tileValue.1:result :tileValue.2:result
op add *tmp19 :tileValue.2:result :tileValue.3:result
op add *tmp20 :tileValue.3:result :tileValue.4:result
packcolor :findBestPosition:y3 *tmp17 *tmp18 *tmp19 *tmp20
jump 668 always 0 0
jump 641 notEqual :findBestPosition:size 3
op add *tmp24 :tileValue.1:result :tileValue.2:result
op add *tmp25 :tileValue:result *tmp24
op add *tmp27 *tmp24 :tileValue.3:result
op add *tmp28 :tileValue.2:result :tileValue.3:result
op add *tmp29 *tmp28 :tileValue.4:result
packcolor :findBestPosition:y3 *tmp25 *tmp27 *tmp29 0
jump 668 always 0 0
op sub :tileValue.5:x :findBestPosition:x 3
set :tileValue.5:y :findBestPosition:y
set :tileValue.5:ore :findBestPosition:ore
ucontrol getBlock :tileValue.5:x :tileValue.5:y type building floor
select value equal floor :tileValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.5:result notEqual solid false 0.09803921568627451 value
op add :tileValue.6:x :findBestPosition:x 3
set :tileValue.6:y :findBestPosition:y
set :tileValue.6:ore :findBestPosition:ore
ucontrol getBlock :tileValue.6:x :tileValue.6:y type building floor
select value equal floor :tileValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :tileValue:result :tileValue.1:result
op add *tmp36 *tmp35 :tileValue.2:result
op add *tmp37 :tileValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :tileValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :tileValue.2:result :tileValue.3:result
op add *tmp44 *tmp43 :tileValue.4:result
op add *tmp45 :tileValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :tileValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y3 *tmp38 *tmp42 *tmp46 *tmp50
op add *tmp58 :findBestPosition:y 1
op sub :tileValue:x :findBestPosition:x 2
set :tileValue:y *tmp58
set :tileValue:ore :findBestPosition:ore
ucontrol getBlock :tileValue:x :tileValue:y type building floor
select value equal floor :tileValue:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue:result notEqual solid false 0.09803921568627451 value
op sub :tileValue.1:x :findBestPosition:x 1
set :tileValue.1:y *tmp58
set :tileValue.1:ore :findBestPosition:ore
ucontrol getBlock :tileValue.1:x :tileValue.1:y type building floor
select value equal floor :tileValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.1:result notEqual solid false 0.09803921568627451 value
set :tileValue.2:x :findBestPosition:x
set :tileValue.2:y *tmp58
set :tileValue.2:ore :findBestPosition:ore
ucontrol getBlock :tileValue.2:x :tileValue.2:y type building floor
select value equal floor :tileValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.2:result notEqual solid false 0.09803921568627451 value
op add :tileValue.3:x :findBestPosition:x 1
set :tileValue.3:y *tmp58
set :tileValue.3:ore :findBestPosition:ore
ucontrol getBlock :tileValue.3:x :tileValue.3:y type building floor
select value equal floor :tileValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.3:result notEqual solid false 0.09803921568627451 value
op add :tileValue.4:x :findBestPosition:x 2
set :tileValue.4:y *tmp58
set :tileValue.4:ore :findBestPosition:ore
ucontrol getBlock :tileValue.4:x :tileValue.4:y type building floor
select value equal floor :tileValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.4:result notEqual solid false 0.09803921568627451 value
jump 711 notEqual :findBestPosition:size 2
op add *tmp17 :tileValue:result :tileValue.1:result
op add *tmp18 :tileValue.1:result :tileValue.2:result
op add *tmp19 :tileValue.2:result :tileValue.3:result
op add *tmp20 :tileValue.3:result :tileValue.4:result
packcolor :findBestPosition:y4 *tmp17 *tmp18 *tmp19 *tmp20
jump 746 always 0 0
jump 719 notEqual :findBestPosition:size 3
op add *tmp24 :tileValue.1:result :tileValue.2:result
op add *tmp25 :tileValue:result *tmp24
op add *tmp27 *tmp24 :tileValue.3:result
op add *tmp28 :tileValue.2:result :tileValue.3:result
op add *tmp29 *tmp28 :tileValue.4:result
packcolor :findBestPosition:y4 *tmp25 *tmp27 *tmp29 0
jump 746 always 0 0
op sub :tileValue.5:x :findBestPosition:x 3
set :tileValue.5:y *tmp58
set :tileValue.5:ore :findBestPosition:ore
ucontrol getBlock :tileValue.5:x :tileValue.5:y type building floor
select value equal floor :tileValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.5:result notEqual solid false 0.09803921568627451 value
op add :tileValue.6:x :findBestPosition:x 3
set :tileValue.6:y *tmp58
set :tileValue.6:ore :findBestPosition:ore
ucontrol getBlock :tileValue.6:x :tileValue.6:y type building floor
select value equal floor :tileValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :tileValue:result :tileValue.1:result
op add *tmp36 *tmp35 :tileValue.2:result
op add *tmp37 :tileValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :tileValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :tileValue.2:result :tileValue.3:result
op add *tmp44 *tmp43 :tileValue.4:result
op add *tmp45 :tileValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :tileValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y4 *tmp38 *tmp42 *tmp46 *tmp50
op add *tmp60 :findBestPosition:y 2
op sub :tileValue:x :findBestPosition:x 2
set :tileValue:y *tmp60
set :tileValue:ore :findBestPosition:ore
ucontrol getBlock :tileValue:x :tileValue:y type building floor
select value equal floor :tileValue:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue:result notEqual solid false 0.09803921568627451 value
op sub :tileValue.1:x :findBestPosition:x 1
set :tileValue.1:y *tmp60
set :tileValue.1:ore :findBestPosition:ore
ucontrol getBlock :tileValue.1:x :tileValue.1:y type building floor
select value equal floor :tileValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.1:result notEqual solid false 0.09803921568627451 value
set :tileValue.2:x :findBestPosition:x
set :tileValue.2:y *tmp60
set :tileValue.2:ore :findBestPosition:ore
ucontrol getBlock :tileValue.2:x :tileValue.2:y type building floor
select value equal floor :tileValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.2:result notEqual solid false 0.09803921568627451 value
op add :tileValue.3:x :findBestPosition:x 1
set :tileValue.3:y *tmp60
set :tileValue.3:ore :findBestPosition:ore
ucontrol getBlock :tileValue.3:x :tileValue.3:y type building floor
select value equal floor :tileValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.3:result notEqual solid false 0.09803921568627451 value
op add :tileValue.4:x :findBestPosition:x 2
set :tileValue.4:y *tmp60
set :tileValue.4:ore :findBestPosition:ore
ucontrol getBlock :tileValue.4:x :tileValue.4:y type building floor
select value equal floor :tileValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.4:result notEqual solid false 0.09803921568627451 value
jump 789 notEqual :findBestPosition:size 2
op add *tmp17 :tileValue:result :tileValue.1:result
op add *tmp18 :tileValue.1:result :tileValue.2:result
op add *tmp19 :tileValue.2:result :tileValue.3:result
op add *tmp20 :tileValue.3:result :tileValue.4:result
packcolor :computeRowValues*retval *tmp17 *tmp18 *tmp19 *tmp20
jump 824 always 0 0
jump 797 notEqual :findBestPosition:size 3
op add *tmp24 :tileValue.1:result :tileValue.2:result
op add *tmp25 :tileValue:result *tmp24
op add *tmp27 *tmp24 :tileValue.3:result
op add *tmp28 :tileValue.2:result :tileValue.3:result
op add *tmp29 *tmp28 :tileValue.4:result
packcolor :computeRowValues*retval *tmp25 *tmp27 *tmp29 0
jump 824 always 0 0
op sub :tileValue.5:x :findBestPosition:x 3
set :tileValue.5:y *tmp60
set :tileValue.5:ore :findBestPosition:ore
ucontrol getBlock :tileValue.5:x :tileValue.5:y type building floor
select value equal floor :tileValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.5:result notEqual solid false 0.09803921568627451 value
op add :tileValue.6:x :findBestPosition:x 3
set :tileValue.6:y *tmp60
set :tileValue.6:ore :findBestPosition:ore
ucontrol getBlock :tileValue.6:x :tileValue.6:y type building floor
select value equal floor :tileValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :tileValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :tileValue:result :tileValue.1:result
op add *tmp36 *tmp35 :tileValue.2:result
op add *tmp37 :tileValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :tileValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :tileValue.2:result :tileValue.3:result
op add *tmp44 *tmp43 :tileValue.4:result
op add *tmp45 :tileValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :tileValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :computeRowValues*retval *tmp38 *tmp42 *tmp46 *tmp50
set :findBestPosition:y5 :computeRowValues*retval
set :findBestPosition:best 0
set :findBestPosition:bestX 0
set :findBestPosition:bestY 0
jump 883 notEqual :findBestPosition:size 3
op add *tmp64 :findBestPosition:y2 :findBestPosition:y3
op add :findBestPosition:row1 :findBestPosition:y1 *tmp64
op add :findBestPosition:row2 *tmp64 :findBestPosition:y4
op add *tmp68 :findBestPosition:y3 :findBestPosition:y4
op add :findBestPosition:row3 *tmp68 :computeRowValues*retval
unpackcolor :updateRowPositionsOdd:col1 :updateRowPositionsOdd:col2 :updateRowPositionsOdd:col3 0 :findBestPosition:row1
jump 840 lessThanEq :updateRowPositionsOdd:col1 0
jump 840 greaterThanEq :updateRowPositionsOdd:col1 0.0784313725490196
set :findBestPosition:bestX -1
set :findBestPosition:bestY -1
set :findBestPosition:best :updateRowPositionsOdd:col1
jump 845 lessThanEq :updateRowPositionsOdd:col2 :findBestPosition:best
jump 845 greaterThanEq :updateRowPositionsOdd:col2 0.0784313725490196
set :findBestPosition:bestX 0
set :findBestPosition:bestY -1
set :findBestPosition:best :updateRowPositionsOdd:col2
jump 850 lessThanEq :updateRowPositionsOdd:col3 :findBestPosition:best
jump 850 greaterThanEq :updateRowPositionsOdd:col3 0.0784313725490196
set :findBestPosition:bestX 1
set :findBestPosition:bestY -1
set :findBestPosition:best :updateRowPositionsOdd:col3
unpackcolor :updateRowPositionsOdd.1:col1 :updateRowPositionsOdd.1:col2 :updateRowPositionsOdd.1:col3 0 :findBestPosition:row2
jump 856 lessThanEq :updateRowPositionsOdd.1:col1 :findBestPosition:best
jump 856 greaterThanEq :updateRowPositionsOdd.1:col1 0.0784313725490196
set :findBestPosition:bestX -1
set :findBestPosition:bestY 0
set :findBestPosition:best :updateRowPositionsOdd.1:col1
jump 861 lessThanEq :updateRowPositionsOdd.1:col2 :findBestPosition:best
jump 861 greaterThanEq :updateRowPositionsOdd.1:col2 0.0784313725490196
set :findBestPosition:bestX 0
set :findBestPosition:bestY 0
set :findBestPosition:best :updateRowPositionsOdd.1:col2
jump 866 lessThanEq :updateRowPositionsOdd.1:col3 :findBestPosition:best
jump 866 greaterThanEq :updateRowPositionsOdd.1:col3 0.0784313725490196
set :findBestPosition:bestX 1
set :findBestPosition:bestY 0
set :findBestPosition:best :updateRowPositionsOdd.1:col3
unpackcolor :updateRowPositionsOdd.2:col1 :updateRowPositionsOdd.2:col2 :updateRowPositionsOdd.2:col3 0 :findBestPosition:row3
jump 872 lessThanEq :updateRowPositionsOdd.2:col1 :findBestPosition:best
jump 872 greaterThanEq :updateRowPositionsOdd.2:col1 0.0784313725490196
set :findBestPosition:bestX -1
set :findBestPosition:bestY 1
set :findBestPosition:best :updateRowPositionsOdd.2:col1
jump 877 lessThanEq :updateRowPositionsOdd.2:col2 :findBestPosition:best
jump 877 greaterThanEq :updateRowPositionsOdd.2:col2 0.0784313725490196
set :findBestPosition:bestX 0
set :findBestPosition:bestY 1
set :findBestPosition:best :updateRowPositionsOdd.2:col2
jump 996 lessThanEq :updateRowPositionsOdd.2:col3 :findBestPosition:best
jump 996 greaterThanEq :updateRowPositionsOdd.2:col3 0.0784313725490196
set :findBestPosition:bestX 1
set :findBestPosition:bestY 1
set :findBestPosition:best :updateRowPositionsOdd.2:col3
jump 996 always 0 0
jump 889 notEqual :findBestPosition:size 2
op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
jump 912 always 0 0
op sub *tmp115 :findBestPosition:y 3
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp115
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:size :findBestPosition:size
set :computeRowValues*retaddr 896
jump 356 always 0 0
set :findBestPosition:y0 :computeRowValues*retval
op add *tmp117 :findBestPosition:y 3
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp117
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:size :findBestPosition:size
set :computeRowValues*retaddr 904
jump 356 always 0 0
op add *tmp119 :findBestPosition:y1 :findBestPosition:y2
op add *tmp120 *tmp119 :findBestPosition:y3
op add :findBestPosition:row1 :findBestPosition:y0 *tmp120
op add :findBestPosition:row2 *tmp120 :findBestPosition:y4
op add *tmp125 :findBestPosition:y3 :findBestPosition:y4
op add *tmp126 *tmp125 :findBestPosition:y5
op add :findBestPosition:row3 :findBestPosition:y2 *tmp126
op add :findBestPosition:row4 *tmp126 :computeRowValues*retval
unpackcolor :updateRowPositionsEven:col1 :updateRowPositionsEven:col2 :updateRowPositionsEven:col3 :updateRowPositionsEven:col4 :findBestPosition:row1
jump 918 lessThanEq :updateRowPositionsEven:col1 :findBestPosition:best
jump 918 greaterThanEq :updateRowPositionsEven:col1 0.0784313725490196
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositionsEven:col1
jump 923 lessThanEq :updateRowPositionsEven:col2 :findBestPosition:best
jump 923 greaterThanEq :updateRowPositionsEven:col2 0.0784313725490196
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositionsEven:col2
jump 928 lessThanEq :updateRowPositionsEven:col3 :findBestPosition:best
jump 928 greaterThanEq :updateRowPositionsEven:col3 0.0784313725490196
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositionsEven:col3
jump 933 lessThanEq :updateRowPositionsEven:col4 :findBestPosition:best
jump 933 greaterThanEq :updateRowPositionsEven:col4 0.0784313725490196
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositionsEven:col4
unpackcolor :updateRowPositionsEven.1:col1 :updateRowPositionsEven.1:col2 :updateRowPositionsEven.1:col3 :updateRowPositionsEven.1:col4 :findBestPosition:row2
jump 939 lessThanEq :updateRowPositionsEven.1:col1 :findBestPosition:best
jump 939 greaterThanEq :updateRowPositionsEven.1:col1 0.0784313725490196
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositionsEven.1:col1
jump 944 lessThanEq :updateRowPositionsEven.1:col2 :findBestPosition:best
jump 944 greaterThanEq :updateRowPositionsEven.1:col2 0.0784313725490196
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositionsEven.1:col2
jump 949 lessThanEq :updateRowPositionsEven.1:col3 :findBestPosition:best
jump 949 greaterThanEq :updateRowPositionsEven.1:col3 0.0784313725490196
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositionsEven.1:col3
jump 954 lessThanEq :updateRowPositionsEven.1:col4 :findBestPosition:best
jump 954 greaterThanEq :updateRowPositionsEven.1:col4 0.0784313725490196
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositionsEven.1:col4
unpackcolor :updateRowPositionsEven.2:col1 :updateRowPositionsEven.2:col2 :updateRowPositionsEven.2:col3 :updateRowPositionsEven.2:col4 :findBestPosition:row3
jump 960 lessThanEq :updateRowPositionsEven.2:col1 :findBestPosition:best
jump 960 greaterThanEq :updateRowPositionsEven.2:col1 0.0784313725490196
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositionsEven.2:col1
jump 965 lessThanEq :updateRowPositionsEven.2:col2 :findBestPosition:best
jump 965 greaterThanEq :updateRowPositionsEven.2:col2 0.0784313725490196
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositionsEven.2:col2
jump 970 lessThanEq :updateRowPositionsEven.2:col3 :findBestPosition:best
jump 970 greaterThanEq :updateRowPositionsEven.2:col3 0.0784313725490196
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositionsEven.2:col3
jump 975 lessThanEq :updateRowPositionsEven.2:col4 :findBestPosition:best
jump 975 greaterThanEq :updateRowPositionsEven.2:col4 0.0784313725490196
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositionsEven.2:col4
unpackcolor :updateRowPositionsEven.3:col1 :updateRowPositionsEven.3:col2 :updateRowPositionsEven.3:col3 :updateRowPositionsEven.3:col4 :findBestPosition:row4
jump 981 lessThanEq :updateRowPositionsEven.3:col1 :findBestPosition:best
jump 981 greaterThanEq :updateRowPositionsEven.3:col1 0.0784313725490196
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositionsEven.3:col1
jump 986 lessThanEq :updateRowPositionsEven.3:col2 :findBestPosition:best
jump 986 greaterThanEq :updateRowPositionsEven.3:col2 0.0784313725490196
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositionsEven.3:col2
jump 991 lessThanEq :updateRowPositionsEven.3:col3 :findBestPosition:best
jump 991 greaterThanEq :updateRowPositionsEven.3:col3 0.0784313725490196
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositionsEven.3:col3
jump 996 lessThanEq :updateRowPositionsEven.3:col4 :findBestPosition:best
jump 996 greaterThanEq :updateRowPositionsEven.3:col4 0.0784313725490196
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositionsEven.3:col4
op mul :findBestPosition*retval :findBestPosition:best 255
set :findBestPosition*finished true
jump 4 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

