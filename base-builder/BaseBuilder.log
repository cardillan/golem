   669 instructions before optimizations.
    45 instructions eliminated by Temp Variables Elimination (3 passes, 7 iterations).
    56 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    13 instructions eliminated by Jump Optimization (5 iterations).
    44 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    11 instructions modified by Expression Optimization (2 passes, 3 iterations).
     1 instructions eliminated by If Expression Optimization (4 iterations).
   121 instructions eliminated by Data Flow Optimization (32 passes, 100 iterations).
     3 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (37 iterations).
     1 loops unrolled by Loop Unrolling.
   332 instructions added by Function Inlining (37 iterations).
    55 function calls inlined by Function Inlining.
     1 instructions eliminated by Jump Straightening (5 iterations).
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
   719 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 477):
    Replicate loop condition at BaseBuilder.mnd:245:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
  * Unroll iteration loop at BaseBuilder.mnd:179:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Inline function 'error' defined at BaseBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:88:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 490):
    Replicate loop condition at BaseBuilder.mnd:245:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
  * Inline function 'error' defined at BaseBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity (-6 instructions)
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:88:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 496):
  * Replicate loop condition at BaseBuilder.mnd:245:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at BaseBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 495):
  * Replicate loop condition at BaseBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at BaseBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 494):
  * Replicate loop condition at BaseBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 493):
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
  * Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385 (+16 instructions)
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 477):
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700 (+10 instructions)
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500

Pass 1: speed optimization selection (cost limit 467):
  * Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655 (+34 instructions)
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 433):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 428):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +255, benefit       98.0, efficiency      0.384
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 423):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +247, benefit       94.5, efficiency      0.383
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 418):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +239, benefit       91.0, efficiency      0.381
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 413):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +231, benefit       87.5, efficiency      0.379
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 408):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +223, benefit       84.0, efficiency      0.377
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 403):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +215, benefit       80.5, efficiency      0.374
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 398):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +207, benefit       77.0, efficiency      0.372
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 393):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +199, benefit       73.5, efficiency      0.369
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 388):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +191, benefit       70.0, efficiency      0.366
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 383):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +183, benefit       66.5, efficiency      0.363
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 378):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +175, benefit       63.0, efficiency      0.360
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 373):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +167, benefit       59.5, efficiency      0.356
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 368):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +159, benefit       56.0, efficiency      0.352
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 363):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +151, benefit       52.5, efficiency      0.348
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 358):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +143, benefit       49.0, efficiency      0.343
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 353):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +135, benefit       45.5, efficiency      0.337
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 348):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +127, benefit       42.0, efficiency      0.331
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 343):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +119, benefit       38.5, efficiency      0.324
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 338):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +111, benefit       35.0, efficiency      0.315
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:224:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 333):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +103, benefit       31.5, efficiency      0.306
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 328):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +95, benefit       28.0, efficiency      0.295
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 323):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +87, benefit       24.5, efficiency      0.282
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 318):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +79, benefit       21.0, efficiency      0.266
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 313):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246
  * Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257 (+30 instructions)
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:243:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:285:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 283):
  * Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246 (+41 instructions)
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:226:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-53 instructions):
 
    38 setaddr :buildBlockFromCfgLocal*retaddr *label51 (h:*label51)
    39 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label51) (h:*label51)
    40 label *label51
-    * set *tmp153 :buildBlockFromCfgLocal*retval
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label52 (h:*label52)
    43 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label52) (h:*label52)
    44 label *label52
-    * set *tmp154 :buildBlockFromCfgLocal*retval
    45 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    46 setaddr :buildBlockFromCfgLocal*retaddr *label53 (h:*label53)
    47 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label53) (h:*label53)
    48 label *label53
-    * set *tmp155 :buildBlockFromCfgLocal*retval
    49 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    50 setaddr :buildBlockFromCfgLocal*retaddr *label54 (h:*label54)
    51 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label54) (h:*label54)
    52 label *label54
-    * set *tmp156 :buildBlockFromCfgLocal*retval
    53 write 400 processor5 ".powerTarget"
    54 set .sandContainer .core
    55 jump *label55 equal .scrap false
 
    64 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
    65 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
    66 label *label58
-    * set *tmp159 :buildBlockFromCfgLocal*retval
    67 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
    68 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
    70 label *label59
    71 set *tmp160 :buildBlockFromCfgLocal*retval
-    * set *tmp157 *tmp160
    72 jump *label56 always
    73 label *label55
-    * set *tmp157 null
    74 label *label56
    75 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    76 setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
    77 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
    78 label *label60
-    * set *tmp161 :buildBlockFromCfgLocal*retval
    79 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
    80 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
    81 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
    82 label *label61
-    * set *tmp162 :buildBlockFromCfgLocal*retval
    83 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    84 write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
    85 write false processor5 ":meetTargetCfg:forBuild"
 
   115 setaddr :error*retaddr *label67 (h:*label67)
   116 call *label37 *invalid :error*retval (m:*label67) (h:*label67)
   117 label *label67
-    * set *tmp180 null
   118 jump *label66 always
   119 label *label65
-    * set *tmp180 null
   120 label *label66
   121 write @pneumatic-drill processor2 ".nextBlock"
   122 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
 
   140 setaddr :buildBlockFromCfgLocal*retaddr *label71 (h:*label71)
   141 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label71) (h:*label71)
   142 label *label71
-    * set *tmp186 :buildBlockFromCfgLocal*retval
   143 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   144 setaddr :buildBlockFromCfgLocal*retaddr *label72 (h:*label72)
   145 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
 
   151 setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
   152 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label73) (h:*label73)
   153 label *label73
-    * set *tmp188 :buildBlockFromCfgLocal*retval
   154 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   155 setaddr :buildBlockFromCfgLocal*retaddr *label74 (h:*label74)
   156 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label74) (h:*label74)
   157 label *label74
-    * set *tmp189 :buildBlockFromCfgLocal*retval
   158 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   159 setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
   160 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
   161 label *label75
   162 set *tmp190 :buildBlockFromCfgLocal*retval
-    * set *tmp185 *tmp190
   163 jump *label70 always
   164 label *label69
-    * set *tmp185 null
   165 label *label70
   166 write .sandContainer processor7 ".sandContainer"
   167 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   168 setaddr :buildBlockFromCfgLocal*retaddr *label76 (h:*label76)
   169 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label76) (h:*label76)
   170 label *label76
-    * set *tmp191 :buildBlockFromCfgLocal*retval
   171 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   172 setaddr :buildBlockFromCfgLocal*retaddr *label77 (h:*label77)
   173 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label77) (h:*label77)
   174 label *label77
-    * set *tmp192 :buildBlockFromCfgLocal*retval
   175 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   176 setaddr :buildBlockFromCfgLocal*retaddr *label78 (h:*label78)
   177 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)
   178 label *label78
-    * set *tmp193 :buildBlockFromCfgLocal*retval
   179 write 80 processor5 ".graphiteSurplus"
   180 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   181 set :buildBlockFromCfgLocal.1:config processor10
 
   188 read *tmp197 processor5 ":buildBlockFromCfg*finished"
   189 jump *label80 equal *tmp197 false
   190 read *tmp198 processor5 ":buildBlockFromCfg*retval"
-    * set *tmp194 *tmp198
   191 jump *label79 always
-    * set *tmp194 null
   192 label *label79
   193 write processor1 AÕFFJS-micro-processor9 ".timer"
   194 write processor2 AÕFFJS-micro-processor9 ".display"
 
   245 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   246 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
   247 label *label94
-    * set *tmp202 :buildBlockFromCfgLocal*retval
   248 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   249 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   250 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
   251 label *label95
-    * set *tmp203 :buildBlockFromCfgLocal*retval
   252 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   253 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   254 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
   255 label *label96
-    * set *tmp204 :buildBlockFromCfgLocal*retval
   256 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   257 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   258 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   259 label *label97
-    * set *tmp205 :buildBlockFromCfgLocal*retval
   260 set :setFlareTarget:target 1
   261 write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
   262 label *label98
 
   282 op lessThan *tmp208 *tmp207 300
   283 jump *label105 equal *tmp208 false
   284 jump *label103 always
-    * set *tmp209 null
   285 jump *label106 always
   286 label *label105
-    * set *tmp209 null
   287 label *label106
   288 label *label102
   289 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   295 setaddr :buildBlockFromCfgLocal*retaddr *label107 (h:*label107)
   296 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label107) (h:*label107)
   297 label *label107
-    * set *tmp211 :buildBlockFromCfgLocal*retval
   298 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   299 setaddr :buildBlockFromCfgLocal*retaddr *label108 (h:*label108)
   300 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label108) (h:*label108)
   301 label *label108
-    * set *tmp212 :buildBlockFromCfgLocal*retval
   302 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   303 setaddr :buildBlockFromCfgLocal*retaddr *label109 (h:*label109)
   304 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label109) (h:*label109)
   305 label *label109
-    * set *tmp213 :buildBlockFromCfgLocal*retval
   306 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   307 setaddr :buildBlockFromCfgLocal*retaddr *label110 (h:*label110)
   308 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label110) (h:*label110)
   309 label *label110
-    * set *tmp214 :buildBlockFromCfgLocal*retval
   310 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   311 setaddr :buildBlockFromCfgLocal*retaddr *label111 (h:*label111)
   312 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label111) (h:*label111)
   313 label *label111
-    * set *tmp215 :buildBlockFromCfgLocal*retval
   314 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   315 setaddr :buildBlockFromCfgLocal*retaddr *label112 (h:*label112)
   316 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label112) (h:*label112)
   317 label *label112
-    * set *tmp216 :buildBlockFromCfgLocal*retval
   318 write 200 processor5 ".graphiteSurplus"
   319 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   320 setaddr :buildBlockFromCfgLocal*retaddr *label113 (h:*label113)
   321 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label113) (h:*label113)
   322 label *label113
-    * set *tmp217 :buildBlockFromCfgLocal*retval
   323 jump *label114 equal .scrap false
   324 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   325 setaddr :buildBlockFromCfgLocal*retaddr *label116 (h:*label116)
   326 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label116) (h:*label116)
   327 label *label116
-    * set *tmp219 :buildBlockFromCfgLocal*retval
   328 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   329 setaddr :buildBlockFromCfgLocal*retaddr *label117 (h:*label117)
   330 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label117) (h:*label117)
   331 label *label117
-    * set *tmp220 :buildBlockFromCfgLocal*retval
   332 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   333 write false processor6 ":setScrapContainer*finished"
   334 write 1 processor6 "@counter"
 
   336 wait 1e-15
   337 read *tmp222 processor6 ":setScrapContainer*finished"
   338 jump *label118 equal *tmp222 false
-    * set *tmp218 null
   339 jump *label115 always
   340 label *label114
-    * set *tmp218 null
   341 label *label115
   342 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
   343 setaddr :buildBlockFromCfgLocal*retaddr *label119 (h:*label119)
   344 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label119) (h:*label119)
   345 label *label119
-    * set *tmp223 :buildBlockFromCfgLocal*retval
   346 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   347 setaddr :buildBlockFromCfgLocal*retaddr *label120 (h:*label120)
   348 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label120) (h:*label120)
   349 label *label120
-    * set *tmp224 :buildBlockFromCfgLocal*retval
   350 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   351 setaddr :buildBlockFromCfgLocal*retaddr *label121 (h:*label121)
   352 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label121) (h:*label121)
   353 label *label121
-    * set *tmp225 :buildBlockFromCfgLocal*retval
   354 write 1000 processor5 ".siliconSurplus"
   355 write 20 processor5 ".siliconMonoSurplus"
   356 write 100 processor5 ".metaglassSurplus"
 
   450 setaddr :error*retaddr *label142 (h:*label142)
   451 call *label37 *invalid :error*retval (m:*label142) (h:*label142)
   452 label *label142
-    * set *tmp254 null
   453 jump *label141 always
   454 label *label140
-    * set *tmp254 null
   455 label *label141
   456 write @laser-drill processor5 ":buildBlockAt:block"
   457 read *tmp53 processor3 ".drillX"
 
   477 setaddr :buildRemoteBlockLocal*retaddr *label144 (h:*label144)
   478 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label144) (h:*label144)
   479 label *label144
-    * set *tmp263 :buildRemoteBlockLocal*retval
   480 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   481 read *tmp59 processor3 ".water2X"
   482 set :buildRemoteBlockLocal:x *tmp59
 
   485 setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
   486 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
   487 label *label145
-    * set *tmp264 :buildRemoteBlockLocal*retval
   488 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   489 read *tmp61 processor3 ".generatorX"
   490 set :buildRemoteBlockLocal:x *tmp61
 
   503 setaddr :buildRemoteBlockLocal*retaddr *label147 (h:*label147)
   504 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label147) (h:*label147)
   505 label *label147
-    * set *tmp266 :buildRemoteBlockLocal*retval
   506 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   507 read *tmp65 processor3 ".node2X"
   508 set :buildRemoteBlockLocal:x *tmp65
 
   511 setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
   512 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
   513 label *label148
-    * set *tmp267 :buildRemoteBlockLocal*retval
   514 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   515 read *tmp67 processor3 ".panelX"
   516 set :buildRemoteBlockLocal:x *tmp67
 
   519 setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
   520 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label149) (h:*label149)
   521 label *label149
-    * set *tmp268 :buildRemoteBlockLocal*retval
   522 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   523 read *tmp69 processor3 ".batteryX"
   524 set :buildRemoteBlockLocal:x *tmp69
 
   542 op equal *tmp271 .thoriumContainer null
   543 jump *label152 equal *tmp271 false
   544 set .thoriumContainer .thoriumDrill
-    * set *tmp272 .thoriumContainer
   545 jump *label153 always
   546 label *label152
-    * set *tmp272 null
   547 label *label153
   548 write .thoriumDrill processor2 ".thoriumDrill"
   549 write .thoriumContainer processor2 ".thoriumContainer"
 
   585 setaddr :buildBlockFromCfgLocal*retaddr *label160 (h:*label160)
   586 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label160) (h:*label160)
   587 label *label160
-    * set *tmp280 :buildBlockFromCfgLocal*retval
   588 write 10 processor5 ".metaglassSurplus"
   589 set :setPolyTarget.1:target 0
   590 write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
 
   765 sensor *tmp321 @unit @mining
   766 jump *label198 equal *tmp321 false
   767 ucontrol stop
-    * set *tmp322 null
   768 jump *label199 always
   769 label *label198
-    * set *tmp322 null
   770 label *label199
   771 ubind :lineUpUnits:unit
   772 label *label196

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-3 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
    70 label *label59
-    * set *tmp160 :buildBlockFromCfgLocal*retval
    71 jump *label56 always
    72 label *label55
    73 label *label56
 
   158 setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
   159 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
   160 label *label75
-    * set *tmp190 :buildBlockFromCfgLocal*retval
   161 jump *label70 always
   162 label *label69
   163 label *label70
 
   185 wait 1e-15
   186 read *tmp197 processor5 ":buildBlockFromCfg*finished"
   187 jump *label80 equal *tmp197 false
-    * read *tmp198 processor5 ":buildBlockFromCfg*retval"
   188 jump *label79 always
   189 label *label79
   190 write processor1 AÕFFJS-micro-processor9 ".timer"

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-44 instructions):
 
    20 set .thoriumGenerator null
    21 label *label48
    22 ubind @poly
-    * set *tmp144 @unit
-    * set .builder *tmp144
-    * ulocate building core false @copper .coreX .coreY *tmp146 *tmp145
-    * set .core *tmp145
+   23 set .builder @unit
+   24 ulocate building core false @copper .coreX .coreY *tmp146 .core
    25 label *label49
    26 op equal *tmp147 .core null
    27 jump *label48 notEqual *tmp147 false
    28 label *label50
    29 ulocate ore core true @sand *tmp149 *tmp150 *tmp148 *tmp151
-    * op equal *tmp152 *tmp148 false
-    * set .scrap *tmp152
+   30 op equal .scrap *tmp148 false
    31 write .scrap processor2 ".scrap"
    32 write .scrap processor5 ".scrap"
    33 write .scrap processor7 ".scrap"
 
    54 setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
    55 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
    56 label *label57
-    * set *tmp158 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp158
+   57 set .sandContainer :buildBlockFromCfgLocal*retval
    58 write .sandContainer processor5 ".sandContainer"
    59 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    60 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
 
    98 wait 1e-15
    99 read *tmp177 processor3 ":findDrillLocation*finished"
   100 jump *label64 equal *tmp177 false
-    * read *tmp174 processor3 ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp174
-    * read *tmp175 processor3 ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp175
-    * read *tmp178 processor3 ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp178
+  101 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
+  102 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
+  103 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   104 op equal *tmp179 :buildFirstTitaniumDrill:result false
   105 jump *label65 equal *tmp179 false
   106 set :error:error "Cannot locate spot for titanium drill"
 
   119 wait 1e-15
   120 read *tmp183 processor5 ":buildFirstTitaniumDrillAt*finished"
   121 jump *label68 equal *tmp183 false
-    * read *tmp184 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp163 *tmp184
+  122 read *tmp163 processor5 ":buildFirstTitaniumDrillAt*retval"
   123 jump *label62 always
   124 set *tmp163 null
   125 label *label62
 
   135 setaddr :buildBlockFromCfgLocal*retaddr *label72 (h:*label72)
   136 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
   137 label *label72
-    * set *tmp187 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp187
+  138 set .sandContainer :buildBlockFromCfgLocal*retval
   139 write .sandContainer processor5 ".sandContainer"
   140 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   141 setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
 
   382 label *label132
   383 write @ore-titanium processor2 ".nextBlock"
   384 ubind @flare
-    * read *tmp51 processor3 ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp51
+  385 read :blocksBuildTitaniumDrills:current processor3 ".locations"
   386 write .coreX processor3 ":findDrillLocation:x"
   387 write .coreY processor3 ":findDrillLocation:y"
   388 write @unit processor3 ":findDrillLocation:unit"
 
   429 wait 1e-15
   430 read *tmp251 processor3 ":layoutThoriumDrill*finished"
   431 jump *label139 equal *tmp251 false
-    * read *tmp252 processor3 ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp252
+  432 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   433 op equal *tmp253 :buildThoriumDrill:result false
   434 jump *label140 equal *tmp253 false
   435 set :error:error "Cannot locate spot for thorium drill"
 
   453 wait 1e-15
   454 read *tmp261 processor5 ":buildBlockAt*finished"
   455 jump *label143 equal *tmp261 false
-    * read *tmp262 processor5 ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp262
+  456 read .thoriumDrill processor5 ":buildBlockAt*retval"
   457 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp55 processor3 ".water1X"
-    * set :buildRemoteBlockLocal:x *tmp55
-    * read *tmp56 processor3 ".water1Y"
-    * set :buildRemoteBlockLocal:y *tmp56
+  458 read :buildRemoteBlockLocal:x processor3 ".water1X"
+  459 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   460 setaddr :buildRemoteBlockLocal*retaddr *label144 (h:*label144)
   461 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label144) (h:*label144)
   462 label *label144
   463 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp59 processor3 ".water2X"
-    * set :buildRemoteBlockLocal:x *tmp59
-    * read *tmp60 processor3 ".water2Y"
-    * set :buildRemoteBlockLocal:y *tmp60
+  464 read :buildRemoteBlockLocal:x processor3 ".water2X"
+  465 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   466 setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
   467 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
   468 label *label145
   469 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
-    * read *tmp61 processor3 ".generatorX"
-    * set :buildRemoteBlockLocal:x *tmp61
-    * read *tmp62 processor3 ".generatorY"
-    * set :buildRemoteBlockLocal:y *tmp62
+  470 read :buildRemoteBlockLocal:x processor3 ".generatorX"
+  471 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   472 setaddr :buildRemoteBlockLocal*retaddr *label146 (h:*label146)
   473 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label146) (h:*label146)
   474 label *label146
-    * set *tmp265 :buildRemoteBlockLocal*retval
-    * set .thoriumGenerator *tmp265
+  475 set .thoriumGenerator :buildRemoteBlockLocal*retval
   476 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp63 processor3 ".node1X"
-    * set :buildRemoteBlockLocal:x *tmp63
-    * read *tmp64 processor3 ".node1Y"
-    * set :buildRemoteBlockLocal:y *tmp64
+  477 read :buildRemoteBlockLocal:x processor3 ".node1X"
+  478 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   479 setaddr :buildRemoteBlockLocal*retaddr *label147 (h:*label147)
   480 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label147) (h:*label147)
   481 label *label147
   482 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp65 processor3 ".node2X"
-    * set :buildRemoteBlockLocal:x *tmp65
-    * read *tmp66 processor3 ".node2Y"
-    * set :buildRemoteBlockLocal:y *tmp66
+  483 read :buildRemoteBlockLocal:x processor3 ".node2X"
+  484 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   485 setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
   486 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
   487 label *label148
   488 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
-    * read *tmp67 processor3 ".panelX"
-    * set :buildRemoteBlockLocal:x *tmp67
-    * read *tmp68 processor3 ".panelY"
-    * set :buildRemoteBlockLocal:y *tmp68
+  489 read :buildRemoteBlockLocal:x processor3 ".panelX"
+  490 read :buildRemoteBlockLocal:y processor3 ".panelY"
   491 setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
   492 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label149) (h:*label149)
   493 label *label149
   494 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
-    * read *tmp69 processor3 ".batteryX"
-    * set :buildRemoteBlockLocal:x *tmp69
-    * read *tmp70 processor3 ".batteryY"
-    * set :buildRemoteBlockLocal:y *tmp70
+  495 read :buildRemoteBlockLocal:x processor3 ".batteryX"
+  496 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   497 setaddr :buildRemoteBlockLocal*retaddr *label150 (h:*label150)
   498 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label150) (h:*label150)
   499 label *label150
-    * set *tmp269 :buildRemoteBlockLocal*retval
-    * set .thoriumBattery *tmp269
+  500 set .thoriumBattery :buildRemoteBlockLocal*retval
   501 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
-    * read *tmp57 processor3 ".containerX"
-    * set :buildRemoteBlockLocal:x *tmp57
-    * read *tmp58 processor3 ".containerY"
-    * set :buildRemoteBlockLocal:y *tmp58
+  502 read :buildRemoteBlockLocal:x processor3 ".containerX"
+  503 read :buildRemoteBlockLocal:y processor3 ".containerY"
   504 setaddr :buildRemoteBlockLocal*retaddr *label151 (h:*label151)
   505 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   506 label *label151
-    * set *tmp270 :buildRemoteBlockLocal*retval
-    * set .thoriumContainer *tmp270
+  507 set .thoriumContainer :buildRemoteBlockLocal*retval
   508 op equal *tmp271 .thoriumContainer null
   509 jump *label152 equal *tmp271 false
   510 set .thoriumContainer .thoriumDrill
 
   538 label *label156
   539 jump *label155 always
   540 label *label157
-    * op add *tmp277 4 .scrap
-    * set :setMonoTarget.2:target *tmp277
+  541 op add :setMonoTarget.2:target 4 .scrap
   542 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
   543 label *label159
   544 op mul *tmp278 700 .scrap
 
   564 call *label40 *invalid :buildUnits*retval (m:*label164) (h:*label164)
   565 label *label164
   566 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op sub *tmp281 *tmp82 1
-    * set :tmp *tmp281
+  567 op sub :tmp *tmp82 1
   568 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
   569 write :tmp AÕFFJS-micro-processor9 ".polys"
   570 write :tmp processor2 ".polys"
-    * sensor *tmp282 AÁNBJc-multiplicative-reconstructor25 @x
-    * set :x *tmp282
-    * sensor *tmp283 AÁNBJc-multiplicative-reconstructor25 @y
-    * set :y *tmp283
+  571 sensor :x AÁNBJc-multiplicative-reconstructor25 @x
+  572 sensor :y AÁNBJc-multiplicative-reconstructor25 @y
   573 label *label165
   574 ucontrol move :x :y
   575 ucontrol payEnter
 
   604 label *label172
   605 label *label173
   606 jump *label175 equal true false
-    * op add *tmp292 .coreY 6
-    * set :lineUpUnits:y *tmp292
+  607 op add :lineUpUnits:y .coreY 6
   608 set :lineUpUnits:unit @mega
   609 setaddr :lineUpUnits*retaddr *label176 (h:*label176)
   610 call *label42 *invalid :lineUpUnits*retval (m:*label176) (h:*label176)
   611 label *label176
-    * op add *tmp293 .coreY 2
-    * set :lineUpUnits:y *tmp293
+  612 op add :lineUpUnits:y .coreY 2
   613 set :lineUpUnits:unit @poly
   614 setaddr :lineUpUnits*retaddr *label177 (h:*label177)
   615 call *label42 *invalid :lineUpUnits*retval (m:*label177) (h:*label177)
   616 label *label177
-    * op sub *tmp294 .coreY 2
-    * set :lineUpUnits:y *tmp294
+  617 op sub :lineUpUnits:y .coreY 2
   618 set :lineUpUnits:unit @mono
   619 setaddr :lineUpUnits*retaddr *label178 (h:*label178)
   620 call *label42 *invalid :lineUpUnits*retval (m:*label178) (h:*label178)
   621 label *label178
-    * op sub *tmp295 .coreY 6
-    * set :lineUpUnits:y *tmp295
+  622 op sub :lineUpUnits:y .coreY 6
   623 set :lineUpUnits:unit @flare
   624 setaddr :lineUpUnits*retaddr *label179 (h:*label179)
   625 call *label42 *invalid :lineUpUnits*retval (m:*label179) (h:*label179)
 
   645 wait 1e-15
   646 read *tmp299 processor5 ":buildRemoteBlock*finished"
   647 jump *label182 equal *tmp299 false
-    * read *tmp300 processor5 ":buildRemoteBlock*retval"
-    * set :buildRemoteBlockLocal*retval *tmp300
+  648 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   649 label *label181
   650 return :buildRemoteBlockLocal*retaddr
   651 end
 
   658 wait 1e-15
   659 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   660 jump *label184 equal *tmp303 false
-    * read *tmp304 processor5 ":buildBlockFromCfg*retval"
-    * set :buildBlockFromCfgLocal*retval *tmp304
+  661 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   662 jump *label183 always
   663 set :buildBlockFromCfgLocal*retval null
   664 label *label183
 
   691 label *label41
   692 label *label188
   693 ubind :flagUnits:unit
-    * set *tmp316 @unit
-    * set :flagUnits:firstUnit *tmp316
+  694 set :flagUnits:firstUnit @unit
   695 label *label189
   696 op equal *tmp317 :flagUnits:firstUnit null
   697 jump *label188 notEqual *tmp317 false
   698 label *label190
-    * op add *tmp318 .coreX 8
-    * set :flagUnits:x *tmp318
+  699 op add :flagUnits:x .coreX 8
   700 label *label191
   701 ucontrol flag :flagUnits:x
   702 op add :flagUnits:x :flagUnits:x 4
 
   712 ubind :lineUpUnits:unit
   713 set :lineUpUnits:firstUnit @unit
   714 label *label195
-    * sensor *tmp320 @unit @flag
-    * set :lineUpUnits:x *tmp320
+  715 sensor :lineUpUnits:x @unit @flag
   716 ucontrol itemDrop @air 1000
   717 ucontrol move :lineUpUnits:x :lineUpUnits:y
   718 sensor *tmp321 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   603 call *label41 *invalid :flagUnits*retval (m:*label172) (h:*label172)
   604 label *label172
   605 label *label173
-    * jump *label175 equal true false
   606 op add :lineUpUnits:y .coreY 6
   607 set :lineUpUnits:unit @mega
   608 setaddr :lineUpUnits*retaddr *label176 (h:*label176)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-13 instructions):
 
    23 set .builder @unit
    24 ulocate building core false @copper .coreX .coreY *tmp146 .core
    25 label *label49
-    * op equal *tmp147 .core null
-    * jump *label48 notEqual *tmp147 false
+   26 jump *label48 equal .core null
    27 label *label50
    28 ulocate ore core true @sand *tmp149 *tmp150 *tmp148 *tmp151
    29 op equal .scrap *tmp148 false
 
   100 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
   101 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   102 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
-    * op equal *tmp179 :buildFirstTitaniumDrill:result false
-    * jump *label65 equal *tmp179 false
+  103 jump *label65 notEqual :buildFirstTitaniumDrill:result false
   104 set :error:error "Cannot locate spot for titanium drill"
   105 setaddr :error*retaddr *label67 (h:*label67)
   106 call *label37 *invalid :error*retval (m:*label67) (h:*label67)
 
   265 read *tmp206 processor5 ":supplyBase*finished"
   266 jump *label104 equal *tmp206 false
   267 sensor *tmp207 AJTJK-battery1 @totalPower
-    * op lessThan *tmp208 *tmp207 300
-    * jump *label105 equal *tmp208 false
+  268 jump *label105 greaterThanEq *tmp207 300
   269 jump *label103 always
   270 jump *label106 always
   271 label *label105
   272 label *label106
   273 label *label102
   274 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op lessThan *tmp210 *tmp81 3
-    * jump *label101 notEqual *tmp210 false
+  275 jump *label101 lessThan *tmp81 3
   276 label *label103
   277 write 65 processor5 ".siliconSurplus"
   278 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
 
   349 label *label124
   350 label *label125
   351 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp226 *tmp82 2
-    * jump *label127 equal *tmp226 false
+  352 jump *label127 greaterThanEq *tmp82 2
   353 write false processor5 ":supplyBase*finished"
   354 write 8 processor5 "@counter"
   355 label *label128
 
   364 label *label129
   365 label *label130
   366 read *tmp80 AÕFFJS-micro-processor9 ".flares"
-    * op lessThan *tmp228 *tmp80 2
-    * jump *label132 equal *tmp228 false
+  367 jump *label132 greaterThanEq *tmp80 2
   368 write false processor5 ":supplyBase*finished"
   369 write 8 processor5 "@counter"
   370 label *label133
 
   424 read *tmp251 processor3 ":layoutThoriumDrill*finished"
   425 jump *label139 equal *tmp251 false
   426 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
-    * op equal *tmp253 :buildThoriumDrill:result false
-    * jump *label140 equal *tmp253 false
+  427 jump *label140 notEqual :buildThoriumDrill:result false
   428 set :error:error "Cannot locate spot for thorium drill"
   429 setaddr :error*retaddr *label142 (h:*label142)
   430 call *label37 *invalid :error*retval (m:*label142) (h:*label142)
 
   498 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   499 label *label151
   500 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * op equal *tmp271 .thoriumContainer null
-    * jump *label152 equal *tmp271 false
+  501 jump *label152 notEqual .thoriumContainer null
   502 set .thoriumContainer .thoriumDrill
   503 jump *label153 always
   504 label *label152
 
   519 write null processor2 ".nextBlock"
   520 label *label155
   521 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp275 *tmp82 3
-    * jump *label157 equal *tmp275 false
+  522 jump *label157 greaterThanEq *tmp82 3
   523 write false processor5 ":supplyBase*finished"
   524 write 8 processor5 "@counter"
   525 label *label158
 
   566 ucontrol payEnter
   567 label *label166
   568 read *tmp83 AÕFFJS-micro-processor9 ".megas"
-    * op equal *tmp284 *tmp83 false
-    * jump *label165 notEqual *tmp284 false
+  569 jump *label165 equal *tmp83 false
   570 label *label167
   571 write true AÕFFJS-micro-processor9 ".finished"
   572 control enabled processor1 false
 
   682 ubind :flagUnits:unit
   683 set :flagUnits:firstUnit @unit
   684 label *label189
-    * op equal *tmp317 :flagUnits:firstUnit null
-    * jump *label188 notEqual *tmp317 false
+  685 jump *label188 equal :flagUnits:firstUnit null
   686 label *label190
   687 op add :flagUnits:x .coreX 8
   688 label *label191
 
   690 op add :flagUnits:x :flagUnits:x 4
   691 ubind :flagUnits:unit
   692 label *label192
-    * op notEqual *tmp319 @unit :flagUnits:firstUnit
-    * jump *label191 notEqual *tmp319 false
+  693 jump *label191 notEqual @unit :flagUnits:firstUnit
   694 label *label193
   695 label *label187
   696 return :flagUnits*retaddr
 
   710 label *label199
   711 ubind :lineUpUnits:unit
   712 label *label196
-    * op notEqual *tmp323 @unit :lineUpUnits:firstUnit
-    * jump *label195 notEqual *tmp323 false
+  713 jump *label195 notEqual @unit :lineUpUnits:firstUnit
   714 label *label197
   715 label *label194
   716 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
    63 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
    64 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
    65 label *label59
-    * jump *label56 always
    66 label *label55
    67 label *label56
    68 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
 
   104 setaddr :error*retaddr *label67 (h:*label67)
   105 call *label37 *invalid :error*retval (m:*label67) (h:*label67)
   106 label *label67
-    * jump *label66 always
   107 label *label65
   108 label *label66
   109 write @pneumatic-drill processor2 ".nextBlock"
 
   145 setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
   146 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
   147 label *label75
-    * jump *label70 always
   148 label *label69
   149 label *label70
   150 write .sandContainer processor7 ".sandContainer"
 
   171 wait 1e-15
   172 read *tmp197 processor5 ":buildBlockFromCfg*finished"
   173 jump *label80 equal *tmp197 false
-    * jump *label79 always
   174 label *label79
   175 write processor1 AÕFFJS-micro-processor9 ".timer"
   176 write processor2 AÕFFJS-micro-processor9 ".display"
 
   263 sensor *tmp207 AJTJK-battery1 @totalPower
   264 jump *label105 greaterThanEq *tmp207 300
   265 jump *label103 always
-    * jump *label106 always
   266 label *label105
   267 label *label106
   268 label *label102
 
   315 wait 1e-15
   316 read *tmp222 processor6 ":setScrapContainer*finished"
   317 jump *label118 equal *tmp222 false
-    * jump *label115 always
   318 label *label114
   319 label *label115
   320 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
 
   423 setaddr :error*retaddr *label142 (h:*label142)
   424 call *label37 *invalid :error*retval (m:*label142) (h:*label142)
   425 label *label142
-    * jump *label141 always
   426 label *label140
   427 label *label141
   428 write @laser-drill processor5 ":buildBlockAt:block"
 
   493 set .thoriumContainer :buildRemoteBlockLocal*retval
   494 jump *label152 notEqual .thoriumContainer null
   495 set .thoriumContainer .thoriumDrill
-    * jump *label153 always
   496 label *label152
   497 label *label153
   498 write .thoriumDrill processor2 ".thoriumDrill"
 
   697 sensor *tmp321 @unit @mining
   698 jump *label198 equal *tmp321 false
   699 ucontrol stop
-    * jump *label199 always
   700 label *label198
   701 label *label199
   702 ubind :lineUpUnits:unit

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
   221 multijump *tmp199 0 0 (m:marker0)
   222 multilabel *label93 (m:marker0)
   223 label *label83
-    * read *tmp201 @this "A©RPJg-unloader29"
+  224 set *tmp201 A©RPJg-unloader29
   225 write *tmp201 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   226 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   227 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    13 read *tmp143 processor5 "*signature"
    14 jump *label47 notEqual *tmp143 "b1abbf1945b2011d:v1"
    15 set .ERROR ""
-    * set .titaniumDrill null
-    * set .thoriumDrill null
-    * set .thoriumBattery null
-    * set .thoriumContainer null
-    * set .thoriumGenerator null
    16 label *label48
    17 ubind @poly
    18 set .builder @unit
 
    49 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
    50 label *label57
    51 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+   52 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    53 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    54 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
    55 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
 
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
    70 label *label61
    71 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
-    * write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
+   72 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    73 write false processor5 ":meetTargetCfg:forBuild"
    74 write false processor5 ":meetTargetCfg*finished"
    75 write 7 processor5 "@counter"
 
   112 jump *label68 equal *tmp183 false
   113 read *tmp163 processor5 ":buildFirstTitaniumDrillAt*retval"
   114 jump *label62 always
-    * set *tmp163 null
   115 label *label62
   116 set .titaniumDrill *tmp163
-    * write .titaniumDrill processor2 ".titaniumDrill"
-    * write .titaniumDrill processor5 ".titaniumDrill"
+  117 write *tmp163 processor2 ".titaniumDrill"
+  118 write *tmp163 processor5 ".titaniumDrill"
   119 jump *label69 equal .scrap false
   120 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   121 setaddr :buildBlockFromCfgLocal*retaddr *label71 (h:*label71)
 
   126 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
   127 label *label72
   128 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+  129 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   130 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   131 setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
   132 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label73) (h:*label73)
 
   157 write 80 processor5 ".graphiteSurplus"
   158 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   159 set :buildBlockFromCfgLocal.1:config processor10
-    * write :buildBlockFromCfgLocal.1:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write :buildBlockFromCfgLocal.1:config processor5 ":buildBlockFromCfg:config"
+  160 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
+  161 write processor10 processor5 ":buildBlockFromCfg:config"
   162 write false processor5 ":buildBlockFromCfg*finished"
   163 write 2 processor5 "@counter"
   164 label *label80
 
   234 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   235 label *label97
   236 set :setFlareTarget:target 1
-    * write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
+  237 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   238 label *label98
   239 set :setMonoTarget:target 5
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  240 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   241 label *label99
   242 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   243 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
 
   327 write 20 processor5 ".siliconMonoSurplus"
   328 write 100 processor5 ".metaglassSurplus"
   329 set :setMonoTarget.1:target 4
-    * write :setMonoTarget.1:target AÕFFJS-micro-processor9 ".monoTarget"
+  330 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   331 label *label122
   332 set :setPolyTarget:target 3
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  333 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   334 label *label123
   335 setaddr :buildUnits*retaddr *label124 (h:*label124)
   336 call *label40 *invalid :buildUnits*retval (m:*label124) (h:*label124)
 
   348 jump *label125 always
   349 label *label127
   350 set :setFlareTarget.1:target 2
-    * write :setFlareTarget.1:target AÕFFJS-micro-processor9 ".flareTarget"
+  351 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   352 label *label129
   353 label *label130
   354 read *tmp80 AÕFFJS-micro-processor9 ".flares"
 
   459 setaddr :buildRemoteBlockLocal*retaddr *label147 (h:*label147)
   460 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label147) (h:*label147)
   461 label *label147
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   462 read :buildRemoteBlockLocal:x processor3 ".node2X"
   463 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   464 setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
 
   484 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   485 label *label151
   486 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label152 notEqual .thoriumContainer null
+  487 jump *label152 notEqual :buildRemoteBlockLocal*retval null
   488 set .thoriumContainer .thoriumDrill
   489 label *label152
   490 label *label153
 
   528 label *label160
   529 write 10 processor5 ".metaglassSurplus"
   530 set :setPolyTarget.1:target 0
-    * write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
+  531 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   532 label *label161
   533 set :setFlareTarget.2:target 0
-    * write :setFlareTarget.2:target AÕFFJS-micro-processor9 ".flareTarget"
+  534 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   535 label *label162
   536 set :setMegaTarget:target 1
-    * write :setMegaTarget:target AÕFFJS-micro-processor9 ".megaTarget"
+  537 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   538 label *label163
   539 setaddr :buildUnits*retaddr *label164 (h:*label164)
   540 call *label40 *invalid :buildUnits*retval (m:*label164) (h:*label164)
 
   634 jump *label184 equal *tmp303 false
   635 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   636 jump *label183 always
-    * set :buildBlockFromCfgLocal*retval null
   637 label *label183
   638 return :buildBlockFromCfgLocal*retaddr
   639 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
    70 label *label61
-    * set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    71 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    72 write false processor5 ":meetTargetCfg:forBuild"
    73 write false processor5 ":meetTargetCfg*finished"
 
   112 read *tmp163 processor5 ":buildFirstTitaniumDrillAt*retval"
   113 jump *label62 always
   114 label *label62
-    * set .titaniumDrill *tmp163
   115 write *tmp163 processor2 ".titaniumDrill"
   116 write *tmp163 processor5 ".titaniumDrill"
   117 jump *label69 equal .scrap false
 
   153 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)
   154 label *label78
   155 write 80 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
-    * set :buildBlockFromCfgLocal.1:config processor10
   156 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   157 write processor10 processor5 ":buildBlockFromCfg:config"
   158 write false processor5 ":buildBlockFromCfg*finished"
 
   229 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   230 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   231 label *label97
-    * set :setFlareTarget:target 1
   232 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   233 label *label98
-    * set :setMonoTarget:target 5
   234 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   235 label *label99
   236 write 85 AÕFFJS-micro-processor9 ".pressTarget"
 
   320 write 1000 processor5 ".siliconSurplus"
   321 write 20 processor5 ".siliconMonoSurplus"
   322 write 100 processor5 ".metaglassSurplus"
-    * set :setMonoTarget.1:target 4
   323 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   324 label *label122
-    * set :setPolyTarget:target 3
   325 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   326 label *label123
   327 setaddr :buildUnits*retaddr *label124 (h:*label124)
 
   339 label *label126
   340 jump *label125 always
   341 label *label127
-    * set :setFlareTarget.1:target 2
   342 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   343 label *label129
   344 label *label130
 
   431 setaddr :buildRemoteBlockLocal*retaddr *label144 (h:*label144)
   432 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label144) (h:*label144)
   433 label *label144
-    * set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   434 read :buildRemoteBlockLocal:x processor3 ".water2X"
   435 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   436 setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
 
   517 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label160) (h:*label160)
   518 label *label160
   519 write 10 processor5 ".metaglassSurplus"
-    * set :setPolyTarget.1:target 0
   520 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   521 label *label161
-    * set :setFlareTarget.2:target 0
   522 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   523 label *label162
-    * set :setMegaTarget:target 1
   524 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   525 label *label163
   526 setaddr :buildUnits*retaddr *label164 (h:*label164)

Modifications by Iterated phase, Temp Variables Elimination, pass 1, iteration 1 (-1 instructions):
 
   211 multijump *tmp199 0 0 (m:marker0)
   212 multilabel *label93 (m:marker0)
   213 label *label83
-    * set *tmp201 A©RPJg-unloader29
-    * write *tmp201 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
+  214 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   215 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   216 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   217 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   473 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   474 label *label151
   475 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label152 notEqual :buildRemoteBlockLocal*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label152
-    * label *label153
+  476 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
   477 write .thoriumDrill processor2 ".thoriumDrill"
   478 write .thoriumContainer processor2 ".thoriumContainer"
   479 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Unroll iteration loop at BaseBuilder.mnd:179:5 (-2 instructions):
 
   166 write processor2 AÕFFJS-micro-processor9 ".display"
   167 write .core AÕFFJS-micro-processor9 ".core"
   168 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp199 *label84
-    * jump *label81 always
-    * multilabel *label84 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp199 *label85
-    * jump *label81 always
-    * multilabel *label85 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp199 *label86
-    * jump *label81 always
-    * multilabel *label86 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp199 *label87
-    * jump *label81 always
-    * multilabel *label87 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp199 *label88
-    * jump *label81 always
-    * multilabel *label88 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp199 *label89
-    * jump *label81 always
-    * multilabel *label89 (m:marker0)
-    * set :block "A©JNJP-unloader6"
-    * setaddr *tmp199 *label90
-    * jump *label81 always
-    * multilabel *label90 (m:marker0)
-    * set :block "A{HNJQ-inverted-sorter7"
-    * setaddr *tmp199 *label91
-    * jump *label81 always
-    * multilabel *label91 (m:marker0)
-    * set :block "AJPJR-underflow-gate8"
-    * setaddr *tmp199 *label92
-    * jump *label81 always
-    * multilabel *label92 (m:marker0)
-    * set :block "AÕFFJS-micro-processor9"
-    * setaddr *tmp199 *label93
-    * label *label81
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
-    * label *label82
-    * multijump *tmp199 0 0 (m:marker0)
-    * multilabel *label93 (m:marker0)
-    * label *label83
+  169 set :block "AJEMJJ-graphite-press0"
+  170 label *label201
+  171 read *tmp200 @this :block
+  172 write *tmp200 AÕFFJS-micro-processor9 :block
+  173 label *label202
+  174 set :block "AJTJK-battery1"
+  175 label *label205
+  176 read *tmp200 @this :block
+  177 write *tmp200 AÕFFJS-micro-processor9 :block
+  178 label *label206
+  179 set :block "ALTJL-battery2"
+  180 label *label209
+  181 read *tmp200 @this :block
+  182 write *tmp200 AÕFFJS-micro-processor9 :block
+  183 label *label210
+  184 set :block "AJRJM-combustion-generator3"
+  185 label *label213
+  186 read *tmp200 @this :block
+  187 write *tmp200 AÕFFJS-micro-processor9 :block
+  188 label *label214
+  189 set :block "ALMQJN-silicon-smelter4"
+  190 label *label217
+  191 read *tmp200 @this :block
+  192 write *tmp200 AÕFFJS-micro-processor9 :block
+  193 label *label218
+  194 set :block "A{LNJO-inverted-sorter5"
+  195 label *label221
+  196 read *tmp200 @this :block
+  197 write *tmp200 AÕFFJS-micro-processor9 :block
+  198 label *label222
+  199 set :block "A©JNJP-unloader6"
+  200 label *label225
+  201 read *tmp200 @this :block
+  202 write *tmp200 AÕFFJS-micro-processor9 :block
+  203 label *label226
+  204 set :block "A{HNJQ-inverted-sorter7"
+  205 label *label229
+  206 read *tmp200 @this :block
+  207 write *tmp200 AÕFFJS-micro-processor9 :block
+  208 label *label230
+  209 set :block "AJPJR-underflow-gate8"
+  210 label *label233
+  211 read *tmp200 @this :block
+  212 write *tmp200 AÕFFJS-micro-processor9 :block
+  213 label *label234
+  214 set :block "AÕFFJS-micro-processor9"
+  215 label *label237
+  216 read *tmp200 @this :block
+  217 write *tmp200 AÕFFJS-micro-processor9 :block
+  218 label *label238
+  219 label *label83
   220 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   221 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   222 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   168 write bank1 AÕFFJS-micro-processor9 ".bank"
   169 set :block "AJEMJJ-graphite-press0"
   170 label *label201
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  171 read *tmp200 @this "AJEMJJ-graphite-press0"
+  172 write *tmp200 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   173 label *label202
   174 set :block "AJTJK-battery1"
   175 label *label205
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  176 read *tmp200 @this "AJTJK-battery1"
+  177 write *tmp200 AÕFFJS-micro-processor9 "AJTJK-battery1"
   178 label *label206
   179 set :block "ALTJL-battery2"
   180 label *label209
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  181 read *tmp200 @this "ALTJL-battery2"
+  182 write *tmp200 AÕFFJS-micro-processor9 "ALTJL-battery2"
   183 label *label210
   184 set :block "AJRJM-combustion-generator3"
   185 label *label213
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  186 read *tmp200 @this "AJRJM-combustion-generator3"
+  187 write *tmp200 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   188 label *label214
   189 set :block "ALMQJN-silicon-smelter4"
   190 label *label217
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  191 read *tmp200 @this "ALMQJN-silicon-smelter4"
+  192 write *tmp200 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   193 label *label218
   194 set :block "A{LNJO-inverted-sorter5"
   195 label *label221
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  196 read *tmp200 @this "A{LNJO-inverted-sorter5"
+  197 write *tmp200 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   198 label *label222
   199 set :block "A©JNJP-unloader6"
   200 label *label225
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  201 read *tmp200 @this "A©JNJP-unloader6"
+  202 write *tmp200 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   203 label *label226
   204 set :block "A{HNJQ-inverted-sorter7"
   205 label *label229
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  206 read *tmp200 @this "A{HNJQ-inverted-sorter7"
+  207 write *tmp200 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   208 label *label230
   209 set :block "AJPJR-underflow-gate8"
   210 label *label233
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  211 read *tmp200 @this "AJPJR-underflow-gate8"
+  212 write *tmp200 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   213 label *label234
   214 set :block "AÕFFJS-micro-processor9"
   215 label *label237
-    * read *tmp200 @this :block
-    * write *tmp200 AÕFFJS-micro-processor9 :block
+  216 read *tmp200 @this "AÕFFJS-micro-processor9"
+  217 write *tmp200 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   218 label *label238
   219 label *label83
   220 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
 
   479 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   480 label *label151
   481 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
+  482 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   483 write .thoriumDrill processor2 ".thoriumDrill"
   484 write .thoriumContainer processor2 ".thoriumContainer"
   485 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   166 write processor2 AÕFFJS-micro-processor9 ".display"
   167 write .core AÕFFJS-micro-processor9 ".core"
   168 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   169 label *label201
   170 read *tmp200 @this "AJEMJJ-graphite-press0"
   171 write *tmp200 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   172 label *label202
-    * set :block "AJTJK-battery1"
   173 label *label205
   174 read *tmp200 @this "AJTJK-battery1"
   175 write *tmp200 AÕFFJS-micro-processor9 "AJTJK-battery1"
   176 label *label206
-    * set :block "ALTJL-battery2"
   177 label *label209
   178 read *tmp200 @this "ALTJL-battery2"
   179 write *tmp200 AÕFFJS-micro-processor9 "ALTJL-battery2"
   180 label *label210
-    * set :block "AJRJM-combustion-generator3"
   181 label *label213
   182 read *tmp200 @this "AJRJM-combustion-generator3"
   183 write *tmp200 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   184 label *label214
-    * set :block "ALMQJN-silicon-smelter4"
   185 label *label217
   186 read *tmp200 @this "ALMQJN-silicon-smelter4"
   187 write *tmp200 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   188 label *label218
-    * set :block "A{LNJO-inverted-sorter5"
   189 label *label221
   190 read *tmp200 @this "A{LNJO-inverted-sorter5"
   191 write *tmp200 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   192 label *label222
-    * set :block "A©JNJP-unloader6"
   193 label *label225
   194 read *tmp200 @this "A©JNJP-unloader6"
   195 write *tmp200 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   196 label *label226
-    * set :block "A{HNJQ-inverted-sorter7"
   197 label *label229
   198 read *tmp200 @this "A{HNJQ-inverted-sorter7"
   199 write *tmp200 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   200 label *label230
-    * set :block "AJPJR-underflow-gate8"
   201 label *label233
   202 read *tmp200 @this "AJPJR-underflow-gate8"
   203 write *tmp200 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   204 label *label234
-    * set :block "AÕFFJS-micro-processor9"
   205 label *label237
   206 read *tmp200 @this "AÕFFJS-micro-processor9"
   207 write *tmp200 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
 
   468 setaddr :buildRemoteBlockLocal*retaddr *label151 (h:*label151)
   469 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   470 label *label151
-    * set .thoriumContainer :buildRemoteBlockLocal*retval
   471 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   472 write .thoriumDrill processor2 ".thoriumDrill"
   473 write .thoriumContainer processor2 ".thoriumContainer"

Modifications by Inline function 'error' defined at BaseBuilder.mnd:20:1 (-4 instructions):
 
    95 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    96 jump *label65 notEqual :buildFirstTitaniumDrill:result false
    97 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label67 (h:*label67)
-    * call *label37 *invalid :error*retval (m:*label67) (h:*label67)
-    * label *label67
+   98 label *label242
+   99 set .ERROR :error:error
+  100 stop
+  101 label *label243
   102 label *label65
   103 label *label66
   104 write @pneumatic-drill processor2 ".nextBlock"
 
   401 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   402 jump *label140 notEqual :buildThoriumDrill:result false
   403 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label142 (h:*label142)
-    * call *label37 *invalid :error*retval (m:*label142) (h:*label142)
-    * label *label142
+  404 label *label244
+  405 set .ERROR :error:error
+  406 stop
+  407 label *label245
   408 label *label140
   409 label *label141
   410 write @laser-drill processor5 ":buildBlockAt:block"
 
   583 label *label175
   584 label *label168
   585 end
-    * label *label37
-    * set .ERROR :error:error
-    * stop
-    * label *label180
-    * return :error*retaddr
-    * end
   586 label *label38
   587 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
   588 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    96 jump *label65 notEqual :buildFirstTitaniumDrill:result false
    97 set :error:error "Cannot locate spot for titanium drill"
    98 label *label242
-    * set .ERROR :error:error
+   99 set .ERROR "Cannot locate spot for titanium drill"
   100 stop
   101 label *label243
   102 label *label65
 
   402 jump *label140 notEqual :buildThoriumDrill:result false
   403 set :error:error "Cannot locate spot for thorium drill"
   404 label *label244
-    * set .ERROR :error:error
+  405 set .ERROR "Cannot locate spot for thorium drill"
   406 stop
   407 label *label245
   408 label *label140

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    94 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    95 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    96 jump *label65 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    97 label *label242
    98 set .ERROR "Cannot locate spot for titanium drill"
    99 stop
 
   399 jump *label139 equal *tmp251 false
   400 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   401 jump *label140 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   402 label *label244
   403 set .ERROR "Cannot locate spot for thorium drill"
   404 stop

Modifications by Replicate loop condition at BaseBuilder.mnd:245:5 (+1 instructions):
 
   325 label *label125
   326 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   327 jump *label127 greaterThanEq *tmp82 2
+  328 label *label246
   329 write false processor5 ":supplyBase*finished"
   330 write 8 processor5 "@counter"
   331 label *label128
 
   333 read *tmp227 processor5 ":supplyBase*finished"
   334 jump *label128 equal *tmp227 false
   335 label *label126
-    * jump *label125 always
+  336 read *tmp82 AÕFFJS-micro-processor9 ".polys"
+  337 jump *label246 lessThan *tmp82 2
   338 label *label127
   339 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   340 label *label129

Modifications by Replicate loop condition at BaseBuilder.mnd:250:5 (+1 instructions):
 
   341 label *label130
   342 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   343 jump *label132 greaterThanEq *tmp80 2
+  344 label *label247
   345 write false processor5 ":supplyBase*finished"
   346 write 8 processor5 "@counter"
   347 label *label133
 
   349 read *tmp229 processor5 ":supplyBase*finished"
   350 jump *label133 equal *tmp229 false
   351 label *label131
-    * jump *label130 always
+  352 read *tmp80 AÕFFJS-micro-processor9 ".flares"
+  353 jump *label247 lessThan *tmp80 2
   354 label *label132
   355 write @ore-titanium processor2 ".nextBlock"
   356 ubind @flare

Modifications by Replicate loop condition at BaseBuilder.mnd:269:5 (+1 instructions):
 
   490 label *label155
   491 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   492 jump *label157 greaterThanEq *tmp82 3
+  493 label *label248
   494 write false processor5 ":supplyBase*finished"
   495 write 8 processor5 "@counter"
   496 label *label158
 
   498 read *tmp276 processor5 ":supplyBase*finished"
   499 jump *label158 equal *tmp276 false
   500 label *label156
-    * jump *label155 always
+  501 read *tmp82 AÕFFJS-micro-processor9 ".polys"
+  502 jump *label248 lessThan *tmp82 3
   503 label *label157
   504 op add :setMonoTarget.2:target 4 .scrap
   505 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Inline function 'lineUpUnits' defined at BaseBuilder.mnd:354:1 (+20 instructions):
 
   564 label *label173
   565 op add :lineUpUnits:y .coreY 6
   566 set :lineUpUnits:unit @mega
-    * setaddr :lineUpUnits*retaddr *label176 (h:*label176)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label176) (h:*label176)
-    * label *label176
+  567 label *label249
+  568 ubind :lineUpUnits:unit
+  569 set :lineUpUnits:firstUnit @unit
+  570 label *label250
+  571 sensor :lineUpUnits:x @unit @flag
+  572 ucontrol itemDrop @air 1000
+  573 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  574 sensor *tmp321 @unit @mining
+  575 jump *label251 equal *tmp321 false
+  576 ucontrol stop
+  577 label *label251
+  578 label *label252
+  579 ubind :lineUpUnits:unit
+  580 label *label253
+  581 jump *label250 notEqual @unit :lineUpUnits:firstUnit
+  582 label *label254
+  583 label *label255
   584 op add :lineUpUnits:y .coreY 2
   585 set :lineUpUnits:unit @poly
-    * setaddr :lineUpUnits*retaddr *label177 (h:*label177)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label177) (h:*label177)
-    * label *label177
+  586 label *label256
+  587 ubind :lineUpUnits:unit
+  588 set :lineUpUnits:firstUnit @unit
+  589 label *label257
+  590 sensor :lineUpUnits:x @unit @flag
+  591 ucontrol itemDrop @air 1000
+  592 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  593 sensor *tmp321 @unit @mining
+  594 jump *label258 equal *tmp321 false
+  595 ucontrol stop
+  596 label *label258
+  597 label *label259
+  598 ubind :lineUpUnits:unit
+  599 label *label260
+  600 jump *label257 notEqual @unit :lineUpUnits:firstUnit
+  601 label *label261
+  602 label *label262
   603 op sub :lineUpUnits:y .coreY 2
   604 set :lineUpUnits:unit @mono
-    * setaddr :lineUpUnits*retaddr *label178 (h:*label178)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label178) (h:*label178)
-    * label *label178
+  605 label *label263
+  606 ubind :lineUpUnits:unit
+  607 set :lineUpUnits:firstUnit @unit
+  608 label *label264
+  609 sensor :lineUpUnits:x @unit @flag
+  610 ucontrol itemDrop @air 1000
+  611 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  612 sensor *tmp321 @unit @mining
+  613 jump *label265 equal *tmp321 false
+  614 ucontrol stop
+  615 label *label265
+  616 label *label266
+  617 ubind :lineUpUnits:unit
+  618 label *label267
+  619 jump *label264 notEqual @unit :lineUpUnits:firstUnit
+  620 label *label268
+  621 label *label269
   622 op sub :lineUpUnits:y .coreY 6
   623 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label179 (h:*label179)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label179) (h:*label179)
-    * label *label179
+  624 label *label270
+  625 ubind :lineUpUnits:unit
+  626 set :lineUpUnits:firstUnit @unit
+  627 label *label271
+  628 sensor :lineUpUnits:x @unit @flag
+  629 ucontrol itemDrop @air 1000
+  630 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  631 sensor *tmp321 @unit @mining
+  632 jump *label272 equal *tmp321 false
+  633 ucontrol stop
+  634 label *label272
+  635 label *label273
+  636 ubind :lineUpUnits:unit
+  637 label *label274
+  638 jump *label271 notEqual @unit :lineUpUnits:firstUnit
+  639 label *label275
+  640 label *label276
   641 label *label174
   642 jump *label173 always
   643 label *label175
 
   713 label *label187
   714 return :flagUnits*retaddr
   715 end
-    * label *label42
-    * ubind :lineUpUnits:unit
-    * set :lineUpUnits:firstUnit @unit
-    * label *label195
-    * sensor :lineUpUnits:x @unit @flag
-    * ucontrol itemDrop @air 1000
-    * ucontrol move :lineUpUnits:x :lineUpUnits:y
-    * sensor *tmp321 @unit @mining
-    * jump *label198 equal *tmp321 false
-    * ucontrol stop
-    * label *label198
-    * label *label199
-    * ubind :lineUpUnits:unit
-    * label *label196
-    * jump *label195 notEqual @unit :lineUpUnits:firstUnit
-    * label *label197
-    * label *label194
-    * return :lineUpUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   565 op add :lineUpUnits:y .coreY 6
   566 set :lineUpUnits:unit @mega
   567 label *label249
-    * ubind :lineUpUnits:unit
+  568 ubind @mega
   569 set :lineUpUnits:firstUnit @unit
   570 label *label250
   571 sensor :lineUpUnits:x @unit @flag
 
   576 ucontrol stop
   577 label *label251
   578 label *label252
-    * ubind :lineUpUnits:unit
+  579 ubind @mega
   580 label *label253
   581 jump *label250 notEqual @unit :lineUpUnits:firstUnit
   582 label *label254
 
   584 op add :lineUpUnits:y .coreY 2
   585 set :lineUpUnits:unit @poly
   586 label *label256
-    * ubind :lineUpUnits:unit
+  587 ubind @poly
   588 set :lineUpUnits:firstUnit @unit
   589 label *label257
   590 sensor :lineUpUnits:x @unit @flag
 
   595 ucontrol stop
   596 label *label258
   597 label *label259
-    * ubind :lineUpUnits:unit
+  598 ubind @poly
   599 label *label260
   600 jump *label257 notEqual @unit :lineUpUnits:firstUnit
   601 label *label261
 
   603 op sub :lineUpUnits:y .coreY 2
   604 set :lineUpUnits:unit @mono
   605 label *label263
-    * ubind :lineUpUnits:unit
+  606 ubind @mono
   607 set :lineUpUnits:firstUnit @unit
   608 label *label264
   609 sensor :lineUpUnits:x @unit @flag
 
   614 ucontrol stop
   615 label *label265
   616 label *label266
-    * ubind :lineUpUnits:unit
+  617 ubind @mono
   618 label *label267
   619 jump *label264 notEqual @unit :lineUpUnits:firstUnit
   620 label *label268
 
   622 op sub :lineUpUnits:y .coreY 6
   623 set :lineUpUnits:unit @flare
   624 label *label270
-    * ubind :lineUpUnits:unit
+  625 ubind @flare
   626 set :lineUpUnits:firstUnit @unit
   627 label *label271
   628 sensor :lineUpUnits:x @unit @flag
 
   633 ucontrol stop
   634 label *label272
   635 label *label273
-    * ubind :lineUpUnits:unit
+  636 ubind @flare
   637 label *label274
   638 jump *label271 notEqual @unit :lineUpUnits:firstUnit
   639 label *label275

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   563 label *label172
   564 label *label173
   565 op add :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @mega
   566 label *label249
   567 ubind @mega
   568 set :lineUpUnits:firstUnit @unit
 
   581 label *label254
   582 label *label255
   583 op add :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @poly
   584 label *label256
   585 ubind @poly
   586 set :lineUpUnits:firstUnit @unit
 
   599 label *label261
   600 label *label262
   601 op sub :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @mono
   602 label *label263
   603 ubind @mono
   604 set :lineUpUnits:firstUnit @unit
 
   617 label *label268
   618 label *label269
   619 op sub :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @flare
   620 label *label270
   621 ubind @flare
   622 set :lineUpUnits:firstUnit @unit

Modifications by Inline function 'flagUnits' defined at BaseBuilder.mnd:340:1 (+14 instructions):
 
   546 control enabled processor5 false
   547 control enabled processor11 false
   548 set :flagUnits:unit @mega
-    * setaddr :flagUnits*retaddr *label169 (h:*label169)
-    * call *label41 *invalid :flagUnits*retval (m:*label169) (h:*label169)
-    * label *label169
+  549 label *label277
+  550 label *label278
+  551 ubind :flagUnits:unit
+  552 set :flagUnits:firstUnit @unit
+  553 label *label279
+  554 jump *label278 equal :flagUnits:firstUnit null
+  555 label *label280
+  556 op add :flagUnits:x .coreX 8
+  557 label *label281
+  558 ucontrol flag :flagUnits:x
+  559 op add :flagUnits:x :flagUnits:x 4
+  560 ubind :flagUnits:unit
+  561 label *label282
+  562 jump *label281 notEqual @unit :flagUnits:firstUnit
+  563 label *label283
+  564 label *label284
   565 set :flagUnits:unit @poly
-    * setaddr :flagUnits*retaddr *label170 (h:*label170)
-    * call *label41 *invalid :flagUnits*retval (m:*label170) (h:*label170)
-    * label *label170
+  566 label *label285
+  567 label *label286
+  568 ubind :flagUnits:unit
+  569 set :flagUnits:firstUnit @unit
+  570 label *label287
+  571 jump *label286 equal :flagUnits:firstUnit null
+  572 label *label288
+  573 op add :flagUnits:x .coreX 8
+  574 label *label289
+  575 ucontrol flag :flagUnits:x
+  576 op add :flagUnits:x :flagUnits:x 4
+  577 ubind :flagUnits:unit
+  578 label *label290
+  579 jump *label289 notEqual @unit :flagUnits:firstUnit
+  580 label *label291
+  581 label *label292
   582 set :flagUnits:unit @mono
-    * setaddr :flagUnits*retaddr *label171 (h:*label171)
-    * call *label41 *invalid :flagUnits*retval (m:*label171) (h:*label171)
-    * label *label171
+  583 label *label293
+  584 label *label294
+  585 ubind :flagUnits:unit
+  586 set :flagUnits:firstUnit @unit
+  587 label *label295
+  588 jump *label294 equal :flagUnits:firstUnit null
+  589 label *label296
+  590 op add :flagUnits:x .coreX 8
+  591 label *label297
+  592 ucontrol flag :flagUnits:x
+  593 op add :flagUnits:x :flagUnits:x 4
+  594 ubind :flagUnits:unit
+  595 label *label298
+  596 jump *label297 notEqual @unit :flagUnits:firstUnit
+  597 label *label299
+  598 label *label300
   599 set :flagUnits:unit @flare
-    * setaddr :flagUnits*retaddr *label172 (h:*label172)
-    * call *label41 *invalid :flagUnits*retval (m:*label172) (h:*label172)
-    * label *label172
+  600 label *label301
+  601 label *label302
+  602 ubind :flagUnits:unit
+  603 set :flagUnits:firstUnit @unit
+  604 label *label303
+  605 jump *label302 equal :flagUnits:firstUnit null
+  606 label *label304
+  607 op add :flagUnits:x .coreX 8
+  608 label *label305
+  609 ucontrol flag :flagUnits:x
+  610 op add :flagUnits:x :flagUnits:x 4
+  611 ubind :flagUnits:unit
+  612 label *label306
+  613 jump *label305 notEqual @unit :flagUnits:firstUnit
+  614 label *label307
+  615 label *label308
   616 label *label173
   617 op add :lineUpUnits:y .coreY 6
   618 label *label249
 
   743 label *label185
   744 return :buildUnits*retaddr
   745 end
-    * label *label41
-    * label *label188
-    * ubind :flagUnits:unit
-    * set :flagUnits:firstUnit @unit
-    * label *label189
-    * jump *label188 equal :flagUnits:firstUnit null
-    * label *label190
-    * op add :flagUnits:x .coreX 8
-    * label *label191
-    * ucontrol flag :flagUnits:x
-    * op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
-    * label *label192
-    * jump *label191 notEqual @unit :flagUnits:firstUnit
-    * label *label193
-    * label *label187
-    * return :flagUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   548 set :flagUnits:unit @mega
   549 label *label277
   550 label *label278
-    * ubind :flagUnits:unit
+  551 ubind @mega
   552 set :flagUnits:firstUnit @unit
   553 label *label279
   554 jump *label278 equal :flagUnits:firstUnit null
 
   557 label *label281
   558 ucontrol flag :flagUnits:x
   559 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  560 ubind @mega
   561 label *label282
   562 jump *label281 notEqual @unit :flagUnits:firstUnit
   563 label *label283
 
   565 set :flagUnits:unit @poly
   566 label *label285
   567 label *label286
-    * ubind :flagUnits:unit
+  568 ubind @poly
   569 set :flagUnits:firstUnit @unit
   570 label *label287
   571 jump *label286 equal :flagUnits:firstUnit null
 
   574 label *label289
   575 ucontrol flag :flagUnits:x
   576 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  577 ubind @poly
   578 label *label290
   579 jump *label289 notEqual @unit :flagUnits:firstUnit
   580 label *label291
 
   582 set :flagUnits:unit @mono
   583 label *label293
   584 label *label294
-    * ubind :flagUnits:unit
+  585 ubind @mono
   586 set :flagUnits:firstUnit @unit
   587 label *label295
   588 jump *label294 equal :flagUnits:firstUnit null
 
   591 label *label297
   592 ucontrol flag :flagUnits:x
   593 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  594 ubind @mono
   595 label *label298
   596 jump *label297 notEqual @unit :flagUnits:firstUnit
   597 label *label299
 
   599 set :flagUnits:unit @flare
   600 label *label301
   601 label *label302
-    * ubind :flagUnits:unit
+  602 ubind @flare
   603 set :flagUnits:firstUnit @unit
   604 label *label303
   605 jump *label302 equal :flagUnits:firstUnit null
 
   608 label *label305
   609 ucontrol flag :flagUnits:x
   610 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  611 ubind @flare
   612 label *label306
   613 jump *label305 notEqual @unit :flagUnits:firstUnit
   614 label *label307

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   545 control enabled processor3 false
   546 control enabled processor5 false
   547 control enabled processor11 false
-    * set :flagUnits:unit @mega
   548 label *label277
   549 label *label278
   550 ubind @mega
 
   561 jump *label281 notEqual @unit :flagUnits:firstUnit
   562 label *label283
   563 label *label284
-    * set :flagUnits:unit @poly
   564 label *label285
   565 label *label286
   566 ubind @poly
 
   577 jump *label289 notEqual @unit :flagUnits:firstUnit
   578 label *label291
   579 label *label292
-    * set :flagUnits:unit @mono
   580 label *label293
   581 label *label294
   582 ubind @mono
 
   593 jump *label297 notEqual @unit :flagUnits:firstUnit
   594 label *label299
   595 label *label300
-    * set :flagUnits:unit @flare
   596 label *label301
   597 label *label302
   598 ubind @flare

Modifications by Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 (+45 instructions):
 
   427 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   428 read :buildRemoteBlockLocal:x processor3 ".water1X"
   429 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label144 (h:*label144)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label144) (h:*label144)
-    * label *label144
+  430 label *label309
+  431 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  432 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  433 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  434 write false processor5 ":buildRemoteBlock*finished"
+  435 write 4 processor5 "@counter"
+  436 label *label310
+  437 wait 1e-15
+  438 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  439 jump *label310 equal *tmp299 false
+  440 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  441 label *label311
   442 read :buildRemoteBlockLocal:x processor3 ".water2X"
   443 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
-    * label *label145
+  444 label *label312
+  445 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  446 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  447 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  448 write false processor5 ":buildRemoteBlock*finished"
+  449 write 4 processor5 "@counter"
+  450 label *label313
+  451 wait 1e-15
+  452 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  453 jump *label313 equal *tmp299 false
+  454 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  455 label *label314
   456 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   457 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   458 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label146 (h:*label146)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label146) (h:*label146)
-    * label *label146
+  459 label *label315
+  460 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  461 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  462 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  463 write false processor5 ":buildRemoteBlock*finished"
+  464 write 4 processor5 "@counter"
+  465 label *label316
+  466 wait 1e-15
+  467 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  468 jump *label316 equal *tmp299 false
+  469 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  470 label *label317
   471 set .thoriumGenerator :buildRemoteBlockLocal*retval
   472 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   473 read :buildRemoteBlockLocal:x processor3 ".node1X"
   474 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label147 (h:*label147)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label147) (h:*label147)
-    * label *label147
+  475 label *label318
+  476 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  477 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  478 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  479 write false processor5 ":buildRemoteBlock*finished"
+  480 write 4 processor5 "@counter"
+  481 label *label319
+  482 wait 1e-15
+  483 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  484 jump *label319 equal *tmp299 false
+  485 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  486 label *label320
   487 read :buildRemoteBlockLocal:x processor3 ".node2X"
   488 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
-    * label *label148
+  489 label *label321
+  490 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  491 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  492 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  493 write false processor5 ":buildRemoteBlock*finished"
+  494 write 4 processor5 "@counter"
+  495 label *label322
+  496 wait 1e-15
+  497 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  498 jump *label322 equal *tmp299 false
+  499 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  500 label *label323
   501 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   502 read :buildRemoteBlockLocal:x processor3 ".panelX"
   503 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label149) (h:*label149)
-    * label *label149
+  504 label *label324
+  505 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  506 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  507 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  508 write false processor5 ":buildRemoteBlock*finished"
+  509 write 4 processor5 "@counter"
+  510 label *label325
+  511 wait 1e-15
+  512 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  513 jump *label325 equal *tmp299 false
+  514 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  515 label *label326
   516 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   517 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   518 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label150 (h:*label150)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label150) (h:*label150)
-    * label *label150
+  519 label *label327
+  520 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  521 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  522 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  523 write false processor5 ":buildRemoteBlock*finished"
+  524 write 4 processor5 "@counter"
+  525 label *label328
+  526 wait 1e-15
+  527 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  528 jump *label328 equal *tmp299 false
+  529 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  530 label *label329
   531 set .thoriumBattery :buildRemoteBlockLocal*retval
   532 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   533 read :buildRemoteBlockLocal:x processor3 ".containerX"
   534 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label151 (h:*label151)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
-    * label *label151
+  535 label *label330
+  536 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  537 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  538 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  539 write false processor5 ":buildRemoteBlock*finished"
+  540 write 4 processor5 "@counter"
+  541 label *label331
+  542 wait 1e-15
+  543 read *tmp299 processor5 ":buildRemoteBlock*finished"
+  544 jump *label331 equal *tmp299 false
+  545 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  546 label *label332
   547 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   548 write .thoriumDrill processor2 ".thoriumDrill"
   549 write .thoriumContainer processor2 ".thoriumContainer"
 
   759 label *label175
   760 label *label168
   761 end
-    * label *label38
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
-    * write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
-    * write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
-    * write false processor5 ":buildRemoteBlock*finished"
-    * write 4 processor5 "@counter"
-    * label *label182
-    * wait 1e-15
-    * read *tmp299 processor5 ":buildRemoteBlock*finished"
-    * jump *label182 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label181
-    * return :buildRemoteBlockLocal*retaddr
-    * end
   762 label *label39
   763 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
   764 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-5 instructions):
 
   428 read :buildRemoteBlockLocal:x processor3 ".water1X"
   429 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   430 label *label309
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  431 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   432 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   433 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   434 write false processor5 ":buildRemoteBlock*finished"
 
   437 wait 1e-15
   438 read *tmp299 processor5 ":buildRemoteBlock*finished"
   439 jump *label310 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   440 label *label311
   441 read :buildRemoteBlockLocal:x processor3 ".water2X"
   442 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   443 label *label312
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  444 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   445 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   446 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   447 write false processor5 ":buildRemoteBlock*finished"
 
   450 wait 1e-15
   451 read *tmp299 processor5 ":buildRemoteBlock*finished"
   452 jump *label313 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   453 label *label314
   454 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   455 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   456 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   457 label *label315
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  458 write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlock:cfg"
   459 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   460 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   461 write false processor5 ":buildRemoteBlock*finished"
 
   471 read :buildRemoteBlockLocal:x processor3 ".node1X"
   472 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   473 label *label318
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  474 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   475 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   476 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   477 write false processor5 ":buildRemoteBlock*finished"
 
   480 wait 1e-15
   481 read *tmp299 processor5 ":buildRemoteBlock*finished"
   482 jump *label319 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   483 label *label320
   484 read :buildRemoteBlockLocal:x processor3 ".node2X"
   485 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   486 label *label321
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  487 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   488 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   489 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   490 write false processor5 ":buildRemoteBlock*finished"
 
   493 wait 1e-15
   494 read *tmp299 processor5 ":buildRemoteBlock*finished"
   495 jump *label322 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   496 label *label323
   497 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   498 read :buildRemoteBlockLocal:x processor3 ".panelX"
   499 read :buildRemoteBlockLocal:y processor3 ".panelY"
   500 label *label324
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  501 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   502 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   503 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   504 write false processor5 ":buildRemoteBlock*finished"
 
   507 wait 1e-15
   508 read *tmp299 processor5 ":buildRemoteBlock*finished"
   509 jump *label325 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   510 label *label326
   511 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   512 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   513 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   514 label *label327
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  515 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   516 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   517 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   518 write false processor5 ":buildRemoteBlock*finished"
 
   528 read :buildRemoteBlockLocal:x processor3 ".containerX"
   529 read :buildRemoteBlockLocal:y processor3 ".containerY"
   530 label *label330
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  531 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   532 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   533 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   534 write false processor5 ":buildRemoteBlock*finished"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   424 read *tmp261 processor5 ":buildBlockAt*finished"
   425 jump *label143 equal *tmp261 false
   426 read .thoriumDrill processor5 ":buildBlockAt*retval"
-    * set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   427 read :buildRemoteBlockLocal:x processor3 ".water1X"
   428 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   429 label *label309
 
   450 read *tmp299 processor5 ":buildRemoteBlock*finished"
   451 jump *label313 equal *tmp299 false
   452 label *label314
-    * set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   453 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   454 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   455 label *label315
 
   465 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   466 label *label317
   467 set .thoriumGenerator :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   468 read :buildRemoteBlockLocal:x processor3 ".node1X"
   469 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   470 label *label318
 
   491 read *tmp299 processor5 ":buildRemoteBlock*finished"
   492 jump *label322 equal *tmp299 false
   493 label *label323
-    * set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   494 read :buildRemoteBlockLocal:x processor3 ".panelX"
   495 read :buildRemoteBlockLocal:y processor3 ".panelY"
   496 label *label324
 
   504 read *tmp299 processor5 ":buildRemoteBlock*finished"
   505 jump *label325 equal *tmp299 false
   506 label *label326
-    * set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   507 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   508 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   509 label *label327
 
   519 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   520 label *label329
   521 set .thoriumBattery :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   522 read :buildRemoteBlockLocal:x processor3 ".containerX"
   523 read :buildRemoteBlockLocal:y processor3 ".containerY"
   524 label *label330

Modifications by Inline function call at BaseBuilder.mnd:136:5 (+7 instructions):
 
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label51 (h:*label51)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label51) (h:*label51)
-    * label *label51
+   29 label *label333
+   30 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   31 write null processor5 ":buildBlockFromCfg:config"
+   32 write false processor5 ":buildBlockFromCfg*finished"
+   33 write 2 processor5 "@counter"
+   34 label *label334
+   35 wait 1e-15
+   36 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+   37 jump *label334 equal *tmp303 false
+   38 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   39 jump *label335 always
+   40 label *label335
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label52 (h:*label52)
    43 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label52) (h:*label52)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    29 label *label333
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   30 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    31 write null processor5 ":buildBlockFromCfg:config"
    32 write false processor5 ":buildBlockFromCfg*finished"
    33 write 2 processor5 "@counter"
 
    35 wait 1e-15
    36 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    37 jump *label334 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    38 jump *label335 always
    39 label *label335
    40 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    25 write .scrap processor2 ".scrap"
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
-    * set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    28 label *label333
    29 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    30 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:137:5 (+7 instructions):
 
    37 jump *label335 always
    38 label *label335
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label52 (h:*label52)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label52) (h:*label52)
-    * label *label52
+   40 label *label336
+   41 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   42 write null processor5 ":buildBlockFromCfg:config"
+   43 write false processor5 ":buildBlockFromCfg*finished"
+   44 write 2 processor5 "@counter"
+   45 label *label337
+   46 wait 1e-15
+   47 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+   48 jump *label337 equal *tmp303 false
+   49 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   50 jump *label338 always
+   51 label *label338
    52 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    53 setaddr :buildBlockFromCfgLocal*retaddr *label53 (h:*label53)
    54 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label53) (h:*label53)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    38 label *label335
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    40 label *label336
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   41 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    42 write null processor5 ":buildBlockFromCfg:config"
    43 write false processor5 ":buildBlockFromCfg*finished"
    44 write 2 processor5 "@counter"
 
    46 wait 1e-15
    47 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    48 jump *label337 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    49 jump *label338 always
    50 label *label338
    51 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    36 jump *label334 equal *tmp303 false
    37 jump *label335 always
    38 label *label335
-    * set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    39 label *label336
    40 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    41 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:138:5 (+7 instructions):
 
    48 jump *label338 always
    49 label *label338
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label53 (h:*label53)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label53) (h:*label53)
-    * label *label53
+   51 label *label339
+   52 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   53 write null processor5 ":buildBlockFromCfg:config"
+   54 write false processor5 ":buildBlockFromCfg*finished"
+   55 write 2 processor5 "@counter"
+   56 label *label340
+   57 wait 1e-15
+   58 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+   59 jump *label340 equal *tmp303 false
+   60 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   61 jump *label341 always
+   62 label *label341
    63 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    64 setaddr :buildBlockFromCfgLocal*retaddr *label54 (h:*label54)
    65 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label54) (h:*label54)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    49 label *label338
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    51 label *label339
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   52 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    53 write null processor5 ":buildBlockFromCfg:config"
    54 write false processor5 ":buildBlockFromCfg*finished"
    55 write 2 processor5 "@counter"
 
    57 wait 1e-15
    58 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    59 jump *label340 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    60 jump *label341 always
    61 label *label341
    62 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    47 jump *label337 equal *tmp303 false
    48 jump *label338 always
    49 label *label338
-    * set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    50 label *label339
    51 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    52 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:139:5 (+7 instructions):
 
    59 jump *label341 always
    60 label *label341
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label54 (h:*label54)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label54) (h:*label54)
-    * label *label54
+   62 label *label342
+   63 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   64 write null processor5 ":buildBlockFromCfg:config"
+   65 write false processor5 ":buildBlockFromCfg*finished"
+   66 write 2 processor5 "@counter"
+   67 label *label343
+   68 wait 1e-15
+   69 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+   70 jump *label343 equal *tmp303 false
+   71 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   72 jump *label344 always
+   73 label *label344
    74 write 400 processor5 ".powerTarget"
    75 set .sandContainer .core
    76 jump *label55 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    60 label *label341
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    62 label *label342
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   63 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    64 write null processor5 ":buildBlockFromCfg:config"
    65 write false processor5 ":buildBlockFromCfg*finished"
    66 write 2 processor5 "@counter"
 
    68 wait 1e-15
    69 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    70 jump *label343 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    71 jump *label344 always
    72 label *label344
    73 write 400 processor5 ".powerTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    58 jump *label340 equal *tmp303 false
    59 jump *label341 always
    60 label *label341
-    * set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    61 label *label342
    62 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    63 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:151:5 (+7 instructions):
 
    89 label *label55
    90 label *label56
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
-    * label *label60
+   92 label *label345
+   93 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   94 write null processor5 ":buildBlockFromCfg:config"
+   95 write false processor5 ":buildBlockFromCfg*finished"
+   96 write 2 processor5 "@counter"
+   97 label *label346
+   98 wait 1e-15
+   99 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  100 jump *label346 equal *tmp303 false
+  101 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  102 jump *label347 always
+  103 label *label347
   104 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   105 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
   106 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    90 label *label56
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    92 label *label345
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    94 write null processor5 ":buildBlockFromCfg:config"
    95 write false processor5 ":buildBlockFromCfg*finished"
    96 write 2 processor5 "@counter"
 
    98 wait 1e-15
    99 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   100 jump *label346 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   101 jump *label347 always
   102 label *label347
   103 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    88 label *label59
    89 label *label55
    90 label *label56
-    * set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    91 label *label345
    92 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:152:5 (+7 instructions):
 
   100 jump *label347 always
   101 label *label347
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
-    * label *label61
+  103 label *label348
+  104 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  105 write null processor5 ":buildBlockFromCfg:config"
+  106 write false processor5 ":buildBlockFromCfg*finished"
+  107 write 2 processor5 "@counter"
+  108 label *label349
+  109 wait 1e-15
+  110 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  111 jump *label349 equal *tmp303 false
+  112 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  113 jump *label350 always
+  114 label *label350
   115 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   116 write false processor5 ":meetTargetCfg:forBuild"
   117 write false processor5 ":meetTargetCfg*finished"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   101 label *label347
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   103 label *label348
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   111 jump *label349 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label350 always
   113 label *label350
   114 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    99 jump *label346 equal *tmp303 false
   100 jump *label347 always
   101 label *label347
-    * set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   102 label *label348
   103 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   104 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:167:5 (+7 instructions):
 
   183 label *label70
   184 write .sandContainer processor7 ".sandContainer"
   185 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label76 (h:*label76)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label76) (h:*label76)
-    * label *label76
+  186 label *label351
+  187 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  188 write null processor5 ":buildBlockFromCfg:config"
+  189 write false processor5 ":buildBlockFromCfg*finished"
+  190 write 2 processor5 "@counter"
+  191 label *label352
+  192 wait 1e-15
+  193 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  194 jump *label352 equal *tmp303 false
+  195 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  196 jump *label353 always
+  197 label *label353
   198 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   199 setaddr :buildBlockFromCfgLocal*retaddr *label77 (h:*label77)
   200 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label77) (h:*label77)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   184 write .sandContainer processor7 ".sandContainer"
   185 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   186 label *label351
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  187 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   188 write null processor5 ":buildBlockFromCfg:config"
   189 write false processor5 ":buildBlockFromCfg*finished"
   190 write 2 processor5 "@counter"
 
   192 wait 1e-15
   193 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   194 jump *label352 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   195 jump *label353 always
   196 label *label353
   197 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   182 label *label69
   183 label *label70
   184 write .sandContainer processor7 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   185 label *label351
   186 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   187 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:168:5 (+7 instructions):
 
   194 jump *label353 always
   195 label *label353
   196 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label77 (h:*label77)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label77) (h:*label77)
-    * label *label77
+  197 label *label354
+  198 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  199 write null processor5 ":buildBlockFromCfg:config"
+  200 write false processor5 ":buildBlockFromCfg*finished"
+  201 write 2 processor5 "@counter"
+  202 label *label355
+  203 wait 1e-15
+  204 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  205 jump *label355 equal *tmp303 false
+  206 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  207 jump *label356 always
+  208 label *label356
   209 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   210 setaddr :buildBlockFromCfgLocal*retaddr *label78 (h:*label78)
   211 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   195 label *label353
   196 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   197 label *label354
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  198 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   199 write null processor5 ":buildBlockFromCfg:config"
   200 write false processor5 ":buildBlockFromCfg*finished"
   201 write 2 processor5 "@counter"
 
   203 wait 1e-15
   204 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   205 jump *label355 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   206 jump *label356 always
   207 label *label356
   208 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   193 jump *label352 equal *tmp303 false
   194 jump *label353 always
   195 label *label353
-    * set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   196 label *label354
   197 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   198 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:169:5 (+7 instructions):
 
   205 jump *label356 always
   206 label *label356
   207 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label78 (h:*label78)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)
-    * label *label78
+  208 label *label357
+  209 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  210 write null processor5 ":buildBlockFromCfg:config"
+  211 write false processor5 ":buildBlockFromCfg*finished"
+  212 write 2 processor5 "@counter"
+  213 label *label358
+  214 wait 1e-15
+  215 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  216 jump *label358 equal *tmp303 false
+  217 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  218 jump *label359 always
+  219 label *label359
   220 write 80 processor5 ".graphiteSurplus"
   221 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   222 write processor10 processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   206 label *label356
   207 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   208 label *label357
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  209 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   210 write null processor5 ":buildBlockFromCfg:config"
   211 write false processor5 ":buildBlockFromCfg*finished"
   212 write 2 processor5 "@counter"
 
   214 wait 1e-15
   215 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   216 jump *label358 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   217 jump *label359 always
   218 label *label359
   219 write 80 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   204 jump *label355 equal *tmp303 false
   205 jump *label356 always
   206 label *label356
-    * set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   207 label *label357
   208 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:184:5 (+7 instructions):
 
   272 label *label83
   273 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   274 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
-    * label *label94
+  275 label *label360
+  276 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  277 write null processor5 ":buildBlockFromCfg:config"
+  278 write false processor5 ":buildBlockFromCfg*finished"
+  279 write 2 processor5 "@counter"
+  280 label *label361
+  281 wait 1e-15
+  282 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  283 jump *label361 equal *tmp303 false
+  284 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  285 jump *label362 always
+  286 label *label362
   287 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   288 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   289 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   273 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   274 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   275 label *label360
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  276 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   277 write null processor5 ":buildBlockFromCfg:config"
   278 write false processor5 ":buildBlockFromCfg*finished"
   279 write 2 processor5 "@counter"
 
   281 wait 1e-15
   282 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   283 jump *label361 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   284 jump *label362 always
   285 label *label362
   286 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   271 label *label238
   272 label *label83
   273 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
-    * set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   274 label *label360
   275 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   276 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:185:5 (+7 instructions):
 
   283 jump *label362 always
   284 label *label362
   285 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
-    * label *label95
+  286 label *label363
+  287 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  288 write null processor5 ":buildBlockFromCfg:config"
+  289 write false processor5 ":buildBlockFromCfg*finished"
+  290 write 2 processor5 "@counter"
+  291 label *label364
+  292 wait 1e-15
+  293 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  294 jump *label364 equal *tmp303 false
+  295 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  296 jump *label365 always
+  297 label *label365
   298 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   299 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   300 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   284 label *label362
   285 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   286 label *label363
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  287 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   288 write null processor5 ":buildBlockFromCfg:config"
   289 write false processor5 ":buildBlockFromCfg*finished"
   290 write 2 processor5 "@counter"
 
   292 wait 1e-15
   293 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   294 jump *label364 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   295 jump *label365 always
   296 label *label365
   297 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   282 jump *label361 equal *tmp303 false
   283 jump *label362 always
   284 label *label362
-    * set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   285 label *label363
   286 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   287 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:186:5 (+7 instructions):
 
   294 jump *label365 always
   295 label *label365
   296 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
-    * label *label96
+  297 label *label366
+  298 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  299 write null processor5 ":buildBlockFromCfg:config"
+  300 write false processor5 ":buildBlockFromCfg*finished"
+  301 write 2 processor5 "@counter"
+  302 label *label367
+  303 wait 1e-15
+  304 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  305 jump *label367 equal *tmp303 false
+  306 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  307 jump *label368 always
+  308 label *label368
   309 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   310 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   311 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   295 label *label365
   296 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   297 label *label366
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  298 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   299 write null processor5 ":buildBlockFromCfg:config"
   300 write false processor5 ":buildBlockFromCfg*finished"
   301 write 2 processor5 "@counter"
 
   303 wait 1e-15
   304 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   305 jump *label367 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   306 jump *label368 always
   307 label *label368
   308 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   293 jump *label364 equal *tmp303 false
   294 jump *label365 always
   295 label *label365
-    * set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   296 label *label366
   297 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   298 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:188:5 (+7 instructions):
 
   305 jump *label368 always
   306 label *label368
   307 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
-    * label *label97
+  308 label *label369
+  309 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  310 write null processor5 ":buildBlockFromCfg:config"
+  311 write false processor5 ":buildBlockFromCfg*finished"
+  312 write 2 processor5 "@counter"
+  313 label *label370
+  314 wait 1e-15
+  315 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  316 jump *label370 equal *tmp303 false
+  317 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  318 jump *label371 always
+  319 label *label371
   320 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   321 label *label98
   322 write 5 AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   306 label *label368
   307 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   308 label *label369
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  309 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   310 write null processor5 ":buildBlockFromCfg:config"
   311 write false processor5 ":buildBlockFromCfg*finished"
   312 write 2 processor5 "@counter"
 
   314 wait 1e-15
   315 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   316 jump *label370 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   317 jump *label371 always
   318 label *label371
   319 write 1 AÕFFJS-micro-processor9 ".flareTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   304 jump *label367 equal *tmp303 false
   305 jump *label368 always
   306 label *label368
-    * set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   307 label *label369
   308 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   309 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:213:5 (+7 instructions):
 
   345 label *label103
   346 write 65 processor5 ".siliconSurplus"
   347 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label107 (h:*label107)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label107) (h:*label107)
-    * label *label107
+  348 label *label372
+  349 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  350 write null processor5 ":buildBlockFromCfg:config"
+  351 write false processor5 ":buildBlockFromCfg*finished"
+  352 write 2 processor5 "@counter"
+  353 label *label373
+  354 wait 1e-15
+  355 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  356 jump *label373 equal *tmp303 false
+  357 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  358 jump *label374 always
+  359 label *label374
   360 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   361 setaddr :buildBlockFromCfgLocal*retaddr *label108 (h:*label108)
   362 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label108) (h:*label108)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   346 write 65 processor5 ".siliconSurplus"
   347 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   348 label *label372
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  349 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   350 write null processor5 ":buildBlockFromCfg:config"
   351 write false processor5 ":buildBlockFromCfg*finished"
   352 write 2 processor5 "@counter"
 
   354 wait 1e-15
   355 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   356 jump *label373 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   357 jump *label374 always
   358 label *label374
   359 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   344 jump *label101 lessThan *tmp81 3
   345 label *label103
   346 write 65 processor5 ".siliconSurplus"
-    * set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   347 label *label372
   348 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   349 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:214:5 (+7 instructions):
 
   356 jump *label374 always
   357 label *label374
   358 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label108 (h:*label108)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label108) (h:*label108)
-    * label *label108
+  359 label *label375
+  360 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  361 write null processor5 ":buildBlockFromCfg:config"
+  362 write false processor5 ":buildBlockFromCfg*finished"
+  363 write 2 processor5 "@counter"
+  364 label *label376
+  365 wait 1e-15
+  366 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  367 jump *label376 equal *tmp303 false
+  368 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  369 jump *label377 always
+  370 label *label377
   371 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   372 setaddr :buildBlockFromCfgLocal*retaddr *label109 (h:*label109)
   373 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label109) (h:*label109)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   357 label *label374
   358 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   359 label *label375
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  360 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   361 write null processor5 ":buildBlockFromCfg:config"
   362 write false processor5 ":buildBlockFromCfg*finished"
   363 write 2 processor5 "@counter"
 
   365 wait 1e-15
   366 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   367 jump *label376 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   368 jump *label377 always
   369 label *label377
   370 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   355 jump *label373 equal *tmp303 false
   356 jump *label374 always
   357 label *label374
-    * set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   358 label *label375
   359 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   360 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:215:5 (+7 instructions):
 
   367 jump *label377 always
   368 label *label377
   369 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label109 (h:*label109)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label109) (h:*label109)
-    * label *label109
+  370 label *label378
+  371 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  372 write null processor5 ":buildBlockFromCfg:config"
+  373 write false processor5 ":buildBlockFromCfg*finished"
+  374 write 2 processor5 "@counter"
+  375 label *label379
+  376 wait 1e-15
+  377 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  378 jump *label379 equal *tmp303 false
+  379 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  380 jump *label380 always
+  381 label *label380
   382 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   383 setaddr :buildBlockFromCfgLocal*retaddr *label110 (h:*label110)
   384 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label110) (h:*label110)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   368 label *label377
   369 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   370 label *label378
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  371 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   372 write null processor5 ":buildBlockFromCfg:config"
   373 write false processor5 ":buildBlockFromCfg*finished"
   374 write 2 processor5 "@counter"
 
   376 wait 1e-15
   377 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   378 jump *label379 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   379 jump *label380 always
   380 label *label380
   381 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   366 jump *label376 equal *tmp303 false
   367 jump *label377 always
   368 label *label377
-    * set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   369 label *label378
   370 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   371 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:218:5 (+7 instructions):
 
   378 jump *label380 always
   379 label *label380
   380 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label110 (h:*label110)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label110) (h:*label110)
-    * label *label110
+  381 label *label381
+  382 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  383 write null processor5 ":buildBlockFromCfg:config"
+  384 write false processor5 ":buildBlockFromCfg*finished"
+  385 write 2 processor5 "@counter"
+  386 label *label382
+  387 wait 1e-15
+  388 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  389 jump *label382 equal *tmp303 false
+  390 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  391 jump *label383 always
+  392 label *label383
   393 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   394 setaddr :buildBlockFromCfgLocal*retaddr *label111 (h:*label111)
   395 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label111) (h:*label111)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   379 label *label380
   380 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   381 label *label381
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  382 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   383 write null processor5 ":buildBlockFromCfg:config"
   384 write false processor5 ":buildBlockFromCfg*finished"
   385 write 2 processor5 "@counter"
 
   387 wait 1e-15
   388 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   389 jump *label382 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   390 jump *label383 always
   391 label *label383
   392 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   377 jump *label379 equal *tmp303 false
   378 jump *label380 always
   379 label *label380
-    * set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   380 label *label381
   381 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   382 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:219:5 (+7 instructions):
 
   389 jump *label383 always
   390 label *label383
   391 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label111 (h:*label111)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label111) (h:*label111)
-    * label *label111
+  392 label *label384
+  393 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  394 write null processor5 ":buildBlockFromCfg:config"
+  395 write false processor5 ":buildBlockFromCfg*finished"
+  396 write 2 processor5 "@counter"
+  397 label *label385
+  398 wait 1e-15
+  399 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  400 jump *label385 equal *tmp303 false
+  401 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  402 jump *label386 always
+  403 label *label386
   404 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   405 setaddr :buildBlockFromCfgLocal*retaddr *label112 (h:*label112)
   406 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label112) (h:*label112)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   390 label *label383
   391 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   392 label *label384
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  393 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   394 write null processor5 ":buildBlockFromCfg:config"
   395 write false processor5 ":buildBlockFromCfg*finished"
   396 write 2 processor5 "@counter"
 
   398 wait 1e-15
   399 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   400 jump *label385 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   401 jump *label386 always
   402 label *label386
   403 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   388 jump *label382 equal *tmp303 false
   389 jump *label383 always
   390 label *label383
-    * set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   391 label *label384
   392 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   393 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:221:5 (+7 instructions):
 
   400 jump *label386 always
   401 label *label386
   402 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label112 (h:*label112)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label112) (h:*label112)
-    * label *label112
+  403 label *label387
+  404 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  405 write null processor5 ":buildBlockFromCfg:config"
+  406 write false processor5 ":buildBlockFromCfg*finished"
+  407 write 2 processor5 "@counter"
+  408 label *label388
+  409 wait 1e-15
+  410 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  411 jump *label388 equal *tmp303 false
+  412 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  413 jump *label389 always
+  414 label *label389
   415 write 200 processor5 ".graphiteSurplus"
   416 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   417 setaddr :buildBlockFromCfgLocal*retaddr *label113 (h:*label113)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   401 label *label386
   402 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   403 label *label387
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  404 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
   405 write null processor5 ":buildBlockFromCfg:config"
   406 write false processor5 ":buildBlockFromCfg*finished"
   407 write 2 processor5 "@counter"
 
   409 wait 1e-15
   410 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   411 jump *label388 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   412 jump *label389 always
   413 label *label389
   414 write 200 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   399 jump *label385 equal *tmp303 false
   400 jump *label386 always
   401 label *label386
-    * set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   402 label *label387
   403 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
   404 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:224:5 (+7 instructions):
 
   412 label *label389
   413 write 200 processor5 ".graphiteSurplus"
   414 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label113 (h:*label113)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label113) (h:*label113)
-    * label *label113
+  415 label *label390
+  416 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  417 write null processor5 ":buildBlockFromCfg:config"
+  418 write false processor5 ":buildBlockFromCfg*finished"
+  419 write 2 processor5 "@counter"
+  420 label *label391
+  421 wait 1e-15
+  422 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  423 jump *label391 equal *tmp303 false
+  424 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  425 jump *label392 always
+  426 label *label392
   427 jump *label114 equal .scrap false
   428 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   429 setaddr :buildBlockFromCfgLocal*retaddr *label116 (h:*label116)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   413 write 200 processor5 ".graphiteSurplus"
   414 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   415 label *label390
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  416 write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFromCfg:cfg"
   417 write null processor5 ":buildBlockFromCfg:config"
   418 write false processor5 ":buildBlockFromCfg*finished"
   419 write 2 processor5 "@counter"
 
   421 wait 1e-15
   422 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   423 jump *label391 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   424 jump *label392 always
   425 label *label392
   426 jump *label114 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   411 jump *label389 always
   412 label *label389
   413 write 200 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   414 label *label390
   415 write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFromCfg:cfg"
   416 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:232:5 (+7 instructions):
 
   441 label *label114
   442 label *label115
   443 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label119 (h:*label119)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label119) (h:*label119)
-    * label *label119
+  444 label *label393
+  445 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  446 write null processor5 ":buildBlockFromCfg:config"
+  447 write false processor5 ":buildBlockFromCfg*finished"
+  448 write 2 processor5 "@counter"
+  449 label *label394
+  450 wait 1e-15
+  451 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  452 jump *label394 equal *tmp303 false
+  453 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  454 jump *label395 always
+  455 label *label395
   456 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   457 setaddr :buildBlockFromCfgLocal*retaddr *label120 (h:*label120)
   458 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label120) (h:*label120)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   442 label *label115
   443 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
   444 label *label393
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  445 write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg"
   446 write null processor5 ":buildBlockFromCfg:config"
   447 write false processor5 ":buildBlockFromCfg*finished"
   448 write 2 processor5 "@counter"
 
   450 wait 1e-15
   451 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   452 jump *label394 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   453 jump *label395 always
   454 label *label395
   455 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   440 jump *label118 equal *tmp222 false
   441 label *label114
   442 label *label115
-    * set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
   443 label *label393
   444 write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg"
   445 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:233:5 (+7 instructions):
 
   452 jump *label395 always
   453 label *label395
   454 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label120 (h:*label120)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label120) (h:*label120)
-    * label *label120
+  455 label *label396
+  456 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  457 write null processor5 ":buildBlockFromCfg:config"
+  458 write false processor5 ":buildBlockFromCfg*finished"
+  459 write 2 processor5 "@counter"
+  460 label *label397
+  461 wait 1e-15
+  462 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  463 jump *label397 equal *tmp303 false
+  464 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  465 jump *label398 always
+  466 label *label398
   467 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   468 setaddr :buildBlockFromCfgLocal*retaddr *label121 (h:*label121)
   469 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label121) (h:*label121)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   453 label *label395
   454 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   455 label *label396
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  456 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   457 write null processor5 ":buildBlockFromCfg:config"
   458 write false processor5 ":buildBlockFromCfg*finished"
   459 write 2 processor5 "@counter"
 
   461 wait 1e-15
   462 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   463 jump *label397 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   464 jump *label398 always
   465 label *label398
   466 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   451 jump *label394 equal *tmp303 false
   452 jump *label395 always
   453 label *label395
-    * set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   454 label *label396
   455 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   456 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:234:5 (+7 instructions):
 
   463 jump *label398 always
   464 label *label398
   465 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label121 (h:*label121)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label121) (h:*label121)
-    * label *label121
+  466 label *label399
+  467 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  468 write null processor5 ":buildBlockFromCfg:config"
+  469 write false processor5 ":buildBlockFromCfg*finished"
+  470 write 2 processor5 "@counter"
+  471 label *label400
+  472 wait 1e-15
+  473 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  474 jump *label400 equal *tmp303 false
+  475 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  476 jump *label401 always
+  477 label *label401
   478 write 1000 processor5 ".siliconSurplus"
   479 write 20 processor5 ".siliconMonoSurplus"
   480 write 100 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   464 label *label398
   465 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   466 label *label399
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  467 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   468 write null processor5 ":buildBlockFromCfg:config"
   469 write false processor5 ":buildBlockFromCfg*finished"
   470 write 2 processor5 "@counter"
 
   472 wait 1e-15
   473 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   474 jump *label400 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   475 jump *label401 always
   476 label *label401
   477 write 1000 processor5 ".siliconSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   462 jump *label397 equal *tmp303 false
   463 jump *label398 always
   464 label *label398
-    * set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   465 label *label399
   466 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   467 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:279:5 (+7 instructions):
 
   732 write 120 processor5 ".siliconMonoSurplus"
   733 write 0 processor5 ".leadSurplus"
   734 set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label160 (h:*label160)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label160) (h:*label160)
-    * label *label160
+  735 label *label402
+  736 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  737 write null processor5 ":buildBlockFromCfg:config"
+  738 write false processor5 ":buildBlockFromCfg*finished"
+  739 write 2 processor5 "@counter"
+  740 label *label403
+  741 wait 1e-15
+  742 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  743 jump *label403 equal *tmp303 false
+  744 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  745 jump *label404 always
+  746 label *label404
   747 write 10 processor5 ".metaglassSurplus"
   748 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   749 label *label161

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   733 write 0 processor5 ".leadSurplus"
   734 set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
   735 label *label402
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  736 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   737 write null processor5 ":buildBlockFromCfg:config"
   738 write false processor5 ":buildBlockFromCfg*finished"
   739 write 2 processor5 "@counter"
 
   741 wait 1e-15
   742 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   743 jump *label403 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   744 jump *label404 always
   745 label *label404
   746 write 10 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   731 write *tmp279 AÕFFJS-micro-processor9 ".powerTarget"
   732 write 120 processor5 ".siliconMonoSurplus"
   733 write 0 processor5 ".leadSurplus"
-    * set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
   734 label *label402
   735 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   736 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 (+30 instructions):
 
   324 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   325 write 20 processor5 ".siliconSurplus"
   326 write 2 processor5 ".leadSurplus"
-    * setaddr :buildUnits*retaddr *label100 (h:*label100)
-    * call *label40 *invalid :buildUnits*retval (m:*label100) (h:*label100)
-    * label *label100
+  327 label *label405
+  328 write 0 processor5 ":meetTarget:block"
+  329 write 0 processor5 ":meetTarget:copper"
+  330 write 0 processor5 ":meetTarget:lead"
+  331 write 0 processor5 ":meetTarget:graphite"
+  332 write 0 processor5 ":meetTarget:silicon"
+  333 write 0 processor5 ":meetTarget:titanium"
+  334 write 0 processor5 ":meetTarget:metaglass"
+  335 write 0 processor5 ":meetTarget:thorium"
+  336 write false processor5 ":meetTarget:forBuild"
+  337 write true processor5 ":meetTarget:isNoTarget"
+  338 write false processor5 ":meetTarget*finished"
+  339 write 6 processor5 "@counter"
+  340 label *label406
+  341 wait 1e-15
+  342 read *tmp315 processor5 ":meetTarget*finished"
+  343 jump *label406 equal *tmp315 false
+  344 write 0 processor2 ".totalTargets"
+  345 write null processor2 ".nextBlock"
+  346 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  347 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  348 label *label407
   349 label *label101
   350 write false processor5 ":supplyBase*finished"
   351 write 8 processor5 "@counter"
 
   499 label *label122
   500 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   501 label *label123
-    * setaddr :buildUnits*retaddr *label124 (h:*label124)
-    * call *label40 *invalid :buildUnits*retval (m:*label124) (h:*label124)
-    * label *label124
+  502 label *label408
+  503 write 0 processor5 ":meetTarget:block"
+  504 write 0 processor5 ":meetTarget:copper"
+  505 write 0 processor5 ":meetTarget:lead"
+  506 write 0 processor5 ":meetTarget:graphite"
+  507 write 0 processor5 ":meetTarget:silicon"
+  508 write 0 processor5 ":meetTarget:titanium"
+  509 write 0 processor5 ":meetTarget:metaglass"
+  510 write 0 processor5 ":meetTarget:thorium"
+  511 write false processor5 ":meetTarget:forBuild"
+  512 write true processor5 ":meetTarget:isNoTarget"
+  513 write false processor5 ":meetTarget*finished"
+  514 write 6 processor5 "@counter"
+  515 label *label409
+  516 wait 1e-15
+  517 read *tmp315 processor5 ":meetTarget*finished"
+  518 jump *label409 equal *tmp315 false
+  519 write 0 processor2 ".totalTargets"
+  520 write null processor2 ".nextBlock"
+  521 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  522 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  523 label *label410
   524 label *label125
   525 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   526 jump *label127 greaterThanEq *tmp82 2
 
   787 label *label162
   788 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   789 label *label163
-    * setaddr :buildUnits*retaddr *label164 (h:*label164)
-    * call *label40 *invalid :buildUnits*retval (m:*label164) (h:*label164)
-    * label *label164
+  790 label *label411
+  791 write 0 processor5 ":meetTarget:block"
+  792 write 0 processor5 ":meetTarget:copper"
+  793 write 0 processor5 ":meetTarget:lead"
+  794 write 0 processor5 ":meetTarget:graphite"
+  795 write 0 processor5 ":meetTarget:silicon"
+  796 write 0 processor5 ":meetTarget:titanium"
+  797 write 0 processor5 ":meetTarget:metaglass"
+  798 write 0 processor5 ":meetTarget:thorium"
+  799 write false processor5 ":meetTarget:forBuild"
+  800 write true processor5 ":meetTarget:isNoTarget"
+  801 write false processor5 ":meetTarget*finished"
+  802 write 6 processor5 "@counter"
+  803 label *label412
+  804 wait 1e-15
+  805 read *tmp315 processor5 ":meetTarget*finished"
+  806 jump *label412 equal *tmp315 false
+  807 write 0 processor2 ".totalTargets"
+  808 write null processor2 ".nextBlock"
+  809 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  810 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  811 label *label413
   812 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   813 op sub :tmp *tmp82 1
   814 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   987 label *label183
   988 return :buildBlockFromCfgLocal*retaddr
   989 end
-    * label *label40
-    * write 0 processor5 ":meetTarget:block"
-    * write 0 processor5 ":meetTarget:copper"
-    * write 0 processor5 ":meetTarget:lead"
-    * write 0 processor5 ":meetTarget:graphite"
-    * write 0 processor5 ":meetTarget:silicon"
-    * write 0 processor5 ":meetTarget:titanium"
-    * write 0 processor5 ":meetTarget:metaglass"
-    * write 0 processor5 ":meetTarget:thorium"
-    * write false processor5 ":meetTarget:forBuild"
-    * write true processor5 ":meetTarget:isNoTarget"
-    * write false processor5 ":meetTarget*finished"
-    * write 6 processor5 "@counter"
-    * label *label186
-    * wait 1e-15
-    * read *tmp315 processor5 ":meetTarget*finished"
-    * jump *label186 equal *tmp315 false
-    * write 0 processor2 ".totalTargets"
-    * write null processor2 ".nextBlock"
-    * write 0 AÕFFJS-micro-processor9 ".siliconReserve"
-    * write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label185
-    * return :buildUnits*retaddr
-    * end

Modifications by Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 (+59 instructions):
 
    73 set .sandContainer .core
    74 jump *label55 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
-    * label *label57
+   76 label *label414
+   77 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   78 write null processor5 ":buildBlockFromCfg:config"
+   79 write false processor5 ":buildBlockFromCfg*finished"
+   80 write 2 processor5 "@counter"
+   81 label *label415
+   82 wait 1e-15
+   83 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+   84 jump *label415 equal *tmp303 false
+   85 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   86 jump *label416 always
+   87 label *label416
    88 set .sandContainer :buildBlockFromCfgLocal*retval
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
-    * label *label58
+   91 label *label417
+   92 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write null processor5 ":buildBlockFromCfg:config"
+   94 write false processor5 ":buildBlockFromCfg*finished"
+   95 write 2 processor5 "@counter"
+   96 label *label418
+   97 wait 1e-15
+   98 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+   99 jump *label418 equal *tmp303 false
+  100 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  101 jump *label419 always
+  102 label *label419
   103 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
-    * label *label59
+  104 label *label420
+  105 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  106 write null processor5 ":buildBlockFromCfg:config"
+  107 write false processor5 ":buildBlockFromCfg*finished"
+  108 write 2 processor5 "@counter"
+  109 label *label421
+  110 wait 1e-15
+  111 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  112 jump *label421 equal *tmp303 false
+  113 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  114 jump *label422 always
+  115 label *label422
   116 label *label55
   117 label *label56
   118 label *label345
 
   185 write *tmp163 processor5 ".titaniumDrill"
   186 jump *label69 equal .scrap false
   187 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label71 (h:*label71)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label71) (h:*label71)
-    * label *label71
+  188 label *label423
+  189 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  190 write null processor5 ":buildBlockFromCfg:config"
+  191 write false processor5 ":buildBlockFromCfg*finished"
+  192 write 2 processor5 "@counter"
+  193 label *label424
+  194 wait 1e-15
+  195 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  196 jump *label424 equal *tmp303 false
+  197 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  198 jump *label425 always
+  199 label *label425
   200 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label72 (h:*label72)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
-    * label *label72
+  201 label *label426
+  202 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  203 write null processor5 ":buildBlockFromCfg:config"
+  204 write false processor5 ":buildBlockFromCfg*finished"
+  205 write 2 processor5 "@counter"
+  206 label *label427
+  207 wait 1e-15
+  208 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  209 jump *label427 equal *tmp303 false
+  210 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  211 jump *label428 always
+  212 label *label428
   213 set .sandContainer :buildBlockFromCfgLocal*retval
   214 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   215 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label73) (h:*label73)
-    * label *label73
+  216 label *label429
+  217 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  218 write null processor5 ":buildBlockFromCfg:config"
+  219 write false processor5 ":buildBlockFromCfg*finished"
+  220 write 2 processor5 "@counter"
+  221 label *label430
+  222 wait 1e-15
+  223 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  224 jump *label430 equal *tmp303 false
+  225 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  226 jump *label431 always
+  227 label *label431
   228 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label74 (h:*label74)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label74) (h:*label74)
-    * label *label74
+  229 label *label432
+  230 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  231 write null processor5 ":buildBlockFromCfg:config"
+  232 write false processor5 ":buildBlockFromCfg*finished"
+  233 write 2 processor5 "@counter"
+  234 label *label433
+  235 wait 1e-15
+  236 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  237 jump *label433 equal *tmp303 false
+  238 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  239 jump *label434 always
+  240 label *label434
   241 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
-    * label *label75
+  242 label *label435
+  243 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  244 write null processor5 ":buildBlockFromCfg:config"
+  245 write false processor5 ":buildBlockFromCfg*finished"
+  246 write 2 processor5 "@counter"
+  247 label *label436
+  248 wait 1e-15
+  249 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  250 jump *label436 equal *tmp303 false
+  251 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  252 jump *label437 always
+  253 label *label437
   254 label *label69
   255 label *label70
   256 write .sandContainer processor7 ".sandContainer"
 
   515 label *label392
   516 jump *label114 equal .scrap false
   517 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label116 (h:*label116)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label116) (h:*label116)
-    * label *label116
+  518 label *label438
+  519 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  520 write null processor5 ":buildBlockFromCfg:config"
+  521 write false processor5 ":buildBlockFromCfg*finished"
+  522 write 2 processor5 "@counter"
+  523 label *label439
+  524 wait 1e-15
+  525 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  526 jump *label439 equal *tmp303 false
+  527 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  528 jump *label440 always
+  529 label *label440
   530 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label117 (h:*label117)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label117) (h:*label117)
-    * label *label117
+  531 label *label441
+  532 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  533 write null processor5 ":buildBlockFromCfg:config"
+  534 write false processor5 ":buildBlockFromCfg*finished"
+  535 write 2 processor5 "@counter"
+  536 label *label442
+  537 wait 1e-15
+  538 read *tmp303 processor5 ":buildBlockFromCfg*finished"
+  539 jump *label442 equal *tmp303 false
+  540 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  541 jump *label443 always
+  542 label *label443
   543 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   544 write false processor6 ":setScrapContainer*finished"
   545 write 1 processor6 "@counter"
 
  1063 label *label175
  1064 label *label168
  1065 end
-    * label *label39
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write null processor5 ":buildBlockFromCfg:config"
-    * write false processor5 ":buildBlockFromCfg*finished"
-    * write 2 processor5 "@counter"
-    * label *label184
-    * wait 1e-15
-    * read *tmp303 processor5 ":buildBlockFromCfg*finished"
-    * jump *label184 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label183 always
-    * label *label183
-    * return :buildBlockFromCfgLocal*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    74 jump *label55 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
    76 label *label414
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   77 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    78 write null processor5 ":buildBlockFromCfg:config"
    79 write false processor5 ":buildBlockFromCfg*finished"
    80 write 2 processor5 "@counter"
 
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    91 label *label417
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   92 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"
    94 write false processor5 ":buildBlockFromCfg*finished"
    95 write 2 processor5 "@counter"
 
    97 wait 1e-15
    98 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    99 jump *label418 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   100 jump *label419 always
   101 label *label419
   102 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
   103 label *label420
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   111 jump *label421 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label422 always
   113 label *label422
   114 label *label55
 
   184 jump *label69 equal .scrap false
   185 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   186 label *label423
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  187 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   188 write null processor5 ":buildBlockFromCfg:config"
   189 write false processor5 ":buildBlockFromCfg*finished"
   190 write 2 processor5 "@counter"
 
   192 wait 1e-15
   193 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   194 jump *label424 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   195 jump *label425 always
   196 label *label425
   197 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   198 label *label426
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  199 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   200 write null processor5 ":buildBlockFromCfg:config"
   201 write false processor5 ":buildBlockFromCfg*finished"
   202 write 2 processor5 "@counter"
 
   211 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   212 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   213 label *label429
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  214 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   215 write null processor5 ":buildBlockFromCfg:config"
   216 write false processor5 ":buildBlockFromCfg*finished"
   217 write 2 processor5 "@counter"
 
   219 wait 1e-15
   220 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   221 jump *label430 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   222 jump *label431 always
   223 label *label431
   224 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   225 label *label432
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  226 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   227 write null processor5 ":buildBlockFromCfg:config"
   228 write false processor5 ":buildBlockFromCfg*finished"
   229 write 2 processor5 "@counter"
 
   231 wait 1e-15
   232 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   233 jump *label433 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   234 jump *label434 always
   235 label *label434
   236 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   237 label *label435
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  238 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   239 write null processor5 ":buildBlockFromCfg:config"
   240 write false processor5 ":buildBlockFromCfg*finished"
   241 write 2 processor5 "@counter"
 
   243 wait 1e-15
   244 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   245 jump *label436 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   246 jump *label437 always
   247 label *label437
   248 label *label69
 
   510 jump *label114 equal .scrap false
   511 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   512 label *label438
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  513 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   514 write null processor5 ":buildBlockFromCfg:config"
   515 write false processor5 ":buildBlockFromCfg*finished"
   516 write 2 processor5 "@counter"
 
   518 wait 1e-15
   519 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   520 jump *label439 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   521 jump *label440 always
   522 label *label440
   523 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   524 label *label441
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  525 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   526 write null processor5 ":buildBlockFromCfg:config"
   527 write false processor5 ":buildBlockFromCfg*finished"
   528 write 2 processor5 "@counter"
 
   530 wait 1e-15
   531 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   532 jump *label442 equal *tmp303 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   533 jump *label443 always
   534 label *label443
   535 write .sandContainer processor6 ":setScrapContainer:scrapContainer"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
    72 write 400 processor5 ".powerTarget"
    73 set .sandContainer .core
    74 jump *label55 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
    75 label *label414
    76 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    77 write null processor5 ":buildBlockFromCfg:config"
 
    86 label *label416
    87 set .sandContainer :buildBlockFromCfgLocal*retval
    88 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    89 label *label417
    90 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    91 write null processor5 ":buildBlockFromCfg:config"
 
    97 jump *label418 equal *tmp303 false
    98 jump *label419 always
    99 label *label419
-    * set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
   100 label *label420
   101 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
   102 write null processor5 ":buildBlockFromCfg:config"
 
   179 write *tmp163 processor2 ".titaniumDrill"
   180 write *tmp163 processor5 ".titaniumDrill"
   181 jump *label69 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   182 label *label423
   183 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   184 write null processor5 ":buildBlockFromCfg:config"
 
   190 jump *label424 equal *tmp303 false
   191 jump *label425 always
   192 label *label425
-    * set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   193 label *label426
   194 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   195 write null processor5 ":buildBlockFromCfg:config"
 
   204 label *label428
   205 set .sandContainer :buildBlockFromCfgLocal*retval
   206 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   207 label *label429
   208 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"
 
   215 jump *label430 equal *tmp303 false
   216 jump *label431 always
   217 label *label431
-    * set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   218 label *label432
   219 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   220 write null processor5 ":buildBlockFromCfg:config"
 
   226 jump *label433 equal *tmp303 false
   227 jump *label434 always
   228 label *label434
-    * set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   229 label *label435
   230 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   231 write null processor5 ":buildBlockFromCfg:config"
 
   500 jump *label392 always
   501 label *label392
   502 jump *label114 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   503 label *label438
   504 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   505 write null processor5 ":buildBlockFromCfg:config"
 
   511 jump *label439 equal *tmp303 false
   512 jump *label440 always
   513 label *label440
-    * set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   514 label *label441
   515 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   516 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-35 instructions):
 
    34 wait 1e-15
    35 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    36 jump *label334 equal *tmp303 false
-    * jump *label335 always
    37 label *label335
    38 label *label336
    39 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
 
    44 wait 1e-15
    45 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    46 jump *label337 equal *tmp303 false
-    * jump *label338 always
    47 label *label338
    48 label *label339
    49 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
 
    54 wait 1e-15
    55 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    56 jump *label340 equal *tmp303 false
-    * jump *label341 always
    57 label *label341
    58 label *label342
    59 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
 
    64 wait 1e-15
    65 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    66 jump *label343 equal *tmp303 false
-    * jump *label344 always
    67 label *label344
    68 write 400 processor5 ".powerTarget"
    69 set .sandContainer .core
 
    78 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    79 jump *label415 equal *tmp303 false
    80 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label416 always
    81 label *label416
    82 set .sandContainer :buildBlockFromCfgLocal*retval
    83 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
    90 wait 1e-15
    91 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    92 jump *label418 equal *tmp303 false
-    * jump *label419 always
    93 label *label419
    94 label *label420
    95 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
 
   100 wait 1e-15
   101 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   102 jump *label421 equal *tmp303 false
-    * jump *label422 always
   103 label *label422
   104 label *label55
   105 label *label56
 
   112 wait 1e-15
   113 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   114 jump *label346 equal *tmp303 false
-    * jump *label347 always
   115 label *label347
   116 label *label348
   117 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
 
   122 wait 1e-15
   123 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   124 jump *label349 equal *tmp303 false
-    * jump *label350 always
   125 label *label350
   126 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   127 write false processor5 ":meetTargetCfg:forBuild"
 
   165 read *tmp183 processor5 ":buildFirstTitaniumDrillAt*finished"
   166 jump *label68 equal *tmp183 false
   167 read *tmp163 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label62 always
   168 label *label62
   169 write *tmp163 processor2 ".titaniumDrill"
   170 write *tmp163 processor5 ".titaniumDrill"
 
   178 wait 1e-15
   179 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   180 jump *label424 equal *tmp303 false
-    * jump *label425 always
   181 label *label425
   182 label *label426
   183 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
 
   189 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   190 jump *label427 equal *tmp303 false
   191 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label428 always
   192 label *label428
   193 set .sandContainer :buildBlockFromCfgLocal*retval
   194 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
   201 wait 1e-15
   202 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   203 jump *label430 equal *tmp303 false
-    * jump *label431 always
   204 label *label431
   205 label *label432
   206 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
 
   211 wait 1e-15
   212 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   213 jump *label433 equal *tmp303 false
-    * jump *label434 always
   214 label *label434
   215 label *label435
   216 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
 
   221 wait 1e-15
   222 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   223 jump *label436 equal *tmp303 false
-    * jump *label437 always
   224 label *label437
   225 label *label69
   226 label *label70
 
   234 wait 1e-15
   235 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   236 jump *label352 equal *tmp303 false
-    * jump *label353 always
   237 label *label353
   238 label *label354
   239 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
 
   244 wait 1e-15
   245 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   246 jump *label355 equal *tmp303 false
-    * jump *label356 always
   247 label *label356
   248 label *label357
   249 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
 
   254 wait 1e-15
   255 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   256 jump *label358 equal *tmp303 false
-    * jump *label359 always
   257 label *label359
   258 write 80 processor5 ".graphiteSurplus"
   259 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
 
   320 wait 1e-15
   321 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   322 jump *label361 equal *tmp303 false
-    * jump *label362 always
   323 label *label362
   324 label *label363
   325 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
 
   330 wait 1e-15
   331 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   332 jump *label364 equal *tmp303 false
-    * jump *label365 always
   333 label *label365
   334 label *label366
   335 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
 
   340 wait 1e-15
   341 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   342 jump *label367 equal *tmp303 false
-    * jump *label368 always
   343 label *label368
   344 label *label369
   345 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
 
   350 wait 1e-15
   351 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   352 jump *label370 equal *tmp303 false
-    * jump *label371 always
   353 label *label371
   354 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   355 label *label98
 
   408 wait 1e-15
   409 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   410 jump *label373 equal *tmp303 false
-    * jump *label374 always
   411 label *label374
   412 label *label375
   413 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
 
   418 wait 1e-15
   419 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   420 jump *label376 equal *tmp303 false
-    * jump *label377 always
   421 label *label377
   422 label *label378
   423 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
 
   428 wait 1e-15
   429 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   430 jump *label379 equal *tmp303 false
-    * jump *label380 always
   431 label *label380
   432 label *label381
   433 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
 
   438 wait 1e-15
   439 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   440 jump *label382 equal *tmp303 false
-    * jump *label383 always
   441 label *label383
   442 label *label384
   443 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
 
   448 wait 1e-15
   449 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   450 jump *label385 equal *tmp303 false
-    * jump *label386 always
   451 label *label386
   452 label *label387
   453 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
 
   458 wait 1e-15
   459 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   460 jump *label388 equal *tmp303 false
-    * jump *label389 always
   461 label *label389
   462 write 200 processor5 ".graphiteSurplus"
   463 label *label390
 
   469 wait 1e-15
   470 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   471 jump *label391 equal *tmp303 false
-    * jump *label392 always
   472 label *label392
   473 jump *label114 equal .scrap false
   474 label *label438
 
   480 wait 1e-15
   481 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   482 jump *label439 equal *tmp303 false
-    * jump *label440 always
   483 label *label440
   484 label *label441
   485 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
 
   490 wait 1e-15
   491 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   492 jump *label442 equal *tmp303 false
-    * jump *label443 always
   493 label *label443
   494 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   495 write false processor6 ":setScrapContainer*finished"
 
   509 wait 1e-15
   510 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   511 jump *label394 equal *tmp303 false
-    * jump *label395 always
   512 label *label395
   513 label *label396
   514 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
 
   519 wait 1e-15
   520 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   521 jump *label397 equal *tmp303 false
-    * jump *label398 always
   522 label *label398
   523 label *label399
   524 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
 
   529 wait 1e-15
   530 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   531 jump *label400 equal *tmp303 false
-    * jump *label401 always
   532 label *label401
   533 write 1000 processor5 ".siliconSurplus"
   534 write 20 processor5 ".siliconMonoSurplus"
 
   816 wait 1e-15
   817 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   818 jump *label403 equal *tmp303 false
-    * jump *label404 always
   819 label *label404
   820 write 10 processor5 ".metaglassSurplus"
   821 write 0 AÕFFJS-micro-processor9 ".polyTarget"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   270 write .core AÕFFJS-micro-processor9 ".core"
   271 write bank1 AÕFFJS-micro-processor9 ".bank"
   272 label *label201
-    * read *tmp200 @this "AJEMJJ-graphite-press0"
+  273 set *tmp200 AJEMJJ-graphite-press0
   274 write *tmp200 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   275 label *label202
   276 label *label205
-    * read *tmp200 @this "AJTJK-battery1"
+  277 set *tmp200 AJTJK-battery1
   278 write *tmp200 AÕFFJS-micro-processor9 "AJTJK-battery1"
   279 label *label206
   280 label *label209
-    * read *tmp200 @this "ALTJL-battery2"
+  281 set *tmp200 ALTJL-battery2
   282 write *tmp200 AÕFFJS-micro-processor9 "ALTJL-battery2"
   283 label *label210
   284 label *label213
-    * read *tmp200 @this "AJRJM-combustion-generator3"
+  285 set *tmp200 AJRJM-combustion-generator3
   286 write *tmp200 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   287 label *label214
   288 label *label217
-    * read *tmp200 @this "ALMQJN-silicon-smelter4"
+  289 set *tmp200 ALMQJN-silicon-smelter4
   290 write *tmp200 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   291 label *label218
   292 label *label221
-    * read *tmp200 @this "A{LNJO-inverted-sorter5"
+  293 set *tmp200 A{LNJO-inverted-sorter5
   294 write *tmp200 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   295 label *label222
   296 label *label225
-    * read *tmp200 @this "A©JNJP-unloader6"
+  297 set *tmp200 A©JNJP-unloader6
   298 write *tmp200 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   299 label *label226
   300 label *label229
-    * read *tmp200 @this "A{HNJQ-inverted-sorter7"
+  301 set *tmp200 A{HNJQ-inverted-sorter7
   302 write *tmp200 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   303 label *label230
   304 label *label233
-    * read *tmp200 @this "AJPJR-underflow-gate8"
+  305 set *tmp200 AJPJR-underflow-gate8
   306 write *tmp200 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   307 label *label234
   308 label *label237
-    * read *tmp200 @this "AÕFFJS-micro-processor9"
+  309 set *tmp200 AÕFFJS-micro-processor9
   310 write *tmp200 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   311 label *label238
   312 label *label83

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   699 wait 1e-15
   700 read *tmp299 processor5 ":buildRemoteBlock*finished"
   701 jump *label316 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  702 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
   703 label *label317
-    * set .thoriumGenerator :buildRemoteBlockLocal*retval
   704 read :buildRemoteBlockLocal:x processor3 ".node1X"
   705 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   706 label *label318
 
   752 wait 1e-15
   753 read *tmp299 processor5 ":buildRemoteBlock*finished"
   754 jump *label328 equal *tmp299 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  755 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
   756 label *label329
-    * set .thoriumBattery :buildRemoteBlockLocal*retval
   757 read :buildRemoteBlockLocal:x processor3 ".containerX"
   758 read :buildRemoteBlockLocal:y processor3 ".containerY"
   759 label *label330

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 ubind @poly
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY *tmp146 .core
-    * label *label49
    20 jump *label48 equal .core null
-    * label *label50
    21 ulocate ore core true @sand *tmp149 *tmp150 *tmp148 *tmp151
    22 op equal .scrap *tmp148 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"
    25 write .scrap processor7 ".scrap"
-    * label *label333
    26 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    27 write null processor5 ":buildBlockFromCfg:config"
    28 write false processor5 ":buildBlockFromCfg*finished"
 
    31 wait 1e-15
    32 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    33 jump *label334 equal *tmp303 false
-    * label *label335
-    * label *label336
    34 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    35 write null processor5 ":buildBlockFromCfg:config"
    36 write false processor5 ":buildBlockFromCfg*finished"
 
    39 wait 1e-15
    40 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    41 jump *label337 equal *tmp303 false
-    * label *label338
-    * label *label339
    42 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    43 write null processor5 ":buildBlockFromCfg:config"
    44 write false processor5 ":buildBlockFromCfg*finished"
 
    47 wait 1e-15
    48 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    49 jump *label340 equal *tmp303 false
-    * label *label341
-    * label *label342
    50 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    51 write null processor5 ":buildBlockFromCfg:config"
    52 write false processor5 ":buildBlockFromCfg*finished"
 
    55 wait 1e-15
    56 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    57 jump *label343 equal *tmp303 false
-    * label *label344
    58 write 400 processor5 ".powerTarget"
    59 set .sandContainer .core
    60 jump *label55 equal .scrap false
-    * label *label414
    61 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    62 write null processor5 ":buildBlockFromCfg:config"
    63 write false processor5 ":buildBlockFromCfg*finished"
 
    67 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    68 jump *label415 equal *tmp303 false
    69 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label416
    70 set .sandContainer :buildBlockFromCfgLocal*retval
    71 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label417
    72 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    73 write null processor5 ":buildBlockFromCfg:config"
    74 write false processor5 ":buildBlockFromCfg*finished"
 
    77 wait 1e-15
    78 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    79 jump *label418 equal *tmp303 false
-    * label *label419
-    * label *label420
    80 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
    81 write null processor5 ":buildBlockFromCfg:config"
    82 write false processor5 ":buildBlockFromCfg*finished"
 
    85 wait 1e-15
    86 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    87 jump *label421 equal *tmp303 false
-    * label *label422
    88 label *label55
-    * label *label56
-    * label *label345
    89 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    90 write null processor5 ":buildBlockFromCfg:config"
    91 write false processor5 ":buildBlockFromCfg*finished"
 
    94 wait 1e-15
    95 read *tmp303 processor5 ":buildBlockFromCfg*finished"
    96 jump *label346 equal *tmp303 false
-    * label *label347
-    * label *label348
    97 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
    98 write null processor5 ":buildBlockFromCfg:config"
    99 write false processor5 ":buildBlockFromCfg*finished"
 
   102 wait 1e-15
   103 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   104 jump *label349 equal *tmp303 false
-    * label *label350
   105 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   106 write false processor5 ":meetTargetCfg:forBuild"
   107 write false processor5 ":meetTargetCfg*finished"
 
   128 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   129 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   130 jump *label65 notEqual :buildFirstTitaniumDrill:result false
-    * label *label242
   131 set .ERROR "Cannot locate spot for titanium drill"
   132 stop
-    * label *label243
   133 label *label65
-    * label *label66
   134 write @pneumatic-drill processor2 ".nextBlock"
   135 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
   136 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
   141 read *tmp183 processor5 ":buildFirstTitaniumDrillAt*finished"
   142 jump *label68 equal *tmp183 false
   143 read *tmp163 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label62
   144 write *tmp163 processor2 ".titaniumDrill"
   145 write *tmp163 processor5 ".titaniumDrill"
   146 jump *label69 equal .scrap false
-    * label *label423
   147 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   148 write null processor5 ":buildBlockFromCfg:config"
   149 write false processor5 ":buildBlockFromCfg*finished"
 
   152 wait 1e-15
   153 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   154 jump *label424 equal *tmp303 false
-    * label *label425
-    * label *label426
   155 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   156 write null processor5 ":buildBlockFromCfg:config"
   157 write false processor5 ":buildBlockFromCfg*finished"
 
   161 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   162 jump *label427 equal *tmp303 false
   163 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label428
   164 set .sandContainer :buildBlockFromCfgLocal*retval
   165 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label429
   166 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   167 write null processor5 ":buildBlockFromCfg:config"
   168 write false processor5 ":buildBlockFromCfg*finished"
 
   171 wait 1e-15
   172 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   173 jump *label430 equal *tmp303 false
-    * label *label431
-    * label *label432
   174 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   175 write null processor5 ":buildBlockFromCfg:config"
   176 write false processor5 ":buildBlockFromCfg*finished"
 
   179 wait 1e-15
   180 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   181 jump *label433 equal *tmp303 false
-    * label *label434
-    * label *label435
   182 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   183 write null processor5 ":buildBlockFromCfg:config"
   184 write false processor5 ":buildBlockFromCfg*finished"
 
   187 wait 1e-15
   188 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   189 jump *label436 equal *tmp303 false
-    * label *label437
   190 label *label69
-    * label *label70
   191 write .sandContainer processor7 ".sandContainer"
-    * label *label351
   192 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   193 write null processor5 ":buildBlockFromCfg:config"
   194 write false processor5 ":buildBlockFromCfg*finished"
 
   197 wait 1e-15
   198 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   199 jump *label352 equal *tmp303 false
-    * label *label353
-    * label *label354
   200 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   201 write null processor5 ":buildBlockFromCfg:config"
   202 write false processor5 ":buildBlockFromCfg*finished"
 
   205 wait 1e-15
   206 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   207 jump *label355 equal *tmp303 false
-    * label *label356
-    * label *label357
   208 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"
   210 write false processor5 ":buildBlockFromCfg*finished"
 
   213 wait 1e-15
   214 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   215 jump *label358 equal *tmp303 false
-    * label *label359
   216 write 80 processor5 ".graphiteSurplus"
   217 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   218 write processor10 processor5 ":buildBlockFromCfg:config"
 
   222 wait 1e-15
   223 read *tmp197 processor5 ":buildBlockFromCfg*finished"
   224 jump *label80 equal *tmp197 false
-    * label *label79
   225 write processor1 AÕFFJS-micro-processor9 ".timer"
   226 write processor2 AÕFFJS-micro-processor9 ".display"
   227 write .core AÕFFJS-micro-processor9 ".core"
   228 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * label *label201
   229 set *tmp200 AJEMJJ-graphite-press0
   230 write *tmp200 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
-    * label *label202
-    * label *label205
   231 set *tmp200 AJTJK-battery1
   232 write *tmp200 AÕFFJS-micro-processor9 "AJTJK-battery1"
-    * label *label206
-    * label *label209
   233 set *tmp200 ALTJL-battery2
   234 write *tmp200 AÕFFJS-micro-processor9 "ALTJL-battery2"
-    * label *label210
-    * label *label213
   235 set *tmp200 AJRJM-combustion-generator3
   236 write *tmp200 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
-    * label *label214
-    * label *label217
   237 set *tmp200 ALMQJN-silicon-smelter4
   238 write *tmp200 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
-    * label *label218
-    * label *label221
   239 set *tmp200 A{LNJO-inverted-sorter5
   240 write *tmp200 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
-    * label *label222
-    * label *label225
   241 set *tmp200 A©JNJP-unloader6
   242 write *tmp200 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
-    * label *label226
-    * label *label229
   243 set *tmp200 A{HNJQ-inverted-sorter7
   244 write *tmp200 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
-    * label *label230
-    * label *label233
   245 set *tmp200 AJPJR-underflow-gate8
   246 write *tmp200 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
-    * label *label234
-    * label *label237
   247 set *tmp200 AÕFFJS-micro-processor9
   248 write *tmp200 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
-    * label *label238
-    * label *label83
   249 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
-    * label *label360
   250 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   251 write null processor5 ":buildBlockFromCfg:config"
   252 write false processor5 ":buildBlockFromCfg*finished"
 
   255 wait 1e-15
   256 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   257 jump *label361 equal *tmp303 false
-    * label *label362
-    * label *label363
   258 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   259 write null processor5 ":buildBlockFromCfg:config"
   260 write false processor5 ":buildBlockFromCfg*finished"
 
   263 wait 1e-15
   264 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   265 jump *label364 equal *tmp303 false
-    * label *label365
-    * label *label366
   266 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   267 write null processor5 ":buildBlockFromCfg:config"
   268 write false processor5 ":buildBlockFromCfg*finished"
 
   271 wait 1e-15
   272 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   273 jump *label367 equal *tmp303 false
-    * label *label368
-    * label *label369
   274 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   275 write null processor5 ":buildBlockFromCfg:config"
   276 write false processor5 ":buildBlockFromCfg*finished"
 
   279 wait 1e-15
   280 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   281 jump *label370 equal *tmp303 false
-    * label *label371
   282 write 1 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label98
   283 write 5 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label99
   284 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   285 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
   286 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   287 write 20 processor5 ".siliconSurplus"
   288 write 2 processor5 ".leadSurplus"
-    * label *label405
   289 write 0 processor5 ":meetTarget:block"
   290 write 0 processor5 ":meetTarget:copper"
   291 write 0 processor5 ":meetTarget:lead"
 
   306 write null processor2 ".nextBlock"
   307 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   308 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label407
   309 label *label101
   310 write false processor5 ":supplyBase*finished"
   311 write 8 processor5 "@counter"
 
   317 jump *label105 greaterThanEq *tmp207 300
   318 jump *label103 always
   319 label *label105
-    * label *label106
-    * label *label102
   320 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   321 jump *label101 lessThan *tmp81 3
   322 label *label103
   323 write 65 processor5 ".siliconSurplus"
-    * label *label372
   324 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   325 write null processor5 ":buildBlockFromCfg:config"
   326 write false processor5 ":buildBlockFromCfg*finished"
 
   329 wait 1e-15
   330 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   331 jump *label373 equal *tmp303 false
-    * label *label374
-    * label *label375
   332 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   333 write null processor5 ":buildBlockFromCfg:config"
   334 write false processor5 ":buildBlockFromCfg*finished"
 
   337 wait 1e-15
   338 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   339 jump *label376 equal *tmp303 false
-    * label *label377
-    * label *label378
   340 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   341 write null processor5 ":buildBlockFromCfg:config"
   342 write false processor5 ":buildBlockFromCfg*finished"
 
   345 wait 1e-15
   346 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   347 jump *label379 equal *tmp303 false
-    * label *label380
-    * label *label381
   348 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   349 write null processor5 ":buildBlockFromCfg:config"
   350 write false processor5 ":buildBlockFromCfg*finished"
 
   353 wait 1e-15
   354 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   355 jump *label382 equal *tmp303 false
-    * label *label383
-    * label *label384
   356 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   357 write null processor5 ":buildBlockFromCfg:config"
   358 write false processor5 ":buildBlockFromCfg*finished"
 
   361 wait 1e-15
   362 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   363 jump *label385 equal *tmp303 false
-    * label *label386
-    * label *label387
   364 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
   365 write null processor5 ":buildBlockFromCfg:config"
   366 write false processor5 ":buildBlockFromCfg*finished"
 
   369 wait 1e-15
   370 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   371 jump *label388 equal *tmp303 false
-    * label *label389
   372 write 200 processor5 ".graphiteSurplus"
-    * label *label390
   373 write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFromCfg:cfg"
   374 write null processor5 ":buildBlockFromCfg:config"
   375 write false processor5 ":buildBlockFromCfg*finished"
 
   378 wait 1e-15
   379 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   380 jump *label391 equal *tmp303 false
-    * label *label392
   381 jump *label114 equal .scrap false
-    * label *label438
   382 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   383 write null processor5 ":buildBlockFromCfg:config"
   384 write false processor5 ":buildBlockFromCfg*finished"
 
   387 wait 1e-15
   388 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   389 jump *label439 equal *tmp303 false
-    * label *label440
-    * label *label441
   390 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   391 write null processor5 ":buildBlockFromCfg:config"
   392 write false processor5 ":buildBlockFromCfg*finished"
 
   395 wait 1e-15
   396 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   397 jump *label442 equal *tmp303 false
-    * label *label443
   398 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   399 write false processor6 ":setScrapContainer*finished"
   400 write 1 processor6 "@counter"
 
   403 read *tmp222 processor6 ":setScrapContainer*finished"
   404 jump *label118 equal *tmp222 false
   405 label *label114
-    * label *label115
-    * label *label393
   406 write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg"
   407 write null processor5 ":buildBlockFromCfg:config"
   408 write false processor5 ":buildBlockFromCfg*finished"
 
   411 wait 1e-15
   412 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   413 jump *label394 equal *tmp303 false
-    * label *label395
-    * label *label396
   414 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   415 write null processor5 ":buildBlockFromCfg:config"
   416 write false processor5 ":buildBlockFromCfg*finished"
 
   419 wait 1e-15
   420 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   421 jump *label397 equal *tmp303 false
-    * label *label398
-    * label *label399
   422 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   423 write null processor5 ":buildBlockFromCfg:config"
   424 write false processor5 ":buildBlockFromCfg*finished"
 
   427 wait 1e-15
   428 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   429 jump *label400 equal *tmp303 false
-    * label *label401
   430 write 1000 processor5 ".siliconSurplus"
   431 write 20 processor5 ".siliconMonoSurplus"
   432 write 100 processor5 ".metaglassSurplus"
   433 write 4 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label122
   434 write 3 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label123
-    * label *label408
   435 write 0 processor5 ":meetTarget:block"
   436 write 0 processor5 ":meetTarget:copper"
   437 write 0 processor5 ":meetTarget:lead"
 
   452 write null processor2 ".nextBlock"
   453 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   454 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label410
-    * label *label125
   455 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   456 jump *label127 greaterThanEq *tmp82 2
   457 label *label246
 
   461 wait 1e-15
   462 read *tmp227 processor5 ":supplyBase*finished"
   463 jump *label128 equal *tmp227 false
-    * label *label126
   464 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   465 jump *label246 lessThan *tmp82 2
   466 label *label127
   467 write 2 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label129
-    * label *label130
   468 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   469 jump *label132 greaterThanEq *tmp80 2
   470 label *label247
 
   474 wait 1e-15
   475 read *tmp229 processor5 ":supplyBase*finished"
   476 jump *label133 equal *tmp229 false
-    * label *label131
   477 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   478 jump *label247 lessThan *tmp80 2
   479 label *label132
 
   499 jump *label135 equal *tmp241 false
   500 write false processor3 ":stopLocation*finished"
   501 write 3 processor3 "@counter"
-    * label *label134
   502 write null processor2 ".nextBlock"
   503 write 10 processor5 ".graphiteSurplus"
   504 write 50 processor5 ".metaglassSurplus"
 
   527 jump *label139 equal *tmp251 false
   528 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   529 jump *label140 notEqual :buildThoriumDrill:result false
-    * label *label244
   530 set .ERROR "Cannot locate spot for thorium drill"
   531 stop
-    * label *label245
   532 label *label140
-    * label *label141
   533 write @laser-drill processor5 ":buildBlockAt:block"
   534 read *tmp53 processor3 ".drillX"
   535 write *tmp53 processor5 ":buildBlockAt:x"
 
   547 read .thoriumDrill processor5 ":buildBlockAt*retval"
   548 read :buildRemoteBlockLocal:x processor3 ".water1X"
   549 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * label *label309
   550 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   551 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   552 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   556 wait 1e-15
   557 read *tmp299 processor5 ":buildRemoteBlock*finished"
   558 jump *label310 equal *tmp299 false
-    * label *label311
   559 read :buildRemoteBlockLocal:x processor3 ".water2X"
   560 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * label *label312
   561 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   562 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   563 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   567 wait 1e-15
   568 read *tmp299 processor5 ":buildRemoteBlock*finished"
   569 jump *label313 equal *tmp299 false
-    * label *label314
   570 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   571 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * label *label315
   572 write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlock:cfg"
   573 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   574 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   579 read *tmp299 processor5 ":buildRemoteBlock*finished"
   580 jump *label316 equal *tmp299 false
   581 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
-    * label *label317
   582 read :buildRemoteBlockLocal:x processor3 ".node1X"
   583 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * label *label318
   584 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   585 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   586 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   590 wait 1e-15
   591 read *tmp299 processor5 ":buildRemoteBlock*finished"
   592 jump *label319 equal *tmp299 false
-    * label *label320
   593 read :buildRemoteBlockLocal:x processor3 ".node2X"
   594 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * label *label321
   595 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   596 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   597 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   601 wait 1e-15
   602 read *tmp299 processor5 ":buildRemoteBlock*finished"
   603 jump *label322 equal *tmp299 false
-    * label *label323
   604 read :buildRemoteBlockLocal:x processor3 ".panelX"
   605 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * label *label324
   606 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   607 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   608 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   612 wait 1e-15
   613 read *tmp299 processor5 ":buildRemoteBlock*finished"
   614 jump *label325 equal *tmp299 false
-    * label *label326
   615 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   616 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * label *label327
   617 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   618 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   619 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   624 read *tmp299 processor5 ":buildRemoteBlock*finished"
   625 jump *label328 equal *tmp299 false
   626 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
-    * label *label329
   627 read :buildRemoteBlockLocal:x processor3 ".containerX"
   628 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * label *label330
   629 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   630 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   631 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   636 read *tmp299 processor5 ":buildRemoteBlock*finished"
   637 jump *label331 equal *tmp299 false
   638 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label332
   639 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   640 write .thoriumDrill processor2 ".thoriumDrill"
   641 write .thoriumContainer processor2 ".thoriumContainer"
 
   649 wait 1e-15
   650 read *tmp274 processor6 ":setThoriumContainer*finished"
   651 jump *label154 equal *tmp274 false
-    * label *label136
   652 write null processor2 ".nextBlock"
-    * label *label155
   653 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   654 jump *label157 greaterThanEq *tmp82 3
   655 label *label248
 
   659 wait 1e-15
   660 read *tmp276 processor5 ":supplyBase*finished"
   661 jump *label158 equal *tmp276 false
-    * label *label156
   662 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   663 jump *label248 lessThan *tmp82 3
   664 label *label157
   665 op add :setMonoTarget.2:target 4 .scrap
   666 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label159
   667 op mul *tmp278 700 .scrap
   668 op add *tmp279 3209 *tmp278
   669 write *tmp279 AÕFFJS-micro-processor9 ".powerTarget"
   670 write 120 processor5 ".siliconMonoSurplus"
   671 write 0 processor5 ".leadSurplus"
-    * label *label402
   672 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   673 write null processor5 ":buildBlockFromCfg:config"
   674 write false processor5 ":buildBlockFromCfg*finished"
 
   677 wait 1e-15
   678 read *tmp303 processor5 ":buildBlockFromCfg*finished"
   679 jump *label403 equal *tmp303 false
-    * label *label404
   680 write 10 processor5 ".metaglassSurplus"
   681 write 0 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label161
   682 write 0 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label162
   683 write 1 AÕFFJS-micro-processor9 ".megaTarget"
-    * label *label163
-    * label *label411
   684 write 0 processor5 ":meetTarget:block"
   685 write 0 processor5 ":meetTarget:copper"
   686 write 0 processor5 ":meetTarget:lead"
 
   701 write null processor2 ".nextBlock"
   702 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   703 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label413
   704 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   705 op sub :tmp *tmp82 1
   706 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   711 label *label165
   712 ucontrol move :x :y
   713 ucontrol payEnter
-    * label *label166
   714 read *tmp83 AÕFFJS-micro-processor9 ".megas"
   715 jump *label165 equal *tmp83 false
-    * label *label167
   716 write true AÕFFJS-micro-processor9 ".finished"
   717 control enabled processor1 false
   718 control enabled processor8 false
 
   721 control enabled processor3 false
   722 control enabled processor5 false
   723 control enabled processor11 false
-    * label *label277
   724 label *label278
   725 ubind @mega
   726 set :flagUnits:firstUnit @unit
-    * label *label279
   727 jump *label278 equal :flagUnits:firstUnit null
-    * label *label280
   728 op add :flagUnits:x .coreX 8
   729 label *label281
   730 ucontrol flag :flagUnits:x
   731 op add :flagUnits:x :flagUnits:x 4
   732 ubind @mega
-    * label *label282
   733 jump *label281 notEqual @unit :flagUnits:firstUnit
-    * label *label283
-    * label *label284
-    * label *label285
   734 label *label286
   735 ubind @poly
   736 set :flagUnits:firstUnit @unit
-    * label *label287
   737 jump *label286 equal :flagUnits:firstUnit null
-    * label *label288
   738 op add :flagUnits:x .coreX 8
   739 label *label289
   740 ucontrol flag :flagUnits:x
   741 op add :flagUnits:x :flagUnits:x 4
   742 ubind @poly
-    * label *label290
   743 jump *label289 notEqual @unit :flagUnits:firstUnit
-    * label *label291
-    * label *label292
-    * label *label293
   744 label *label294
   745 ubind @mono
   746 set :flagUnits:firstUnit @unit
-    * label *label295
   747 jump *label294 equal :flagUnits:firstUnit null
-    * label *label296
   748 op add :flagUnits:x .coreX 8
   749 label *label297
   750 ucontrol flag :flagUnits:x
   751 op add :flagUnits:x :flagUnits:x 4
   752 ubind @mono
-    * label *label298
   753 jump *label297 notEqual @unit :flagUnits:firstUnit
-    * label *label299
-    * label *label300
-    * label *label301
   754 label *label302
   755 ubind @flare
   756 set :flagUnits:firstUnit @unit
-    * label *label303
   757 jump *label302 equal :flagUnits:firstUnit null
-    * label *label304
   758 op add :flagUnits:x .coreX 8
   759 label *label305
   760 ucontrol flag :flagUnits:x
   761 op add :flagUnits:x :flagUnits:x 4
   762 ubind @flare
-    * label *label306
   763 jump *label305 notEqual @unit :flagUnits:firstUnit
-    * label *label307
-    * label *label308
   764 label *label173
   765 op add :lineUpUnits:y .coreY 6
-    * label *label249
   766 ubind @mega
   767 set :lineUpUnits:firstUnit @unit
   768 label *label250
 
   773 jump *label251 equal *tmp321 false
   774 ucontrol stop
   775 label *label251
-    * label *label252
   776 ubind @mega
-    * label *label253
   777 jump *label250 notEqual @unit :lineUpUnits:firstUnit
-    * label *label254
-    * label *label255
   778 op add :lineUpUnits:y .coreY 2
-    * label *label256
   779 ubind @poly
   780 set :lineUpUnits:firstUnit @unit
   781 label *label257
 
   786 jump *label258 equal *tmp321 false
   787 ucontrol stop
   788 label *label258
-    * label *label259
   789 ubind @poly
-    * label *label260
   790 jump *label257 notEqual @unit :lineUpUnits:firstUnit
-    * label *label261
-    * label *label262
   791 op sub :lineUpUnits:y .coreY 2
-    * label *label263
   792 ubind @mono
   793 set :lineUpUnits:firstUnit @unit
   794 label *label264
 
   799 jump *label265 equal *tmp321 false
   800 ucontrol stop
   801 label *label265
-    * label *label266
   802 ubind @mono
-    * label *label267
   803 jump *label264 notEqual @unit :lineUpUnits:firstUnit
-    * label *label268
-    * label *label269
   804 op sub :lineUpUnits:y .coreY 6
-    * label *label270
   805 ubind @flare
   806 set :lineUpUnits:firstUnit @unit
   807 label *label271
 
   812 jump *label272 equal *tmp321 false
   813 ucontrol stop
   814 label *label272
-    * label *label273
   815 ubind @flare
-    * label *label274
   816 jump *label271 notEqual @unit :lineUpUnits:firstUnit
-    * label *label275
-    * label *label276
-    * label *label174
   817 jump *label173 always
-    * label *label175
-    * label *label168
   818 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-1 instructions):
 
   314 read *tmp206 processor5 ":supplyBase*finished"
   315 jump *label104 equal *tmp206 false
   316 sensor *tmp207 AJTJK-battery1 @totalPower
-    * jump *label105 greaterThanEq *tmp207 300
-    * jump *label103 always
+  317 jump *label103 lessThan *tmp207 300
   318 label *label105
   319 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   320 jump *label101 lessThan *tmp81 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   315 jump *label104 equal *tmp206 false
   316 sensor *tmp207 AJTJK-battery1 @totalPower
   317 jump *label103 lessThan *tmp207 300
-    * label *label105
   318 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   319 jump *label101 lessThan *tmp81 3
   320 label *label103

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-1 instructions):
 
   813 ubind @flare
   814 jump *label271 notEqual @unit :lineUpUnits:firstUnit
   815 jump *label173 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    16 label *label48
    17 ubind @poly
    18 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp146 .core
+   19 ulocate building core false @copper .coreX .coreY 0 .core
    20 jump *label48 equal .core null
-    * ulocate ore core true @sand *tmp149 *tmp150 *tmp148 *tmp151
+   21 ulocate ore core true @sand 0 0 *tmp148 0
    22 op equal .scrap *tmp148 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"

Final code before resolving virtual instructions:

        label *label43                                               BaseBuilder.mnd: require "Display.mnd" remote display;
    0:  read *tmp32 processor2 "*signature"                          ...
    1:  jump *label43 notEqual *tmp32 "0:v1"                         ...
        label *label44                                               BaseBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
    2:  read *tmp71 processor3 "*signature"                          ...
    3:  jump *label44 notEqual *tmp71 "3290b8c661787058:v1"          ...
        label *label45                                               BaseBuilder.mnd: require "MonoController.mnd" remote monoController;
    4:  read *tmp97 processor7 "*signature"                          ...
    5:  jump *label45 notEqual *tmp97 "0:v1"                         ...
        label *label46                                               BaseBuilder.mnd: require "PolyController.mnd" remote polyController;
    6:  read *tmp100 processor6 "*signature"                         ...
    7:  jump *label46 notEqual *tmp100 "c7cc7825e82cc574:v1"         ...
        label *label47                                               BaseBuilder.mnd: require "BuilderController.mnd" remote builderController;
    8:  read *tmp143 processor5 "*signature"                         ...
    9:  jump *label47 notEqual *tmp143 "b1abbf1945b2011d:v1"         ...
   10:  set .ERROR ""                                                BaseBuilder.mnd: remote var ERROR = "";
        label *label48                                               BaseBuilder.mnd: do
   11:  ubind @poly                                                  BaseBuilder.mnd: builder = ubind(@poly);
   12:  set .builder @unit                                           ...
   13:  ulocate building core false @copper .coreX .coreY 0 .core    BaseBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   14:  jump *label48 equal .core null                               BaseBuilder.mnd: do
   15:  ulocate ore core true @sand 0 0 *tmp148 0                    BaseBuilder.mnd: scrap = !ulocate(:ore, @sand);
   16:  op equal .scrap *tmp148 false                                ...
   17:  write .scrap processor2 ".scrap"                             BaseBuilder.mnd: display.scrap = scrap;
   18:  write .scrap processor5 ".scrap"                             BaseBuilder.mnd: builderController.scrap = scrap;
   19:  write .scrap processor7 ".scrap"                             BaseBuilder.mnd: monoController.scrap = scrap;
   20:  write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCf BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   21:  write null processor5 ":buildBlockFromCfg:config"            ...
   22:  write false processor5 ":buildBlockFromCfg*finished"         ...
   23:  write 2 processor5 "@counter"                                ...
        label *label334                                              ...
   24:  wait 1e-15                                                   ...
   25:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   26:  jump *label334 equal *tmp303 false                           ...
   27:  write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"  ...
   28:  write null processor5 ":buildBlockFromCfg:config"            ...
   29:  write false processor5 ":buildBlockFromCfg*finished"         ...
   30:  write 2 processor5 "@counter"                                ...
        label *label337                                              ...
   31:  wait 1e-15                                                   ...
   32:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   33:  jump *label337 equal *tmp303 false                           ...
   34:  write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"  ...
   35:  write null processor5 ":buildBlockFromCfg:config"            ...
   36:  write false processor5 ":buildBlockFromCfg*finished"         ...
   37:  write 2 processor5 "@counter"                                ...
        label *label340                                              ...
   38:  wait 1e-15                                                   ...
   39:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   40:  jump *label340 equal *tmp303 false                           ...
   41:  write "AJRJM-combustion-generator3" processor5 ":buildBlock ...
   42:  write null processor5 ":buildBlockFromCfg:config"            ...
   43:  write false processor5 ":buildBlockFromCfg*finished"         ...
   44:  write 2 processor5 "@counter"                                ...
        label *label343                                              ...
   45:  wait 1e-15                                                   ...
   46:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   47:  jump *label343 equal *tmp303 false                           ...
   48:  write 400 processor5 ".powerTarget"                          BaseBuilder.mnd: builderController.powerTarget = 400;
   49:  set .sandContainer .core                                     BaseBuilder.mnd: sandContainer = core;
   50:  jump *label55 equal .scrap false                             BaseBuilder.mnd: if scrap then
   51:  write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   52:  write null processor5 ":buildBlockFromCfg:config"            ...
   53:  write false processor5 ":buildBlockFromCfg*finished"         ...
   54:  write 2 processor5 "@counter"                                ...
        label *label415                                              ...
   55:  wait 1e-15                                                   ...
   56:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   57:  jump *label415 equal *tmp303 false                           ...
   58:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
   59:  set .sandContainer :buildBlockFromCfgLocal*retval            BaseBuilder.mnd: sandContainer = buildBlockFromCfgLocal(PULVERIZER1);
   60:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai BaseBuilder.mnd: builderController.sandContainer = sandContainer;
   61:  write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCf BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   62:  write null processor5 ":buildBlockFromCfg:config"            ...
   63:  write false processor5 ":buildBlockFromCfg*finished"         ...
   64:  write 2 processor5 "@counter"                                ...
        label *label418                                              ...
   65:  wait 1e-15                                                   ...
   66:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   67:  jump *label418 equal *tmp303 false                           ...
   68:  write "APTJf-power-node28" processor5 ":buildBlockFromCfg:c ...
   69:  write null processor5 ":buildBlockFromCfg:config"            ...
   70:  write false processor5 ":buildBlockFromCfg*finished"         ...
   71:  write 2 processor5 "@counter"                                ...
        label *label421                                              ...
   72:  wait 1e-15                                                   ...
   73:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   74:  jump *label421 equal *tmp303 false                           ...
        label *label55                                               BaseBuilder.mnd: if scrap then
   75:  write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   76:  write null processor5 ":buildBlockFromCfg:config"            ...
   77:  write false processor5 ":buildBlockFromCfg*finished"         ...
   78:  write 2 processor5 "@counter"                                ...
        label *label346                                              ...
   79:  wait 1e-15                                                   ...
   80:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   81:  jump *label346 equal *tmp303 false                           ...
   82:  write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromC ...
   83:  write null processor5 ":buildBlockFromCfg:config"            ...
   84:  write false processor5 ":buildBlockFromCfg*finished"         ...
   85:  write 2 processor5 "@counter"                                ...
        label *label349                                              ...
   86:  wait 1e-15                                                   ...
   87:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
   88:  jump *label349 equal *tmp303 false                           ...
   89:  write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg: BaseBuilder.mnd: builderController.meetTargetCfg(cfg, false);
   90:  write false processor5 ":meetTargetCfg:forBuild"             ...
   91:  write false processor5 ":meetTargetCfg*finished"             ...
   92:  write 7 processor5 "@counter"                                ...
        label *label63                                               ...
   93:  wait 1e-15                                                   ...
   94:  read *tmp166 processor5 ":meetTargetCfg*finished"            ...
   95:  jump *label63 equal *tmp166 false                            ...
   96:  write @ore-titanium processor2 ".nextBlock"                  BaseBuilder.mnd: display.nextBlock = @ore-titanium;
   97:  write .coreX processor3 ":findDrillLocation:x"               BaseBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   98:  write .coreY processor3 ":findDrillLocation:y"               ...
   99:  write @unit processor3 ":findDrillLocation:unit"             ...
  100:  write @titanium processor3 ":findDrillLocation:item"         ...
  101:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  102:  write 2 processor3 ":findDrillLocation:size"                 ...
  103:  write 4 processor3 ":findDrillLocation:limit"                ...
  104:  write false processor3 ":findDrillLocation*finished"         ...
  105:  write 1 processor3 "@counter"                                ...
        label *label64                                               ...
  106:  wait 1e-15                                                   ...
  107:  read *tmp177 processor3 ":findDrillLocation*finished"        ...
  108:  jump *label64 equal *tmp177 false                            ...
  109:  read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocat ...
  110:  read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocat ...
  111:  read :buildFirstTitaniumDrill:result processor3 ":findDrillL ...
  112:  jump *label65 notEqual :buildFirstTitaniumDrill:result false BaseBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  113:  set .ERROR "Cannot locate spot for titanium drill"           BaseBuilder.mnd: ERROR = error;
  114:  stop                                                         BaseBuilder.mnd: stopProcessor();
        label *label65                                               BaseBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  115:  write @pneumatic-drill processor2 ".nextBlock"               BaseBuilder.mnd: display.nextBlock = @pneumatic-drill;
  116:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit BaseBuilder.mnd: return builderController.buildFirstTitaniumDrillAt(dx, dy);
  117:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
  118:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
  119:  write 3 processor5 "@counter"                                ...
        label *label68                                               ...
  120:  wait 1e-15                                                   ...
  121:  read *tmp183 processor5 ":buildFirstTitaniumDrillAt*finished ...
  122:  jump *label68 equal *tmp183 false                            ...
  123:  read *tmp163 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
  124:  write *tmp163 processor2 ".titaniumDrill"                    BaseBuilder.mnd: display.titaniumDrill = titaniumDrill;
  125:  write *tmp163 processor5 ".titaniumDrill"                    BaseBuilder.mnd: builderController.titaniumDrill = titaniumDrill;
  126:  jump *label69 equal .scrap false                             BaseBuilder.mnd: if scrap then
  127:  write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  128:  write null processor5 ":buildBlockFromCfg:config"            ...
  129:  write false processor5 ":buildBlockFromCfg*finished"         ...
  130:  write 2 processor5 "@counter"                                ...
        label *label424                                              ...
  131:  wait 1e-15                                                   ...
  132:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  133:  jump *label424 equal *tmp303 false                           ...
  134:  write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cf ...
  135:  write null processor5 ":buildBlockFromCfg:config"            ...
  136:  write false processor5 ":buildBlockFromCfg*finished"         ...
  137:  write 2 processor5 "@counter"                                ...
        label *label427                                              ...
  138:  wait 1e-15                                                   ...
  139:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  140:  jump *label427 equal *tmp303 false                           ...
  141:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
  142:  set .sandContainer :buildBlockFromCfgLocal*retval            BaseBuilder.mnd: sandContainer = buildBlockFromCfgLocal(CONTAINER_A);
  143:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai BaseBuilder.mnd: builderController.sandContainer = sandContainer;
  144:  write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  145:  write null processor5 ":buildBlockFromCfg:config"            ...
  146:  write false processor5 ":buildBlockFromCfg*finished"         ...
  147:  write 2 processor5 "@counter"                                ...
        label *label430                                              ...
  148:  wait 1e-15                                                   ...
  149:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  150:  jump *label430 equal *tmp303 false                           ...
  151:  write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCf ...
  152:  write null processor5 ":buildBlockFromCfg:config"            ...
  153:  write false processor5 ":buildBlockFromCfg*finished"         ...
  154:  write 2 processor5 "@counter"                                ...
        label *label433                                              ...
  155:  wait 1e-15                                                   ...
  156:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  157:  jump *label433 equal *tmp303 false                           ...
  158:  write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCf ...
  159:  write null processor5 ":buildBlockFromCfg:config"            ...
  160:  write false processor5 ":buildBlockFromCfg*finished"         ...
  161:  write 2 processor5 "@counter"                                ...
        label *label436                                              ...
  162:  wait 1e-15                                                   ...
  163:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  164:  jump *label436 equal *tmp303 false                           ...
        label *label69                                               BaseBuilder.mnd: if scrap then
  165:  write .sandContainer processor7 ".sandContainer"             BaseBuilder.mnd: monoController.sandContainer = sandContainer;
  166:  write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  167:  write null processor5 ":buildBlockFromCfg:config"            ...
  168:  write false processor5 ":buildBlockFromCfg*finished"         ...
  169:  write 2 processor5 "@counter"                                ...
        label *label352                                              ...
  170:  wait 1e-15                                                   ...
  171:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  172:  jump *label352 equal *tmp303 false                           ...
  173:  write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCf ...
  174:  write null processor5 ":buildBlockFromCfg:config"            ...
  175:  write false processor5 ":buildBlockFromCfg*finished"         ...
  176:  write 2 processor5 "@counter"                                ...
        label *label355                                              ...
  177:  wait 1e-15                                                   ...
  178:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  179:  jump *label355 equal *tmp303 false                           ...
  180:  write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg" ...
  181:  write null processor5 ":buildBlockFromCfg:config"            ...
  182:  write false processor5 ":buildBlockFromCfg*finished"         ...
  183:  write 2 processor5 "@counter"                                ...
        label *label358                                              ...
  184:  wait 1e-15                                                   ...
  185:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  186:  jump *label358 equal *tmp303 false                           ...
  187:  write 80 processor5 ".graphiteSurplus"                       BaseBuilder.mnd: builderController.graphiteSurplus = 80;
  188:  write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, config);
  189:  write processor10 processor5 ":buildBlockFromCfg:config"     ...
  190:  write false processor5 ":buildBlockFromCfg*finished"         ...
  191:  write 2 processor5 "@counter"                                ...
        label *label80                                               ...
  192:  wait 1e-15                                                   ...
  193:  read *tmp197 processor5 ":buildBlockFromCfg*finished"        ...
  194:  jump *label80 equal *tmp197 false                            ...
  195:  write processor1 AÕFFJS-micro-processor9 ".timer"            BaseBuilder.mnd: processor.timer = timer;
  196:  write processor2 AÕFFJS-micro-processor9 ".display"          BaseBuilder.mnd: processor.display = display;
  197:  write .core AÕFFJS-micro-processor9 ".core"                  BaseBuilder.mnd: processor.core = core;
  198:  write bank1 AÕFFJS-micro-processor9 ".bank"                  BaseBuilder.mnd: processor.bank = bank1;
  199:  set *tmp200 AJEMJJ-graphite-press0                           BaseBuilder.mnd: processor.write(@this.read(block), block);
  200:  write *tmp200 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press ...
  201:  set *tmp200 AJTJK-battery1                                  ...
  202:  write *tmp200 AÕFFJS-micro-processor9 "AJTJK-battery1"      ...
  203:  set *tmp200 ALTJL-battery2                                  ...
  204:  write *tmp200 AÕFFJS-micro-processor9 "ALTJL-battery2"      ...
  205:  set *tmp200 AJRJM-combustion-generator3                     ...
  206:  write *tmp200 AÕFFJS-micro-processor9 "AJRJM-combustion-gen ...
  207:  set *tmp200 ALMQJN-silicon-smelter4                          ...
  208:  write *tmp200 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelte ...
  209:  set *tmp200 A{LNJO-inverted-sorter5                          ...
  210:  write *tmp200 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorte ...
  211:  set *tmp200 A©JNJP-unloader6                                 ...
  212:  write *tmp200 AÕFFJS-micro-processor9 "A©JNJP-unloader6"     ...
  213:  set *tmp200 A{HNJQ-inverted-sorter7                          ...
  214:  write *tmp200 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorte ...
  215:  set *tmp200 AJPJR-underflow-gate8                           ...
  216:  write *tmp200 AÕFFJS-micro-processor9 "AJPJR-underflow-gate ...
  217:  set *tmp200 AÕFFJS-micro-processor9                          ...
  218:  write *tmp200 AÕFFJS-micro-processor9 "AÕFFJS-micro-processo ...
  219:  write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unlo BaseBuilder.mnd: processor.write(@this.read(UNLOADER_A), UNLOADER_A);
  220:  write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  221:  write null processor5 ":buildBlockFromCfg:config"            ...
  222:  write false processor5 ":buildBlockFromCfg*finished"         ...
  223:  write 2 processor5 "@counter"                                ...
        label *label361                                              ...
  224:  wait 1e-15                                                   ...
  225:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  226:  jump *label361 equal *tmp303 false                           ...
  227:  write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg ...
  228:  write null processor5 ":buildBlockFromCfg:config"            ...
  229:  write false processor5 ":buildBlockFromCfg*finished"         ...
  230:  write 2 processor5 "@counter"                                ...
        label *label364                                              ...
  231:  wait 1e-15                                                   ...
  232:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  233:  jump *label364 equal *tmp303 false                           ...
  234:  write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCf ...
  235:  write null processor5 ":buildBlockFromCfg:config"            ...
  236:  write false processor5 ":buildBlockFromCfg*finished"         ...
  237:  write 2 processor5 "@counter"                                ...
        label *label367                                              ...
  238:  wait 1e-15                                                   ...
  239:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  240:  jump *label367 equal *tmp303 false                           ...
  241:  write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg: ...
  242:  write null processor5 ":buildBlockFromCfg:config"            ...
  243:  write false processor5 ":buildBlockFromCfg*finished"         ...
  244:  write 2 processor5 "@counter"                                ...
        label *label370                                              ...
  245:  wait 1e-15                                                   ...
  246:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  247:  jump *label370 equal *tmp303 false                           ...
  248:  write 1 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  249:  write 5 AÕFFJS-micro-processor9 ".monoTarget"                BaseBuilder.mnd: processor.monoTarget = target;
  250:  write 85 AÕFFJS-micro-processor9 ".pressTarget"              BaseBuilder.mnd: processor.pressTarget = 85;
  251:  write 150 AÕFFJS-micro-processor9 ".smelterTarget"           BaseBuilder.mnd: processor.smelterTarget = 150;
  252:  write 30 AÕFFJS-micro-processor9 ".kilnTarget"               BaseBuilder.mnd: processor.kilnTarget = 30;
  253:  write 20 processor5 ".siliconSurplus"                        BaseBuilder.mnd: builderController.siliconSurplus = 20;
  254:  write 2 processor5 ".leadSurplus"                            BaseBuilder.mnd: builderController.leadSurplus = 2;
  255:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  256:  write 0 processor5 ":meetTarget:copper"                      ...
  257:  write 0 processor5 ":meetTarget:lead"                        ...
  258:  write 0 processor5 ":meetTarget:graphite"                    ...
  259:  write 0 processor5 ":meetTarget:silicon"                     ...
  260:  write 0 processor5 ":meetTarget:titanium"                    ...
  261:  write 0 processor5 ":meetTarget:metaglass"                   ...
  262:  write 0 processor5 ":meetTarget:thorium"                     ...
  263:  write false processor5 ":meetTarget:forBuild"                ...
  264:  write true processor5 ":meetTarget:isNoTarget"               ...
  265:  write false processor5 ":meetTarget*finished"                ...
  266:  write 6 processor5 "@counter"                                ...
        label *label406                                              ...
  267:  wait 1e-15                                                   ...
  268:  read *tmp315 processor5 ":meetTarget*finished"               ...
  269:  jump *label406 equal *tmp315 false                           ...
  270:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  271:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  272:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  273:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
        label *label101                                              BaseBuilder.mnd: do
  274:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  275:  write 8 processor5 "@counter"                                ...
        label *label104                                              ...
  276:  wait 1e-15                                                   ...
  277:  read *tmp206 processor5 ":supplyBase*finished"               ...
  278:  jump *label104 equal *tmp206 false                           ...
  279:  sensor *tmp207 AJTJK-battery1 @totalPower                   BaseBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  280:  jump *label103 lessThan *tmp207 300                          ...
  281:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 BaseBuilder.mnd: while processor.monos < 3;
  282:  jump *label101 lessThan *tmp81 3                             BaseBuilder.mnd: do
        label *label103                                              ...
  283:  write 65 processor5 ".siliconSurplus"                        BaseBuilder.mnd: builderController.siliconSurplus = 65;
  284:  write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  285:  write null processor5 ":buildBlockFromCfg:config"            ...
  286:  write false processor5 ":buildBlockFromCfg*finished"         ...
  287:  write 2 processor5 "@counter"                                ...
        label *label373                                              ...
  288:  wait 1e-15                                                   ...
  289:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  290:  jump *label373 equal *tmp303 false                           ...
  291:  write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFrom ...
  292:  write null processor5 ":buildBlockFromCfg:config"            ...
  293:  write false processor5 ":buildBlockFromCfg*finished"         ...
  294:  write 2 processor5 "@counter"                                ...
        label *label376                                              ...
  295:  wait 1e-15                                                   ...
  296:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  297:  jump *label376 equal *tmp303 false                           ...
  298:  write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"    ...
  299:  write null processor5 ":buildBlockFromCfg:config"            ...
  300:  write false processor5 ":buildBlockFromCfg*finished"         ...
  301:  write 2 processor5 "@counter"                                ...
        label *label379                                              ...
  302:  wait 1e-15                                                   ...
  303:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  304:  jump *label379 equal *tmp303 false                           ...
  305:  write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFrom ...
  306:  write null processor5 ":buildBlockFromCfg:config"            ...
  307:  write false processor5 ":buildBlockFromCfg*finished"         ...
  308:  write 2 processor5 "@counter"                                ...
        label *label382                                              ...
  309:  wait 1e-15                                                   ...
  310:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  311:  jump *label382 equal *tmp303 false                           ...
  312:  write "AAKJ\-steam-generator18" processor5 ":buildBlockFrom ...
  313:  write null processor5 ":buildBlockFromCfg:config"            ...
  314:  write false processor5 ":buildBlockFromCfg*finished"         ...
  315:  write 2 processor5 "@counter"                                ...
        label *label385                                              ...
  316:  wait 1e-15                                                   ...
  317:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  318:  jump *label385 equal *tmp303 false                           ...
  319:  write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg: ...
  320:  write null processor5 ":buildBlockFromCfg:config"            ...
  321:  write false processor5 ":buildBlockFromCfg*finished"         ...
  322:  write 2 processor5 "@counter"                                ...
        label *label388                                              ...
  323:  wait 1e-15                                                   ...
  324:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  325:  jump *label388 equal *tmp303 false                           ...
  326:  write 200 processor5 ".graphiteSurplus"                      BaseBuilder.mnd: builderController.graphiteSurplus = 200;
  327:  write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFrom BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  328:  write null processor5 ":buildBlockFromCfg:config"            ...
  329:  write false processor5 ":buildBlockFromCfg*finished"         ...
  330:  write 2 processor5 "@counter"                                ...
        label *label391                                              ...
  331:  wait 1e-15                                                   ...
  332:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  333:  jump *label391 equal *tmp303 false                           ...
  334:  jump *label114 equal .scrap false                            BaseBuilder.mnd: if scrap then
  335:  write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  336:  write null processor5 ":buildBlockFromCfg:config"            ...
  337:  write false processor5 ":buildBlockFromCfg*finished"         ...
  338:  write 2 processor5 "@counter"                                ...
        label *label439                                              ...
  339:  wait 1e-15                                                   ...
  340:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  341:  jump *label439 equal *tmp303 false                           ...
  342:  write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:c ...
  343:  write null processor5 ":buildBlockFromCfg:config"            ...
  344:  write false processor5 ":buildBlockFromCfg*finished"         ...
  345:  write 2 processor5 "@counter"                                ...
        label *label442                                              ...
  346:  wait 1e-15                                                   ...
  347:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  348:  jump *label442 equal *tmp303 false                           ...
  349:  write .sandContainer processor6 ":setScrapContainer:scrapCon BaseBuilder.mnd: polyController.setScrapContainer(sandContainer);
  350:  write false processor6 ":setScrapContainer*finished"         ...
  351:  write 1 processor6 "@counter"                                ...
        label *label118                                              ...
  352:  wait 1e-15                                                   ...
  353:  read *tmp222 processor6 ":setScrapContainer*finished"        ...
  354:  jump *label118 equal *tmp222 false                           ...
        label *label114                                              BaseBuilder.mnd: if scrap then
  355:  write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  356:  write null processor5 ":buildBlockFromCfg:config"            ...
  357:  write false processor5 ":buildBlockFromCfg*finished"         ...
  358:  write 2 processor5 "@counter"                                ...
        label *label394                                              ...
  359:  wait 1e-15                                                   ...
  360:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  361:  jump *label394 equal *tmp303 false                           ...
  362:  write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFrom ...
  363:  write null processor5 ":buildBlockFromCfg:config"            ...
  364:  write false processor5 ":buildBlockFromCfg*finished"         ...
  365:  write 2 processor5 "@counter"                                ...
        label *label397                                              ...
  366:  wait 1e-15                                                   ...
  367:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  368:  jump *label397 equal *tmp303 false                           ...
  369:  write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBl ...
  370:  write null processor5 ":buildBlockFromCfg:config"            ...
  371:  write false processor5 ":buildBlockFromCfg*finished"         ...
  372:  write 2 processor5 "@counter"                                ...
        label *label400                                              ...
  373:  wait 1e-15                                                   ...
  374:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  375:  jump *label400 equal *tmp303 false                           ...
  376:  write 1000 processor5 ".siliconSurplus"                      BaseBuilder.mnd: builderController.siliconSurplus = 1000;
  377:  write 20 processor5 ".siliconMonoSurplus"                    BaseBuilder.mnd: builderController.siliconMonoSurplus = 20;
  378:  write 100 processor5 ".metaglassSurplus"                     BaseBuilder.mnd: builderController.metaglassSurplus = 100;
  379:  write 4 AÕFFJS-micro-processor9 ".monoTarget"                BaseBuilder.mnd: processor.monoTarget = target;
  380:  write 3 AÕFFJS-micro-processor9 ".polyTarget"                BaseBuilder.mnd: processor.polyTarget = target;
  381:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  382:  write 0 processor5 ":meetTarget:copper"                      ...
  383:  write 0 processor5 ":meetTarget:lead"                        ...
  384:  write 0 processor5 ":meetTarget:graphite"                    ...
  385:  write 0 processor5 ":meetTarget:silicon"                     ...
  386:  write 0 processor5 ":meetTarget:titanium"                    ...
  387:  write 0 processor5 ":meetTarget:metaglass"                   ...
  388:  write 0 processor5 ":meetTarget:thorium"                     ...
  389:  write false processor5 ":meetTarget:forBuild"                ...
  390:  write true processor5 ":meetTarget:isNoTarget"               ...
  391:  write false processor5 ":meetTarget*finished"                ...
  392:  write 6 processor5 "@counter"                                ...
        label *label409                                              ...
  393:  wait 1e-15                                                   ...
  394:  read *tmp315 processor5 ":meetTarget*finished"               ...
  395:  jump *label409 equal *tmp315 false                           ...
  396:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  397:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  398:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  399:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
  400:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 2 do
  401:  jump *label127 greaterThanEq *tmp82 2                        ...
        label *label246                                              ...
  402:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  403:  write 8 processor5 "@counter"                                ...
        label *label128                                              ...
  404:  wait 1e-15                                                   ...
  405:  read *tmp227 processor5 ":supplyBase*finished"               ...
  406:  jump *label128 equal *tmp227 false                           ...
  407:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 2 do
  408:  jump *label246 lessThan *tmp82 2                             ...
        label *label127                                              ...
  409:  write 2 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  410:  read *tmp80 AÕFFJS-micro-processor9 ".flares"                BaseBuilder.mnd: while processor.flares < 2 do
  411:  jump *label132 greaterThanEq *tmp80 2                        ...
        label *label247                                              ...
  412:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  413:  write 8 processor5 "@counter"                                ...
        label *label133                                              ...
  414:  wait 1e-15                                                   ...
  415:  read *tmp229 processor5 ":supplyBase*finished"               ...
  416:  jump *label133 equal *tmp229 false                           ...
  417:  read *tmp80 AÕFFJS-micro-processor9 ".flares"                BaseBuilder.mnd: while processor.flares < 2 do
  418:  jump *label247 lessThan *tmp80 2                             ...
        label *label132                                              ...
  419:  write @ore-titanium processor2 ".nextBlock"                  BaseBuilder.mnd: display.nextBlock = @ore-titanium;
  420:  ubind @flare                                                 BaseBuilder.mnd: ubind(@flare);
  421:  read :blocksBuildTitaniumDrills:current processor3 ".locatio BaseBuilder.mnd: var current = oreLocator.locations;
  422:  write .coreX processor3 ":findDrillLocation:x"               BaseBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  423:  write .coreY processor3 ":findDrillLocation:y"               ...
  424:  write @unit processor3 ":findDrillLocation:unit"             ...
  425:  write @titanium processor3 ":findDrillLocation:item"         ...
  426:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  427:  write 4 processor3 ":findDrillLocation:size"                 ...
  428:  write 1000000000 processor3 ":findDrillLocation:limit"       ...
  429:  write false processor3 ":findDrillLocation*finished"         ...
  430:  write 1 processor3 "@counter"                                ...
  431:  ubind .builder                                               BaseBuilder.mnd: ubind(builder);
  432:  write :blocksBuildTitaniumDrills:current processor5 ":buildT BaseBuilder.mnd: builderController.buildTitaniumDrills(current);
  433:  write false processor5 ":buildTitaniumDrills*finished"       ...
  434:  write 5 processor5 "@counter"                                ...
        label *label135                                              ...
  435:  wait 1e-15                                                   ...
  436:  read *tmp241 processor5 ":buildTitaniumDrills*finished"      ...
  437:  jump *label135 equal *tmp241 false                           ...
  438:  write false processor3 ":stopLocation*finished"              BaseBuilder.mnd: async(oreLocator.stopLocation());
  439:  write 3 processor3 "@counter"                                ...
  440:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  441:  write 10 processor5 ".graphiteSurplus"                       BaseBuilder.mnd: builderController.graphiteSurplus = 10;
  442:  write 50 processor5 ".metaglassSurplus"                      BaseBuilder.mnd: builderController.metaglassSurplus = 50;
  443:  write @ore-thorium processor2 ".nextBlock"                   BaseBuilder.mnd: display.nextBlock = @ore-thorium;
  444:  write .coreX processor3 ":layoutThoriumDrill:x"              BaseBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  445:  write .coreY processor3 ":layoutThoriumDrill:y"              ...
  446:  write @unit processor3 ":layoutThoriumDrill:unit"            ...
  447:  write 7 processor3 ":layoutThoriumDrill:limit"               ...
  448:  write false processor3 ":layoutThoriumDrill*finished"        ...
  449:  write 2 processor3 "@counter"                                ...
        label *label137                                              ...
  450:  wait 1e-15                                                   ...
  451:  read *tmp246 processor3 ":layoutThoriumDrill*finished"       ...
  452:  jump *label137 equal *tmp246 false                           ...
  453:  write "AJJJ~-laser-drill52" processor5 ":meetTargetCfg:cfg" BaseBuilder.mnd: builderController.meetTargetCfg(LASER_DRILL, false);
  454:  write false processor5 ":meetTargetCfg:forBuild"             ...
  455:  write false processor5 ":meetTargetCfg*finished"             ...
  456:  write 7 processor5 "@counter"                                ...
        label *label138                                              ...
  457:  wait 1e-15                                                   ...
  458:  read *tmp250 processor5 ":meetTargetCfg*finished"            ...
  459:  jump *label138 equal *tmp250 false                           ...
        label *label139                                              BaseBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  460:  wait 1e-15                                                   ...
  461:  read *tmp251 processor3 ":layoutThoriumDrill*finished"       ...
  462:  jump *label139 equal *tmp251 false                           ...
  463:  read :buildThoriumDrill:result processor3 ":layoutThoriumDri ...
  464:  jump *label140 notEqual :buildThoriumDrill:result false      BaseBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  465:  set .ERROR "Cannot locate spot for thorium drill"            BaseBuilder.mnd: ERROR = error;
  466:  stop                                                         BaseBuilder.mnd: stopProcessor();
        label *label140                                              BaseBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  467:  write @laser-drill processor5 ":buildBlockAt:block"          BaseBuilder.mnd: thoriumDrill = builderController.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  468:  read *tmp53 processor3 ".drillX"                             ...
  469:  write *tmp53 processor5 ":buildBlockAt:x"                    ...
  470:  read *tmp54 processor3 ".drillY"                             ...
  471:  write *tmp54 processor5 ":buildBlockAt:y"                    ...
  472:  write null processor5 ":buildBlockAt:rotation"               ...
  473:  write 0 processor5 ":buildBlockAt:config"                    ...
  474:  write -1 processor5 ":buildBlockAt:index"                    ...
  475:  write false processor5 ":buildBlockAt*finished"              ...
  476:  write 1 processor5 "@counter"                                ...
        label *label143                                              ...
  477:  wait 1e-15                                                   ...
  478:  read *tmp261 processor5 ":buildBlockAt*finished"             ...
  479:  jump *label143 equal *tmp261 false                           ...
  480:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  481:  read :buildRemoteBlockLocal:x processor3 ".water1X"          BaseBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  482:  read :buildRemoteBlockLocal:y processor3 ".water1Y"          ...
  483:  write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  484:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  485:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  486:  write false processor5 ":buildRemoteBlock*finished"          ...
  487:  write 4 processor5 "@counter"                                ...
        label *label310                                              ...
  488:  wait 1e-15                                                   ...
  489:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  490:  jump *label310 equal *tmp299 false                           ...
  491:  read :buildRemoteBlockLocal:x processor3 ".water2X"          BaseBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  492:  read :buildRemoteBlockLocal:y processor3 ".water2Y"          ...
  493:  write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  494:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  495:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  496:  write false processor5 ":buildRemoteBlock*finished"          ...
  497:  write 4 processor5 "@counter"                                ...
        label *label313                                              ...
  498:  wait 1e-15                                                   ...
  499:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  500:  jump *label313 equal *tmp299 false                           ...
  501:  read :buildRemoteBlockLocal:x processor3 ".generatorX"       BaseBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  502:  read :buildRemoteBlockLocal:y processor3 ".generatorY"       ...
  503:  write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  504:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  505:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  506:  write false processor5 ":buildRemoteBlock*finished"          ...
  507:  write 4 processor5 "@counter"                                ...
        label *label316                                              ...
  508:  wait 1e-15                                                   ...
  509:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  510:  jump *label316 equal *tmp299 false                           ...
  511:  read .thoriumGenerator processor5 ":buildRemoteBlock*retval" BaseBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  512:  read :buildRemoteBlockLocal:x processor3 ".node1X"           BaseBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  513:  read :buildRemoteBlockLocal:y processor3 ".node1Y"           ...
  514:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  515:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  516:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  517:  write false processor5 ":buildRemoteBlock*finished"          ...
  518:  write 4 processor5 "@counter"                                ...
        label *label319                                              ...
  519:  wait 1e-15                                                   ...
  520:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  521:  jump *label319 equal *tmp299 false                           ...
  522:  read :buildRemoteBlockLocal:x processor3 ".node2X"           BaseBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  523:  read :buildRemoteBlockLocal:y processor3 ".node2Y"           ...
  524:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  525:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  526:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  527:  write false processor5 ":buildRemoteBlock*finished"          ...
  528:  write 4 processor5 "@counter"                                ...
        label *label322                                              ...
  529:  wait 1e-15                                                   ...
  530:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  531:  jump *label322 equal *tmp299 false                           ...
  532:  read :buildRemoteBlockLocal:x processor3 ".panelX"           BaseBuilder.mnd: buildRemoteBlockLocal(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  533:  read :buildRemoteBlockLocal:y processor3 ".panelY"           ...
  534:  write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:c BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  535:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  536:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  537:  write false processor5 ":buildRemoteBlock*finished"          ...
  538:  write 4 processor5 "@counter"                                ...
        label *label325                                              ...
  539:  wait 1e-15                                                   ...
  540:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  541:  jump *label325 equal *tmp299 false                           ...
  542:  read :buildRemoteBlockLocal:x processor3 ".batteryX"         BaseBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  543:  read :buildRemoteBlockLocal:y processor3 ".batteryY"         ...
  544:  write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"   BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  545:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  546:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  547:  write false processor5 ":buildRemoteBlock*finished"          ...
  548:  write 4 processor5 "@counter"                                ...
        label *label328                                              ...
  549:  wait 1e-15                                                   ...
  550:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  551:  jump *label328 equal *tmp299 false                           ...
  552:  read .thoriumBattery processor5 ":buildRemoteBlock*retval"   BaseBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  553:  read :buildRemoteBlockLocal:x processor3 ".containerX"       BaseBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  554:  read :buildRemoteBlockLocal:y processor3 ".containerY"       ...
  555:  write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  556:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  557:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  558:  write false processor5 ":buildRemoteBlock*finished"          ...
  559:  write 4 processor5 "@counter"                                ...
        label *label331                                              ...
  560:  wait 1e-15                                                   ...
  561:  read *tmp299 processor5 ":buildRemoteBlock*finished"         ...
  562:  jump *label331 equal *tmp299 false                           ...
  563:  read :buildRemoteBlockLocal*retval processor5 ":buildRemoteB BaseBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  564:  select .thoriumContainer equal :buildRemoteBlockLocal*retval BaseBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  565:  write .thoriumDrill processor2 ".thoriumDrill"               BaseBuilder.mnd: display.thoriumDrill = thoriumDrill;
  566:  write .thoriumContainer processor2 ".thoriumContainer"       BaseBuilder.mnd: display.thoriumContainer = thoriumContainer;
  567:  write .thoriumBattery processor5 ".thoriumBattery"           BaseBuilder.mnd: builderController.thoriumBattery = thoriumBattery;
  568:  write .thoriumContainer processor5 ".thoriumContainer"       BaseBuilder.mnd: builderController.thoriumContainer = thoriumContainer;
  569:  write .thoriumGenerator processor5 ".thoriumGenerator"       BaseBuilder.mnd: builderController.thoriumGenerator = thoriumGenerator;
  570:  write .thoriumContainer processor6 ":setThoriumContainer:con BaseBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  571:  write false processor6 ":setThoriumContainer*finished"       ...
  572:  write 2 processor6 "@counter"                                ...
        label *label154                                              ...
  573:  wait 1e-15                                                   ...
  574:  read *tmp274 processor6 ":setThoriumContainer*finished"      ...
  575:  jump *label154 equal *tmp274 false                           ...
  576:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  577:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 3 do
  578:  jump *label157 greaterThanEq *tmp82 3                        ...
        label *label248                                              ...
  579:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  580:  write 8 processor5 "@counter"                                ...
        label *label158                                              ...
  581:  wait 1e-15                                                   ...
  582:  read *tmp276 processor5 ":supplyBase*finished"               ...
  583:  jump *label158 equal *tmp276 false                           ...
  584:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 3 do
  585:  jump *label248 lessThan *tmp82 3                             ...
        label *label157                                              ...
  586:  op add :setMonoTarget.2:target 4 .scrap                      BaseBuilder.mnd: setMonoTarget(4 + scrap);
  587:  write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".mono BaseBuilder.mnd: processor.monoTarget = target;
  588:  op mul *tmp278 700 .scrap                                    BaseBuilder.mnd: processor.powerTarget = 3209 + 700 * scrap;
  589:  op add *tmp279 3209 *tmp278                                  ...
  590:  write *tmp279 AÕFFJS-micro-processor9 ".powerTarget"         ...
  591:  write 120 processor5 ".siliconMonoSurplus"                   BaseBuilder.mnd: builderController.siliconMonoSurplus = 120;
  592:  write 0 processor5 ".leadSurplus"                            BaseBuilder.mnd: builderController.leadSurplus = 0;
  593:  write "AÁNBJc-multiplicative-reconstructor25" processor5 ":b BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  594:  write null processor5 ":buildBlockFromCfg:config"            ...
  595:  write false processor5 ":buildBlockFromCfg*finished"         ...
  596:  write 2 processor5 "@counter"                                ...
        label *label403                                              ...
  597:  wait 1e-15                                                   ...
  598:  read *tmp303 processor5 ":buildBlockFromCfg*finished"        ...
  599:  jump *label403 equal *tmp303 false                           ...
  600:  write 10 processor5 ".metaglassSurplus"                      BaseBuilder.mnd: builderController.metaglassSurplus = 10;
  601:  write 0 AÕFFJS-micro-processor9 ".polyTarget"                BaseBuilder.mnd: processor.polyTarget = target;
  602:  write 0 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  603:  write 1 AÕFFJS-micro-processor9 ".megaTarget"                BaseBuilder.mnd: processor.megaTarget = target;
  604:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  605:  write 0 processor5 ":meetTarget:copper"                      ...
  606:  write 0 processor5 ":meetTarget:lead"                        ...
  607:  write 0 processor5 ":meetTarget:graphite"                    ...
  608:  write 0 processor5 ":meetTarget:silicon"                     ...
  609:  write 0 processor5 ":meetTarget:titanium"                    ...
  610:  write 0 processor5 ":meetTarget:metaglass"                   ...
  611:  write 0 processor5 ":meetTarget:thorium"                     ...
  612:  write false processor5 ":meetTarget:forBuild"                ...
  613:  write true processor5 ":meetTarget:isNoTarget"               ...
  614:  write false processor5 ":meetTarget*finished"                ...
  615:  write 6 processor5 "@counter"                                ...
        label *label412                                              ...
  616:  wait 1e-15                                                   ...
  617:  read *tmp315 processor5 ":meetTarget*finished"               ...
  618:  jump *label412 equal *tmp315 false                           ...
  619:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  620:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  621:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  622:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
  623:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: var tmp = processor.polys - 1;
  624:  op sub :tmp *tmp82 1                                         ...
  625:  write :tmp AÕFFJS-micro-processor9 ".polyTarget"             BaseBuilder.mnd: processor.polyTarget = tmp;
  626:  write :tmp AÕFFJS-micro-processor9 ".polys"                  BaseBuilder.mnd: processor.polys = tmp;
  627:  write :tmp processor2 ".polys"                               BaseBuilder.mnd: display.polys = tmp;
  628:  sensor :x AÁNBJc-multiplicative-reconstructor25 @x           BaseBuilder.mnd: var x = multiplicative_rec.@x;
  629:  sensor :y AÁNBJc-multiplicative-reconstructor25 @y           BaseBuilder.mnd: var y = multiplicative_rec.@y;
        label *label165                                              BaseBuilder.mnd: do
  630:  ucontrol move :x :y 0 0 0                                    BaseBuilder.mnd: move(x, y);
  631:  ucontrol payEnter 0 0 0 0 0                                  BaseBuilder.mnd: payEnter();
  632:  read *tmp83 AÕFFJS-micro-processor9 ".megas"                 BaseBuilder.mnd: while !processor.megas;
  633:  jump *label165 equal *tmp83 false                            BaseBuilder.mnd: do
  634:  write true AÕFFJS-micro-processor9 ".finished"               BaseBuilder.mnd: processor.finished = true;
  635:  control enabled processor1 false 0 0 0                       BaseBuilder.mnd: timer.enabled = false;
  636:  control enabled processor8 false 0 0 0                       BaseBuilder.mnd: flareController.enabled = false;
  637:  control enabled processor7 false 0 0 0                       BaseBuilder.mnd: monoController.enabled = false;
  638:  control enabled processor6 false 0 0 0                       BaseBuilder.mnd: polyController.enabled = false;
  639:  control enabled processor3 false 0 0 0                       BaseBuilder.mnd: oreLocator.enabled = false;
  640:  control enabled processor5 false 0 0 0                       BaseBuilder.mnd: builderController.enabled = false;
  641:  control enabled processor11 false 0 0 0                      BaseBuilder.mnd: measurements.enabled = false;
        label *label278                                              BaseBuilder.mnd: do
  642:  ubind @mega                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  643:  set :flagUnits:firstUnit @unit                               ...
  644:  jump *label278 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  645:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label281                                              BaseBuilder.mnd: do
  646:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  647:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  648:  ubind @mega                                                  BaseBuilder.mnd: ubind(unit);
  649:  jump *label281 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label286                                              BaseBuilder.mnd: do
  650:  ubind @poly                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  651:  set :flagUnits:firstUnit @unit                               ...
  652:  jump *label286 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  653:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label289                                              BaseBuilder.mnd: do
  654:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  655:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  656:  ubind @poly                                                  BaseBuilder.mnd: ubind(unit);
  657:  jump *label289 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label294                                              BaseBuilder.mnd: do
  658:  ubind @mono                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  659:  set :flagUnits:firstUnit @unit                               ...
  660:  jump *label294 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  661:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label297                                              BaseBuilder.mnd: do
  662:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  663:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  664:  ubind @mono                                                  BaseBuilder.mnd: ubind(unit);
  665:  jump *label297 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label302                                              BaseBuilder.mnd: do
  666:  ubind @flare                                                 BaseBuilder.mnd: firstUnit = ubind(unit);
  667:  set :flagUnits:firstUnit @unit                               ...
  668:  jump *label302 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  669:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label305                                              BaseBuilder.mnd: do
  670:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  671:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  672:  ubind @flare                                                 BaseBuilder.mnd: ubind(unit);
  673:  jump *label305 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label173                                              BaseBuilder.mnd: while true do
  674:  op add :lineUpUnits:y .coreY 6                               BaseBuilder.mnd: lineUpUnits(coreY + 6, @mega);
  675:  ubind @mega                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  676:  set :lineUpUnits:firstUnit @unit                             ...
        label *label250                                              BaseBuilder.mnd: do
  677:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  678:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  679:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  680:  sensor *tmp321 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  681:  jump *label251 equal *tmp321 false                           ...
  682:  ucontrol stop 0 0 0 0 0                                      ...
        label *label251                                              ...
  683:  ubind @mega                                                  BaseBuilder.mnd: ubind(unit);
  684:  jump *label250 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  685:  op add :lineUpUnits:y .coreY 2                               BaseBuilder.mnd: lineUpUnits(coreY + 2, @poly);
  686:  ubind @poly                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  687:  set :lineUpUnits:firstUnit @unit                             ...
        label *label257                                              BaseBuilder.mnd: do
  688:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  689:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  690:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  691:  sensor *tmp321 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  692:  jump *label258 equal *tmp321 false                           ...
  693:  ucontrol stop 0 0 0 0 0                                      ...
        label *label258                                              ...
  694:  ubind @poly                                                  BaseBuilder.mnd: ubind(unit);
  695:  jump *label257 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  696:  op sub :lineUpUnits:y .coreY 2                               BaseBuilder.mnd: lineUpUnits(coreY - 2, @mono);
  697:  ubind @mono                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  698:  set :lineUpUnits:firstUnit @unit                             ...
        label *label264                                              BaseBuilder.mnd: do
  699:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  700:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  701:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  702:  sensor *tmp321 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  703:  jump *label265 equal *tmp321 false                           ...
  704:  ucontrol stop 0 0 0 0 0                                      ...
        label *label265                                              ...
  705:  ubind @mono                                                  BaseBuilder.mnd: ubind(unit);
  706:  jump *label264 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  707:  op sub :lineUpUnits:y .coreY 6                               BaseBuilder.mnd: lineUpUnits(coreY - 6, @flare);
  708:  ubind @flare                                                 BaseBuilder.mnd: var firstUnit = ubind(unit);
  709:  set :lineUpUnits:firstUnit @unit                             ...
        label *label271                                              BaseBuilder.mnd: do
  710:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  711:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  712:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  713:  sensor *tmp321 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  714:  jump *label272 equal *tmp321 false                           ...
  715:  ucontrol stop 0 0 0 0 0                                      ...
        label *label272                                              ...
  716:  ubind @flare                                                 BaseBuilder.mnd: ubind(unit);
  717:  jump *label271 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  718:  jump *label173 always 0 0                                    BaseBuilder.mnd: while true do


Performance: parsed in 813 ms, compiled in 324 ms, optimized in 1,223 ms, run in 9 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp32 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
