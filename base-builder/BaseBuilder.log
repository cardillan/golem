   667 instructions before optimizations.
    45 instructions eliminated by Temp Variables Elimination (3 passes, 7 iterations).
    56 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    13 instructions eliminated by Jump Optimization (5 iterations).
    44 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    11 instructions modified by Expression Optimization (2 passes, 3 iterations).
     1 instructions eliminated by If Expression Optimization (4 iterations).
   121 instructions eliminated by Data Flow Optimization (32 passes, 100 iterations).
     3 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (37 iterations).
     1 loops unrolled by Loop Unrolling.
   332 instructions added by Function Inlining (37 iterations).
    55 function calls inlined by Function Inlining.
     1 instructions eliminated by Jump Straightening (5 iterations).
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
   717 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 479):
    Replicate loop condition at BaseBuilder.mnd:247:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:252:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:271:5            size    +1, benefit       25.0, efficiency     25.000
  * Unroll iteration loop at BaseBuilder.mnd:181:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Inline function 'error' defined at BaseBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:89:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:338:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 492):
    Replicate loop condition at BaseBuilder.mnd:247:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:252:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:271:5            size    +1, benefit       25.0, efficiency     25.000
  * Inline function 'error' defined at BaseBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity (-6 instructions)
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:89:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:338:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 498):
  * Replicate loop condition at BaseBuilder.mnd:247:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at BaseBuilder.mnd:252:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:271:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:338:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 497):
  * Replicate loop condition at BaseBuilder.mnd:252:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at BaseBuilder.mnd:271:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:338:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 496):
  * Replicate loop condition at BaseBuilder.mnd:271:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:338:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 495):
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700
  * Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 size   +26, benefit      400.0, efficiency     15.385 (+16 instructions)
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:338:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 479):
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 size   +20, benefit       14.0, efficiency      0.700 (+10 instructions)
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:332:5                size    +7, benefit        3.5, efficiency      0.500

Pass 1: speed optimization selection (cost limit 469):
  * Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655 (+34 instructions)
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:99:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 435):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 430):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +255, benefit       98.0, efficiency      0.384
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 425):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +247, benefit       94.5, efficiency      0.383
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 420):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +239, benefit       91.0, efficiency      0.381
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 415):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +231, benefit       87.5, efficiency      0.379
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 410):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +223, benefit       84.0, efficiency      0.377
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 405):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +215, benefit       80.5, efficiency      0.374
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 400):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +207, benefit       77.0, efficiency      0.372
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 395):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +199, benefit       73.5, efficiency      0.369
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 390):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +191, benefit       70.0, efficiency      0.366
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 385):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +183, benefit       66.5, efficiency      0.363
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 380):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +175, benefit       63.0, efficiency      0.360
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 375):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +167, benefit       59.5, efficiency      0.356
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 370):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +159, benefit       56.0, efficiency      0.352
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 365):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +151, benefit       52.5, efficiency      0.348
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 360):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +143, benefit       49.0, efficiency      0.343
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 355):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +135, benefit       45.5, efficiency      0.337
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 350):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +127, benefit       42.0, efficiency      0.331
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 345):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +119, benefit       38.5, efficiency      0.324
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 340):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +111, benefit       35.0, efficiency      0.315
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 335):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +103, benefit       31.5, efficiency      0.306
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 330):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +95, benefit       28.0, efficiency      0.295
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 325):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +87, benefit       24.5, efficiency      0.282
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:236:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 320):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +79, benefit       21.0, efficiency      0.266
    Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:281:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 315):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246
  * Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 size   +35, benefit        9.0, efficiency      0.257 (+30 instructions)
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:202:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:245:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:287:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 285):
  * Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246 (+41 instructions)
    Inline function call at BaseBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:229:9                size    +8, benefit        1.8, efficiency      0.219

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-53 instructions):
 
    38 setaddr :buildBlockFromCfgLocal*retaddr *label36 (h:*label36)
    39 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label36) (h:*label36)
    40 label *label36
-    * set *tmp152 :buildBlockFromCfgLocal*retval
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label37 (h:*label37)
    43 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label37) (h:*label37)
    44 label *label37
-    * set *tmp153 :buildBlockFromCfgLocal*retval
    45 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    46 setaddr :buildBlockFromCfgLocal*retaddr *label38 (h:*label38)
    47 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label38) (h:*label38)
    48 label *label38
-    * set *tmp154 :buildBlockFromCfgLocal*retval
    49 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    50 setaddr :buildBlockFromCfgLocal*retaddr *label39 (h:*label39)
    51 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label39) (h:*label39)
    52 label *label39
-    * set *tmp155 :buildBlockFromCfgLocal*retval
    53 write 400 processor5 ".powerTarget"
    54 set .sandContainer .core
    55 jump *label40 equal .scrap false
 
    64 setaddr :buildBlockFromCfgLocal*retaddr *label43 (h:*label43)
    65 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label43) (h:*label43)
    66 label *label43
-    * set *tmp158 :buildBlockFromCfgLocal*retval
    67 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
    68 setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
    69 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
    70 label *label44
    71 set *tmp159 :buildBlockFromCfgLocal*retval
-    * set *tmp156 *tmp159
    72 jump *label41 always
    73 label *label40
-    * set *tmp156 null
    74 label *label41
    75 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    76 setaddr :buildBlockFromCfgLocal*retaddr *label45 (h:*label45)
    77 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label45) (h:*label45)
    78 label *label45
-    * set *tmp160 :buildBlockFromCfgLocal*retval
    79 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
    80 setaddr :buildBlockFromCfgLocal*retaddr *label46 (h:*label46)
    81 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)
    82 label *label46
-    * set *tmp161 :buildBlockFromCfgLocal*retval
    83 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    84 write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
    85 write false processor5 ":meetTargetCfg*finished"
 
   114 setaddr :error*retaddr *label52 (h:*label52)
   115 call *label22 *invalid :error*retval (m:*label52) (h:*label52)
   116 label *label52
-    * set *tmp178 null
   117 jump *label51 always
   118 label *label50
-    * set *tmp178 null
   119 label *label51
   120 write @pneumatic-drill processor2 ".nextBlock"
   121 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
 
   139 setaddr :buildBlockFromCfgLocal*retaddr *label56 (h:*label56)
   140 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label56) (h:*label56)
   141 label *label56
-    * set *tmp184 :buildBlockFromCfgLocal*retval
   142 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   143 setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
   144 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
 
   150 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
   151 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
   152 label *label58
-    * set *tmp186 :buildBlockFromCfgLocal*retval
   153 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   154 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
   155 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
   156 label *label59
-    * set *tmp187 :buildBlockFromCfgLocal*retval
   157 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   158 setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
   159 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
   160 label *label60
   161 set *tmp188 :buildBlockFromCfgLocal*retval
-    * set *tmp183 *tmp188
   162 jump *label55 always
   163 label *label54
-    * set *tmp183 null
   164 label *label55
   165 write .sandContainer processor7 ".sandContainer"
   166 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   167 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
   168 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
   169 label *label61
-    * set *tmp189 :buildBlockFromCfgLocal*retval
   170 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   171 setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
   172 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)
   173 label *label62
-    * set *tmp190 :buildBlockFromCfgLocal*retval
   174 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   175 setaddr :buildBlockFromCfgLocal*retaddr *label63 (h:*label63)
   176 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label63) (h:*label63)
   177 label *label63
-    * set *tmp191 :buildBlockFromCfgLocal*retval
   178 write 80 processor5 ".graphiteSurplus"
   179 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   180 set :buildBlockFromCfgLocal.1:config processor10
 
   187 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   188 jump *label65 equal *tmp195 false
   189 read *tmp196 processor5 ":buildBlockFromCfg*retval"
-    * set *tmp192 *tmp196
   190 jump *label64 always
-    * set *tmp192 null
   191 label *label64
   192 write processor1 AÕFFJS-micro-processor9 ".timer"
   193 write processor2 AÕFFJS-micro-processor9 ".display"
 
   244 setaddr :buildBlockFromCfgLocal*retaddr *label79 (h:*label79)
   245 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label79) (h:*label79)
   246 label *label79
-    * set *tmp200 :buildBlockFromCfgLocal*retval
   247 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   248 setaddr :buildBlockFromCfgLocal*retaddr *label80 (h:*label80)
   249 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label80) (h:*label80)
   250 label *label80
-    * set *tmp201 :buildBlockFromCfgLocal*retval
   251 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   252 setaddr :buildBlockFromCfgLocal*retaddr *label81 (h:*label81)
   253 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label81) (h:*label81)
   254 label *label81
-    * set *tmp202 :buildBlockFromCfgLocal*retval
   255 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   256 setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
   257 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)
   258 label *label82
-    * set *tmp203 :buildBlockFromCfgLocal*retval
   259 set :setFlareTarget:target 1
   260 write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
   261 label *label83
 
   281 op lessThan *tmp206 *tmp205 300
   282 jump *label90 equal *tmp206 false
   283 jump *label88 always
-    * set *tmp207 null
   284 jump *label91 always
   285 label *label90
-    * set *tmp207 null
   286 label *label91
   287 label *label87
   288 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   294 setaddr :buildBlockFromCfgLocal*retaddr *label92 (h:*label92)
   295 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label92) (h:*label92)
   296 label *label92
-    * set *tmp209 :buildBlockFromCfgLocal*retval
   297 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   298 setaddr :buildBlockFromCfgLocal*retaddr *label93 (h:*label93)
   299 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label93) (h:*label93)
   300 label *label93
-    * set *tmp210 :buildBlockFromCfgLocal*retval
   301 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   302 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   303 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
   304 label *label94
-    * set *tmp211 :buildBlockFromCfgLocal*retval
   305 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   306 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   307 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
   308 label *label95
-    * set *tmp212 :buildBlockFromCfgLocal*retval
   309 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   310 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   311 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
   312 label *label96
-    * set *tmp213 :buildBlockFromCfgLocal*retval
   313 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   314 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   315 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   316 label *label97
-    * set *tmp214 :buildBlockFromCfgLocal*retval
   317 write 200 processor5 ".graphiteSurplus"
   318 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   319 setaddr :buildBlockFromCfgLocal*retaddr *label98 (h:*label98)
   320 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label98) (h:*label98)
   321 label *label98
-    * set *tmp215 :buildBlockFromCfgLocal*retval
   322 jump *label99 equal .scrap false
   323 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   324 setaddr :buildBlockFromCfgLocal*retaddr *label101 (h:*label101)
   325 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label101) (h:*label101)
   326 label *label101
-    * set *tmp217 :buildBlockFromCfgLocal*retval
   327 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   328 setaddr :buildBlockFromCfgLocal*retaddr *label102 (h:*label102)
   329 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label102) (h:*label102)
   330 label *label102
-    * set *tmp218 :buildBlockFromCfgLocal*retval
   331 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   332 write false processor6 ":setScrapContainer*finished"
   333 write 1 processor6 "@counter"
 
   335 wait 1e-15
   336 read *tmp220 processor6 ":setScrapContainer*finished"
   337 jump *label103 equal *tmp220 false
-    * set *tmp216 null
   338 jump *label100 always
   339 label *label99
-    * set *tmp216 null
   340 label *label100
   341 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
   342 setaddr :buildBlockFromCfgLocal*retaddr *label104 (h:*label104)
   343 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label104) (h:*label104)
   344 label *label104
-    * set *tmp221 :buildBlockFromCfgLocal*retval
   345 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   346 setaddr :buildBlockFromCfgLocal*retaddr *label105 (h:*label105)
   347 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label105) (h:*label105)
   348 label *label105
-    * set *tmp222 :buildBlockFromCfgLocal*retval
   349 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   350 setaddr :buildBlockFromCfgLocal*retaddr *label106 (h:*label106)
   351 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label106) (h:*label106)
   352 label *label106
-    * set *tmp223 :buildBlockFromCfgLocal*retval
   353 write 1000 processor5 ".siliconSurplus"
   354 write 20 processor5 ".siliconMonoSurplus"
   355 write 100 processor5 ".metaglassSurplus"
 
   448 setaddr :error*retaddr *label127 (h:*label127)
   449 call *label22 *invalid :error*retval (m:*label127) (h:*label127)
   450 label *label127
-    * set *tmp251 null
   451 jump *label126 always
   452 label *label125
-    * set *tmp251 null
   453 label *label126
   454 write @laser-drill processor5 ":buildBlockAt:block"
   455 read *tmp53 processor3 ".drillX"
 
   475 setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
   476 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
   477 label *label129
-    * set *tmp260 :buildRemoteBlockLocal*retval
   478 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   479 read *tmp59 processor3 ".water2X"
   480 set :buildRemoteBlockLocal:x *tmp59
 
   483 setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
   484 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label130) (h:*label130)
   485 label *label130
-    * set *tmp261 :buildRemoteBlockLocal*retval
   486 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   487 read *tmp61 processor3 ".generatorX"
   488 set :buildRemoteBlockLocal:x *tmp61
 
   501 setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
   502 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
   503 label *label132
-    * set *tmp263 :buildRemoteBlockLocal*retval
   504 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   505 read *tmp65 processor3 ".node2X"
   506 set :buildRemoteBlockLocal:x *tmp65
 
   509 setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
   510 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label133) (h:*label133)
   511 label *label133
-    * set *tmp264 :buildRemoteBlockLocal*retval
   512 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   513 read *tmp67 processor3 ".panelX"
   514 set :buildRemoteBlockLocal:x *tmp67
 
   517 setaddr :buildRemoteBlockLocal*retaddr *label134 (h:*label134)
   518 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label134) (h:*label134)
   519 label *label134
-    * set *tmp265 :buildRemoteBlockLocal*retval
   520 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   521 read *tmp69 processor3 ".batteryX"
   522 set :buildRemoteBlockLocal:x *tmp69
 
   540 op equal *tmp268 .thoriumContainer null
   541 jump *label137 equal *tmp268 false
   542 set .thoriumContainer .thoriumDrill
-    * set *tmp269 .thoriumContainer
   543 jump *label138 always
   544 label *label137
-    * set *tmp269 null
   545 label *label138
   546 write .thoriumDrill processor2 ".thoriumDrill"
   547 write .thoriumContainer processor2 ".thoriumContainer"
 
   583 setaddr :buildBlockFromCfgLocal*retaddr *label145 (h:*label145)
   584 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label145) (h:*label145)
   585 label *label145
-    * set *tmp277 :buildBlockFromCfgLocal*retval
   586 write 10 processor5 ".metaglassSurplus"
   587 set :setPolyTarget.1:target 0
   588 write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
 
   763 sensor *tmp318 @unit @mining
   764 jump *label183 equal *tmp318 false
   765 ucontrol stop
-    * set *tmp319 null
   766 jump *label184 always
   767 label *label183
-    * set *tmp319 null
   768 label *label184
   769 ubind :lineUpUnits:unit
   770 label *label181

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-3 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
    69 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
    70 label *label44
-    * set *tmp159 :buildBlockFromCfgLocal*retval
    71 jump *label41 always
    72 label *label40
    73 label *label41
 
   157 setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
   158 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
   159 label *label60
-    * set *tmp188 :buildBlockFromCfgLocal*retval
   160 jump *label55 always
   161 label *label54
   162 label *label55
 
   184 wait 1e-15
   185 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   186 jump *label65 equal *tmp195 false
-    * read *tmp196 processor5 ":buildBlockFromCfg*retval"
   187 jump *label64 always
   188 label *label64
   189 write processor1 AÕFFJS-micro-processor9 ".timer"

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-44 instructions):
 
    20 set .thoriumGenerator null
    21 label *label33
    22 ubind @poly
-    * set *tmp143 @unit
-    * set .builder *tmp143
-    * ulocate building core false @copper .coreX .coreY *tmp145 *tmp144
-    * set .core *tmp144
+   23 set .builder @unit
+   24 ulocate building core false @copper .coreX .coreY *tmp145 .core
    25 label *label34
    26 op equal *tmp146 .core null
    27 jump *label33 notEqual *tmp146 false
    28 label *label35
    29 ulocate ore core true @sand *tmp148 *tmp149 *tmp147 *tmp150
-    * op equal *tmp151 *tmp147 false
-    * set .scrap *tmp151
+   30 op equal .scrap *tmp147 false
    31 write .scrap processor2 ".scrap"
    32 write .scrap processor5 ".scrap"
    33 write .scrap processor7 ".scrap"
 
    54 setaddr :buildBlockFromCfgLocal*retaddr *label42 (h:*label42)
    55 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label42) (h:*label42)
    56 label *label42
-    * set *tmp157 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp157
+   57 set .sandContainer :buildBlockFromCfgLocal*retval
    58 write .sandContainer processor5 ".sandContainer"
    59 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    60 setaddr :buildBlockFromCfgLocal*retaddr *label43 (h:*label43)
 
    97 wait 1e-15
    98 read *tmp175 processor3 ":findDrillLocation*finished"
    99 jump *label49 equal *tmp175 false
-    * read *tmp172 processor3 ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp172
-    * read *tmp173 processor3 ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp173
-    * read *tmp176 processor3 ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp176
+  100 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
+  101 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
+  102 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   103 op equal *tmp177 :buildFirstTitaniumDrill:result false
   104 jump *label50 equal *tmp177 false
   105 set :error:error "Cannot locate spot for titanium drill"
 
   118 wait 1e-15
   119 read *tmp181 processor5 ":buildFirstTitaniumDrillAt*finished"
   120 jump *label53 equal *tmp181 false
-    * read *tmp182 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp162 *tmp182
+  121 read *tmp162 processor5 ":buildFirstTitaniumDrillAt*retval"
   122 jump *label47 always
   123 set *tmp162 null
   124 label *label47
 
   134 setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
   135 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
   136 label *label57
-    * set *tmp185 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp185
+  137 set .sandContainer :buildBlockFromCfgLocal*retval
   138 write .sandContainer processor5 ".sandContainer"
   139 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   140 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
 
   381 label *label117
   382 write @ore-titanium processor2 ".nextBlock"
   383 ubind @flare
-    * read *tmp51 processor3 ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp51
+  384 read :blocksBuildTitaniumDrills:current processor3 ".locations"
   385 write .coreX processor3 ":findDrillLocation:x"
   386 write .coreY processor3 ":findDrillLocation:y"
   387 write @unit processor3 ":findDrillLocation:unit"
 
   427 wait 1e-15
   428 read *tmp248 processor3 ":layoutThoriumDrill*finished"
   429 jump *label124 equal *tmp248 false
-    * read *tmp249 processor3 ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp249
+  430 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   431 op equal *tmp250 :buildThoriumDrill:result false
   432 jump *label125 equal *tmp250 false
   433 set :error:error "Cannot locate spot for thorium drill"
 
   451 wait 1e-15
   452 read *tmp258 processor5 ":buildBlockAt*finished"
   453 jump *label128 equal *tmp258 false
-    * read *tmp259 processor5 ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp259
+  454 read .thoriumDrill processor5 ":buildBlockAt*retval"
   455 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp55 processor3 ".water1X"
-    * set :buildRemoteBlockLocal:x *tmp55
-    * read *tmp56 processor3 ".water1Y"
-    * set :buildRemoteBlockLocal:y *tmp56
+  456 read :buildRemoteBlockLocal:x processor3 ".water1X"
+  457 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   458 setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
   459 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
   460 label *label129
   461 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp59 processor3 ".water2X"
-    * set :buildRemoteBlockLocal:x *tmp59
-    * read *tmp60 processor3 ".water2Y"
-    * set :buildRemoteBlockLocal:y *tmp60
+  462 read :buildRemoteBlockLocal:x processor3 ".water2X"
+  463 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   464 setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
   465 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label130) (h:*label130)
   466 label *label130
   467 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
-    * read *tmp61 processor3 ".generatorX"
-    * set :buildRemoteBlockLocal:x *tmp61
-    * read *tmp62 processor3 ".generatorY"
-    * set :buildRemoteBlockLocal:y *tmp62
+  468 read :buildRemoteBlockLocal:x processor3 ".generatorX"
+  469 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   470 setaddr :buildRemoteBlockLocal*retaddr *label131 (h:*label131)
   471 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label131) (h:*label131)
   472 label *label131
-    * set *tmp262 :buildRemoteBlockLocal*retval
-    * set .thoriumGenerator *tmp262
+  473 set .thoriumGenerator :buildRemoteBlockLocal*retval
   474 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp63 processor3 ".node1X"
-    * set :buildRemoteBlockLocal:x *tmp63
-    * read *tmp64 processor3 ".node1Y"
-    * set :buildRemoteBlockLocal:y *tmp64
+  475 read :buildRemoteBlockLocal:x processor3 ".node1X"
+  476 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   477 setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
   478 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
   479 label *label132
   480 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp65 processor3 ".node2X"
-    * set :buildRemoteBlockLocal:x *tmp65
-    * read *tmp66 processor3 ".node2Y"
-    * set :buildRemoteBlockLocal:y *tmp66
+  481 read :buildRemoteBlockLocal:x processor3 ".node2X"
+  482 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   483 setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
   484 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label133) (h:*label133)
   485 label *label133
   486 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
-    * read *tmp67 processor3 ".panelX"
-    * set :buildRemoteBlockLocal:x *tmp67
-    * read *tmp68 processor3 ".panelY"
-    * set :buildRemoteBlockLocal:y *tmp68
+  487 read :buildRemoteBlockLocal:x processor3 ".panelX"
+  488 read :buildRemoteBlockLocal:y processor3 ".panelY"
   489 setaddr :buildRemoteBlockLocal*retaddr *label134 (h:*label134)
   490 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label134) (h:*label134)
   491 label *label134
   492 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
-    * read *tmp69 processor3 ".batteryX"
-    * set :buildRemoteBlockLocal:x *tmp69
-    * read *tmp70 processor3 ".batteryY"
-    * set :buildRemoteBlockLocal:y *tmp70
+  493 read :buildRemoteBlockLocal:x processor3 ".batteryX"
+  494 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   495 setaddr :buildRemoteBlockLocal*retaddr *label135 (h:*label135)
   496 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label135) (h:*label135)
   497 label *label135
-    * set *tmp266 :buildRemoteBlockLocal*retval
-    * set .thoriumBattery *tmp266
+  498 set .thoriumBattery :buildRemoteBlockLocal*retval
   499 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
-    * read *tmp57 processor3 ".containerX"
-    * set :buildRemoteBlockLocal:x *tmp57
-    * read *tmp58 processor3 ".containerY"
-    * set :buildRemoteBlockLocal:y *tmp58
+  500 read :buildRemoteBlockLocal:x processor3 ".containerX"
+  501 read :buildRemoteBlockLocal:y processor3 ".containerY"
   502 setaddr :buildRemoteBlockLocal*retaddr *label136 (h:*label136)
   503 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   504 label *label136
-    * set *tmp267 :buildRemoteBlockLocal*retval
-    * set .thoriumContainer *tmp267
+  505 set .thoriumContainer :buildRemoteBlockLocal*retval
   506 op equal *tmp268 .thoriumContainer null
   507 jump *label137 equal *tmp268 false
   508 set .thoriumContainer .thoriumDrill
 
   536 label *label141
   537 jump *label140 always
   538 label *label142
-    * op add *tmp274 4 .scrap
-    * set :setMonoTarget.2:target *tmp274
+  539 op add :setMonoTarget.2:target 4 .scrap
   540 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
   541 label *label144
   542 op mul *tmp275 700 .scrap
 
   562 call *label25 *invalid :buildUnits*retval (m:*label149) (h:*label149)
   563 label *label149
   564 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op sub *tmp278 *tmp82 1
-    * set :tmp *tmp278
+  565 op sub :tmp *tmp82 1
   566 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
   567 write :tmp AÕFFJS-micro-processor9 ".polys"
   568 write :tmp processor2 ".polys"
-    * sensor *tmp279 AÁNBJc-multiplicative-reconstructor25 @x
-    * set :x *tmp279
-    * sensor *tmp280 AÁNBJc-multiplicative-reconstructor25 @y
-    * set :y *tmp280
+  569 sensor :x AÁNBJc-multiplicative-reconstructor25 @x
+  570 sensor :y AÁNBJc-multiplicative-reconstructor25 @y
   571 label *label150
   572 ucontrol move :x :y
   573 ucontrol payEnter
 
   602 label *label157
   603 label *label158
   604 jump *label160 equal true false
-    * op add *tmp289 .coreY 6
-    * set :lineUpUnits:y *tmp289
+  605 op add :lineUpUnits:y .coreY 6
   606 set :lineUpUnits:unit @mega
   607 setaddr :lineUpUnits*retaddr *label161 (h:*label161)
   608 call *label27 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
   609 label *label161
-    * op add *tmp290 .coreY 2
-    * set :lineUpUnits:y *tmp290
+  610 op add :lineUpUnits:y .coreY 2
   611 set :lineUpUnits:unit @poly
   612 setaddr :lineUpUnits*retaddr *label162 (h:*label162)
   613 call *label27 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
   614 label *label162
-    * op sub *tmp291 .coreY 2
-    * set :lineUpUnits:y *tmp291
+  615 op sub :lineUpUnits:y .coreY 2
   616 set :lineUpUnits:unit @mono
   617 setaddr :lineUpUnits*retaddr *label163 (h:*label163)
   618 call *label27 *invalid :lineUpUnits*retval (m:*label163) (h:*label163)
   619 label *label163
-    * op sub *tmp292 .coreY 6
-    * set :lineUpUnits:y *tmp292
+  620 op sub :lineUpUnits:y .coreY 6
   621 set :lineUpUnits:unit @flare
   622 setaddr :lineUpUnits*retaddr *label164 (h:*label164)
   623 call *label27 *invalid :lineUpUnits*retval (m:*label164) (h:*label164)
 
   643 wait 1e-15
   644 read *tmp296 processor5 ":buildRemoteBlock*finished"
   645 jump *label167 equal *tmp296 false
-    * read *tmp297 processor5 ":buildRemoteBlock*retval"
-    * set :buildRemoteBlockLocal*retval *tmp297
+  646 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   647 label *label166
   648 return :buildRemoteBlockLocal*retaddr
   649 end
 
   656 wait 1e-15
   657 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   658 jump *label169 equal *tmp300 false
-    * read *tmp301 processor5 ":buildBlockFromCfg*retval"
-    * set :buildBlockFromCfgLocal*retval *tmp301
+  659 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   660 jump *label168 always
   661 set :buildBlockFromCfgLocal*retval null
   662 label *label168
 
   689 label *label26
   690 label *label173
   691 ubind :flagUnits:unit
-    * set *tmp313 @unit
-    * set :flagUnits:firstUnit *tmp313
+  692 set :flagUnits:firstUnit @unit
   693 label *label174
   694 op equal *tmp314 :flagUnits:firstUnit null
   695 jump *label173 notEqual *tmp314 false
   696 label *label175
-    * op add *tmp315 .coreX 8
-    * set :flagUnits:x *tmp315
+  697 op add :flagUnits:x .coreX 8
   698 label *label176
   699 ucontrol flag :flagUnits:x
   700 op add :flagUnits:x :flagUnits:x 4
 
   710 ubind :lineUpUnits:unit
   711 set :lineUpUnits:firstUnit @unit
   712 label *label180
-    * sensor *tmp317 @unit @flag
-    * set :lineUpUnits:x *tmp317
+  713 sensor :lineUpUnits:x @unit @flag
   714 ucontrol itemDrop @air 1000
   715 ucontrol move :lineUpUnits:x :lineUpUnits:y
   716 sensor *tmp318 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   601 call *label26 *invalid :flagUnits*retval (m:*label157) (h:*label157)
   602 label *label157
   603 label *label158
-    * jump *label160 equal true false
   604 op add :lineUpUnits:y .coreY 6
   605 set :lineUpUnits:unit @mega
   606 setaddr :lineUpUnits*retaddr *label161 (h:*label161)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-13 instructions):
 
    23 set .builder @unit
    24 ulocate building core false @copper .coreX .coreY *tmp145 .core
    25 label *label34
-    * op equal *tmp146 .core null
-    * jump *label33 notEqual *tmp146 false
+   26 jump *label33 equal .core null
    27 label *label35
    28 ulocate ore core true @sand *tmp148 *tmp149 *tmp147 *tmp150
    29 op equal .scrap *tmp147 false
 
    99 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
   100 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   101 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
-    * op equal *tmp177 :buildFirstTitaniumDrill:result false
-    * jump *label50 equal *tmp177 false
+  102 jump *label50 notEqual :buildFirstTitaniumDrill:result false
   103 set :error:error "Cannot locate spot for titanium drill"
   104 setaddr :error*retaddr *label52 (h:*label52)
   105 call *label22 *invalid :error*retval (m:*label52) (h:*label52)
 
   264 read *tmp204 processor5 ":supplyBase*finished"
   265 jump *label89 equal *tmp204 false
   266 sensor *tmp205 AJTJK-battery1 @totalPower
-    * op lessThan *tmp206 *tmp205 300
-    * jump *label90 equal *tmp206 false
+  267 jump *label90 greaterThanEq *tmp205 300
   268 jump *label88 always
   269 jump *label91 always
   270 label *label90
   271 label *label91
   272 label *label87
   273 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op lessThan *tmp208 *tmp81 3
-    * jump *label86 notEqual *tmp208 false
+  274 jump *label86 lessThan *tmp81 3
   275 label *label88
   276 write 65 processor5 ".siliconSurplus"
   277 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
 
   348 label *label109
   349 label *label110
   350 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp224 *tmp82 2
-    * jump *label112 equal *tmp224 false
+  351 jump *label112 greaterThanEq *tmp82 2
   352 write false processor5 ":supplyBase*finished"
   353 write 8 processor5 "@counter"
   354 label *label113
 
   363 label *label114
   364 label *label115
   365 read *tmp80 AÕFFJS-micro-processor9 ".flares"
-    * op lessThan *tmp226 *tmp80 2
-    * jump *label117 equal *tmp226 false
+  366 jump *label117 greaterThanEq *tmp80 2
   367 write false processor5 ":supplyBase*finished"
   368 write 8 processor5 "@counter"
   369 label *label118
 
   422 read *tmp248 processor3 ":layoutThoriumDrill*finished"
   423 jump *label124 equal *tmp248 false
   424 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
-    * op equal *tmp250 :buildThoriumDrill:result false
-    * jump *label125 equal *tmp250 false
+  425 jump *label125 notEqual :buildThoriumDrill:result false
   426 set :error:error "Cannot locate spot for thorium drill"
   427 setaddr :error*retaddr *label127 (h:*label127)
   428 call *label22 *invalid :error*retval (m:*label127) (h:*label127)
 
   496 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   497 label *label136
   498 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * op equal *tmp268 .thoriumContainer null
-    * jump *label137 equal *tmp268 false
+  499 jump *label137 notEqual .thoriumContainer null
   500 set .thoriumContainer .thoriumDrill
   501 jump *label138 always
   502 label *label137
 
   517 write null processor2 ".nextBlock"
   518 label *label140
   519 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp272 *tmp82 3
-    * jump *label142 equal *tmp272 false
+  520 jump *label142 greaterThanEq *tmp82 3
   521 write false processor5 ":supplyBase*finished"
   522 write 8 processor5 "@counter"
   523 label *label143
 
   564 ucontrol payEnter
   565 label *label151
   566 read *tmp83 AÕFFJS-micro-processor9 ".megas"
-    * op equal *tmp281 *tmp83 false
-    * jump *label150 notEqual *tmp281 false
+  567 jump *label150 equal *tmp83 false
   568 label *label152
   569 write true AÕFFJS-micro-processor9 ".finished"
   570 control enabled processor1 false
 
   680 ubind :flagUnits:unit
   681 set :flagUnits:firstUnit @unit
   682 label *label174
-    * op equal *tmp314 :flagUnits:firstUnit null
-    * jump *label173 notEqual *tmp314 false
+  683 jump *label173 equal :flagUnits:firstUnit null
   684 label *label175
   685 op add :flagUnits:x .coreX 8
   686 label *label176
 
   688 op add :flagUnits:x :flagUnits:x 4
   689 ubind :flagUnits:unit
   690 label *label177
-    * op notEqual *tmp316 @unit :flagUnits:firstUnit
-    * jump *label176 notEqual *tmp316 false
+  691 jump *label176 notEqual @unit :flagUnits:firstUnit
   692 label *label178
   693 label *label172
   694 return :flagUnits*retaddr
 
   708 label *label184
   709 ubind :lineUpUnits:unit
   710 label *label181
-    * op notEqual *tmp320 @unit :lineUpUnits:firstUnit
-    * jump *label180 notEqual *tmp320 false
+  711 jump *label180 notEqual @unit :lineUpUnits:firstUnit
   712 label *label182
   713 label *label179
   714 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
    63 setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
    64 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
    65 label *label44
-    * jump *label41 always
    66 label *label40
    67 label *label41
    68 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
 
   103 setaddr :error*retaddr *label52 (h:*label52)
   104 call *label22 *invalid :error*retval (m:*label52) (h:*label52)
   105 label *label52
-    * jump *label51 always
   106 label *label50
   107 label *label51
   108 write @pneumatic-drill processor2 ".nextBlock"
 
   144 setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
   145 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
   146 label *label60
-    * jump *label55 always
   147 label *label54
   148 label *label55
   149 write .sandContainer processor7 ".sandContainer"
 
   170 wait 1e-15
   171 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   172 jump *label65 equal *tmp195 false
-    * jump *label64 always
   173 label *label64
   174 write processor1 AÕFFJS-micro-processor9 ".timer"
   175 write processor2 AÕFFJS-micro-processor9 ".display"
 
   262 sensor *tmp205 AJTJK-battery1 @totalPower
   263 jump *label90 greaterThanEq *tmp205 300
   264 jump *label88 always
-    * jump *label91 always
   265 label *label90
   266 label *label91
   267 label *label87
 
   314 wait 1e-15
   315 read *tmp220 processor6 ":setScrapContainer*finished"
   316 jump *label103 equal *tmp220 false
-    * jump *label100 always
   317 label *label99
   318 label *label100
   319 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
 
   421 setaddr :error*retaddr *label127 (h:*label127)
   422 call *label22 *invalid :error*retval (m:*label127) (h:*label127)
   423 label *label127
-    * jump *label126 always
   424 label *label125
   425 label *label126
   426 write @laser-drill processor5 ":buildBlockAt:block"
 
   491 set .thoriumContainer :buildRemoteBlockLocal*retval
   492 jump *label137 notEqual .thoriumContainer null
   493 set .thoriumContainer .thoriumDrill
-    * jump *label138 always
   494 label *label137
   495 label *label138
   496 write .thoriumDrill processor2 ".thoriumDrill"
 
   695 sensor *tmp318 @unit @mining
   696 jump *label183 equal *tmp318 false
   697 ucontrol stop
-    * jump *label184 always
   698 label *label183
   699 label *label184
   700 ubind :lineUpUnits:unit

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
   220 multijump *tmp197 0 0 (m:marker0)
   221 multilabel *label78 (m:marker0)
   222 label *label68
-    * read *tmp199 @this "A©RPJg-unloader29"
+  223 set *tmp199 A©RPJg-unloader29
   224 write *tmp199 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   225 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   226 setaddr :buildBlockFromCfgLocal*retaddr *label79 (h:*label79)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    13 read *tmp142 processor5 "*signature"
    14 jump *label32 notEqual *tmp142 "77658b7b93afc77c:v1"
    15 set .ERROR ""
-    * set .titaniumDrill null
-    * set .thoriumDrill null
-    * set .thoriumBattery null
-    * set .thoriumContainer null
-    * set .thoriumGenerator null
    16 label *label33
    17 ubind @poly
    18 set .builder @unit
 
    49 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label42) (h:*label42)
    50 label *label42
    51 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+   52 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    53 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    54 setaddr :buildBlockFromCfgLocal*retaddr *label43 (h:*label43)
    55 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label43) (h:*label43)
 
    69 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)
    70 label *label46
    71 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
-    * write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
+   72 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    73 write false processor5 ":meetTargetCfg*finished"
    74 write 7 processor5 "@counter"
    75 label *label48
 
   111 jump *label53 equal *tmp181 false
   112 read *tmp162 processor5 ":buildFirstTitaniumDrillAt*retval"
   113 jump *label47 always
-    * set *tmp162 null
   114 label *label47
   115 set .titaniumDrill *tmp162
-    * write .titaniumDrill processor2 ".titaniumDrill"
-    * write .titaniumDrill processor5 ".titaniumDrill"
+  116 write *tmp162 processor2 ".titaniumDrill"
+  117 write *tmp162 processor5 ".titaniumDrill"
   118 jump *label54 equal .scrap false
   119 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   120 setaddr :buildBlockFromCfgLocal*retaddr *label56 (h:*label56)
 
   125 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
   126 label *label57
   127 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+  128 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   129 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   130 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
   131 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
 
   156 write 80 processor5 ".graphiteSurplus"
   157 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   158 set :buildBlockFromCfgLocal.1:config processor10
-    * write :buildBlockFromCfgLocal.1:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write :buildBlockFromCfgLocal.1:config processor5 ":buildBlockFromCfg:config"
+  159 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
+  160 write processor10 processor5 ":buildBlockFromCfg:config"
   161 write false processor5 ":buildBlockFromCfg*finished"
   162 write 2 processor5 "@counter"
   163 label *label65
 
   233 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)
   234 label *label82
   235 set :setFlareTarget:target 1
-    * write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
+  236 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   237 label *label83
   238 set :setMonoTarget:target 5
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  239 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   240 label *label84
   241 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   242 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
 
   326 write 20 processor5 ".siliconMonoSurplus"
   327 write 100 processor5 ".metaglassSurplus"
   328 set :setMonoTarget.1:target 4
-    * write :setMonoTarget.1:target AÕFFJS-micro-processor9 ".monoTarget"
+  329 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   330 label *label107
   331 set :setPolyTarget:target 3
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  332 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   333 label *label108
   334 setaddr :buildUnits*retaddr *label109 (h:*label109)
   335 call *label25 *invalid :buildUnits*retval (m:*label109) (h:*label109)
 
   347 jump *label110 always
   348 label *label112
   349 set :setFlareTarget.1:target 2
-    * write :setFlareTarget.1:target AÕFFJS-micro-processor9 ".flareTarget"
+  350 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   351 label *label114
   352 label *label115
   353 read *tmp80 AÕFFJS-micro-processor9 ".flares"
 
   457 setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
   458 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
   459 label *label132
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   460 read :buildRemoteBlockLocal:x processor3 ".node2X"
   461 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   462 setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
 
   482 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   483 label *label136
   484 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label137 notEqual .thoriumContainer null
+  485 jump *label137 notEqual :buildRemoteBlockLocal*retval null
   486 set .thoriumContainer .thoriumDrill
   487 label *label137
   488 label *label138
 
   526 label *label145
   527 write 10 processor5 ".metaglassSurplus"
   528 set :setPolyTarget.1:target 0
-    * write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
+  529 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   530 label *label146
   531 set :setFlareTarget.2:target 0
-    * write :setFlareTarget.2:target AÕFFJS-micro-processor9 ".flareTarget"
+  532 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   533 label *label147
   534 set :setMegaTarget:target 1
-    * write :setMegaTarget:target AÕFFJS-micro-processor9 ".megaTarget"
+  535 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   536 label *label148
   537 setaddr :buildUnits*retaddr *label149 (h:*label149)
   538 call *label25 *invalid :buildUnits*retval (m:*label149) (h:*label149)
 
   632 jump *label169 equal *tmp300 false
   633 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   634 jump *label168 always
-    * set :buildBlockFromCfgLocal*retval null
   635 label *label168
   636 return :buildBlockFromCfgLocal*retaddr
   637 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label46 (h:*label46)
    69 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)
    70 label *label46
-    * set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    71 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    72 write false processor5 ":meetTargetCfg*finished"
    73 write 7 processor5 "@counter"
 
   111 read *tmp162 processor5 ":buildFirstTitaniumDrillAt*retval"
   112 jump *label47 always
   113 label *label47
-    * set .titaniumDrill *tmp162
   114 write *tmp162 processor2 ".titaniumDrill"
   115 write *tmp162 processor5 ".titaniumDrill"
   116 jump *label54 equal .scrap false
 
   152 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label63) (h:*label63)
   153 label *label63
   154 write 80 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
-    * set :buildBlockFromCfgLocal.1:config processor10
   155 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   156 write processor10 processor5 ":buildBlockFromCfg:config"
   157 write false processor5 ":buildBlockFromCfg*finished"
 
   228 setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
   229 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)
   230 label *label82
-    * set :setFlareTarget:target 1
   231 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   232 label *label83
-    * set :setMonoTarget:target 5
   233 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   234 label *label84
   235 write 85 AÕFFJS-micro-processor9 ".pressTarget"
 
   319 write 1000 processor5 ".siliconSurplus"
   320 write 20 processor5 ".siliconMonoSurplus"
   321 write 100 processor5 ".metaglassSurplus"
-    * set :setMonoTarget.1:target 4
   322 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   323 label *label107
-    * set :setPolyTarget:target 3
   324 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   325 label *label108
   326 setaddr :buildUnits*retaddr *label109 (h:*label109)
 
   338 label *label111
   339 jump *label110 always
   340 label *label112
-    * set :setFlareTarget.1:target 2
   341 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   342 label *label114
   343 label *label115
 
   429 setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
   430 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
   431 label *label129
-    * set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   432 read :buildRemoteBlockLocal:x processor3 ".water2X"
   433 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   434 setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
 
   515 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label145) (h:*label145)
   516 label *label145
   517 write 10 processor5 ".metaglassSurplus"
-    * set :setPolyTarget.1:target 0
   518 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   519 label *label146
-    * set :setFlareTarget.2:target 0
   520 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   521 label *label147
-    * set :setMegaTarget:target 1
   522 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   523 label *label148
   524 setaddr :buildUnits*retaddr *label149 (h:*label149)

Modifications by Iterated phase, Temp Variables Elimination, pass 1, iteration 1 (-1 instructions):
 
   210 multijump *tmp197 0 0 (m:marker0)
   211 multilabel *label78 (m:marker0)
   212 label *label68
-    * set *tmp199 A©RPJg-unloader29
-    * write *tmp199 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
+  213 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   214 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   215 setaddr :buildBlockFromCfgLocal*retaddr *label79 (h:*label79)
   216 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label79) (h:*label79)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   471 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   472 label *label136
   473 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label137 notEqual :buildRemoteBlockLocal*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label137
-    * label *label138
+  474 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
   475 write .thoriumDrill processor2 ".thoriumDrill"
   476 write .thoriumContainer processor2 ".thoriumContainer"
   477 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Unroll iteration loop at BaseBuilder.mnd:181:5 (-2 instructions):
 
   165 write processor2 AÕFFJS-micro-processor9 ".display"
   166 write .core AÕFFJS-micro-processor9 ".core"
   167 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp197 *label69
-    * jump *label66 always
-    * multilabel *label69 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp197 *label70
-    * jump *label66 always
-    * multilabel *label70 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp197 *label71
-    * jump *label66 always
-    * multilabel *label71 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp197 *label72
-    * jump *label66 always
-    * multilabel *label72 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp197 *label73
-    * jump *label66 always
-    * multilabel *label73 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp197 *label74
-    * jump *label66 always
-    * multilabel *label74 (m:marker0)
-    * set :block "A©JNJP-unloader6"
-    * setaddr *tmp197 *label75
-    * jump *label66 always
-    * multilabel *label75 (m:marker0)
-    * set :block "A{HNJQ-inverted-sorter7"
-    * setaddr *tmp197 *label76
-    * jump *label66 always
-    * multilabel *label76 (m:marker0)
-    * set :block "AJPJR-underflow-gate8"
-    * setaddr *tmp197 *label77
-    * jump *label66 always
-    * multilabel *label77 (m:marker0)
-    * set :block "AÕFFJS-micro-processor9"
-    * setaddr *tmp197 *label78
-    * label *label66
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
-    * label *label67
-    * multijump *tmp197 0 0 (m:marker0)
-    * multilabel *label78 (m:marker0)
-    * label *label68
+  168 set :block "AJEMJJ-graphite-press0"
+  169 label *label186
+  170 read *tmp198 @this :block
+  171 write *tmp198 AÕFFJS-micro-processor9 :block
+  172 label *label187
+  173 set :block "AJTJK-battery1"
+  174 label *label190
+  175 read *tmp198 @this :block
+  176 write *tmp198 AÕFFJS-micro-processor9 :block
+  177 label *label191
+  178 set :block "ALTJL-battery2"
+  179 label *label194
+  180 read *tmp198 @this :block
+  181 write *tmp198 AÕFFJS-micro-processor9 :block
+  182 label *label195
+  183 set :block "AJRJM-combustion-generator3"
+  184 label *label198
+  185 read *tmp198 @this :block
+  186 write *tmp198 AÕFFJS-micro-processor9 :block
+  187 label *label199
+  188 set :block "ALMQJN-silicon-smelter4"
+  189 label *label202
+  190 read *tmp198 @this :block
+  191 write *tmp198 AÕFFJS-micro-processor9 :block
+  192 label *label203
+  193 set :block "A{LNJO-inverted-sorter5"
+  194 label *label206
+  195 read *tmp198 @this :block
+  196 write *tmp198 AÕFFJS-micro-processor9 :block
+  197 label *label207
+  198 set :block "A©JNJP-unloader6"
+  199 label *label210
+  200 read *tmp198 @this :block
+  201 write *tmp198 AÕFFJS-micro-processor9 :block
+  202 label *label211
+  203 set :block "A{HNJQ-inverted-sorter7"
+  204 label *label214
+  205 read *tmp198 @this :block
+  206 write *tmp198 AÕFFJS-micro-processor9 :block
+  207 label *label215
+  208 set :block "AJPJR-underflow-gate8"
+  209 label *label218
+  210 read *tmp198 @this :block
+  211 write *tmp198 AÕFFJS-micro-processor9 :block
+  212 label *label219
+  213 set :block "AÕFFJS-micro-processor9"
+  214 label *label222
+  215 read *tmp198 @this :block
+  216 write *tmp198 AÕFFJS-micro-processor9 :block
+  217 label *label223
+  218 label *label68
   219 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   220 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   221 setaddr :buildBlockFromCfgLocal*retaddr *label79 (h:*label79)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   167 write bank1 AÕFFJS-micro-processor9 ".bank"
   168 set :block "AJEMJJ-graphite-press0"
   169 label *label186
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  170 read *tmp198 @this "AJEMJJ-graphite-press0"
+  171 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   172 label *label187
   173 set :block "AJTJK-battery1"
   174 label *label190
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  175 read *tmp198 @this "AJTJK-battery1"
+  176 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
   177 label *label191
   178 set :block "ALTJL-battery2"
   179 label *label194
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  180 read *tmp198 @this "ALTJL-battery2"
+  181 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
   182 label *label195
   183 set :block "AJRJM-combustion-generator3"
   184 label *label198
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  185 read *tmp198 @this "AJRJM-combustion-generator3"
+  186 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   187 label *label199
   188 set :block "ALMQJN-silicon-smelter4"
   189 label *label202
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  190 read *tmp198 @this "ALMQJN-silicon-smelter4"
+  191 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   192 label *label203
   193 set :block "A{LNJO-inverted-sorter5"
   194 label *label206
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  195 read *tmp198 @this "A{LNJO-inverted-sorter5"
+  196 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   197 label *label207
   198 set :block "A©JNJP-unloader6"
   199 label *label210
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  200 read *tmp198 @this "A©JNJP-unloader6"
+  201 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   202 label *label211
   203 set :block "A{HNJQ-inverted-sorter7"
   204 label *label214
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  205 read *tmp198 @this "A{HNJQ-inverted-sorter7"
+  206 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   207 label *label215
   208 set :block "AJPJR-underflow-gate8"
   209 label *label218
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  210 read *tmp198 @this "AJPJR-underflow-gate8"
+  211 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   212 label *label219
   213 set :block "AÕFFJS-micro-processor9"
   214 label *label222
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  215 read *tmp198 @this "AÕFFJS-micro-processor9"
+  216 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   217 label *label223
   218 label *label68
   219 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
 
   477 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   478 label *label136
   479 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
+  480 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   481 write .thoriumDrill processor2 ".thoriumDrill"
   482 write .thoriumContainer processor2 ".thoriumContainer"
   483 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   165 write processor2 AÕFFJS-micro-processor9 ".display"
   166 write .core AÕFFJS-micro-processor9 ".core"
   167 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   168 label *label186
   169 read *tmp198 @this "AJEMJJ-graphite-press0"
   170 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   171 label *label187
-    * set :block "AJTJK-battery1"
   172 label *label190
   173 read *tmp198 @this "AJTJK-battery1"
   174 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
   175 label *label191
-    * set :block "ALTJL-battery2"
   176 label *label194
   177 read *tmp198 @this "ALTJL-battery2"
   178 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
   179 label *label195
-    * set :block "AJRJM-combustion-generator3"
   180 label *label198
   181 read *tmp198 @this "AJRJM-combustion-generator3"
   182 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   183 label *label199
-    * set :block "ALMQJN-silicon-smelter4"
   184 label *label202
   185 read *tmp198 @this "ALMQJN-silicon-smelter4"
   186 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   187 label *label203
-    * set :block "A{LNJO-inverted-sorter5"
   188 label *label206
   189 read *tmp198 @this "A{LNJO-inverted-sorter5"
   190 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   191 label *label207
-    * set :block "A©JNJP-unloader6"
   192 label *label210
   193 read *tmp198 @this "A©JNJP-unloader6"
   194 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   195 label *label211
-    * set :block "A{HNJQ-inverted-sorter7"
   196 label *label214
   197 read *tmp198 @this "A{HNJQ-inverted-sorter7"
   198 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   199 label *label215
-    * set :block "AJPJR-underflow-gate8"
   200 label *label218
   201 read *tmp198 @this "AJPJR-underflow-gate8"
   202 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   203 label *label219
-    * set :block "AÕFFJS-micro-processor9"
   204 label *label222
   205 read *tmp198 @this "AÕFFJS-micro-processor9"
   206 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
 
   466 setaddr :buildRemoteBlockLocal*retaddr *label136 (h:*label136)
   467 call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   468 label *label136
-    * set .thoriumContainer :buildRemoteBlockLocal*retval
   469 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   470 write .thoriumDrill processor2 ".thoriumDrill"
   471 write .thoriumContainer processor2 ".thoriumContainer"

Modifications by Inline function 'error' defined at BaseBuilder.mnd:20:1 (-4 instructions):
 
    94 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    95 jump *label50 notEqual :buildFirstTitaniumDrill:result false
    96 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label52 (h:*label52)
-    * call *label22 *invalid :error*retval (m:*label52) (h:*label52)
-    * label *label52
+   97 label *label227
+   98 set .ERROR :error:error
+   99 stop
+  100 label *label228
   101 label *label50
   102 label *label51
   103 write @pneumatic-drill processor2 ".nextBlock"
 
   399 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   400 jump *label125 notEqual :buildThoriumDrill:result false
   401 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label127 (h:*label127)
-    * call *label22 *invalid :error*retval (m:*label127) (h:*label127)
-    * label *label127
+  402 label *label229
+  403 set .ERROR :error:error
+  404 stop
+  405 label *label230
   406 label *label125
   407 label *label126
   408 write @laser-drill processor5 ":buildBlockAt:block"
 
   581 label *label160
   582 label *label153
   583 end
-    * label *label22
-    * set .ERROR :error:error
-    * stop
-    * label *label165
-    * return :error*retaddr
-    * end
   584 label *label23
   585 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
   586 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    95 jump *label50 notEqual :buildFirstTitaniumDrill:result false
    96 set :error:error "Cannot locate spot for titanium drill"
    97 label *label227
-    * set .ERROR :error:error
+   98 set .ERROR "Cannot locate spot for titanium drill"
    99 stop
   100 label *label228
   101 label *label50
 
   400 jump *label125 notEqual :buildThoriumDrill:result false
   401 set :error:error "Cannot locate spot for thorium drill"
   402 label *label229
-    * set .ERROR :error:error
+  403 set .ERROR "Cannot locate spot for thorium drill"
   404 stop
   405 label *label230
   406 label *label125

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    93 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    94 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    95 jump *label50 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    96 label *label227
    97 set .ERROR "Cannot locate spot for titanium drill"
    98 stop
 
   397 jump *label124 equal *tmp248 false
   398 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   399 jump *label125 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   400 label *label229
   401 set .ERROR "Cannot locate spot for thorium drill"
   402 stop

Modifications by Replicate loop condition at BaseBuilder.mnd:247:5 (+1 instructions):
 
   324 label *label110
   325 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   326 jump *label112 greaterThanEq *tmp82 2
+  327 label *label231
   328 write false processor5 ":supplyBase*finished"
   329 write 8 processor5 "@counter"
   330 label *label113
 
   332 read *tmp225 processor5 ":supplyBase*finished"
   333 jump *label113 equal *tmp225 false
   334 label *label111
-    * jump *label110 always
+  335 read *tmp82 AÕFFJS-micro-processor9 ".polys"
+  336 jump *label231 lessThan *tmp82 2
   337 label *label112
   338 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   339 label *label114

Modifications by Replicate loop condition at BaseBuilder.mnd:252:5 (+1 instructions):
 
   340 label *label115
   341 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   342 jump *label117 greaterThanEq *tmp80 2
+  343 label *label232
   344 write false processor5 ":supplyBase*finished"
   345 write 8 processor5 "@counter"
   346 label *label118
 
   348 read *tmp227 processor5 ":supplyBase*finished"
   349 jump *label118 equal *tmp227 false
   350 label *label116
-    * jump *label115 always
+  351 read *tmp80 AÕFFJS-micro-processor9 ".flares"
+  352 jump *label232 lessThan *tmp80 2
   353 label *label117
   354 write @ore-titanium processor2 ".nextBlock"
   355 ubind @flare

Modifications by Replicate loop condition at BaseBuilder.mnd:271:5 (+1 instructions):
 
   488 label *label140
   489 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   490 jump *label142 greaterThanEq *tmp82 3
+  491 label *label233
   492 write false processor5 ":supplyBase*finished"
   493 write 8 processor5 "@counter"
   494 label *label143
 
   496 read *tmp273 processor5 ":supplyBase*finished"
   497 jump *label143 equal *tmp273 false
   498 label *label141
-    * jump *label140 always
+  499 read *tmp82 AÕFFJS-micro-processor9 ".polys"
+  500 jump *label233 lessThan *tmp82 3
   501 label *label142
   502 op add :setMonoTarget.2:target 4 .scrap
   503 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Inline function 'lineUpUnits' defined at BaseBuilder.mnd:356:1 (+20 instructions):
 
   562 label *label158
   563 op add :lineUpUnits:y .coreY 6
   564 set :lineUpUnits:unit @mega
-    * setaddr :lineUpUnits*retaddr *label161 (h:*label161)
-    * call *label27 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
-    * label *label161
+  565 label *label234
+  566 ubind :lineUpUnits:unit
+  567 set :lineUpUnits:firstUnit @unit
+  568 label *label235
+  569 sensor :lineUpUnits:x @unit @flag
+  570 ucontrol itemDrop @air 1000
+  571 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  572 sensor *tmp318 @unit @mining
+  573 jump *label236 equal *tmp318 false
+  574 ucontrol stop
+  575 label *label236
+  576 label *label237
+  577 ubind :lineUpUnits:unit
+  578 label *label238
+  579 jump *label235 notEqual @unit :lineUpUnits:firstUnit
+  580 label *label239
+  581 label *label240
   582 op add :lineUpUnits:y .coreY 2
   583 set :lineUpUnits:unit @poly
-    * setaddr :lineUpUnits*retaddr *label162 (h:*label162)
-    * call *label27 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
-    * label *label162
+  584 label *label241
+  585 ubind :lineUpUnits:unit
+  586 set :lineUpUnits:firstUnit @unit
+  587 label *label242
+  588 sensor :lineUpUnits:x @unit @flag
+  589 ucontrol itemDrop @air 1000
+  590 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  591 sensor *tmp318 @unit @mining
+  592 jump *label243 equal *tmp318 false
+  593 ucontrol stop
+  594 label *label243
+  595 label *label244
+  596 ubind :lineUpUnits:unit
+  597 label *label245
+  598 jump *label242 notEqual @unit :lineUpUnits:firstUnit
+  599 label *label246
+  600 label *label247
   601 op sub :lineUpUnits:y .coreY 2
   602 set :lineUpUnits:unit @mono
-    * setaddr :lineUpUnits*retaddr *label163 (h:*label163)
-    * call *label27 *invalid :lineUpUnits*retval (m:*label163) (h:*label163)
-    * label *label163
+  603 label *label248
+  604 ubind :lineUpUnits:unit
+  605 set :lineUpUnits:firstUnit @unit
+  606 label *label249
+  607 sensor :lineUpUnits:x @unit @flag
+  608 ucontrol itemDrop @air 1000
+  609 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  610 sensor *tmp318 @unit @mining
+  611 jump *label250 equal *tmp318 false
+  612 ucontrol stop
+  613 label *label250
+  614 label *label251
+  615 ubind :lineUpUnits:unit
+  616 label *label252
+  617 jump *label249 notEqual @unit :lineUpUnits:firstUnit
+  618 label *label253
+  619 label *label254
   620 op sub :lineUpUnits:y .coreY 6
   621 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label164 (h:*label164)
-    * call *label27 *invalid :lineUpUnits*retval (m:*label164) (h:*label164)
-    * label *label164
+  622 label *label255
+  623 ubind :lineUpUnits:unit
+  624 set :lineUpUnits:firstUnit @unit
+  625 label *label256
+  626 sensor :lineUpUnits:x @unit @flag
+  627 ucontrol itemDrop @air 1000
+  628 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  629 sensor *tmp318 @unit @mining
+  630 jump *label257 equal *tmp318 false
+  631 ucontrol stop
+  632 label *label257
+  633 label *label258
+  634 ubind :lineUpUnits:unit
+  635 label *label259
+  636 jump *label256 notEqual @unit :lineUpUnits:firstUnit
+  637 label *label260
+  638 label *label261
   639 label *label159
   640 jump *label158 always
   641 label *label160
 
   711 label *label172
   712 return :flagUnits*retaddr
   713 end
-    * label *label27
-    * ubind :lineUpUnits:unit
-    * set :lineUpUnits:firstUnit @unit
-    * label *label180
-    * sensor :lineUpUnits:x @unit @flag
-    * ucontrol itemDrop @air 1000
-    * ucontrol move :lineUpUnits:x :lineUpUnits:y
-    * sensor *tmp318 @unit @mining
-    * jump *label183 equal *tmp318 false
-    * ucontrol stop
-    * label *label183
-    * label *label184
-    * ubind :lineUpUnits:unit
-    * label *label181
-    * jump *label180 notEqual @unit :lineUpUnits:firstUnit
-    * label *label182
-    * label *label179
-    * return :lineUpUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   563 op add :lineUpUnits:y .coreY 6
   564 set :lineUpUnits:unit @mega
   565 label *label234
-    * ubind :lineUpUnits:unit
+  566 ubind @mega
   567 set :lineUpUnits:firstUnit @unit
   568 label *label235
   569 sensor :lineUpUnits:x @unit @flag
 
   574 ucontrol stop
   575 label *label236
   576 label *label237
-    * ubind :lineUpUnits:unit
+  577 ubind @mega
   578 label *label238
   579 jump *label235 notEqual @unit :lineUpUnits:firstUnit
   580 label *label239
 
   582 op add :lineUpUnits:y .coreY 2
   583 set :lineUpUnits:unit @poly
   584 label *label241
-    * ubind :lineUpUnits:unit
+  585 ubind @poly
   586 set :lineUpUnits:firstUnit @unit
   587 label *label242
   588 sensor :lineUpUnits:x @unit @flag
 
   593 ucontrol stop
   594 label *label243
   595 label *label244
-    * ubind :lineUpUnits:unit
+  596 ubind @poly
   597 label *label245
   598 jump *label242 notEqual @unit :lineUpUnits:firstUnit
   599 label *label246
 
   601 op sub :lineUpUnits:y .coreY 2
   602 set :lineUpUnits:unit @mono
   603 label *label248
-    * ubind :lineUpUnits:unit
+  604 ubind @mono
   605 set :lineUpUnits:firstUnit @unit
   606 label *label249
   607 sensor :lineUpUnits:x @unit @flag
 
   612 ucontrol stop
   613 label *label250
   614 label *label251
-    * ubind :lineUpUnits:unit
+  615 ubind @mono
   616 label *label252
   617 jump *label249 notEqual @unit :lineUpUnits:firstUnit
   618 label *label253
 
   620 op sub :lineUpUnits:y .coreY 6
   621 set :lineUpUnits:unit @flare
   622 label *label255
-    * ubind :lineUpUnits:unit
+  623 ubind @flare
   624 set :lineUpUnits:firstUnit @unit
   625 label *label256
   626 sensor :lineUpUnits:x @unit @flag
 
   631 ucontrol stop
   632 label *label257
   633 label *label258
-    * ubind :lineUpUnits:unit
+  634 ubind @flare
   635 label *label259
   636 jump *label256 notEqual @unit :lineUpUnits:firstUnit
   637 label *label260

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   561 label *label157
   562 label *label158
   563 op add :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @mega
   564 label *label234
   565 ubind @mega
   566 set :lineUpUnits:firstUnit @unit
 
   579 label *label239
   580 label *label240
   581 op add :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @poly
   582 label *label241
   583 ubind @poly
   584 set :lineUpUnits:firstUnit @unit
 
   597 label *label246
   598 label *label247
   599 op sub :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @mono
   600 label *label248
   601 ubind @mono
   602 set :lineUpUnits:firstUnit @unit
 
   615 label *label253
   616 label *label254
   617 op sub :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @flare
   618 label *label255
   619 ubind @flare
   620 set :lineUpUnits:firstUnit @unit

Modifications by Inline function 'flagUnits' defined at BaseBuilder.mnd:342:1 (+14 instructions):
 
   544 control enabled processor5 false
   545 control enabled processor11 false
   546 set :flagUnits:unit @mega
-    * setaddr :flagUnits*retaddr *label154 (h:*label154)
-    * call *label26 *invalid :flagUnits*retval (m:*label154) (h:*label154)
-    * label *label154
+  547 label *label262
+  548 label *label263
+  549 ubind :flagUnits:unit
+  550 set :flagUnits:firstUnit @unit
+  551 label *label264
+  552 jump *label263 equal :flagUnits:firstUnit null
+  553 label *label265
+  554 op add :flagUnits:x .coreX 8
+  555 label *label266
+  556 ucontrol flag :flagUnits:x
+  557 op add :flagUnits:x :flagUnits:x 4
+  558 ubind :flagUnits:unit
+  559 label *label267
+  560 jump *label266 notEqual @unit :flagUnits:firstUnit
+  561 label *label268
+  562 label *label269
   563 set :flagUnits:unit @poly
-    * setaddr :flagUnits*retaddr *label155 (h:*label155)
-    * call *label26 *invalid :flagUnits*retval (m:*label155) (h:*label155)
-    * label *label155
+  564 label *label270
+  565 label *label271
+  566 ubind :flagUnits:unit
+  567 set :flagUnits:firstUnit @unit
+  568 label *label272
+  569 jump *label271 equal :flagUnits:firstUnit null
+  570 label *label273
+  571 op add :flagUnits:x .coreX 8
+  572 label *label274
+  573 ucontrol flag :flagUnits:x
+  574 op add :flagUnits:x :flagUnits:x 4
+  575 ubind :flagUnits:unit
+  576 label *label275
+  577 jump *label274 notEqual @unit :flagUnits:firstUnit
+  578 label *label276
+  579 label *label277
   580 set :flagUnits:unit @mono
-    * setaddr :flagUnits*retaddr *label156 (h:*label156)
-    * call *label26 *invalid :flagUnits*retval (m:*label156) (h:*label156)
-    * label *label156
+  581 label *label278
+  582 label *label279
+  583 ubind :flagUnits:unit
+  584 set :flagUnits:firstUnit @unit
+  585 label *label280
+  586 jump *label279 equal :flagUnits:firstUnit null
+  587 label *label281
+  588 op add :flagUnits:x .coreX 8
+  589 label *label282
+  590 ucontrol flag :flagUnits:x
+  591 op add :flagUnits:x :flagUnits:x 4
+  592 ubind :flagUnits:unit
+  593 label *label283
+  594 jump *label282 notEqual @unit :flagUnits:firstUnit
+  595 label *label284
+  596 label *label285
   597 set :flagUnits:unit @flare
-    * setaddr :flagUnits*retaddr *label157 (h:*label157)
-    * call *label26 *invalid :flagUnits*retval (m:*label157) (h:*label157)
-    * label *label157
+  598 label *label286
+  599 label *label287
+  600 ubind :flagUnits:unit
+  601 set :flagUnits:firstUnit @unit
+  602 label *label288
+  603 jump *label287 equal :flagUnits:firstUnit null
+  604 label *label289
+  605 op add :flagUnits:x .coreX 8
+  606 label *label290
+  607 ucontrol flag :flagUnits:x
+  608 op add :flagUnits:x :flagUnits:x 4
+  609 ubind :flagUnits:unit
+  610 label *label291
+  611 jump *label290 notEqual @unit :flagUnits:firstUnit
+  612 label *label292
+  613 label *label293
   614 label *label158
   615 op add :lineUpUnits:y .coreY 6
   616 label *label234
 
   741 label *label170
   742 return :buildUnits*retaddr
   743 end
-    * label *label26
-    * label *label173
-    * ubind :flagUnits:unit
-    * set :flagUnits:firstUnit @unit
-    * label *label174
-    * jump *label173 equal :flagUnits:firstUnit null
-    * label *label175
-    * op add :flagUnits:x .coreX 8
-    * label *label176
-    * ucontrol flag :flagUnits:x
-    * op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
-    * label *label177
-    * jump *label176 notEqual @unit :flagUnits:firstUnit
-    * label *label178
-    * label *label172
-    * return :flagUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   546 set :flagUnits:unit @mega
   547 label *label262
   548 label *label263
-    * ubind :flagUnits:unit
+  549 ubind @mega
   550 set :flagUnits:firstUnit @unit
   551 label *label264
   552 jump *label263 equal :flagUnits:firstUnit null
 
   555 label *label266
   556 ucontrol flag :flagUnits:x
   557 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  558 ubind @mega
   559 label *label267
   560 jump *label266 notEqual @unit :flagUnits:firstUnit
   561 label *label268
 
   563 set :flagUnits:unit @poly
   564 label *label270
   565 label *label271
-    * ubind :flagUnits:unit
+  566 ubind @poly
   567 set :flagUnits:firstUnit @unit
   568 label *label272
   569 jump *label271 equal :flagUnits:firstUnit null
 
   572 label *label274
   573 ucontrol flag :flagUnits:x
   574 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  575 ubind @poly
   576 label *label275
   577 jump *label274 notEqual @unit :flagUnits:firstUnit
   578 label *label276
 
   580 set :flagUnits:unit @mono
   581 label *label278
   582 label *label279
-    * ubind :flagUnits:unit
+  583 ubind @mono
   584 set :flagUnits:firstUnit @unit
   585 label *label280
   586 jump *label279 equal :flagUnits:firstUnit null
 
   589 label *label282
   590 ucontrol flag :flagUnits:x
   591 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  592 ubind @mono
   593 label *label283
   594 jump *label282 notEqual @unit :flagUnits:firstUnit
   595 label *label284
 
   597 set :flagUnits:unit @flare
   598 label *label286
   599 label *label287
-    * ubind :flagUnits:unit
+  600 ubind @flare
   601 set :flagUnits:firstUnit @unit
   602 label *label288
   603 jump *label287 equal :flagUnits:firstUnit null
 
   606 label *label290
   607 ucontrol flag :flagUnits:x
   608 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  609 ubind @flare
   610 label *label291
   611 jump *label290 notEqual @unit :flagUnits:firstUnit
   612 label *label292

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   543 control enabled processor3 false
   544 control enabled processor5 false
   545 control enabled processor11 false
-    * set :flagUnits:unit @mega
   546 label *label262
   547 label *label263
   548 ubind @mega
 
   559 jump *label266 notEqual @unit :flagUnits:firstUnit
   560 label *label268
   561 label *label269
-    * set :flagUnits:unit @poly
   562 label *label270
   563 label *label271
   564 ubind @poly
 
   575 jump *label274 notEqual @unit :flagUnits:firstUnit
   576 label *label276
   577 label *label277
-    * set :flagUnits:unit @mono
   578 label *label278
   579 label *label279
   580 ubind @mono
 
   591 jump *label282 notEqual @unit :flagUnits:firstUnit
   592 label *label284
   593 label *label285
-    * set :flagUnits:unit @flare
   594 label *label286
   595 label *label287
   596 ubind @flare

Modifications by Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 (+45 instructions):
 
   425 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   426 read :buildRemoteBlockLocal:x processor3 ".water1X"
   427 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
-    * label *label129
+  428 label *label294
+  429 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  430 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  431 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  432 write false processor5 ":buildRemoteBlock*finished"
+  433 write 4 processor5 "@counter"
+  434 label *label295
+  435 wait 1e-15
+  436 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  437 jump *label295 equal *tmp296 false
+  438 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  439 label *label296
   440 read :buildRemoteBlockLocal:x processor3 ".water2X"
   441 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label130) (h:*label130)
-    * label *label130
+  442 label *label297
+  443 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  444 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  445 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  446 write false processor5 ":buildRemoteBlock*finished"
+  447 write 4 processor5 "@counter"
+  448 label *label298
+  449 wait 1e-15
+  450 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  451 jump *label298 equal *tmp296 false
+  452 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  453 label *label299
   454 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   455 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   456 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label131 (h:*label131)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label131) (h:*label131)
-    * label *label131
+  457 label *label300
+  458 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  459 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  460 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  461 write false processor5 ":buildRemoteBlock*finished"
+  462 write 4 processor5 "@counter"
+  463 label *label301
+  464 wait 1e-15
+  465 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  466 jump *label301 equal *tmp296 false
+  467 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  468 label *label302
   469 set .thoriumGenerator :buildRemoteBlockLocal*retval
   470 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   471 read :buildRemoteBlockLocal:x processor3 ".node1X"
   472 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
-    * label *label132
+  473 label *label303
+  474 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  475 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  476 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  477 write false processor5 ":buildRemoteBlock*finished"
+  478 write 4 processor5 "@counter"
+  479 label *label304
+  480 wait 1e-15
+  481 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  482 jump *label304 equal *tmp296 false
+  483 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  484 label *label305
   485 read :buildRemoteBlockLocal:x processor3 ".node2X"
   486 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label133) (h:*label133)
-    * label *label133
+  487 label *label306
+  488 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  489 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  490 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  491 write false processor5 ":buildRemoteBlock*finished"
+  492 write 4 processor5 "@counter"
+  493 label *label307
+  494 wait 1e-15
+  495 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  496 jump *label307 equal *tmp296 false
+  497 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  498 label *label308
   499 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   500 read :buildRemoteBlockLocal:x processor3 ".panelX"
   501 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label134 (h:*label134)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label134) (h:*label134)
-    * label *label134
+  502 label *label309
+  503 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  504 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  505 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  506 write false processor5 ":buildRemoteBlock*finished"
+  507 write 4 processor5 "@counter"
+  508 label *label310
+  509 wait 1e-15
+  510 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  511 jump *label310 equal *tmp296 false
+  512 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  513 label *label311
   514 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   515 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   516 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label135 (h:*label135)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label135) (h:*label135)
-    * label *label135
+  517 label *label312
+  518 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  519 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  520 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  521 write false processor5 ":buildRemoteBlock*finished"
+  522 write 4 processor5 "@counter"
+  523 label *label313
+  524 wait 1e-15
+  525 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  526 jump *label313 equal *tmp296 false
+  527 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  528 label *label314
   529 set .thoriumBattery :buildRemoteBlockLocal*retval
   530 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   531 read :buildRemoteBlockLocal:x processor3 ".containerX"
   532 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label136 (h:*label136)
-    * call *label23 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
-    * label *label136
+  533 label *label315
+  534 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  535 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  536 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  537 write false processor5 ":buildRemoteBlock*finished"
+  538 write 4 processor5 "@counter"
+  539 label *label316
+  540 wait 1e-15
+  541 read *tmp296 processor5 ":buildRemoteBlock*finished"
+  542 jump *label316 equal *tmp296 false
+  543 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  544 label *label317
   545 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   546 write .thoriumDrill processor2 ".thoriumDrill"
   547 write .thoriumContainer processor2 ".thoriumContainer"
 
   757 label *label160
   758 label *label153
   759 end
-    * label *label23
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
-    * write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
-    * write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
-    * write false processor5 ":buildRemoteBlock*finished"
-    * write 4 processor5 "@counter"
-    * label *label167
-    * wait 1e-15
-    * read *tmp296 processor5 ":buildRemoteBlock*finished"
-    * jump *label167 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label166
-    * return :buildRemoteBlockLocal*retaddr
-    * end
   760 label *label24
   761 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
   762 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-5 instructions):
 
   426 read :buildRemoteBlockLocal:x processor3 ".water1X"
   427 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   428 label *label294
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  429 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   430 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   431 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   432 write false processor5 ":buildRemoteBlock*finished"
 
   435 wait 1e-15
   436 read *tmp296 processor5 ":buildRemoteBlock*finished"
   437 jump *label295 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   438 label *label296
   439 read :buildRemoteBlockLocal:x processor3 ".water2X"
   440 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   441 label *label297
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  442 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   443 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   444 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   445 write false processor5 ":buildRemoteBlock*finished"
 
   448 wait 1e-15
   449 read *tmp296 processor5 ":buildRemoteBlock*finished"
   450 jump *label298 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   451 label *label299
   452 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   453 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   454 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   455 label *label300
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  456 write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlock:cfg"
   457 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   458 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   459 write false processor5 ":buildRemoteBlock*finished"
 
   469 read :buildRemoteBlockLocal:x processor3 ".node1X"
   470 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   471 label *label303
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  472 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   473 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   474 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   475 write false processor5 ":buildRemoteBlock*finished"
 
   478 wait 1e-15
   479 read *tmp296 processor5 ":buildRemoteBlock*finished"
   480 jump *label304 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   481 label *label305
   482 read :buildRemoteBlockLocal:x processor3 ".node2X"
   483 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   484 label *label306
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  485 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   486 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   487 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   488 write false processor5 ":buildRemoteBlock*finished"
 
   491 wait 1e-15
   492 read *tmp296 processor5 ":buildRemoteBlock*finished"
   493 jump *label307 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   494 label *label308
   495 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   496 read :buildRemoteBlockLocal:x processor3 ".panelX"
   497 read :buildRemoteBlockLocal:y processor3 ".panelY"
   498 label *label309
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  499 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   500 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   501 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   502 write false processor5 ":buildRemoteBlock*finished"
 
   505 wait 1e-15
   506 read *tmp296 processor5 ":buildRemoteBlock*finished"
   507 jump *label310 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   508 label *label311
   509 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   510 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   511 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   512 label *label312
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  513 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   514 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   515 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   516 write false processor5 ":buildRemoteBlock*finished"
 
   526 read :buildRemoteBlockLocal:x processor3 ".containerX"
   527 read :buildRemoteBlockLocal:y processor3 ".containerY"
   528 label *label315
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  529 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   530 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   531 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   532 write false processor5 ":buildRemoteBlock*finished"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   422 read *tmp258 processor5 ":buildBlockAt*finished"
   423 jump *label128 equal *tmp258 false
   424 read .thoriumDrill processor5 ":buildBlockAt*retval"
-    * set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   425 read :buildRemoteBlockLocal:x processor3 ".water1X"
   426 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   427 label *label294
 
   448 read *tmp296 processor5 ":buildRemoteBlock*finished"
   449 jump *label298 equal *tmp296 false
   450 label *label299
-    * set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   451 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   452 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   453 label *label300
 
   463 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   464 label *label302
   465 set .thoriumGenerator :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   466 read :buildRemoteBlockLocal:x processor3 ".node1X"
   467 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   468 label *label303
 
   489 read *tmp296 processor5 ":buildRemoteBlock*finished"
   490 jump *label307 equal *tmp296 false
   491 label *label308
-    * set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   492 read :buildRemoteBlockLocal:x processor3 ".panelX"
   493 read :buildRemoteBlockLocal:y processor3 ".panelY"
   494 label *label309
 
   502 read *tmp296 processor5 ":buildRemoteBlock*finished"
   503 jump *label310 equal *tmp296 false
   504 label *label311
-    * set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   505 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   506 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   507 label *label312
 
   517 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   518 label *label314
   519 set .thoriumBattery :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   520 read :buildRemoteBlockLocal:x processor3 ".containerX"
   521 read :buildRemoteBlockLocal:y processor3 ".containerY"
   522 label *label315

Modifications by Inline function call at BaseBuilder.mnd:137:5 (+7 instructions):
 
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label36 (h:*label36)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label36) (h:*label36)
-    * label *label36
+   29 label *label318
+   30 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   31 write null processor5 ":buildBlockFromCfg:config"
+   32 write false processor5 ":buildBlockFromCfg*finished"
+   33 write 2 processor5 "@counter"
+   34 label *label319
+   35 wait 1e-15
+   36 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+   37 jump *label319 equal *tmp300 false
+   38 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   39 jump *label320 always
+   40 label *label320
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label37 (h:*label37)
    43 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label37) (h:*label37)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    29 label *label318
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   30 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    31 write null processor5 ":buildBlockFromCfg:config"
    32 write false processor5 ":buildBlockFromCfg*finished"
    33 write 2 processor5 "@counter"
 
    35 wait 1e-15
    36 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    37 jump *label319 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    38 jump *label320 always
    39 label *label320
    40 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    25 write .scrap processor2 ".scrap"
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
-    * set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    28 label *label318
    29 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    30 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:138:5 (+7 instructions):
 
    37 jump *label320 always
    38 label *label320
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label37 (h:*label37)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label37) (h:*label37)
-    * label *label37
+   40 label *label321
+   41 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   42 write null processor5 ":buildBlockFromCfg:config"
+   43 write false processor5 ":buildBlockFromCfg*finished"
+   44 write 2 processor5 "@counter"
+   45 label *label322
+   46 wait 1e-15
+   47 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+   48 jump *label322 equal *tmp300 false
+   49 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   50 jump *label323 always
+   51 label *label323
    52 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    53 setaddr :buildBlockFromCfgLocal*retaddr *label38 (h:*label38)
    54 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label38) (h:*label38)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    38 label *label320
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    40 label *label321
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   41 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    42 write null processor5 ":buildBlockFromCfg:config"
    43 write false processor5 ":buildBlockFromCfg*finished"
    44 write 2 processor5 "@counter"
 
    46 wait 1e-15
    47 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    48 jump *label322 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    49 jump *label323 always
    50 label *label323
    51 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    36 jump *label319 equal *tmp300 false
    37 jump *label320 always
    38 label *label320
-    * set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    39 label *label321
    40 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    41 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:139:5 (+7 instructions):
 
    48 jump *label323 always
    49 label *label323
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label38 (h:*label38)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label38) (h:*label38)
-    * label *label38
+   51 label *label324
+   52 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   53 write null processor5 ":buildBlockFromCfg:config"
+   54 write false processor5 ":buildBlockFromCfg*finished"
+   55 write 2 processor5 "@counter"
+   56 label *label325
+   57 wait 1e-15
+   58 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+   59 jump *label325 equal *tmp300 false
+   60 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   61 jump *label326 always
+   62 label *label326
    63 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    64 setaddr :buildBlockFromCfgLocal*retaddr *label39 (h:*label39)
    65 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label39) (h:*label39)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    49 label *label323
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    51 label *label324
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   52 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    53 write null processor5 ":buildBlockFromCfg:config"
    54 write false processor5 ":buildBlockFromCfg*finished"
    55 write 2 processor5 "@counter"
 
    57 wait 1e-15
    58 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    59 jump *label325 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    60 jump *label326 always
    61 label *label326
    62 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    47 jump *label322 equal *tmp300 false
    48 jump *label323 always
    49 label *label323
-    * set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    50 label *label324
    51 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    52 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:140:5 (+7 instructions):
 
    59 jump *label326 always
    60 label *label326
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label39 (h:*label39)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label39) (h:*label39)
-    * label *label39
+   62 label *label327
+   63 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   64 write null processor5 ":buildBlockFromCfg:config"
+   65 write false processor5 ":buildBlockFromCfg*finished"
+   66 write 2 processor5 "@counter"
+   67 label *label328
+   68 wait 1e-15
+   69 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+   70 jump *label328 equal *tmp300 false
+   71 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   72 jump *label329 always
+   73 label *label329
    74 write 400 processor5 ".powerTarget"
    75 set .sandContainer .core
    76 jump *label40 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    60 label *label326
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    62 label *label327
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   63 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    64 write null processor5 ":buildBlockFromCfg:config"
    65 write false processor5 ":buildBlockFromCfg*finished"
    66 write 2 processor5 "@counter"
 
    68 wait 1e-15
    69 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    70 jump *label328 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    71 jump *label329 always
    72 label *label329
    73 write 400 processor5 ".powerTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    58 jump *label325 equal *tmp300 false
    59 jump *label326 always
    60 label *label326
-    * set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    61 label *label327
    62 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    63 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:153:5 (+7 instructions):
 
    89 label *label40
    90 label *label41
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label45 (h:*label45)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label45) (h:*label45)
-    * label *label45
+   92 label *label330
+   93 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   94 write null processor5 ":buildBlockFromCfg:config"
+   95 write false processor5 ":buildBlockFromCfg*finished"
+   96 write 2 processor5 "@counter"
+   97 label *label331
+   98 wait 1e-15
+   99 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  100 jump *label331 equal *tmp300 false
+  101 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  102 jump *label332 always
+  103 label *label332
   104 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   105 setaddr :buildBlockFromCfgLocal*retaddr *label46 (h:*label46)
   106 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    90 label *label41
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    92 label *label330
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    94 write null processor5 ":buildBlockFromCfg:config"
    95 write false processor5 ":buildBlockFromCfg*finished"
    96 write 2 processor5 "@counter"
 
    98 wait 1e-15
    99 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   100 jump *label331 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   101 jump *label332 always
   102 label *label332
   103 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    88 label *label44
    89 label *label40
    90 label *label41
-    * set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    91 label *label330
    92 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:154:5 (+7 instructions):
 
   100 jump *label332 always
   101 label *label332
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label46 (h:*label46)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)
-    * label *label46
+  103 label *label333
+  104 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  105 write null processor5 ":buildBlockFromCfg:config"
+  106 write false processor5 ":buildBlockFromCfg*finished"
+  107 write 2 processor5 "@counter"
+  108 label *label334
+  109 wait 1e-15
+  110 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  111 jump *label334 equal *tmp300 false
+  112 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  113 jump *label335 always
+  114 label *label335
   115 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   116 write false processor5 ":meetTargetCfg*finished"
   117 write 7 processor5 "@counter"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   101 label *label332
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   103 label *label333
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   111 jump *label334 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label335 always
   113 label *label335
   114 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    99 jump *label331 equal *tmp300 false
   100 jump *label332 always
   101 label *label332
-    * set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   102 label *label333
   103 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   104 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:169:5 (+7 instructions):
 
   182 label *label55
   183 write .sandContainer processor7 ".sandContainer"
   184 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
-    * label *label61
+  185 label *label336
+  186 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  187 write null processor5 ":buildBlockFromCfg:config"
+  188 write false processor5 ":buildBlockFromCfg*finished"
+  189 write 2 processor5 "@counter"
+  190 label *label337
+  191 wait 1e-15
+  192 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  193 jump *label337 equal *tmp300 false
+  194 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  195 jump *label338 always
+  196 label *label338
   197 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   198 setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
   199 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   183 write .sandContainer processor7 ".sandContainer"
   184 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   185 label *label336
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  186 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   187 write null processor5 ":buildBlockFromCfg:config"
   188 write false processor5 ":buildBlockFromCfg*finished"
   189 write 2 processor5 "@counter"
 
   191 wait 1e-15
   192 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   193 jump *label337 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   194 jump *label338 always
   195 label *label338
   196 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   181 label *label54
   182 label *label55
   183 write .sandContainer processor7 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   184 label *label336
   185 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   186 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:170:5 (+7 instructions):
 
   193 jump *label338 always
   194 label *label338
   195 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)
-    * label *label62
+  196 label *label339
+  197 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  198 write null processor5 ":buildBlockFromCfg:config"
+  199 write false processor5 ":buildBlockFromCfg*finished"
+  200 write 2 processor5 "@counter"
+  201 label *label340
+  202 wait 1e-15
+  203 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  204 jump *label340 equal *tmp300 false
+  205 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  206 jump *label341 always
+  207 label *label341
   208 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   209 setaddr :buildBlockFromCfgLocal*retaddr *label63 (h:*label63)
   210 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label63) (h:*label63)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   194 label *label338
   195 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   196 label *label339
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  197 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   198 write null processor5 ":buildBlockFromCfg:config"
   199 write false processor5 ":buildBlockFromCfg*finished"
   200 write 2 processor5 "@counter"
 
   202 wait 1e-15
   203 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   204 jump *label340 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   205 jump *label341 always
   206 label *label341
   207 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   192 jump *label337 equal *tmp300 false
   193 jump *label338 always
   194 label *label338
-    * set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   195 label *label339
   196 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   197 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:171:5 (+7 instructions):
 
   204 jump *label341 always
   205 label *label341
   206 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label63 (h:*label63)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label63) (h:*label63)
-    * label *label63
+  207 label *label342
+  208 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  209 write null processor5 ":buildBlockFromCfg:config"
+  210 write false processor5 ":buildBlockFromCfg*finished"
+  211 write 2 processor5 "@counter"
+  212 label *label343
+  213 wait 1e-15
+  214 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  215 jump *label343 equal *tmp300 false
+  216 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  217 jump *label344 always
+  218 label *label344
   219 write 80 processor5 ".graphiteSurplus"
   220 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   221 write processor10 processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   205 label *label341
   206 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   207 label *label342
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  208 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"
   210 write false processor5 ":buildBlockFromCfg*finished"
   211 write 2 processor5 "@counter"
 
   213 wait 1e-15
   214 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   215 jump *label343 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   216 jump *label344 always
   217 label *label344
   218 write 80 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   203 jump *label340 equal *tmp300 false
   204 jump *label341 always
   205 label *label341
-    * set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   206 label *label342
   207 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   208 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:186:5 (+7 instructions):
 
   271 label *label68
   272 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   273 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label79 (h:*label79)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label79) (h:*label79)
-    * label *label79
+  274 label *label345
+  275 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  276 write null processor5 ":buildBlockFromCfg:config"
+  277 write false processor5 ":buildBlockFromCfg*finished"
+  278 write 2 processor5 "@counter"
+  279 label *label346
+  280 wait 1e-15
+  281 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  282 jump *label346 equal *tmp300 false
+  283 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  284 jump *label347 always
+  285 label *label347
   286 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   287 setaddr :buildBlockFromCfgLocal*retaddr *label80 (h:*label80)
   288 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label80) (h:*label80)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   272 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   273 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   274 label *label345
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  275 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   276 write null processor5 ":buildBlockFromCfg:config"
   277 write false processor5 ":buildBlockFromCfg*finished"
   278 write 2 processor5 "@counter"
 
   280 wait 1e-15
   281 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   282 jump *label346 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   283 jump *label347 always
   284 label *label347
   285 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   270 label *label223
   271 label *label68
   272 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
-    * set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   273 label *label345
   274 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   275 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:187:5 (+7 instructions):
 
   282 jump *label347 always
   283 label *label347
   284 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label80 (h:*label80)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label80) (h:*label80)
-    * label *label80
+  285 label *label348
+  286 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  287 write null processor5 ":buildBlockFromCfg:config"
+  288 write false processor5 ":buildBlockFromCfg*finished"
+  289 write 2 processor5 "@counter"
+  290 label *label349
+  291 wait 1e-15
+  292 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  293 jump *label349 equal *tmp300 false
+  294 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  295 jump *label350 always
+  296 label *label350
   297 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   298 setaddr :buildBlockFromCfgLocal*retaddr *label81 (h:*label81)
   299 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label81) (h:*label81)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   283 label *label347
   284 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   285 label *label348
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  286 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   287 write null processor5 ":buildBlockFromCfg:config"
   288 write false processor5 ":buildBlockFromCfg*finished"
   289 write 2 processor5 "@counter"
 
   291 wait 1e-15
   292 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   293 jump *label349 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   294 jump *label350 always
   295 label *label350
   296 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   281 jump *label346 equal *tmp300 false
   282 jump *label347 always
   283 label *label347
-    * set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   284 label *label348
   285 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   286 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:188:5 (+7 instructions):
 
   293 jump *label350 always
   294 label *label350
   295 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label81 (h:*label81)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label81) (h:*label81)
-    * label *label81
+  296 label *label351
+  297 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  298 write null processor5 ":buildBlockFromCfg:config"
+  299 write false processor5 ":buildBlockFromCfg*finished"
+  300 write 2 processor5 "@counter"
+  301 label *label352
+  302 wait 1e-15
+  303 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  304 jump *label352 equal *tmp300 false
+  305 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  306 jump *label353 always
+  307 label *label353
   308 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   309 setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
   310 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   294 label *label350
   295 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   296 label *label351
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  297 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   298 write null processor5 ":buildBlockFromCfg:config"
   299 write false processor5 ":buildBlockFromCfg*finished"
   300 write 2 processor5 "@counter"
 
   302 wait 1e-15
   303 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   304 jump *label352 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   305 jump *label353 always
   306 label *label353
   307 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   292 jump *label349 equal *tmp300 false
   293 jump *label350 always
   294 label *label350
-    * set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   295 label *label351
   296 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   297 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:190:5 (+7 instructions):
 
   304 jump *label353 always
   305 label *label353
   306 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)
-    * label *label82
+  307 label *label354
+  308 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  309 write null processor5 ":buildBlockFromCfg:config"
+  310 write false processor5 ":buildBlockFromCfg*finished"
+  311 write 2 processor5 "@counter"
+  312 label *label355
+  313 wait 1e-15
+  314 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  315 jump *label355 equal *tmp300 false
+  316 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  317 jump *label356 always
+  318 label *label356
   319 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   320 label *label83
   321 write 5 AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   305 label *label353
   306 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   307 label *label354
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  308 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   309 write null processor5 ":buildBlockFromCfg:config"
   310 write false processor5 ":buildBlockFromCfg*finished"
   311 write 2 processor5 "@counter"
 
   313 wait 1e-15
   314 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   315 jump *label355 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   316 jump *label356 always
   317 label *label356
   318 write 1 AÕFFJS-micro-processor9 ".flareTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   303 jump *label352 equal *tmp300 false
   304 jump *label353 always
   305 label *label353
-    * set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   306 label *label354
   307 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   308 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:215:5 (+7 instructions):
 
   344 label *label88
   345 write 65 processor5 ".siliconSurplus"
   346 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label92 (h:*label92)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label92) (h:*label92)
-    * label *label92
+  347 label *label357
+  348 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  349 write null processor5 ":buildBlockFromCfg:config"
+  350 write false processor5 ":buildBlockFromCfg*finished"
+  351 write 2 processor5 "@counter"
+  352 label *label358
+  353 wait 1e-15
+  354 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  355 jump *label358 equal *tmp300 false
+  356 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  357 jump *label359 always
+  358 label *label359
   359 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   360 setaddr :buildBlockFromCfgLocal*retaddr *label93 (h:*label93)
   361 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label93) (h:*label93)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   345 write 65 processor5 ".siliconSurplus"
   346 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   347 label *label357
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  348 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   349 write null processor5 ":buildBlockFromCfg:config"
   350 write false processor5 ":buildBlockFromCfg*finished"
   351 write 2 processor5 "@counter"
 
   353 wait 1e-15
   354 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   355 jump *label358 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   356 jump *label359 always
   357 label *label359
   358 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   343 jump *label86 lessThan *tmp81 3
   344 label *label88
   345 write 65 processor5 ".siliconSurplus"
-    * set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   346 label *label357
   347 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   348 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:216:5 (+7 instructions):
 
   355 jump *label359 always
   356 label *label359
   357 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label93 (h:*label93)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label93) (h:*label93)
-    * label *label93
+  358 label *label360
+  359 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  360 write null processor5 ":buildBlockFromCfg:config"
+  361 write false processor5 ":buildBlockFromCfg*finished"
+  362 write 2 processor5 "@counter"
+  363 label *label361
+  364 wait 1e-15
+  365 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  366 jump *label361 equal *tmp300 false
+  367 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  368 jump *label362 always
+  369 label *label362
   370 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   371 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   372 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   356 label *label359
   357 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   358 label *label360
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  359 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   360 write null processor5 ":buildBlockFromCfg:config"
   361 write false processor5 ":buildBlockFromCfg*finished"
   362 write 2 processor5 "@counter"
 
   364 wait 1e-15
   365 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   366 jump *label361 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   367 jump *label362 always
   368 label *label362
   369 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   354 jump *label358 equal *tmp300 false
   355 jump *label359 always
   356 label *label359
-    * set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   357 label *label360
   358 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   359 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:217:5 (+7 instructions):
 
   366 jump *label362 always
   367 label *label362
   368 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
-    * label *label94
+  369 label *label363
+  370 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  371 write null processor5 ":buildBlockFromCfg:config"
+  372 write false processor5 ":buildBlockFromCfg*finished"
+  373 write 2 processor5 "@counter"
+  374 label *label364
+  375 wait 1e-15
+  376 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  377 jump *label364 equal *tmp300 false
+  378 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  379 jump *label365 always
+  380 label *label365
   381 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   382 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   383 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   367 label *label362
   368 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   369 label *label363
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  370 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   371 write null processor5 ":buildBlockFromCfg:config"
   372 write false processor5 ":buildBlockFromCfg*finished"
   373 write 2 processor5 "@counter"
 
   375 wait 1e-15
   376 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   377 jump *label364 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   378 jump *label365 always
   379 label *label365
   380 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   365 jump *label361 equal *tmp300 false
   366 jump *label362 always
   367 label *label362
-    * set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   368 label *label363
   369 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   370 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:220:5 (+7 instructions):
 
   377 jump *label365 always
   378 label *label365
   379 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
-    * label *label95
+  380 label *label366
+  381 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  382 write null processor5 ":buildBlockFromCfg:config"
+  383 write false processor5 ":buildBlockFromCfg*finished"
+  384 write 2 processor5 "@counter"
+  385 label *label367
+  386 wait 1e-15
+  387 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  388 jump *label367 equal *tmp300 false
+  389 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  390 jump *label368 always
+  391 label *label368
   392 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   393 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   394 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   378 label *label365
   379 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   380 label *label366
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  381 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   382 write null processor5 ":buildBlockFromCfg:config"
   383 write false processor5 ":buildBlockFromCfg*finished"
   384 write 2 processor5 "@counter"
 
   386 wait 1e-15
   387 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   388 jump *label367 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   389 jump *label368 always
   390 label *label368
   391 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   376 jump *label364 equal *tmp300 false
   377 jump *label365 always
   378 label *label365
-    * set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   379 label *label366
   380 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   381 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:221:5 (+7 instructions):
 
   388 jump *label368 always
   389 label *label368
   390 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
-    * label *label96
+  391 label *label369
+  392 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  393 write null processor5 ":buildBlockFromCfg:config"
+  394 write false processor5 ":buildBlockFromCfg*finished"
+  395 write 2 processor5 "@counter"
+  396 label *label370
+  397 wait 1e-15
+  398 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  399 jump *label370 equal *tmp300 false
+  400 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  401 jump *label371 always
+  402 label *label371
   403 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   404 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   405 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   389 label *label368
   390 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   391 label *label369
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  392 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   393 write null processor5 ":buildBlockFromCfg:config"
   394 write false processor5 ":buildBlockFromCfg*finished"
   395 write 2 processor5 "@counter"
 
   397 wait 1e-15
   398 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   399 jump *label370 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   400 jump *label371 always
   401 label *label371
   402 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   387 jump *label367 equal *tmp300 false
   388 jump *label368 always
   389 label *label368
-    * set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   390 label *label369
   391 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   392 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:223:5 (+7 instructions):
 
   399 jump *label371 always
   400 label *label371
   401 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
-    * label *label97
+  402 label *label372
+  403 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  404 write null processor5 ":buildBlockFromCfg:config"
+  405 write false processor5 ":buildBlockFromCfg*finished"
+  406 write 2 processor5 "@counter"
+  407 label *label373
+  408 wait 1e-15
+  409 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  410 jump *label373 equal *tmp300 false
+  411 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  412 jump *label374 always
+  413 label *label374
   414 write 200 processor5 ".graphiteSurplus"
   415 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   416 setaddr :buildBlockFromCfgLocal*retaddr *label98 (h:*label98)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   400 label *label371
   401 set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   402 label *label372
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  403 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
   404 write null processor5 ":buildBlockFromCfg:config"
   405 write false processor5 ":buildBlockFromCfg*finished"
   406 write 2 processor5 "@counter"
 
   408 wait 1e-15
   409 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   410 jump *label373 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   411 jump *label374 always
   412 label *label374
   413 write 200 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   398 jump *label370 equal *tmp300 false
   399 jump *label371 always
   400 label *label371
-    * set :buildBlockFromCfgLocal:cfg "AKFRJ^-multi-press20"
   401 label *label372
   402 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
   403 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:226:5 (+7 instructions):
 
   411 label *label374
   412 write 200 processor5 ".graphiteSurplus"
   413 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label98 (h:*label98)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label98) (h:*label98)
-    * label *label98
+  414 label *label375
+  415 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  416 write null processor5 ":buildBlockFromCfg:config"
+  417 write false processor5 ":buildBlockFromCfg*finished"
+  418 write 2 processor5 "@counter"
+  419 label *label376
+  420 wait 1e-15
+  421 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  422 jump *label376 equal *tmp300 false
+  423 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  424 jump *label377 always
+  425 label *label377
   426 jump *label99 equal .scrap false
   427 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   428 setaddr :buildBlockFromCfgLocal*retaddr *label101 (h:*label101)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   412 write 200 processor5 ".graphiteSurplus"
   413 set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   414 label *label375
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  415 write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFromCfg:cfg"
   416 write null processor5 ":buildBlockFromCfg:config"
   417 write false processor5 ":buildBlockFromCfg*finished"
   418 write 2 processor5 "@counter"
 
   420 wait 1e-15
   421 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   422 jump *label376 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   423 jump *label377 always
   424 label *label377
   425 jump *label99 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   410 jump *label374 always
   411 label *label374
   412 write 200 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal:cfg "ALQIJ]-silicon-smelter19"
   413 label *label375
   414 write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFromCfg:cfg"
   415 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:234:5 (+7 instructions):
 
   440 label *label99
   441 label *label100
   442 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label104 (h:*label104)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label104) (h:*label104)
-    * label *label104
+  443 label *label378
+  444 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  445 write null processor5 ":buildBlockFromCfg:config"
+  446 write false processor5 ":buildBlockFromCfg*finished"
+  447 write 2 processor5 "@counter"
+  448 label *label379
+  449 wait 1e-15
+  450 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  451 jump *label379 equal *tmp300 false
+  452 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  453 jump *label380 always
+  454 label *label380
   455 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   456 setaddr :buildBlockFromCfgLocal*retaddr *label105 (h:*label105)
   457 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label105) (h:*label105)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   441 label *label100
   442 set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
   443 label *label378
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  444 write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg"
   445 write null processor5 ":buildBlockFromCfg:config"
   446 write false processor5 ":buildBlockFromCfg*finished"
   447 write 2 processor5 "@counter"
 
   449 wait 1e-15
   450 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   451 jump *label379 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   452 jump *label380 always
   453 label *label380
   454 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   439 jump *label103 equal *tmp220 false
   440 label *label99
   441 label *label100
-    * set :buildBlockFromCfgLocal:cfg "A©HFJ_-unloader21"
   442 label *label378
   443 write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg"
   444 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:235:5 (+7 instructions):
 
   451 jump *label380 always
   452 label *label380
   453 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label105 (h:*label105)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label105) (h:*label105)
-    * label *label105
+  454 label *label381
+  455 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  456 write null processor5 ":buildBlockFromCfg:config"
+  457 write false processor5 ":buildBlockFromCfg*finished"
+  458 write 2 processor5 "@counter"
+  459 label *label382
+  460 wait 1e-15
+  461 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  462 jump *label382 equal *tmp300 false
+  463 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  464 jump *label383 always
+  465 label *label383
   466 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   467 setaddr :buildBlockFromCfgLocal*retaddr *label106 (h:*label106)
   468 call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label106) (h:*label106)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   452 label *label380
   453 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   454 label *label381
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  455 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   456 write null processor5 ":buildBlockFromCfg:config"
   457 write false processor5 ":buildBlockFromCfg*finished"
   458 write 2 processor5 "@counter"
 
   460 wait 1e-15
   461 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   462 jump *label382 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   463 jump *label383 always
   464 label *label383
   465 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   450 jump *label379 equal *tmp300 false
   451 jump *label380 always
   452 label *label380
-    * set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   453 label *label381
   454 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   455 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:236:5 (+7 instructions):
 
   462 jump *label383 always
   463 label *label383
   464 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label106 (h:*label106)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label106) (h:*label106)
-    * label *label106
+  465 label *label384
+  466 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  467 write null processor5 ":buildBlockFromCfg:config"
+  468 write false processor5 ":buildBlockFromCfg*finished"
+  469 write 2 processor5 "@counter"
+  470 label *label385
+  471 wait 1e-15
+  472 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  473 jump *label385 equal *tmp300 false
+  474 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  475 jump *label386 always
+  476 label *label386
   477 write 1000 processor5 ".siliconSurplus"
   478 write 20 processor5 ".siliconMonoSurplus"
   479 write 100 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   463 label *label383
   464 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   465 label *label384
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  466 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   467 write null processor5 ":buildBlockFromCfg:config"
   468 write false processor5 ":buildBlockFromCfg*finished"
   469 write 2 processor5 "@counter"
 
   471 wait 1e-15
   472 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   473 jump *label385 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   474 jump *label386 always
   475 label *label386
   476 write 1000 processor5 ".siliconSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   461 jump *label382 equal *tmp300 false
   462 jump *label383 always
   463 label *label383
-    * set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   464 label *label384
   465 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   466 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:281:5 (+7 instructions):
 
   730 write 120 processor5 ".siliconMonoSurplus"
   731 write 0 processor5 ".leadSurplus"
   732 set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label145 (h:*label145)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label145) (h:*label145)
-    * label *label145
+  733 label *label387
+  734 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  735 write null processor5 ":buildBlockFromCfg:config"
+  736 write false processor5 ":buildBlockFromCfg*finished"
+  737 write 2 processor5 "@counter"
+  738 label *label388
+  739 wait 1e-15
+  740 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  741 jump *label388 equal *tmp300 false
+  742 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  743 jump *label389 always
+  744 label *label389
   745 write 10 processor5 ".metaglassSurplus"
   746 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   747 label *label146

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   731 write 0 processor5 ".leadSurplus"
   732 set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
   733 label *label387
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  734 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   735 write null processor5 ":buildBlockFromCfg:config"
   736 write false processor5 ":buildBlockFromCfg*finished"
   737 write 2 processor5 "@counter"
 
   739 wait 1e-15
   740 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   741 jump *label388 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   742 jump *label389 always
   743 label *label389
   744 write 10 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   729 write *tmp276 AÕFFJS-micro-processor9 ".powerTarget"
   730 write 120 processor5 ".siliconMonoSurplus"
   731 write 0 processor5 ".leadSurplus"
-    * set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
   732 label *label387
   733 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   734 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function 'buildUnits' defined at BaseBuilder.mnd:114:1 (+30 instructions):
 
   323 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   324 write 20 processor5 ".siliconSurplus"
   325 write 2 processor5 ".leadSurplus"
-    * setaddr :buildUnits*retaddr *label85 (h:*label85)
-    * call *label25 *invalid :buildUnits*retval (m:*label85) (h:*label85)
-    * label *label85
+  326 label *label390
+  327 write 0 processor5 ":meetTarget:block"
+  328 write 0 processor5 ":meetTarget:copper"
+  329 write 0 processor5 ":meetTarget:lead"
+  330 write 0 processor5 ":meetTarget:graphite"
+  331 write 0 processor5 ":meetTarget:silicon"
+  332 write 0 processor5 ":meetTarget:titanium"
+  333 write 0 processor5 ":meetTarget:metaglass"
+  334 write 0 processor5 ":meetTarget:thorium"
+  335 write false processor5 ":meetTarget:forBuild"
+  336 write true processor5 ":meetTarget:isNoTarget"
+  337 write false processor5 ":meetTarget*finished"
+  338 write 6 processor5 "@counter"
+  339 label *label391
+  340 wait 1e-15
+  341 read *tmp312 processor5 ":meetTarget*finished"
+  342 jump *label391 equal *tmp312 false
+  343 write 0 processor2 ".totalTargets"
+  344 write null processor2 ".nextBlock"
+  345 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  346 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  347 label *label392
   348 label *label86
   349 write false processor5 ":supplyBase*finished"
   350 write 8 processor5 "@counter"
 
   498 label *label107
   499 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   500 label *label108
-    * setaddr :buildUnits*retaddr *label109 (h:*label109)
-    * call *label25 *invalid :buildUnits*retval (m:*label109) (h:*label109)
-    * label *label109
+  501 label *label393
+  502 write 0 processor5 ":meetTarget:block"
+  503 write 0 processor5 ":meetTarget:copper"
+  504 write 0 processor5 ":meetTarget:lead"
+  505 write 0 processor5 ":meetTarget:graphite"
+  506 write 0 processor5 ":meetTarget:silicon"
+  507 write 0 processor5 ":meetTarget:titanium"
+  508 write 0 processor5 ":meetTarget:metaglass"
+  509 write 0 processor5 ":meetTarget:thorium"
+  510 write false processor5 ":meetTarget:forBuild"
+  511 write true processor5 ":meetTarget:isNoTarget"
+  512 write false processor5 ":meetTarget*finished"
+  513 write 6 processor5 "@counter"
+  514 label *label394
+  515 wait 1e-15
+  516 read *tmp312 processor5 ":meetTarget*finished"
+  517 jump *label394 equal *tmp312 false
+  518 write 0 processor2 ".totalTargets"
+  519 write null processor2 ".nextBlock"
+  520 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  521 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  522 label *label395
   523 label *label110
   524 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   525 jump *label112 greaterThanEq *tmp82 2
 
   785 label *label147
   786 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   787 label *label148
-    * setaddr :buildUnits*retaddr *label149 (h:*label149)
-    * call *label25 *invalid :buildUnits*retval (m:*label149) (h:*label149)
-    * label *label149
+  788 label *label396
+  789 write 0 processor5 ":meetTarget:block"
+  790 write 0 processor5 ":meetTarget:copper"
+  791 write 0 processor5 ":meetTarget:lead"
+  792 write 0 processor5 ":meetTarget:graphite"
+  793 write 0 processor5 ":meetTarget:silicon"
+  794 write 0 processor5 ":meetTarget:titanium"
+  795 write 0 processor5 ":meetTarget:metaglass"
+  796 write 0 processor5 ":meetTarget:thorium"
+  797 write false processor5 ":meetTarget:forBuild"
+  798 write true processor5 ":meetTarget:isNoTarget"
+  799 write false processor5 ":meetTarget*finished"
+  800 write 6 processor5 "@counter"
+  801 label *label397
+  802 wait 1e-15
+  803 read *tmp312 processor5 ":meetTarget*finished"
+  804 jump *label397 equal *tmp312 false
+  805 write 0 processor2 ".totalTargets"
+  806 write null processor2 ".nextBlock"
+  807 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  808 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  809 label *label398
   810 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   811 op sub :tmp *tmp82 1
   812 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   985 label *label168
   986 return :buildBlockFromCfgLocal*retaddr
   987 end
-    * label *label25
-    * write 0 processor5 ":meetTarget:block"
-    * write 0 processor5 ":meetTarget:copper"
-    * write 0 processor5 ":meetTarget:lead"
-    * write 0 processor5 ":meetTarget:graphite"
-    * write 0 processor5 ":meetTarget:silicon"
-    * write 0 processor5 ":meetTarget:titanium"
-    * write 0 processor5 ":meetTarget:metaglass"
-    * write 0 processor5 ":meetTarget:thorium"
-    * write false processor5 ":meetTarget:forBuild"
-    * write true processor5 ":meetTarget:isNoTarget"
-    * write false processor5 ":meetTarget*finished"
-    * write 6 processor5 "@counter"
-    * label *label171
-    * wait 1e-15
-    * read *tmp312 processor5 ":meetTarget*finished"
-    * jump *label171 equal *tmp312 false
-    * write 0 processor2 ".totalTargets"
-    * write null processor2 ".nextBlock"
-    * write 0 AÕFFJS-micro-processor9 ".siliconReserve"
-    * write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label170
-    * return :buildUnits*retaddr
-    * end

Modifications by Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 (+59 instructions):
 
    73 set .sandContainer .core
    74 jump *label40 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label42 (h:*label42)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label42) (h:*label42)
-    * label *label42
+   76 label *label399
+   77 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   78 write null processor5 ":buildBlockFromCfg:config"
+   79 write false processor5 ":buildBlockFromCfg*finished"
+   80 write 2 processor5 "@counter"
+   81 label *label400
+   82 wait 1e-15
+   83 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+   84 jump *label400 equal *tmp300 false
+   85 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   86 jump *label401 always
+   87 label *label401
    88 set .sandContainer :buildBlockFromCfgLocal*retval
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label43 (h:*label43)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label43) (h:*label43)
-    * label *label43
+   91 label *label402
+   92 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write null processor5 ":buildBlockFromCfg:config"
+   94 write false processor5 ":buildBlockFromCfg*finished"
+   95 write 2 processor5 "@counter"
+   96 label *label403
+   97 wait 1e-15
+   98 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+   99 jump *label403 equal *tmp300 false
+  100 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  101 jump *label404 always
+  102 label *label404
   103 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
-    * label *label44
+  104 label *label405
+  105 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  106 write null processor5 ":buildBlockFromCfg:config"
+  107 write false processor5 ":buildBlockFromCfg*finished"
+  108 write 2 processor5 "@counter"
+  109 label *label406
+  110 wait 1e-15
+  111 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  112 jump *label406 equal *tmp300 false
+  113 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  114 jump *label407 always
+  115 label *label407
   116 label *label40
   117 label *label41
   118 label *label330
 
   184 write *tmp162 processor5 ".titaniumDrill"
   185 jump *label54 equal .scrap false
   186 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label56 (h:*label56)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label56) (h:*label56)
-    * label *label56
+  187 label *label408
+  188 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  189 write null processor5 ":buildBlockFromCfg:config"
+  190 write false processor5 ":buildBlockFromCfg*finished"
+  191 write 2 processor5 "@counter"
+  192 label *label409
+  193 wait 1e-15
+  194 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  195 jump *label409 equal *tmp300 false
+  196 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  197 jump *label410 always
+  198 label *label410
   199 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
-    * label *label57
+  200 label *label411
+  201 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  202 write null processor5 ":buildBlockFromCfg:config"
+  203 write false processor5 ":buildBlockFromCfg*finished"
+  204 write 2 processor5 "@counter"
+  205 label *label412
+  206 wait 1e-15
+  207 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  208 jump *label412 equal *tmp300 false
+  209 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  210 jump *label413 always
+  211 label *label413
   212 set .sandContainer :buildBlockFromCfgLocal*retval
   213 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   214 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
-    * label *label58
+  215 label *label414
+  216 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  217 write null processor5 ":buildBlockFromCfg:config"
+  218 write false processor5 ":buildBlockFromCfg*finished"
+  219 write 2 processor5 "@counter"
+  220 label *label415
+  221 wait 1e-15
+  222 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  223 jump *label415 equal *tmp300 false
+  224 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  225 jump *label416 always
+  226 label *label416
   227 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
-    * label *label59
+  228 label *label417
+  229 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  230 write null processor5 ":buildBlockFromCfg:config"
+  231 write false processor5 ":buildBlockFromCfg*finished"
+  232 write 2 processor5 "@counter"
+  233 label *label418
+  234 wait 1e-15
+  235 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  236 jump *label418 equal *tmp300 false
+  237 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  238 jump *label419 always
+  239 label *label419
   240 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
-    * label *label60
+  241 label *label420
+  242 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  243 write null processor5 ":buildBlockFromCfg:config"
+  244 write false processor5 ":buildBlockFromCfg*finished"
+  245 write 2 processor5 "@counter"
+  246 label *label421
+  247 wait 1e-15
+  248 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  249 jump *label421 equal *tmp300 false
+  250 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  251 jump *label422 always
+  252 label *label422
   253 label *label54
   254 label *label55
   255 write .sandContainer processor7 ".sandContainer"
 
   514 label *label377
   515 jump *label99 equal .scrap false
   516 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label101 (h:*label101)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label101) (h:*label101)
-    * label *label101
+  517 label *label423
+  518 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  519 write null processor5 ":buildBlockFromCfg:config"
+  520 write false processor5 ":buildBlockFromCfg*finished"
+  521 write 2 processor5 "@counter"
+  522 label *label424
+  523 wait 1e-15
+  524 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  525 jump *label424 equal *tmp300 false
+  526 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  527 jump *label425 always
+  528 label *label425
   529 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label102 (h:*label102)
-    * call *label24 *invalid :buildBlockFromCfgLocal*retval (m:*label102) (h:*label102)
-    * label *label102
+  530 label *label426
+  531 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  532 write null processor5 ":buildBlockFromCfg:config"
+  533 write false processor5 ":buildBlockFromCfg*finished"
+  534 write 2 processor5 "@counter"
+  535 label *label427
+  536 wait 1e-15
+  537 read *tmp300 processor5 ":buildBlockFromCfg*finished"
+  538 jump *label427 equal *tmp300 false
+  539 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  540 jump *label428 always
+  541 label *label428
   542 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   543 write false processor6 ":setScrapContainer*finished"
   544 write 1 processor6 "@counter"
 
  1061 label *label160
  1062 label *label153
  1063 end
-    * label *label24
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write null processor5 ":buildBlockFromCfg:config"
-    * write false processor5 ":buildBlockFromCfg*finished"
-    * write 2 processor5 "@counter"
-    * label *label169
-    * wait 1e-15
-    * read *tmp300 processor5 ":buildBlockFromCfg*finished"
-    * jump *label169 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label168 always
-    * label *label168
-    * return :buildBlockFromCfgLocal*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    74 jump *label40 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
    76 label *label399
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   77 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    78 write null processor5 ":buildBlockFromCfg:config"
    79 write false processor5 ":buildBlockFromCfg*finished"
    80 write 2 processor5 "@counter"
 
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    91 label *label402
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   92 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"
    94 write false processor5 ":buildBlockFromCfg*finished"
    95 write 2 processor5 "@counter"
 
    97 wait 1e-15
    98 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    99 jump *label403 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   100 jump *label404 always
   101 label *label404
   102 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
   103 label *label405
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   111 jump *label406 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label407 always
   113 label *label407
   114 label *label40
 
   183 jump *label54 equal .scrap false
   184 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   185 label *label408
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  186 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   187 write null processor5 ":buildBlockFromCfg:config"
   188 write false processor5 ":buildBlockFromCfg*finished"
   189 write 2 processor5 "@counter"
 
   191 wait 1e-15
   192 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   193 jump *label409 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   194 jump *label410 always
   195 label *label410
   196 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   197 label *label411
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  198 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   199 write null processor5 ":buildBlockFromCfg:config"
   200 write false processor5 ":buildBlockFromCfg*finished"
   201 write 2 processor5 "@counter"
 
   210 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   211 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   212 label *label414
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  213 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   214 write null processor5 ":buildBlockFromCfg:config"
   215 write false processor5 ":buildBlockFromCfg*finished"
   216 write 2 processor5 "@counter"
 
   218 wait 1e-15
   219 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   220 jump *label415 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   221 jump *label416 always
   222 label *label416
   223 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   224 label *label417
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  225 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   226 write null processor5 ":buildBlockFromCfg:config"
   227 write false processor5 ":buildBlockFromCfg*finished"
   228 write 2 processor5 "@counter"
 
   230 wait 1e-15
   231 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   232 jump *label418 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   233 jump *label419 always
   234 label *label419
   235 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   236 label *label420
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  237 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   238 write null processor5 ":buildBlockFromCfg:config"
   239 write false processor5 ":buildBlockFromCfg*finished"
   240 write 2 processor5 "@counter"
 
   242 wait 1e-15
   243 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   244 jump *label421 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   245 jump *label422 always
   246 label *label422
   247 label *label54
 
   509 jump *label99 equal .scrap false
   510 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   511 label *label423
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  512 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   513 write null processor5 ":buildBlockFromCfg:config"
   514 write false processor5 ":buildBlockFromCfg*finished"
   515 write 2 processor5 "@counter"
 
   517 wait 1e-15
   518 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   519 jump *label424 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   520 jump *label425 always
   521 label *label425
   522 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   523 label *label426
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  524 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   525 write null processor5 ":buildBlockFromCfg:config"
   526 write false processor5 ":buildBlockFromCfg*finished"
   527 write 2 processor5 "@counter"
 
   529 wait 1e-15
   530 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   531 jump *label427 equal *tmp300 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   532 jump *label428 always
   533 label *label428
   534 write .sandContainer processor6 ":setScrapContainer:scrapContainer"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
    72 write 400 processor5 ".powerTarget"
    73 set .sandContainer .core
    74 jump *label40 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
    75 label *label399
    76 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    77 write null processor5 ":buildBlockFromCfg:config"
 
    86 label *label401
    87 set .sandContainer :buildBlockFromCfgLocal*retval
    88 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    89 label *label402
    90 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    91 write null processor5 ":buildBlockFromCfg:config"
 
    97 jump *label403 equal *tmp300 false
    98 jump *label404 always
    99 label *label404
-    * set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
   100 label *label405
   101 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
   102 write null processor5 ":buildBlockFromCfg:config"
 
   178 write *tmp162 processor2 ".titaniumDrill"
   179 write *tmp162 processor5 ".titaniumDrill"
   180 jump *label54 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   181 label *label408
   182 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   183 write null processor5 ":buildBlockFromCfg:config"
 
   189 jump *label409 equal *tmp300 false
   190 jump *label410 always
   191 label *label410
-    * set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   192 label *label411
   193 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   194 write null processor5 ":buildBlockFromCfg:config"
 
   203 label *label413
   204 set .sandContainer :buildBlockFromCfgLocal*retval
   205 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   206 label *label414
   207 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   208 write null processor5 ":buildBlockFromCfg:config"
 
   214 jump *label415 equal *tmp300 false
   215 jump *label416 always
   216 label *label416
-    * set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   217 label *label417
   218 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   219 write null processor5 ":buildBlockFromCfg:config"
 
   225 jump *label418 equal *tmp300 false
   226 jump *label419 always
   227 label *label419
-    * set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   228 label *label420
   229 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   230 write null processor5 ":buildBlockFromCfg:config"
 
   499 jump *label377 always
   500 label *label377
   501 jump *label99 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   502 label *label423
   503 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   504 write null processor5 ":buildBlockFromCfg:config"
 
   510 jump *label424 equal *tmp300 false
   511 jump *label425 always
   512 label *label425
-    * set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   513 label *label426
   514 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   515 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-35 instructions):
 
    34 wait 1e-15
    35 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    36 jump *label319 equal *tmp300 false
-    * jump *label320 always
    37 label *label320
    38 label *label321
    39 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
 
    44 wait 1e-15
    45 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    46 jump *label322 equal *tmp300 false
-    * jump *label323 always
    47 label *label323
    48 label *label324
    49 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
 
    54 wait 1e-15
    55 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    56 jump *label325 equal *tmp300 false
-    * jump *label326 always
    57 label *label326
    58 label *label327
    59 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
 
    64 wait 1e-15
    65 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    66 jump *label328 equal *tmp300 false
-    * jump *label329 always
    67 label *label329
    68 write 400 processor5 ".powerTarget"
    69 set .sandContainer .core
 
    78 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    79 jump *label400 equal *tmp300 false
    80 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label401 always
    81 label *label401
    82 set .sandContainer :buildBlockFromCfgLocal*retval
    83 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
    90 wait 1e-15
    91 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    92 jump *label403 equal *tmp300 false
-    * jump *label404 always
    93 label *label404
    94 label *label405
    95 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
 
   100 wait 1e-15
   101 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   102 jump *label406 equal *tmp300 false
-    * jump *label407 always
   103 label *label407
   104 label *label40
   105 label *label41
 
   112 wait 1e-15
   113 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   114 jump *label331 equal *tmp300 false
-    * jump *label332 always
   115 label *label332
   116 label *label333
   117 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
 
   122 wait 1e-15
   123 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   124 jump *label334 equal *tmp300 false
-    * jump *label335 always
   125 label *label335
   126 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   127 write false processor5 ":meetTargetCfg*finished"
 
   164 read *tmp181 processor5 ":buildFirstTitaniumDrillAt*finished"
   165 jump *label53 equal *tmp181 false
   166 read *tmp162 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label47 always
   167 label *label47
   168 write *tmp162 processor2 ".titaniumDrill"
   169 write *tmp162 processor5 ".titaniumDrill"
 
   177 wait 1e-15
   178 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   179 jump *label409 equal *tmp300 false
-    * jump *label410 always
   180 label *label410
   181 label *label411
   182 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
 
   188 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   189 jump *label412 equal *tmp300 false
   190 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label413 always
   191 label *label413
   192 set .sandContainer :buildBlockFromCfgLocal*retval
   193 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
   200 wait 1e-15
   201 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   202 jump *label415 equal *tmp300 false
-    * jump *label416 always
   203 label *label416
   204 label *label417
   205 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
 
   210 wait 1e-15
   211 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   212 jump *label418 equal *tmp300 false
-    * jump *label419 always
   213 label *label419
   214 label *label420
   215 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
 
   220 wait 1e-15
   221 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   222 jump *label421 equal *tmp300 false
-    * jump *label422 always
   223 label *label422
   224 label *label54
   225 label *label55
 
   233 wait 1e-15
   234 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   235 jump *label337 equal *tmp300 false
-    * jump *label338 always
   236 label *label338
   237 label *label339
   238 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
 
   243 wait 1e-15
   244 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   245 jump *label340 equal *tmp300 false
-    * jump *label341 always
   246 label *label341
   247 label *label342
   248 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
 
   253 wait 1e-15
   254 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   255 jump *label343 equal *tmp300 false
-    * jump *label344 always
   256 label *label344
   257 write 80 processor5 ".graphiteSurplus"
   258 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
 
   319 wait 1e-15
   320 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   321 jump *label346 equal *tmp300 false
-    * jump *label347 always
   322 label *label347
   323 label *label348
   324 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
 
   329 wait 1e-15
   330 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   331 jump *label349 equal *tmp300 false
-    * jump *label350 always
   332 label *label350
   333 label *label351
   334 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
 
   339 wait 1e-15
   340 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   341 jump *label352 equal *tmp300 false
-    * jump *label353 always
   342 label *label353
   343 label *label354
   344 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
 
   349 wait 1e-15
   350 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   351 jump *label355 equal *tmp300 false
-    * jump *label356 always
   352 label *label356
   353 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   354 label *label83
 
   407 wait 1e-15
   408 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   409 jump *label358 equal *tmp300 false
-    * jump *label359 always
   410 label *label359
   411 label *label360
   412 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
 
   417 wait 1e-15
   418 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   419 jump *label361 equal *tmp300 false
-    * jump *label362 always
   420 label *label362
   421 label *label363
   422 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
 
   427 wait 1e-15
   428 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   429 jump *label364 equal *tmp300 false
-    * jump *label365 always
   430 label *label365
   431 label *label366
   432 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
 
   437 wait 1e-15
   438 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   439 jump *label367 equal *tmp300 false
-    * jump *label368 always
   440 label *label368
   441 label *label369
   442 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
 
   447 wait 1e-15
   448 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   449 jump *label370 equal *tmp300 false
-    * jump *label371 always
   450 label *label371
   451 label *label372
   452 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
 
   457 wait 1e-15
   458 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   459 jump *label373 equal *tmp300 false
-    * jump *label374 always
   460 label *label374
   461 write 200 processor5 ".graphiteSurplus"
   462 label *label375
 
   468 wait 1e-15
   469 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   470 jump *label376 equal *tmp300 false
-    * jump *label377 always
   471 label *label377
   472 jump *label99 equal .scrap false
   473 label *label423
 
   479 wait 1e-15
   480 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   481 jump *label424 equal *tmp300 false
-    * jump *label425 always
   482 label *label425
   483 label *label426
   484 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
 
   489 wait 1e-15
   490 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   491 jump *label427 equal *tmp300 false
-    * jump *label428 always
   492 label *label428
   493 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   494 write false processor6 ":setScrapContainer*finished"
 
   508 wait 1e-15
   509 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   510 jump *label379 equal *tmp300 false
-    * jump *label380 always
   511 label *label380
   512 label *label381
   513 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
 
   518 wait 1e-15
   519 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   520 jump *label382 equal *tmp300 false
-    * jump *label383 always
   521 label *label383
   522 label *label384
   523 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
 
   528 wait 1e-15
   529 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   530 jump *label385 equal *tmp300 false
-    * jump *label386 always
   531 label *label386
   532 write 1000 processor5 ".siliconSurplus"
   533 write 20 processor5 ".siliconMonoSurplus"
 
   814 wait 1e-15
   815 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   816 jump *label388 equal *tmp300 false
-    * jump *label389 always
   817 label *label389
   818 write 10 processor5 ".metaglassSurplus"
   819 write 0 AÕFFJS-micro-processor9 ".polyTarget"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   269 write .core AÕFFJS-micro-processor9 ".core"
   270 write bank1 AÕFFJS-micro-processor9 ".bank"
   271 label *label186
-    * read *tmp198 @this "AJEMJJ-graphite-press0"
+  272 set *tmp198 AJEMJJ-graphite-press0
   273 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   274 label *label187
   275 label *label190
-    * read *tmp198 @this "AJTJK-battery1"
+  276 set *tmp198 AJTJK-battery1
   277 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
   278 label *label191
   279 label *label194
-    * read *tmp198 @this "ALTJL-battery2"
+  280 set *tmp198 ALTJL-battery2
   281 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
   282 label *label195
   283 label *label198
-    * read *tmp198 @this "AJRJM-combustion-generator3"
+  284 set *tmp198 AJRJM-combustion-generator3
   285 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   286 label *label199
   287 label *label202
-    * read *tmp198 @this "ALMQJN-silicon-smelter4"
+  288 set *tmp198 ALMQJN-silicon-smelter4
   289 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   290 label *label203
   291 label *label206
-    * read *tmp198 @this "A{LNJO-inverted-sorter5"
+  292 set *tmp198 A{LNJO-inverted-sorter5
   293 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   294 label *label207
   295 label *label210
-    * read *tmp198 @this "A©JNJP-unloader6"
+  296 set *tmp198 A©JNJP-unloader6
   297 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   298 label *label211
   299 label *label214
-    * read *tmp198 @this "A{HNJQ-inverted-sorter7"
+  300 set *tmp198 A{HNJQ-inverted-sorter7
   301 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   302 label *label215
   303 label *label218
-    * read *tmp198 @this "AJPJR-underflow-gate8"
+  304 set *tmp198 AJPJR-underflow-gate8
   305 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   306 label *label219
   307 label *label222
-    * read *tmp198 @this "AÕFFJS-micro-processor9"
+  308 set *tmp198 AÕFFJS-micro-processor9
   309 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   310 label *label223
   311 label *label68

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   697 wait 1e-15
   698 read *tmp296 processor5 ":buildRemoteBlock*finished"
   699 jump *label301 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  700 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
   701 label *label302
-    * set .thoriumGenerator :buildRemoteBlockLocal*retval
   702 read :buildRemoteBlockLocal:x processor3 ".node1X"
   703 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   704 label *label303
 
   750 wait 1e-15
   751 read *tmp296 processor5 ":buildRemoteBlock*finished"
   752 jump *label313 equal *tmp296 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  753 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
   754 label *label314
-    * set .thoriumBattery :buildRemoteBlockLocal*retval
   755 read :buildRemoteBlockLocal:x processor3 ".containerX"
   756 read :buildRemoteBlockLocal:y processor3 ".containerY"
   757 label *label315

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 ubind @poly
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY *tmp145 .core
-    * label *label34
    20 jump *label33 equal .core null
-    * label *label35
    21 ulocate ore core true @sand *tmp148 *tmp149 *tmp147 *tmp150
    22 op equal .scrap *tmp147 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"
    25 write .scrap processor7 ".scrap"
-    * label *label318
    26 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    27 write null processor5 ":buildBlockFromCfg:config"
    28 write false processor5 ":buildBlockFromCfg*finished"
 
    31 wait 1e-15
    32 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    33 jump *label319 equal *tmp300 false
-    * label *label320
-    * label *label321
    34 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    35 write null processor5 ":buildBlockFromCfg:config"
    36 write false processor5 ":buildBlockFromCfg*finished"
 
    39 wait 1e-15
    40 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    41 jump *label322 equal *tmp300 false
-    * label *label323
-    * label *label324
    42 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    43 write null processor5 ":buildBlockFromCfg:config"
    44 write false processor5 ":buildBlockFromCfg*finished"
 
    47 wait 1e-15
    48 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    49 jump *label325 equal *tmp300 false
-    * label *label326
-    * label *label327
    50 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    51 write null processor5 ":buildBlockFromCfg:config"
    52 write false processor5 ":buildBlockFromCfg*finished"
 
    55 wait 1e-15
    56 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    57 jump *label328 equal *tmp300 false
-    * label *label329
    58 write 400 processor5 ".powerTarget"
    59 set .sandContainer .core
    60 jump *label40 equal .scrap false
-    * label *label399
    61 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    62 write null processor5 ":buildBlockFromCfg:config"
    63 write false processor5 ":buildBlockFromCfg*finished"
 
    67 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    68 jump *label400 equal *tmp300 false
    69 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label401
    70 set .sandContainer :buildBlockFromCfgLocal*retval
    71 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label402
    72 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    73 write null processor5 ":buildBlockFromCfg:config"
    74 write false processor5 ":buildBlockFromCfg*finished"
 
    77 wait 1e-15
    78 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    79 jump *label403 equal *tmp300 false
-    * label *label404
-    * label *label405
    80 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
    81 write null processor5 ":buildBlockFromCfg:config"
    82 write false processor5 ":buildBlockFromCfg*finished"
 
    85 wait 1e-15
    86 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    87 jump *label406 equal *tmp300 false
-    * label *label407
    88 label *label40
-    * label *label41
-    * label *label330
    89 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    90 write null processor5 ":buildBlockFromCfg:config"
    91 write false processor5 ":buildBlockFromCfg*finished"
 
    94 wait 1e-15
    95 read *tmp300 processor5 ":buildBlockFromCfg*finished"
    96 jump *label331 equal *tmp300 false
-    * label *label332
-    * label *label333
    97 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
    98 write null processor5 ":buildBlockFromCfg:config"
    99 write false processor5 ":buildBlockFromCfg*finished"
 
   102 wait 1e-15
   103 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   104 jump *label334 equal *tmp300 false
-    * label *label335
   105 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   106 write false processor5 ":meetTargetCfg*finished"
   107 write 7 processor5 "@counter"
 
   127 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   128 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   129 jump *label50 notEqual :buildFirstTitaniumDrill:result false
-    * label *label227
   130 set .ERROR "Cannot locate spot for titanium drill"
   131 stop
-    * label *label228
   132 label *label50
-    * label *label51
   133 write @pneumatic-drill processor2 ".nextBlock"
   134 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
   135 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
   140 read *tmp181 processor5 ":buildFirstTitaniumDrillAt*finished"
   141 jump *label53 equal *tmp181 false
   142 read *tmp162 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label47
   143 write *tmp162 processor2 ".titaniumDrill"
   144 write *tmp162 processor5 ".titaniumDrill"
   145 jump *label54 equal .scrap false
-    * label *label408
   146 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   147 write null processor5 ":buildBlockFromCfg:config"
   148 write false processor5 ":buildBlockFromCfg*finished"
 
   151 wait 1e-15
   152 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   153 jump *label409 equal *tmp300 false
-    * label *label410
-    * label *label411
   154 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   155 write null processor5 ":buildBlockFromCfg:config"
   156 write false processor5 ":buildBlockFromCfg*finished"
 
   160 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   161 jump *label412 equal *tmp300 false
   162 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label413
   163 set .sandContainer :buildBlockFromCfgLocal*retval
   164 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label414
   165 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   166 write null processor5 ":buildBlockFromCfg:config"
   167 write false processor5 ":buildBlockFromCfg*finished"
 
   170 wait 1e-15
   171 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   172 jump *label415 equal *tmp300 false
-    * label *label416
-    * label *label417
   173 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   174 write null processor5 ":buildBlockFromCfg:config"
   175 write false processor5 ":buildBlockFromCfg*finished"
 
   178 wait 1e-15
   179 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   180 jump *label418 equal *tmp300 false
-    * label *label419
-    * label *label420
   181 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   182 write null processor5 ":buildBlockFromCfg:config"
   183 write false processor5 ":buildBlockFromCfg*finished"
 
   186 wait 1e-15
   187 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   188 jump *label421 equal *tmp300 false
-    * label *label422
   189 label *label54
-    * label *label55
   190 write .sandContainer processor7 ".sandContainer"
-    * label *label336
   191 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   192 write null processor5 ":buildBlockFromCfg:config"
   193 write false processor5 ":buildBlockFromCfg*finished"
 
   196 wait 1e-15
   197 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   198 jump *label337 equal *tmp300 false
-    * label *label338
-    * label *label339
   199 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   200 write null processor5 ":buildBlockFromCfg:config"
   201 write false processor5 ":buildBlockFromCfg*finished"
 
   204 wait 1e-15
   205 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   206 jump *label340 equal *tmp300 false
-    * label *label341
-    * label *label342
   207 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   208 write null processor5 ":buildBlockFromCfg:config"
   209 write false processor5 ":buildBlockFromCfg*finished"
 
   212 wait 1e-15
   213 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   214 jump *label343 equal *tmp300 false
-    * label *label344
   215 write 80 processor5 ".graphiteSurplus"
   216 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   217 write processor10 processor5 ":buildBlockFromCfg:config"
 
   221 wait 1e-15
   222 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   223 jump *label65 equal *tmp195 false
-    * label *label64
   224 write processor1 AÕFFJS-micro-processor9 ".timer"
   225 write processor2 AÕFFJS-micro-processor9 ".display"
   226 write .core AÕFFJS-micro-processor9 ".core"
   227 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * label *label186
   228 set *tmp198 AJEMJJ-graphite-press0
   229 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
-    * label *label187
-    * label *label190
   230 set *tmp198 AJTJK-battery1
   231 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
-    * label *label191
-    * label *label194
   232 set *tmp198 ALTJL-battery2
   233 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
-    * label *label195
-    * label *label198
   234 set *tmp198 AJRJM-combustion-generator3
   235 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
-    * label *label199
-    * label *label202
   236 set *tmp198 ALMQJN-silicon-smelter4
   237 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
-    * label *label203
-    * label *label206
   238 set *tmp198 A{LNJO-inverted-sorter5
   239 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
-    * label *label207
-    * label *label210
   240 set *tmp198 A©JNJP-unloader6
   241 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
-    * label *label211
-    * label *label214
   242 set *tmp198 A{HNJQ-inverted-sorter7
   243 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
-    * label *label215
-    * label *label218
   244 set *tmp198 AJPJR-underflow-gate8
   245 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
-    * label *label219
-    * label *label222
   246 set *tmp198 AÕFFJS-micro-processor9
   247 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
-    * label *label223
-    * label *label68
   248 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
-    * label *label345
   249 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   250 write null processor5 ":buildBlockFromCfg:config"
   251 write false processor5 ":buildBlockFromCfg*finished"
 
   254 wait 1e-15
   255 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   256 jump *label346 equal *tmp300 false
-    * label *label347
-    * label *label348
   257 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   258 write null processor5 ":buildBlockFromCfg:config"
   259 write false processor5 ":buildBlockFromCfg*finished"
 
   262 wait 1e-15
   263 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   264 jump *label349 equal *tmp300 false
-    * label *label350
-    * label *label351
   265 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   266 write null processor5 ":buildBlockFromCfg:config"
   267 write false processor5 ":buildBlockFromCfg*finished"
 
   270 wait 1e-15
   271 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   272 jump *label352 equal *tmp300 false
-    * label *label353
-    * label *label354
   273 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   274 write null processor5 ":buildBlockFromCfg:config"
   275 write false processor5 ":buildBlockFromCfg*finished"
 
   278 wait 1e-15
   279 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   280 jump *label355 equal *tmp300 false
-    * label *label356
   281 write 1 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label83
   282 write 5 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label84
   283 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   284 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
   285 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   286 write 20 processor5 ".siliconSurplus"
   287 write 2 processor5 ".leadSurplus"
-    * label *label390
   288 write 0 processor5 ":meetTarget:block"
   289 write 0 processor5 ":meetTarget:copper"
   290 write 0 processor5 ":meetTarget:lead"
 
   305 write null processor2 ".nextBlock"
   306 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   307 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label392
   308 label *label86
   309 write false processor5 ":supplyBase*finished"
   310 write 8 processor5 "@counter"
 
   316 jump *label90 greaterThanEq *tmp205 300
   317 jump *label88 always
   318 label *label90
-    * label *label91
-    * label *label87
   319 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   320 jump *label86 lessThan *tmp81 3
   321 label *label88
   322 write 65 processor5 ".siliconSurplus"
-    * label *label357
   323 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   324 write null processor5 ":buildBlockFromCfg:config"
   325 write false processor5 ":buildBlockFromCfg*finished"
 
   328 wait 1e-15
   329 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   330 jump *label358 equal *tmp300 false
-    * label *label359
-    * label *label360
   331 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   332 write null processor5 ":buildBlockFromCfg:config"
   333 write false processor5 ":buildBlockFromCfg*finished"
 
   336 wait 1e-15
   337 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   338 jump *label361 equal *tmp300 false
-    * label *label362
-    * label *label363
   339 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   340 write null processor5 ":buildBlockFromCfg:config"
   341 write false processor5 ":buildBlockFromCfg*finished"
 
   344 wait 1e-15
   345 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   346 jump *label364 equal *tmp300 false
-    * label *label365
-    * label *label366
   347 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   348 write null processor5 ":buildBlockFromCfg:config"
   349 write false processor5 ":buildBlockFromCfg*finished"
 
   352 wait 1e-15
   353 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   354 jump *label367 equal *tmp300 false
-    * label *label368
-    * label *label369
   355 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   356 write null processor5 ":buildBlockFromCfg:config"
   357 write false processor5 ":buildBlockFromCfg*finished"
 
   360 wait 1e-15
   361 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   362 jump *label370 equal *tmp300 false
-    * label *label371
-    * label *label372
   363 write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg:cfg"
   364 write null processor5 ":buildBlockFromCfg:config"
   365 write false processor5 ":buildBlockFromCfg*finished"
 
   368 wait 1e-15
   369 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   370 jump *label373 equal *tmp300 false
-    * label *label374
   371 write 200 processor5 ".graphiteSurplus"
-    * label *label375
   372 write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFromCfg:cfg"
   373 write null processor5 ":buildBlockFromCfg:config"
   374 write false processor5 ":buildBlockFromCfg*finished"
 
   377 wait 1e-15
   378 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   379 jump *label376 equal *tmp300 false
-    * label *label377
   380 jump *label99 equal .scrap false
-    * label *label423
   381 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   382 write null processor5 ":buildBlockFromCfg:config"
   383 write false processor5 ":buildBlockFromCfg*finished"
 
   386 wait 1e-15
   387 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   388 jump *label424 equal *tmp300 false
-    * label *label425
-    * label *label426
   389 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   390 write null processor5 ":buildBlockFromCfg:config"
   391 write false processor5 ":buildBlockFromCfg*finished"
 
   394 wait 1e-15
   395 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   396 jump *label427 equal *tmp300 false
-    * label *label428
   397 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   398 write false processor6 ":setScrapContainer*finished"
   399 write 1 processor6 "@counter"
 
   402 read *tmp220 processor6 ":setScrapContainer*finished"
   403 jump *label103 equal *tmp220 false
   404 label *label99
-    * label *label100
-    * label *label378
   405 write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg"
   406 write null processor5 ":buildBlockFromCfg:config"
   407 write false processor5 ":buildBlockFromCfg*finished"
 
   410 wait 1e-15
   411 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   412 jump *label379 equal *tmp300 false
-    * label *label380
-    * label *label381
   413 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   414 write null processor5 ":buildBlockFromCfg:config"
   415 write false processor5 ":buildBlockFromCfg*finished"
 
   418 wait 1e-15
   419 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   420 jump *label382 equal *tmp300 false
-    * label *label383
-    * label *label384
   421 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   422 write null processor5 ":buildBlockFromCfg:config"
   423 write false processor5 ":buildBlockFromCfg*finished"
 
   426 wait 1e-15
   427 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   428 jump *label385 equal *tmp300 false
-    * label *label386
   429 write 1000 processor5 ".siliconSurplus"
   430 write 20 processor5 ".siliconMonoSurplus"
   431 write 100 processor5 ".metaglassSurplus"
   432 write 4 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label107
   433 write 3 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label108
-    * label *label393
   434 write 0 processor5 ":meetTarget:block"
   435 write 0 processor5 ":meetTarget:copper"
   436 write 0 processor5 ":meetTarget:lead"
 
   451 write null processor2 ".nextBlock"
   452 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   453 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label395
-    * label *label110
   454 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   455 jump *label112 greaterThanEq *tmp82 2
   456 label *label231
 
   460 wait 1e-15
   461 read *tmp225 processor5 ":supplyBase*finished"
   462 jump *label113 equal *tmp225 false
-    * label *label111
   463 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   464 jump *label231 lessThan *tmp82 2
   465 label *label112
   466 write 2 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label114
-    * label *label115
   467 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   468 jump *label117 greaterThanEq *tmp80 2
   469 label *label232
 
   473 wait 1e-15
   474 read *tmp227 processor5 ":supplyBase*finished"
   475 jump *label118 equal *tmp227 false
-    * label *label116
   476 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   477 jump *label232 lessThan *tmp80 2
   478 label *label117
 
   498 jump *label120 equal *tmp239 false
   499 write false processor3 ":stopLocation*finished"
   500 write 3 processor3 "@counter"
-    * label *label119
   501 write null processor2 ".nextBlock"
   502 write 10 processor5 ".graphiteSurplus"
   503 write 50 processor5 ".metaglassSurplus"
 
   525 jump *label124 equal *tmp248 false
   526 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   527 jump *label125 notEqual :buildThoriumDrill:result false
-    * label *label229
   528 set .ERROR "Cannot locate spot for thorium drill"
   529 stop
-    * label *label230
   530 label *label125
-    * label *label126
   531 write @laser-drill processor5 ":buildBlockAt:block"
   532 read *tmp53 processor3 ".drillX"
   533 write *tmp53 processor5 ":buildBlockAt:x"
 
   545 read .thoriumDrill processor5 ":buildBlockAt*retval"
   546 read :buildRemoteBlockLocal:x processor3 ".water1X"
   547 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * label *label294
   548 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   549 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   550 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   554 wait 1e-15
   555 read *tmp296 processor5 ":buildRemoteBlock*finished"
   556 jump *label295 equal *tmp296 false
-    * label *label296
   557 read :buildRemoteBlockLocal:x processor3 ".water2X"
   558 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * label *label297
   559 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   560 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   561 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   565 wait 1e-15
   566 read *tmp296 processor5 ":buildRemoteBlock*finished"
   567 jump *label298 equal *tmp296 false
-    * label *label299
   568 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   569 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * label *label300
   570 write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlock:cfg"
   571 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   572 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   577 read *tmp296 processor5 ":buildRemoteBlock*finished"
   578 jump *label301 equal *tmp296 false
   579 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
-    * label *label302
   580 read :buildRemoteBlockLocal:x processor3 ".node1X"
   581 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * label *label303
   582 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   583 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   584 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   588 wait 1e-15
   589 read *tmp296 processor5 ":buildRemoteBlock*finished"
   590 jump *label304 equal *tmp296 false
-    * label *label305
   591 read :buildRemoteBlockLocal:x processor3 ".node2X"
   592 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * label *label306
   593 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   594 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   595 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   599 wait 1e-15
   600 read *tmp296 processor5 ":buildRemoteBlock*finished"
   601 jump *label307 equal *tmp296 false
-    * label *label308
   602 read :buildRemoteBlockLocal:x processor3 ".panelX"
   603 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * label *label309
   604 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   605 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   606 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   610 wait 1e-15
   611 read *tmp296 processor5 ":buildRemoteBlock*finished"
   612 jump *label310 equal *tmp296 false
-    * label *label311
   613 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   614 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * label *label312
   615 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   616 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   617 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   622 read *tmp296 processor5 ":buildRemoteBlock*finished"
   623 jump *label313 equal *tmp296 false
   624 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
-    * label *label314
   625 read :buildRemoteBlockLocal:x processor3 ".containerX"
   626 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * label *label315
   627 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   628 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   629 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   634 read *tmp296 processor5 ":buildRemoteBlock*finished"
   635 jump *label316 equal *tmp296 false
   636 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label317
   637 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   638 write .thoriumDrill processor2 ".thoriumDrill"
   639 write .thoriumContainer processor2 ".thoriumContainer"
 
   647 wait 1e-15
   648 read *tmp271 processor6 ":setThoriumContainer*finished"
   649 jump *label139 equal *tmp271 false
-    * label *label121
   650 write null processor2 ".nextBlock"
-    * label *label140
   651 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   652 jump *label142 greaterThanEq *tmp82 3
   653 label *label233
 
   657 wait 1e-15
   658 read *tmp273 processor5 ":supplyBase*finished"
   659 jump *label143 equal *tmp273 false
-    * label *label141
   660 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   661 jump *label233 lessThan *tmp82 3
   662 label *label142
   663 op add :setMonoTarget.2:target 4 .scrap
   664 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label144
   665 op mul *tmp275 700 .scrap
   666 op add *tmp276 3209 *tmp275
   667 write *tmp276 AÕFFJS-micro-processor9 ".powerTarget"
   668 write 120 processor5 ".siliconMonoSurplus"
   669 write 0 processor5 ".leadSurplus"
-    * label *label387
   670 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   671 write null processor5 ":buildBlockFromCfg:config"
   672 write false processor5 ":buildBlockFromCfg*finished"
 
   675 wait 1e-15
   676 read *tmp300 processor5 ":buildBlockFromCfg*finished"
   677 jump *label388 equal *tmp300 false
-    * label *label389
   678 write 10 processor5 ".metaglassSurplus"
   679 write 0 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label146
   680 write 0 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label147
   681 write 1 AÕFFJS-micro-processor9 ".megaTarget"
-    * label *label148
-    * label *label396
   682 write 0 processor5 ":meetTarget:block"
   683 write 0 processor5 ":meetTarget:copper"
   684 write 0 processor5 ":meetTarget:lead"
 
   699 write null processor2 ".nextBlock"
   700 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   701 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label398
   702 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   703 op sub :tmp *tmp82 1
   704 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   709 label *label150
   710 ucontrol move :x :y
   711 ucontrol payEnter
-    * label *label151
   712 read *tmp83 AÕFFJS-micro-processor9 ".megas"
   713 jump *label150 equal *tmp83 false
-    * label *label152
   714 write true AÕFFJS-micro-processor9 ".finished"
   715 control enabled processor1 false
   716 control enabled processor8 false
 
   719 control enabled processor3 false
   720 control enabled processor5 false
   721 control enabled processor11 false
-    * label *label262
   722 label *label263
   723 ubind @mega
   724 set :flagUnits:firstUnit @unit
-    * label *label264
   725 jump *label263 equal :flagUnits:firstUnit null
-    * label *label265
   726 op add :flagUnits:x .coreX 8
   727 label *label266
   728 ucontrol flag :flagUnits:x
   729 op add :flagUnits:x :flagUnits:x 4
   730 ubind @mega
-    * label *label267
   731 jump *label266 notEqual @unit :flagUnits:firstUnit
-    * label *label268
-    * label *label269
-    * label *label270
   732 label *label271
   733 ubind @poly
   734 set :flagUnits:firstUnit @unit
-    * label *label272
   735 jump *label271 equal :flagUnits:firstUnit null
-    * label *label273
   736 op add :flagUnits:x .coreX 8
   737 label *label274
   738 ucontrol flag :flagUnits:x
   739 op add :flagUnits:x :flagUnits:x 4
   740 ubind @poly
-    * label *label275
   741 jump *label274 notEqual @unit :flagUnits:firstUnit
-    * label *label276
-    * label *label277
-    * label *label278
   742 label *label279
   743 ubind @mono
   744 set :flagUnits:firstUnit @unit
-    * label *label280
   745 jump *label279 equal :flagUnits:firstUnit null
-    * label *label281
   746 op add :flagUnits:x .coreX 8
   747 label *label282
   748 ucontrol flag :flagUnits:x
   749 op add :flagUnits:x :flagUnits:x 4
   750 ubind @mono
-    * label *label283
   751 jump *label282 notEqual @unit :flagUnits:firstUnit
-    * label *label284
-    * label *label285
-    * label *label286
   752 label *label287
   753 ubind @flare
   754 set :flagUnits:firstUnit @unit
-    * label *label288
   755 jump *label287 equal :flagUnits:firstUnit null
-    * label *label289
   756 op add :flagUnits:x .coreX 8
   757 label *label290
   758 ucontrol flag :flagUnits:x
   759 op add :flagUnits:x :flagUnits:x 4
   760 ubind @flare
-    * label *label291
   761 jump *label290 notEqual @unit :flagUnits:firstUnit
-    * label *label292
-    * label *label293
   762 label *label158
   763 op add :lineUpUnits:y .coreY 6
-    * label *label234
   764 ubind @mega
   765 set :lineUpUnits:firstUnit @unit
   766 label *label235
 
   771 jump *label236 equal *tmp318 false
   772 ucontrol stop
   773 label *label236
-    * label *label237
   774 ubind @mega
-    * label *label238
   775 jump *label235 notEqual @unit :lineUpUnits:firstUnit
-    * label *label239
-    * label *label240
   776 op add :lineUpUnits:y .coreY 2
-    * label *label241
   777 ubind @poly
   778 set :lineUpUnits:firstUnit @unit
   779 label *label242
 
   784 jump *label243 equal *tmp318 false
   785 ucontrol stop
   786 label *label243
-    * label *label244
   787 ubind @poly
-    * label *label245
   788 jump *label242 notEqual @unit :lineUpUnits:firstUnit
-    * label *label246
-    * label *label247
   789 op sub :lineUpUnits:y .coreY 2
-    * label *label248
   790 ubind @mono
   791 set :lineUpUnits:firstUnit @unit
   792 label *label249
 
   797 jump *label250 equal *tmp318 false
   798 ucontrol stop
   799 label *label250
-    * label *label251
   800 ubind @mono
-    * label *label252
   801 jump *label249 notEqual @unit :lineUpUnits:firstUnit
-    * label *label253
-    * label *label254
   802 op sub :lineUpUnits:y .coreY 6
-    * label *label255
   803 ubind @flare
   804 set :lineUpUnits:firstUnit @unit
   805 label *label256
 
   810 jump *label257 equal *tmp318 false
   811 ucontrol stop
   812 label *label257
-    * label *label258
   813 ubind @flare
-    * label *label259
   814 jump *label256 notEqual @unit :lineUpUnits:firstUnit
-    * label *label260
-    * label *label261
-    * label *label159
   815 jump *label158 always
-    * label *label160
-    * label *label153
   816 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-1 instructions):
 
   313 read *tmp204 processor5 ":supplyBase*finished"
   314 jump *label89 equal *tmp204 false
   315 sensor *tmp205 AJTJK-battery1 @totalPower
-    * jump *label90 greaterThanEq *tmp205 300
-    * jump *label88 always
+  316 jump *label88 lessThan *tmp205 300
   317 label *label90
   318 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   319 jump *label86 lessThan *tmp81 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   314 jump *label89 equal *tmp204 false
   315 sensor *tmp205 AJTJK-battery1 @totalPower
   316 jump *label88 lessThan *tmp205 300
-    * label *label90
   317 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   318 jump *label86 lessThan *tmp81 3
   319 label *label88

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-1 instructions):
 
   811 ubind @flare
   812 jump *label256 notEqual @unit :lineUpUnits:firstUnit
   813 jump *label158 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    16 label *label33
    17 ubind @poly
    18 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp145 .core
+   19 ulocate building core false @copper .coreX .coreY 0 .core
    20 jump *label33 equal .core null
-    * ulocate ore core true @sand *tmp148 *tmp149 *tmp147 *tmp150
+   21 ulocate ore core true @sand 0 0 *tmp147 0
    22 op equal .scrap *tmp147 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"

Final code before resolving virtual instructions:

        label *label28                                               BaseBuilder.mnd: require "Display.mnd" remote display;
    0:  read *tmp32 processor2 "*signature"                          ...
    1:  jump *label28 notEqual *tmp32 "0:v1"                         ...
        label *label29                                               BaseBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
    2:  read *tmp71 processor3 "*signature"                          ...
    3:  jump *label29 notEqual *tmp71 "3290b8c661787058:v1"          ...
        label *label30                                               BaseBuilder.mnd: require "MonoController.mnd" remote monoController;
    4:  read *tmp97 processor7 "*signature"                          ...
    5:  jump *label30 notEqual *tmp97 "0:v1"                         ...
        label *label31                                               BaseBuilder.mnd: require "PolyController.mnd" remote polyController;
    6:  read *tmp100 processor6 "*signature"                         ...
    7:  jump *label31 notEqual *tmp100 "c7cc7825e82cc574:v1"         ...
        label *label32                                               BaseBuilder.mnd: require "BuilderController.mnd" remote builderController;
    8:  read *tmp142 processor5 "*signature"                         ...
    9:  jump *label32 notEqual *tmp142 "77658b7b93afc77c:v1"         ...
   10:  set .ERROR ""                                                BaseBuilder.mnd: remote var ERROR = "";
        label *label33                                               BaseBuilder.mnd: do
   11:  ubind @poly                                                  BaseBuilder.mnd: builder = ubind(@poly);
   12:  set .builder @unit                                           ...
   13:  ulocate building core false @copper .coreX .coreY 0 .core    BaseBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   14:  jump *label33 equal .core null                               BaseBuilder.mnd: do
   15:  ulocate ore core true @sand 0 0 *tmp147 0                    BaseBuilder.mnd: scrap = !ulocate(:ore, @sand);
   16:  op equal .scrap *tmp147 false                                ...
   17:  write .scrap processor2 ".scrap"                             BaseBuilder.mnd: display.scrap = scrap;
   18:  write .scrap processor5 ".scrap"                             BaseBuilder.mnd: builderController.scrap = scrap;
   19:  write .scrap processor7 ".scrap"                             BaseBuilder.mnd: monoController.scrap = scrap;
   20:  write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCf BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   21:  write null processor5 ":buildBlockFromCfg:config"            ...
   22:  write false processor5 ":buildBlockFromCfg*finished"         ...
   23:  write 2 processor5 "@counter"                                ...
        label *label319                                              ...
   24:  wait 1e-15                                                   ...
   25:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   26:  jump *label319 equal *tmp300 false                           ...
   27:  write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"  ...
   28:  write null processor5 ":buildBlockFromCfg:config"            ...
   29:  write false processor5 ":buildBlockFromCfg*finished"         ...
   30:  write 2 processor5 "@counter"                                ...
        label *label322                                              ...
   31:  wait 1e-15                                                   ...
   32:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   33:  jump *label322 equal *tmp300 false                           ...
   34:  write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"  ...
   35:  write null processor5 ":buildBlockFromCfg:config"            ...
   36:  write false processor5 ":buildBlockFromCfg*finished"         ...
   37:  write 2 processor5 "@counter"                                ...
        label *label325                                              ...
   38:  wait 1e-15                                                   ...
   39:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   40:  jump *label325 equal *tmp300 false                           ...
   41:  write "AJRJM-combustion-generator3" processor5 ":buildBlock ...
   42:  write null processor5 ":buildBlockFromCfg:config"            ...
   43:  write false processor5 ":buildBlockFromCfg*finished"         ...
   44:  write 2 processor5 "@counter"                                ...
        label *label328                                              ...
   45:  wait 1e-15                                                   ...
   46:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   47:  jump *label328 equal *tmp300 false                           ...
   48:  write 400 processor5 ".powerTarget"                          BaseBuilder.mnd: builderController.powerTarget = 400;
   49:  set .sandContainer .core                                     BaseBuilder.mnd: sandContainer = core;
   50:  jump *label40 equal .scrap false                             BaseBuilder.mnd: if scrap then
   51:  write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   52:  write null processor5 ":buildBlockFromCfg:config"            ...
   53:  write false processor5 ":buildBlockFromCfg*finished"         ...
   54:  write 2 processor5 "@counter"                                ...
        label *label400                                              ...
   55:  wait 1e-15                                                   ...
   56:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   57:  jump *label400 equal *tmp300 false                           ...
   58:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
   59:  set .sandContainer :buildBlockFromCfgLocal*retval            BaseBuilder.mnd: sandContainer = buildBlockFromCfgLocal(PULVERIZER1);
   60:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai BaseBuilder.mnd: builderController.sandContainer = sandContainer;
   61:  write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCf BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   62:  write null processor5 ":buildBlockFromCfg:config"            ...
   63:  write false processor5 ":buildBlockFromCfg*finished"         ...
   64:  write 2 processor5 "@counter"                                ...
        label *label403                                              ...
   65:  wait 1e-15                                                   ...
   66:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   67:  jump *label403 equal *tmp300 false                           ...
   68:  write "APTJf-power-node28" processor5 ":buildBlockFromCfg:c ...
   69:  write null processor5 ":buildBlockFromCfg:config"            ...
   70:  write false processor5 ":buildBlockFromCfg*finished"         ...
   71:  write 2 processor5 "@counter"                                ...
        label *label406                                              ...
   72:  wait 1e-15                                                   ...
   73:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   74:  jump *label406 equal *tmp300 false                           ...
        label *label40                                               BaseBuilder.mnd: if scrap then
   75:  write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   76:  write null processor5 ":buildBlockFromCfg:config"            ...
   77:  write false processor5 ":buildBlockFromCfg*finished"         ...
   78:  write 2 processor5 "@counter"                                ...
        label *label331                                              ...
   79:  wait 1e-15                                                   ...
   80:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   81:  jump *label331 equal *tmp300 false                           ...
   82:  write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromC ...
   83:  write null processor5 ":buildBlockFromCfg:config"            ...
   84:  write false processor5 ":buildBlockFromCfg*finished"         ...
   85:  write 2 processor5 "@counter"                                ...
        label *label334                                              ...
   86:  wait 1e-15                                                   ...
   87:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
   88:  jump *label334 equal *tmp300 false                           ...
   89:  write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg: BaseBuilder.mnd: builderController.meetTargetCfg(cfg);
   90:  write false processor5 ":meetTargetCfg*finished"             ...
   91:  write 7 processor5 "@counter"                                ...
        label *label48                                               ...
   92:  wait 1e-15                                                   ...
   93:  read *tmp164 processor5 ":meetTargetCfg*finished"            ...
   94:  jump *label48 equal *tmp164 false                            ...
   95:  write @ore-titanium processor2 ".nextBlock"                  BaseBuilder.mnd: display.nextBlock = @ore-titanium;
   96:  write .coreX processor3 ":findDrillLocation:x"               BaseBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   97:  write .coreY processor3 ":findDrillLocation:y"               ...
   98:  write @unit processor3 ":findDrillLocation:unit"             ...
   99:  write @titanium processor3 ":findDrillLocation:item"         ...
  100:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  101:  write 2 processor3 ":findDrillLocation:size"                 ...
  102:  write 4 processor3 ":findDrillLocation:limit"                ...
  103:  write false processor3 ":findDrillLocation*finished"         ...
  104:  write 1 processor3 "@counter"                                ...
        label *label49                                               ...
  105:  wait 1e-15                                                   ...
  106:  read *tmp175 processor3 ":findDrillLocation*finished"        ...
  107:  jump *label49 equal *tmp175 false                            ...
  108:  read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocat ...
  109:  read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocat ...
  110:  read :buildFirstTitaniumDrill:result processor3 ":findDrillL ...
  111:  jump *label50 notEqual :buildFirstTitaniumDrill:result false BaseBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  112:  set .ERROR "Cannot locate spot for titanium drill"           BaseBuilder.mnd: ERROR = error;
  113:  stop                                                         BaseBuilder.mnd: stopProcessor();
        label *label50                                               BaseBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  114:  write @pneumatic-drill processor2 ".nextBlock"               BaseBuilder.mnd: display.nextBlock = @pneumatic-drill;
  115:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit BaseBuilder.mnd: return builderController.buildFirstTitaniumDrillAt(dx, dy);
  116:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
  117:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
  118:  write 3 processor5 "@counter"                                ...
        label *label53                                               ...
  119:  wait 1e-15                                                   ...
  120:  read *tmp181 processor5 ":buildFirstTitaniumDrillAt*finished ...
  121:  jump *label53 equal *tmp181 false                            ...
  122:  read *tmp162 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
  123:  write *tmp162 processor2 ".titaniumDrill"                    BaseBuilder.mnd: display.titaniumDrill = titaniumDrill;
  124:  write *tmp162 processor5 ".titaniumDrill"                    BaseBuilder.mnd: builderController.titaniumDrill = titaniumDrill;
  125:  jump *label54 equal .scrap false                             BaseBuilder.mnd: if scrap then
  126:  write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  127:  write null processor5 ":buildBlockFromCfg:config"            ...
  128:  write false processor5 ":buildBlockFromCfg*finished"         ...
  129:  write 2 processor5 "@counter"                                ...
        label *label409                                              ...
  130:  wait 1e-15                                                   ...
  131:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  132:  jump *label409 equal *tmp300 false                           ...
  133:  write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cf ...
  134:  write null processor5 ":buildBlockFromCfg:config"            ...
  135:  write false processor5 ":buildBlockFromCfg*finished"         ...
  136:  write 2 processor5 "@counter"                                ...
        label *label412                                              ...
  137:  wait 1e-15                                                   ...
  138:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  139:  jump *label412 equal *tmp300 false                           ...
  140:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
  141:  set .sandContainer :buildBlockFromCfgLocal*retval            BaseBuilder.mnd: sandContainer = buildBlockFromCfgLocal(CONTAINER_A);
  142:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai BaseBuilder.mnd: builderController.sandContainer = sandContainer;
  143:  write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  144:  write null processor5 ":buildBlockFromCfg:config"            ...
  145:  write false processor5 ":buildBlockFromCfg*finished"         ...
  146:  write 2 processor5 "@counter"                                ...
        label *label415                                              ...
  147:  wait 1e-15                                                   ...
  148:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  149:  jump *label415 equal *tmp300 false                           ...
  150:  write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCf ...
  151:  write null processor5 ":buildBlockFromCfg:config"            ...
  152:  write false processor5 ":buildBlockFromCfg*finished"         ...
  153:  write 2 processor5 "@counter"                                ...
        label *label418                                              ...
  154:  wait 1e-15                                                   ...
  155:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  156:  jump *label418 equal *tmp300 false                           ...
  157:  write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCf ...
  158:  write null processor5 ":buildBlockFromCfg:config"            ...
  159:  write false processor5 ":buildBlockFromCfg*finished"         ...
  160:  write 2 processor5 "@counter"                                ...
        label *label421                                              ...
  161:  wait 1e-15                                                   ...
  162:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  163:  jump *label421 equal *tmp300 false                           ...
        label *label54                                               BaseBuilder.mnd: if scrap then
  164:  write .sandContainer processor7 ".sandContainer"             BaseBuilder.mnd: monoController.sandContainer = sandContainer;
  165:  write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  166:  write null processor5 ":buildBlockFromCfg:config"            ...
  167:  write false processor5 ":buildBlockFromCfg*finished"         ...
  168:  write 2 processor5 "@counter"                                ...
        label *label337                                              ...
  169:  wait 1e-15                                                   ...
  170:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  171:  jump *label337 equal *tmp300 false                           ...
  172:  write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCf ...
  173:  write null processor5 ":buildBlockFromCfg:config"            ...
  174:  write false processor5 ":buildBlockFromCfg*finished"         ...
  175:  write 2 processor5 "@counter"                                ...
        label *label340                                              ...
  176:  wait 1e-15                                                   ...
  177:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  178:  jump *label340 equal *tmp300 false                           ...
  179:  write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg" ...
  180:  write null processor5 ":buildBlockFromCfg:config"            ...
  181:  write false processor5 ":buildBlockFromCfg*finished"         ...
  182:  write 2 processor5 "@counter"                                ...
        label *label343                                              ...
  183:  wait 1e-15                                                   ...
  184:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  185:  jump *label343 equal *tmp300 false                           ...
  186:  write 80 processor5 ".graphiteSurplus"                       BaseBuilder.mnd: builderController.graphiteSurplus = 80;
  187:  write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, config);
  188:  write processor10 processor5 ":buildBlockFromCfg:config"     ...
  189:  write false processor5 ":buildBlockFromCfg*finished"         ...
  190:  write 2 processor5 "@counter"                                ...
        label *label65                                               ...
  191:  wait 1e-15                                                   ...
  192:  read *tmp195 processor5 ":buildBlockFromCfg*finished"        ...
  193:  jump *label65 equal *tmp195 false                            ...
  194:  write processor1 AÕFFJS-micro-processor9 ".timer"            BaseBuilder.mnd: processor.timer = timer;
  195:  write processor2 AÕFFJS-micro-processor9 ".display"          BaseBuilder.mnd: processor.display = display;
  196:  write .core AÕFFJS-micro-processor9 ".core"                  BaseBuilder.mnd: processor.core = core;
  197:  write bank1 AÕFFJS-micro-processor9 ".bank"                  BaseBuilder.mnd: processor.bank = bank1;
  198:  set *tmp198 AJEMJJ-graphite-press0                           BaseBuilder.mnd: processor.write(@this.read(block), block);
  199:  write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press ...
  200:  set *tmp198 AJTJK-battery1                                  ...
  201:  write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"      ...
  202:  set *tmp198 ALTJL-battery2                                  ...
  203:  write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"      ...
  204:  set *tmp198 AJRJM-combustion-generator3                     ...
  205:  write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-gen ...
  206:  set *tmp198 ALMQJN-silicon-smelter4                          ...
  207:  write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelte ...
  208:  set *tmp198 A{LNJO-inverted-sorter5                          ...
  209:  write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorte ...
  210:  set *tmp198 A©JNJP-unloader6                                 ...
  211:  write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"     ...
  212:  set *tmp198 A{HNJQ-inverted-sorter7                          ...
  213:  write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorte ...
  214:  set *tmp198 AJPJR-underflow-gate8                           ...
  215:  write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate ...
  216:  set *tmp198 AÕFFJS-micro-processor9                          ...
  217:  write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processo ...
  218:  write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unlo BaseBuilder.mnd: processor.write(@this.read(UNLOADER_A), UNLOADER_A);
  219:  write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  220:  write null processor5 ":buildBlockFromCfg:config"            ...
  221:  write false processor5 ":buildBlockFromCfg*finished"         ...
  222:  write 2 processor5 "@counter"                                ...
        label *label346                                              ...
  223:  wait 1e-15                                                   ...
  224:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  225:  jump *label346 equal *tmp300 false                           ...
  226:  write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg ...
  227:  write null processor5 ":buildBlockFromCfg:config"            ...
  228:  write false processor5 ":buildBlockFromCfg*finished"         ...
  229:  write 2 processor5 "@counter"                                ...
        label *label349                                              ...
  230:  wait 1e-15                                                   ...
  231:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  232:  jump *label349 equal *tmp300 false                           ...
  233:  write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCf ...
  234:  write null processor5 ":buildBlockFromCfg:config"            ...
  235:  write false processor5 ":buildBlockFromCfg*finished"         ...
  236:  write 2 processor5 "@counter"                                ...
        label *label352                                              ...
  237:  wait 1e-15                                                   ...
  238:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  239:  jump *label352 equal *tmp300 false                           ...
  240:  write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg: ...
  241:  write null processor5 ":buildBlockFromCfg:config"            ...
  242:  write false processor5 ":buildBlockFromCfg*finished"         ...
  243:  write 2 processor5 "@counter"                                ...
        label *label355                                              ...
  244:  wait 1e-15                                                   ...
  245:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  246:  jump *label355 equal *tmp300 false                           ...
  247:  write 1 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  248:  write 5 AÕFFJS-micro-processor9 ".monoTarget"                BaseBuilder.mnd: processor.monoTarget = target;
  249:  write 85 AÕFFJS-micro-processor9 ".pressTarget"              BaseBuilder.mnd: processor.pressTarget = 85;
  250:  write 150 AÕFFJS-micro-processor9 ".smelterTarget"           BaseBuilder.mnd: processor.smelterTarget = 150;
  251:  write 30 AÕFFJS-micro-processor9 ".kilnTarget"               BaseBuilder.mnd: processor.kilnTarget = 30;
  252:  write 20 processor5 ".siliconSurplus"                        BaseBuilder.mnd: builderController.siliconSurplus = 20;
  253:  write 2 processor5 ".leadSurplus"                            BaseBuilder.mnd: builderController.leadSurplus = 2;
  254:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  255:  write 0 processor5 ":meetTarget:copper"                      ...
  256:  write 0 processor5 ":meetTarget:lead"                        ...
  257:  write 0 processor5 ":meetTarget:graphite"                    ...
  258:  write 0 processor5 ":meetTarget:silicon"                     ...
  259:  write 0 processor5 ":meetTarget:titanium"                    ...
  260:  write 0 processor5 ":meetTarget:metaglass"                   ...
  261:  write 0 processor5 ":meetTarget:thorium"                     ...
  262:  write false processor5 ":meetTarget:forBuild"                ...
  263:  write true processor5 ":meetTarget:isNoTarget"               ...
  264:  write false processor5 ":meetTarget*finished"                ...
  265:  write 6 processor5 "@counter"                                ...
        label *label391                                              ...
  266:  wait 1e-15                                                   ...
  267:  read *tmp312 processor5 ":meetTarget*finished"               ...
  268:  jump *label391 equal *tmp312 false                           ...
  269:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  270:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  271:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  272:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
        label *label86                                               BaseBuilder.mnd: do
  273:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  274:  write 8 processor5 "@counter"                                ...
        label *label89                                               ...
  275:  wait 1e-15                                                   ...
  276:  read *tmp204 processor5 ":supplyBase*finished"               ...
  277:  jump *label89 equal *tmp204 false                            ...
  278:  sensor *tmp205 AJTJK-battery1 @totalPower                   BaseBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  279:  jump *label88 lessThan *tmp205 300                           ...
  280:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 BaseBuilder.mnd: while processor.monos < 3;
  281:  jump *label86 lessThan *tmp81 3                              BaseBuilder.mnd: do
        label *label88                                               ...
  282:  write 65 processor5 ".siliconSurplus"                        BaseBuilder.mnd: builderController.siliconSurplus = 65;
  283:  write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  284:  write null processor5 ":buildBlockFromCfg:config"            ...
  285:  write false processor5 ":buildBlockFromCfg*finished"         ...
  286:  write 2 processor5 "@counter"                                ...
        label *label358                                              ...
  287:  wait 1e-15                                                   ...
  288:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  289:  jump *label358 equal *tmp300 false                           ...
  290:  write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFrom ...
  291:  write null processor5 ":buildBlockFromCfg:config"            ...
  292:  write false processor5 ":buildBlockFromCfg*finished"         ...
  293:  write 2 processor5 "@counter"                                ...
        label *label361                                              ...
  294:  wait 1e-15                                                   ...
  295:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  296:  jump *label361 equal *tmp300 false                           ...
  297:  write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"    ...
  298:  write null processor5 ":buildBlockFromCfg:config"            ...
  299:  write false processor5 ":buildBlockFromCfg*finished"         ...
  300:  write 2 processor5 "@counter"                                ...
        label *label364                                              ...
  301:  wait 1e-15                                                   ...
  302:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  303:  jump *label364 equal *tmp300 false                           ...
  304:  write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFrom ...
  305:  write null processor5 ":buildBlockFromCfg:config"            ...
  306:  write false processor5 ":buildBlockFromCfg*finished"         ...
  307:  write 2 processor5 "@counter"                                ...
        label *label367                                              ...
  308:  wait 1e-15                                                   ...
  309:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  310:  jump *label367 equal *tmp300 false                           ...
  311:  write "AAKJ\-steam-generator18" processor5 ":buildBlockFrom ...
  312:  write null processor5 ":buildBlockFromCfg:config"            ...
  313:  write false processor5 ":buildBlockFromCfg*finished"         ...
  314:  write 2 processor5 "@counter"                                ...
        label *label370                                              ...
  315:  wait 1e-15                                                   ...
  316:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  317:  jump *label370 equal *tmp300 false                           ...
  318:  write "AKFRJ^-multi-press20" processor5 ":buildBlockFromCfg: ...
  319:  write null processor5 ":buildBlockFromCfg:config"            ...
  320:  write false processor5 ":buildBlockFromCfg*finished"         ...
  321:  write 2 processor5 "@counter"                                ...
        label *label373                                              ...
  322:  wait 1e-15                                                   ...
  323:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  324:  jump *label373 equal *tmp300 false                           ...
  325:  write 200 processor5 ".graphiteSurplus"                      BaseBuilder.mnd: builderController.graphiteSurplus = 200;
  326:  write "ALQIJ]-silicon-smelter19" processor5 ":buildBlockFrom BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  327:  write null processor5 ":buildBlockFromCfg:config"            ...
  328:  write false processor5 ":buildBlockFromCfg*finished"         ...
  329:  write 2 processor5 "@counter"                                ...
        label *label376                                              ...
  330:  wait 1e-15                                                   ...
  331:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  332:  jump *label376 equal *tmp300 false                           ...
  333:  jump *label99 equal .scrap false                             BaseBuilder.mnd: if scrap then
  334:  write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  335:  write null processor5 ":buildBlockFromCfg:config"            ...
  336:  write false processor5 ":buildBlockFromCfg*finished"         ...
  337:  write 2 processor5 "@counter"                                ...
        label *label424                                              ...
  338:  wait 1e-15                                                   ...
  339:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  340:  jump *label424 equal *tmp300 false                           ...
  341:  write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:c ...
  342:  write null processor5 ":buildBlockFromCfg:config"            ...
  343:  write false processor5 ":buildBlockFromCfg*finished"         ...
  344:  write 2 processor5 "@counter"                                ...
        label *label427                                              ...
  345:  wait 1e-15                                                   ...
  346:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  347:  jump *label427 equal *tmp300 false                           ...
  348:  write .sandContainer processor6 ":setScrapContainer:scrapCon BaseBuilder.mnd: polyController.setScrapContainer(sandContainer);
  349:  write false processor6 ":setScrapContainer*finished"         ...
  350:  write 1 processor6 "@counter"                                ...
        label *label103                                              ...
  351:  wait 1e-15                                                   ...
  352:  read *tmp220 processor6 ":setScrapContainer*finished"        ...
  353:  jump *label103 equal *tmp220 false                           ...
        label *label99                                               BaseBuilder.mnd: if scrap then
  354:  write "A©HFJ_-unloader21" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  355:  write null processor5 ":buildBlockFromCfg:config"            ...
  356:  write false processor5 ":buildBlockFromCfg*finished"         ...
  357:  write 2 processor5 "@counter"                                ...
        label *label379                                              ...
  358:  wait 1e-15                                                   ...
  359:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  360:  jump *label379 equal *tmp300 false                           ...
  361:  write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFrom ...
  362:  write null processor5 ":buildBlockFromCfg:config"            ...
  363:  write false processor5 ":buildBlockFromCfg*finished"         ...
  364:  write 2 processor5 "@counter"                                ...
        label *label382                                              ...
  365:  wait 1e-15                                                   ...
  366:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  367:  jump *label382 equal *tmp300 false                           ...
  368:  write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBl ...
  369:  write null processor5 ":buildBlockFromCfg:config"            ...
  370:  write false processor5 ":buildBlockFromCfg*finished"         ...
  371:  write 2 processor5 "@counter"                                ...
        label *label385                                              ...
  372:  wait 1e-15                                                   ...
  373:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  374:  jump *label385 equal *tmp300 false                           ...
  375:  write 1000 processor5 ".siliconSurplus"                      BaseBuilder.mnd: builderController.siliconSurplus = 1000;
  376:  write 20 processor5 ".siliconMonoSurplus"                    BaseBuilder.mnd: builderController.siliconMonoSurplus = 20;
  377:  write 100 processor5 ".metaglassSurplus"                     BaseBuilder.mnd: builderController.metaglassSurplus = 100;
  378:  write 4 AÕFFJS-micro-processor9 ".monoTarget"                BaseBuilder.mnd: processor.monoTarget = target;
  379:  write 3 AÕFFJS-micro-processor9 ".polyTarget"                BaseBuilder.mnd: processor.polyTarget = target;
  380:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  381:  write 0 processor5 ":meetTarget:copper"                      ...
  382:  write 0 processor5 ":meetTarget:lead"                        ...
  383:  write 0 processor5 ":meetTarget:graphite"                    ...
  384:  write 0 processor5 ":meetTarget:silicon"                     ...
  385:  write 0 processor5 ":meetTarget:titanium"                    ...
  386:  write 0 processor5 ":meetTarget:metaglass"                   ...
  387:  write 0 processor5 ":meetTarget:thorium"                     ...
  388:  write false processor5 ":meetTarget:forBuild"                ...
  389:  write true processor5 ":meetTarget:isNoTarget"               ...
  390:  write false processor5 ":meetTarget*finished"                ...
  391:  write 6 processor5 "@counter"                                ...
        label *label394                                              ...
  392:  wait 1e-15                                                   ...
  393:  read *tmp312 processor5 ":meetTarget*finished"               ...
  394:  jump *label394 equal *tmp312 false                           ...
  395:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  396:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  397:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  398:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
  399:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 2 do
  400:  jump *label112 greaterThanEq *tmp82 2                        ...
        label *label231                                              ...
  401:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  402:  write 8 processor5 "@counter"                                ...
        label *label113                                              ...
  403:  wait 1e-15                                                   ...
  404:  read *tmp225 processor5 ":supplyBase*finished"               ...
  405:  jump *label113 equal *tmp225 false                           ...
  406:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 2 do
  407:  jump *label231 lessThan *tmp82 2                             ...
        label *label112                                              ...
  408:  write 2 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  409:  read *tmp80 AÕFFJS-micro-processor9 ".flares"                BaseBuilder.mnd: while processor.flares < 2 do
  410:  jump *label117 greaterThanEq *tmp80 2                        ...
        label *label232                                              ...
  411:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  412:  write 8 processor5 "@counter"                                ...
        label *label118                                              ...
  413:  wait 1e-15                                                   ...
  414:  read *tmp227 processor5 ":supplyBase*finished"               ...
  415:  jump *label118 equal *tmp227 false                           ...
  416:  read *tmp80 AÕFFJS-micro-processor9 ".flares"                BaseBuilder.mnd: while processor.flares < 2 do
  417:  jump *label232 lessThan *tmp80 2                             ...
        label *label117                                              ...
  418:  write @ore-titanium processor2 ".nextBlock"                  BaseBuilder.mnd: display.nextBlock = @ore-titanium;
  419:  ubind @flare                                                 BaseBuilder.mnd: ubind(@flare);
  420:  read :blocksBuildTitaniumDrills:current processor3 ".locatio BaseBuilder.mnd: var current = oreLocator.locations;
  421:  write .coreX processor3 ":findDrillLocation:x"               BaseBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  422:  write .coreY processor3 ":findDrillLocation:y"               ...
  423:  write @unit processor3 ":findDrillLocation:unit"             ...
  424:  write @titanium processor3 ":findDrillLocation:item"         ...
  425:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  426:  write 4 processor3 ":findDrillLocation:size"                 ...
  427:  write 1000000000 processor3 ":findDrillLocation:limit"       ...
  428:  write false processor3 ":findDrillLocation*finished"         ...
  429:  write 1 processor3 "@counter"                                ...
  430:  ubind .builder                                               BaseBuilder.mnd: ubind(builder);
  431:  write :blocksBuildTitaniumDrills:current processor5 ":buildT BaseBuilder.mnd: builderController.buildTitaniumDrills(current);
  432:  write false processor5 ":buildTitaniumDrills*finished"       ...
  433:  write 5 processor5 "@counter"                                ...
        label *label120                                              ...
  434:  wait 1e-15                                                   ...
  435:  read *tmp239 processor5 ":buildTitaniumDrills*finished"      ...
  436:  jump *label120 equal *tmp239 false                           ...
  437:  write false processor3 ":stopLocation*finished"              BaseBuilder.mnd: async(oreLocator.stopLocation());
  438:  write 3 processor3 "@counter"                                ...
  439:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  440:  write 10 processor5 ".graphiteSurplus"                       BaseBuilder.mnd: builderController.graphiteSurplus = 10;
  441:  write 50 processor5 ".metaglassSurplus"                      BaseBuilder.mnd: builderController.metaglassSurplus = 50;
  442:  write @ore-thorium processor2 ".nextBlock"                   BaseBuilder.mnd: display.nextBlock = @ore-thorium;
  443:  write .coreX processor3 ":layoutThoriumDrill:x"              BaseBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  444:  write .coreY processor3 ":layoutThoriumDrill:y"              ...
  445:  write @unit processor3 ":layoutThoriumDrill:unit"            ...
  446:  write 7 processor3 ":layoutThoriumDrill:limit"               ...
  447:  write false processor3 ":layoutThoriumDrill*finished"        ...
  448:  write 2 processor3 "@counter"                                ...
        label *label122                                              ...
  449:  wait 1e-15                                                   ...
  450:  read *tmp244 processor3 ":layoutThoriumDrill*finished"       ...
  451:  jump *label122 equal *tmp244 false                           ...
  452:  write "AJJJ~-laser-drill52" processor5 ":meetTargetCfg:cfg" BaseBuilder.mnd: builderController.meetTargetCfg(LASER_DRILL);
  453:  write false processor5 ":meetTargetCfg*finished"             ...
  454:  write 7 processor5 "@counter"                                ...
        label *label123                                              ...
  455:  wait 1e-15                                                   ...
  456:  read *tmp247 processor5 ":meetTargetCfg*finished"            ...
  457:  jump *label123 equal *tmp247 false                           ...
        label *label124                                              BaseBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  458:  wait 1e-15                                                   ...
  459:  read *tmp248 processor3 ":layoutThoriumDrill*finished"       ...
  460:  jump *label124 equal *tmp248 false                           ...
  461:  read :buildThoriumDrill:result processor3 ":layoutThoriumDri ...
  462:  jump *label125 notEqual :buildThoriumDrill:result false      BaseBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  463:  set .ERROR "Cannot locate spot for thorium drill"            BaseBuilder.mnd: ERROR = error;
  464:  stop                                                         BaseBuilder.mnd: stopProcessor();
        label *label125                                              BaseBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  465:  write @laser-drill processor5 ":buildBlockAt:block"          BaseBuilder.mnd: thoriumDrill = builderController.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  466:  read *tmp53 processor3 ".drillX"                             ...
  467:  write *tmp53 processor5 ":buildBlockAt:x"                    ...
  468:  read *tmp54 processor3 ".drillY"                             ...
  469:  write *tmp54 processor5 ":buildBlockAt:y"                    ...
  470:  write null processor5 ":buildBlockAt:rotation"               ...
  471:  write 0 processor5 ":buildBlockAt:config"                    ...
  472:  write -1 processor5 ":buildBlockAt:index"                    ...
  473:  write false processor5 ":buildBlockAt*finished"              ...
  474:  write 1 processor5 "@counter"                                ...
        label *label128                                              ...
  475:  wait 1e-15                                                   ...
  476:  read *tmp258 processor5 ":buildBlockAt*finished"             ...
  477:  jump *label128 equal *tmp258 false                           ...
  478:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  479:  read :buildRemoteBlockLocal:x processor3 ".water1X"          BaseBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  480:  read :buildRemoteBlockLocal:y processor3 ".water1Y"          ...
  481:  write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  482:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  483:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  484:  write false processor5 ":buildRemoteBlock*finished"          ...
  485:  write 4 processor5 "@counter"                                ...
        label *label295                                              ...
  486:  wait 1e-15                                                   ...
  487:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  488:  jump *label295 equal *tmp296 false                           ...
  489:  read :buildRemoteBlockLocal:x processor3 ".water2X"          BaseBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  490:  read :buildRemoteBlockLocal:y processor3 ".water2Y"          ...
  491:  write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  492:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  493:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  494:  write false processor5 ":buildRemoteBlock*finished"          ...
  495:  write 4 processor5 "@counter"                                ...
        label *label298                                              ...
  496:  wait 1e-15                                                   ...
  497:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  498:  jump *label298 equal *tmp296 false                           ...
  499:  read :buildRemoteBlockLocal:x processor3 ".generatorX"       BaseBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  500:  read :buildRemoteBlockLocal:y processor3 ".generatorY"       ...
  501:  write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  502:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  503:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  504:  write false processor5 ":buildRemoteBlock*finished"          ...
  505:  write 4 processor5 "@counter"                                ...
        label *label301                                              ...
  506:  wait 1e-15                                                   ...
  507:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  508:  jump *label301 equal *tmp296 false                           ...
  509:  read .thoriumGenerator processor5 ":buildRemoteBlock*retval" BaseBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  510:  read :buildRemoteBlockLocal:x processor3 ".node1X"           BaseBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  511:  read :buildRemoteBlockLocal:y processor3 ".node1Y"           ...
  512:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  513:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  514:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  515:  write false processor5 ":buildRemoteBlock*finished"          ...
  516:  write 4 processor5 "@counter"                                ...
        label *label304                                              ...
  517:  wait 1e-15                                                   ...
  518:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  519:  jump *label304 equal *tmp296 false                           ...
  520:  read :buildRemoteBlockLocal:x processor3 ".node2X"           BaseBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  521:  read :buildRemoteBlockLocal:y processor3 ".node2Y"           ...
  522:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  523:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  524:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  525:  write false processor5 ":buildRemoteBlock*finished"          ...
  526:  write 4 processor5 "@counter"                                ...
        label *label307                                              ...
  527:  wait 1e-15                                                   ...
  528:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  529:  jump *label307 equal *tmp296 false                           ...
  530:  read :buildRemoteBlockLocal:x processor3 ".panelX"           BaseBuilder.mnd: buildRemoteBlockLocal(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  531:  read :buildRemoteBlockLocal:y processor3 ".panelY"           ...
  532:  write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:c BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  533:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  534:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  535:  write false processor5 ":buildRemoteBlock*finished"          ...
  536:  write 4 processor5 "@counter"                                ...
        label *label310                                              ...
  537:  wait 1e-15                                                   ...
  538:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  539:  jump *label310 equal *tmp296 false                           ...
  540:  read :buildRemoteBlockLocal:x processor3 ".batteryX"         BaseBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  541:  read :buildRemoteBlockLocal:y processor3 ".batteryY"         ...
  542:  write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"   BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  543:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  544:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  545:  write false processor5 ":buildRemoteBlock*finished"          ...
  546:  write 4 processor5 "@counter"                                ...
        label *label313                                              ...
  547:  wait 1e-15                                                   ...
  548:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  549:  jump *label313 equal *tmp296 false                           ...
  550:  read .thoriumBattery processor5 ":buildRemoteBlock*retval"   BaseBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  551:  read :buildRemoteBlockLocal:x processor3 ".containerX"       BaseBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  552:  read :buildRemoteBlockLocal:y processor3 ".containerY"       ...
  553:  write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  554:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  555:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  556:  write false processor5 ":buildRemoteBlock*finished"          ...
  557:  write 4 processor5 "@counter"                                ...
        label *label316                                              ...
  558:  wait 1e-15                                                   ...
  559:  read *tmp296 processor5 ":buildRemoteBlock*finished"         ...
  560:  jump *label316 equal *tmp296 false                           ...
  561:  read :buildRemoteBlockLocal*retval processor5 ":buildRemoteB BaseBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  562:  select .thoriumContainer equal :buildRemoteBlockLocal*retval BaseBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  563:  write .thoriumDrill processor2 ".thoriumDrill"               BaseBuilder.mnd: display.thoriumDrill = thoriumDrill;
  564:  write .thoriumContainer processor2 ".thoriumContainer"       BaseBuilder.mnd: display.thoriumContainer = thoriumContainer;
  565:  write .thoriumBattery processor5 ".thoriumBattery"           BaseBuilder.mnd: builderController.thoriumBattery = thoriumBattery;
  566:  write .thoriumContainer processor5 ".thoriumContainer"       BaseBuilder.mnd: builderController.thoriumContainer = thoriumContainer;
  567:  write .thoriumGenerator processor5 ".thoriumGenerator"       BaseBuilder.mnd: builderController.thoriumGenerator = thoriumGenerator;
  568:  write .thoriumContainer processor6 ":setThoriumContainer:con BaseBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  569:  write false processor6 ":setThoriumContainer*finished"       ...
  570:  write 2 processor6 "@counter"                                ...
        label *label139                                              ...
  571:  wait 1e-15                                                   ...
  572:  read *tmp271 processor6 ":setThoriumContainer*finished"      ...
  573:  jump *label139 equal *tmp271 false                           ...
  574:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  575:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 3 do
  576:  jump *label142 greaterThanEq *tmp82 3                        ...
        label *label233                                              ...
  577:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  578:  write 8 processor5 "@counter"                                ...
        label *label143                                              ...
  579:  wait 1e-15                                                   ...
  580:  read *tmp273 processor5 ":supplyBase*finished"               ...
  581:  jump *label143 equal *tmp273 false                           ...
  582:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 3 do
  583:  jump *label233 lessThan *tmp82 3                             ...
        label *label142                                              ...
  584:  op add :setMonoTarget.2:target 4 .scrap                      BaseBuilder.mnd: setMonoTarget(4 + scrap);
  585:  write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".mono BaseBuilder.mnd: processor.monoTarget = target;
  586:  op mul *tmp275 700 .scrap                                    BaseBuilder.mnd: processor.powerTarget = 3209 + 700 * scrap;
  587:  op add *tmp276 3209 *tmp275                                  ...
  588:  write *tmp276 AÕFFJS-micro-processor9 ".powerTarget"         ...
  589:  write 120 processor5 ".siliconMonoSurplus"                   BaseBuilder.mnd: builderController.siliconMonoSurplus = 120;
  590:  write 0 processor5 ".leadSurplus"                            BaseBuilder.mnd: builderController.leadSurplus = 0;
  591:  write "AÁNBJc-multiplicative-reconstructor25" processor5 ":b BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  592:  write null processor5 ":buildBlockFromCfg:config"            ...
  593:  write false processor5 ":buildBlockFromCfg*finished"         ...
  594:  write 2 processor5 "@counter"                                ...
        label *label388                                              ...
  595:  wait 1e-15                                                   ...
  596:  read *tmp300 processor5 ":buildBlockFromCfg*finished"        ...
  597:  jump *label388 equal *tmp300 false                           ...
  598:  write 10 processor5 ".metaglassSurplus"                      BaseBuilder.mnd: builderController.metaglassSurplus = 10;
  599:  write 0 AÕFFJS-micro-processor9 ".polyTarget"                BaseBuilder.mnd: processor.polyTarget = target;
  600:  write 0 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  601:  write 1 AÕFFJS-micro-processor9 ".megaTarget"                BaseBuilder.mnd: processor.megaTarget = target;
  602:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  603:  write 0 processor5 ":meetTarget:copper"                      ...
  604:  write 0 processor5 ":meetTarget:lead"                        ...
  605:  write 0 processor5 ":meetTarget:graphite"                    ...
  606:  write 0 processor5 ":meetTarget:silicon"                     ...
  607:  write 0 processor5 ":meetTarget:titanium"                    ...
  608:  write 0 processor5 ":meetTarget:metaglass"                   ...
  609:  write 0 processor5 ":meetTarget:thorium"                     ...
  610:  write false processor5 ":meetTarget:forBuild"                ...
  611:  write true processor5 ":meetTarget:isNoTarget"               ...
  612:  write false processor5 ":meetTarget*finished"                ...
  613:  write 6 processor5 "@counter"                                ...
        label *label397                                              ...
  614:  wait 1e-15                                                   ...
  615:  read *tmp312 processor5 ":meetTarget*finished"               ...
  616:  jump *label397 equal *tmp312 false                           ...
  617:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  618:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  619:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  620:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
  621:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: var tmp = processor.polys - 1;
  622:  op sub :tmp *tmp82 1                                         ...
  623:  write :tmp AÕFFJS-micro-processor9 ".polyTarget"             BaseBuilder.mnd: processor.polyTarget = tmp;
  624:  write :tmp AÕFFJS-micro-processor9 ".polys"                  BaseBuilder.mnd: processor.polys = tmp;
  625:  write :tmp processor2 ".polys"                               BaseBuilder.mnd: display.polys = tmp;
  626:  sensor :x AÁNBJc-multiplicative-reconstructor25 @x           BaseBuilder.mnd: var x = multiplicative_rec.@x;
  627:  sensor :y AÁNBJc-multiplicative-reconstructor25 @y           BaseBuilder.mnd: var y = multiplicative_rec.@y;
        label *label150                                              BaseBuilder.mnd: do
  628:  ucontrol move :x :y 0 0 0                                    BaseBuilder.mnd: move(x, y);
  629:  ucontrol payEnter 0 0 0 0 0                                  BaseBuilder.mnd: payEnter();
  630:  read *tmp83 AÕFFJS-micro-processor9 ".megas"                 BaseBuilder.mnd: while !processor.megas;
  631:  jump *label150 equal *tmp83 false                            BaseBuilder.mnd: do
  632:  write true AÕFFJS-micro-processor9 ".finished"               BaseBuilder.mnd: processor.finished = true;
  633:  control enabled processor1 false 0 0 0                       BaseBuilder.mnd: timer.enabled = false;
  634:  control enabled processor8 false 0 0 0                       BaseBuilder.mnd: flareController.enabled = false;
  635:  control enabled processor7 false 0 0 0                       BaseBuilder.mnd: monoController.enabled = false;
  636:  control enabled processor6 false 0 0 0                       BaseBuilder.mnd: polyController.enabled = false;
  637:  control enabled processor3 false 0 0 0                       BaseBuilder.mnd: oreLocator.enabled = false;
  638:  control enabled processor5 false 0 0 0                       BaseBuilder.mnd: builderController.enabled = false;
  639:  control enabled processor11 false 0 0 0                      BaseBuilder.mnd: measurements.enabled = false;
        label *label263                                              BaseBuilder.mnd: do
  640:  ubind @mega                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  641:  set :flagUnits:firstUnit @unit                               ...
  642:  jump *label263 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  643:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label266                                              BaseBuilder.mnd: do
  644:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  645:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  646:  ubind @mega                                                  BaseBuilder.mnd: ubind(unit);
  647:  jump *label266 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label271                                              BaseBuilder.mnd: do
  648:  ubind @poly                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  649:  set :flagUnits:firstUnit @unit                               ...
  650:  jump *label271 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  651:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label274                                              BaseBuilder.mnd: do
  652:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  653:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  654:  ubind @poly                                                  BaseBuilder.mnd: ubind(unit);
  655:  jump *label274 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label279                                              BaseBuilder.mnd: do
  656:  ubind @mono                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  657:  set :flagUnits:firstUnit @unit                               ...
  658:  jump *label279 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  659:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label282                                              BaseBuilder.mnd: do
  660:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  661:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  662:  ubind @mono                                                  BaseBuilder.mnd: ubind(unit);
  663:  jump *label282 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label287                                              BaseBuilder.mnd: do
  664:  ubind @flare                                                 BaseBuilder.mnd: firstUnit = ubind(unit);
  665:  set :flagUnits:firstUnit @unit                               ...
  666:  jump *label287 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  667:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label290                                              BaseBuilder.mnd: do
  668:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  669:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  670:  ubind @flare                                                 BaseBuilder.mnd: ubind(unit);
  671:  jump *label290 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label158                                              BaseBuilder.mnd: while true do
  672:  op add :lineUpUnits:y .coreY 6                               BaseBuilder.mnd: lineUpUnits(coreY + 6, @mega);
  673:  ubind @mega                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  674:  set :lineUpUnits:firstUnit @unit                             ...
        label *label235                                              BaseBuilder.mnd: do
  675:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  676:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  677:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  678:  sensor *tmp318 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  679:  jump *label236 equal *tmp318 false                           ...
  680:  ucontrol stop 0 0 0 0 0                                      ...
        label *label236                                              ...
  681:  ubind @mega                                                  BaseBuilder.mnd: ubind(unit);
  682:  jump *label235 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  683:  op add :lineUpUnits:y .coreY 2                               BaseBuilder.mnd: lineUpUnits(coreY + 2, @poly);
  684:  ubind @poly                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  685:  set :lineUpUnits:firstUnit @unit                             ...
        label *label242                                              BaseBuilder.mnd: do
  686:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  687:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  688:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  689:  sensor *tmp318 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  690:  jump *label243 equal *tmp318 false                           ...
  691:  ucontrol stop 0 0 0 0 0                                      ...
        label *label243                                              ...
  692:  ubind @poly                                                  BaseBuilder.mnd: ubind(unit);
  693:  jump *label242 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  694:  op sub :lineUpUnits:y .coreY 2                               BaseBuilder.mnd: lineUpUnits(coreY - 2, @mono);
  695:  ubind @mono                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  696:  set :lineUpUnits:firstUnit @unit                             ...
        label *label249                                              BaseBuilder.mnd: do
  697:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  698:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  699:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  700:  sensor *tmp318 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  701:  jump *label250 equal *tmp318 false                           ...
  702:  ucontrol stop 0 0 0 0 0                                      ...
        label *label250                                              ...
  703:  ubind @mono                                                  BaseBuilder.mnd: ubind(unit);
  704:  jump *label249 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  705:  op sub :lineUpUnits:y .coreY 6                               BaseBuilder.mnd: lineUpUnits(coreY - 6, @flare);
  706:  ubind @flare                                                 BaseBuilder.mnd: var firstUnit = ubind(unit);
  707:  set :lineUpUnits:firstUnit @unit                             ...
        label *label256                                              BaseBuilder.mnd: do
  708:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  709:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  710:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  711:  sensor *tmp318 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  712:  jump *label257 equal *tmp318 false                           ...
  713:  ucontrol stop 0 0 0 0 0                                      ...
        label *label257                                              ...
  714:  ubind @flare                                                 BaseBuilder.mnd: ubind(unit);
  715:  jump *label256 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  716:  jump *label158 always 0 0                                    BaseBuilder.mnd: while true do


Performance: parsed in 852 ms, compiled in 332 ms, optimized in 1,173 ms, run in 9 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp32 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
