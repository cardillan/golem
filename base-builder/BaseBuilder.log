   658 instructions before optimizations.
    44 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
    56 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    13 instructions eliminated by Jump Optimization (5 iterations).
    44 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    10 instructions modified by Expression Optimization (3 iterations).
     1 instructions eliminated by If Expression Optimization (4 iterations).
   121 instructions eliminated by Data Flow Optimization (32 passes, 100 iterations).
     3 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (37 iterations).
     1 loops unrolled by Loop Unrolling.
   334 instructions added by Function Inlining (37 iterations).
    55 function calls inlined by Function Inlining.
     1 instructions eliminated by Jump Straightening (5 iterations).
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
   711 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 487):
    Replicate loop condition at CoreBuilder.mnd:245:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
  * Unroll iteration loop at CoreBuilder.mnd:182:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Inline function 'error' defined at CoreBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:88:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 500):
    Replicate loop condition at CoreBuilder.mnd:245:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
  * Inline function 'error' defined at CoreBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity (-6 instructions)
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:88:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 506):
  * Replicate loop condition at CoreBuilder.mnd:245:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 505):
  * Replicate loop condition at CoreBuilder.mnd:250:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 504):
  * Replicate loop condition at CoreBuilder.mnd:269:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 503):
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700
  * Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 size   +26, benefit      400.0, efficiency     15.385 (+16 instructions)
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:333:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 487):
    Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
  * Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 size   +20, benefit       14.0, efficiency      0.700 (+10 instructions)
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:327:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500

Pass 1: speed optimization selection (cost limit 477):
  * Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655 (+34 instructions)
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 443):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
  * Inline function call at CoreBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 438):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +255, benefit       98.0, efficiency      0.384
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
  * Inline function call at CoreBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 433):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +247, benefit       94.5, efficiency      0.383
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
  * Inline function call at CoreBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 428):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +239, benefit       91.0, efficiency      0.381
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
  * Inline function call at CoreBuilder.mnd:140:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 423):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +231, benefit       87.5, efficiency      0.379
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:153:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 418):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +223, benefit       84.0, efficiency      0.377
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:154:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 413):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +215, benefit       80.5, efficiency      0.374
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:170:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 408):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +207, benefit       77.0, efficiency      0.372
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:171:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 403):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +199, benefit       73.5, efficiency      0.369
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:172:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 398):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +191, benefit       70.0, efficiency      0.366
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 393):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +183, benefit       66.5, efficiency      0.363
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:187:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 388):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +175, benefit       63.0, efficiency      0.360
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 383):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +167, benefit       59.5, efficiency      0.356
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:190:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 378):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +159, benefit       56.0, efficiency      0.352
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 373):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +151, benefit       52.5, efficiency      0.348
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:216:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 368):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +143, benefit       49.0, efficiency      0.343
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:217:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 363):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +135, benefit       45.5, efficiency      0.337
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 358):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +127, benefit       42.0, efficiency      0.331
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:221:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 353):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +119, benefit       38.5, efficiency      0.324
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:223:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 348):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +111, benefit       35.0, efficiency      0.315
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:226:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 343):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size  +103, benefit       31.5, efficiency      0.306
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:232:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 338):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size   +95, benefit       28.0, efficiency      0.295
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 333):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size   +87, benefit       24.5, efficiency      0.282
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at CoreBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 328):
    Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size   +79, benefit       21.0, efficiency      0.266
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
  * Inline function call at CoreBuilder.mnd:279:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 323):
  * Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246 (+41 instructions)
    Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243
    Inline function call at CoreBuilder.mnd:147:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:149:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:150:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:160:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:161:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:164:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:165:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:166:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Pass 1: speed optimization selection (cost limit 282):
  * Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 size   +37, benefit        9.0, efficiency      0.243 (+32 instructions)
    Inline function call at CoreBuilder.mnd:202:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit        3.0, efficiency      0.158
    Inline function call at CoreBuilder.mnd:285:5                size   +19, benefit        3.0, efficiency      0.158

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-52 instructions):
 
    38 setaddr :buildBlockFromCfgLocal*retaddr *label37 (h:*label37)
    39 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label37) (h:*label37)
    40 label *label37
-    * set *tmp151 :buildBlockFromCfgLocal*retval
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label38 (h:*label38)
    43 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label38) (h:*label38)
    44 label *label38
-    * set *tmp152 :buildBlockFromCfgLocal*retval
    45 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    46 setaddr :buildBlockFromCfgLocal*retaddr *label39 (h:*label39)
    47 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label39) (h:*label39)
    48 label *label39
-    * set *tmp153 :buildBlockFromCfgLocal*retval
    49 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    50 setaddr :buildBlockFromCfgLocal*retaddr *label40 (h:*label40)
    51 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label40) (h:*label40)
    52 label *label40
-    * set *tmp154 :buildBlockFromCfgLocal*retval
    53 write 400 processor5 ".powerTarget"
    54 set .sandContainer .core
    55 jump *label41 equal .scrap false
 
    64 setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
    65 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
    66 label *label44
-    * set *tmp157 :buildBlockFromCfgLocal*retval
    67 set :buildBlockFromCfgLocal:cfg "APTJg-power-node29"
    68 setaddr :buildBlockFromCfgLocal*retaddr *label45 (h:*label45)
    69 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label45) (h:*label45)
    70 label *label45
    71 set *tmp158 :buildBlockFromCfgLocal*retval
-    * set *tmp155 *tmp158
    72 jump *label42 always
    73 label *label41
-    * set *tmp155 null
    74 label *label42
    75 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    76 setaddr :buildBlockFromCfgLocal*retaddr *label46 (h:*label46)
    77 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)
    78 label *label46
-    * set *tmp159 :buildBlockFromCfgLocal*retval
    79 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
    80 setaddr :buildBlockFromCfgLocal*retaddr *label47 (h:*label47)
    81 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label47) (h:*label47)
    82 label *label47
-    * set *tmp160 :buildBlockFromCfgLocal*retval
    83 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    84 write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
    85 write false processor5 ":meetTargetCfg*finished"
 
   114 setaddr :error*retaddr *label53 (h:*label53)
   115 call *label23 *invalid :error*retval (m:*label53) (h:*label53)
   116 label *label53
-    * set *tmp177 null
   117 jump *label52 always
   118 label *label51
-    * set *tmp177 null
   119 label *label52
   120 write @pneumatic-drill processor2 ".nextBlock"
   121 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
 
   139 setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
   140 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
   141 label *label57
-    * set *tmp183 :buildBlockFromCfgLocal*retval
   142 set :buildBlockFromCfgLocal:cfg "A¨SSJi-container31"
   143 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
   144 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
 
   150 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
   151 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
   152 label *label59
-    * set *tmp185 :buildBlockFromCfgLocal*retval
   153 set :buildBlockFromCfgLocal:cfg "AXTNJj-pulverizer32"
   154 setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
   155 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
   156 label *label60
-    * set *tmp186 :buildBlockFromCfgLocal*retval
   157 set :buildBlockFromCfgLocal:cfg "A~RNJk-overflow-gate33"
   158 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
   159 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
   160 label *label61
-    * set *tmp187 :buildBlockFromCfgLocal*retval
   161 set :buildBlockFromCfgLocal:cfg "A~RLJl-overflow-gate34"
   162 setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
   163 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)
   164 label *label62
   165 set *tmp188 :buildBlockFromCfgLocal*retval
-    * set *tmp182 *tmp188
   166 jump *label56 always
   167 label *label55
-    * set *tmp182 null
   168 label *label56
   169 write .sandContainer processor7 ".sandContainer"
   170 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   171 setaddr :buildBlockFromCfgLocal*retaddr *label63 (h:*label63)
   172 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label63) (h:*label63)
   173 label *label63
-    * set *tmp189 :buildBlockFromCfgLocal*retval
   174 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   175 setaddr :buildBlockFromCfgLocal*retaddr *label64 (h:*label64)
   176 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label64) (h:*label64)
   177 label *label64
-    * set *tmp190 :buildBlockFromCfgLocal*retval
   178 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   179 setaddr :buildBlockFromCfgLocal*retaddr *label65 (h:*label65)
   180 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label65) (h:*label65)
   181 label *label65
-    * set *tmp191 :buildBlockFromCfgLocal*retval
   182 write 80 processor5 ".graphiteSurplus"
   183 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   184 set :buildBlockFromCfgLocal.1:config processor10
 
   191 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   192 jump *label67 equal *tmp195 false
   193 read *tmp196 processor5 ":buildBlockFromCfg*retval"
-    * set *tmp192 *tmp196
   194 jump *label66 always
-    * set *tmp192 null
   195 label *label66
   196 write processor1 AÕFFJS-micro-processor9 ".timer"
   197 write processor2 AÕFFJS-micro-processor9 ".display"
 
   246 setaddr :buildBlockFromCfgLocal*retaddr *label81 (h:*label81)
   247 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label81) (h:*label81)
   248 label *label81
-    * set *tmp199 :buildBlockFromCfgLocal*retval
   249 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   250 setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
   251 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)
   252 label *label82
-    * set *tmp200 :buildBlockFromCfgLocal*retval
   253 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   254 setaddr :buildBlockFromCfgLocal*retaddr *label83 (h:*label83)
   255 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label83) (h:*label83)
   256 label *label83
-    * set *tmp201 :buildBlockFromCfgLocal*retval
   257 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   258 setaddr :buildBlockFromCfgLocal*retaddr *label84 (h:*label84)
   259 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label84) (h:*label84)
   260 label *label84
-    * set *tmp202 :buildBlockFromCfgLocal*retval
   261 set :setFlareTarget:target 1
   262 write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
   263 label *label85
 
   283 op lessThan *tmp205 *tmp204 300
   284 jump *label92 equal *tmp205 false
   285 jump *label90 always
-    * set *tmp206 null
   286 jump *label93 always
   287 label *label92
-    * set *tmp206 null
   288 label *label93
   289 label *label89
   290 read *tmp81 AÕFFJS-micro-processor9 ".monos"
 
   296 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   297 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
   298 label *label94
-    * set *tmp208 :buildBlockFromCfgLocal*retval
   299 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   300 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   301 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
   302 label *label95
-    * set *tmp209 :buildBlockFromCfgLocal*retval
   303 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   304 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   305 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
   306 label *label96
-    * set *tmp210 :buildBlockFromCfgLocal*retval
   307 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   308 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   309 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   310 label *label97
-    * set *tmp211 :buildBlockFromCfgLocal*retval
   311 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   312 setaddr :buildBlockFromCfgLocal*retaddr *label98 (h:*label98)
   313 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label98) (h:*label98)
   314 label *label98
-    * set *tmp212 :buildBlockFromCfgLocal*retval
   315 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   316 setaddr :buildBlockFromCfgLocal*retaddr *label99 (h:*label99)
   317 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label99) (h:*label99)
   318 label *label99
-    * set *tmp213 :buildBlockFromCfgLocal*retval
   319 write 200 processor5 ".graphiteSurplus"
   320 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   321 setaddr :buildBlockFromCfgLocal*retaddr *label100 (h:*label100)
   322 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label100) (h:*label100)
   323 label *label100
-    * set *tmp214 :buildBlockFromCfgLocal*retval
   324 jump *label101 equal .scrap false
   325 set :buildBlockFromCfgLocal:cfg "AXTLJn-pulverizer36"
   326 setaddr :buildBlockFromCfgLocal*retaddr *label103 (h:*label103)
   327 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label103) (h:*label103)
   328 label *label103
   329 set *tmp216 :buildBlockFromCfgLocal*retval
-    * set *tmp215 *tmp216
   330 jump *label102 always
   331 label *label101
-    * set *tmp215 null
   332 label *label102
   333 set :buildBlockFromCfgLocal:cfg "A©HFJa-unloader23"
   334 setaddr :buildBlockFromCfgLocal*retaddr *label104 (h:*label104)
   335 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label104) (h:*label104)
   336 label *label104
-    * set *tmp217 :buildBlockFromCfgLocal*retval
   337 set :buildBlockFromCfgLocal:cfg "A{HDJb-inverted-sorter24"
   338 setaddr :buildBlockFromCfgLocal*retaddr *label105 (h:*label105)
   339 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label105) (h:*label105)
   340 label *label105
-    * set *tmp218 :buildBlockFromCfgLocal*retval
   341 set :buildBlockFromCfgLocal:cfg "AÀF@Lc-additive-reconstructor25"
   342 setaddr :buildBlockFromCfgLocal*retaddr *label106 (h:*label106)
   343 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label106) (h:*label106)
   344 label *label106
-    * set *tmp219 :buildBlockFromCfgLocal*retval
   345 write 1000 processor5 ".siliconSurplus"
   346 write 20 processor5 ".siliconMonoSurplus"
   347 write 100 processor5 ".metaglassSurplus"
 
   440 setaddr :error*retaddr *label127 (h:*label127)
   441 call *label23 *invalid :error*retval (m:*label127) (h:*label127)
   442 label *label127
-    * set *tmp247 null
   443 jump *label126 always
   444 label *label125
-    * set *tmp247 null
   445 label *label126
   446 write @laser-drill processor5 ":buildBlockAt:block"
   447 read *tmp52 processor3 ".drillX"
 
   467 setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
   468 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
   469 label *label129
-    * set *tmp256 :buildRemoteBlockLocal*retval
   470 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   471 read *tmp58 processor3 ".water2X"
   472 set :buildRemoteBlockLocal:x *tmp58
 
   475 setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
   476 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label130) (h:*label130)
   477 label *label130
-    * set *tmp257 :buildRemoteBlockLocal*retval
   478 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   479 read *tmp60 processor3 ".generatorX"
   480 set :buildRemoteBlockLocal:x *tmp60
 
   493 setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
   494 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
   495 label *label132
-    * set *tmp259 :buildRemoteBlockLocal*retval
   496 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   497 read *tmp64 processor3 ".node2X"
   498 set :buildRemoteBlockLocal:x *tmp64
 
   501 setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
   502 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label133) (h:*label133)
   503 label *label133
-    * set *tmp260 :buildRemoteBlockLocal*retval
   504 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   505 read *tmp66 processor3 ".panelX"
   506 set :buildRemoteBlockLocal:x *tmp66
 
   509 setaddr :buildRemoteBlockLocal*retaddr *label134 (h:*label134)
   510 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label134) (h:*label134)
   511 label *label134
-    * set *tmp261 :buildRemoteBlockLocal*retval
   512 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   513 read *tmp68 processor3 ".batteryX"
   514 set :buildRemoteBlockLocal:x *tmp68
 
   532 op equal *tmp264 .thoriumContainer null
   533 jump *label137 equal *tmp264 false
   534 set .thoriumContainer .thoriumDrill
-    * set *tmp265 .thoriumContainer
   535 jump *label138 always
   536 label *label137
-    * set *tmp265 null
   537 label *label138
   538 write .thoriumDrill processor2 ".thoriumDrill"
   539 write .thoriumContainer processor2 ".thoriumContainer"
 
   573 setaddr :buildBlockFromCfgLocal*retaddr *label145 (h:*label145)
   574 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label145) (h:*label145)
   575 label *label145
-    * set *tmp271 :buildBlockFromCfgLocal*retval
   576 write 10 processor5 ".metaglassSurplus"
   577 set :setPolyTarget.1:target 0
   578 write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
 
   754 sensor *tmp312 @unit @mining
   755 jump *label183 equal *tmp312 false
   756 ucontrol stop
-    * set *tmp313 null
   757 jump *label184 always
   758 label *label183
-    * set *tmp313 null
   759 label *label184
   760 ubind :lineUpUnits:unit
   761 label *label181

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-4 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label45 (h:*label45)
    69 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label45) (h:*label45)
    70 label *label45
-    * set *tmp158 :buildBlockFromCfgLocal*retval
    71 jump *label42 always
    72 label *label41
    73 label *label42
 
   161 setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
   162 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)
   163 label *label62
-    * set *tmp188 :buildBlockFromCfgLocal*retval
   164 jump *label56 always
   165 label *label55
   166 label *label56
 
   188 wait 1e-15
   189 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   190 jump *label67 equal *tmp195 false
-    * read *tmp196 processor5 ":buildBlockFromCfg*retval"
   191 jump *label66 always
   192 label *label66
   193 write processor1 AÕFFJS-micro-processor9 ".timer"
 
   323 setaddr :buildBlockFromCfgLocal*retaddr *label103 (h:*label103)
   324 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label103) (h:*label103)
   325 label *label103
-    * set *tmp216 :buildBlockFromCfgLocal*retval
   326 jump *label102 always
   327 label *label101
   328 label *label102

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-44 instructions):
 
    20 set .thoriumGenerator null
    21 label *label34
    22 ubind @poly
-    * set *tmp142 @unit
-    * set .builder *tmp142
-    * ulocate building core false @copper .coreX .coreY *tmp144 *tmp143
-    * set .core *tmp143
+   23 set .builder @unit
+   24 ulocate building core false @copper .coreX .coreY *tmp144 .core
    25 label *label35
    26 op equal *tmp145 .core null
    27 jump *label34 notEqual *tmp145 false
    28 label *label36
    29 ulocate ore core true @sand *tmp147 *tmp148 *tmp146 *tmp149
-    * op equal *tmp150 *tmp146 false
-    * set .scrap *tmp150
+   30 op equal .scrap *tmp146 false
    31 write .scrap processor2 ".scrap"
    32 write .scrap processor5 ".scrap"
    33 write .scrap processor7 ".scrap"
 
    54 setaddr :buildBlockFromCfgLocal*retaddr *label43 (h:*label43)
    55 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label43) (h:*label43)
    56 label *label43
-    * set *tmp156 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp156
+   57 set .sandContainer :buildBlockFromCfgLocal*retval
    58 write .sandContainer processor5 ".sandContainer"
    59 set :buildBlockFromCfgLocal:cfg "A~PPJf-overflow-gate28"
    60 setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
 
    97 wait 1e-15
    98 read *tmp174 processor3 ":findDrillLocation*finished"
    99 jump *label50 equal *tmp174 false
-    * read *tmp171 processor3 ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp171
-    * read *tmp172 processor3 ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp172
-    * read *tmp175 processor3 ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp175
+  100 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
+  101 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
+  102 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   103 op equal *tmp176 :buildFirstTitaniumDrill:result false
   104 jump *label51 equal *tmp176 false
   105 set :error:error "Cannot locate spot for titanium drill"
 
   118 wait 1e-15
   119 read *tmp180 processor5 ":buildFirstTitaniumDrillAt*finished"
   120 jump *label54 equal *tmp180 false
-    * read *tmp181 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp161 *tmp181
+  121 read *tmp161 processor5 ":buildFirstTitaniumDrillAt*retval"
   122 jump *label48 always
   123 set *tmp161 null
   124 label *label48
 
   134 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
   135 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
   136 label *label58
-    * set *tmp184 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp184
+  137 set .sandContainer :buildBlockFromCfgLocal*retval
   138 write .sandContainer processor5 ".sandContainer"
   139 set :buildBlockFromCfgLocal:cfg "A{TPJm-inverted-sorter35"
   140 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
 
   372 label *label117
   373 write @ore-titanium processor2 ".nextBlock"
   374 ubind @flare
-    * read *tmp50 processor3 ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp50
+  375 read :blocksBuildTitaniumDrills:current processor3 ".locations"
   376 write .coreX processor3 ":findDrillLocation:x"
   377 write .coreY processor3 ":findDrillLocation:y"
   378 write @unit processor3 ":findDrillLocation:unit"
 
   418 wait 1e-15
   419 read *tmp244 processor3 ":layoutThoriumDrill*finished"
   420 jump *label124 equal *tmp244 false
-    * read *tmp245 processor3 ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp245
+  421 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   422 op equal *tmp246 :buildThoriumDrill:result false
   423 jump *label125 equal *tmp246 false
   424 set :error:error "Cannot locate spot for thorium drill"
 
   442 wait 1e-15
   443 read *tmp254 processor5 ":buildBlockAt*finished"
   444 jump *label128 equal *tmp254 false
-    * read *tmp255 processor5 ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp255
+  445 read .thoriumDrill processor5 ":buildBlockAt*retval"
   446 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp54 processor3 ".water1X"
-    * set :buildRemoteBlockLocal:x *tmp54
-    * read *tmp55 processor3 ".water1Y"
-    * set :buildRemoteBlockLocal:y *tmp55
+  447 read :buildRemoteBlockLocal:x processor3 ".water1X"
+  448 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   449 setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
   450 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
   451 label *label129
   452 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp58 processor3 ".water2X"
-    * set :buildRemoteBlockLocal:x *tmp58
-    * read *tmp59 processor3 ".water2Y"
-    * set :buildRemoteBlockLocal:y *tmp59
+  453 read :buildRemoteBlockLocal:x processor3 ".water2X"
+  454 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   455 setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
   456 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label130) (h:*label130)
   457 label *label130
   458 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
-    * read *tmp60 processor3 ".generatorX"
-    * set :buildRemoteBlockLocal:x *tmp60
-    * read *tmp61 processor3 ".generatorY"
-    * set :buildRemoteBlockLocal:y *tmp61
+  459 read :buildRemoteBlockLocal:x processor3 ".generatorX"
+  460 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   461 setaddr :buildRemoteBlockLocal*retaddr *label131 (h:*label131)
   462 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label131) (h:*label131)
   463 label *label131
-    * set *tmp258 :buildRemoteBlockLocal*retval
-    * set .thoriumGenerator *tmp258
+  464 set .thoriumGenerator :buildRemoteBlockLocal*retval
   465 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp62 processor3 ".node1X"
-    * set :buildRemoteBlockLocal:x *tmp62
-    * read *tmp63 processor3 ".node1Y"
-    * set :buildRemoteBlockLocal:y *tmp63
+  466 read :buildRemoteBlockLocal:x processor3 ".node1X"
+  467 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   468 setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
   469 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
   470 label *label132
   471 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp64 processor3 ".node2X"
-    * set :buildRemoteBlockLocal:x *tmp64
-    * read *tmp65 processor3 ".node2Y"
-    * set :buildRemoteBlockLocal:y *tmp65
+  472 read :buildRemoteBlockLocal:x processor3 ".node2X"
+  473 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   474 setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
   475 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label133) (h:*label133)
   476 label *label133
   477 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
-    * read *tmp66 processor3 ".panelX"
-    * set :buildRemoteBlockLocal:x *tmp66
-    * read *tmp67 processor3 ".panelY"
-    * set :buildRemoteBlockLocal:y *tmp67
+  478 read :buildRemoteBlockLocal:x processor3 ".panelX"
+  479 read :buildRemoteBlockLocal:y processor3 ".panelY"
   480 setaddr :buildRemoteBlockLocal*retaddr *label134 (h:*label134)
   481 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label134) (h:*label134)
   482 label *label134
   483 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
-    * read *tmp68 processor3 ".batteryX"
-    * set :buildRemoteBlockLocal:x *tmp68
-    * read *tmp69 processor3 ".batteryY"
-    * set :buildRemoteBlockLocal:y *tmp69
+  484 read :buildRemoteBlockLocal:x processor3 ".batteryX"
+  485 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   486 setaddr :buildRemoteBlockLocal*retaddr *label135 (h:*label135)
   487 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label135) (h:*label135)
   488 label *label135
-    * set *tmp262 :buildRemoteBlockLocal*retval
-    * set .thoriumBattery *tmp262
+  489 set .thoriumBattery :buildRemoteBlockLocal*retval
   490 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
-    * read *tmp56 processor3 ".containerX"
-    * set :buildRemoteBlockLocal:x *tmp56
-    * read *tmp57 processor3 ".containerY"
-    * set :buildRemoteBlockLocal:y *tmp57
+  491 read :buildRemoteBlockLocal:x processor3 ".containerX"
+  492 read :buildRemoteBlockLocal:y processor3 ".containerY"
   493 setaddr :buildRemoteBlockLocal*retaddr *label136 (h:*label136)
   494 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   495 label *label136
-    * set *tmp263 :buildRemoteBlockLocal*retval
-    * set .thoriumContainer *tmp263
+  496 set .thoriumContainer :buildRemoteBlockLocal*retval
   497 op equal *tmp264 .thoriumContainer null
   498 jump *label137 equal *tmp264 false
   499 set .thoriumContainer .thoriumDrill
 
   527 label *label141
   528 jump *label140 always
   529 label *label142
-    * op add *tmp270 4 .scrap
-    * set :setMonoTarget.2:target *tmp270
+  530 op add :setMonoTarget.2:target 4 .scrap
   531 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
   532 label *label144
   533 write 3209 AÕFFJS-micro-processor9 ".powerTarget"
 
   551 call *label26 *invalid :buildUnits*retval (m:*label149) (h:*label149)
   552 label *label149
   553 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op sub *tmp272 *tmp82 1
-    * set :tmp *tmp272
+  554 op sub :tmp *tmp82 1
   555 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
   556 write :tmp AÕFFJS-micro-processor9 ".polys"
   557 write :tmp processor2 ".polys"
-    * sensor *tmp273 AÁNBJd-multiplicative-reconstructor26 @x
-    * set :x *tmp273
-    * sensor *tmp274 AÁNBJd-multiplicative-reconstructor26 @y
-    * set :y *tmp274
+  558 sensor :x AÁNBJd-multiplicative-reconstructor26 @x
+  559 sensor :y AÁNBJd-multiplicative-reconstructor26 @y
   560 label *label150
   561 ucontrol move :x :y
   562 ucontrol payEnter
 
   591 label *label157
   592 label *label158
   593 jump *label160 equal true false
-    * op add *tmp283 .coreY 6
-    * set :lineUpUnits:y *tmp283
+  594 op add :lineUpUnits:y .coreY 6
   595 set :lineUpUnits:unit @mega
   596 setaddr :lineUpUnits*retaddr *label161 (h:*label161)
   597 call *label28 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
   598 label *label161
-    * op add *tmp284 .coreY 2
-    * set :lineUpUnits:y *tmp284
+  599 op add :lineUpUnits:y .coreY 2
   600 set :lineUpUnits:unit @poly
   601 setaddr :lineUpUnits*retaddr *label162 (h:*label162)
   602 call *label28 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
   603 label *label162
-    * op sub *tmp285 .coreY 2
-    * set :lineUpUnits:y *tmp285
+  604 op sub :lineUpUnits:y .coreY 2
   605 set :lineUpUnits:unit @mono
   606 setaddr :lineUpUnits*retaddr *label163 (h:*label163)
   607 call *label28 *invalid :lineUpUnits*retval (m:*label163) (h:*label163)
   608 label *label163
-    * op sub *tmp286 .coreY 6
-    * set :lineUpUnits:y *tmp286
+  609 op sub :lineUpUnits:y .coreY 6
   610 set :lineUpUnits:unit @flare
   611 setaddr :lineUpUnits*retaddr *label164 (h:*label164)
   612 call *label28 *invalid :lineUpUnits*retval (m:*label164) (h:*label164)
 
   632 wait 1e-15
   633 read *tmp290 processor5 ":buildRemoteBlock*finished"
   634 jump *label167 equal *tmp290 false
-    * read *tmp291 processor5 ":buildRemoteBlock*retval"
-    * set :buildRemoteBlockLocal*retval *tmp291
+  635 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   636 label *label166
   637 return :buildRemoteBlockLocal*retaddr
   638 end
 
   645 wait 1e-15
   646 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   647 jump *label169 equal *tmp294 false
-    * read *tmp295 processor5 ":buildBlockFromCfg*retval"
-    * set :buildBlockFromCfgLocal*retval *tmp295
+  648 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   649 jump *label168 always
   650 set :buildBlockFromCfgLocal*retval null
   651 label *label168
 
   679 label *label27
   680 label *label173
   681 ubind :flagUnits:unit
-    * set *tmp307 @unit
-    * set :flagUnits:firstUnit *tmp307
+  682 set :flagUnits:firstUnit @unit
   683 label *label174
   684 op equal *tmp308 :flagUnits:firstUnit null
   685 jump *label173 notEqual *tmp308 false
   686 label *label175
-    * op add *tmp309 .coreX 8
-    * set :flagUnits:x *tmp309
+  687 op add :flagUnits:x .coreX 8
   688 label *label176
   689 ucontrol flag :flagUnits:x
   690 op add :flagUnits:x :flagUnits:x 4
 
   700 ubind :lineUpUnits:unit
   701 set :lineUpUnits:firstUnit @unit
   702 label *label180
-    * sensor *tmp311 @unit @flag
-    * set :lineUpUnits:x *tmp311
+  703 sensor :lineUpUnits:x @unit @flag
   704 ucontrol itemDrop @air 1000
   705 ucontrol move :lineUpUnits:x :lineUpUnits:y
   706 sensor *tmp312 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   590 call *label27 *invalid :flagUnits*retval (m:*label157) (h:*label157)
   591 label *label157
   592 label *label158
-    * jump *label160 equal true false
   593 op add :lineUpUnits:y .coreY 6
   594 set :lineUpUnits:unit @mega
   595 setaddr :lineUpUnits*retaddr *label161 (h:*label161)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-13 instructions):
 
    23 set .builder @unit
    24 ulocate building core false @copper .coreX .coreY *tmp144 .core
    25 label *label35
-    * op equal *tmp145 .core null
-    * jump *label34 notEqual *tmp145 false
+   26 jump *label34 equal .core null
    27 label *label36
    28 ulocate ore core true @sand *tmp147 *tmp148 *tmp146 *tmp149
    29 op equal .scrap *tmp146 false
 
    99 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
   100 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   101 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
-    * op equal *tmp176 :buildFirstTitaniumDrill:result false
-    * jump *label51 equal *tmp176 false
+  102 jump *label51 notEqual :buildFirstTitaniumDrill:result false
   103 set :error:error "Cannot locate spot for titanium drill"
   104 setaddr :error*retaddr *label53 (h:*label53)
   105 call *label23 *invalid :error*retval (m:*label53) (h:*label53)
 
   266 read *tmp203 processor5 ":supplyBase*finished"
   267 jump *label91 equal *tmp203 false
   268 sensor *tmp204 AJTJK-battery1 @totalPower
-    * op lessThan *tmp205 *tmp204 300
-    * jump *label92 equal *tmp205 false
+  269 jump *label92 greaterThanEq *tmp204 300
   270 jump *label90 always
   271 jump *label93 always
   272 label *label92
   273 label *label93
   274 label *label89
   275 read *tmp81 AÕFFJS-micro-processor9 ".monos"
-    * op lessThan *tmp207 *tmp81 3
-    * jump *label88 notEqual *tmp207 false
+  276 jump *label88 lessThan *tmp81 3
   277 label *label90
   278 write 65 processor5 ".siliconSurplus"
   279 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
 
   339 label *label109
   340 label *label110
   341 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp220 *tmp82 2
-    * jump *label112 equal *tmp220 false
+  342 jump *label112 greaterThanEq *tmp82 2
   343 write false processor5 ":supplyBase*finished"
   344 write 8 processor5 "@counter"
   345 label *label113
 
   354 label *label114
   355 label *label115
   356 read *tmp80 AÕFFJS-micro-processor9 ".flares"
-    * op lessThan *tmp222 *tmp80 2
-    * jump *label117 equal *tmp222 false
+  357 jump *label117 greaterThanEq *tmp80 2
   358 write false processor5 ":supplyBase*finished"
   359 write 8 processor5 "@counter"
   360 label *label118
 
   413 read *tmp244 processor3 ":layoutThoriumDrill*finished"
   414 jump *label124 equal *tmp244 false
   415 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
-    * op equal *tmp246 :buildThoriumDrill:result false
-    * jump *label125 equal *tmp246 false
+  416 jump *label125 notEqual :buildThoriumDrill:result false
   417 set :error:error "Cannot locate spot for thorium drill"
   418 setaddr :error*retaddr *label127 (h:*label127)
   419 call *label23 *invalid :error*retval (m:*label127) (h:*label127)
 
   487 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   488 label *label136
   489 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * op equal *tmp264 .thoriumContainer null
-    * jump *label137 equal *tmp264 false
+  490 jump *label137 notEqual .thoriumContainer null
   491 set .thoriumContainer .thoriumDrill
   492 jump *label138 always
   493 label *label137
 
   508 write null processor2 ".nextBlock"
   509 label *label140
   510 read *tmp82 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp268 *tmp82 3
-    * jump *label142 equal *tmp268 false
+  511 jump *label142 greaterThanEq *tmp82 3
   512 write false processor5 ":supplyBase*finished"
   513 write 8 processor5 "@counter"
   514 label *label143
 
   553 ucontrol payEnter
   554 label *label151
   555 read *tmp83 AÕFFJS-micro-processor9 ".megas"
-    * op equal *tmp275 *tmp83 false
-    * jump *label150 notEqual *tmp275 false
+  556 jump *label150 equal *tmp83 false
   557 label *label152
   558 write true AÕFFJS-micro-processor9 ".finished"
   559 control enabled processor1 false
 
   670 ubind :flagUnits:unit
   671 set :flagUnits:firstUnit @unit
   672 label *label174
-    * op equal *tmp308 :flagUnits:firstUnit null
-    * jump *label173 notEqual *tmp308 false
+  673 jump *label173 equal :flagUnits:firstUnit null
   674 label *label175
   675 op add :flagUnits:x .coreX 8
   676 label *label176
 
   678 op add :flagUnits:x :flagUnits:x 4
   679 ubind :flagUnits:unit
   680 label *label177
-    * op notEqual *tmp310 @unit :flagUnits:firstUnit
-    * jump *label176 notEqual *tmp310 false
+  681 jump *label176 notEqual @unit :flagUnits:firstUnit
   682 label *label178
   683 label *label172
   684 return :flagUnits*retaddr
 
   698 label *label184
   699 ubind :lineUpUnits:unit
   700 label *label181
-    * op notEqual *tmp314 @unit :lineUpUnits:firstUnit
-    * jump *label180 notEqual *tmp314 false
+  701 jump *label180 notEqual @unit :lineUpUnits:firstUnit
   702 label *label182
   703 label *label179
   704 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
    63 setaddr :buildBlockFromCfgLocal*retaddr *label45 (h:*label45)
    64 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label45) (h:*label45)
    65 label *label45
-    * jump *label42 always
    66 label *label41
    67 label *label42
    68 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
 
   103 setaddr :error*retaddr *label53 (h:*label53)
   104 call *label23 *invalid :error*retval (m:*label53) (h:*label53)
   105 label *label53
-    * jump *label52 always
   106 label *label51
   107 label *label52
   108 write @pneumatic-drill processor2 ".nextBlock"
 
   148 setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
   149 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)
   150 label *label62
-    * jump *label56 always
   151 label *label55
   152 label *label56
   153 write .sandContainer processor7 ".sandContainer"
 
   174 wait 1e-15
   175 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   176 jump *label67 equal *tmp195 false
-    * jump *label66 always
   177 label *label66
   178 write processor1 AÕFFJS-micro-processor9 ".timer"
   179 write processor2 AÕFFJS-micro-processor9 ".display"
 
   264 sensor *tmp204 AJTJK-battery1 @totalPower
   265 jump *label92 greaterThanEq *tmp204 300
   266 jump *label90 always
-    * jump *label93 always
   267 label *label92
   268 label *label93
   269 label *label89
 
   305 setaddr :buildBlockFromCfgLocal*retaddr *label103 (h:*label103)
   306 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label103) (h:*label103)
   307 label *label103
-    * jump *label102 always
   308 label *label101
   309 label *label102
   310 set :buildBlockFromCfgLocal:cfg "A©HFJa-unloader23"
 
   412 setaddr :error*retaddr *label127 (h:*label127)
   413 call *label23 *invalid :error*retval (m:*label127) (h:*label127)
   414 label *label127
-    * jump *label126 always
   415 label *label125
   416 label *label126
   417 write @laser-drill processor5 ":buildBlockAt:block"
 
   482 set .thoriumContainer :buildRemoteBlockLocal*retval
   483 jump *label137 notEqual .thoriumContainer null
   484 set .thoriumContainer .thoriumDrill
-    * jump *label138 always
   485 label *label137
   486 label *label138
   487 write .thoriumDrill processor2 ".thoriumDrill"
 
   685 sensor *tmp312 @unit @mining
   686 jump *label183 equal *tmp312 false
   687 ucontrol stop
-    * jump *label184 always
   688 label *label183
   689 label *label184
   690 ubind :lineUpUnits:unit

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    13 read *tmp141 processor5 "*signature"
    14 jump *label33 notEqual *tmp141 "77658b7b93afc77c:v1"
    15 set .ERROR ""
-    * set .titaniumDrill null
-    * set .thoriumDrill null
-    * set .thoriumBattery null
-    * set .thoriumContainer null
-    * set .thoriumGenerator null
    16 label *label34
    17 ubind @poly
    18 set .builder @unit
 
    49 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label43) (h:*label43)
    50 label *label43
    51 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+   52 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    53 set :buildBlockFromCfgLocal:cfg "A~PPJf-overflow-gate28"
    54 setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
    55 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
 
    69 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label47) (h:*label47)
    70 label *label47
    71 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
-    * write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
+   72 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    73 write false processor5 ":meetTargetCfg*finished"
    74 write 7 processor5 "@counter"
    75 label *label49
 
   111 jump *label54 equal *tmp180 false
   112 read *tmp161 processor5 ":buildFirstTitaniumDrillAt*retval"
   113 jump *label48 always
-    * set *tmp161 null
   114 label *label48
   115 set .titaniumDrill *tmp161
-    * write .titaniumDrill processor2 ".titaniumDrill"
-    * write .titaniumDrill processor5 ".titaniumDrill"
+  116 write *tmp161 processor2 ".titaniumDrill"
+  117 write *tmp161 processor5 ".titaniumDrill"
   118 jump *label55 equal .scrap false
   119 set :buildBlockFromCfgLocal:cfg "A©RPJh-unloader30"
   120 setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
 
   125 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
   126 label *label58
   127 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+  128 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   129 set :buildBlockFromCfgLocal:cfg "A{TPJm-inverted-sorter35"
   130 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
   131 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
 
   160 write 80 processor5 ".graphiteSurplus"
   161 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   162 set :buildBlockFromCfgLocal.1:config processor10
-    * write :buildBlockFromCfgLocal.1:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write :buildBlockFromCfgLocal.1:config processor5 ":buildBlockFromCfg:config"
+  163 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
+  164 write processor10 processor5 ":buildBlockFromCfg:config"
   165 write false processor5 ":buildBlockFromCfg*finished"
   166 write 2 processor5 "@counter"
   167 label *label67
 
   235 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label84) (h:*label84)
   236 label *label84
   237 set :setFlareTarget:target 1
-    * write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
+  238 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   239 label *label85
   240 set :setMonoTarget:target 5
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  241 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   242 label *label86
   243 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   244 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
 
   317 write 20 processor5 ".siliconMonoSurplus"
   318 write 100 processor5 ".metaglassSurplus"
   319 set :setMonoTarget.1:target 4
-    * write :setMonoTarget.1:target AÕFFJS-micro-processor9 ".monoTarget"
+  320 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   321 label *label107
   322 set :setPolyTarget:target 3
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  323 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   324 label *label108
   325 setaddr :buildUnits*retaddr *label109 (h:*label109)
   326 call *label26 *invalid :buildUnits*retval (m:*label109) (h:*label109)
 
   338 jump *label110 always
   339 label *label112
   340 set :setFlareTarget.1:target 2
-    * write :setFlareTarget.1:target AÕFFJS-micro-processor9 ".flareTarget"
+  341 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   342 label *label114
   343 label *label115
   344 read *tmp80 AÕFFJS-micro-processor9 ".flares"
 
   448 setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
   449 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
   450 label *label132
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   451 read :buildRemoteBlockLocal:x processor3 ".node2X"
   452 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   453 setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
 
   473 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   474 label *label136
   475 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label137 notEqual .thoriumContainer null
+  476 jump *label137 notEqual :buildRemoteBlockLocal*retval null
   477 set .thoriumContainer .thoriumDrill
   478 label *label137
   479 label *label138
 
   515 label *label145
   516 write 10 processor5 ".metaglassSurplus"
   517 set :setPolyTarget.1:target 0
-    * write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
+  518 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   519 label *label146
   520 set :setFlareTarget.2:target 0
-    * write :setFlareTarget.2:target AÕFFJS-micro-processor9 ".flareTarget"
+  521 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   522 label *label147
   523 set :setMegaTarget:target 1
-    * write :setMegaTarget:target AÕFFJS-micro-processor9 ".megaTarget"
+  524 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   525 label *label148
   526 setaddr :buildUnits*retaddr *label149 (h:*label149)
   527 call *label26 *invalid :buildUnits*retval (m:*label149) (h:*label149)
 
   621 jump *label169 equal *tmp294 false
   622 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   623 jump *label168 always
-    * set :buildBlockFromCfgLocal*retval null
   624 label *label168
   625 return :buildBlockFromCfgLocal*retaddr
   626 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label47 (h:*label47)
    69 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label47) (h:*label47)
    70 label *label47
-    * set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    71 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    72 write false processor5 ":meetTargetCfg*finished"
    73 write 7 processor5 "@counter"
 
   111 read *tmp161 processor5 ":buildFirstTitaniumDrillAt*retval"
   112 jump *label48 always
   113 label *label48
-    * set .titaniumDrill *tmp161
   114 write *tmp161 processor2 ".titaniumDrill"
   115 write *tmp161 processor5 ".titaniumDrill"
   116 jump *label55 equal .scrap false
 
   156 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label65) (h:*label65)
   157 label *label65
   158 write 80 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
-    * set :buildBlockFromCfgLocal.1:config processor10
   159 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   160 write processor10 processor5 ":buildBlockFromCfg:config"
   161 write false processor5 ":buildBlockFromCfg*finished"
 
   230 setaddr :buildBlockFromCfgLocal*retaddr *label84 (h:*label84)
   231 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label84) (h:*label84)
   232 label *label84
-    * set :setFlareTarget:target 1
   233 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   234 label *label85
-    * set :setMonoTarget:target 5
   235 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   236 label *label86
   237 write 85 AÕFFJS-micro-processor9 ".pressTarget"
 
   310 write 1000 processor5 ".siliconSurplus"
   311 write 20 processor5 ".siliconMonoSurplus"
   312 write 100 processor5 ".metaglassSurplus"
-    * set :setMonoTarget.1:target 4
   313 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   314 label *label107
-    * set :setPolyTarget:target 3
   315 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   316 label *label108
   317 setaddr :buildUnits*retaddr *label109 (h:*label109)
 
   329 label *label111
   330 jump *label110 always
   331 label *label112
-    * set :setFlareTarget.1:target 2
   332 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   333 label *label114
   334 label *label115
 
   420 setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
   421 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
   422 label *label129
-    * set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   423 read :buildRemoteBlockLocal:x processor3 ".water2X"
   424 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   425 setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
 
   504 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label145) (h:*label145)
   505 label *label145
   506 write 10 processor5 ".metaglassSurplus"
-    * set :setPolyTarget.1:target 0
   507 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   508 label *label146
-    * set :setFlareTarget.2:target 0
   509 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   510 label *label147
-    * set :setMegaTarget:target 1
   511 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   512 label *label148
   513 setaddr :buildUnits*retaddr *label149 (h:*label149)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   463 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   464 label *label136
   465 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label137 notEqual :buildRemoteBlockLocal*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label137
-    * label *label138
+  466 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
   467 write .thoriumDrill processor2 ".thoriumDrill"
   468 write .thoriumContainer processor2 ".thoriumContainer"
   469 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Unroll iteration loop at CoreBuilder.mnd:182:5 (-2 instructions):
 
   169 write processor2 AÕFFJS-micro-processor9 ".display"
   170 write .core AÕFFJS-micro-processor9 ".core"
   171 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp197 *label71
-    * jump *label68 always
-    * multilabel *label71 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp197 *label72
-    * jump *label68 always
-    * multilabel *label72 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp197 *label73
-    * jump *label68 always
-    * multilabel *label73 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp197 *label74
-    * jump *label68 always
-    * multilabel *label74 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp197 *label75
-    * jump *label68 always
-    * multilabel *label75 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp197 *label76
-    * jump *label68 always
-    * multilabel *label76 (m:marker0)
-    * set :block "A©JNJP-unloader6"
-    * setaddr *tmp197 *label77
-    * jump *label68 always
-    * multilabel *label77 (m:marker0)
-    * set :block "A{HNJQ-inverted-sorter7"
-    * setaddr *tmp197 *label78
-    * jump *label68 always
-    * multilabel *label78 (m:marker0)
-    * set :block "AJPJR-underflow-gate8"
-    * setaddr *tmp197 *label79
-    * jump *label68 always
-    * multilabel *label79 (m:marker0)
-    * set :block "AÕFFJS-micro-processor9"
-    * setaddr *tmp197 *label80
-    * label *label68
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
-    * label *label69
-    * multijump *tmp197 0 0 (m:marker0)
-    * multilabel *label80 (m:marker0)
-    * label *label70
+  172 set :block "AJEMJJ-graphite-press0"
+  173 label *label186
+  174 read *tmp198 @this :block
+  175 write *tmp198 AÕFFJS-micro-processor9 :block
+  176 label *label187
+  177 set :block "AJTJK-battery1"
+  178 label *label190
+  179 read *tmp198 @this :block
+  180 write *tmp198 AÕFFJS-micro-processor9 :block
+  181 label *label191
+  182 set :block "ALTJL-battery2"
+  183 label *label194
+  184 read *tmp198 @this :block
+  185 write *tmp198 AÕFFJS-micro-processor9 :block
+  186 label *label195
+  187 set :block "AJRJM-combustion-generator3"
+  188 label *label198
+  189 read *tmp198 @this :block
+  190 write *tmp198 AÕFFJS-micro-processor9 :block
+  191 label *label199
+  192 set :block "ALMQJN-silicon-smelter4"
+  193 label *label202
+  194 read *tmp198 @this :block
+  195 write *tmp198 AÕFFJS-micro-processor9 :block
+  196 label *label203
+  197 set :block "A{LNJO-inverted-sorter5"
+  198 label *label206
+  199 read *tmp198 @this :block
+  200 write *tmp198 AÕFFJS-micro-processor9 :block
+  201 label *label207
+  202 set :block "A©JNJP-unloader6"
+  203 label *label210
+  204 read *tmp198 @this :block
+  205 write *tmp198 AÕFFJS-micro-processor9 :block
+  206 label *label211
+  207 set :block "A{HNJQ-inverted-sorter7"
+  208 label *label214
+  209 read *tmp198 @this :block
+  210 write *tmp198 AÕFFJS-micro-processor9 :block
+  211 label *label215
+  212 set :block "AJPJR-underflow-gate8"
+  213 label *label218
+  214 read *tmp198 @this :block
+  215 write *tmp198 AÕFFJS-micro-processor9 :block
+  216 label *label219
+  217 set :block "AÕFFJS-micro-processor9"
+  218 label *label222
+  219 read *tmp198 @this :block
+  220 write *tmp198 AÕFFJS-micro-processor9 :block
+  221 label *label223
+  222 label *label70
   223 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   224 setaddr :buildBlockFromCfgLocal*retaddr *label81 (h:*label81)
   225 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label81) (h:*label81)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   171 write bank1 AÕFFJS-micro-processor9 ".bank"
   172 set :block "AJEMJJ-graphite-press0"
   173 label *label186
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  174 read *tmp198 @this "AJEMJJ-graphite-press0"
+  175 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   176 label *label187
   177 set :block "AJTJK-battery1"
   178 label *label190
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  179 read *tmp198 @this "AJTJK-battery1"
+  180 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
   181 label *label191
   182 set :block "ALTJL-battery2"
   183 label *label194
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  184 read *tmp198 @this "ALTJL-battery2"
+  185 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
   186 label *label195
   187 set :block "AJRJM-combustion-generator3"
   188 label *label198
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  189 read *tmp198 @this "AJRJM-combustion-generator3"
+  190 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   191 label *label199
   192 set :block "ALMQJN-silicon-smelter4"
   193 label *label202
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  194 read *tmp198 @this "ALMQJN-silicon-smelter4"
+  195 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   196 label *label203
   197 set :block "A{LNJO-inverted-sorter5"
   198 label *label206
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  199 read *tmp198 @this "A{LNJO-inverted-sorter5"
+  200 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   201 label *label207
   202 set :block "A©JNJP-unloader6"
   203 label *label210
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  204 read *tmp198 @this "A©JNJP-unloader6"
+  205 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   206 label *label211
   207 set :block "A{HNJQ-inverted-sorter7"
   208 label *label214
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  209 read *tmp198 @this "A{HNJQ-inverted-sorter7"
+  210 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   211 label *label215
   212 set :block "AJPJR-underflow-gate8"
   213 label *label218
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  214 read *tmp198 @this "AJPJR-underflow-gate8"
+  215 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   216 label *label219
   217 set :block "AÕFFJS-micro-processor9"
   218 label *label222
-    * read *tmp198 @this :block
-    * write *tmp198 AÕFFJS-micro-processor9 :block
+  219 read *tmp198 @this "AÕFFJS-micro-processor9"
+  220 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   221 label *label223
   222 label *label70
   223 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
 
   469 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   470 label *label136
   471 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
+  472 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   473 write .thoriumDrill processor2 ".thoriumDrill"
   474 write .thoriumContainer processor2 ".thoriumContainer"
   475 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   169 write processor2 AÕFFJS-micro-processor9 ".display"
   170 write .core AÕFFJS-micro-processor9 ".core"
   171 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   172 label *label186
   173 read *tmp198 @this "AJEMJJ-graphite-press0"
   174 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   175 label *label187
-    * set :block "AJTJK-battery1"
   176 label *label190
   177 read *tmp198 @this "AJTJK-battery1"
   178 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
   179 label *label191
-    * set :block "ALTJL-battery2"
   180 label *label194
   181 read *tmp198 @this "ALTJL-battery2"
   182 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
   183 label *label195
-    * set :block "AJRJM-combustion-generator3"
   184 label *label198
   185 read *tmp198 @this "AJRJM-combustion-generator3"
   186 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   187 label *label199
-    * set :block "ALMQJN-silicon-smelter4"
   188 label *label202
   189 read *tmp198 @this "ALMQJN-silicon-smelter4"
   190 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   191 label *label203
-    * set :block "A{LNJO-inverted-sorter5"
   192 label *label206
   193 read *tmp198 @this "A{LNJO-inverted-sorter5"
   194 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   195 label *label207
-    * set :block "A©JNJP-unloader6"
   196 label *label210
   197 read *tmp198 @this "A©JNJP-unloader6"
   198 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   199 label *label211
-    * set :block "A{HNJQ-inverted-sorter7"
   200 label *label214
   201 read *tmp198 @this "A{HNJQ-inverted-sorter7"
   202 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   203 label *label215
-    * set :block "AJPJR-underflow-gate8"
   204 label *label218
   205 read *tmp198 @this "AJPJR-underflow-gate8"
   206 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   207 label *label219
-    * set :block "AÕFFJS-micro-processor9"
   208 label *label222
   209 read *tmp198 @this "AÕFFJS-micro-processor9"
   210 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
 
   458 setaddr :buildRemoteBlockLocal*retaddr *label136 (h:*label136)
   459 call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
   460 label *label136
-    * set .thoriumContainer :buildRemoteBlockLocal*retval
   461 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   462 write .thoriumDrill processor2 ".thoriumDrill"
   463 write .thoriumContainer processor2 ".thoriumContainer"

Modifications by Inline function 'error' defined at CoreBuilder.mnd:20:1 (-4 instructions):
 
    94 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    95 jump *label51 notEqual :buildFirstTitaniumDrill:result false
    96 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label53 (h:*label53)
-    * call *label23 *invalid :error*retval (m:*label53) (h:*label53)
-    * label *label53
+   97 label *label227
+   98 set .ERROR :error:error
+   99 stop
+  100 label *label228
   101 label *label51
   102 label *label52
   103 write @pneumatic-drill processor2 ".nextBlock"
 
   391 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   392 jump *label125 notEqual :buildThoriumDrill:result false
   393 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label127 (h:*label127)
-    * call *label23 *invalid :error*retval (m:*label127) (h:*label127)
-    * label *label127
+  394 label *label229
+  395 set .ERROR :error:error
+  396 stop
+  397 label *label230
   398 label *label125
   399 label *label126
   400 write @laser-drill processor5 ":buildBlockAt:block"
 
   571 label *label160
   572 label *label153
   573 end
-    * label *label23
-    * set .ERROR :error:error
-    * stop
-    * label *label165
-    * return :error*retaddr
-    * end
   574 label *label24
   575 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
   576 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    95 jump *label51 notEqual :buildFirstTitaniumDrill:result false
    96 set :error:error "Cannot locate spot for titanium drill"
    97 label *label227
-    * set .ERROR :error:error
+   98 set .ERROR "Cannot locate spot for titanium drill"
    99 stop
   100 label *label228
   101 label *label51
 
   392 jump *label125 notEqual :buildThoriumDrill:result false
   393 set :error:error "Cannot locate spot for thorium drill"
   394 label *label229
-    * set .ERROR :error:error
+  395 set .ERROR "Cannot locate spot for thorium drill"
   396 stop
   397 label *label230
   398 label *label125

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    93 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    94 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    95 jump *label51 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    96 label *label227
    97 set .ERROR "Cannot locate spot for titanium drill"
    98 stop
 
   389 jump *label124 equal *tmp244 false
   390 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   391 jump *label125 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   392 label *label229
   393 set .ERROR "Cannot locate spot for thorium drill"
   394 stop

Modifications by Replicate loop condition at CoreBuilder.mnd:245:5 (+1 instructions):
 
   316 label *label110
   317 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   318 jump *label112 greaterThanEq *tmp82 2
+  319 label *label231
   320 write false processor5 ":supplyBase*finished"
   321 write 8 processor5 "@counter"
   322 label *label113
 
   324 read *tmp221 processor5 ":supplyBase*finished"
   325 jump *label113 equal *tmp221 false
   326 label *label111
-    * jump *label110 always
+  327 read *tmp82 AÕFFJS-micro-processor9 ".polys"
+  328 jump *label231 lessThan *tmp82 2
   329 label *label112
   330 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   331 label *label114

Modifications by Replicate loop condition at CoreBuilder.mnd:250:5 (+1 instructions):
 
   332 label *label115
   333 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   334 jump *label117 greaterThanEq *tmp80 2
+  335 label *label232
   336 write false processor5 ":supplyBase*finished"
   337 write 8 processor5 "@counter"
   338 label *label118
 
   340 read *tmp223 processor5 ":supplyBase*finished"
   341 jump *label118 equal *tmp223 false
   342 label *label116
-    * jump *label115 always
+  343 read *tmp80 AÕFFJS-micro-processor9 ".flares"
+  344 jump *label232 lessThan *tmp80 2
   345 label *label117
   346 write @ore-titanium processor2 ".nextBlock"
   347 ubind @flare

Modifications by Replicate loop condition at CoreBuilder.mnd:269:5 (+1 instructions):
 
   480 label *label140
   481 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   482 jump *label142 greaterThanEq *tmp82 3
+  483 label *label233
   484 write false processor5 ":supplyBase*finished"
   485 write 8 processor5 "@counter"
   486 label *label143
 
   488 read *tmp269 processor5 ":supplyBase*finished"
   489 jump *label143 equal *tmp269 false
   490 label *label141
-    * jump *label140 always
+  491 read *tmp82 AÕFFJS-micro-processor9 ".polys"
+  492 jump *label233 lessThan *tmp82 3
   493 label *label142
   494 op add :setMonoTarget.2:target 4 .scrap
   495 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Inline function 'lineUpUnits' defined at CoreBuilder.mnd:354:1 (+20 instructions):
 
   552 label *label158
   553 op add :lineUpUnits:y .coreY 6
   554 set :lineUpUnits:unit @mega
-    * setaddr :lineUpUnits*retaddr *label161 (h:*label161)
-    * call *label28 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
-    * label *label161
+  555 label *label234
+  556 ubind :lineUpUnits:unit
+  557 set :lineUpUnits:firstUnit @unit
+  558 label *label235
+  559 sensor :lineUpUnits:x @unit @flag
+  560 ucontrol itemDrop @air 1000
+  561 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  562 sensor *tmp312 @unit @mining
+  563 jump *label236 equal *tmp312 false
+  564 ucontrol stop
+  565 label *label236
+  566 label *label237
+  567 ubind :lineUpUnits:unit
+  568 label *label238
+  569 jump *label235 notEqual @unit :lineUpUnits:firstUnit
+  570 label *label239
+  571 label *label240
   572 op add :lineUpUnits:y .coreY 2
   573 set :lineUpUnits:unit @poly
-    * setaddr :lineUpUnits*retaddr *label162 (h:*label162)
-    * call *label28 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
-    * label *label162
+  574 label *label241
+  575 ubind :lineUpUnits:unit
+  576 set :lineUpUnits:firstUnit @unit
+  577 label *label242
+  578 sensor :lineUpUnits:x @unit @flag
+  579 ucontrol itemDrop @air 1000
+  580 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  581 sensor *tmp312 @unit @mining
+  582 jump *label243 equal *tmp312 false
+  583 ucontrol stop
+  584 label *label243
+  585 label *label244
+  586 ubind :lineUpUnits:unit
+  587 label *label245
+  588 jump *label242 notEqual @unit :lineUpUnits:firstUnit
+  589 label *label246
+  590 label *label247
   591 op sub :lineUpUnits:y .coreY 2
   592 set :lineUpUnits:unit @mono
-    * setaddr :lineUpUnits*retaddr *label163 (h:*label163)
-    * call *label28 *invalid :lineUpUnits*retval (m:*label163) (h:*label163)
-    * label *label163
+  593 label *label248
+  594 ubind :lineUpUnits:unit
+  595 set :lineUpUnits:firstUnit @unit
+  596 label *label249
+  597 sensor :lineUpUnits:x @unit @flag
+  598 ucontrol itemDrop @air 1000
+  599 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  600 sensor *tmp312 @unit @mining
+  601 jump *label250 equal *tmp312 false
+  602 ucontrol stop
+  603 label *label250
+  604 label *label251
+  605 ubind :lineUpUnits:unit
+  606 label *label252
+  607 jump *label249 notEqual @unit :lineUpUnits:firstUnit
+  608 label *label253
+  609 label *label254
   610 op sub :lineUpUnits:y .coreY 6
   611 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label164 (h:*label164)
-    * call *label28 *invalid :lineUpUnits*retval (m:*label164) (h:*label164)
-    * label *label164
+  612 label *label255
+  613 ubind :lineUpUnits:unit
+  614 set :lineUpUnits:firstUnit @unit
+  615 label *label256
+  616 sensor :lineUpUnits:x @unit @flag
+  617 ucontrol itemDrop @air 1000
+  618 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  619 sensor *tmp312 @unit @mining
+  620 jump *label257 equal *tmp312 false
+  621 ucontrol stop
+  622 label *label257
+  623 label *label258
+  624 ubind :lineUpUnits:unit
+  625 label *label259
+  626 jump *label256 notEqual @unit :lineUpUnits:firstUnit
+  627 label *label260
+  628 label *label261
   629 label *label159
   630 jump *label158 always
   631 label *label160
 
   702 label *label172
   703 return :flagUnits*retaddr
   704 end
-    * label *label28
-    * ubind :lineUpUnits:unit
-    * set :lineUpUnits:firstUnit @unit
-    * label *label180
-    * sensor :lineUpUnits:x @unit @flag
-    * ucontrol itemDrop @air 1000
-    * ucontrol move :lineUpUnits:x :lineUpUnits:y
-    * sensor *tmp312 @unit @mining
-    * jump *label183 equal *tmp312 false
-    * ucontrol stop
-    * label *label183
-    * label *label184
-    * ubind :lineUpUnits:unit
-    * label *label181
-    * jump *label180 notEqual @unit :lineUpUnits:firstUnit
-    * label *label182
-    * label *label179
-    * return :lineUpUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   553 op add :lineUpUnits:y .coreY 6
   554 set :lineUpUnits:unit @mega
   555 label *label234
-    * ubind :lineUpUnits:unit
+  556 ubind @mega
   557 set :lineUpUnits:firstUnit @unit
   558 label *label235
   559 sensor :lineUpUnits:x @unit @flag
 
   564 ucontrol stop
   565 label *label236
   566 label *label237
-    * ubind :lineUpUnits:unit
+  567 ubind @mega
   568 label *label238
   569 jump *label235 notEqual @unit :lineUpUnits:firstUnit
   570 label *label239
 
   572 op add :lineUpUnits:y .coreY 2
   573 set :lineUpUnits:unit @poly
   574 label *label241
-    * ubind :lineUpUnits:unit
+  575 ubind @poly
   576 set :lineUpUnits:firstUnit @unit
   577 label *label242
   578 sensor :lineUpUnits:x @unit @flag
 
   583 ucontrol stop
   584 label *label243
   585 label *label244
-    * ubind :lineUpUnits:unit
+  586 ubind @poly
   587 label *label245
   588 jump *label242 notEqual @unit :lineUpUnits:firstUnit
   589 label *label246
 
   591 op sub :lineUpUnits:y .coreY 2
   592 set :lineUpUnits:unit @mono
   593 label *label248
-    * ubind :lineUpUnits:unit
+  594 ubind @mono
   595 set :lineUpUnits:firstUnit @unit
   596 label *label249
   597 sensor :lineUpUnits:x @unit @flag
 
   602 ucontrol stop
   603 label *label250
   604 label *label251
-    * ubind :lineUpUnits:unit
+  605 ubind @mono
   606 label *label252
   607 jump *label249 notEqual @unit :lineUpUnits:firstUnit
   608 label *label253
 
   610 op sub :lineUpUnits:y .coreY 6
   611 set :lineUpUnits:unit @flare
   612 label *label255
-    * ubind :lineUpUnits:unit
+  613 ubind @flare
   614 set :lineUpUnits:firstUnit @unit
   615 label *label256
   616 sensor :lineUpUnits:x @unit @flag
 
   621 ucontrol stop
   622 label *label257
   623 label *label258
-    * ubind :lineUpUnits:unit
+  624 ubind @flare
   625 label *label259
   626 jump *label256 notEqual @unit :lineUpUnits:firstUnit
   627 label *label260

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   551 label *label157
   552 label *label158
   553 op add :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @mega
   554 label *label234
   555 ubind @mega
   556 set :lineUpUnits:firstUnit @unit
 
   569 label *label239
   570 label *label240
   571 op add :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @poly
   572 label *label241
   573 ubind @poly
   574 set :lineUpUnits:firstUnit @unit
 
   587 label *label246
   588 label *label247
   589 op sub :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @mono
   590 label *label248
   591 ubind @mono
   592 set :lineUpUnits:firstUnit @unit
 
   605 label *label253
   606 label *label254
   607 op sub :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @flare
   608 label *label255
   609 ubind @flare
   610 set :lineUpUnits:firstUnit @unit

Modifications by Inline function 'flagUnits' defined at CoreBuilder.mnd:340:1 (+14 instructions):
 
   534 control enabled processor5 false
   535 control enabled processor11 false
   536 set :flagUnits:unit @mega
-    * setaddr :flagUnits*retaddr *label154 (h:*label154)
-    * call *label27 *invalid :flagUnits*retval (m:*label154) (h:*label154)
-    * label *label154
+  537 label *label262
+  538 label *label263
+  539 ubind :flagUnits:unit
+  540 set :flagUnits:firstUnit @unit
+  541 label *label264
+  542 jump *label263 equal :flagUnits:firstUnit null
+  543 label *label265
+  544 op add :flagUnits:x .coreX 8
+  545 label *label266
+  546 ucontrol flag :flagUnits:x
+  547 op add :flagUnits:x :flagUnits:x 4
+  548 ubind :flagUnits:unit
+  549 label *label267
+  550 jump *label266 notEqual @unit :flagUnits:firstUnit
+  551 label *label268
+  552 label *label269
   553 set :flagUnits:unit @poly
-    * setaddr :flagUnits*retaddr *label155 (h:*label155)
-    * call *label27 *invalid :flagUnits*retval (m:*label155) (h:*label155)
-    * label *label155
+  554 label *label270
+  555 label *label271
+  556 ubind :flagUnits:unit
+  557 set :flagUnits:firstUnit @unit
+  558 label *label272
+  559 jump *label271 equal :flagUnits:firstUnit null
+  560 label *label273
+  561 op add :flagUnits:x .coreX 8
+  562 label *label274
+  563 ucontrol flag :flagUnits:x
+  564 op add :flagUnits:x :flagUnits:x 4
+  565 ubind :flagUnits:unit
+  566 label *label275
+  567 jump *label274 notEqual @unit :flagUnits:firstUnit
+  568 label *label276
+  569 label *label277
   570 set :flagUnits:unit @mono
-    * setaddr :flagUnits*retaddr *label156 (h:*label156)
-    * call *label27 *invalid :flagUnits*retval (m:*label156) (h:*label156)
-    * label *label156
+  571 label *label278
+  572 label *label279
+  573 ubind :flagUnits:unit
+  574 set :flagUnits:firstUnit @unit
+  575 label *label280
+  576 jump *label279 equal :flagUnits:firstUnit null
+  577 label *label281
+  578 op add :flagUnits:x .coreX 8
+  579 label *label282
+  580 ucontrol flag :flagUnits:x
+  581 op add :flagUnits:x :flagUnits:x 4
+  582 ubind :flagUnits:unit
+  583 label *label283
+  584 jump *label282 notEqual @unit :flagUnits:firstUnit
+  585 label *label284
+  586 label *label285
   587 set :flagUnits:unit @flare
-    * setaddr :flagUnits*retaddr *label157 (h:*label157)
-    * call *label27 *invalid :flagUnits*retval (m:*label157) (h:*label157)
-    * label *label157
+  588 label *label286
+  589 label *label287
+  590 ubind :flagUnits:unit
+  591 set :flagUnits:firstUnit @unit
+  592 label *label288
+  593 jump *label287 equal :flagUnits:firstUnit null
+  594 label *label289
+  595 op add :flagUnits:x .coreX 8
+  596 label *label290
+  597 ucontrol flag :flagUnits:x
+  598 op add :flagUnits:x :flagUnits:x 4
+  599 ubind :flagUnits:unit
+  600 label *label291
+  601 jump *label290 notEqual @unit :flagUnits:firstUnit
+  602 label *label292
+  603 label *label293
   604 label *label158
   605 op add :lineUpUnits:y .coreY 6
   606 label *label234
 
   732 label *label170
   733 return :buildUnits*retaddr
   734 end
-    * label *label27
-    * label *label173
-    * ubind :flagUnits:unit
-    * set :flagUnits:firstUnit @unit
-    * label *label174
-    * jump *label173 equal :flagUnits:firstUnit null
-    * label *label175
-    * op add :flagUnits:x .coreX 8
-    * label *label176
-    * ucontrol flag :flagUnits:x
-    * op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
-    * label *label177
-    * jump *label176 notEqual @unit :flagUnits:firstUnit
-    * label *label178
-    * label *label172
-    * return :flagUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   536 set :flagUnits:unit @mega
   537 label *label262
   538 label *label263
-    * ubind :flagUnits:unit
+  539 ubind @mega
   540 set :flagUnits:firstUnit @unit
   541 label *label264
   542 jump *label263 equal :flagUnits:firstUnit null
 
   545 label *label266
   546 ucontrol flag :flagUnits:x
   547 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  548 ubind @mega
   549 label *label267
   550 jump *label266 notEqual @unit :flagUnits:firstUnit
   551 label *label268
 
   553 set :flagUnits:unit @poly
   554 label *label270
   555 label *label271
-    * ubind :flagUnits:unit
+  556 ubind @poly
   557 set :flagUnits:firstUnit @unit
   558 label *label272
   559 jump *label271 equal :flagUnits:firstUnit null
 
   562 label *label274
   563 ucontrol flag :flagUnits:x
   564 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  565 ubind @poly
   566 label *label275
   567 jump *label274 notEqual @unit :flagUnits:firstUnit
   568 label *label276
 
   570 set :flagUnits:unit @mono
   571 label *label278
   572 label *label279
-    * ubind :flagUnits:unit
+  573 ubind @mono
   574 set :flagUnits:firstUnit @unit
   575 label *label280
   576 jump *label279 equal :flagUnits:firstUnit null
 
   579 label *label282
   580 ucontrol flag :flagUnits:x
   581 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  582 ubind @mono
   583 label *label283
   584 jump *label282 notEqual @unit :flagUnits:firstUnit
   585 label *label284
 
   587 set :flagUnits:unit @flare
   588 label *label286
   589 label *label287
-    * ubind :flagUnits:unit
+  590 ubind @flare
   591 set :flagUnits:firstUnit @unit
   592 label *label288
   593 jump *label287 equal :flagUnits:firstUnit null
 
   596 label *label290
   597 ucontrol flag :flagUnits:x
   598 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  599 ubind @flare
   600 label *label291
   601 jump *label290 notEqual @unit :flagUnits:firstUnit
   602 label *label292

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   533 control enabled processor3 false
   534 control enabled processor5 false
   535 control enabled processor11 false
-    * set :flagUnits:unit @mega
   536 label *label262
   537 label *label263
   538 ubind @mega
 
   549 jump *label266 notEqual @unit :flagUnits:firstUnit
   550 label *label268
   551 label *label269
-    * set :flagUnits:unit @poly
   552 label *label270
   553 label *label271
   554 ubind @poly
 
   565 jump *label274 notEqual @unit :flagUnits:firstUnit
   566 label *label276
   567 label *label277
-    * set :flagUnits:unit @mono
   568 label *label278
   569 label *label279
   570 ubind @mono
 
   581 jump *label282 notEqual @unit :flagUnits:firstUnit
   582 label *label284
   583 label *label285
-    * set :flagUnits:unit @flare
   584 label *label286
   585 label *label287
   586 ubind @flare

Modifications by Inline function 'buildRemoteBlockLocal' defined at CoreBuilder.mnd:41:1 (+45 instructions):
 
   417 set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   418 read :buildRemoteBlockLocal:x processor3 ".water1X"
   419 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label129 (h:*label129)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label129) (h:*label129)
-    * label *label129
+  420 label *label294
+  421 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  422 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  423 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  424 write false processor5 ":buildRemoteBlock*finished"
+  425 write 4 processor5 "@counter"
+  426 label *label295
+  427 wait 1e-15
+  428 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  429 jump *label295 equal *tmp290 false
+  430 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  431 label *label296
   432 read :buildRemoteBlockLocal:x processor3 ".water2X"
   433 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label130 (h:*label130)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label130) (h:*label130)
-    * label *label130
+  434 label *label297
+  435 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  436 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  437 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  438 write false processor5 ":buildRemoteBlock*finished"
+  439 write 4 processor5 "@counter"
+  440 label *label298
+  441 wait 1e-15
+  442 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  443 jump *label298 equal *tmp290 false
+  444 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  445 label *label299
   446 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   447 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   448 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label131 (h:*label131)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label131) (h:*label131)
-    * label *label131
+  449 label *label300
+  450 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  451 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  452 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  453 write false processor5 ":buildRemoteBlock*finished"
+  454 write 4 processor5 "@counter"
+  455 label *label301
+  456 wait 1e-15
+  457 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  458 jump *label301 equal *tmp290 false
+  459 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  460 label *label302
   461 set .thoriumGenerator :buildRemoteBlockLocal*retval
   462 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   463 read :buildRemoteBlockLocal:x processor3 ".node1X"
   464 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label132 (h:*label132)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label132) (h:*label132)
-    * label *label132
+  465 label *label303
+  466 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  467 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  468 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  469 write false processor5 ":buildRemoteBlock*finished"
+  470 write 4 processor5 "@counter"
+  471 label *label304
+  472 wait 1e-15
+  473 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  474 jump *label304 equal *tmp290 false
+  475 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  476 label *label305
   477 read :buildRemoteBlockLocal:x processor3 ".node2X"
   478 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label133 (h:*label133)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label133) (h:*label133)
-    * label *label133
+  479 label *label306
+  480 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  481 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  482 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  483 write false processor5 ":buildRemoteBlock*finished"
+  484 write 4 processor5 "@counter"
+  485 label *label307
+  486 wait 1e-15
+  487 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  488 jump *label307 equal *tmp290 false
+  489 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  490 label *label308
   491 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   492 read :buildRemoteBlockLocal:x processor3 ".panelX"
   493 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label134 (h:*label134)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label134) (h:*label134)
-    * label *label134
+  494 label *label309
+  495 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  496 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  497 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  498 write false processor5 ":buildRemoteBlock*finished"
+  499 write 4 processor5 "@counter"
+  500 label *label310
+  501 wait 1e-15
+  502 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  503 jump *label310 equal *tmp290 false
+  504 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  505 label *label311
   506 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   507 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   508 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label135 (h:*label135)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label135) (h:*label135)
-    * label *label135
+  509 label *label312
+  510 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  511 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  512 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  513 write false processor5 ":buildRemoteBlock*finished"
+  514 write 4 processor5 "@counter"
+  515 label *label313
+  516 wait 1e-15
+  517 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  518 jump *label313 equal *tmp290 false
+  519 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  520 label *label314
   521 set .thoriumBattery :buildRemoteBlockLocal*retval
   522 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   523 read :buildRemoteBlockLocal:x processor3 ".containerX"
   524 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label136 (h:*label136)
-    * call *label24 *invalid :buildRemoteBlockLocal*retval (m:*label136) (h:*label136)
-    * label *label136
+  525 label *label315
+  526 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  527 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  528 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  529 write false processor5 ":buildRemoteBlock*finished"
+  530 write 4 processor5 "@counter"
+  531 label *label316
+  532 wait 1e-15
+  533 read *tmp290 processor5 ":buildRemoteBlock*finished"
+  534 jump *label316 equal *tmp290 false
+  535 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  536 label *label317
   537 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   538 write .thoriumDrill processor2 ".thoriumDrill"
   539 write .thoriumContainer processor2 ".thoriumContainer"
 
   747 label *label160
   748 label *label153
   749 end
-    * label *label24
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
-    * write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
-    * write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
-    * write false processor5 ":buildRemoteBlock*finished"
-    * write 4 processor5 "@counter"
-    * label *label167
-    * wait 1e-15
-    * read *tmp290 processor5 ":buildRemoteBlock*finished"
-    * jump *label167 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label166
-    * return :buildRemoteBlockLocal*retaddr
-    * end
   750 label *label25
   751 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
   752 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-5 instructions):
 
   418 read :buildRemoteBlockLocal:x processor3 ".water1X"
   419 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   420 label *label294
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  421 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   422 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   423 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   424 write false processor5 ":buildRemoteBlock*finished"
 
   427 wait 1e-15
   428 read *tmp290 processor5 ":buildRemoteBlock*finished"
   429 jump *label295 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   430 label *label296
   431 read :buildRemoteBlockLocal:x processor3 ".water2X"
   432 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   433 label *label297
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  434 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   435 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   436 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   437 write false processor5 ":buildRemoteBlock*finished"
 
   440 wait 1e-15
   441 read *tmp290 processor5 ":buildRemoteBlock*finished"
   442 jump *label298 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   443 label *label299
   444 set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   445 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   446 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   447 label *label300
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  448 write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlock:cfg"
   449 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   450 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   451 write false processor5 ":buildRemoteBlock*finished"
 
   461 read :buildRemoteBlockLocal:x processor3 ".node1X"
   462 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   463 label *label303
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  464 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   465 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   466 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   467 write false processor5 ":buildRemoteBlock*finished"
 
   470 wait 1e-15
   471 read *tmp290 processor5 ":buildRemoteBlock*finished"
   472 jump *label304 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   473 label *label305
   474 read :buildRemoteBlockLocal:x processor3 ".node2X"
   475 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   476 label *label306
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  477 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   478 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   479 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   480 write false processor5 ":buildRemoteBlock*finished"
 
   483 wait 1e-15
   484 read *tmp290 processor5 ":buildRemoteBlock*finished"
   485 jump *label307 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   486 label *label308
   487 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   488 read :buildRemoteBlockLocal:x processor3 ".panelX"
   489 read :buildRemoteBlockLocal:y processor3 ".panelY"
   490 label *label309
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  491 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   492 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   493 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   494 write false processor5 ":buildRemoteBlock*finished"
 
   497 wait 1e-15
   498 read *tmp290 processor5 ":buildRemoteBlock*finished"
   499 jump *label310 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   500 label *label311
   501 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   502 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   503 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   504 label *label312
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  505 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   506 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   507 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   508 write false processor5 ":buildRemoteBlock*finished"
 
   518 read :buildRemoteBlockLocal:x processor3 ".containerX"
   519 read :buildRemoteBlockLocal:y processor3 ".containerY"
   520 label *label315
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  521 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   522 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   523 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   524 write false processor5 ":buildRemoteBlock*finished"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   414 read *tmp254 processor5 ":buildBlockAt*finished"
   415 jump *label128 equal *tmp254 false
   416 read .thoriumDrill processor5 ":buildBlockAt*retval"
-    * set :buildRemoteBlockLocal:cfg "A¡AOJ[-water-extractor17"
   417 read :buildRemoteBlockLocal:x processor3 ".water1X"
   418 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   419 label *label294
 
   440 read *tmp290 processor5 ":buildRemoteBlock*finished"
   441 jump *label298 equal *tmp290 false
   442 label *label299
-    * set :buildRemoteBlockLocal:cfg "AAKJ\-steam-generator18"
   443 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   444 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   445 label *label300
 
   455 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   456 label *label302
   457 set .thoriumGenerator :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   458 read :buildRemoteBlockLocal:x processor3 ".node1X"
   459 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   460 label *label303
 
   481 read *tmp290 processor5 ":buildRemoteBlock*finished"
   482 jump *label307 equal *tmp290 false
   483 label *label308
-    * set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   484 read :buildRemoteBlockLocal:x processor3 ".panelX"
   485 read :buildRemoteBlockLocal:y processor3 ".panelY"
   486 label *label309
 
   494 read *tmp290 processor5 ":buildRemoteBlock*finished"
   495 jump *label310 equal *tmp290 false
   496 label *label311
-    * set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   497 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   498 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   499 label *label312
 
   509 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   510 label *label314
   511 set .thoriumBattery :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   512 read :buildRemoteBlockLocal:x processor3 ".containerX"
   513 read :buildRemoteBlockLocal:y processor3 ".containerY"
   514 label *label315

Modifications by Inline function call at CoreBuilder.mnd:137:5 (+7 instructions):
 
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label37 (h:*label37)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label37) (h:*label37)
-    * label *label37
+   29 label *label318
+   30 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   31 write null processor5 ":buildBlockFromCfg:config"
+   32 write false processor5 ":buildBlockFromCfg*finished"
+   33 write 2 processor5 "@counter"
+   34 label *label319
+   35 wait 1e-15
+   36 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+   37 jump *label319 equal *tmp294 false
+   38 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   39 jump *label320 always
+   40 label *label320
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label38 (h:*label38)
    43 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label38) (h:*label38)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    29 label *label318
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   30 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    31 write null processor5 ":buildBlockFromCfg:config"
    32 write false processor5 ":buildBlockFromCfg*finished"
    33 write 2 processor5 "@counter"
 
    35 wait 1e-15
    36 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    37 jump *label319 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    38 jump *label320 always
    39 label *label320
    40 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    25 write .scrap processor2 ".scrap"
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
-    * set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    28 label *label318
    29 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    30 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:138:5 (+7 instructions):
 
    37 jump *label320 always
    38 label *label320
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label38 (h:*label38)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label38) (h:*label38)
-    * label *label38
+   40 label *label321
+   41 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   42 write null processor5 ":buildBlockFromCfg:config"
+   43 write false processor5 ":buildBlockFromCfg*finished"
+   44 write 2 processor5 "@counter"
+   45 label *label322
+   46 wait 1e-15
+   47 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+   48 jump *label322 equal *tmp294 false
+   49 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   50 jump *label323 always
+   51 label *label323
    52 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    53 setaddr :buildBlockFromCfgLocal*retaddr *label39 (h:*label39)
    54 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label39) (h:*label39)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    38 label *label320
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    40 label *label321
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   41 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    42 write null processor5 ":buildBlockFromCfg:config"
    43 write false processor5 ":buildBlockFromCfg*finished"
    44 write 2 processor5 "@counter"
 
    46 wait 1e-15
    47 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    48 jump *label322 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    49 jump *label323 always
    50 label *label323
    51 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    36 jump *label319 equal *tmp294 false
    37 jump *label320 always
    38 label *label320
-    * set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    39 label *label321
    40 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    41 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:139:5 (+7 instructions):
 
    48 jump *label323 always
    49 label *label323
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label39 (h:*label39)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label39) (h:*label39)
-    * label *label39
+   51 label *label324
+   52 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   53 write null processor5 ":buildBlockFromCfg:config"
+   54 write false processor5 ":buildBlockFromCfg*finished"
+   55 write 2 processor5 "@counter"
+   56 label *label325
+   57 wait 1e-15
+   58 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+   59 jump *label325 equal *tmp294 false
+   60 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   61 jump *label326 always
+   62 label *label326
    63 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    64 setaddr :buildBlockFromCfgLocal*retaddr *label40 (h:*label40)
    65 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label40) (h:*label40)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    49 label *label323
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    51 label *label324
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   52 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    53 write null processor5 ":buildBlockFromCfg:config"
    54 write false processor5 ":buildBlockFromCfg*finished"
    55 write 2 processor5 "@counter"
 
    57 wait 1e-15
    58 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    59 jump *label325 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    60 jump *label326 always
    61 label *label326
    62 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    47 jump *label322 equal *tmp294 false
    48 jump *label323 always
    49 label *label323
-    * set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    50 label *label324
    51 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    52 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:140:5 (+7 instructions):
 
    59 jump *label326 always
    60 label *label326
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label40 (h:*label40)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label40) (h:*label40)
-    * label *label40
+   62 label *label327
+   63 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   64 write null processor5 ":buildBlockFromCfg:config"
+   65 write false processor5 ":buildBlockFromCfg*finished"
+   66 write 2 processor5 "@counter"
+   67 label *label328
+   68 wait 1e-15
+   69 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+   70 jump *label328 equal *tmp294 false
+   71 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   72 jump *label329 always
+   73 label *label329
    74 write 400 processor5 ".powerTarget"
    75 set .sandContainer .core
    76 jump *label41 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    60 label *label326
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    62 label *label327
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   63 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    64 write null processor5 ":buildBlockFromCfg:config"
    65 write false processor5 ":buildBlockFromCfg*finished"
    66 write 2 processor5 "@counter"
 
    68 wait 1e-15
    69 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    70 jump *label328 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    71 jump *label329 always
    72 label *label329
    73 write 400 processor5 ".powerTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    58 jump *label325 equal *tmp294 false
    59 jump *label326 always
    60 label *label326
-    * set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    61 label *label327
    62 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    63 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:153:5 (+7 instructions):
 
    89 label *label41
    90 label *label42
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label46 (h:*label46)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label46) (h:*label46)
-    * label *label46
+   92 label *label330
+   93 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   94 write null processor5 ":buildBlockFromCfg:config"
+   95 write false processor5 ":buildBlockFromCfg*finished"
+   96 write 2 processor5 "@counter"
+   97 label *label331
+   98 wait 1e-15
+   99 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  100 jump *label331 equal *tmp294 false
+  101 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  102 jump *label332 always
+  103 label *label332
   104 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   105 setaddr :buildBlockFromCfgLocal*retaddr *label47 (h:*label47)
   106 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label47) (h:*label47)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    90 label *label42
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    92 label *label330
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    94 write null processor5 ":buildBlockFromCfg:config"
    95 write false processor5 ":buildBlockFromCfg*finished"
    96 write 2 processor5 "@counter"
 
    98 wait 1e-15
    99 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   100 jump *label331 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   101 jump *label332 always
   102 label *label332
   103 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    88 label *label45
    89 label *label41
    90 label *label42
-    * set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    91 label *label330
    92 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:154:5 (+7 instructions):
 
   100 jump *label332 always
   101 label *label332
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label47 (h:*label47)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label47) (h:*label47)
-    * label *label47
+  103 label *label333
+  104 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  105 write null processor5 ":buildBlockFromCfg:config"
+  106 write false processor5 ":buildBlockFromCfg*finished"
+  107 write 2 processor5 "@counter"
+  108 label *label334
+  109 wait 1e-15
+  110 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  111 jump *label334 equal *tmp294 false
+  112 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  113 jump *label335 always
+  114 label *label335
   115 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   116 write false processor5 ":meetTargetCfg*finished"
   117 write 7 processor5 "@counter"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   101 label *label332
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   103 label *label333
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   111 jump *label334 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label335 always
   113 label *label335
   114 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    99 jump *label331 equal *tmp294 false
   100 jump *label332 always
   101 label *label332
-    * set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   102 label *label333
   103 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   104 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:170:5 (+7 instructions):
 
   186 label *label56
   187 write .sandContainer processor7 ".sandContainer"
   188 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label63 (h:*label63)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label63) (h:*label63)
-    * label *label63
+  189 label *label336
+  190 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  191 write null processor5 ":buildBlockFromCfg:config"
+  192 write false processor5 ":buildBlockFromCfg*finished"
+  193 write 2 processor5 "@counter"
+  194 label *label337
+  195 wait 1e-15
+  196 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  197 jump *label337 equal *tmp294 false
+  198 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  199 jump *label338 always
+  200 label *label338
   201 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   202 setaddr :buildBlockFromCfgLocal*retaddr *label64 (h:*label64)
   203 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label64) (h:*label64)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   187 write .sandContainer processor7 ".sandContainer"
   188 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   189 label *label336
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  190 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   191 write null processor5 ":buildBlockFromCfg:config"
   192 write false processor5 ":buildBlockFromCfg*finished"
   193 write 2 processor5 "@counter"
 
   195 wait 1e-15
   196 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   197 jump *label337 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   198 jump *label338 always
   199 label *label338
   200 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   185 label *label55
   186 label *label56
   187 write .sandContainer processor7 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   188 label *label336
   189 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   190 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:171:5 (+7 instructions):
 
   197 jump *label338 always
   198 label *label338
   199 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label64 (h:*label64)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label64) (h:*label64)
-    * label *label64
+  200 label *label339
+  201 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  202 write null processor5 ":buildBlockFromCfg:config"
+  203 write false processor5 ":buildBlockFromCfg*finished"
+  204 write 2 processor5 "@counter"
+  205 label *label340
+  206 wait 1e-15
+  207 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  208 jump *label340 equal *tmp294 false
+  209 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  210 jump *label341 always
+  211 label *label341
   212 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   213 setaddr :buildBlockFromCfgLocal*retaddr *label65 (h:*label65)
   214 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label65) (h:*label65)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   198 label *label338
   199 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   200 label *label339
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  201 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   202 write null processor5 ":buildBlockFromCfg:config"
   203 write false processor5 ":buildBlockFromCfg*finished"
   204 write 2 processor5 "@counter"
 
   206 wait 1e-15
   207 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   208 jump *label340 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   209 jump *label341 always
   210 label *label341
   211 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   196 jump *label337 equal *tmp294 false
   197 jump *label338 always
   198 label *label338
-    * set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   199 label *label339
   200 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   201 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:172:5 (+7 instructions):
 
   208 jump *label341 always
   209 label *label341
   210 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label65 (h:*label65)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label65) (h:*label65)
-    * label *label65
+  211 label *label342
+  212 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  213 write null processor5 ":buildBlockFromCfg:config"
+  214 write false processor5 ":buildBlockFromCfg*finished"
+  215 write 2 processor5 "@counter"
+  216 label *label343
+  217 wait 1e-15
+  218 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  219 jump *label343 equal *tmp294 false
+  220 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  221 jump *label344 always
+  222 label *label344
   223 write 80 processor5 ".graphiteSurplus"
   224 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   225 write processor10 processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   209 label *label341
   210 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   211 label *label342
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  212 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   213 write null processor5 ":buildBlockFromCfg:config"
   214 write false processor5 ":buildBlockFromCfg*finished"
   215 write 2 processor5 "@counter"
 
   217 wait 1e-15
   218 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   219 jump *label343 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   220 jump *label344 always
   221 label *label344
   222 write 80 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   207 jump *label340 equal *tmp294 false
   208 jump *label341 always
   209 label *label341
-    * set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   210 label *label342
   211 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   212 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:186:5 (+7 instructions):
 
   274 label *label223
   275 label *label70
   276 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label81 (h:*label81)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label81) (h:*label81)
-    * label *label81
+  277 label *label345
+  278 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  279 write null processor5 ":buildBlockFromCfg:config"
+  280 write false processor5 ":buildBlockFromCfg*finished"
+  281 write 2 processor5 "@counter"
+  282 label *label346
+  283 wait 1e-15
+  284 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  285 jump *label346 equal *tmp294 false
+  286 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  287 jump *label347 always
+  288 label *label347
   289 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   290 setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
   291 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   275 label *label70
   276 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   277 label *label345
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  278 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   279 write null processor5 ":buildBlockFromCfg:config"
   280 write false processor5 ":buildBlockFromCfg*finished"
   281 write 2 processor5 "@counter"
 
   283 wait 1e-15
   284 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   285 jump *label346 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   286 jump *label347 always
   287 label *label347
   288 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   273 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   274 label *label223
   275 label *label70
-    * set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   276 label *label345
   277 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   278 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:187:5 (+7 instructions):
 
   285 jump *label347 always
   286 label *label347
   287 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label82 (h:*label82)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label82) (h:*label82)
-    * label *label82
+  288 label *label348
+  289 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  290 write null processor5 ":buildBlockFromCfg:config"
+  291 write false processor5 ":buildBlockFromCfg*finished"
+  292 write 2 processor5 "@counter"
+  293 label *label349
+  294 wait 1e-15
+  295 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  296 jump *label349 equal *tmp294 false
+  297 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  298 jump *label350 always
+  299 label *label350
   300 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   301 setaddr :buildBlockFromCfgLocal*retaddr *label83 (h:*label83)
   302 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label83) (h:*label83)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   286 label *label347
   287 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   288 label *label348
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  289 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   290 write null processor5 ":buildBlockFromCfg:config"
   291 write false processor5 ":buildBlockFromCfg*finished"
   292 write 2 processor5 "@counter"
 
   294 wait 1e-15
   295 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   296 jump *label349 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   297 jump *label350 always
   298 label *label350
   299 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   284 jump *label346 equal *tmp294 false
   285 jump *label347 always
   286 label *label347
-    * set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   287 label *label348
   288 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   289 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:188:5 (+7 instructions):
 
   296 jump *label350 always
   297 label *label350
   298 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label83 (h:*label83)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label83) (h:*label83)
-    * label *label83
+  299 label *label351
+  300 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  301 write null processor5 ":buildBlockFromCfg:config"
+  302 write false processor5 ":buildBlockFromCfg*finished"
+  303 write 2 processor5 "@counter"
+  304 label *label352
+  305 wait 1e-15
+  306 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  307 jump *label352 equal *tmp294 false
+  308 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  309 jump *label353 always
+  310 label *label353
   311 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   312 setaddr :buildBlockFromCfgLocal*retaddr *label84 (h:*label84)
   313 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label84) (h:*label84)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   297 label *label350
   298 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   299 label *label351
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  300 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   301 write null processor5 ":buildBlockFromCfg:config"
   302 write false processor5 ":buildBlockFromCfg*finished"
   303 write 2 processor5 "@counter"
 
   305 wait 1e-15
   306 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   307 jump *label352 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   308 jump *label353 always
   309 label *label353
   310 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   295 jump *label349 equal *tmp294 false
   296 jump *label350 always
   297 label *label350
-    * set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   298 label *label351
   299 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   300 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:190:5 (+7 instructions):
 
   307 jump *label353 always
   308 label *label353
   309 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label84 (h:*label84)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label84) (h:*label84)
-    * label *label84
+  310 label *label354
+  311 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  312 write null processor5 ":buildBlockFromCfg:config"
+  313 write false processor5 ":buildBlockFromCfg*finished"
+  314 write 2 processor5 "@counter"
+  315 label *label355
+  316 wait 1e-15
+  317 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  318 jump *label355 equal *tmp294 false
+  319 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  320 jump *label356 always
+  321 label *label356
   322 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   323 label *label85
   324 write 5 AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   308 label *label353
   309 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   310 label *label354
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  311 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   312 write null processor5 ":buildBlockFromCfg:config"
   313 write false processor5 ":buildBlockFromCfg*finished"
   314 write 2 processor5 "@counter"
 
   316 wait 1e-15
   317 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   318 jump *label355 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   319 jump *label356 always
   320 label *label356
   321 write 1 AÕFFJS-micro-processor9 ".flareTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   306 jump *label352 equal *tmp294 false
   307 jump *label353 always
   308 label *label353
-    * set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   309 label *label354
   310 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   311 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:215:5 (+7 instructions):
 
   347 label *label90
   348 write 65 processor5 ".siliconSurplus"
   349 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
-    * label *label94
+  350 label *label357
+  351 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  352 write null processor5 ":buildBlockFromCfg:config"
+  353 write false processor5 ":buildBlockFromCfg*finished"
+  354 write 2 processor5 "@counter"
+  355 label *label358
+  356 wait 1e-15
+  357 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  358 jump *label358 equal *tmp294 false
+  359 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  360 jump *label359 always
+  361 label *label359
   362 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   363 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   364 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   348 write 65 processor5 ".siliconSurplus"
   349 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   350 label *label357
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  351 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   352 write null processor5 ":buildBlockFromCfg:config"
   353 write false processor5 ":buildBlockFromCfg*finished"
   354 write 2 processor5 "@counter"
 
   356 wait 1e-15
   357 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   358 jump *label358 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   359 jump *label359 always
   360 label *label359
   361 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   346 jump *label88 lessThan *tmp81 3
   347 label *label90
   348 write 65 processor5 ".siliconSurplus"
-    * set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   349 label *label357
   350 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   351 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:216:5 (+7 instructions):
 
   358 jump *label359 always
   359 label *label359
   360 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
-    * label *label95
+  361 label *label360
+  362 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  363 write null processor5 ":buildBlockFromCfg:config"
+  364 write false processor5 ":buildBlockFromCfg*finished"
+  365 write 2 processor5 "@counter"
+  366 label *label361
+  367 wait 1e-15
+  368 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  369 jump *label361 equal *tmp294 false
+  370 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  371 jump *label362 always
+  372 label *label362
   373 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   374 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   375 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   359 label *label359
   360 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   361 label *label360
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  362 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   363 write null processor5 ":buildBlockFromCfg:config"
   364 write false processor5 ":buildBlockFromCfg*finished"
   365 write 2 processor5 "@counter"
 
   367 wait 1e-15
   368 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   369 jump *label361 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   370 jump *label362 always
   371 label *label362
   372 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   357 jump *label358 equal *tmp294 false
   358 jump *label359 always
   359 label *label359
-    * set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   360 label *label360
   361 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   362 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:217:5 (+7 instructions):
 
   369 jump *label362 always
   370 label *label362
   371 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
-    * label *label96
+  372 label *label363
+  373 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  374 write null processor5 ":buildBlockFromCfg:config"
+  375 write false processor5 ":buildBlockFromCfg*finished"
+  376 write 2 processor5 "@counter"
+  377 label *label364
+  378 wait 1e-15
+  379 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  380 jump *label364 equal *tmp294 false
+  381 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  382 jump *label365 always
+  383 label *label365
   384 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   385 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   386 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   370 label *label362
   371 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   372 label *label363
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  373 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   374 write null processor5 ":buildBlockFromCfg:config"
   375 write false processor5 ":buildBlockFromCfg*finished"
   376 write 2 processor5 "@counter"
 
   378 wait 1e-15
   379 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   380 jump *label364 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   381 jump *label365 always
   382 label *label365
   383 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   368 jump *label361 equal *tmp294 false
   369 jump *label362 always
   370 label *label362
-    * set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   371 label *label363
   372 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   373 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:220:5 (+7 instructions):
 
   380 jump *label365 always
   381 label *label365
   382 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
-    * label *label97
+  383 label *label366
+  384 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  385 write null processor5 ":buildBlockFromCfg:config"
+  386 write false processor5 ":buildBlockFromCfg*finished"
+  387 write 2 processor5 "@counter"
+  388 label *label367
+  389 wait 1e-15
+  390 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  391 jump *label367 equal *tmp294 false
+  392 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  393 jump *label368 always
+  394 label *label368
   395 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   396 setaddr :buildBlockFromCfgLocal*retaddr *label98 (h:*label98)
   397 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label98) (h:*label98)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   381 label *label365
   382 set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   383 label *label366
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  384 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   385 write null processor5 ":buildBlockFromCfg:config"
   386 write false processor5 ":buildBlockFromCfg*finished"
   387 write 2 processor5 "@counter"
 
   389 wait 1e-15
   390 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   391 jump *label367 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   392 jump *label368 always
   393 label *label368
   394 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   379 jump *label364 equal *tmp294 false
   380 jump *label365 always
   381 label *label365
-    * set :buildBlockFromCfgLocal:cfg "A¡AOJ[-water-extractor17"
   382 label *label366
   383 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   384 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:221:5 (+7 instructions):
 
   391 jump *label368 always
   392 label *label368
   393 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label98 (h:*label98)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label98) (h:*label98)
-    * label *label98
+  394 label *label369
+  395 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  396 write null processor5 ":buildBlockFromCfg:config"
+  397 write false processor5 ":buildBlockFromCfg*finished"
+  398 write 2 processor5 "@counter"
+  399 label *label370
+  400 wait 1e-15
+  401 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  402 jump *label370 equal *tmp294 false
+  403 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  404 jump *label371 always
+  405 label *label371
   406 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   407 setaddr :buildBlockFromCfgLocal*retaddr *label99 (h:*label99)
   408 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label99) (h:*label99)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   392 label *label368
   393 set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   394 label *label369
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  395 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   396 write null processor5 ":buildBlockFromCfg:config"
   397 write false processor5 ":buildBlockFromCfg*finished"
   398 write 2 processor5 "@counter"
 
   400 wait 1e-15
   401 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   402 jump *label370 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   403 jump *label371 always
   404 label *label371
   405 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   390 jump *label367 equal *tmp294 false
   391 jump *label368 always
   392 label *label368
-    * set :buildBlockFromCfgLocal:cfg "AAKJ\-steam-generator18"
   393 label *label369
   394 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   395 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:223:5 (+7 instructions):
 
   402 jump *label371 always
   403 label *label371
   404 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label99 (h:*label99)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label99) (h:*label99)
-    * label *label99
+  405 label *label372
+  406 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  407 write null processor5 ":buildBlockFromCfg:config"
+  408 write false processor5 ":buildBlockFromCfg*finished"
+  409 write 2 processor5 "@counter"
+  410 label *label373
+  411 wait 1e-15
+  412 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  413 jump *label373 equal *tmp294 false
+  414 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  415 jump *label374 always
+  416 label *label374
   417 write 200 processor5 ".graphiteSurplus"
   418 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   419 setaddr :buildBlockFromCfgLocal*retaddr *label100 (h:*label100)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   403 label *label371
   404 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   405 label *label372
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  406 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
   407 write null processor5 ":buildBlockFromCfg:config"
   408 write false processor5 ":buildBlockFromCfg*finished"
   409 write 2 processor5 "@counter"
 
   411 wait 1e-15
   412 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   413 jump *label373 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   414 jump *label374 always
   415 label *label374
   416 write 200 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   401 jump *label370 equal *tmp294 false
   402 jump *label371 always
   403 label *label371
-    * set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   404 label *label372
   405 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
   406 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:226:5 (+7 instructions):
 
   414 label *label374
   415 write 200 processor5 ".graphiteSurplus"
   416 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label100 (h:*label100)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label100) (h:*label100)
-    * label *label100
+  417 label *label375
+  418 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  419 write null processor5 ":buildBlockFromCfg:config"
+  420 write false processor5 ":buildBlockFromCfg*finished"
+  421 write 2 processor5 "@counter"
+  422 label *label376
+  423 wait 1e-15
+  424 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  425 jump *label376 equal *tmp294 false
+  426 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  427 jump *label377 always
+  428 label *label377
   429 jump *label101 equal .scrap false
   430 set :buildBlockFromCfgLocal:cfg "AXTLJn-pulverizer36"
   431 setaddr :buildBlockFromCfgLocal*retaddr *label103 (h:*label103)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   415 write 200 processor5 ".graphiteSurplus"
   416 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   417 label *label375
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  418 write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFromCfg:cfg"
   419 write null processor5 ":buildBlockFromCfg:config"
   420 write false processor5 ":buildBlockFromCfg*finished"
   421 write 2 processor5 "@counter"
 
   423 wait 1e-15
   424 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   425 jump *label376 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   426 jump *label377 always
   427 label *label377
   428 jump *label101 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   413 jump *label374 always
   414 label *label374
   415 write 200 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   416 label *label375
   417 write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFromCfg:cfg"
   418 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:232:5 (+7 instructions):
 
   432 label *label101
   433 label *label102
   434 set :buildBlockFromCfgLocal:cfg "A©HFJa-unloader23"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label104 (h:*label104)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label104) (h:*label104)
-    * label *label104
+  435 label *label378
+  436 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  437 write null processor5 ":buildBlockFromCfg:config"
+  438 write false processor5 ":buildBlockFromCfg*finished"
+  439 write 2 processor5 "@counter"
+  440 label *label379
+  441 wait 1e-15
+  442 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  443 jump *label379 equal *tmp294 false
+  444 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  445 jump *label380 always
+  446 label *label380
   447 set :buildBlockFromCfgLocal:cfg "A{HDJb-inverted-sorter24"
   448 setaddr :buildBlockFromCfgLocal*retaddr *label105 (h:*label105)
   449 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label105) (h:*label105)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   433 label *label102
   434 set :buildBlockFromCfgLocal:cfg "A©HFJa-unloader23"
   435 label *label378
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  436 write "A©HFJa-unloader23" processor5 ":buildBlockFromCfg:cfg"
   437 write null processor5 ":buildBlockFromCfg:config"
   438 write false processor5 ":buildBlockFromCfg*finished"
   439 write 2 processor5 "@counter"
 
   441 wait 1e-15
   442 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   443 jump *label379 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   444 jump *label380 always
   445 label *label380
   446 set :buildBlockFromCfgLocal:cfg "A{HDJb-inverted-sorter24"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   431 label *label103
   432 label *label101
   433 label *label102
-    * set :buildBlockFromCfgLocal:cfg "A©HFJa-unloader23"
   434 label *label378
   435 write "A©HFJa-unloader23" processor5 ":buildBlockFromCfg:cfg"
   436 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:233:5 (+7 instructions):
 
   443 jump *label380 always
   444 label *label380
   445 set :buildBlockFromCfgLocal:cfg "A{HDJb-inverted-sorter24"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label105 (h:*label105)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label105) (h:*label105)
-    * label *label105
+  446 label *label381
+  447 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  448 write null processor5 ":buildBlockFromCfg:config"
+  449 write false processor5 ":buildBlockFromCfg*finished"
+  450 write 2 processor5 "@counter"
+  451 label *label382
+  452 wait 1e-15
+  453 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  454 jump *label382 equal *tmp294 false
+  455 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  456 jump *label383 always
+  457 label *label383
   458 set :buildBlockFromCfgLocal:cfg "AÀF@Lc-additive-reconstructor25"
   459 setaddr :buildBlockFromCfgLocal*retaddr *label106 (h:*label106)
   460 call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label106) (h:*label106)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   444 label *label380
   445 set :buildBlockFromCfgLocal:cfg "A{HDJb-inverted-sorter24"
   446 label *label381
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  447 write "A{HDJb-inverted-sorter24" processor5 ":buildBlockFromCfg:cfg"
   448 write null processor5 ":buildBlockFromCfg:config"
   449 write false processor5 ":buildBlockFromCfg*finished"
   450 write 2 processor5 "@counter"
 
   452 wait 1e-15
   453 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   454 jump *label382 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   455 jump *label383 always
   456 label *label383
   457 set :buildBlockFromCfgLocal:cfg "AÀF@Lc-additive-reconstructor25"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   442 jump *label379 equal *tmp294 false
   443 jump *label380 always
   444 label *label380
-    * set :buildBlockFromCfgLocal:cfg "A{HDJb-inverted-sorter24"
   445 label *label381
   446 write "A{HDJb-inverted-sorter24" processor5 ":buildBlockFromCfg:cfg"
   447 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:234:5 (+7 instructions):
 
   454 jump *label383 always
   455 label *label383
   456 set :buildBlockFromCfgLocal:cfg "AÀF@Lc-additive-reconstructor25"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label106 (h:*label106)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label106) (h:*label106)
-    * label *label106
+  457 label *label384
+  458 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  459 write null processor5 ":buildBlockFromCfg:config"
+  460 write false processor5 ":buildBlockFromCfg*finished"
+  461 write 2 processor5 "@counter"
+  462 label *label385
+  463 wait 1e-15
+  464 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  465 jump *label385 equal *tmp294 false
+  466 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  467 jump *label386 always
+  468 label *label386
   469 write 1000 processor5 ".siliconSurplus"
   470 write 20 processor5 ".siliconMonoSurplus"
   471 write 100 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   455 label *label383
   456 set :buildBlockFromCfgLocal:cfg "AÀF@Lc-additive-reconstructor25"
   457 label *label384
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  458 write "AÀF@Lc-additive-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   459 write null processor5 ":buildBlockFromCfg:config"
   460 write false processor5 ":buildBlockFromCfg*finished"
   461 write 2 processor5 "@counter"
 
   463 wait 1e-15
   464 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   465 jump *label385 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   466 jump *label386 always
   467 label *label386
   468 write 1000 processor5 ".siliconSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   453 jump *label382 equal *tmp294 false
   454 jump *label383 always
   455 label *label383
-    * set :buildBlockFromCfgLocal:cfg "AÀF@Lc-additive-reconstructor25"
   456 label *label384
   457 write "AÀF@Lc-additive-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   458 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at CoreBuilder.mnd:279:5 (+7 instructions):
 
   720 write 120 processor5 ".siliconMonoSurplus"
   721 write 0 processor5 ".leadSurplus"
   722 set :buildBlockFromCfgLocal:cfg "AÁNBJd-multiplicative-reconstructor26"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label145 (h:*label145)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label145) (h:*label145)
-    * label *label145
+  723 label *label387
+  724 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  725 write null processor5 ":buildBlockFromCfg:config"
+  726 write false processor5 ":buildBlockFromCfg*finished"
+  727 write 2 processor5 "@counter"
+  728 label *label388
+  729 wait 1e-15
+  730 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  731 jump *label388 equal *tmp294 false
+  732 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  733 jump *label389 always
+  734 label *label389
   735 write 10 processor5 ".metaglassSurplus"
   736 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   737 label *label146

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   721 write 0 processor5 ".leadSurplus"
   722 set :buildBlockFromCfgLocal:cfg "AÁNBJd-multiplicative-reconstructor26"
   723 label *label387
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  724 write "AÁNBJd-multiplicative-reconstructor26" processor5 ":buildBlockFromCfg:cfg"
   725 write null processor5 ":buildBlockFromCfg:config"
   726 write false processor5 ":buildBlockFromCfg*finished"
   727 write 2 processor5 "@counter"
 
   729 wait 1e-15
   730 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   731 jump *label388 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   732 jump *label389 always
   733 label *label389
   734 write 10 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   719 write 3209 AÕFFJS-micro-processor9 ".powerTarget"
   720 write 120 processor5 ".siliconMonoSurplus"
   721 write 0 processor5 ".leadSurplus"
-    * set :buildBlockFromCfgLocal:cfg "AÁNBJd-multiplicative-reconstructor26"
   722 label *label387
   723 write "AÁNBJd-multiplicative-reconstructor26" processor5 ":buildBlockFromCfg:cfg"
   724 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function 'buildBlockFromCfgLocal' defined at CoreBuilder.mnd:50:1 (+59 instructions):
 
    73 set .sandContainer .core
    74 jump *label41 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJe-pulverizer27"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label43 (h:*label43)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label43) (h:*label43)
-    * label *label43
+   76 label *label390
+   77 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   78 write null processor5 ":buildBlockFromCfg:config"
+   79 write false processor5 ":buildBlockFromCfg*finished"
+   80 write 2 processor5 "@counter"
+   81 label *label391
+   82 wait 1e-15
+   83 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+   84 jump *label391 equal *tmp294 false
+   85 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   86 jump *label392 always
+   87 label *label392
    88 set .sandContainer :buildBlockFromCfgLocal*retval
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJf-overflow-gate28"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label44 (h:*label44)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label44) (h:*label44)
-    * label *label44
+   91 label *label393
+   92 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write null processor5 ":buildBlockFromCfg:config"
+   94 write false processor5 ":buildBlockFromCfg*finished"
+   95 write 2 processor5 "@counter"
+   96 label *label394
+   97 wait 1e-15
+   98 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+   99 jump *label394 equal *tmp294 false
+  100 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  101 jump *label395 always
+  102 label *label395
   103 set :buildBlockFromCfgLocal:cfg "APTJg-power-node29"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label45 (h:*label45)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label45) (h:*label45)
-    * label *label45
+  104 label *label396
+  105 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  106 write null processor5 ":buildBlockFromCfg:config"
+  107 write false processor5 ":buildBlockFromCfg*finished"
+  108 write 2 processor5 "@counter"
+  109 label *label397
+  110 wait 1e-15
+  111 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  112 jump *label397 equal *tmp294 false
+  113 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  114 jump *label398 always
+  115 label *label398
   116 label *label41
   117 label *label42
   118 label *label330
 
   184 write *tmp161 processor5 ".titaniumDrill"
   185 jump *label55 equal .scrap false
   186 set :buildBlockFromCfgLocal:cfg "A©RPJh-unloader30"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
-    * label *label57
+  187 label *label399
+  188 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  189 write null processor5 ":buildBlockFromCfg:config"
+  190 write false processor5 ":buildBlockFromCfg*finished"
+  191 write 2 processor5 "@counter"
+  192 label *label400
+  193 wait 1e-15
+  194 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  195 jump *label400 equal *tmp294 false
+  196 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  197 jump *label401 always
+  198 label *label401
   199 set :buildBlockFromCfgLocal:cfg "A¨SSJi-container31"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
-    * label *label58
+  200 label *label402
+  201 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  202 write null processor5 ":buildBlockFromCfg:config"
+  203 write false processor5 ":buildBlockFromCfg*finished"
+  204 write 2 processor5 "@counter"
+  205 label *label403
+  206 wait 1e-15
+  207 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  208 jump *label403 equal *tmp294 false
+  209 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  210 jump *label404 always
+  211 label *label404
   212 set .sandContainer :buildBlockFromCfgLocal*retval
   213 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   214 set :buildBlockFromCfgLocal:cfg "A{TPJm-inverted-sorter35"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
-    * label *label59
+  215 label *label405
+  216 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  217 write null processor5 ":buildBlockFromCfg:config"
+  218 write false processor5 ":buildBlockFromCfg*finished"
+  219 write 2 processor5 "@counter"
+  220 label *label406
+  221 wait 1e-15
+  222 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  223 jump *label406 equal *tmp294 false
+  224 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  225 jump *label407 always
+  226 label *label407
   227 set :buildBlockFromCfgLocal:cfg "AXTNJj-pulverizer32"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
-    * label *label60
+  228 label *label408
+  229 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  230 write null processor5 ":buildBlockFromCfg:config"
+  231 write false processor5 ":buildBlockFromCfg*finished"
+  232 write 2 processor5 "@counter"
+  233 label *label409
+  234 wait 1e-15
+  235 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  236 jump *label409 equal *tmp294 false
+  237 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  238 jump *label410 always
+  239 label *label410
   240 set :buildBlockFromCfgLocal:cfg "A~RNJk-overflow-gate33"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
-    * label *label61
+  241 label *label411
+  242 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  243 write null processor5 ":buildBlockFromCfg:config"
+  244 write false processor5 ":buildBlockFromCfg*finished"
+  245 write 2 processor5 "@counter"
+  246 label *label412
+  247 wait 1e-15
+  248 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  249 jump *label412 equal *tmp294 false
+  250 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  251 jump *label413 always
+  252 label *label413
   253 set :buildBlockFromCfgLocal:cfg "A~RLJl-overflow-gate34"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label62 (h:*label62)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label62) (h:*label62)
-    * label *label62
+  254 label *label414
+  255 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  256 write null processor5 ":buildBlockFromCfg:config"
+  257 write false processor5 ":buildBlockFromCfg*finished"
+  258 write 2 processor5 "@counter"
+  259 label *label415
+  260 wait 1e-15
+  261 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  262 jump *label415 equal *tmp294 false
+  263 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  264 jump *label416 always
+  265 label *label416
   266 label *label55
   267 label *label56
   268 write .sandContainer processor7 ".sandContainer"
 
   507 label *label377
   508 jump *label101 equal .scrap false
   509 set :buildBlockFromCfgLocal:cfg "AXTLJn-pulverizer36"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label103 (h:*label103)
-    * call *label25 *invalid :buildBlockFromCfgLocal*retval (m:*label103) (h:*label103)
-    * label *label103
+  510 label *label417
+  511 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  512 write null processor5 ":buildBlockFromCfg:config"
+  513 write false processor5 ":buildBlockFromCfg*finished"
+  514 write 2 processor5 "@counter"
+  515 label *label418
+  516 wait 1e-15
+  517 read *tmp294 processor5 ":buildBlockFromCfg*finished"
+  518 jump *label418 equal *tmp294 false
+  519 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  520 jump *label419 always
+  521 label *label419
   522 label *label101
   523 label *label102
   524 label *label378
 
   994 label *label160
   995 label *label153
   996 end
-    * label *label25
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write null processor5 ":buildBlockFromCfg:config"
-    * write false processor5 ":buildBlockFromCfg*finished"
-    * write 2 processor5 "@counter"
-    * label *label169
-    * wait 1e-15
-    * read *tmp294 processor5 ":buildBlockFromCfg*finished"
-    * jump *label169 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label168 always
-    * label *label168
-    * return :buildBlockFromCfgLocal*retaddr
-    * end
   997 label *label26
   998 write 0 processor5 ":meetTarget:block"
   999 write 0 processor5 ":meetTarget:copper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    74 jump *label41 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJe-pulverizer27"
    76 label *label390
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   77 write "AXPRJe-pulverizer27" processor5 ":buildBlockFromCfg:cfg"
    78 write null processor5 ":buildBlockFromCfg:config"
    79 write false processor5 ":buildBlockFromCfg*finished"
    80 write 2 processor5 "@counter"
 
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJf-overflow-gate28"
    91 label *label393
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   92 write "A~PPJf-overflow-gate28" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"
    94 write false processor5 ":buildBlockFromCfg*finished"
    95 write 2 processor5 "@counter"
 
    97 wait 1e-15
    98 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    99 jump *label394 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   100 jump *label395 always
   101 label *label395
   102 set :buildBlockFromCfgLocal:cfg "APTJg-power-node29"
   103 label *label396
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "APTJg-power-node29" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   111 jump *label397 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label398 always
   113 label *label398
   114 label *label41
 
   183 jump *label55 equal .scrap false
   184 set :buildBlockFromCfgLocal:cfg "A©RPJh-unloader30"
   185 label *label399
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  186 write "A©RPJh-unloader30" processor5 ":buildBlockFromCfg:cfg"
   187 write null processor5 ":buildBlockFromCfg:config"
   188 write false processor5 ":buildBlockFromCfg*finished"
   189 write 2 processor5 "@counter"
 
   191 wait 1e-15
   192 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   193 jump *label400 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   194 jump *label401 always
   195 label *label401
   196 set :buildBlockFromCfgLocal:cfg "A¨SSJi-container31"
   197 label *label402
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  198 write "A¨SSJi-container31" processor5 ":buildBlockFromCfg:cfg"
   199 write null processor5 ":buildBlockFromCfg:config"
   200 write false processor5 ":buildBlockFromCfg*finished"
   201 write 2 processor5 "@counter"
 
   210 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   211 set :buildBlockFromCfgLocal:cfg "A{TPJm-inverted-sorter35"
   212 label *label405
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  213 write "A{TPJm-inverted-sorter35" processor5 ":buildBlockFromCfg:cfg"
   214 write null processor5 ":buildBlockFromCfg:config"
   215 write false processor5 ":buildBlockFromCfg*finished"
   216 write 2 processor5 "@counter"
 
   218 wait 1e-15
   219 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   220 jump *label406 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   221 jump *label407 always
   222 label *label407
   223 set :buildBlockFromCfgLocal:cfg "AXTNJj-pulverizer32"
   224 label *label408
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  225 write "AXTNJj-pulverizer32" processor5 ":buildBlockFromCfg:cfg"
   226 write null processor5 ":buildBlockFromCfg:config"
   227 write false processor5 ":buildBlockFromCfg*finished"
   228 write 2 processor5 "@counter"
 
   230 wait 1e-15
   231 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   232 jump *label409 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   233 jump *label410 always
   234 label *label410
   235 set :buildBlockFromCfgLocal:cfg "A~RNJk-overflow-gate33"
   236 label *label411
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  237 write "A~RNJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   238 write null processor5 ":buildBlockFromCfg:config"
   239 write false processor5 ":buildBlockFromCfg*finished"
   240 write 2 processor5 "@counter"
 
   242 wait 1e-15
   243 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   244 jump *label412 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   245 jump *label413 always
   246 label *label413
   247 set :buildBlockFromCfgLocal:cfg "A~RLJl-overflow-gate34"
   248 label *label414
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  249 write "A~RLJl-overflow-gate34" processor5 ":buildBlockFromCfg:cfg"
   250 write null processor5 ":buildBlockFromCfg:config"
   251 write false processor5 ":buildBlockFromCfg*finished"
   252 write 2 processor5 "@counter"
 
   254 wait 1e-15
   255 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   256 jump *label415 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   257 jump *label416 always
   258 label *label416
   259 label *label55
 
   501 jump *label101 equal .scrap false
   502 set :buildBlockFromCfgLocal:cfg "AXTLJn-pulverizer36"
   503 label *label417
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  504 write "AXTLJn-pulverizer36" processor5 ":buildBlockFromCfg:cfg"
   505 write null processor5 ":buildBlockFromCfg:config"
   506 write false processor5 ":buildBlockFromCfg*finished"
   507 write 2 processor5 "@counter"
 
   509 wait 1e-15
   510 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   511 jump *label418 equal *tmp294 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   512 jump *label419 always
   513 label *label419
   514 label *label101

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
    72 write 400 processor5 ".powerTarget"
    73 set .sandContainer .core
    74 jump *label41 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXPRJe-pulverizer27"
    75 label *label390
    76 write "AXPRJe-pulverizer27" processor5 ":buildBlockFromCfg:cfg"
    77 write null processor5 ":buildBlockFromCfg:config"
 
    86 label *label392
    87 set .sandContainer :buildBlockFromCfgLocal*retval
    88 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A~PPJf-overflow-gate28"
    89 label *label393
    90 write "A~PPJf-overflow-gate28" processor5 ":buildBlockFromCfg:cfg"
    91 write null processor5 ":buildBlockFromCfg:config"
 
    97 jump *label394 equal *tmp294 false
    98 jump *label395 always
    99 label *label395
-    * set :buildBlockFromCfgLocal:cfg "APTJg-power-node29"
   100 label *label396
   101 write "APTJg-power-node29" processor5 ":buildBlockFromCfg:cfg"
   102 write null processor5 ":buildBlockFromCfg:config"
 
   178 write *tmp161 processor2 ".titaniumDrill"
   179 write *tmp161 processor5 ".titaniumDrill"
   180 jump *label55 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "A©RPJh-unloader30"
   181 label *label399
   182 write "A©RPJh-unloader30" processor5 ":buildBlockFromCfg:cfg"
   183 write null processor5 ":buildBlockFromCfg:config"
 
   189 jump *label400 equal *tmp294 false
   190 jump *label401 always
   191 label *label401
-    * set :buildBlockFromCfgLocal:cfg "A¨SSJi-container31"
   192 label *label402
   193 write "A¨SSJi-container31" processor5 ":buildBlockFromCfg:cfg"
   194 write null processor5 ":buildBlockFromCfg:config"
 
   203 label *label404
   204 set .sandContainer :buildBlockFromCfgLocal*retval
   205 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A{TPJm-inverted-sorter35"
   206 label *label405
   207 write "A{TPJm-inverted-sorter35" processor5 ":buildBlockFromCfg:cfg"
   208 write null processor5 ":buildBlockFromCfg:config"
 
   214 jump *label406 equal *tmp294 false
   215 jump *label407 always
   216 label *label407
-    * set :buildBlockFromCfgLocal:cfg "AXTNJj-pulverizer32"
   217 label *label408
   218 write "AXTNJj-pulverizer32" processor5 ":buildBlockFromCfg:cfg"
   219 write null processor5 ":buildBlockFromCfg:config"
 
   225 jump *label409 equal *tmp294 false
   226 jump *label410 always
   227 label *label410
-    * set :buildBlockFromCfgLocal:cfg "A~RNJk-overflow-gate33"
   228 label *label411
   229 write "A~RNJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   230 write null processor5 ":buildBlockFromCfg:config"
 
   236 jump *label412 equal *tmp294 false
   237 jump *label413 always
   238 label *label413
-    * set :buildBlockFromCfgLocal:cfg "A~RLJl-overflow-gate34"
   239 label *label414
   240 write "A~RLJl-overflow-gate34" processor5 ":buildBlockFromCfg:cfg"
   241 write null processor5 ":buildBlockFromCfg:config"
 
   490 jump *label377 always
   491 label *label377
   492 jump *label101 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXTLJn-pulverizer36"
   493 label *label417
   494 write "AXTLJn-pulverizer36" processor5 ":buildBlockFromCfg:cfg"
   495 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function 'buildUnits' defined at CoreBuilder.mnd:113:1 (+32 instructions):
 
   391 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   392 write 20 processor5 ".siliconSurplus"
   393 write 20 processor5 ".leadSurplus"
-    * setaddr :buildUnits*retaddr *label87 (h:*label87)
-    * call *label26 *invalid :buildUnits*retval (m:*label87) (h:*label87)
-    * label *label87
+  394 label *label420
+  395 write 0 processor5 ":meetTarget:block"
+  396 write 0 processor5 ":meetTarget:copper"
+  397 write 0 processor5 ":meetTarget:lead"
+  398 write 0 processor5 ":meetTarget:graphite"
+  399 write 0 processor5 ":meetTarget:silicon"
+  400 write 0 processor5 ":meetTarget:titanium"
+  401 write 0 processor5 ":meetTarget:metaglass"
+  402 write 0 processor5 ":meetTarget:thorium"
+  403 write false processor5 ":meetTarget:forBuild"
+  404 write true processor5 ":meetTarget:isNoTarget"
+  405 write false processor5 ":meetTarget*finished"
+  406 write 6 processor5 "@counter"
+  407 label *label421
+  408 wait 1e-15
+  409 read *tmp306 processor5 ":meetTarget*finished"
+  410 jump *label421 equal *tmp306 false
+  411 write 0 processor2 ".totalTargets"
+  412 write null processor2 ".nextBlock"
+  413 write 0 AÕFFJS-micro-processor9 ".leadReserve"
+  414 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  415 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  416 label *label422
   417 label *label88
   418 write false processor5 ":supplyBase*finished"
   419 write 8 processor5 "@counter"
 
   563 label *label107
   564 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   565 label *label108
-    * setaddr :buildUnits*retaddr *label109 (h:*label109)
-    * call *label26 *invalid :buildUnits*retval (m:*label109) (h:*label109)
-    * label *label109
+  566 label *label423
+  567 write 0 processor5 ":meetTarget:block"
+  568 write 0 processor5 ":meetTarget:copper"
+  569 write 0 processor5 ":meetTarget:lead"
+  570 write 0 processor5 ":meetTarget:graphite"
+  571 write 0 processor5 ":meetTarget:silicon"
+  572 write 0 processor5 ":meetTarget:titanium"
+  573 write 0 processor5 ":meetTarget:metaglass"
+  574 write 0 processor5 ":meetTarget:thorium"
+  575 write false processor5 ":meetTarget:forBuild"
+  576 write true processor5 ":meetTarget:isNoTarget"
+  577 write false processor5 ":meetTarget*finished"
+  578 write 6 processor5 "@counter"
+  579 label *label424
+  580 wait 1e-15
+  581 read *tmp306 processor5 ":meetTarget*finished"
+  582 jump *label424 equal *tmp306 false
+  583 write 0 processor2 ".totalTargets"
+  584 write null processor2 ".nextBlock"
+  585 write 0 AÕFFJS-micro-processor9 ".leadReserve"
+  586 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  587 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  588 label *label425
   589 label *label110
   590 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   591 jump *label112 greaterThanEq *tmp82 2
 
   849 label *label147
   850 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   851 label *label148
-    * setaddr :buildUnits*retaddr *label149 (h:*label149)
-    * call *label26 *invalid :buildUnits*retval (m:*label149) (h:*label149)
-    * label *label149
+  852 label *label426
+  853 write 0 processor5 ":meetTarget:block"
+  854 write 0 processor5 ":meetTarget:copper"
+  855 write 0 processor5 ":meetTarget:lead"
+  856 write 0 processor5 ":meetTarget:graphite"
+  857 write 0 processor5 ":meetTarget:silicon"
+  858 write 0 processor5 ":meetTarget:titanium"
+  859 write 0 processor5 ":meetTarget:metaglass"
+  860 write 0 processor5 ":meetTarget:thorium"
+  861 write false processor5 ":meetTarget:forBuild"
+  862 write true processor5 ":meetTarget:isNoTarget"
+  863 write false processor5 ":meetTarget*finished"
+  864 write 6 processor5 "@counter"
+  865 label *label427
+  866 wait 1e-15
+  867 read *tmp306 processor5 ":meetTarget*finished"
+  868 jump *label427 equal *tmp306 false
+  869 write 0 processor2 ".totalTargets"
+  870 write null processor2 ".nextBlock"
+  871 write 0 AÕFFJS-micro-processor9 ".leadReserve"
+  872 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  873 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  874 label *label428
   875 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   876 op sub :tmp *tmp82 1
   877 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
  1036 label *label160
  1037 label *label153
  1038 end
-    * label *label26
-    * write 0 processor5 ":meetTarget:block"
-    * write 0 processor5 ":meetTarget:copper"
-    * write 0 processor5 ":meetTarget:lead"
-    * write 0 processor5 ":meetTarget:graphite"
-    * write 0 processor5 ":meetTarget:silicon"
-    * write 0 processor5 ":meetTarget:titanium"
-    * write 0 processor5 ":meetTarget:metaglass"
-    * write 0 processor5 ":meetTarget:thorium"
-    * write false processor5 ":meetTarget:forBuild"
-    * write true processor5 ":meetTarget:isNoTarget"
-    * write false processor5 ":meetTarget*finished"
-    * write 6 processor5 "@counter"
-    * label *label171
-    * wait 1e-15
-    * read *tmp306 processor5 ":meetTarget*finished"
-    * jump *label171 equal *tmp306 false
-    * write 0 processor2 ".totalTargets"
-    * write null processor2 ".nextBlock"
-    * write 0 AÕFFJS-micro-processor9 ".leadReserve"
-    * write 0 AÕFFJS-micro-processor9 ".siliconReserve"
-    * write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label170
-    * return :buildUnits*retaddr
-    * end

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-35 instructions):
 
    34 wait 1e-15
    35 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    36 jump *label319 equal *tmp294 false
-    * jump *label320 always
    37 label *label320
    38 label *label321
    39 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
 
    44 wait 1e-15
    45 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    46 jump *label322 equal *tmp294 false
-    * jump *label323 always
    47 label *label323
    48 label *label324
    49 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
 
    54 wait 1e-15
    55 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    56 jump *label325 equal *tmp294 false
-    * jump *label326 always
    57 label *label326
    58 label *label327
    59 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
 
    64 wait 1e-15
    65 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    66 jump *label328 equal *tmp294 false
-    * jump *label329 always
    67 label *label329
    68 write 400 processor5 ".powerTarget"
    69 set .sandContainer .core
 
    78 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    79 jump *label391 equal *tmp294 false
    80 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label392 always
    81 label *label392
    82 set .sandContainer :buildBlockFromCfgLocal*retval
    83 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
    90 wait 1e-15
    91 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    92 jump *label394 equal *tmp294 false
-    * jump *label395 always
    93 label *label395
    94 label *label396
    95 write "APTJg-power-node29" processor5 ":buildBlockFromCfg:cfg"
 
   100 wait 1e-15
   101 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   102 jump *label397 equal *tmp294 false
-    * jump *label398 always
   103 label *label398
   104 label *label41
   105 label *label42
 
   112 wait 1e-15
   113 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   114 jump *label331 equal *tmp294 false
-    * jump *label332 always
   115 label *label332
   116 label *label333
   117 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
 
   122 wait 1e-15
   123 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   124 jump *label334 equal *tmp294 false
-    * jump *label335 always
   125 label *label335
   126 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   127 write false processor5 ":meetTargetCfg*finished"
 
   164 read *tmp180 processor5 ":buildFirstTitaniumDrillAt*finished"
   165 jump *label54 equal *tmp180 false
   166 read *tmp161 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label48 always
   167 label *label48
   168 write *tmp161 processor2 ".titaniumDrill"
   169 write *tmp161 processor5 ".titaniumDrill"
 
   177 wait 1e-15
   178 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   179 jump *label400 equal *tmp294 false
-    * jump *label401 always
   180 label *label401
   181 label *label402
   182 write "A¨SSJi-container31" processor5 ":buildBlockFromCfg:cfg"
 
   188 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   189 jump *label403 equal *tmp294 false
   190 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label404 always
   191 label *label404
   192 set .sandContainer :buildBlockFromCfgLocal*retval
   193 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
   200 wait 1e-15
   201 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   202 jump *label406 equal *tmp294 false
-    * jump *label407 always
   203 label *label407
   204 label *label408
   205 write "AXTNJj-pulverizer32" processor5 ":buildBlockFromCfg:cfg"
 
   210 wait 1e-15
   211 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   212 jump *label409 equal *tmp294 false
-    * jump *label410 always
   213 label *label410
   214 label *label411
   215 write "A~RNJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
 
   220 wait 1e-15
   221 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   222 jump *label412 equal *tmp294 false
-    * jump *label413 always
   223 label *label413
   224 label *label414
   225 write "A~RLJl-overflow-gate34" processor5 ":buildBlockFromCfg:cfg"
 
   230 wait 1e-15
   231 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   232 jump *label415 equal *tmp294 false
-    * jump *label416 always
   233 label *label416
   234 label *label55
   235 label *label56
 
   243 wait 1e-15
   244 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   245 jump *label337 equal *tmp294 false
-    * jump *label338 always
   246 label *label338
   247 label *label339
   248 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
 
   253 wait 1e-15
   254 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   255 jump *label340 equal *tmp294 false
-    * jump *label341 always
   256 label *label341
   257 label *label342
   258 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
 
   263 wait 1e-15
   264 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   265 jump *label343 equal *tmp294 false
-    * jump *label344 always
   266 label *label344
   267 write 80 processor5 ".graphiteSurplus"
   268 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
 
   328 wait 1e-15
   329 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   330 jump *label346 equal *tmp294 false
-    * jump *label347 always
   331 label *label347
   332 label *label348
   333 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
 
   338 wait 1e-15
   339 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   340 jump *label349 equal *tmp294 false
-    * jump *label350 always
   341 label *label350
   342 label *label351
   343 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
 
   348 wait 1e-15
   349 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   350 jump *label352 equal *tmp294 false
-    * jump *label353 always
   351 label *label353
   352 label *label354
   353 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
 
   358 wait 1e-15
   359 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   360 jump *label355 equal *tmp294 false
-    * jump *label356 always
   361 label *label356
   362 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   363 label *label85
 
   417 wait 1e-15
   418 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   419 jump *label358 equal *tmp294 false
-    * jump *label359 always
   420 label *label359
   421 label *label360
   422 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
 
   427 wait 1e-15
   428 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   429 jump *label361 equal *tmp294 false
-    * jump *label362 always
   430 label *label362
   431 label *label363
   432 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
 
   437 wait 1e-15
   438 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   439 jump *label364 equal *tmp294 false
-    * jump *label365 always
   440 label *label365
   441 label *label366
   442 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
 
   447 wait 1e-15
   448 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   449 jump *label367 equal *tmp294 false
-    * jump *label368 always
   450 label *label368
   451 label *label369
   452 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
 
   457 wait 1e-15
   458 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   459 jump *label370 equal *tmp294 false
-    * jump *label371 always
   460 label *label371
   461 label *label372
   462 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
 
   467 wait 1e-15
   468 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   469 jump *label373 equal *tmp294 false
-    * jump *label374 always
   470 label *label374
   471 write 200 processor5 ".graphiteSurplus"
   472 label *label375
 
   478 wait 1e-15
   479 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   480 jump *label376 equal *tmp294 false
-    * jump *label377 always
   481 label *label377
   482 jump *label101 equal .scrap false
   483 label *label417
 
   489 wait 1e-15
   490 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   491 jump *label418 equal *tmp294 false
-    * jump *label419 always
   492 label *label419
   493 label *label101
   494 label *label102
 
   501 wait 1e-15
   502 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   503 jump *label379 equal *tmp294 false
-    * jump *label380 always
   504 label *label380
   505 label *label381
   506 write "A{HDJb-inverted-sorter24" processor5 ":buildBlockFromCfg:cfg"
 
   511 wait 1e-15
   512 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   513 jump *label382 equal *tmp294 false
-    * jump *label383 always
   514 label *label383
   515 label *label384
   516 write "AÀF@Lc-additive-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
 
   521 wait 1e-15
   522 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   523 jump *label385 equal *tmp294 false
-    * jump *label386 always
   524 label *label386
   525 write 1000 processor5 ".siliconSurplus"
   526 write 20 processor5 ".siliconMonoSurplus"
 
   806 wait 1e-15
   807 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   808 jump *label388 equal *tmp294 false
-    * jump *label389 always
   809 label *label389
   810 write 10 processor5 ".metaglassSurplus"
   811 write 0 AÕFFJS-micro-processor9 ".polyTarget"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   279 write .core AÕFFJS-micro-processor9 ".core"
   280 write bank1 AÕFFJS-micro-processor9 ".bank"
   281 label *label186
-    * read *tmp198 @this "AJEMJJ-graphite-press0"
+  282 set *tmp198 AJEMJJ-graphite-press0
   283 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   284 label *label187
   285 label *label190
-    * read *tmp198 @this "AJTJK-battery1"
+  286 set *tmp198 AJTJK-battery1
   287 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
   288 label *label191
   289 label *label194
-    * read *tmp198 @this "ALTJL-battery2"
+  290 set *tmp198 ALTJL-battery2
   291 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
   292 label *label195
   293 label *label198
-    * read *tmp198 @this "AJRJM-combustion-generator3"
+  294 set *tmp198 AJRJM-combustion-generator3
   295 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   296 label *label199
   297 label *label202
-    * read *tmp198 @this "ALMQJN-silicon-smelter4"
+  298 set *tmp198 ALMQJN-silicon-smelter4
   299 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   300 label *label203
   301 label *label206
-    * read *tmp198 @this "A{LNJO-inverted-sorter5"
+  302 set *tmp198 A{LNJO-inverted-sorter5
   303 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   304 label *label207
   305 label *label210
-    * read *tmp198 @this "A©JNJP-unloader6"
+  306 set *tmp198 A©JNJP-unloader6
   307 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   308 label *label211
   309 label *label214
-    * read *tmp198 @this "A{HNJQ-inverted-sorter7"
+  310 set *tmp198 A{HNJQ-inverted-sorter7
   311 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   312 label *label215
   313 label *label218
-    * read *tmp198 @this "AJPJR-underflow-gate8"
+  314 set *tmp198 AJPJR-underflow-gate8
   315 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   316 label *label219
   317 label *label222
-    * read *tmp198 @this "AÕFFJS-micro-processor9"
+  318 set *tmp198 AÕFFJS-micro-processor9
   319 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   320 label *label223
   321 label *label70

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   691 wait 1e-15
   692 read *tmp290 processor5 ":buildRemoteBlock*finished"
   693 jump *label301 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  694 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
   695 label *label302
-    * set .thoriumGenerator :buildRemoteBlockLocal*retval
   696 read :buildRemoteBlockLocal:x processor3 ".node1X"
   697 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   698 label *label303
 
   744 wait 1e-15
   745 read *tmp290 processor5 ":buildRemoteBlock*finished"
   746 jump *label313 equal *tmp290 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  747 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
   748 label *label314
-    * set .thoriumBattery :buildRemoteBlockLocal*retval
   749 read :buildRemoteBlockLocal:x processor3 ".containerX"
   750 read :buildRemoteBlockLocal:y processor3 ".containerY"
   751 label *label315

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 ubind @poly
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY *tmp144 .core
-    * label *label35
    20 jump *label34 equal .core null
-    * label *label36
    21 ulocate ore core true @sand *tmp147 *tmp148 *tmp146 *tmp149
    22 op equal .scrap *tmp146 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"
    25 write .scrap processor7 ".scrap"
-    * label *label318
    26 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    27 write null processor5 ":buildBlockFromCfg:config"
    28 write false processor5 ":buildBlockFromCfg*finished"
 
    31 wait 1e-15
    32 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    33 jump *label319 equal *tmp294 false
-    * label *label320
-    * label *label321
    34 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    35 write null processor5 ":buildBlockFromCfg:config"
    36 write false processor5 ":buildBlockFromCfg*finished"
 
    39 wait 1e-15
    40 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    41 jump *label322 equal *tmp294 false
-    * label *label323
-    * label *label324
    42 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    43 write null processor5 ":buildBlockFromCfg:config"
    44 write false processor5 ":buildBlockFromCfg*finished"
 
    47 wait 1e-15
    48 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    49 jump *label325 equal *tmp294 false
-    * label *label326
-    * label *label327
    50 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    51 write null processor5 ":buildBlockFromCfg:config"
    52 write false processor5 ":buildBlockFromCfg*finished"
 
    55 wait 1e-15
    56 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    57 jump *label328 equal *tmp294 false
-    * label *label329
    58 write 400 processor5 ".powerTarget"
    59 set .sandContainer .core
    60 jump *label41 equal .scrap false
-    * label *label390
    61 write "AXPRJe-pulverizer27" processor5 ":buildBlockFromCfg:cfg"
    62 write null processor5 ":buildBlockFromCfg:config"
    63 write false processor5 ":buildBlockFromCfg*finished"
 
    67 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    68 jump *label391 equal *tmp294 false
    69 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label392
    70 set .sandContainer :buildBlockFromCfgLocal*retval
    71 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label393
    72 write "A~PPJf-overflow-gate28" processor5 ":buildBlockFromCfg:cfg"
    73 write null processor5 ":buildBlockFromCfg:config"
    74 write false processor5 ":buildBlockFromCfg*finished"
 
    77 wait 1e-15
    78 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    79 jump *label394 equal *tmp294 false
-    * label *label395
-    * label *label396
    80 write "APTJg-power-node29" processor5 ":buildBlockFromCfg:cfg"
    81 write null processor5 ":buildBlockFromCfg:config"
    82 write false processor5 ":buildBlockFromCfg*finished"
 
    85 wait 1e-15
    86 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    87 jump *label397 equal *tmp294 false
-    * label *label398
    88 label *label41
-    * label *label42
-    * label *label330
    89 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    90 write null processor5 ":buildBlockFromCfg:config"
    91 write false processor5 ":buildBlockFromCfg*finished"
 
    94 wait 1e-15
    95 read *tmp294 processor5 ":buildBlockFromCfg*finished"
    96 jump *label331 equal *tmp294 false
-    * label *label332
-    * label *label333
    97 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
    98 write null processor5 ":buildBlockFromCfg:config"
    99 write false processor5 ":buildBlockFromCfg*finished"
 
   102 wait 1e-15
   103 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   104 jump *label334 equal *tmp294 false
-    * label *label335
   105 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   106 write false processor5 ":meetTargetCfg*finished"
   107 write 7 processor5 "@counter"
 
   127 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   128 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   129 jump *label51 notEqual :buildFirstTitaniumDrill:result false
-    * label *label227
   130 set .ERROR "Cannot locate spot for titanium drill"
   131 stop
-    * label *label228
   132 label *label51
-    * label *label52
   133 write @pneumatic-drill processor2 ".nextBlock"
   134 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
   135 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
   140 read *tmp180 processor5 ":buildFirstTitaniumDrillAt*finished"
   141 jump *label54 equal *tmp180 false
   142 read *tmp161 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label48
   143 write *tmp161 processor2 ".titaniumDrill"
   144 write *tmp161 processor5 ".titaniumDrill"
   145 jump *label55 equal .scrap false
-    * label *label399
   146 write "A©RPJh-unloader30" processor5 ":buildBlockFromCfg:cfg"
   147 write null processor5 ":buildBlockFromCfg:config"
   148 write false processor5 ":buildBlockFromCfg*finished"
 
   151 wait 1e-15
   152 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   153 jump *label400 equal *tmp294 false
-    * label *label401
-    * label *label402
   154 write "A¨SSJi-container31" processor5 ":buildBlockFromCfg:cfg"
   155 write null processor5 ":buildBlockFromCfg:config"
   156 write false processor5 ":buildBlockFromCfg*finished"
 
   160 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   161 jump *label403 equal *tmp294 false
   162 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label404
   163 set .sandContainer :buildBlockFromCfgLocal*retval
   164 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label405
   165 write "A{TPJm-inverted-sorter35" processor5 ":buildBlockFromCfg:cfg"
   166 write null processor5 ":buildBlockFromCfg:config"
   167 write false processor5 ":buildBlockFromCfg*finished"
 
   170 wait 1e-15
   171 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   172 jump *label406 equal *tmp294 false
-    * label *label407
-    * label *label408
   173 write "AXTNJj-pulverizer32" processor5 ":buildBlockFromCfg:cfg"
   174 write null processor5 ":buildBlockFromCfg:config"
   175 write false processor5 ":buildBlockFromCfg*finished"
 
   178 wait 1e-15
   179 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   180 jump *label409 equal *tmp294 false
-    * label *label410
-    * label *label411
   181 write "A~RNJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   182 write null processor5 ":buildBlockFromCfg:config"
   183 write false processor5 ":buildBlockFromCfg*finished"
 
   186 wait 1e-15
   187 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   188 jump *label412 equal *tmp294 false
-    * label *label413
-    * label *label414
   189 write "A~RLJl-overflow-gate34" processor5 ":buildBlockFromCfg:cfg"
   190 write null processor5 ":buildBlockFromCfg:config"
   191 write false processor5 ":buildBlockFromCfg*finished"
 
   194 wait 1e-15
   195 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   196 jump *label415 equal *tmp294 false
-    * label *label416
   197 label *label55
-    * label *label56
   198 write .sandContainer processor7 ".sandContainer"
-    * label *label336
   199 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   200 write null processor5 ":buildBlockFromCfg:config"
   201 write false processor5 ":buildBlockFromCfg*finished"
 
   204 wait 1e-15
   205 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   206 jump *label337 equal *tmp294 false
-    * label *label338
-    * label *label339
   207 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   208 write null processor5 ":buildBlockFromCfg:config"
   209 write false processor5 ":buildBlockFromCfg*finished"
 
   212 wait 1e-15
   213 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   214 jump *label340 equal *tmp294 false
-    * label *label341
-    * label *label342
   215 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   216 write null processor5 ":buildBlockFromCfg:config"
   217 write false processor5 ":buildBlockFromCfg*finished"
 
   220 wait 1e-15
   221 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   222 jump *label343 equal *tmp294 false
-    * label *label344
   223 write 80 processor5 ".graphiteSurplus"
   224 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   225 write processor10 processor5 ":buildBlockFromCfg:config"
 
   229 wait 1e-15
   230 read *tmp195 processor5 ":buildBlockFromCfg*finished"
   231 jump *label67 equal *tmp195 false
-    * label *label66
   232 write processor1 AÕFFJS-micro-processor9 ".timer"
   233 write processor2 AÕFFJS-micro-processor9 ".display"
   234 write .core AÕFFJS-micro-processor9 ".core"
   235 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * label *label186
   236 set *tmp198 AJEMJJ-graphite-press0
   237 write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
-    * label *label187
-    * label *label190
   238 set *tmp198 AJTJK-battery1
   239 write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"
-    * label *label191
-    * label *label194
   240 set *tmp198 ALTJL-battery2
   241 write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"
-    * label *label195
-    * label *label198
   242 set *tmp198 AJRJM-combustion-generator3
   243 write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
-    * label *label199
-    * label *label202
   244 set *tmp198 ALMQJN-silicon-smelter4
   245 write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
-    * label *label203
-    * label *label206
   246 set *tmp198 A{LNJO-inverted-sorter5
   247 write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
-    * label *label207
-    * label *label210
   248 set *tmp198 A©JNJP-unloader6
   249 write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
-    * label *label211
-    * label *label214
   250 set *tmp198 A{HNJQ-inverted-sorter7
   251 write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
-    * label *label215
-    * label *label218
   252 set *tmp198 AJPJR-underflow-gate8
   253 write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
-    * label *label219
-    * label *label222
   254 set *tmp198 AÕFFJS-micro-processor9
   255 write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
-    * label *label223
-    * label *label70
-    * label *label345
   256 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   257 write null processor5 ":buildBlockFromCfg:config"
   258 write false processor5 ":buildBlockFromCfg*finished"
 
   261 wait 1e-15
   262 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   263 jump *label346 equal *tmp294 false
-    * label *label347
-    * label *label348
   264 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   265 write null processor5 ":buildBlockFromCfg:config"
   266 write false processor5 ":buildBlockFromCfg*finished"
 
   269 wait 1e-15
   270 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   271 jump *label349 equal *tmp294 false
-    * label *label350
-    * label *label351
   272 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   273 write null processor5 ":buildBlockFromCfg:config"
   274 write false processor5 ":buildBlockFromCfg*finished"
 
   277 wait 1e-15
   278 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   279 jump *label352 equal *tmp294 false
-    * label *label353
-    * label *label354
   280 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   281 write null processor5 ":buildBlockFromCfg:config"
   282 write false processor5 ":buildBlockFromCfg*finished"
 
   285 wait 1e-15
   286 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   287 jump *label355 equal *tmp294 false
-    * label *label356
   288 write 1 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label85
   289 write 5 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label86
   290 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   291 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
   292 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   293 write 20 processor5 ".siliconSurplus"
   294 write 20 processor5 ".leadSurplus"
-    * label *label420
   295 write 0 processor5 ":meetTarget:block"
   296 write 0 processor5 ":meetTarget:copper"
   297 write 0 processor5 ":meetTarget:lead"
 
   313 write 0 AÕFFJS-micro-processor9 ".leadReserve"
   314 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   315 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label422
   316 label *label88
   317 write false processor5 ":supplyBase*finished"
   318 write 8 processor5 "@counter"
 
   324 jump *label92 greaterThanEq *tmp204 300
   325 jump *label90 always
   326 label *label92
-    * label *label93
-    * label *label89
   327 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   328 jump *label88 lessThan *tmp81 3
   329 label *label90
   330 write 65 processor5 ".siliconSurplus"
-    * label *label357
   331 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   332 write null processor5 ":buildBlockFromCfg:config"
   333 write false processor5 ":buildBlockFromCfg*finished"
 
   336 wait 1e-15
   337 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   338 jump *label358 equal *tmp294 false
-    * label *label359
-    * label *label360
   339 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   340 write null processor5 ":buildBlockFromCfg:config"
   341 write false processor5 ":buildBlockFromCfg*finished"
 
   344 wait 1e-15
   345 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   346 jump *label361 equal *tmp294 false
-    * label *label362
-    * label *label363
   347 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   348 write null processor5 ":buildBlockFromCfg:config"
   349 write false processor5 ":buildBlockFromCfg*finished"
 
   352 wait 1e-15
   353 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   354 jump *label364 equal *tmp294 false
-    * label *label365
-    * label *label366
   355 write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFromCfg:cfg"
   356 write null processor5 ":buildBlockFromCfg:config"
   357 write false processor5 ":buildBlockFromCfg*finished"
 
   360 wait 1e-15
   361 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   362 jump *label367 equal *tmp294 false
-    * label *label368
-    * label *label369
   363 write "AAKJ\-steam-generator18" processor5 ":buildBlockFromCfg:cfg"
   364 write null processor5 ":buildBlockFromCfg:config"
   365 write false processor5 ":buildBlockFromCfg*finished"
 
   368 wait 1e-15
   369 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   370 jump *label370 equal *tmp294 false
-    * label *label371
-    * label *label372
   371 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
   372 write null processor5 ":buildBlockFromCfg:config"
   373 write false processor5 ":buildBlockFromCfg*finished"
 
   376 wait 1e-15
   377 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   378 jump *label373 equal *tmp294 false
-    * label *label374
   379 write 200 processor5 ".graphiteSurplus"
-    * label *label375
   380 write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFromCfg:cfg"
   381 write null processor5 ":buildBlockFromCfg:config"
   382 write false processor5 ":buildBlockFromCfg*finished"
 
   385 wait 1e-15
   386 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   387 jump *label376 equal *tmp294 false
-    * label *label377
   388 jump *label101 equal .scrap false
-    * label *label417
   389 write "AXTLJn-pulverizer36" processor5 ":buildBlockFromCfg:cfg"
   390 write null processor5 ":buildBlockFromCfg:config"
   391 write false processor5 ":buildBlockFromCfg*finished"
 
   394 wait 1e-15
   395 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   396 jump *label418 equal *tmp294 false
-    * label *label419
   397 label *label101
-    * label *label102
-    * label *label378
   398 write "A©HFJa-unloader23" processor5 ":buildBlockFromCfg:cfg"
   399 write null processor5 ":buildBlockFromCfg:config"
   400 write false processor5 ":buildBlockFromCfg*finished"
 
   403 wait 1e-15
   404 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   405 jump *label379 equal *tmp294 false
-    * label *label380
-    * label *label381
   406 write "A{HDJb-inverted-sorter24" processor5 ":buildBlockFromCfg:cfg"
   407 write null processor5 ":buildBlockFromCfg:config"
   408 write false processor5 ":buildBlockFromCfg*finished"
 
   411 wait 1e-15
   412 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   413 jump *label382 equal *tmp294 false
-    * label *label383
-    * label *label384
   414 write "AÀF@Lc-additive-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   415 write null processor5 ":buildBlockFromCfg:config"
   416 write false processor5 ":buildBlockFromCfg*finished"
 
   419 wait 1e-15
   420 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   421 jump *label385 equal *tmp294 false
-    * label *label386
   422 write 1000 processor5 ".siliconSurplus"
   423 write 20 processor5 ".siliconMonoSurplus"
   424 write 100 processor5 ".metaglassSurplus"
   425 write 4 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label107
   426 write 3 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label108
-    * label *label423
   427 write 0 processor5 ":meetTarget:block"
   428 write 0 processor5 ":meetTarget:copper"
   429 write 0 processor5 ":meetTarget:lead"
 
   445 write 0 AÕFFJS-micro-processor9 ".leadReserve"
   446 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   447 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label425
-    * label *label110
   448 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   449 jump *label112 greaterThanEq *tmp82 2
   450 label *label231
 
   454 wait 1e-15
   455 read *tmp221 processor5 ":supplyBase*finished"
   456 jump *label113 equal *tmp221 false
-    * label *label111
   457 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   458 jump *label231 lessThan *tmp82 2
   459 label *label112
   460 write 2 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label114
-    * label *label115
   461 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   462 jump *label117 greaterThanEq *tmp80 2
   463 label *label232
 
   467 wait 1e-15
   468 read *tmp223 processor5 ":supplyBase*finished"
   469 jump *label118 equal *tmp223 false
-    * label *label116
   470 read *tmp80 AÕFFJS-micro-processor9 ".flares"
   471 jump *label232 lessThan *tmp80 2
   472 label *label117
 
   492 jump *label120 equal *tmp235 false
   493 write false processor3 ":stopLocation*finished"
   494 write 3 processor3 "@counter"
-    * label *label119
   495 write null processor2 ".nextBlock"
   496 write 10 processor5 ".graphiteSurplus"
   497 write 50 processor5 ".metaglassSurplus"
 
   519 jump *label124 equal *tmp244 false
   520 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   521 jump *label125 notEqual :buildThoriumDrill:result false
-    * label *label229
   522 set .ERROR "Cannot locate spot for thorium drill"
   523 stop
-    * label *label230
   524 label *label125
-    * label *label126
   525 write @laser-drill processor5 ":buildBlockAt:block"
   526 read *tmp52 processor3 ".drillX"
   527 write *tmp52 processor5 ":buildBlockAt:x"
 
   539 read .thoriumDrill processor5 ":buildBlockAt*retval"
   540 read :buildRemoteBlockLocal:x processor3 ".water1X"
   541 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * label *label294
   542 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   543 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   544 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   548 wait 1e-15
   549 read *tmp290 processor5 ":buildRemoteBlock*finished"
   550 jump *label295 equal *tmp290 false
-    * label *label296
   551 read :buildRemoteBlockLocal:x processor3 ".water2X"
   552 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * label *label297
   553 write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlock:cfg"
   554 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   555 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   559 wait 1e-15
   560 read *tmp290 processor5 ":buildRemoteBlock*finished"
   561 jump *label298 equal *tmp290 false
-    * label *label299
   562 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   563 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * label *label300
   564 write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlock:cfg"
   565 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   566 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   571 read *tmp290 processor5 ":buildRemoteBlock*finished"
   572 jump *label301 equal *tmp290 false
   573 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
-    * label *label302
   574 read :buildRemoteBlockLocal:x processor3 ".node1X"
   575 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * label *label303
   576 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   577 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   578 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   582 wait 1e-15
   583 read *tmp290 processor5 ":buildRemoteBlock*finished"
   584 jump *label304 equal *tmp290 false
-    * label *label305
   585 read :buildRemoteBlockLocal:x processor3 ".node2X"
   586 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * label *label306
   587 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   588 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   589 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   593 wait 1e-15
   594 read *tmp290 processor5 ":buildRemoteBlock*finished"
   595 jump *label307 equal *tmp290 false
-    * label *label308
   596 read :buildRemoteBlockLocal:x processor3 ".panelX"
   597 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * label *label309
   598 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   599 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   600 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   604 wait 1e-15
   605 read *tmp290 processor5 ":buildRemoteBlock*finished"
   606 jump *label310 equal *tmp290 false
-    * label *label311
   607 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   608 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * label *label312
   609 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   610 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   611 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   616 read *tmp290 processor5 ":buildRemoteBlock*finished"
   617 jump *label313 equal *tmp290 false
   618 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
-    * label *label314
   619 read :buildRemoteBlockLocal:x processor3 ".containerX"
   620 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * label *label315
   621 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   622 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   623 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   628 read *tmp290 processor5 ":buildRemoteBlock*finished"
   629 jump *label316 equal *tmp290 false
   630 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label317
   631 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   632 write .thoriumDrill processor2 ".thoriumDrill"
   633 write .thoriumContainer processor2 ".thoriumContainer"
 
   641 wait 1e-15
   642 read *tmp267 processor6 ":setThoriumContainer*finished"
   643 jump *label139 equal *tmp267 false
-    * label *label121
   644 write null processor2 ".nextBlock"
-    * label *label140
   645 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   646 jump *label142 greaterThanEq *tmp82 3
   647 label *label233
 
   651 wait 1e-15
   652 read *tmp269 processor5 ":supplyBase*finished"
   653 jump *label143 equal *tmp269 false
-    * label *label141
   654 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   655 jump *label233 lessThan *tmp82 3
   656 label *label142
   657 op add :setMonoTarget.2:target 4 .scrap
   658 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label144
   659 write 3209 AÕFFJS-micro-processor9 ".powerTarget"
   660 write 120 processor5 ".siliconMonoSurplus"
   661 write 0 processor5 ".leadSurplus"
-    * label *label387
   662 write "AÁNBJd-multiplicative-reconstructor26" processor5 ":buildBlockFromCfg:cfg"
   663 write null processor5 ":buildBlockFromCfg:config"
   664 write false processor5 ":buildBlockFromCfg*finished"
 
   667 wait 1e-15
   668 read *tmp294 processor5 ":buildBlockFromCfg*finished"
   669 jump *label388 equal *tmp294 false
-    * label *label389
   670 write 10 processor5 ".metaglassSurplus"
   671 write 0 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label146
   672 write 0 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label147
   673 write 1 AÕFFJS-micro-processor9 ".megaTarget"
-    * label *label148
-    * label *label426
   674 write 0 processor5 ":meetTarget:block"
   675 write 0 processor5 ":meetTarget:copper"
   676 write 0 processor5 ":meetTarget:lead"
 
   692 write 0 AÕFFJS-micro-processor9 ".leadReserve"
   693 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   694 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label428
   695 read *tmp82 AÕFFJS-micro-processor9 ".polys"
   696 op sub :tmp *tmp82 1
   697 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   702 label *label150
   703 ucontrol move :x :y
   704 ucontrol payEnter
-    * label *label151
   705 read *tmp83 AÕFFJS-micro-processor9 ".megas"
   706 jump *label150 equal *tmp83 false
-    * label *label152
   707 write true AÕFFJS-micro-processor9 ".finished"
   708 control enabled processor1 false
   709 control enabled processor8 false
 
   712 control enabled processor3 false
   713 control enabled processor5 false
   714 control enabled processor11 false
-    * label *label262
   715 label *label263
   716 ubind @mega
   717 set :flagUnits:firstUnit @unit
-    * label *label264
   718 jump *label263 equal :flagUnits:firstUnit null
-    * label *label265
   719 op add :flagUnits:x .coreX 8
   720 label *label266
   721 ucontrol flag :flagUnits:x
   722 op add :flagUnits:x :flagUnits:x 4
   723 ubind @mega
-    * label *label267
   724 jump *label266 notEqual @unit :flagUnits:firstUnit
-    * label *label268
-    * label *label269
-    * label *label270
   725 label *label271
   726 ubind @poly
   727 set :flagUnits:firstUnit @unit
-    * label *label272
   728 jump *label271 equal :flagUnits:firstUnit null
-    * label *label273
   729 op add :flagUnits:x .coreX 8
   730 label *label274
   731 ucontrol flag :flagUnits:x
   732 op add :flagUnits:x :flagUnits:x 4
   733 ubind @poly
-    * label *label275
   734 jump *label274 notEqual @unit :flagUnits:firstUnit
-    * label *label276
-    * label *label277
-    * label *label278
   735 label *label279
   736 ubind @mono
   737 set :flagUnits:firstUnit @unit
-    * label *label280
   738 jump *label279 equal :flagUnits:firstUnit null
-    * label *label281
   739 op add :flagUnits:x .coreX 8
   740 label *label282
   741 ucontrol flag :flagUnits:x
   742 op add :flagUnits:x :flagUnits:x 4
   743 ubind @mono
-    * label *label283
   744 jump *label282 notEqual @unit :flagUnits:firstUnit
-    * label *label284
-    * label *label285
-    * label *label286
   745 label *label287
   746 ubind @flare
   747 set :flagUnits:firstUnit @unit
-    * label *label288
   748 jump *label287 equal :flagUnits:firstUnit null
-    * label *label289
   749 op add :flagUnits:x .coreX 8
   750 label *label290
   751 ucontrol flag :flagUnits:x
   752 op add :flagUnits:x :flagUnits:x 4
   753 ubind @flare
-    * label *label291
   754 jump *label290 notEqual @unit :flagUnits:firstUnit
-    * label *label292
-    * label *label293
   755 label *label158
   756 op add :lineUpUnits:y .coreY 6
-    * label *label234
   757 ubind @mega
   758 set :lineUpUnits:firstUnit @unit
   759 label *label235
 
   764 jump *label236 equal *tmp312 false
   765 ucontrol stop
   766 label *label236
-    * label *label237
   767 ubind @mega
-    * label *label238
   768 jump *label235 notEqual @unit :lineUpUnits:firstUnit
-    * label *label239
-    * label *label240
   769 op add :lineUpUnits:y .coreY 2
-    * label *label241
   770 ubind @poly
   771 set :lineUpUnits:firstUnit @unit
   772 label *label242
 
   777 jump *label243 equal *tmp312 false
   778 ucontrol stop
   779 label *label243
-    * label *label244
   780 ubind @poly
-    * label *label245
   781 jump *label242 notEqual @unit :lineUpUnits:firstUnit
-    * label *label246
-    * label *label247
   782 op sub :lineUpUnits:y .coreY 2
-    * label *label248
   783 ubind @mono
   784 set :lineUpUnits:firstUnit @unit
   785 label *label249
 
   790 jump *label250 equal *tmp312 false
   791 ucontrol stop
   792 label *label250
-    * label *label251
   793 ubind @mono
-    * label *label252
   794 jump *label249 notEqual @unit :lineUpUnits:firstUnit
-    * label *label253
-    * label *label254
   795 op sub :lineUpUnits:y .coreY 6
-    * label *label255
   796 ubind @flare
   797 set :lineUpUnits:firstUnit @unit
   798 label *label256
 
   803 jump *label257 equal *tmp312 false
   804 ucontrol stop
   805 label *label257
-    * label *label258
   806 ubind @flare
-    * label *label259
   807 jump *label256 notEqual @unit :lineUpUnits:firstUnit
-    * label *label260
-    * label *label261
-    * label *label159
   808 jump *label158 always
-    * label *label160
-    * label *label153
   809 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-1 instructions):
 
   321 read *tmp203 processor5 ":supplyBase*finished"
   322 jump *label91 equal *tmp203 false
   323 sensor *tmp204 AJTJK-battery1 @totalPower
-    * jump *label92 greaterThanEq *tmp204 300
-    * jump *label90 always
+  324 jump *label90 lessThan *tmp204 300
   325 label *label92
   326 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   327 jump *label88 lessThan *tmp81 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   322 jump *label91 equal *tmp203 false
   323 sensor *tmp204 AJTJK-battery1 @totalPower
   324 jump *label90 lessThan *tmp204 300
-    * label *label92
   325 read *tmp81 AÕFFJS-micro-processor9 ".monos"
   326 jump *label88 lessThan *tmp81 3
   327 label *label90

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-1 instructions):
 
   804 ubind @flare
   805 jump *label256 notEqual @unit :lineUpUnits:firstUnit
   806 jump *label158 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    16 label *label34
    17 ubind @poly
    18 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp144 .core
+   19 ulocate building core false @copper .coreX .coreY 0 .core
    20 jump *label34 equal .core null
-    * ulocate ore core true @sand *tmp147 *tmp148 *tmp146 *tmp149
+   21 ulocate ore core true @sand 0 0 *tmp146 0
    22 op equal .scrap *tmp146 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"

Final code before resolving virtual instructions:

        label *label29                                               CoreBuilder.mnd: require "Display.mnd" remote display;
    0:  read *tmp31 processor2 "*signature"                          ...
    1:  jump *label29 notEqual *tmp31 "0:v1"                         ...
        label *label30                                               CoreBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
    2:  read *tmp70 processor3 "*signature"                          ...
    3:  jump *label30 notEqual *tmp70 "3290b8c661787058:v1"          ...
        label *label31                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    4:  read *tmp97 processor7 "*signature"                          ...
    5:  jump *label31 notEqual *tmp97 "0:v1"                         ...
        label *label32                                               CoreBuilder.mnd: require "PolyController.mnd" remote polyController;
    6:  read *tmp99 processor6 "*signature"                          ...
    7:  jump *label32 notEqual *tmp99 "5f95d6f938a8462e:v1"          ...
        label *label33                                               CoreBuilder.mnd: require "BlockBuilder.mnd" remote blockBuilder;
    8:  read *tmp141 processor5 "*signature"                         ...
    9:  jump *label33 notEqual *tmp141 "77658b7b93afc77c:v1"         ...
   10:  set .ERROR ""                                                CoreBuilder.mnd: remote var ERROR = "";
        label *label34                                               CoreBuilder.mnd: do
   11:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   12:  set .builder @unit                                           ...
   13:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   14:  jump *label34 equal .core null                               CoreBuilder.mnd: do
   15:  ulocate ore core true @sand 0 0 *tmp146 0                    CoreBuilder.mnd: scrap = !ulocate(:ore, @sand);
   16:  op equal .scrap *tmp146 false                                ...
   17:  write .scrap processor2 ".scrap"                             CoreBuilder.mnd: display.scrap = scrap;
   18:  write .scrap processor5 ".scrap"                             CoreBuilder.mnd: blockBuilder.scrap = scrap;
   19:  write .scrap processor7 ".scrap"                             CoreBuilder.mnd: monoController.scrap = scrap;
   20:  write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCf CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
   21:  write null processor5 ":buildBlockFromCfg:config"            ...
   22:  write false processor5 ":buildBlockFromCfg*finished"         ...
   23:  write 2 processor5 "@counter"                                ...
        label *label319                                              ...
   24:  wait 1e-15                                                   ...
   25:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   26:  jump *label319 equal *tmp294 false                           ...
   27:  write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"  ...
   28:  write null processor5 ":buildBlockFromCfg:config"            ...
   29:  write false processor5 ":buildBlockFromCfg*finished"         ...
   30:  write 2 processor5 "@counter"                                ...
        label *label322                                              ...
   31:  wait 1e-15                                                   ...
   32:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   33:  jump *label322 equal *tmp294 false                           ...
   34:  write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"  ...
   35:  write null processor5 ":buildBlockFromCfg:config"            ...
   36:  write false processor5 ":buildBlockFromCfg*finished"         ...
   37:  write 2 processor5 "@counter"                                ...
        label *label325                                              ...
   38:  wait 1e-15                                                   ...
   39:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   40:  jump *label325 equal *tmp294 false                           ...
   41:  write "AJRJM-combustion-generator3" processor5 ":buildBlock ...
   42:  write null processor5 ":buildBlockFromCfg:config"            ...
   43:  write false processor5 ":buildBlockFromCfg*finished"         ...
   44:  write 2 processor5 "@counter"                                ...
        label *label328                                              ...
   45:  wait 1e-15                                                   ...
   46:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   47:  jump *label328 equal *tmp294 false                           ...
   48:  write 400 processor5 ".powerTarget"                          CoreBuilder.mnd: blockBuilder.powerTarget = 400;
   49:  set .sandContainer .core                                     CoreBuilder.mnd: sandContainer = core;
   50:  jump *label41 equal .scrap false                             CoreBuilder.mnd: if scrap then
   51:  write "AXPRJe-pulverizer27" processor5 ":buildBlockFromCfg:c CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
   52:  write null processor5 ":buildBlockFromCfg:config"            ...
   53:  write false processor5 ":buildBlockFromCfg*finished"         ...
   54:  write 2 processor5 "@counter"                                ...
        label *label391                                              ...
   55:  wait 1e-15                                                   ...
   56:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   57:  jump *label391 equal *tmp294 false                           ...
   58:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
   59:  set .sandContainer :buildBlockFromCfgLocal*retval            CoreBuilder.mnd: sandContainer = buildBlockFromCfgLocal(PULVERIZER1);
   60:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai CoreBuilder.mnd: blockBuilder.sandContainer = sandContainer;
   61:  write "A~PPJf-overflow-gate28" processor5 ":buildBlockFromCf CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
   62:  write null processor5 ":buildBlockFromCfg:config"            ...
   63:  write false processor5 ":buildBlockFromCfg*finished"         ...
   64:  write 2 processor5 "@counter"                                ...
        label *label394                                              ...
   65:  wait 1e-15                                                   ...
   66:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   67:  jump *label394 equal *tmp294 false                           ...
   68:  write "APTJg-power-node29" processor5 ":buildBlockFromCfg:c ...
   69:  write null processor5 ":buildBlockFromCfg:config"            ...
   70:  write false processor5 ":buildBlockFromCfg*finished"         ...
   71:  write 2 processor5 "@counter"                                ...
        label *label397                                              ...
   72:  wait 1e-15                                                   ...
   73:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   74:  jump *label397 equal *tmp294 false                           ...
        label *label41                                               CoreBuilder.mnd: if scrap then
   75:  write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromC CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
   76:  write null processor5 ":buildBlockFromCfg:config"            ...
   77:  write false processor5 ":buildBlockFromCfg*finished"         ...
   78:  write 2 processor5 "@counter"                                ...
        label *label331                                              ...
   79:  wait 1e-15                                                   ...
   80:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   81:  jump *label331 equal *tmp294 false                           ...
   82:  write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromC ...
   83:  write null processor5 ":buildBlockFromCfg:config"            ...
   84:  write false processor5 ":buildBlockFromCfg*finished"         ...
   85:  write 2 processor5 "@counter"                                ...
        label *label334                                              ...
   86:  wait 1e-15                                                   ...
   87:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
   88:  jump *label334 equal *tmp294 false                           ...
   89:  write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg: CoreBuilder.mnd: blockBuilder.meetTargetCfg(cfg);
   90:  write false processor5 ":meetTargetCfg*finished"             ...
   91:  write 7 processor5 "@counter"                                ...
        label *label49                                               ...
   92:  wait 1e-15                                                   ...
   93:  read *tmp163 processor5 ":meetTargetCfg*finished"            ...
   94:  jump *label49 equal *tmp163 false                            ...
   95:  write @ore-titanium processor2 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
   96:  write .coreX processor3 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   97:  write .coreY processor3 ":findDrillLocation:y"               ...
   98:  write @unit processor3 ":findDrillLocation:unit"             ...
   99:  write @titanium processor3 ":findDrillLocation:item"         ...
  100:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  101:  write 2 processor3 ":findDrillLocation:size"                 ...
  102:  write 4 processor3 ":findDrillLocation:limit"                ...
  103:  write false processor3 ":findDrillLocation*finished"         ...
  104:  write 1 processor3 "@counter"                                ...
        label *label50                                               ...
  105:  wait 1e-15                                                   ...
  106:  read *tmp174 processor3 ":findDrillLocation*finished"        ...
  107:  jump *label50 equal *tmp174 false                            ...
  108:  read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocat ...
  109:  read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocat ...
  110:  read :buildFirstTitaniumDrill:result processor3 ":findDrillL ...
  111:  jump *label51 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  112:  set .ERROR "Cannot locate spot for titanium drill"           CoreBuilder.mnd: ERROR = error;
  113:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label51                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  114:  write @pneumatic-drill processor2 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  115:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
  116:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
  117:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
  118:  write 3 processor5 "@counter"                                ...
        label *label54                                               ...
  119:  wait 1e-15                                                   ...
  120:  read *tmp180 processor5 ":buildFirstTitaniumDrillAt*finished ...
  121:  jump *label54 equal *tmp180 false                            ...
  122:  read *tmp161 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
  123:  write *tmp161 processor2 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  124:  write *tmp161 processor5 ".titaniumDrill"                    CoreBuilder.mnd: blockBuilder.titaniumDrill = titaniumDrill;
  125:  jump *label55 equal .scrap false                             CoreBuilder.mnd: if scrap then
  126:  write "A©RPJh-unloader30" processor5 ":buildBlockFromCfg:cfg CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  127:  write null processor5 ":buildBlockFromCfg:config"            ...
  128:  write false processor5 ":buildBlockFromCfg*finished"         ...
  129:  write 2 processor5 "@counter"                                ...
        label *label400                                              ...
  130:  wait 1e-15                                                   ...
  131:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  132:  jump *label400 equal *tmp294 false                           ...
  133:  write "A¨SSJi-container31" processor5 ":buildBlockFromCfg:cf ...
  134:  write null processor5 ":buildBlockFromCfg:config"            ...
  135:  write false processor5 ":buildBlockFromCfg*finished"         ...
  136:  write 2 processor5 "@counter"                                ...
        label *label403                                              ...
  137:  wait 1e-15                                                   ...
  138:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  139:  jump *label403 equal *tmp294 false                           ...
  140:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
  141:  set .sandContainer :buildBlockFromCfgLocal*retval            CoreBuilder.mnd: sandContainer = buildBlockFromCfgLocal(CONTAINER_A);
  142:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai CoreBuilder.mnd: blockBuilder.sandContainer = sandContainer;
  143:  write "A{TPJm-inverted-sorter35" processor5 ":buildBlockFrom CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  144:  write null processor5 ":buildBlockFromCfg:config"            ...
  145:  write false processor5 ":buildBlockFromCfg*finished"         ...
  146:  write 2 processor5 "@counter"                                ...
        label *label406                                              ...
  147:  wait 1e-15                                                   ...
  148:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  149:  jump *label406 equal *tmp294 false                           ...
  150:  write "AXTNJj-pulverizer32" processor5 ":buildBlockFromCfg:c ...
  151:  write null processor5 ":buildBlockFromCfg:config"            ...
  152:  write false processor5 ":buildBlockFromCfg*finished"         ...
  153:  write 2 processor5 "@counter"                                ...
        label *label409                                              ...
  154:  wait 1e-15                                                   ...
  155:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  156:  jump *label409 equal *tmp294 false                           ...
  157:  write "A~RNJk-overflow-gate33" processor5 ":buildBlockFromCf ...
  158:  write null processor5 ":buildBlockFromCfg:config"            ...
  159:  write false processor5 ":buildBlockFromCfg*finished"         ...
  160:  write 2 processor5 "@counter"                                ...
        label *label412                                              ...
  161:  wait 1e-15                                                   ...
  162:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  163:  jump *label412 equal *tmp294 false                           ...
  164:  write "A~RLJl-overflow-gate34" processor5 ":buildBlockFromCf ...
  165:  write null processor5 ":buildBlockFromCfg:config"            ...
  166:  write false processor5 ":buildBlockFromCfg*finished"         ...
  167:  write 2 processor5 "@counter"                                ...
        label *label415                                              ...
  168:  wait 1e-15                                                   ...
  169:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  170:  jump *label415 equal *tmp294 false                           ...
        label *label55                                               CoreBuilder.mnd: if scrap then
  171:  write .sandContainer processor7 ".sandContainer"             CoreBuilder.mnd: monoController.sandContainer = sandContainer;
  172:  write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromC CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  173:  write null processor5 ":buildBlockFromCfg:config"            ...
  174:  write false processor5 ":buildBlockFromCfg*finished"         ...
  175:  write 2 processor5 "@counter"                                ...
        label *label337                                              ...
  176:  wait 1e-15                                                   ...
  177:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  178:  jump *label337 equal *tmp294 false                           ...
  179:  write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCf ...
  180:  write null processor5 ":buildBlockFromCfg:config"            ...
  181:  write false processor5 ":buildBlockFromCfg*finished"         ...
  182:  write 2 processor5 "@counter"                                ...
        label *label340                                              ...
  183:  wait 1e-15                                                   ...
  184:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  185:  jump *label340 equal *tmp294 false                           ...
  186:  write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg" ...
  187:  write null processor5 ":buildBlockFromCfg:config"            ...
  188:  write false processor5 ":buildBlockFromCfg*finished"         ...
  189:  write 2 processor5 "@counter"                                ...
        label *label343                                              ...
  190:  wait 1e-15                                                   ...
  191:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  192:  jump *label343 equal *tmp294 false                           ...
  193:  write 80 processor5 ".graphiteSurplus"                       CoreBuilder.mnd: blockBuilder.graphiteSurplus = 80;
  194:  write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromC CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, config);
  195:  write processor10 processor5 ":buildBlockFromCfg:config"     ...
  196:  write false processor5 ":buildBlockFromCfg*finished"         ...
  197:  write 2 processor5 "@counter"                                ...
        label *label67                                               ...
  198:  wait 1e-15                                                   ...
  199:  read *tmp195 processor5 ":buildBlockFromCfg*finished"        ...
  200:  jump *label67 equal *tmp195 false                            ...
  201:  write processor1 AÕFFJS-micro-processor9 ".timer"            CoreBuilder.mnd: processor.timer = timer;
  202:  write processor2 AÕFFJS-micro-processor9 ".display"          CoreBuilder.mnd: processor.display = display;
  203:  write .core AÕFFJS-micro-processor9 ".core"                  CoreBuilder.mnd: processor.core = core;
  204:  write bank1 AÕFFJS-micro-processor9 ".bank"                  CoreBuilder.mnd: processor.bank = bank1;
  205:  set *tmp198 AJEMJJ-graphite-press0                           CoreBuilder.mnd: processor.write(@this.read(block), block);
  206:  write *tmp198 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press ...
  207:  set *tmp198 AJTJK-battery1                                  ...
  208:  write *tmp198 AÕFFJS-micro-processor9 "AJTJK-battery1"      ...
  209:  set *tmp198 ALTJL-battery2                                  ...
  210:  write *tmp198 AÕFFJS-micro-processor9 "ALTJL-battery2"      ...
  211:  set *tmp198 AJRJM-combustion-generator3                     ...
  212:  write *tmp198 AÕFFJS-micro-processor9 "AJRJM-combustion-gen ...
  213:  set *tmp198 ALMQJN-silicon-smelter4                          ...
  214:  write *tmp198 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelte ...
  215:  set *tmp198 A{LNJO-inverted-sorter5                          ...
  216:  write *tmp198 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorte ...
  217:  set *tmp198 A©JNJP-unloader6                                 ...
  218:  write *tmp198 AÕFFJS-micro-processor9 "A©JNJP-unloader6"     ...
  219:  set *tmp198 A{HNJQ-inverted-sorter7                          ...
  220:  write *tmp198 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorte ...
  221:  set *tmp198 AJPJR-underflow-gate8                           ...
  222:  write *tmp198 AÕFFJS-micro-processor9 "AJPJR-underflow-gate ...
  223:  set *tmp198 AÕFFJS-micro-processor9                          ...
  224:  write *tmp198 AÕFFJS-micro-processor9 "AÕFFJS-micro-processo ...
  225:  write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:c CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  226:  write null processor5 ":buildBlockFromCfg:config"            ...
  227:  write false processor5 ":buildBlockFromCfg*finished"         ...
  228:  write 2 processor5 "@counter"                                ...
        label *label346                                              ...
  229:  wait 1e-15                                                   ...
  230:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  231:  jump *label346 equal *tmp294 false                           ...
  232:  write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg ...
  233:  write null processor5 ":buildBlockFromCfg:config"            ...
  234:  write false processor5 ":buildBlockFromCfg*finished"         ...
  235:  write 2 processor5 "@counter"                                ...
        label *label349                                              ...
  236:  wait 1e-15                                                   ...
  237:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  238:  jump *label349 equal *tmp294 false                           ...
  239:  write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCf ...
  240:  write null processor5 ":buildBlockFromCfg:config"            ...
  241:  write false processor5 ":buildBlockFromCfg*finished"         ...
  242:  write 2 processor5 "@counter"                                ...
        label *label352                                              ...
  243:  wait 1e-15                                                   ...
  244:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  245:  jump *label352 equal *tmp294 false                           ...
  246:  write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg: ...
  247:  write null processor5 ":buildBlockFromCfg:config"            ...
  248:  write false processor5 ":buildBlockFromCfg*finished"         ...
  249:  write 2 processor5 "@counter"                                ...
        label *label355                                              ...
  250:  wait 1e-15                                                   ...
  251:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  252:  jump *label355 equal *tmp294 false                           ...
  253:  write 1 AÕFFJS-micro-processor9 ".flareTarget"               CoreBuilder.mnd: processor.flareTarget = target;
  254:  write 5 AÕFFJS-micro-processor9 ".monoTarget"                CoreBuilder.mnd: processor.monoTarget = target;
  255:  write 85 AÕFFJS-micro-processor9 ".pressTarget"              CoreBuilder.mnd: processor.pressTarget = 85;
  256:  write 150 AÕFFJS-micro-processor9 ".smelterTarget"           CoreBuilder.mnd: processor.smelterTarget = 150;
  257:  write 30 AÕFFJS-micro-processor9 ".kilnTarget"               CoreBuilder.mnd: processor.kilnTarget = 30;
  258:  write 20 processor5 ".siliconSurplus"                        CoreBuilder.mnd: blockBuilder.siliconSurplus = 20;
  259:  write 20 processor5 ".leadSurplus"                           CoreBuilder.mnd: blockBuilder.leadSurplus = 20;
  260:  write 0 processor5 ":meetTarget:block"                       CoreBuilder.mnd: blockBuilder.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  261:  write 0 processor5 ":meetTarget:copper"                      ...
  262:  write 0 processor5 ":meetTarget:lead"                        ...
  263:  write 0 processor5 ":meetTarget:graphite"                    ...
  264:  write 0 processor5 ":meetTarget:silicon"                     ...
  265:  write 0 processor5 ":meetTarget:titanium"                    ...
  266:  write 0 processor5 ":meetTarget:metaglass"                   ...
  267:  write 0 processor5 ":meetTarget:thorium"                     ...
  268:  write false processor5 ":meetTarget:forBuild"                ...
  269:  write true processor5 ":meetTarget:isNoTarget"               ...
  270:  write false processor5 ":meetTarget*finished"                ...
  271:  write 6 processor5 "@counter"                                ...
        label *label421                                              ...
  272:  wait 1e-15                                                   ...
  273:  read *tmp306 processor5 ":meetTarget*finished"               ...
  274:  jump *label421 equal *tmp306 false                           ...
  275:  write 0 processor2 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  276:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  277:  write 0 AÕFFJS-micro-processor9 ".leadReserve"               CoreBuilder.mnd: processor.leadReserve = 0;
  278:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            CoreBuilder.mnd: processor.siliconReserve = 0;
  279:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           CoreBuilder.mnd: processor.graphiteReserve = 0;
        label *label88                                               CoreBuilder.mnd: do
  280:  write false processor5 ":supplyBase*finished"                CoreBuilder.mnd: blockBuilder.supplyBase();
  281:  write 8 processor5 "@counter"                                ...
        label *label91                                               ...
  282:  wait 1e-15                                                   ...
  283:  read *tmp203 processor5 ":supplyBase*finished"               ...
  284:  jump *label91 equal *tmp203 false                            ...
  285:  sensor *tmp204 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  286:  jump *label90 lessThan *tmp204 300                           ...
  287:  read *tmp81 AÕFFJS-micro-processor9 ".monos"                 CoreBuilder.mnd: while processor.monos < 3;
  288:  jump *label88 lessThan *tmp81 3                              CoreBuilder.mnd: do
        label *label90                                               ...
  289:  write 65 processor5 ".siliconSurplus"                        CoreBuilder.mnd: blockBuilder.siliconSurplus = 65;
  290:  write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  291:  write null processor5 ":buildBlockFromCfg:config"            ...
  292:  write false processor5 ":buildBlockFromCfg*finished"         ...
  293:  write 2 processor5 "@counter"                                ...
        label *label358                                              ...
  294:  wait 1e-15                                                   ...
  295:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  296:  jump *label358 equal *tmp294 false                           ...
  297:  write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFrom ...
  298:  write null processor5 ":buildBlockFromCfg:config"            ...
  299:  write false processor5 ":buildBlockFromCfg*finished"         ...
  300:  write 2 processor5 "@counter"                                ...
        label *label361                                              ...
  301:  wait 1e-15                                                   ...
  302:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  303:  jump *label361 equal *tmp294 false                           ...
  304:  write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"    ...
  305:  write null processor5 ":buildBlockFromCfg:config"            ...
  306:  write false processor5 ":buildBlockFromCfg*finished"         ...
  307:  write 2 processor5 "@counter"                                ...
        label *label364                                              ...
  308:  wait 1e-15                                                   ...
  309:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  310:  jump *label364 equal *tmp294 false                           ...
  311:  write "A¡AOJ[-water-extractor17" processor5 ":buildBlockFrom ...
  312:  write null processor5 ":buildBlockFromCfg:config"            ...
  313:  write false processor5 ":buildBlockFromCfg*finished"         ...
  314:  write 2 processor5 "@counter"                                ...
        label *label367                                              ...
  315:  wait 1e-15                                                   ...
  316:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  317:  jump *label367 equal *tmp294 false                           ...
  318:  write "AAKJ\-steam-generator18" processor5 ":buildBlockFrom ...
  319:  write null processor5 ":buildBlockFromCfg:config"            ...
  320:  write false processor5 ":buildBlockFromCfg*finished"         ...
  321:  write 2 processor5 "@counter"                                ...
        label *label370                                              ...
  322:  wait 1e-15                                                   ...
  323:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  324:  jump *label370 equal *tmp294 false                           ...
  325:  write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg: ...
  326:  write null processor5 ":buildBlockFromCfg:config"            ...
  327:  write false processor5 ":buildBlockFromCfg*finished"         ...
  328:  write 2 processor5 "@counter"                                ...
        label *label373                                              ...
  329:  wait 1e-15                                                   ...
  330:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  331:  jump *label373 equal *tmp294 false                           ...
  332:  write 200 processor5 ".graphiteSurplus"                      CoreBuilder.mnd: blockBuilder.graphiteSurplus = 200;
  333:  write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFrom CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  334:  write null processor5 ":buildBlockFromCfg:config"            ...
  335:  write false processor5 ":buildBlockFromCfg*finished"         ...
  336:  write 2 processor5 "@counter"                                ...
        label *label376                                              ...
  337:  wait 1e-15                                                   ...
  338:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  339:  jump *label376 equal *tmp294 false                           ...
  340:  jump *label101 equal .scrap false                            CoreBuilder.mnd: if scrap then
  341:  write "AXTLJn-pulverizer36" processor5 ":buildBlockFromCfg:c CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  342:  write null processor5 ":buildBlockFromCfg:config"            ...
  343:  write false processor5 ":buildBlockFromCfg*finished"         ...
  344:  write 2 processor5 "@counter"                                ...
        label *label418                                              ...
  345:  wait 1e-15                                                   ...
  346:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  347:  jump *label418 equal *tmp294 false                           ...
        label *label101                                              CoreBuilder.mnd: if scrap then
  348:  write "A©HFJa-unloader23" processor5 ":buildBlockFromCfg:cfg CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  349:  write null processor5 ":buildBlockFromCfg:config"            ...
  350:  write false processor5 ":buildBlockFromCfg*finished"         ...
  351:  write 2 processor5 "@counter"                                ...
        label *label379                                              ...
  352:  wait 1e-15                                                   ...
  353:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  354:  jump *label379 equal *tmp294 false                           ...
  355:  write "A{HDJb-inverted-sorter24" processor5 ":buildBlockFrom ...
  356:  write null processor5 ":buildBlockFromCfg:config"            ...
  357:  write false processor5 ":buildBlockFromCfg*finished"         ...
  358:  write 2 processor5 "@counter"                                ...
        label *label382                                              ...
  359:  wait 1e-15                                                   ...
  360:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  361:  jump *label382 equal *tmp294 false                           ...
  362:  write "AÀF@Lc-additive-reconstructor25" processor5 ":buildBl ...
  363:  write null processor5 ":buildBlockFromCfg:config"            ...
  364:  write false processor5 ":buildBlockFromCfg*finished"         ...
  365:  write 2 processor5 "@counter"                                ...
        label *label385                                              ...
  366:  wait 1e-15                                                   ...
  367:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  368:  jump *label385 equal *tmp294 false                           ...
  369:  write 1000 processor5 ".siliconSurplus"                      CoreBuilder.mnd: blockBuilder.siliconSurplus = 1000;
  370:  write 20 processor5 ".siliconMonoSurplus"                    CoreBuilder.mnd: blockBuilder.siliconMonoSurplus = 20;
  371:  write 100 processor5 ".metaglassSurplus"                     CoreBuilder.mnd: blockBuilder.metaglassSurplus = 100;
  372:  write 4 AÕFFJS-micro-processor9 ".monoTarget"                CoreBuilder.mnd: processor.monoTarget = target;
  373:  write 3 AÕFFJS-micro-processor9 ".polyTarget"                CoreBuilder.mnd: processor.polyTarget = target;
  374:  write 0 processor5 ":meetTarget:block"                       CoreBuilder.mnd: blockBuilder.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  375:  write 0 processor5 ":meetTarget:copper"                      ...
  376:  write 0 processor5 ":meetTarget:lead"                        ...
  377:  write 0 processor5 ":meetTarget:graphite"                    ...
  378:  write 0 processor5 ":meetTarget:silicon"                     ...
  379:  write 0 processor5 ":meetTarget:titanium"                    ...
  380:  write 0 processor5 ":meetTarget:metaglass"                   ...
  381:  write 0 processor5 ":meetTarget:thorium"                     ...
  382:  write false processor5 ":meetTarget:forBuild"                ...
  383:  write true processor5 ":meetTarget:isNoTarget"               ...
  384:  write false processor5 ":meetTarget*finished"                ...
  385:  write 6 processor5 "@counter"                                ...
        label *label424                                              ...
  386:  wait 1e-15                                                   ...
  387:  read *tmp306 processor5 ":meetTarget*finished"               ...
  388:  jump *label424 equal *tmp306 false                           ...
  389:  write 0 processor2 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  390:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  391:  write 0 AÕFFJS-micro-processor9 ".leadReserve"               CoreBuilder.mnd: processor.leadReserve = 0;
  392:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            CoreBuilder.mnd: processor.siliconReserve = 0;
  393:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           CoreBuilder.mnd: processor.graphiteReserve = 0;
  394:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 CoreBuilder.mnd: while processor.polys < 2 do
  395:  jump *label112 greaterThanEq *tmp82 2                        ...
        label *label231                                              ...
  396:  write false processor5 ":supplyBase*finished"                CoreBuilder.mnd: blockBuilder.supplyBase();
  397:  write 8 processor5 "@counter"                                ...
        label *label113                                              ...
  398:  wait 1e-15                                                   ...
  399:  read *tmp221 processor5 ":supplyBase*finished"               ...
  400:  jump *label113 equal *tmp221 false                           ...
  401:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 CoreBuilder.mnd: while processor.polys < 2 do
  402:  jump *label231 lessThan *tmp82 2                             ...
        label *label112                                              ...
  403:  write 2 AÕFFJS-micro-processor9 ".flareTarget"               CoreBuilder.mnd: processor.flareTarget = target;
  404:  read *tmp80 AÕFFJS-micro-processor9 ".flares"                CoreBuilder.mnd: while processor.flares < 2 do
  405:  jump *label117 greaterThanEq *tmp80 2                        ...
        label *label232                                              ...
  406:  write false processor5 ":supplyBase*finished"                CoreBuilder.mnd: blockBuilder.supplyBase();
  407:  write 8 processor5 "@counter"                                ...
        label *label118                                              ...
  408:  wait 1e-15                                                   ...
  409:  read *tmp223 processor5 ":supplyBase*finished"               ...
  410:  jump *label118 equal *tmp223 false                           ...
  411:  read *tmp80 AÕFFJS-micro-processor9 ".flares"                CoreBuilder.mnd: while processor.flares < 2 do
  412:  jump *label232 lessThan *tmp80 2                             ...
        label *label117                                              ...
  413:  write @ore-titanium processor2 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  414:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  415:  read :blocksBuildTitaniumDrills:current processor3 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  416:  write .coreX processor3 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  417:  write .coreY processor3 ":findDrillLocation:y"               ...
  418:  write @unit processor3 ":findDrillLocation:unit"             ...
  419:  write @titanium processor3 ":findDrillLocation:item"         ...
  420:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  421:  write 4 processor3 ":findDrillLocation:size"                 ...
  422:  write 1000000000 processor3 ":findDrillLocation:limit"       ...
  423:  write false processor3 ":findDrillLocation*finished"         ...
  424:  write 1 processor3 "@counter"                                ...
  425:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  426:  write :blocksBuildTitaniumDrills:current processor5 ":buildT CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(current);
  427:  write false processor5 ":buildTitaniumDrills*finished"       ...
  428:  write 5 processor5 "@counter"                                ...
        label *label120                                              ...
  429:  wait 1e-15                                                   ...
  430:  read *tmp235 processor5 ":buildTitaniumDrills*finished"      ...
  431:  jump *label120 equal *tmp235 false                           ...
  432:  write false processor3 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  433:  write 3 processor3 "@counter"                                ...
  434:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  435:  write 10 processor5 ".graphiteSurplus"                       CoreBuilder.mnd: blockBuilder.graphiteSurplus = 10;
  436:  write 50 processor5 ".metaglassSurplus"                      CoreBuilder.mnd: blockBuilder.metaglassSurplus = 50;
  437:  write @ore-thorium processor2 ".nextBlock"                   CoreBuilder.mnd: display.nextBlock = @ore-thorium;
  438:  write .coreX processor3 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  439:  write .coreY processor3 ":layoutThoriumDrill:y"              ...
  440:  write @unit processor3 ":layoutThoriumDrill:unit"            ...
  441:  write 7 processor3 ":layoutThoriumDrill:limit"               ...
  442:  write false processor3 ":layoutThoriumDrill*finished"        ...
  443:  write 2 processor3 "@counter"                                ...
        label *label122                                              ...
  444:  wait 1e-15                                                   ...
  445:  read *tmp240 processor3 ":layoutThoriumDrill*finished"       ...
  446:  jump *label122 equal *tmp240 false                           ...
  447:  write "AJJJ~-laser-drill52" processor5 ":meetTargetCfg:cfg" CoreBuilder.mnd: blockBuilder.meetTargetCfg(LASER_DRILL);
  448:  write false processor5 ":meetTargetCfg*finished"             ...
  449:  write 7 processor5 "@counter"                                ...
        label *label123                                              ...
  450:  wait 1e-15                                                   ...
  451:  read *tmp243 processor5 ":meetTargetCfg*finished"            ...
  452:  jump *label123 equal *tmp243 false                           ...
        label *label124                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  453:  wait 1e-15                                                   ...
  454:  read *tmp244 processor3 ":layoutThoriumDrill*finished"       ...
  455:  jump *label124 equal *tmp244 false                           ...
  456:  read :buildThoriumDrill:result processor3 ":layoutThoriumDri ...
  457:  jump *label125 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  458:  set .ERROR "Cannot locate spot for thorium drill"            CoreBuilder.mnd: ERROR = error;
  459:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label125                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  460:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  461:  read *tmp52 processor3 ".drillX"                             ...
  462:  write *tmp52 processor5 ":buildBlockAt:x"                    ...
  463:  read *tmp53 processor3 ".drillY"                             ...
  464:  write *tmp53 processor5 ":buildBlockAt:y"                    ...
  465:  write null processor5 ":buildBlockAt:rotation"               ...
  466:  write 0 processor5 ":buildBlockAt:config"                    ...
  467:  write -1 processor5 ":buildBlockAt:index"                    ...
  468:  write false processor5 ":buildBlockAt*finished"              ...
  469:  write 1 processor5 "@counter"                                ...
        label *label128                                              ...
  470:  wait 1e-15                                                   ...
  471:  read *tmp254 processor5 ":buildBlockAt*finished"             ...
  472:  jump *label128 equal *tmp254 false                           ...
  473:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  474:  read :buildRemoteBlockLocal:x processor3 ".water1X"          CoreBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  475:  read :buildRemoteBlockLocal:y processor3 ".water1Y"          ...
  476:  write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlo CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  477:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  478:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  479:  write false processor5 ":buildRemoteBlock*finished"          ...
  480:  write 4 processor5 "@counter"                                ...
        label *label295                                              ...
  481:  wait 1e-15                                                   ...
  482:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  483:  jump *label295 equal *tmp290 false                           ...
  484:  read :buildRemoteBlockLocal:x processor3 ".water2X"          CoreBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  485:  read :buildRemoteBlockLocal:y processor3 ".water2Y"          ...
  486:  write "A¡AOJ[-water-extractor17" processor5 ":buildRemoteBlo CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  487:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  488:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  489:  write false processor5 ":buildRemoteBlock*finished"          ...
  490:  write 4 processor5 "@counter"                                ...
        label *label298                                              ...
  491:  wait 1e-15                                                   ...
  492:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  493:  jump *label298 equal *tmp290 false                           ...
  494:  read :buildRemoteBlockLocal:x processor3 ".generatorX"       CoreBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  495:  read :buildRemoteBlockLocal:y processor3 ".generatorY"       ...
  496:  write "AAKJ\-steam-generator18" processor5 ":buildRemoteBlo CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  497:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  498:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  499:  write false processor5 ":buildRemoteBlock*finished"          ...
  500:  write 4 processor5 "@counter"                                ...
        label *label301                                              ...
  501:  wait 1e-15                                                   ...
  502:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  503:  jump *label301 equal *tmp290 false                           ...
  504:  read .thoriumGenerator processor5 ":buildRemoteBlock*retval" CoreBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  505:  read :buildRemoteBlockLocal:x processor3 ".node1X"           CoreBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  506:  read :buildRemoteBlockLocal:y processor3 ".node1Y"           ...
  507:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  508:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  509:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  510:  write false processor5 ":buildRemoteBlock*finished"          ...
  511:  write 4 processor5 "@counter"                                ...
        label *label304                                              ...
  512:  wait 1e-15                                                   ...
  513:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  514:  jump *label304 equal *tmp290 false                           ...
  515:  read :buildRemoteBlockLocal:x processor3 ".node2X"           CoreBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  516:  read :buildRemoteBlockLocal:y processor3 ".node2Y"           ...
  517:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  518:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  519:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  520:  write false processor5 ":buildRemoteBlock*finished"          ...
  521:  write 4 processor5 "@counter"                                ...
        label *label307                                              ...
  522:  wait 1e-15                                                   ...
  523:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  524:  jump *label307 equal *tmp290 false                           ...
  525:  read :buildRemoteBlockLocal:x processor3 ".panelX"           CoreBuilder.mnd: buildRemoteBlockLocal(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  526:  read :buildRemoteBlockLocal:y processor3 ".panelY"           ...
  527:  write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:c CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  528:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  529:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  530:  write false processor5 ":buildRemoteBlock*finished"          ...
  531:  write 4 processor5 "@counter"                                ...
        label *label310                                              ...
  532:  wait 1e-15                                                   ...
  533:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  534:  jump *label310 equal *tmp290 false                           ...
  535:  read :buildRemoteBlockLocal:x processor3 ".batteryX"         CoreBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  536:  read :buildRemoteBlockLocal:y processor3 ".batteryY"         ...
  537:  write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"   CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  538:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  539:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  540:  write false processor5 ":buildRemoteBlock*finished"          ...
  541:  write 4 processor5 "@counter"                                ...
        label *label313                                              ...
  542:  wait 1e-15                                                   ...
  543:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  544:  jump *label313 equal *tmp290 false                           ...
  545:  read .thoriumBattery processor5 ":buildRemoteBlock*retval"   CoreBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  546:  read :buildRemoteBlockLocal:x processor3 ".containerX"       CoreBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  547:  read :buildRemoteBlockLocal:y processor3 ".containerY"       ...
  548:  write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg CoreBuilder.mnd: blockBuilder.buildRemoteBlock(cfg, x, y);
  549:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  550:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  551:  write false processor5 ":buildRemoteBlock*finished"          ...
  552:  write 4 processor5 "@counter"                                ...
        label *label316                                              ...
  553:  wait 1e-15                                                   ...
  554:  read *tmp290 processor5 ":buildRemoteBlock*finished"         ...
  555:  jump *label316 equal *tmp290 false                           ...
  556:  read :buildRemoteBlockLocal*retval processor5 ":buildRemoteB CoreBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  557:  select .thoriumContainer equal :buildRemoteBlockLocal*retval CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  558:  write .thoriumDrill processor2 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  559:  write .thoriumContainer processor2 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  560:  write .thoriumBattery processor5 ".thoriumBattery"           CoreBuilder.mnd: blockBuilder.thoriumBattery = thoriumBattery;
  561:  write .thoriumContainer processor5 ".thoriumContainer"       CoreBuilder.mnd: blockBuilder.thoriumContainer = thoriumContainer;
  562:  write .thoriumGenerator processor5 ".thoriumGenerator"       CoreBuilder.mnd: blockBuilder.thoriumGenerator = thoriumGenerator;
  563:  write .thoriumContainer processor6 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  564:  write false processor6 ":setThoriumContainer*finished"       ...
  565:  write 3 processor6 "@counter"                                ...
        label *label139                                              ...
  566:  wait 1e-15                                                   ...
  567:  read *tmp267 processor6 ":setThoriumContainer*finished"      ...
  568:  jump *label139 equal *tmp267 false                           ...
  569:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  570:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 CoreBuilder.mnd: while processor.polys < 3 do
  571:  jump *label142 greaterThanEq *tmp82 3                        ...
        label *label233                                              ...
  572:  write false processor5 ":supplyBase*finished"                CoreBuilder.mnd: blockBuilder.supplyBase();
  573:  write 8 processor5 "@counter"                                ...
        label *label143                                              ...
  574:  wait 1e-15                                                   ...
  575:  read *tmp269 processor5 ":supplyBase*finished"               ...
  576:  jump *label143 equal *tmp269 false                           ...
  577:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 CoreBuilder.mnd: while processor.polys < 3 do
  578:  jump *label233 lessThan *tmp82 3                             ...
        label *label142                                              ...
  579:  op add :setMonoTarget.2:target 4 .scrap                      CoreBuilder.mnd: setMonoTarget(4 + scrap);
  580:  write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".mono CoreBuilder.mnd: processor.monoTarget = target;
  581:  write 3209 AÕFFJS-micro-processor9 ".powerTarget"            CoreBuilder.mnd: processor.powerTarget = 3209;
  582:  write 120 processor5 ".siliconMonoSurplus"                   CoreBuilder.mnd: blockBuilder.siliconMonoSurplus = 120;
  583:  write 0 processor5 ".leadSurplus"                            CoreBuilder.mnd: blockBuilder.leadSurplus = 0;
  584:  write "AÁNBJd-multiplicative-reconstructor26" processor5 ":b CoreBuilder.mnd: return blockBuilder.buildBlockFromCfg(cfg, null);
  585:  write null processor5 ":buildBlockFromCfg:config"            ...
  586:  write false processor5 ":buildBlockFromCfg*finished"         ...
  587:  write 2 processor5 "@counter"                                ...
        label *label388                                              ...
  588:  wait 1e-15                                                   ...
  589:  read *tmp294 processor5 ":buildBlockFromCfg*finished"        ...
  590:  jump *label388 equal *tmp294 false                           ...
  591:  write 10 processor5 ".metaglassSurplus"                      CoreBuilder.mnd: blockBuilder.metaglassSurplus = 10;
  592:  write 0 AÕFFJS-micro-processor9 ".polyTarget"                CoreBuilder.mnd: processor.polyTarget = target;
  593:  write 0 AÕFFJS-micro-processor9 ".flareTarget"               CoreBuilder.mnd: processor.flareTarget = target;
  594:  write 1 AÕFFJS-micro-processor9 ".megaTarget"                CoreBuilder.mnd: processor.megaTarget = target;
  595:  write 0 processor5 ":meetTarget:block"                       CoreBuilder.mnd: blockBuilder.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  596:  write 0 processor5 ":meetTarget:copper"                      ...
  597:  write 0 processor5 ":meetTarget:lead"                        ...
  598:  write 0 processor5 ":meetTarget:graphite"                    ...
  599:  write 0 processor5 ":meetTarget:silicon"                     ...
  600:  write 0 processor5 ":meetTarget:titanium"                    ...
  601:  write 0 processor5 ":meetTarget:metaglass"                   ...
  602:  write 0 processor5 ":meetTarget:thorium"                     ...
  603:  write false processor5 ":meetTarget:forBuild"                ...
  604:  write true processor5 ":meetTarget:isNoTarget"               ...
  605:  write false processor5 ":meetTarget*finished"                ...
  606:  write 6 processor5 "@counter"                                ...
        label *label427                                              ...
  607:  wait 1e-15                                                   ...
  608:  read *tmp306 processor5 ":meetTarget*finished"               ...
  609:  jump *label427 equal *tmp306 false                           ...
  610:  write 0 processor2 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  611:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  612:  write 0 AÕFFJS-micro-processor9 ".leadReserve"               CoreBuilder.mnd: processor.leadReserve = 0;
  613:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            CoreBuilder.mnd: processor.siliconReserve = 0;
  614:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           CoreBuilder.mnd: processor.graphiteReserve = 0;
  615:  read *tmp82 AÕFFJS-micro-processor9 ".polys"                 CoreBuilder.mnd: var tmp = processor.polys - 1;
  616:  op sub :tmp *tmp82 1                                         ...
  617:  write :tmp AÕFFJS-micro-processor9 ".polyTarget"             CoreBuilder.mnd: processor.polyTarget = tmp;
  618:  write :tmp AÕFFJS-micro-processor9 ".polys"                  CoreBuilder.mnd: processor.polys = tmp;
  619:  write :tmp processor2 ".polys"                               CoreBuilder.mnd: display.polys = tmp;
  620:  sensor :x AÁNBJd-multiplicative-reconstructor26 @x           CoreBuilder.mnd: var x = multiplicative_rec.@x;
  621:  sensor :y AÁNBJd-multiplicative-reconstructor26 @y           CoreBuilder.mnd: var y = multiplicative_rec.@y;
        label *label150                                              CoreBuilder.mnd: do
  622:  ucontrol move :x :y 0 0 0                                    CoreBuilder.mnd: move(x, y);
  623:  ucontrol payEnter 0 0 0 0 0                                  CoreBuilder.mnd: payEnter();
  624:  read *tmp83 AÕFFJS-micro-processor9 ".megas"                 CoreBuilder.mnd: while !processor.megas;
  625:  jump *label150 equal *tmp83 false                            CoreBuilder.mnd: do
  626:  write true AÕFFJS-micro-processor9 ".finished"               CoreBuilder.mnd: processor.finished = true;
  627:  control enabled processor1 false 0 0 0                       CoreBuilder.mnd: timer.enabled = false;
  628:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  629:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  630:  control enabled processor6 false 0 0 0                       CoreBuilder.mnd: polyController.enabled = false;
  631:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: oreLocator.enabled = false;
  632:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: blockBuilder.enabled = false;
  633:  control enabled processor11 false 0 0 0                      CoreBuilder.mnd: measurements.enabled = false;
        label *label263                                              CoreBuilder.mnd: do
  634:  ubind @mega                                                  CoreBuilder.mnd: firstUnit = ubind(unit);
  635:  set :flagUnits:firstUnit @unit                               ...
  636:  jump *label263 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  637:  op add :flagUnits:x .coreX 8                                 CoreBuilder.mnd: var x = coreX + 8;
        label *label266                                              CoreBuilder.mnd: do
  638:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  639:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  640:  ubind @mega                                                  CoreBuilder.mnd: ubind(unit);
  641:  jump *label266 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
        label *label271                                              CoreBuilder.mnd: do
  642:  ubind @poly                                                  CoreBuilder.mnd: firstUnit = ubind(unit);
  643:  set :flagUnits:firstUnit @unit                               ...
  644:  jump *label271 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  645:  op add :flagUnits:x .coreX 8                                 CoreBuilder.mnd: var x = coreX + 8;
        label *label274                                              CoreBuilder.mnd: do
  646:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  647:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  648:  ubind @poly                                                  CoreBuilder.mnd: ubind(unit);
  649:  jump *label274 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
        label *label279                                              CoreBuilder.mnd: do
  650:  ubind @mono                                                  CoreBuilder.mnd: firstUnit = ubind(unit);
  651:  set :flagUnits:firstUnit @unit                               ...
  652:  jump *label279 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  653:  op add :flagUnits:x .coreX 8                                 CoreBuilder.mnd: var x = coreX + 8;
        label *label282                                              CoreBuilder.mnd: do
  654:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  655:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  656:  ubind @mono                                                  CoreBuilder.mnd: ubind(unit);
  657:  jump *label282 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
        label *label287                                              CoreBuilder.mnd: do
  658:  ubind @flare                                                 CoreBuilder.mnd: firstUnit = ubind(unit);
  659:  set :flagUnits:firstUnit @unit                               ...
  660:  jump *label287 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  661:  op add :flagUnits:x .coreX 8                                 CoreBuilder.mnd: var x = coreX + 8;
        label *label290                                              CoreBuilder.mnd: do
  662:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  663:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  664:  ubind @flare                                                 CoreBuilder.mnd: ubind(unit);
  665:  jump *label290 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
        label *label158                                              CoreBuilder.mnd: while true do
  666:  op add :lineUpUnits:y .coreY 6                               CoreBuilder.mnd: lineUpUnits(coreY + 6, @mega);
  667:  ubind @mega                                                  CoreBuilder.mnd: var firstUnit = ubind(unit);
  668:  set :lineUpUnits:firstUnit @unit                             ...
        label *label235                                              CoreBuilder.mnd: do
  669:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  670:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  671:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  672:  sensor *tmp312 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  673:  jump *label236 equal *tmp312 false                           ...
  674:  ucontrol stop 0 0 0 0 0                                      ...
        label *label236                                              ...
  675:  ubind @mega                                                  CoreBuilder.mnd: ubind(unit);
  676:  jump *label235 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  677:  op add :lineUpUnits:y .coreY 2                               CoreBuilder.mnd: lineUpUnits(coreY + 2, @poly);
  678:  ubind @poly                                                  CoreBuilder.mnd: var firstUnit = ubind(unit);
  679:  set :lineUpUnits:firstUnit @unit                             ...
        label *label242                                              CoreBuilder.mnd: do
  680:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  681:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  682:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  683:  sensor *tmp312 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  684:  jump *label243 equal *tmp312 false                           ...
  685:  ucontrol stop 0 0 0 0 0                                      ...
        label *label243                                              ...
  686:  ubind @poly                                                  CoreBuilder.mnd: ubind(unit);
  687:  jump *label242 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  688:  op sub :lineUpUnits:y .coreY 2                               CoreBuilder.mnd: lineUpUnits(coreY - 2, @mono);
  689:  ubind @mono                                                  CoreBuilder.mnd: var firstUnit = ubind(unit);
  690:  set :lineUpUnits:firstUnit @unit                             ...
        label *label249                                              CoreBuilder.mnd: do
  691:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  692:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  693:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  694:  sensor *tmp312 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  695:  jump *label250 equal *tmp312 false                           ...
  696:  ucontrol stop 0 0 0 0 0                                      ...
        label *label250                                              ...
  697:  ubind @mono                                                  CoreBuilder.mnd: ubind(unit);
  698:  jump *label249 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  699:  op sub :lineUpUnits:y .coreY 6                               CoreBuilder.mnd: lineUpUnits(coreY - 6, @flare);
  700:  ubind @flare                                                 CoreBuilder.mnd: var firstUnit = ubind(unit);
  701:  set :lineUpUnits:firstUnit @unit                             ...
        label *label256                                              CoreBuilder.mnd: do
  702:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  703:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  704:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  705:  sensor *tmp312 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  706:  jump *label257 equal *tmp312 false                           ...
  707:  ucontrol stop 0 0 0 0 0                                      ...
        label *label257                                              ...
  708:  ubind @flare                                                 CoreBuilder.mnd: ubind(unit);
  709:  jump *label256 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  710:  jump *label158 always 0 0                                    CoreBuilder.mnd: while true do


Performance: parsed in 740 ms, compiled in 354 ms, optimized in 1,298 ms, run in 20 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp31 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
