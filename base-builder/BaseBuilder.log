   673 instructions before optimizations.
    45 instructions eliminated by Temp Variables Elimination (3 passes, 7 iterations).
    57 instructions eliminated by Dead Code Elimination (5 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    13 instructions eliminated by Jump Optimization (5 iterations).
    45 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    11 instructions modified by Expression Optimization (2 passes, 3 iterations).
     1 instructions eliminated by If Expression Optimization (4 iterations).
   123 instructions eliminated by Data Flow Optimization (33 passes, 103 iterations).
     3 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (38 iterations).
     1 loops unrolled by Loop Unrolling.
   339 instructions added by Function Inlining (38 iterations).
    56 function calls inlined by Function Inlining.
     1 instructions eliminated by Jump Straightening (5 iterations).
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
   726 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 474):
    Replicate loop condition at BaseBuilder.mnd:246:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:251:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:270:5            size    +1, benefit       25.0, efficiency     25.000
  * Unroll iteration loop at BaseBuilder.mnd:179:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Inline function 'error' defined at BaseBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:88:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 487):
    Replicate loop condition at BaseBuilder.mnd:246:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:251:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:270:5            size    +1, benefit       25.0, efficiency     25.000
  * Inline function 'error' defined at BaseBuilder.mnd:20:1      size    +0, benefit        3.5, efficiency   Infinity (-6 instructions)
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:61:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:88:21                size    +1, benefit        1.8, efficiency      1.750
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 493):
  * Replicate loop condition at BaseBuilder.mnd:246:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at BaseBuilder.mnd:251:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at BaseBuilder.mnd:270:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 492):
  * Replicate loop condition at BaseBuilder.mnd:251:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at BaseBuilder.mnd:270:5            size    +1, benefit       25.0, efficiency     25.000
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 491):
  * Replicate loop condition at BaseBuilder.mnd:270:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 490):
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700
  * Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 size   +26, benefit      400.0, efficiency     15.385 (+16 instructions)
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:334:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:335:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:336:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at BaseBuilder.mnd:337:9                size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 474):
    Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 size   +20, benefit       14.0, efficiency      0.700 (+10 instructions)
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:328:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:329:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:330:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at BaseBuilder.mnd:331:5                size    +7, benefit        3.5, efficiency      0.500

Pass 1: speed optimization selection (cost limit 464):
  * Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 size   +55, benefit       36.0, efficiency      0.655 (+34 instructions)
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:91:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:92:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:93:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:94:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:95:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:96:5                 size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:97:22                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:98:24                size    +8, benefit        4.5, efficiency      0.563
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 430):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +271, benefit      105.0, efficiency      0.387
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:136:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 425):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +263, benefit      101.5, efficiency      0.386
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:137:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 420):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +255, benefit       98.0, efficiency      0.384
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:138:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 415):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +247, benefit       94.5, efficiency      0.383
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
  * Inline function call at BaseBuilder.mnd:139:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 410):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +239, benefit       91.0, efficiency      0.381
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:151:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 405):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +231, benefit       87.5, efficiency      0.379
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:152:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 400):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +223, benefit       84.0, efficiency      0.377
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:167:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 395):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +215, benefit       80.5, efficiency      0.374
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:168:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 390):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +207, benefit       77.0, efficiency      0.372
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:169:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 385):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +199, benefit       73.5, efficiency      0.369
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:184:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 380):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +191, benefit       70.0, efficiency      0.366
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:185:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 375):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +183, benefit       66.5, efficiency      0.363
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:186:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 370):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +175, benefit       63.0, efficiency      0.360
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:188:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 365):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +167, benefit       59.5, efficiency      0.356
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:213:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 360):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +159, benefit       56.0, efficiency      0.352
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:214:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 355):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +151, benefit       52.5, efficiency      0.348
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:215:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 350):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +143, benefit       49.0, efficiency      0.343
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:218:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 345):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +135, benefit       45.5, efficiency      0.337
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:219:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 340):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +127, benefit       42.0, efficiency      0.331
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:220:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 335):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +119, benefit       38.5, efficiency      0.324
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:222:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 330):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +111, benefit       35.0, efficiency      0.315
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:225:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 325):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size  +103, benefit       31.5, efficiency      0.306
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:233:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 320):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +95, benefit       28.0, efficiency      0.295
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:234:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 315):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +87, benefit       24.5, efficiency      0.282
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
  * Inline function call at BaseBuilder.mnd:235:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 310):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +79, benefit       21.0, efficiency      0.266
    Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
  * Inline function call at BaseBuilder.mnd:280:5                size    +8, benefit        3.5, efficiency      0.438 (+5 instructions)
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 305):
    Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246
  * Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 size   +35, benefit        9.0, efficiency      0.257 (+30 instructions)
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:200:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:244:5                size   +18, benefit        3.0, efficiency      0.167
    Inline function call at BaseBuilder.mnd:286:5                size   +18, benefit        3.0, efficiency      0.167

Pass 1: speed optimization selection (cost limit 275):
  * Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 size   +71, benefit       17.5, efficiency      0.246 (+41 instructions)
    Inline function call at BaseBuilder.mnd:145:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:147:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:148:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:158:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:159:25               size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:161:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:162:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:163:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:227:9                size    +8, benefit        1.8, efficiency      0.219
    Inline function call at BaseBuilder.mnd:228:9                size    +8, benefit        1.8, efficiency      0.219

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-54 instructions):
 
    38 setaddr :buildBlockFromCfgLocal*retaddr *label51 (h:*label51)
    39 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label51) (h:*label51)
    40 label *label51
-    * set *tmp154 :buildBlockFromCfgLocal*retval
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label52 (h:*label52)
    43 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label52) (h:*label52)
    44 label *label52
-    * set *tmp155 :buildBlockFromCfgLocal*retval
    45 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    46 setaddr :buildBlockFromCfgLocal*retaddr *label53 (h:*label53)
    47 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label53) (h:*label53)
    48 label *label53
-    * set *tmp156 :buildBlockFromCfgLocal*retval
    49 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    50 setaddr :buildBlockFromCfgLocal*retaddr *label54 (h:*label54)
    51 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label54) (h:*label54)
    52 label *label54
-    * set *tmp157 :buildBlockFromCfgLocal*retval
    53 write 400 processor5 ".powerTarget"
    54 set .sandContainer .core
    55 jump *label55 equal .scrap false
 
    64 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
    65 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
    66 label *label58
-    * set *tmp160 :buildBlockFromCfgLocal*retval
    67 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
    68 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
    70 label *label59
    71 set *tmp161 :buildBlockFromCfgLocal*retval
-    * set *tmp158 *tmp161
    72 jump *label56 always
    73 label *label55
-    * set *tmp158 null
    74 label *label56
    75 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    76 setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
    77 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
    78 label *label60
-    * set *tmp162 :buildBlockFromCfgLocal*retval
    79 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
    80 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
    81 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
    82 label *label61
-    * set *tmp163 :buildBlockFromCfgLocal*retval
    83 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    84 write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
    85 write false processor5 ":meetTargetCfg:forBuild"
 
   115 setaddr :error*retaddr *label67 (h:*label67)
   116 call *label37 *invalid :error*retval (m:*label67) (h:*label67)
   117 label *label67
-    * set *tmp181 null
   118 jump *label66 always
   119 label *label65
-    * set *tmp181 null
   120 label *label66
   121 write @pneumatic-drill processor2 ".nextBlock"
   122 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
 
   140 setaddr :buildBlockFromCfgLocal*retaddr *label71 (h:*label71)
   141 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label71) (h:*label71)
   142 label *label71
-    * set *tmp187 :buildBlockFromCfgLocal*retval
   143 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   144 setaddr :buildBlockFromCfgLocal*retaddr *label72 (h:*label72)
   145 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
 
   151 setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
   152 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label73) (h:*label73)
   153 label *label73
-    * set *tmp189 :buildBlockFromCfgLocal*retval
   154 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   155 setaddr :buildBlockFromCfgLocal*retaddr *label74 (h:*label74)
   156 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label74) (h:*label74)
   157 label *label74
-    * set *tmp190 :buildBlockFromCfgLocal*retval
   158 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   159 setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
   160 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
   161 label *label75
   162 set *tmp191 :buildBlockFromCfgLocal*retval
-    * set *tmp186 *tmp191
   163 jump *label70 always
   164 label *label69
-    * set *tmp186 null
   165 label *label70
   166 write .sandContainer processor7 ".sandContainer"
   167 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   168 setaddr :buildBlockFromCfgLocal*retaddr *label76 (h:*label76)
   169 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label76) (h:*label76)
   170 label *label76
-    * set *tmp192 :buildBlockFromCfgLocal*retval
   171 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   172 setaddr :buildBlockFromCfgLocal*retaddr *label77 (h:*label77)
   173 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label77) (h:*label77)
   174 label *label77
-    * set *tmp193 :buildBlockFromCfgLocal*retval
   175 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   176 setaddr :buildBlockFromCfgLocal*retaddr *label78 (h:*label78)
   177 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)
   178 label *label78
-    * set *tmp194 :buildBlockFromCfgLocal*retval
   179 write 80 processor5 ".graphiteSurplus"
   180 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   181 set :buildBlockFromCfgLocal.1:config processor10
 
   188 read *tmp198 processor5 ":buildBlockFromCfg*finished"
   189 jump *label80 equal *tmp198 false
   190 read *tmp199 processor5 ":buildBlockFromCfg*retval"
-    * set *tmp195 *tmp199
   191 jump *label79 always
-    * set *tmp195 null
   192 label *label79
   193 write processor1 AÕFFJS-micro-processor9 ".timer"
   194 write processor2 AÕFFJS-micro-processor9 ".display"
 
   245 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   246 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
   247 label *label94
-    * set *tmp203 :buildBlockFromCfgLocal*retval
   248 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   249 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   250 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
   251 label *label95
-    * set *tmp204 :buildBlockFromCfgLocal*retval
   252 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   253 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   254 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
   255 label *label96
-    * set *tmp205 :buildBlockFromCfgLocal*retval
   256 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   257 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   258 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   259 label *label97
-    * set *tmp206 :buildBlockFromCfgLocal*retval
   260 set :setFlareTarget:target 1
   261 write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
   262 label *label98
 
   282 op lessThan *tmp209 *tmp208 300
   283 jump *label105 equal *tmp209 false
   284 jump *label103 always
-    * set *tmp210 null
   285 jump *label106 always
   286 label *label105
-    * set *tmp210 null
   287 label *label106
   288 label *label102
   289 read *tmp82 AÕFFJS-micro-processor9 ".monos"
 
   295 setaddr :buildBlockFromCfgLocal*retaddr *label107 (h:*label107)
   296 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label107) (h:*label107)
   297 label *label107
-    * set *tmp212 :buildBlockFromCfgLocal*retval
   298 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   299 setaddr :buildBlockFromCfgLocal*retaddr *label108 (h:*label108)
   300 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label108) (h:*label108)
   301 label *label108
-    * set *tmp213 :buildBlockFromCfgLocal*retval
   302 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   303 setaddr :buildBlockFromCfgLocal*retaddr *label109 (h:*label109)
   304 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label109) (h:*label109)
   305 label *label109
-    * set *tmp214 :buildBlockFromCfgLocal*retval
   306 set :buildBlockFromCfgLocal:cfg "AÜAOJ[-liquid-container17"
   307 setaddr :buildBlockFromCfgLocal*retaddr *label110 (h:*label110)
   308 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label110) (h:*label110)
   309 label *label110
-    * set *tmp215 :buildBlockFromCfgLocal*retval
   310 set :buildBlockFromCfgLocal:cfg "A¡ASJ\-water-extractor18"
   311 setaddr :buildBlockFromCfgLocal*retaddr *label111 (h:*label111)
   312 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label111) (h:*label111)
   313 label *label111
-    * set *tmp216 :buildBlockFromCfgLocal*retval
   314 set :buildBlockFromCfgLocal:cfg "AAKJ]-steam-generator19"
   315 setaddr :buildBlockFromCfgLocal*retaddr *label112 (h:*label112)
   316 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label112) (h:*label112)
   317 label *label112
-    * set *tmp217 :buildBlockFromCfgLocal*retval
   318 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   319 setaddr :buildBlockFromCfgLocal*retaddr *label113 (h:*label113)
   320 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label113) (h:*label113)
   321 label *label113
-    * set *tmp218 :buildBlockFromCfgLocal*retval
   322 write 200 processor5 ".graphiteSurplus"
   323 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   324 setaddr :buildBlockFromCfgLocal*retaddr *label114 (h:*label114)
   325 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label114) (h:*label114)
   326 label *label114
-    * set *tmp219 :buildBlockFromCfgLocal*retval
   327 jump *label115 equal .scrap false
   328 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   329 setaddr :buildBlockFromCfgLocal*retaddr *label117 (h:*label117)
   330 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label117) (h:*label117)
   331 label *label117
-    * set *tmp221 :buildBlockFromCfgLocal*retval
   332 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   333 setaddr :buildBlockFromCfgLocal*retaddr *label118 (h:*label118)
   334 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label118) (h:*label118)
   335 label *label118
-    * set *tmp222 :buildBlockFromCfgLocal*retval
   336 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   337 write false processor6 ":setScrapContainer*finished"
   338 write 1 processor6 "@counter"
 
   340 wait 1e-15
   341 read *tmp224 processor6 ":setScrapContainer*finished"
   342 jump *label119 equal *tmp224 false
-    * set *tmp220 null
   343 jump *label116 always
   344 label *label115
-    * set *tmp220 null
   345 label *label116
   346 set :buildBlockFromCfgLocal:cfg "A©HFJ`-unloader22"
   347 setaddr :buildBlockFromCfgLocal*retaddr *label120 (h:*label120)
   348 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label120) (h:*label120)
   349 label *label120
-    * set *tmp225 :buildBlockFromCfgLocal*retval
   350 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   351 setaddr :buildBlockFromCfgLocal*retaddr *label121 (h:*label121)
   352 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label121) (h:*label121)
   353 label *label121
-    * set *tmp226 :buildBlockFromCfgLocal*retval
   354 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   355 setaddr :buildBlockFromCfgLocal*retaddr *label122 (h:*label122)
   356 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label122) (h:*label122)
   357 label *label122
-    * set *tmp227 :buildBlockFromCfgLocal*retval
   358 write 1000 processor5 ".siliconSurplus"
   359 write 20 processor5 ".siliconMonoSurplus"
   360 write 100 processor5 ".metaglassSurplus"
 
   454 setaddr :error*retaddr *label143 (h:*label143)
   455 call *label37 *invalid :error*retval (m:*label143) (h:*label143)
   456 label *label143
-    * set *tmp256 null
   457 jump *label142 always
   458 label *label141
-    * set *tmp256 null
   459 label *label142
   460 write @laser-drill processor5 ":buildBlockAt:block"
   461 read *tmp54 processor3 ".drillX"
 
   481 setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
   482 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
   483 label *label145
-    * set *tmp265 :buildRemoteBlockLocal*retval
   484 set :buildRemoteBlockLocal:cfg "A¡ASJ\-water-extractor18"
   485 read *tmp60 processor3 ".water2X"
   486 set :buildRemoteBlockLocal:x *tmp60
 
   489 setaddr :buildRemoteBlockLocal*retaddr *label146 (h:*label146)
   490 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label146) (h:*label146)
   491 label *label146
-    * set *tmp266 :buildRemoteBlockLocal*retval
   492 set :buildRemoteBlockLocal:cfg "AAKJ]-steam-generator19"
   493 read *tmp62 processor3 ".generatorX"
   494 set :buildRemoteBlockLocal:x *tmp62
 
   507 setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
   508 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
   509 label *label148
-    * set *tmp268 :buildRemoteBlockLocal*retval
   510 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   511 read *tmp66 processor3 ".node2X"
   512 set :buildRemoteBlockLocal:x *tmp66
 
   515 setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
   516 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label149) (h:*label149)
   517 label *label149
-    * set *tmp269 :buildRemoteBlockLocal*retval
   518 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   519 read *tmp68 processor3 ".panelX"
   520 set :buildRemoteBlockLocal:x *tmp68
 
   523 setaddr :buildRemoteBlockLocal*retaddr *label150 (h:*label150)
   524 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label150) (h:*label150)
   525 label *label150
-    * set *tmp270 :buildRemoteBlockLocal*retval
   526 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   527 read *tmp70 processor3 ".batteryX"
   528 set :buildRemoteBlockLocal:x *tmp70
 
   546 op equal *tmp273 .thoriumContainer null
   547 jump *label153 equal *tmp273 false
   548 set .thoriumContainer .thoriumDrill
-    * set *tmp274 .thoriumContainer
   549 jump *label154 always
   550 label *label153
-    * set *tmp274 null
   551 label *label154
   552 write .thoriumDrill processor2 ".thoriumDrill"
   553 write .thoriumContainer processor2 ".thoriumContainer"
 
   589 setaddr :buildBlockFromCfgLocal*retaddr *label161 (h:*label161)
   590 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label161) (h:*label161)
   591 label *label161
-    * set *tmp282 :buildBlockFromCfgLocal*retval
   592 write 10 processor5 ".metaglassSurplus"
   593 set :setPolyTarget.1:target 0
   594 write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
 
   769 sensor *tmp323 @unit @mining
   770 jump *label199 equal *tmp323 false
   771 ucontrol stop
-    * set *tmp324 null
   772 jump *label200 always
   773 label *label199
-    * set *tmp324 null
   774 label *label200
   775 ubind :lineUpUnits:unit
   776 label *label197

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-3 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
    70 label *label59
-    * set *tmp161 :buildBlockFromCfgLocal*retval
    71 jump *label56 always
    72 label *label55
    73 label *label56
 
   158 setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
   159 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
   160 label *label75
-    * set *tmp191 :buildBlockFromCfgLocal*retval
   161 jump *label70 always
   162 label *label69
   163 label *label70
 
   185 wait 1e-15
   186 read *tmp198 processor5 ":buildBlockFromCfg*finished"
   187 jump *label80 equal *tmp198 false
-    * read *tmp199 processor5 ":buildBlockFromCfg*retval"
   188 jump *label79 always
   189 label *label79
   190 write processor1 AÕFFJS-micro-processor9 ".timer"

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-44 instructions):
 
    20 set .thoriumGenerator null
    21 label *label48
    22 ubind @poly
-    * set *tmp145 @unit
-    * set .builder *tmp145
-    * ulocate building core false @copper .coreX .coreY *tmp147 *tmp146
-    * set .core *tmp146
+   23 set .builder @unit
+   24 ulocate building core false @copper .coreX .coreY *tmp147 .core
    25 label *label49
    26 op equal *tmp148 .core null
    27 jump *label48 notEqual *tmp148 false
    28 label *label50
    29 ulocate ore core true @sand *tmp150 *tmp151 *tmp149 *tmp152
-    * op equal *tmp153 *tmp149 false
-    * set .scrap *tmp153
+   30 op equal .scrap *tmp149 false
    31 write .scrap processor2 ".scrap"
    32 write .scrap processor5 ".scrap"
    33 write .scrap processor7 ".scrap"
 
    54 setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
    55 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
    56 label *label57
-    * set *tmp159 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp159
+   57 set .sandContainer :buildBlockFromCfgLocal*retval
    58 write .sandContainer processor5 ".sandContainer"
    59 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    60 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
 
    98 wait 1e-15
    99 read *tmp178 processor3 ":findDrillLocation*finished"
   100 jump *label64 equal *tmp178 false
-    * read *tmp175 processor3 ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp175
-    * read *tmp176 processor3 ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp176
-    * read *tmp179 processor3 ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp179
+  101 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
+  102 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
+  103 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   104 op equal *tmp180 :buildFirstTitaniumDrill:result false
   105 jump *label65 equal *tmp180 false
   106 set :error:error "Cannot locate spot for titanium drill"
 
   119 wait 1e-15
   120 read *tmp184 processor5 ":buildFirstTitaniumDrillAt*finished"
   121 jump *label68 equal *tmp184 false
-    * read *tmp185 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp164 *tmp185
+  122 read *tmp164 processor5 ":buildFirstTitaniumDrillAt*retval"
   123 jump *label62 always
   124 set *tmp164 null
   125 label *label62
 
   135 setaddr :buildBlockFromCfgLocal*retaddr *label72 (h:*label72)
   136 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
   137 label *label72
-    * set *tmp188 :buildBlockFromCfgLocal*retval
-    * set .sandContainer *tmp188
+  138 set .sandContainer :buildBlockFromCfgLocal*retval
   139 write .sandContainer processor5 ".sandContainer"
   140 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   141 setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
 
   386 label *label133
   387 write @ore-titanium processor2 ".nextBlock"
   388 ubind @flare
-    * read *tmp52 processor3 ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp52
+  389 read :blocksBuildTitaniumDrills:current processor3 ".locations"
   390 write .coreX processor3 ":findDrillLocation:x"
   391 write .coreY processor3 ":findDrillLocation:y"
   392 write @unit processor3 ":findDrillLocation:unit"
 
   433 wait 1e-15
   434 read *tmp253 processor3 ":layoutThoriumDrill*finished"
   435 jump *label140 equal *tmp253 false
-    * read *tmp254 processor3 ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp254
+  436 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   437 op equal *tmp255 :buildThoriumDrill:result false
   438 jump *label141 equal *tmp255 false
   439 set :error:error "Cannot locate spot for thorium drill"
 
   457 wait 1e-15
   458 read *tmp263 processor5 ":buildBlockAt*finished"
   459 jump *label144 equal *tmp263 false
-    * read *tmp264 processor5 ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp264
+  460 read .thoriumDrill processor5 ":buildBlockAt*retval"
   461 set :buildRemoteBlockLocal:cfg "A¡ASJ\-water-extractor18"
-    * read *tmp56 processor3 ".water1X"
-    * set :buildRemoteBlockLocal:x *tmp56
-    * read *tmp57 processor3 ".water1Y"
-    * set :buildRemoteBlockLocal:y *tmp57
+  462 read :buildRemoteBlockLocal:x processor3 ".water1X"
+  463 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   464 setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
   465 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
   466 label *label145
   467 set :buildRemoteBlockLocal:cfg "A¡ASJ\-water-extractor18"
-    * read *tmp60 processor3 ".water2X"
-    * set :buildRemoteBlockLocal:x *tmp60
-    * read *tmp61 processor3 ".water2Y"
-    * set :buildRemoteBlockLocal:y *tmp61
+  468 read :buildRemoteBlockLocal:x processor3 ".water2X"
+  469 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   470 setaddr :buildRemoteBlockLocal*retaddr *label146 (h:*label146)
   471 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label146) (h:*label146)
   472 label *label146
   473 set :buildRemoteBlockLocal:cfg "AAKJ]-steam-generator19"
-    * read *tmp62 processor3 ".generatorX"
-    * set :buildRemoteBlockLocal:x *tmp62
-    * read *tmp63 processor3 ".generatorY"
-    * set :buildRemoteBlockLocal:y *tmp63
+  474 read :buildRemoteBlockLocal:x processor3 ".generatorX"
+  475 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   476 setaddr :buildRemoteBlockLocal*retaddr *label147 (h:*label147)
   477 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label147) (h:*label147)
   478 label *label147
-    * set *tmp267 :buildRemoteBlockLocal*retval
-    * set .thoriumGenerator *tmp267
+  479 set .thoriumGenerator :buildRemoteBlockLocal*retval
   480 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp64 processor3 ".node1X"
-    * set :buildRemoteBlockLocal:x *tmp64
-    * read *tmp65 processor3 ".node1Y"
-    * set :buildRemoteBlockLocal:y *tmp65
+  481 read :buildRemoteBlockLocal:x processor3 ".node1X"
+  482 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   483 setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
   484 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
   485 label *label148
   486 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
-    * read *tmp66 processor3 ".node2X"
-    * set :buildRemoteBlockLocal:x *tmp66
-    * read *tmp67 processor3 ".node2Y"
-    * set :buildRemoteBlockLocal:y *tmp67
+  487 read :buildRemoteBlockLocal:x processor3 ".node2X"
+  488 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   489 setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
   490 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label149) (h:*label149)
   491 label *label149
   492 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
-    * read *tmp68 processor3 ".panelX"
-    * set :buildRemoteBlockLocal:x *tmp68
-    * read *tmp69 processor3 ".panelY"
-    * set :buildRemoteBlockLocal:y *tmp69
+  493 read :buildRemoteBlockLocal:x processor3 ".panelX"
+  494 read :buildRemoteBlockLocal:y processor3 ".panelY"
   495 setaddr :buildRemoteBlockLocal*retaddr *label150 (h:*label150)
   496 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label150) (h:*label150)
   497 label *label150
   498 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
-    * read *tmp70 processor3 ".batteryX"
-    * set :buildRemoteBlockLocal:x *tmp70
-    * read *tmp71 processor3 ".batteryY"
-    * set :buildRemoteBlockLocal:y *tmp71
+  499 read :buildRemoteBlockLocal:x processor3 ".batteryX"
+  500 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   501 setaddr :buildRemoteBlockLocal*retaddr *label151 (h:*label151)
   502 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
   503 label *label151
-    * set *tmp271 :buildRemoteBlockLocal*retval
-    * set .thoriumBattery *tmp271
+  504 set .thoriumBattery :buildRemoteBlockLocal*retval
   505 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
-    * read *tmp58 processor3 ".containerX"
-    * set :buildRemoteBlockLocal:x *tmp58
-    * read *tmp59 processor3 ".containerY"
-    * set :buildRemoteBlockLocal:y *tmp59
+  506 read :buildRemoteBlockLocal:x processor3 ".containerX"
+  507 read :buildRemoteBlockLocal:y processor3 ".containerY"
   508 setaddr :buildRemoteBlockLocal*retaddr *label152 (h:*label152)
   509 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
   510 label *label152
-    * set *tmp272 :buildRemoteBlockLocal*retval
-    * set .thoriumContainer *tmp272
+  511 set .thoriumContainer :buildRemoteBlockLocal*retval
   512 op equal *tmp273 .thoriumContainer null
   513 jump *label153 equal *tmp273 false
   514 set .thoriumContainer .thoriumDrill
 
   542 label *label157
   543 jump *label156 always
   544 label *label158
-    * op add *tmp279 4 .scrap
-    * set :setMonoTarget.2:target *tmp279
+  545 op add :setMonoTarget.2:target 4 .scrap
   546 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
   547 label *label160
   548 op mul *tmp280 700 .scrap
 
   568 call *label40 *invalid :buildUnits*retval (m:*label165) (h:*label165)
   569 label *label165
   570 read *tmp83 AÕFFJS-micro-processor9 ".polys"
-    * op sub *tmp283 *tmp83 1
-    * set :tmp *tmp283
+  571 op sub :tmp *tmp83 1
   572 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
   573 write :tmp AÕFFJS-micro-processor9 ".polys"
   574 write :tmp processor2 ".polys"
-    * sensor *tmp284 AÁNBJc-multiplicative-reconstructor25 @x
-    * set :x *tmp284
-    * sensor *tmp285 AÁNBJc-multiplicative-reconstructor25 @y
-    * set :y *tmp285
+  575 sensor :x AÁNBJc-multiplicative-reconstructor25 @x
+  576 sensor :y AÁNBJc-multiplicative-reconstructor25 @y
   577 label *label166
   578 ucontrol move :x :y
   579 ucontrol payEnter
 
   608 label *label173
   609 label *label174
   610 jump *label176 equal true false
-    * op add *tmp294 .coreY 6
-    * set :lineUpUnits:y *tmp294
+  611 op add :lineUpUnits:y .coreY 6
   612 set :lineUpUnits:unit @mega
   613 setaddr :lineUpUnits*retaddr *label177 (h:*label177)
   614 call *label42 *invalid :lineUpUnits*retval (m:*label177) (h:*label177)
   615 label *label177
-    * op add *tmp295 .coreY 2
-    * set :lineUpUnits:y *tmp295
+  616 op add :lineUpUnits:y .coreY 2
   617 set :lineUpUnits:unit @poly
   618 setaddr :lineUpUnits*retaddr *label178 (h:*label178)
   619 call *label42 *invalid :lineUpUnits*retval (m:*label178) (h:*label178)
   620 label *label178
-    * op sub *tmp296 .coreY 2
-    * set :lineUpUnits:y *tmp296
+  621 op sub :lineUpUnits:y .coreY 2
   622 set :lineUpUnits:unit @mono
   623 setaddr :lineUpUnits*retaddr *label179 (h:*label179)
   624 call *label42 *invalid :lineUpUnits*retval (m:*label179) (h:*label179)
   625 label *label179
-    * op sub *tmp297 .coreY 6
-    * set :lineUpUnits:y *tmp297
+  626 op sub :lineUpUnits:y .coreY 6
   627 set :lineUpUnits:unit @flare
   628 setaddr :lineUpUnits*retaddr *label180 (h:*label180)
   629 call *label42 *invalid :lineUpUnits*retval (m:*label180) (h:*label180)
 
   649 wait 1e-15
   650 read *tmp301 processor5 ":buildRemoteBlock*finished"
   651 jump *label183 equal *tmp301 false
-    * read *tmp302 processor5 ":buildRemoteBlock*retval"
-    * set :buildRemoteBlockLocal*retval *tmp302
+  652 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   653 label *label182
   654 return :buildRemoteBlockLocal*retaddr
   655 end
 
   662 wait 1e-15
   663 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   664 jump *label185 equal *tmp305 false
-    * read *tmp306 processor5 ":buildBlockFromCfg*retval"
-    * set :buildBlockFromCfgLocal*retval *tmp306
+  665 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   666 jump *label184 always
   667 set :buildBlockFromCfgLocal*retval null
   668 label *label184
 
   695 label *label41
   696 label *label189
   697 ubind :flagUnits:unit
-    * set *tmp318 @unit
-    * set :flagUnits:firstUnit *tmp318
+  698 set :flagUnits:firstUnit @unit
   699 label *label190
   700 op equal *tmp319 :flagUnits:firstUnit null
   701 jump *label189 notEqual *tmp319 false
   702 label *label191
-    * op add *tmp320 .coreX 8
-    * set :flagUnits:x *tmp320
+  703 op add :flagUnits:x .coreX 8
   704 label *label192
   705 ucontrol flag :flagUnits:x
   706 op add :flagUnits:x :flagUnits:x 4
 
   716 ubind :lineUpUnits:unit
   717 set :lineUpUnits:firstUnit @unit
   718 label *label196
-    * sensor *tmp322 @unit @flag
-    * set :lineUpUnits:x *tmp322
+  719 sensor :lineUpUnits:x @unit @flag
   720 ucontrol itemDrop @air 1000
   721 ucontrol move :lineUpUnits:x :lineUpUnits:y
   722 sensor *tmp323 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   607 call *label41 *invalid :flagUnits*retval (m:*label173) (h:*label173)
   608 label *label173
   609 label *label174
-    * jump *label176 equal true false
   610 op add :lineUpUnits:y .coreY 6
   611 set :lineUpUnits:unit @mega
   612 setaddr :lineUpUnits*retaddr *label177 (h:*label177)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-13 instructions):
 
    23 set .builder @unit
    24 ulocate building core false @copper .coreX .coreY *tmp147 .core
    25 label *label49
-    * op equal *tmp148 .core null
-    * jump *label48 notEqual *tmp148 false
+   26 jump *label48 equal .core null
    27 label *label50
    28 ulocate ore core true @sand *tmp150 *tmp151 *tmp149 *tmp152
    29 op equal .scrap *tmp149 false
 
   100 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
   101 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   102 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
-    * op equal *tmp180 :buildFirstTitaniumDrill:result false
-    * jump *label65 equal *tmp180 false
+  103 jump *label65 notEqual :buildFirstTitaniumDrill:result false
   104 set :error:error "Cannot locate spot for titanium drill"
   105 setaddr :error*retaddr *label67 (h:*label67)
   106 call *label37 *invalid :error*retval (m:*label67) (h:*label67)
 
   265 read *tmp207 processor5 ":supplyBase*finished"
   266 jump *label104 equal *tmp207 false
   267 sensor *tmp208 AJTJK-battery1 @totalPower
-    * op lessThan *tmp209 *tmp208 300
-    * jump *label105 equal *tmp209 false
+  268 jump *label105 greaterThanEq *tmp208 300
   269 jump *label103 always
   270 jump *label106 always
   271 label *label105
   272 label *label106
   273 label *label102
   274 read *tmp82 AÕFFJS-micro-processor9 ".monos"
-    * op lessThan *tmp211 *tmp82 3
-    * jump *label101 notEqual *tmp211 false
+  275 jump *label101 lessThan *tmp82 3
   276 label *label103
   277 write 65 processor5 ".siliconSurplus"
   278 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
 
   353 label *label125
   354 label *label126
   355 read *tmp83 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp228 *tmp83 2
-    * jump *label128 equal *tmp228 false
+  356 jump *label128 greaterThanEq *tmp83 2
   357 write false processor5 ":supplyBase*finished"
   358 write 8 processor5 "@counter"
   359 label *label129
 
   368 label *label130
   369 label *label131
   370 read *tmp81 AÕFFJS-micro-processor9 ".flares"
-    * op lessThan *tmp230 *tmp81 2
-    * jump *label133 equal *tmp230 false
+  371 jump *label133 greaterThanEq *tmp81 2
   372 write false processor5 ":supplyBase*finished"
   373 write 8 processor5 "@counter"
   374 label *label134
 
   428 read *tmp253 processor3 ":layoutThoriumDrill*finished"
   429 jump *label140 equal *tmp253 false
   430 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
-    * op equal *tmp255 :buildThoriumDrill:result false
-    * jump *label141 equal *tmp255 false
+  431 jump *label141 notEqual :buildThoriumDrill:result false
   432 set :error:error "Cannot locate spot for thorium drill"
   433 setaddr :error*retaddr *label143 (h:*label143)
   434 call *label37 *invalid :error*retval (m:*label143) (h:*label143)
 
   502 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
   503 label *label152
   504 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * op equal *tmp273 .thoriumContainer null
-    * jump *label153 equal *tmp273 false
+  505 jump *label153 notEqual .thoriumContainer null
   506 set .thoriumContainer .thoriumDrill
   507 jump *label154 always
   508 label *label153
 
   523 write null processor2 ".nextBlock"
   524 label *label156
   525 read *tmp83 AÕFFJS-micro-processor9 ".polys"
-    * op lessThan *tmp277 *tmp83 3
-    * jump *label158 equal *tmp277 false
+  526 jump *label158 greaterThanEq *tmp83 3
   527 write false processor5 ":supplyBase*finished"
   528 write 8 processor5 "@counter"
   529 label *label159
 
   570 ucontrol payEnter
   571 label *label167
   572 read *tmp84 AÕFFJS-micro-processor9 ".megas"
-    * op equal *tmp286 *tmp84 false
-    * jump *label166 notEqual *tmp286 false
+  573 jump *label166 equal *tmp84 false
   574 label *label168
   575 write true AÕFFJS-micro-processor9 ".finished"
   576 control enabled processor1 false
 
   686 ubind :flagUnits:unit
   687 set :flagUnits:firstUnit @unit
   688 label *label190
-    * op equal *tmp319 :flagUnits:firstUnit null
-    * jump *label189 notEqual *tmp319 false
+  689 jump *label189 equal :flagUnits:firstUnit null
   690 label *label191
   691 op add :flagUnits:x .coreX 8
   692 label *label192
 
   694 op add :flagUnits:x :flagUnits:x 4
   695 ubind :flagUnits:unit
   696 label *label193
-    * op notEqual *tmp321 @unit :flagUnits:firstUnit
-    * jump *label192 notEqual *tmp321 false
+  697 jump *label192 notEqual @unit :flagUnits:firstUnit
   698 label *label194
   699 label *label188
   700 return :flagUnits*retaddr
 
   714 label *label200
   715 ubind :lineUpUnits:unit
   716 label *label197
-    * op notEqual *tmp325 @unit :lineUpUnits:firstUnit
-    * jump *label196 notEqual *tmp325 false
+  717 jump *label196 notEqual @unit :lineUpUnits:firstUnit
   718 label *label198
   719 label *label195
   720 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
    63 setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
    64 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
    65 label *label59
-    * jump *label56 always
    66 label *label55
    67 label *label56
    68 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
 
   104 setaddr :error*retaddr *label67 (h:*label67)
   105 call *label37 *invalid :error*retval (m:*label67) (h:*label67)
   106 label *label67
-    * jump *label66 always
   107 label *label65
   108 label *label66
   109 write @pneumatic-drill processor2 ".nextBlock"
 
   145 setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
   146 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
   147 label *label75
-    * jump *label70 always
   148 label *label69
   149 label *label70
   150 write .sandContainer processor7 ".sandContainer"
 
   171 wait 1e-15
   172 read *tmp198 processor5 ":buildBlockFromCfg*finished"
   173 jump *label80 equal *tmp198 false
-    * jump *label79 always
   174 label *label79
   175 write processor1 AÕFFJS-micro-processor9 ".timer"
   176 write processor2 AÕFFJS-micro-processor9 ".display"
 
   263 sensor *tmp208 AJTJK-battery1 @totalPower
   264 jump *label105 greaterThanEq *tmp208 300
   265 jump *label103 always
-    * jump *label106 always
   266 label *label105
   267 label *label106
   268 label *label102
 
   319 wait 1e-15
   320 read *tmp224 processor6 ":setScrapContainer*finished"
   321 jump *label119 equal *tmp224 false
-    * jump *label116 always
   322 label *label115
   323 label *label116
   324 set :buildBlockFromCfgLocal:cfg "A©HFJ`-unloader22"
 
   427 setaddr :error*retaddr *label143 (h:*label143)
   428 call *label37 *invalid :error*retval (m:*label143) (h:*label143)
   429 label *label143
-    * jump *label142 always
   430 label *label141
   431 label *label142
   432 write @laser-drill processor5 ":buildBlockAt:block"
 
   497 set .thoriumContainer :buildRemoteBlockLocal*retval
   498 jump *label153 notEqual .thoriumContainer null
   499 set .thoriumContainer .thoriumDrill
-    * jump *label154 always
   500 label *label153
   501 label *label154
   502 write .thoriumDrill processor2 ".thoriumDrill"
 
   701 sensor *tmp323 @unit @mining
   702 jump *label199 equal *tmp323 false
   703 ucontrol stop
-    * jump *label200 always
   704 label *label199
   705 label *label200
   706 ubind :lineUpUnits:unit

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
   221 multijump *tmp200 0 0 (m:marker0)
   222 multilabel *label93 (m:marker0)
   223 label *label83
-    * read *tmp202 @this "A©RPJg-unloader29"
+  224 set *tmp202 A©RPJg-unloader29
   225 write *tmp202 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   226 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   227 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    13 read *tmp144 processor5 "*signature"
    14 jump *label47 notEqual *tmp144 "b1abbf1945b2011d:v1"
    15 set .ERROR ""
-    * set .titaniumDrill null
-    * set .thoriumDrill null
-    * set .thoriumBattery null
-    * set .thoriumContainer null
-    * set .thoriumGenerator null
    16 label *label48
    17 ubind @poly
    18 set .builder @unit
 
    49 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
    50 label *label57
    51 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+   52 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    53 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    54 setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
    55 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
 
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
    70 label *label61
    71 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
-    * write :buildFirstTitaniumDrill:cfg processor5 ":meetTargetCfg:cfg"
+   72 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    73 write false processor5 ":meetTargetCfg:forBuild"
    74 write false processor5 ":meetTargetCfg*finished"
    75 write 7 processor5 "@counter"
 
   112 jump *label68 equal *tmp184 false
   113 read *tmp164 processor5 ":buildFirstTitaniumDrillAt*retval"
   114 jump *label62 always
-    * set *tmp164 null
   115 label *label62
   116 set .titaniumDrill *tmp164
-    * write .titaniumDrill processor2 ".titaniumDrill"
-    * write .titaniumDrill processor5 ".titaniumDrill"
+  117 write *tmp164 processor2 ".titaniumDrill"
+  118 write *tmp164 processor5 ".titaniumDrill"
   119 jump *label69 equal .scrap false
   120 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   121 setaddr :buildBlockFromCfgLocal*retaddr *label71 (h:*label71)
 
   126 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
   127 label *label72
   128 set .sandContainer :buildBlockFromCfgLocal*retval
-    * write .sandContainer processor5 ".sandContainer"
+  129 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   130 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   131 setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
   132 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label73) (h:*label73)
 
   157 write 80 processor5 ".graphiteSurplus"
   158 set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
   159 set :buildBlockFromCfgLocal.1:config processor10
-    * write :buildBlockFromCfgLocal.1:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write :buildBlockFromCfgLocal.1:config processor5 ":buildBlockFromCfg:config"
+  160 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
+  161 write processor10 processor5 ":buildBlockFromCfg:config"
   162 write false processor5 ":buildBlockFromCfg*finished"
   163 write 2 processor5 "@counter"
   164 label *label80
 
   234 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   235 label *label97
   236 set :setFlareTarget:target 1
-    * write :setFlareTarget:target AÕFFJS-micro-processor9 ".flareTarget"
+  237 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   238 label *label98
   239 set :setMonoTarget:target 5
-    * write :setMonoTarget:target AÕFFJS-micro-processor9 ".monoTarget"
+  240 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   241 label *label99
   242 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   243 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
 
   331 write 20 processor5 ".siliconMonoSurplus"
   332 write 100 processor5 ".metaglassSurplus"
   333 set :setMonoTarget.1:target 4
-    * write :setMonoTarget.1:target AÕFFJS-micro-processor9 ".monoTarget"
+  334 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   335 label *label123
   336 set :setPolyTarget:target 3
-    * write :setPolyTarget:target AÕFFJS-micro-processor9 ".polyTarget"
+  337 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   338 label *label124
   339 setaddr :buildUnits*retaddr *label125 (h:*label125)
   340 call *label40 *invalid :buildUnits*retval (m:*label125) (h:*label125)
 
   352 jump *label126 always
   353 label *label128
   354 set :setFlareTarget.1:target 2
-    * write :setFlareTarget.1:target AÕFFJS-micro-processor9 ".flareTarget"
+  355 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   356 label *label130
   357 label *label131
   358 read *tmp81 AÕFFJS-micro-processor9 ".flares"
 
   463 setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
   464 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
   465 label *label148
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   466 read :buildRemoteBlockLocal:x processor3 ".node2X"
   467 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   468 setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
 
   488 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
   489 label *label152
   490 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label153 notEqual .thoriumContainer null
+  491 jump *label153 notEqual :buildRemoteBlockLocal*retval null
   492 set .thoriumContainer .thoriumDrill
   493 label *label153
   494 label *label154
 
   532 label *label161
   533 write 10 processor5 ".metaglassSurplus"
   534 set :setPolyTarget.1:target 0
-    * write :setPolyTarget.1:target AÕFFJS-micro-processor9 ".polyTarget"
+  535 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   536 label *label162
   537 set :setFlareTarget.2:target 0
-    * write :setFlareTarget.2:target AÕFFJS-micro-processor9 ".flareTarget"
+  538 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   539 label *label163
   540 set :setMegaTarget:target 1
-    * write :setMegaTarget:target AÕFFJS-micro-processor9 ".megaTarget"
+  541 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   542 label *label164
   543 setaddr :buildUnits*retaddr *label165 (h:*label165)
   544 call *label40 *invalid :buildUnits*retval (m:*label165) (h:*label165)
 
   638 jump *label185 equal *tmp305 false
   639 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   640 jump *label184 always
-    * set :buildBlockFromCfgLocal*retval null
   641 label *label184
   642 return :buildBlockFromCfgLocal*retaddr
   643 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
    68 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
    69 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
    70 label *label61
-    * set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    71 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
    72 write false processor5 ":meetTargetCfg:forBuild"
    73 write false processor5 ":meetTargetCfg*finished"
 
   112 read *tmp164 processor5 ":buildFirstTitaniumDrillAt*retval"
   113 jump *label62 always
   114 label *label62
-    * set .titaniumDrill *tmp164
   115 write *tmp164 processor2 ".titaniumDrill"
   116 write *tmp164 processor5 ".titaniumDrill"
   117 jump *label69 equal .scrap false
 
   153 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)
   154 label *label78
   155 write 80 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal.1:cfg "AÕFFJS-micro-processor9"
-    * set :buildBlockFromCfgLocal.1:config processor10
   156 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   157 write processor10 processor5 ":buildBlockFromCfg:config"
   158 write false processor5 ":buildBlockFromCfg*finished"
 
   229 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   230 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
   231 label *label97
-    * set :setFlareTarget:target 1
   232 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   233 label *label98
-    * set :setMonoTarget:target 5
   234 write 5 AÕFFJS-micro-processor9 ".monoTarget"
   235 label *label99
   236 write 85 AÕFFJS-micro-processor9 ".pressTarget"
 
   324 write 1000 processor5 ".siliconSurplus"
   325 write 20 processor5 ".siliconMonoSurplus"
   326 write 100 processor5 ".metaglassSurplus"
-    * set :setMonoTarget.1:target 4
   327 write 4 AÕFFJS-micro-processor9 ".monoTarget"
   328 label *label123
-    * set :setPolyTarget:target 3
   329 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   330 label *label124
   331 setaddr :buildUnits*retaddr *label125 (h:*label125)
 
   343 label *label127
   344 jump *label126 always
   345 label *label128
-    * set :setFlareTarget.1:target 2
   346 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   347 label *label130
   348 label *label131
 
   435 setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
   436 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
   437 label *label145
-    * set :buildRemoteBlockLocal:cfg "A¡ASJ\-water-extractor18"
   438 read :buildRemoteBlockLocal:x processor3 ".water2X"
   439 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   440 setaddr :buildRemoteBlockLocal*retaddr *label146 (h:*label146)
 
   521 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label161) (h:*label161)
   522 label *label161
   523 write 10 processor5 ".metaglassSurplus"
-    * set :setPolyTarget.1:target 0
   524 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   525 label *label162
-    * set :setFlareTarget.2:target 0
   526 write 0 AÕFFJS-micro-processor9 ".flareTarget"
   527 label *label163
-    * set :setMegaTarget:target 1
   528 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   529 label *label164
   530 setaddr :buildUnits*retaddr *label165 (h:*label165)

Modifications by Iterated phase, Temp Variables Elimination, pass 1, iteration 1 (-1 instructions):
 
   211 multijump *tmp200 0 0 (m:marker0)
   212 multilabel *label93 (m:marker0)
   213 label *label83
-    * set *tmp202 A©RPJg-unloader29
-    * write *tmp202 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
+  214 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   215 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   216 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
   217 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   477 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
   478 label *label152
   479 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * jump *label153 notEqual :buildRemoteBlockLocal*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label153
-    * label *label154
+  480 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
   481 write .thoriumDrill processor2 ".thoriumDrill"
   482 write .thoriumContainer processor2 ".thoriumContainer"
   483 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Unroll iteration loop at BaseBuilder.mnd:179:5 (-2 instructions):
 
   166 write processor2 AÕFFJS-micro-processor9 ".display"
   167 write .core AÕFFJS-micro-processor9 ".core"
   168 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp200 *label84
-    * jump *label81 always
-    * multilabel *label84 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp200 *label85
-    * jump *label81 always
-    * multilabel *label85 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp200 *label86
-    * jump *label81 always
-    * multilabel *label86 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp200 *label87
-    * jump *label81 always
-    * multilabel *label87 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp200 *label88
-    * jump *label81 always
-    * multilabel *label88 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp200 *label89
-    * jump *label81 always
-    * multilabel *label89 (m:marker0)
-    * set :block "A©JNJP-unloader6"
-    * setaddr *tmp200 *label90
-    * jump *label81 always
-    * multilabel *label90 (m:marker0)
-    * set :block "A{HNJQ-inverted-sorter7"
-    * setaddr *tmp200 *label91
-    * jump *label81 always
-    * multilabel *label91 (m:marker0)
-    * set :block "AJPJR-underflow-gate8"
-    * setaddr *tmp200 *label92
-    * jump *label81 always
-    * multilabel *label92 (m:marker0)
-    * set :block "AÕFFJS-micro-processor9"
-    * setaddr *tmp200 *label93
-    * label *label81
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
-    * label *label82
-    * multijump *tmp200 0 0 (m:marker0)
-    * multilabel *label93 (m:marker0)
-    * label *label83
+  169 set :block "AJEMJJ-graphite-press0"
+  170 label *label202
+  171 read *tmp201 @this :block
+  172 write *tmp201 AÕFFJS-micro-processor9 :block
+  173 label *label203
+  174 set :block "AJTJK-battery1"
+  175 label *label206
+  176 read *tmp201 @this :block
+  177 write *tmp201 AÕFFJS-micro-processor9 :block
+  178 label *label207
+  179 set :block "ALTJL-battery2"
+  180 label *label210
+  181 read *tmp201 @this :block
+  182 write *tmp201 AÕFFJS-micro-processor9 :block
+  183 label *label211
+  184 set :block "AJRJM-combustion-generator3"
+  185 label *label214
+  186 read *tmp201 @this :block
+  187 write *tmp201 AÕFFJS-micro-processor9 :block
+  188 label *label215
+  189 set :block "ALMQJN-silicon-smelter4"
+  190 label *label218
+  191 read *tmp201 @this :block
+  192 write *tmp201 AÕFFJS-micro-processor9 :block
+  193 label *label219
+  194 set :block "A{LNJO-inverted-sorter5"
+  195 label *label222
+  196 read *tmp201 @this :block
+  197 write *tmp201 AÕFFJS-micro-processor9 :block
+  198 label *label223
+  199 set :block "A©JNJP-unloader6"
+  200 label *label226
+  201 read *tmp201 @this :block
+  202 write *tmp201 AÕFFJS-micro-processor9 :block
+  203 label *label227
+  204 set :block "A{HNJQ-inverted-sorter7"
+  205 label *label230
+  206 read *tmp201 @this :block
+  207 write *tmp201 AÕFFJS-micro-processor9 :block
+  208 label *label231
+  209 set :block "AJPJR-underflow-gate8"
+  210 label *label234
+  211 read *tmp201 @this :block
+  212 write *tmp201 AÕFFJS-micro-processor9 :block
+  213 label *label235
+  214 set :block "AÕFFJS-micro-processor9"
+  215 label *label238
+  216 read *tmp201 @this :block
+  217 write *tmp201 AÕFFJS-micro-processor9 :block
+  218 label *label239
+  219 label *label83
   220 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   221 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   222 setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   168 write bank1 AÕFFJS-micro-processor9 ".bank"
   169 set :block "AJEMJJ-graphite-press0"
   170 label *label202
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  171 read *tmp201 @this "AJEMJJ-graphite-press0"
+  172 write *tmp201 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   173 label *label203
   174 set :block "AJTJK-battery1"
   175 label *label206
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  176 read *tmp201 @this "AJTJK-battery1"
+  177 write *tmp201 AÕFFJS-micro-processor9 "AJTJK-battery1"
   178 label *label207
   179 set :block "ALTJL-battery2"
   180 label *label210
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  181 read *tmp201 @this "ALTJL-battery2"
+  182 write *tmp201 AÕFFJS-micro-processor9 "ALTJL-battery2"
   183 label *label211
   184 set :block "AJRJM-combustion-generator3"
   185 label *label214
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  186 read *tmp201 @this "AJRJM-combustion-generator3"
+  187 write *tmp201 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   188 label *label215
   189 set :block "ALMQJN-silicon-smelter4"
   190 label *label218
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  191 read *tmp201 @this "ALMQJN-silicon-smelter4"
+  192 write *tmp201 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   193 label *label219
   194 set :block "A{LNJO-inverted-sorter5"
   195 label *label222
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  196 read *tmp201 @this "A{LNJO-inverted-sorter5"
+  197 write *tmp201 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   198 label *label223
   199 set :block "A©JNJP-unloader6"
   200 label *label226
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  201 read *tmp201 @this "A©JNJP-unloader6"
+  202 write *tmp201 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   203 label *label227
   204 set :block "A{HNJQ-inverted-sorter7"
   205 label *label230
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  206 read *tmp201 @this "A{HNJQ-inverted-sorter7"
+  207 write *tmp201 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   208 label *label231
   209 set :block "AJPJR-underflow-gate8"
   210 label *label234
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  211 read *tmp201 @this "AJPJR-underflow-gate8"
+  212 write *tmp201 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   213 label *label235
   214 set :block "AÕFFJS-micro-processor9"
   215 label *label238
-    * read *tmp201 @this :block
-    * write *tmp201 AÕFFJS-micro-processor9 :block
+  216 read *tmp201 @this "AÕFFJS-micro-processor9"
+  217 write *tmp201 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   218 label *label239
   219 label *label83
   220 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
 
   483 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
   484 label *label152
   485 set .thoriumContainer :buildRemoteBlockLocal*retval
-    * select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill .thoriumContainer
+  486 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   487 write .thoriumDrill processor2 ".thoriumDrill"
   488 write .thoriumContainer processor2 ".thoriumContainer"
   489 write .thoriumBattery processor5 ".thoriumBattery"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   166 write processor2 AÕFFJS-micro-processor9 ".display"
   167 write .core AÕFFJS-micro-processor9 ".core"
   168 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   169 label *label202
   170 read *tmp201 @this "AJEMJJ-graphite-press0"
   171 write *tmp201 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   172 label *label203
-    * set :block "AJTJK-battery1"
   173 label *label206
   174 read *tmp201 @this "AJTJK-battery1"
   175 write *tmp201 AÕFFJS-micro-processor9 "AJTJK-battery1"
   176 label *label207
-    * set :block "ALTJL-battery2"
   177 label *label210
   178 read *tmp201 @this "ALTJL-battery2"
   179 write *tmp201 AÕFFJS-micro-processor9 "ALTJL-battery2"
   180 label *label211
-    * set :block "AJRJM-combustion-generator3"
   181 label *label214
   182 read *tmp201 @this "AJRJM-combustion-generator3"
   183 write *tmp201 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   184 label *label215
-    * set :block "ALMQJN-silicon-smelter4"
   185 label *label218
   186 read *tmp201 @this "ALMQJN-silicon-smelter4"
   187 write *tmp201 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   188 label *label219
-    * set :block "A{LNJO-inverted-sorter5"
   189 label *label222
   190 read *tmp201 @this "A{LNJO-inverted-sorter5"
   191 write *tmp201 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   192 label *label223
-    * set :block "A©JNJP-unloader6"
   193 label *label226
   194 read *tmp201 @this "A©JNJP-unloader6"
   195 write *tmp201 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   196 label *label227
-    * set :block "A{HNJQ-inverted-sorter7"
   197 label *label230
   198 read *tmp201 @this "A{HNJQ-inverted-sorter7"
   199 write *tmp201 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   200 label *label231
-    * set :block "AJPJR-underflow-gate8"
   201 label *label234
   202 read *tmp201 @this "AJPJR-underflow-gate8"
   203 write *tmp201 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   204 label *label235
-    * set :block "AÕFFJS-micro-processor9"
   205 label *label238
   206 read *tmp201 @this "AÕFFJS-micro-processor9"
   207 write *tmp201 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
 
   472 setaddr :buildRemoteBlockLocal*retaddr *label152 (h:*label152)
   473 call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
   474 label *label152
-    * set .thoriumContainer :buildRemoteBlockLocal*retval
   475 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   476 write .thoriumDrill processor2 ".thoriumDrill"
   477 write .thoriumContainer processor2 ".thoriumContainer"

Modifications by Inline function 'error' defined at BaseBuilder.mnd:20:1 (-4 instructions):
 
    95 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    96 jump *label65 notEqual :buildFirstTitaniumDrill:result false
    97 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label67 (h:*label67)
-    * call *label37 *invalid :error*retval (m:*label67) (h:*label67)
-    * label *label67
+   98 label *label243
+   99 set .ERROR :error:error
+  100 stop
+  101 label *label244
   102 label *label65
   103 label *label66
   104 write @pneumatic-drill processor2 ".nextBlock"
 
   405 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   406 jump *label141 notEqual :buildThoriumDrill:result false
   407 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label143 (h:*label143)
-    * call *label37 *invalid :error*retval (m:*label143) (h:*label143)
-    * label *label143
+  408 label *label245
+  409 set .ERROR :error:error
+  410 stop
+  411 label *label246
   412 label *label141
   413 label *label142
   414 write @laser-drill processor5 ":buildBlockAt:block"
 
   587 label *label176
   588 label *label169
   589 end
-    * label *label37
-    * set .ERROR :error:error
-    * stop
-    * label *label181
-    * return :error*retaddr
-    * end
   590 label *label38
   591 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
   592 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    96 jump *label65 notEqual :buildFirstTitaniumDrill:result false
    97 set :error:error "Cannot locate spot for titanium drill"
    98 label *label243
-    * set .ERROR :error:error
+   99 set .ERROR "Cannot locate spot for titanium drill"
   100 stop
   101 label *label244
   102 label *label65
 
   406 jump *label141 notEqual :buildThoriumDrill:result false
   407 set :error:error "Cannot locate spot for thorium drill"
   408 label *label245
-    * set .ERROR :error:error
+  409 set .ERROR "Cannot locate spot for thorium drill"
   410 stop
   411 label *label246
   412 label *label141

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    94 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    95 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    96 jump *label65 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    97 label *label243
    98 set .ERROR "Cannot locate spot for titanium drill"
    99 stop
 
   403 jump *label140 equal *tmp253 false
   404 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   405 jump *label141 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   406 label *label245
   407 set .ERROR "Cannot locate spot for thorium drill"
   408 stop

Modifications by Replicate loop condition at BaseBuilder.mnd:246:5 (+1 instructions):
 
   329 label *label126
   330 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   331 jump *label128 greaterThanEq *tmp83 2
+  332 label *label247
   333 write false processor5 ":supplyBase*finished"
   334 write 8 processor5 "@counter"
   335 label *label129
 
   337 read *tmp229 processor5 ":supplyBase*finished"
   338 jump *label129 equal *tmp229 false
   339 label *label127
-    * jump *label126 always
+  340 read *tmp83 AÕFFJS-micro-processor9 ".polys"
+  341 jump *label247 lessThan *tmp83 2
   342 label *label128
   343 write 2 AÕFFJS-micro-processor9 ".flareTarget"
   344 label *label130

Modifications by Replicate loop condition at BaseBuilder.mnd:251:5 (+1 instructions):
 
   345 label *label131
   346 read *tmp81 AÕFFJS-micro-processor9 ".flares"
   347 jump *label133 greaterThanEq *tmp81 2
+  348 label *label248
   349 write false processor5 ":supplyBase*finished"
   350 write 8 processor5 "@counter"
   351 label *label134
 
   353 read *tmp231 processor5 ":supplyBase*finished"
   354 jump *label134 equal *tmp231 false
   355 label *label132
-    * jump *label131 always
+  356 read *tmp81 AÕFFJS-micro-processor9 ".flares"
+  357 jump *label248 lessThan *tmp81 2
   358 label *label133
   359 write @ore-titanium processor2 ".nextBlock"
   360 ubind @flare

Modifications by Replicate loop condition at BaseBuilder.mnd:270:5 (+1 instructions):
 
   494 label *label156
   495 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   496 jump *label158 greaterThanEq *tmp83 3
+  497 label *label249
   498 write false processor5 ":supplyBase*finished"
   499 write 8 processor5 "@counter"
   500 label *label159
 
   502 read *tmp278 processor5 ":supplyBase*finished"
   503 jump *label159 equal *tmp278 false
   504 label *label157
-    * jump *label156 always
+  505 read *tmp83 AÕFFJS-micro-processor9 ".polys"
+  506 jump *label249 lessThan *tmp83 3
   507 label *label158
   508 op add :setMonoTarget.2:target 4 .scrap
   509 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Inline function 'lineUpUnits' defined at BaseBuilder.mnd:355:1 (+20 instructions):
 
   568 label *label174
   569 op add :lineUpUnits:y .coreY 6
   570 set :lineUpUnits:unit @mega
-    * setaddr :lineUpUnits*retaddr *label177 (h:*label177)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label177) (h:*label177)
-    * label *label177
+  571 label *label250
+  572 ubind :lineUpUnits:unit
+  573 set :lineUpUnits:firstUnit @unit
+  574 label *label251
+  575 sensor :lineUpUnits:x @unit @flag
+  576 ucontrol itemDrop @air 1000
+  577 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  578 sensor *tmp323 @unit @mining
+  579 jump *label252 equal *tmp323 false
+  580 ucontrol stop
+  581 label *label252
+  582 label *label253
+  583 ubind :lineUpUnits:unit
+  584 label *label254
+  585 jump *label251 notEqual @unit :lineUpUnits:firstUnit
+  586 label *label255
+  587 label *label256
   588 op add :lineUpUnits:y .coreY 2
   589 set :lineUpUnits:unit @poly
-    * setaddr :lineUpUnits*retaddr *label178 (h:*label178)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label178) (h:*label178)
-    * label *label178
+  590 label *label257
+  591 ubind :lineUpUnits:unit
+  592 set :lineUpUnits:firstUnit @unit
+  593 label *label258
+  594 sensor :lineUpUnits:x @unit @flag
+  595 ucontrol itemDrop @air 1000
+  596 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  597 sensor *tmp323 @unit @mining
+  598 jump *label259 equal *tmp323 false
+  599 ucontrol stop
+  600 label *label259
+  601 label *label260
+  602 ubind :lineUpUnits:unit
+  603 label *label261
+  604 jump *label258 notEqual @unit :lineUpUnits:firstUnit
+  605 label *label262
+  606 label *label263
   607 op sub :lineUpUnits:y .coreY 2
   608 set :lineUpUnits:unit @mono
-    * setaddr :lineUpUnits*retaddr *label179 (h:*label179)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label179) (h:*label179)
-    * label *label179
+  609 label *label264
+  610 ubind :lineUpUnits:unit
+  611 set :lineUpUnits:firstUnit @unit
+  612 label *label265
+  613 sensor :lineUpUnits:x @unit @flag
+  614 ucontrol itemDrop @air 1000
+  615 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  616 sensor *tmp323 @unit @mining
+  617 jump *label266 equal *tmp323 false
+  618 ucontrol stop
+  619 label *label266
+  620 label *label267
+  621 ubind :lineUpUnits:unit
+  622 label *label268
+  623 jump *label265 notEqual @unit :lineUpUnits:firstUnit
+  624 label *label269
+  625 label *label270
   626 op sub :lineUpUnits:y .coreY 6
   627 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label180 (h:*label180)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label180) (h:*label180)
-    * label *label180
+  628 label *label271
+  629 ubind :lineUpUnits:unit
+  630 set :lineUpUnits:firstUnit @unit
+  631 label *label272
+  632 sensor :lineUpUnits:x @unit @flag
+  633 ucontrol itemDrop @air 1000
+  634 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  635 sensor *tmp323 @unit @mining
+  636 jump *label273 equal *tmp323 false
+  637 ucontrol stop
+  638 label *label273
+  639 label *label274
+  640 ubind :lineUpUnits:unit
+  641 label *label275
+  642 jump *label272 notEqual @unit :lineUpUnits:firstUnit
+  643 label *label276
+  644 label *label277
   645 label *label175
   646 jump *label174 always
   647 label *label176
 
   717 label *label188
   718 return :flagUnits*retaddr
   719 end
-    * label *label42
-    * ubind :lineUpUnits:unit
-    * set :lineUpUnits:firstUnit @unit
-    * label *label196
-    * sensor :lineUpUnits:x @unit @flag
-    * ucontrol itemDrop @air 1000
-    * ucontrol move :lineUpUnits:x :lineUpUnits:y
-    * sensor *tmp323 @unit @mining
-    * jump *label199 equal *tmp323 false
-    * ucontrol stop
-    * label *label199
-    * label *label200
-    * ubind :lineUpUnits:unit
-    * label *label197
-    * jump *label196 notEqual @unit :lineUpUnits:firstUnit
-    * label *label198
-    * label *label195
-    * return :lineUpUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   569 op add :lineUpUnits:y .coreY 6
   570 set :lineUpUnits:unit @mega
   571 label *label250
-    * ubind :lineUpUnits:unit
+  572 ubind @mega
   573 set :lineUpUnits:firstUnit @unit
   574 label *label251
   575 sensor :lineUpUnits:x @unit @flag
 
   580 ucontrol stop
   581 label *label252
   582 label *label253
-    * ubind :lineUpUnits:unit
+  583 ubind @mega
   584 label *label254
   585 jump *label251 notEqual @unit :lineUpUnits:firstUnit
   586 label *label255
 
   588 op add :lineUpUnits:y .coreY 2
   589 set :lineUpUnits:unit @poly
   590 label *label257
-    * ubind :lineUpUnits:unit
+  591 ubind @poly
   592 set :lineUpUnits:firstUnit @unit
   593 label *label258
   594 sensor :lineUpUnits:x @unit @flag
 
   599 ucontrol stop
   600 label *label259
   601 label *label260
-    * ubind :lineUpUnits:unit
+  602 ubind @poly
   603 label *label261
   604 jump *label258 notEqual @unit :lineUpUnits:firstUnit
   605 label *label262
 
   607 op sub :lineUpUnits:y .coreY 2
   608 set :lineUpUnits:unit @mono
   609 label *label264
-    * ubind :lineUpUnits:unit
+  610 ubind @mono
   611 set :lineUpUnits:firstUnit @unit
   612 label *label265
   613 sensor :lineUpUnits:x @unit @flag
 
   618 ucontrol stop
   619 label *label266
   620 label *label267
-    * ubind :lineUpUnits:unit
+  621 ubind @mono
   622 label *label268
   623 jump *label265 notEqual @unit :lineUpUnits:firstUnit
   624 label *label269
 
   626 op sub :lineUpUnits:y .coreY 6
   627 set :lineUpUnits:unit @flare
   628 label *label271
-    * ubind :lineUpUnits:unit
+  629 ubind @flare
   630 set :lineUpUnits:firstUnit @unit
   631 label *label272
   632 sensor :lineUpUnits:x @unit @flag
 
   637 ucontrol stop
   638 label *label273
   639 label *label274
-    * ubind :lineUpUnits:unit
+  640 ubind @flare
   641 label *label275
   642 jump *label272 notEqual @unit :lineUpUnits:firstUnit
   643 label *label276

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   567 label *label173
   568 label *label174
   569 op add :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @mega
   570 label *label250
   571 ubind @mega
   572 set :lineUpUnits:firstUnit @unit
 
   585 label *label255
   586 label *label256
   587 op add :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @poly
   588 label *label257
   589 ubind @poly
   590 set :lineUpUnits:firstUnit @unit
 
   603 label *label262
   604 label *label263
   605 op sub :lineUpUnits:y .coreY 2
-    * set :lineUpUnits:unit @mono
   606 label *label264
   607 ubind @mono
   608 set :lineUpUnits:firstUnit @unit
 
   621 label *label269
   622 label *label270
   623 op sub :lineUpUnits:y .coreY 6
-    * set :lineUpUnits:unit @flare
   624 label *label271
   625 ubind @flare
   626 set :lineUpUnits:firstUnit @unit

Modifications by Inline function 'flagUnits' defined at BaseBuilder.mnd:341:1 (+14 instructions):
 
   550 control enabled processor5 false
   551 control enabled processor11 false
   552 set :flagUnits:unit @mega
-    * setaddr :flagUnits*retaddr *label170 (h:*label170)
-    * call *label41 *invalid :flagUnits*retval (m:*label170) (h:*label170)
-    * label *label170
+  553 label *label278
+  554 label *label279
+  555 ubind :flagUnits:unit
+  556 set :flagUnits:firstUnit @unit
+  557 label *label280
+  558 jump *label279 equal :flagUnits:firstUnit null
+  559 label *label281
+  560 op add :flagUnits:x .coreX 8
+  561 label *label282
+  562 ucontrol flag :flagUnits:x
+  563 op add :flagUnits:x :flagUnits:x 4
+  564 ubind :flagUnits:unit
+  565 label *label283
+  566 jump *label282 notEqual @unit :flagUnits:firstUnit
+  567 label *label284
+  568 label *label285
   569 set :flagUnits:unit @poly
-    * setaddr :flagUnits*retaddr *label171 (h:*label171)
-    * call *label41 *invalid :flagUnits*retval (m:*label171) (h:*label171)
-    * label *label171
+  570 label *label286
+  571 label *label287
+  572 ubind :flagUnits:unit
+  573 set :flagUnits:firstUnit @unit
+  574 label *label288
+  575 jump *label287 equal :flagUnits:firstUnit null
+  576 label *label289
+  577 op add :flagUnits:x .coreX 8
+  578 label *label290
+  579 ucontrol flag :flagUnits:x
+  580 op add :flagUnits:x :flagUnits:x 4
+  581 ubind :flagUnits:unit
+  582 label *label291
+  583 jump *label290 notEqual @unit :flagUnits:firstUnit
+  584 label *label292
+  585 label *label293
   586 set :flagUnits:unit @mono
-    * setaddr :flagUnits*retaddr *label172 (h:*label172)
-    * call *label41 *invalid :flagUnits*retval (m:*label172) (h:*label172)
-    * label *label172
+  587 label *label294
+  588 label *label295
+  589 ubind :flagUnits:unit
+  590 set :flagUnits:firstUnit @unit
+  591 label *label296
+  592 jump *label295 equal :flagUnits:firstUnit null
+  593 label *label297
+  594 op add :flagUnits:x .coreX 8
+  595 label *label298
+  596 ucontrol flag :flagUnits:x
+  597 op add :flagUnits:x :flagUnits:x 4
+  598 ubind :flagUnits:unit
+  599 label *label299
+  600 jump *label298 notEqual @unit :flagUnits:firstUnit
+  601 label *label300
+  602 label *label301
   603 set :flagUnits:unit @flare
-    * setaddr :flagUnits*retaddr *label173 (h:*label173)
-    * call *label41 *invalid :flagUnits*retval (m:*label173) (h:*label173)
-    * label *label173
+  604 label *label302
+  605 label *label303
+  606 ubind :flagUnits:unit
+  607 set :flagUnits:firstUnit @unit
+  608 label *label304
+  609 jump *label303 equal :flagUnits:firstUnit null
+  610 label *label305
+  611 op add :flagUnits:x .coreX 8
+  612 label *label306
+  613 ucontrol flag :flagUnits:x
+  614 op add :flagUnits:x :flagUnits:x 4
+  615 ubind :flagUnits:unit
+  616 label *label307
+  617 jump *label306 notEqual @unit :flagUnits:firstUnit
+  618 label *label308
+  619 label *label309
   620 label *label174
   621 op add :lineUpUnits:y .coreY 6
   622 label *label250
 
   747 label *label186
   748 return :buildUnits*retaddr
   749 end
-    * label *label41
-    * label *label189
-    * ubind :flagUnits:unit
-    * set :flagUnits:firstUnit @unit
-    * label *label190
-    * jump *label189 equal :flagUnits:firstUnit null
-    * label *label191
-    * op add :flagUnits:x .coreX 8
-    * label *label192
-    * ucontrol flag :flagUnits:x
-    * op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
-    * label *label193
-    * jump *label192 notEqual @unit :flagUnits:firstUnit
-    * label *label194
-    * label *label188
-    * return :flagUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   552 set :flagUnits:unit @mega
   553 label *label278
   554 label *label279
-    * ubind :flagUnits:unit
+  555 ubind @mega
   556 set :flagUnits:firstUnit @unit
   557 label *label280
   558 jump *label279 equal :flagUnits:firstUnit null
 
   561 label *label282
   562 ucontrol flag :flagUnits:x
   563 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  564 ubind @mega
   565 label *label283
   566 jump *label282 notEqual @unit :flagUnits:firstUnit
   567 label *label284
 
   569 set :flagUnits:unit @poly
   570 label *label286
   571 label *label287
-    * ubind :flagUnits:unit
+  572 ubind @poly
   573 set :flagUnits:firstUnit @unit
   574 label *label288
   575 jump *label287 equal :flagUnits:firstUnit null
 
   578 label *label290
   579 ucontrol flag :flagUnits:x
   580 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  581 ubind @poly
   582 label *label291
   583 jump *label290 notEqual @unit :flagUnits:firstUnit
   584 label *label292
 
   586 set :flagUnits:unit @mono
   587 label *label294
   588 label *label295
-    * ubind :flagUnits:unit
+  589 ubind @mono
   590 set :flagUnits:firstUnit @unit
   591 label *label296
   592 jump *label295 equal :flagUnits:firstUnit null
 
   595 label *label298
   596 ucontrol flag :flagUnits:x
   597 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  598 ubind @mono
   599 label *label299
   600 jump *label298 notEqual @unit :flagUnits:firstUnit
   601 label *label300
 
   603 set :flagUnits:unit @flare
   604 label *label302
   605 label *label303
-    * ubind :flagUnits:unit
+  606 ubind @flare
   607 set :flagUnits:firstUnit @unit
   608 label *label304
   609 jump *label303 equal :flagUnits:firstUnit null
 
   612 label *label306
   613 ucontrol flag :flagUnits:x
   614 op add :flagUnits:x :flagUnits:x 4
-    * ubind :flagUnits:unit
+  615 ubind @flare
   616 label *label307
   617 jump *label306 notEqual @unit :flagUnits:firstUnit
   618 label *label308

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   549 control enabled processor3 false
   550 control enabled processor5 false
   551 control enabled processor11 false
-    * set :flagUnits:unit @mega
   552 label *label278
   553 label *label279
   554 ubind @mega
 
   565 jump *label282 notEqual @unit :flagUnits:firstUnit
   566 label *label284
   567 label *label285
-    * set :flagUnits:unit @poly
   568 label *label286
   569 label *label287
   570 ubind @poly
 
   581 jump *label290 notEqual @unit :flagUnits:firstUnit
   582 label *label292
   583 label *label293
-    * set :flagUnits:unit @mono
   584 label *label294
   585 label *label295
   586 ubind @mono
 
   597 jump *label298 notEqual @unit :flagUnits:firstUnit
   598 label *label300
   599 label *label301
-    * set :flagUnits:unit @flare
   600 label *label302
   601 label *label303
   602 ubind @flare

Modifications by Inline function 'buildRemoteBlockLocal' defined at BaseBuilder.mnd:41:1 (+45 instructions):
 
   431 set :buildRemoteBlockLocal:cfg "A¡ASJ\-water-extractor18"
   432 read :buildRemoteBlockLocal:x processor3 ".water1X"
   433 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label145 (h:*label145)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label145) (h:*label145)
-    * label *label145
+  434 label *label310
+  435 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  436 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  437 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  438 write false processor5 ":buildRemoteBlock*finished"
+  439 write 4 processor5 "@counter"
+  440 label *label311
+  441 wait 1e-15
+  442 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  443 jump *label311 equal *tmp301 false
+  444 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  445 label *label312
   446 read :buildRemoteBlockLocal:x processor3 ".water2X"
   447 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label146 (h:*label146)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label146) (h:*label146)
-    * label *label146
+  448 label *label313
+  449 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  450 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  451 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  452 write false processor5 ":buildRemoteBlock*finished"
+  453 write 4 processor5 "@counter"
+  454 label *label314
+  455 wait 1e-15
+  456 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  457 jump *label314 equal *tmp301 false
+  458 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  459 label *label315
   460 set :buildRemoteBlockLocal:cfg "AAKJ]-steam-generator19"
   461 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   462 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label147 (h:*label147)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label147) (h:*label147)
-    * label *label147
+  463 label *label316
+  464 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  465 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  466 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  467 write false processor5 ":buildRemoteBlock*finished"
+  468 write 4 processor5 "@counter"
+  469 label *label317
+  470 wait 1e-15
+  471 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  472 jump *label317 equal *tmp301 false
+  473 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  474 label *label318
   475 set .thoriumGenerator :buildRemoteBlockLocal*retval
   476 set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   477 read :buildRemoteBlockLocal:x processor3 ".node1X"
   478 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label148 (h:*label148)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label148) (h:*label148)
-    * label *label148
+  479 label *label319
+  480 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  481 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  482 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  483 write false processor5 ":buildRemoteBlock*finished"
+  484 write 4 processor5 "@counter"
+  485 label *label320
+  486 wait 1e-15
+  487 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  488 jump *label320 equal *tmp301 false
+  489 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  490 label *label321
   491 read :buildRemoteBlockLocal:x processor3 ".node2X"
   492 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * setaddr :buildRemoteBlockLocal*retaddr *label149 (h:*label149)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label149) (h:*label149)
-    * label *label149
+  493 label *label322
+  494 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  495 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  496 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  497 write false processor5 ":buildRemoteBlock*finished"
+  498 write 4 processor5 "@counter"
+  499 label *label323
+  500 wait 1e-15
+  501 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  502 jump *label323 equal *tmp301 false
+  503 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  504 label *label324
   505 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   506 read :buildRemoteBlockLocal:x processor3 ".panelX"
   507 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label150 (h:*label150)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label150) (h:*label150)
-    * label *label150
+  508 label *label325
+  509 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  510 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  511 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  512 write false processor5 ":buildRemoteBlock*finished"
+  513 write 4 processor5 "@counter"
+  514 label *label326
+  515 wait 1e-15
+  516 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  517 jump *label326 equal *tmp301 false
+  518 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  519 label *label327
   520 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   521 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   522 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label151 (h:*label151)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label151) (h:*label151)
-    * label *label151
+  523 label *label328
+  524 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  525 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  526 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  527 write false processor5 ":buildRemoteBlock*finished"
+  528 write 4 processor5 "@counter"
+  529 label *label329
+  530 wait 1e-15
+  531 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  532 jump *label329 equal *tmp301 false
+  533 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  534 label *label330
   535 set .thoriumBattery :buildRemoteBlockLocal*retval
   536 set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   537 read :buildRemoteBlockLocal:x processor3 ".containerX"
   538 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * setaddr :buildRemoteBlockLocal*retaddr *label152 (h:*label152)
-    * call *label38 *invalid :buildRemoteBlockLocal*retval (m:*label152) (h:*label152)
-    * label *label152
+  539 label *label331
+  540 write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  541 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
+  542 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
+  543 write false processor5 ":buildRemoteBlock*finished"
+  544 write 4 processor5 "@counter"
+  545 label *label332
+  546 wait 1e-15
+  547 read *tmp301 processor5 ":buildRemoteBlock*finished"
+  548 jump *label332 equal *tmp301 false
+  549 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  550 label *label333
   551 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   552 write .thoriumDrill processor2 ".thoriumDrill"
   553 write .thoriumContainer processor2 ".thoriumContainer"
 
   763 label *label176
   764 label *label169
   765 end
-    * label *label38
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
-    * write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
-    * write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
-    * write false processor5 ":buildRemoteBlock*finished"
-    * write 4 processor5 "@counter"
-    * label *label183
-    * wait 1e-15
-    * read *tmp301 processor5 ":buildRemoteBlock*finished"
-    * jump *label183 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label182
-    * return :buildRemoteBlockLocal*retaddr
-    * end
   766 label *label39
   767 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
   768 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-5 instructions):
 
   432 read :buildRemoteBlockLocal:x processor3 ".water1X"
   433 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   434 label *label310
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  435 write "A¡ASJ\-water-extractor18" processor5 ":buildRemoteBlock:cfg"
   436 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   437 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   438 write false processor5 ":buildRemoteBlock*finished"
 
   441 wait 1e-15
   442 read *tmp301 processor5 ":buildRemoteBlock*finished"
   443 jump *label311 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   444 label *label312
   445 read :buildRemoteBlockLocal:x processor3 ".water2X"
   446 read :buildRemoteBlockLocal:y processor3 ".water2Y"
   447 label *label313
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  448 write "A¡ASJ\-water-extractor18" processor5 ":buildRemoteBlock:cfg"
   449 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   450 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   451 write false processor5 ":buildRemoteBlock*finished"
 
   454 wait 1e-15
   455 read *tmp301 processor5 ":buildRemoteBlock*finished"
   456 jump *label314 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   457 label *label315
   458 set :buildRemoteBlockLocal:cfg "AAKJ]-steam-generator19"
   459 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   460 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   461 label *label316
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  462 write "AAKJ]-steam-generator19" processor5 ":buildRemoteBlock:cfg"
   463 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   464 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   465 write false processor5 ":buildRemoteBlock*finished"
 
   475 read :buildRemoteBlockLocal:x processor3 ".node1X"
   476 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   477 label *label319
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  478 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   479 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   480 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   481 write false processor5 ":buildRemoteBlock*finished"
 
   484 wait 1e-15
   485 read *tmp301 processor5 ":buildRemoteBlock*finished"
   486 jump *label320 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   487 label *label321
   488 read :buildRemoteBlockLocal:x processor3 ".node2X"
   489 read :buildRemoteBlockLocal:y processor3 ".node2Y"
   490 label *label322
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  491 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   492 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   493 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   494 write false processor5 ":buildRemoteBlock*finished"
 
   497 wait 1e-15
   498 read *tmp301 processor5 ":buildRemoteBlock*finished"
   499 jump *label323 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   500 label *label324
   501 set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   502 read :buildRemoteBlockLocal:x processor3 ".panelX"
   503 read :buildRemoteBlockLocal:y processor3 ".panelY"
   504 label *label325
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  505 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   506 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   507 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   508 write false processor5 ":buildRemoteBlock*finished"
 
   511 wait 1e-15
   512 read *tmp301 processor5 ":buildRemoteBlock*finished"
   513 jump *label326 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   514 label *label327
   515 set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   516 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   517 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   518 label *label328
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  519 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   520 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   521 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   522 write false processor5 ":buildRemoteBlock*finished"
 
   532 read :buildRemoteBlockLocal:x processor3 ".containerX"
   533 read :buildRemoteBlockLocal:y processor3 ".containerY"
   534 label *label331
-    * write :buildRemoteBlockLocal:cfg processor5 ":buildRemoteBlock:cfg"
+  535 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   536 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   537 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
   538 write false processor5 ":buildRemoteBlock*finished"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   428 read *tmp263 processor5 ":buildBlockAt*finished"
   429 jump *label144 equal *tmp263 false
   430 read .thoriumDrill processor5 ":buildBlockAt*retval"
-    * set :buildRemoteBlockLocal:cfg "A¡ASJ\-water-extractor18"
   431 read :buildRemoteBlockLocal:x processor3 ".water1X"
   432 read :buildRemoteBlockLocal:y processor3 ".water1Y"
   433 label *label310
 
   454 read *tmp301 processor5 ":buildRemoteBlock*finished"
   455 jump *label314 equal *tmp301 false
   456 label *label315
-    * set :buildRemoteBlockLocal:cfg "AAKJ]-steam-generator19"
   457 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   458 read :buildRemoteBlockLocal:y processor3 ".generatorY"
   459 label *label316
 
   469 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   470 label *label318
   471 set .thoriumGenerator :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "AFHJT-power-node10"
   472 read :buildRemoteBlockLocal:x processor3 ".node1X"
   473 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   474 label *label319
 
   495 read *tmp301 processor5 ":buildRemoteBlock*finished"
   496 jump *label323 equal *tmp301 false
   497 label *label324
-    * set :buildRemoteBlockLocal:cfg "AJJJ~-solar-panel52"
   498 read :buildRemoteBlockLocal:x processor3 ".panelX"
   499 read :buildRemoteBlockLocal:y processor3 ".panelY"
   500 label *label325
 
   508 read *tmp301 processor5 ":buildRemoteBlock*finished"
   509 jump *label326 equal *tmp301 false
   510 label *label327
-    * set :buildRemoteBlockLocal:cfg "AJTJK-battery1"
   511 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   512 read :buildRemoteBlockLocal:y processor3 ".batteryY"
   513 label *label328
 
   523 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
   524 label *label330
   525 set .thoriumBattery :buildRemoteBlockLocal*retval
-    * set :buildRemoteBlockLocal:cfg "A¨JJJ~-container52"
   526 read :buildRemoteBlockLocal:x processor3 ".containerX"
   527 read :buildRemoteBlockLocal:y processor3 ".containerY"
   528 label *label331

Modifications by Inline function call at BaseBuilder.mnd:136:5 (+7 instructions):
 
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label51 (h:*label51)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label51) (h:*label51)
-    * label *label51
+   29 label *label334
+   30 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   31 write null processor5 ":buildBlockFromCfg:config"
+   32 write false processor5 ":buildBlockFromCfg*finished"
+   33 write 2 processor5 "@counter"
+   34 label *label335
+   35 wait 1e-15
+   36 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+   37 jump *label335 equal *tmp305 false
+   38 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   39 jump *label336 always
+   40 label *label336
    41 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    42 setaddr :buildBlockFromCfgLocal*retaddr *label52 (h:*label52)
    43 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label52) (h:*label52)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    27 write .scrap processor7 ".scrap"
    28 set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    29 label *label334
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   30 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    31 write null processor5 ":buildBlockFromCfg:config"
    32 write false processor5 ":buildBlockFromCfg*finished"
    33 write 2 processor5 "@counter"
 
    35 wait 1e-15
    36 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    37 jump *label335 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    38 jump *label336 always
    39 label *label336
    40 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    25 write .scrap processor2 ".scrap"
    26 write .scrap processor5 ".scrap"
    27 write .scrap processor7 ".scrap"
-    * set :buildBlockFromCfgLocal:cfg "AJEMJJ-graphite-press0"
    28 label *label334
    29 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    30 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:137:5 (+7 instructions):
 
    37 jump *label336 always
    38 label *label336
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label52 (h:*label52)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label52) (h:*label52)
-    * label *label52
+   40 label *label337
+   41 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   42 write null processor5 ":buildBlockFromCfg:config"
+   43 write false processor5 ":buildBlockFromCfg*finished"
+   44 write 2 processor5 "@counter"
+   45 label *label338
+   46 wait 1e-15
+   47 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+   48 jump *label338 equal *tmp305 false
+   49 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   50 jump *label339 always
+   51 label *label339
    52 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    53 setaddr :buildBlockFromCfgLocal*retaddr *label53 (h:*label53)
    54 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label53) (h:*label53)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    38 label *label336
    39 set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    40 label *label337
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   41 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    42 write null processor5 ":buildBlockFromCfg:config"
    43 write false processor5 ":buildBlockFromCfg*finished"
    44 write 2 processor5 "@counter"
 
    46 wait 1e-15
    47 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    48 jump *label338 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    49 jump *label339 always
    50 label *label339
    51 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    36 jump *label335 equal *tmp305 false
    37 jump *label336 always
    38 label *label336
-    * set :buildBlockFromCfgLocal:cfg "AJTJK-battery1"
    39 label *label337
    40 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    41 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:138:5 (+7 instructions):
 
    48 jump *label339 always
    49 label *label339
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label53 (h:*label53)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label53) (h:*label53)
-    * label *label53
+   51 label *label340
+   52 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   53 write null processor5 ":buildBlockFromCfg:config"
+   54 write false processor5 ":buildBlockFromCfg*finished"
+   55 write 2 processor5 "@counter"
+   56 label *label341
+   57 wait 1e-15
+   58 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+   59 jump *label341 equal *tmp305 false
+   60 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   61 jump *label342 always
+   62 label *label342
    63 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    64 setaddr :buildBlockFromCfgLocal*retaddr *label54 (h:*label54)
    65 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label54) (h:*label54)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    49 label *label339
    50 set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    51 label *label340
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   52 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    53 write null processor5 ":buildBlockFromCfg:config"
    54 write false processor5 ":buildBlockFromCfg*finished"
    55 write 2 processor5 "@counter"
 
    57 wait 1e-15
    58 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    59 jump *label341 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    60 jump *label342 always
    61 label *label342
    62 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    47 jump *label338 equal *tmp305 false
    48 jump *label339 always
    49 label *label339
-    * set :buildBlockFromCfgLocal:cfg "ALTJL-battery2"
    50 label *label340
    51 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    52 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:139:5 (+7 instructions):
 
    59 jump *label342 always
    60 label *label342
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label54 (h:*label54)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label54) (h:*label54)
-    * label *label54
+   62 label *label343
+   63 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   64 write null processor5 ":buildBlockFromCfg:config"
+   65 write false processor5 ":buildBlockFromCfg*finished"
+   66 write 2 processor5 "@counter"
+   67 label *label344
+   68 wait 1e-15
+   69 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+   70 jump *label344 equal *tmp305 false
+   71 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   72 jump *label345 always
+   73 label *label345
    74 write 400 processor5 ".powerTarget"
    75 set .sandContainer .core
    76 jump *label55 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    60 label *label342
    61 set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    62 label *label343
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   63 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    64 write null processor5 ":buildBlockFromCfg:config"
    65 write false processor5 ":buildBlockFromCfg*finished"
    66 write 2 processor5 "@counter"
 
    68 wait 1e-15
    69 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    70 jump *label344 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
    71 jump *label345 always
    72 label *label345
    73 write 400 processor5 ".powerTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    58 jump *label341 equal *tmp305 false
    59 jump *label342 always
    60 label *label342
-    * set :buildBlockFromCfgLocal:cfg "AJRJM-combustion-generator3"
    61 label *label343
    62 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    63 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:151:5 (+7 instructions):
 
    89 label *label55
    90 label *label56
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label60 (h:*label60)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label60) (h:*label60)
-    * label *label60
+   92 label *label346
+   93 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   94 write null processor5 ":buildBlockFromCfg:config"
+   95 write false processor5 ":buildBlockFromCfg*finished"
+   96 write 2 processor5 "@counter"
+   97 label *label347
+   98 wait 1e-15
+   99 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  100 jump *label347 equal *tmp305 false
+  101 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  102 jump *label348 always
+  103 label *label348
   104 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   105 setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
   106 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    90 label *label56
    91 set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    92 label *label346
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    94 write null processor5 ":buildBlockFromCfg:config"
    95 write false processor5 ":buildBlockFromCfg*finished"
    96 write 2 processor5 "@counter"
 
    98 wait 1e-15
    99 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   100 jump *label347 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   101 jump *label348 always
   102 label *label348
   103 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    88 label *label59
    89 label *label55
    90 label *label56
-    * set :buildBlockFromCfgLocal:cfg "ALMQJN-silicon-smelter4"
    91 label *label346
    92 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:152:5 (+7 instructions):
 
   100 jump *label348 always
   101 label *label348
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label61 (h:*label61)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label61) (h:*label61)
-    * label *label61
+  103 label *label349
+  104 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  105 write null processor5 ":buildBlockFromCfg:config"
+  106 write false processor5 ":buildBlockFromCfg*finished"
+  107 write 2 processor5 "@counter"
+  108 label *label350
+  109 wait 1e-15
+  110 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  111 jump *label350 equal *tmp305 false
+  112 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  113 jump *label351 always
+  114 label *label351
   115 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   116 write false processor5 ":meetTargetCfg:forBuild"
   117 write false processor5 ":meetTargetCfg*finished"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   101 label *label348
   102 set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   103 label *label349
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   111 jump *label350 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label351 always
   113 label *label351
   114 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    99 jump *label347 equal *tmp305 false
   100 jump *label348 always
   101 label *label348
-    * set :buildBlockFromCfgLocal:cfg "A{LNJO-inverted-sorter5"
   102 label *label349
   103 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
   104 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:167:5 (+7 instructions):
 
   183 label *label70
   184 write .sandContainer processor7 ".sandContainer"
   185 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label76 (h:*label76)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label76) (h:*label76)
-    * label *label76
+  186 label *label352
+  187 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  188 write null processor5 ":buildBlockFromCfg:config"
+  189 write false processor5 ":buildBlockFromCfg*finished"
+  190 write 2 processor5 "@counter"
+  191 label *label353
+  192 wait 1e-15
+  193 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  194 jump *label353 equal *tmp305 false
+  195 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  196 jump *label354 always
+  197 label *label354
   198 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   199 setaddr :buildBlockFromCfgLocal*retaddr *label77 (h:*label77)
   200 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label77) (h:*label77)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   184 write .sandContainer processor7 ".sandContainer"
   185 set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   186 label *label352
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  187 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   188 write null processor5 ":buildBlockFromCfg:config"
   189 write false processor5 ":buildBlockFromCfg*finished"
   190 write 2 processor5 "@counter"
 
   192 wait 1e-15
   193 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   194 jump *label353 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   195 jump *label354 always
   196 label *label354
   197 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   182 label *label69
   183 label *label70
   184 write .sandContainer processor7 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A{HNJQ-inverted-sorter7"
   185 label *label352
   186 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   187 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:168:5 (+7 instructions):
 
   194 jump *label354 always
   195 label *label354
   196 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label77 (h:*label77)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label77) (h:*label77)
-    * label *label77
+  197 label *label355
+  198 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  199 write null processor5 ":buildBlockFromCfg:config"
+  200 write false processor5 ":buildBlockFromCfg*finished"
+  201 write 2 processor5 "@counter"
+  202 label *label356
+  203 wait 1e-15
+  204 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  205 jump *label356 equal *tmp305 false
+  206 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  207 jump *label357 always
+  208 label *label357
   209 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   210 setaddr :buildBlockFromCfgLocal*retaddr *label78 (h:*label78)
   211 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   195 label *label354
   196 set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   197 label *label355
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  198 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   199 write null processor5 ":buildBlockFromCfg:config"
   200 write false processor5 ":buildBlockFromCfg*finished"
   201 write 2 processor5 "@counter"
 
   203 wait 1e-15
   204 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   205 jump *label356 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   206 jump *label357 always
   207 label *label357
   208 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   193 jump *label353 equal *tmp305 false
   194 jump *label354 always
   195 label *label354
-    * set :buildBlockFromCfgLocal:cfg "AJPJR-underflow-gate8"
   196 label *label355
   197 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   198 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:169:5 (+7 instructions):
 
   205 jump *label357 always
   206 label *label357
   207 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label78 (h:*label78)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label78) (h:*label78)
-    * label *label78
+  208 label *label358
+  209 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  210 write null processor5 ":buildBlockFromCfg:config"
+  211 write false processor5 ":buildBlockFromCfg*finished"
+  212 write 2 processor5 "@counter"
+  213 label *label359
+  214 wait 1e-15
+  215 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  216 jump *label359 equal *tmp305 false
+  217 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  218 jump *label360 always
+  219 label *label360
   220 write 80 processor5 ".graphiteSurplus"
   221 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   222 write processor10 processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   206 label *label357
   207 set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   208 label *label358
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  209 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   210 write null processor5 ":buildBlockFromCfg:config"
   211 write false processor5 ":buildBlockFromCfg*finished"
   212 write 2 processor5 "@counter"
 
   214 wait 1e-15
   215 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   216 jump *label359 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   217 jump *label360 always
   218 label *label360
   219 write 80 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   204 jump *label356 equal *tmp305 false
   205 jump *label357 always
   206 label *label357
-    * set :buildBlockFromCfgLocal:cfg "A©JNJP-unloader6"
   207 label *label358
   208 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:184:5 (+7 instructions):
 
   272 label *label83
   273 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   274 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label94 (h:*label94)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label94) (h:*label94)
-    * label *label94
+  275 label *label361
+  276 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  277 write null processor5 ":buildBlockFromCfg:config"
+  278 write false processor5 ":buildBlockFromCfg*finished"
+  279 write 2 processor5 "@counter"
+  280 label *label362
+  281 wait 1e-15
+  282 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  283 jump *label362 equal *tmp305 false
+  284 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  285 jump *label363 always
+  286 label *label363
   287 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   288 setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
   289 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   273 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
   274 set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   275 label *label361
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  276 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   277 write null processor5 ":buildBlockFromCfg:config"
   278 write false processor5 ":buildBlockFromCfg*finished"
   279 write 2 processor5 "@counter"
 
   281 wait 1e-15
   282 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   283 jump *label362 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   284 jump *label363 always
   285 label *label363
   286 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   271 label *label239
   272 label *label83
   273 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
-    * set :buildBlockFromCfgLocal:cfg "AFHJT-power-node10"
   274 label *label361
   275 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   276 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:185:5 (+7 instructions):
 
   283 jump *label363 always
   284 label *label363
   285 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label95 (h:*label95)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label95) (h:*label95)
-    * label *label95
+  286 label *label364
+  287 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  288 write null processor5 ":buildBlockFromCfg:config"
+  289 write false processor5 ":buildBlockFromCfg*finished"
+  290 write 2 processor5 "@counter"
+  291 label *label365
+  292 wait 1e-15
+  293 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  294 jump *label365 equal *tmp305 false
+  295 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  296 jump *label366 always
+  297 label *label366
   298 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   299 setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
   300 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   284 label *label363
   285 set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   286 label *label364
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  287 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   288 write null processor5 ":buildBlockFromCfg:config"
   289 write false processor5 ":buildBlockFromCfg*finished"
   290 write 2 processor5 "@counter"
 
   292 wait 1e-15
   293 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   294 jump *label365 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   295 jump *label366 always
   296 label *label366
   297 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   282 jump *label362 equal *tmp305 false
   283 jump *label363 always
   284 label *label363
-    * set :buildBlockFromCfgLocal:cfg "A©FJJU-unloader11"
   285 label *label364
   286 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   287 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:186:5 (+7 instructions):
 
   294 jump *label366 always
   295 label *label366
   296 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label96 (h:*label96)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label96) (h:*label96)
-    * label *label96
+  297 label *label367
+  298 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  299 write null processor5 ":buildBlockFromCfg:config"
+  300 write false processor5 ":buildBlockFromCfg*finished"
+  301 write 2 processor5 "@counter"
+  302 label *label368
+  303 wait 1e-15
+  304 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  305 jump *label368 equal *tmp305 false
+  306 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  307 jump *label369 always
+  308 label *label369
   309 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   310 setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
   311 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   295 label *label366
   296 set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   297 label *label367
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  298 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   299 write null processor5 ":buildBlockFromCfg:config"
   300 write false processor5 ":buildBlockFromCfg*finished"
   301 write 2 processor5 "@counter"
 
   303 wait 1e-15
   304 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   305 jump *label368 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   306 jump *label369 always
   307 label *label369
   308 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   293 jump *label365 equal *tmp305 false
   294 jump *label366 always
   295 label *label366
-    * set :buildBlockFromCfgLocal:cfg "A~DJJV-overflow-gate12"
   296 label *label367
   297 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   298 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:188:5 (+7 instructions):
 
   305 jump *label369 always
   306 label *label369
   307 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label97 (h:*label97)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label97) (h:*label97)
-    * label *label97
+  308 label *label370
+  309 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  310 write null processor5 ":buildBlockFromCfg:config"
+  311 write false processor5 ":buildBlockFromCfg*finished"
+  312 write 2 processor5 "@counter"
+  313 label *label371
+  314 wait 1e-15
+  315 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  316 jump *label371 equal *tmp305 false
+  317 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  318 jump *label372 always
+  319 label *label372
   320 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   321 label *label98
   322 write 5 AÕFFJS-micro-processor9 ".monoTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   306 label *label369
   307 set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   308 label *label370
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  309 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   310 write null processor5 ":buildBlockFromCfg:config"
   311 write false processor5 ":buildBlockFromCfg*finished"
   312 write 2 processor5 "@counter"
 
   314 wait 1e-15
   315 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   316 jump *label371 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   317 jump *label372 always
   318 label *label372
   319 write 1 AÕFFJS-micro-processor9 ".flareTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   304 jump *label368 equal *tmp305 false
   305 jump *label369 always
   306 label *label369
-    * set :buildBlockFromCfgLocal:cfg "A¾BFLW-air-factory13"
   307 label *label370
   308 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   309 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:213:5 (+7 instructions):
 
   345 label *label103
   346 write 65 processor5 ".siliconSurplus"
   347 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label107 (h:*label107)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label107) (h:*label107)
-    * label *label107
+  348 label *label373
+  349 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  350 write null processor5 ":buildBlockFromCfg:config"
+  351 write false processor5 ":buildBlockFromCfg*finished"
+  352 write 2 processor5 "@counter"
+  353 label *label374
+  354 wait 1e-15
+  355 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  356 jump *label374 equal *tmp305 false
+  357 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  358 jump *label375 always
+  359 label *label375
   360 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   361 setaddr :buildBlockFromCfgLocal*retaddr *label108 (h:*label108)
   362 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label108) (h:*label108)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   346 write 65 processor5 ".siliconSurplus"
   347 set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   348 label *label373
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  349 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   350 write null processor5 ":buildBlockFromCfg:config"
   351 write false processor5 ":buildBlockFromCfg*finished"
   352 write 2 processor5 "@counter"
 
   354 wait 1e-15
   355 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   356 jump *label374 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   357 jump *label375 always
   358 label *label375
   359 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   344 jump *label101 lessThan *tmp82 3
   345 label *label103
   346 write 65 processor5 ".siliconSurplus"
-    * set :buildBlockFromCfgLocal:cfg "A©NHJX-unloader14"
   347 label *label373
   348 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   349 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:214:5 (+7 instructions):
 
   356 jump *label375 always
   357 label *label375
   358 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label108 (h:*label108)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label108) (h:*label108)
-    * label *label108
+  359 label *label376
+  360 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  361 write null processor5 ":buildBlockFromCfg:config"
+  362 write false processor5 ":buildBlockFromCfg*finished"
+  363 write 2 processor5 "@counter"
+  364 label *label377
+  365 wait 1e-15
+  366 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  367 jump *label377 equal *tmp305 false
+  368 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  369 jump *label378 always
+  370 label *label378
   371 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   372 setaddr :buildBlockFromCfgLocal*retaddr *label109 (h:*label109)
   373 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label109) (h:*label109)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   357 label *label375
   358 set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   359 label *label376
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  360 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   361 write null processor5 ":buildBlockFromCfg:config"
   362 write false processor5 ":buildBlockFromCfg*finished"
   363 write 2 processor5 "@counter"
 
   365 wait 1e-15
   366 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   367 jump *label377 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   368 jump *label378 always
   369 label *label378
   370 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   355 jump *label374 equal *tmp305 false
   356 jump *label375 always
   357 label *label375
-    * set :buildBlockFromCfgLocal:cfg "A{NJJY-inverted-sorter15"
   358 label *label376
   359 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   360 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:215:5 (+7 instructions):
 
   367 jump *label378 always
   368 label *label378
   369 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label109 (h:*label109)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label109) (h:*label109)
-    * label *label109
+  370 label *label379
+  371 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  372 write null processor5 ":buildBlockFromCfg:config"
+  373 write false processor5 ":buildBlockFromCfg*finished"
+  374 write 2 processor5 "@counter"
+  375 label *label380
+  376 wait 1e-15
+  377 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  378 jump *label380 equal *tmp305 false
+  379 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  380 jump *label381 always
+  381 label *label381
   382 set :buildBlockFromCfgLocal:cfg "AÜAOJ[-liquid-container17"
   383 setaddr :buildBlockFromCfgLocal*retaddr *label110 (h:*label110)
   384 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label110) (h:*label110)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   368 label *label378
   369 set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   370 label *label379
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  371 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   372 write null processor5 ":buildBlockFromCfg:config"
   373 write false processor5 ":buildBlockFromCfg*finished"
   374 write 2 processor5 "@counter"
 
   376 wait 1e-15
   377 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   378 jump *label380 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   379 jump *label381 always
   380 label *label381
   381 set :buildBlockFromCfgLocal:cfg "AÜAOJ[-liquid-container17"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   366 jump *label377 equal *tmp305 false
   367 jump *label378 always
   368 label *label378
-    * set :buildBlockFromCfgLocal:cfg "ANOMJZ-kiln16"
   369 label *label379
   370 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   371 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:218:5 (+7 instructions):
 
   378 jump *label381 always
   379 label *label381
   380 set :buildBlockFromCfgLocal:cfg "AÜAOJ[-liquid-container17"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label110 (h:*label110)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label110) (h:*label110)
-    * label *label110
+  381 label *label382
+  382 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  383 write null processor5 ":buildBlockFromCfg:config"
+  384 write false processor5 ":buildBlockFromCfg*finished"
+  385 write 2 processor5 "@counter"
+  386 label *label383
+  387 wait 1e-15
+  388 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  389 jump *label383 equal *tmp305 false
+  390 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  391 jump *label384 always
+  392 label *label384
   393 set :buildBlockFromCfgLocal:cfg "A¡ASJ\-water-extractor18"
   394 setaddr :buildBlockFromCfgLocal*retaddr *label111 (h:*label111)
   395 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label111) (h:*label111)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   379 label *label381
   380 set :buildBlockFromCfgLocal:cfg "AÜAOJ[-liquid-container17"
   381 label *label382
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  382 write "AÜAOJ[-liquid-container17" processor5 ":buildBlockFromCfg:cfg"
   383 write null processor5 ":buildBlockFromCfg:config"
   384 write false processor5 ":buildBlockFromCfg*finished"
   385 write 2 processor5 "@counter"
 
   387 wait 1e-15
   388 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   389 jump *label383 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   390 jump *label384 always
   391 label *label384
   392 set :buildBlockFromCfgLocal:cfg "A¡ASJ\-water-extractor18"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   377 jump *label380 equal *tmp305 false
   378 jump *label381 always
   379 label *label381
-    * set :buildBlockFromCfgLocal:cfg "AÜAOJ[-liquid-container17"
   380 label *label382
   381 write "AÜAOJ[-liquid-container17" processor5 ":buildBlockFromCfg:cfg"
   382 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:219:5 (+7 instructions):
 
   389 jump *label384 always
   390 label *label384
   391 set :buildBlockFromCfgLocal:cfg "A¡ASJ\-water-extractor18"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label111 (h:*label111)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label111) (h:*label111)
-    * label *label111
+  392 label *label385
+  393 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  394 write null processor5 ":buildBlockFromCfg:config"
+  395 write false processor5 ":buildBlockFromCfg*finished"
+  396 write 2 processor5 "@counter"
+  397 label *label386
+  398 wait 1e-15
+  399 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  400 jump *label386 equal *tmp305 false
+  401 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  402 jump *label387 always
+  403 label *label387
   404 set :buildBlockFromCfgLocal:cfg "AAKJ]-steam-generator19"
   405 setaddr :buildBlockFromCfgLocal*retaddr *label112 (h:*label112)
   406 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label112) (h:*label112)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   390 label *label384
   391 set :buildBlockFromCfgLocal:cfg "A¡ASJ\-water-extractor18"
   392 label *label385
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  393 write "A¡ASJ\-water-extractor18" processor5 ":buildBlockFromCfg:cfg"
   394 write null processor5 ":buildBlockFromCfg:config"
   395 write false processor5 ":buildBlockFromCfg*finished"
   396 write 2 processor5 "@counter"
 
   398 wait 1e-15
   399 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   400 jump *label386 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   401 jump *label387 always
   402 label *label387
   403 set :buildBlockFromCfgLocal:cfg "AAKJ]-steam-generator19"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   388 jump *label383 equal *tmp305 false
   389 jump *label384 always
   390 label *label384
-    * set :buildBlockFromCfgLocal:cfg "A¡ASJ\-water-extractor18"
   391 label *label385
   392 write "A¡ASJ\-water-extractor18" processor5 ":buildBlockFromCfg:cfg"
   393 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:220:5 (+7 instructions):
 
   400 jump *label387 always
   401 label *label387
   402 set :buildBlockFromCfgLocal:cfg "AAKJ]-steam-generator19"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label112 (h:*label112)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label112) (h:*label112)
-    * label *label112
+  403 label *label388
+  404 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  405 write null processor5 ":buildBlockFromCfg:config"
+  406 write false processor5 ":buildBlockFromCfg*finished"
+  407 write 2 processor5 "@counter"
+  408 label *label389
+  409 wait 1e-15
+  410 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  411 jump *label389 equal *tmp305 false
+  412 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  413 jump *label390 always
+  414 label *label390
   415 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   416 setaddr :buildBlockFromCfgLocal*retaddr *label113 (h:*label113)
   417 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label113) (h:*label113)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   401 label *label387
   402 set :buildBlockFromCfgLocal:cfg "AAKJ]-steam-generator19"
   403 label *label388
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  404 write "AAKJ]-steam-generator19" processor5 ":buildBlockFromCfg:cfg"
   405 write null processor5 ":buildBlockFromCfg:config"
   406 write false processor5 ":buildBlockFromCfg*finished"
   407 write 2 processor5 "@counter"
 
   409 wait 1e-15
   410 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   411 jump *label389 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   412 jump *label390 always
   413 label *label390
   414 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   399 jump *label386 equal *tmp305 false
   400 jump *label387 always
   401 label *label387
-    * set :buildBlockFromCfgLocal:cfg "AAKJ]-steam-generator19"
   402 label *label388
   403 write "AAKJ]-steam-generator19" processor5 ":buildBlockFromCfg:cfg"
   404 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:222:5 (+7 instructions):
 
   411 jump *label390 always
   412 label *label390
   413 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label113 (h:*label113)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label113) (h:*label113)
-    * label *label113
+  414 label *label391
+  415 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  416 write null processor5 ":buildBlockFromCfg:config"
+  417 write false processor5 ":buildBlockFromCfg*finished"
+  418 write 2 processor5 "@counter"
+  419 label *label392
+  420 wait 1e-15
+  421 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  422 jump *label392 equal *tmp305 false
+  423 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  424 jump *label393 always
+  425 label *label393
   426 write 200 processor5 ".graphiteSurplus"
   427 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   428 setaddr :buildBlockFromCfgLocal*retaddr *label114 (h:*label114)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   412 label *label390
   413 set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   414 label *label391
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  415 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
   416 write null processor5 ":buildBlockFromCfg:config"
   417 write false processor5 ":buildBlockFromCfg*finished"
   418 write 2 processor5 "@counter"
 
   420 wait 1e-15
   421 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   422 jump *label392 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   423 jump *label393 always
   424 label *label393
   425 write 200 processor5 ".graphiteSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   410 jump *label389 equal *tmp305 false
   411 jump *label390 always
   412 label *label390
-    * set :buildBlockFromCfgLocal:cfg "AKFRJ_-multi-press21"
   413 label *label391
   414 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
   415 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:225:5 (+7 instructions):
 
   423 label *label393
   424 write 200 processor5 ".graphiteSurplus"
   425 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label114 (h:*label114)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label114) (h:*label114)
-    * label *label114
+  426 label *label394
+  427 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  428 write null processor5 ":buildBlockFromCfg:config"
+  429 write false processor5 ":buildBlockFromCfg*finished"
+  430 write 2 processor5 "@counter"
+  431 label *label395
+  432 wait 1e-15
+  433 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  434 jump *label395 equal *tmp305 false
+  435 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  436 jump *label396 always
+  437 label *label396
   438 jump *label115 equal .scrap false
   439 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   440 setaddr :buildBlockFromCfgLocal*retaddr *label117 (h:*label117)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   424 write 200 processor5 ".graphiteSurplus"
   425 set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   426 label *label394
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  427 write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFromCfg:cfg"
   428 write null processor5 ":buildBlockFromCfg:config"
   429 write false processor5 ":buildBlockFromCfg*finished"
   430 write 2 processor5 "@counter"
 
   432 wait 1e-15
   433 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   434 jump *label395 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   435 jump *label396 always
   436 label *label396
   437 jump *label115 equal .scrap false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   422 jump *label393 always
   423 label *label393
   424 write 200 processor5 ".graphiteSurplus"
-    * set :buildBlockFromCfgLocal:cfg "ALQIJ^-silicon-smelter20"
   425 label *label394
   426 write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFromCfg:cfg"
   427 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:233:5 (+7 instructions):
 
   452 label *label115
   453 label *label116
   454 set :buildBlockFromCfgLocal:cfg "A©HFJ`-unloader22"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label120 (h:*label120)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label120) (h:*label120)
-    * label *label120
+  455 label *label397
+  456 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  457 write null processor5 ":buildBlockFromCfg:config"
+  458 write false processor5 ":buildBlockFromCfg*finished"
+  459 write 2 processor5 "@counter"
+  460 label *label398
+  461 wait 1e-15
+  462 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  463 jump *label398 equal *tmp305 false
+  464 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  465 jump *label399 always
+  466 label *label399
   467 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   468 setaddr :buildBlockFromCfgLocal*retaddr *label121 (h:*label121)
   469 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label121) (h:*label121)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   453 label *label116
   454 set :buildBlockFromCfgLocal:cfg "A©HFJ`-unloader22"
   455 label *label397
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  456 write "A©HFJ`-unloader22" processor5 ":buildBlockFromCfg:cfg"
   457 write null processor5 ":buildBlockFromCfg:config"
   458 write false processor5 ":buildBlockFromCfg*finished"
   459 write 2 processor5 "@counter"
 
   461 wait 1e-15
   462 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   463 jump *label398 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   464 jump *label399 always
   465 label *label399
   466 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   451 jump *label119 equal *tmp224 false
   452 label *label115
   453 label *label116
-    * set :buildBlockFromCfgLocal:cfg "A©HFJ`-unloader22"
   454 label *label397
   455 write "A©HFJ`-unloader22" processor5 ":buildBlockFromCfg:cfg"
   456 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:234:5 (+7 instructions):
 
   463 jump *label399 always
   464 label *label399
   465 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label121 (h:*label121)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label121) (h:*label121)
-    * label *label121
+  466 label *label400
+  467 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  468 write null processor5 ":buildBlockFromCfg:config"
+  469 write false processor5 ":buildBlockFromCfg*finished"
+  470 write 2 processor5 "@counter"
+  471 label *label401
+  472 wait 1e-15
+  473 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  474 jump *label401 equal *tmp305 false
+  475 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  476 jump *label402 always
+  477 label *label402
   478 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   479 setaddr :buildBlockFromCfgLocal*retaddr *label122 (h:*label122)
   480 call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label122) (h:*label122)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   464 label *label399
   465 set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   466 label *label400
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  467 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   468 write null processor5 ":buildBlockFromCfg:config"
   469 write false processor5 ":buildBlockFromCfg*finished"
   470 write 2 processor5 "@counter"
 
   472 wait 1e-15
   473 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   474 jump *label401 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   475 jump *label402 always
   476 label *label402
   477 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   462 jump *label398 equal *tmp305 false
   463 jump *label399 always
   464 label *label399
-    * set :buildBlockFromCfgLocal:cfg "A{HDJa-inverted-sorter23"
   465 label *label400
   466 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   467 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:235:5 (+7 instructions):
 
   474 jump *label402 always
   475 label *label402
   476 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label122 (h:*label122)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label122) (h:*label122)
-    * label *label122
+  477 label *label403
+  478 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  479 write null processor5 ":buildBlockFromCfg:config"
+  480 write false processor5 ":buildBlockFromCfg*finished"
+  481 write 2 processor5 "@counter"
+  482 label *label404
+  483 wait 1e-15
+  484 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  485 jump *label404 equal *tmp305 false
+  486 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  487 jump *label405 always
+  488 label *label405
   489 write 1000 processor5 ".siliconSurplus"
   490 write 20 processor5 ".siliconMonoSurplus"
   491 write 100 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   475 label *label402
   476 set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   477 label *label403
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  478 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   479 write null processor5 ":buildBlockFromCfg:config"
   480 write false processor5 ":buildBlockFromCfg*finished"
   481 write 2 processor5 "@counter"
 
   483 wait 1e-15
   484 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   485 jump *label404 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   486 jump *label405 always
   487 label *label405
   488 write 1000 processor5 ".siliconSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   473 jump *label401 equal *tmp305 false
   474 jump *label402 always
   475 label *label402
-    * set :buildBlockFromCfgLocal:cfg "AÀF@Lb-additive-reconstructor24"
   476 label *label403
   477 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   478 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function call at BaseBuilder.mnd:280:5 (+7 instructions):
 
   743 write 120 processor5 ".siliconMonoSurplus"
   744 write 0 processor5 ".leadSurplus"
   745 set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label161 (h:*label161)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label161) (h:*label161)
-    * label *label161
+  746 label *label406
+  747 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  748 write null processor5 ":buildBlockFromCfg:config"
+  749 write false processor5 ":buildBlockFromCfg*finished"
+  750 write 2 processor5 "@counter"
+  751 label *label407
+  752 wait 1e-15
+  753 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  754 jump *label407 equal *tmp305 false
+  755 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  756 jump *label408 always
+  757 label *label408
   758 write 10 processor5 ".metaglassSurplus"
   759 write 0 AÕFFJS-micro-processor9 ".polyTarget"
   760 label *label162

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   744 write 0 processor5 ".leadSurplus"
   745 set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
   746 label *label406
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  747 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   748 write null processor5 ":buildBlockFromCfg:config"
   749 write false processor5 ":buildBlockFromCfg*finished"
   750 write 2 processor5 "@counter"
 
   752 wait 1e-15
   753 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   754 jump *label407 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   755 jump *label408 always
   756 label *label408
   757 write 10 processor5 ".metaglassSurplus"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   742 write *tmp281 AÕFFJS-micro-processor9 ".powerTarget"
   743 write 120 processor5 ".siliconMonoSurplus"
   744 write 0 processor5 ".leadSurplus"
-    * set :buildBlockFromCfgLocal:cfg "AÁNBJc-multiplicative-reconstructor25"
   745 label *label406
   746 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   747 write null processor5 ":buildBlockFromCfg:config"

Modifications by Inline function 'buildUnits' defined at BaseBuilder.mnd:113:1 (+30 instructions):
 
   324 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   325 write 20 processor5 ".siliconSurplus"
   326 write 2 processor5 ".leadSurplus"
-    * setaddr :buildUnits*retaddr *label100 (h:*label100)
-    * call *label40 *invalid :buildUnits*retval (m:*label100) (h:*label100)
-    * label *label100
+  327 label *label409
+  328 write 0 processor5 ":meetTarget:block"
+  329 write 0 processor5 ":meetTarget:copper"
+  330 write 0 processor5 ":meetTarget:lead"
+  331 write 0 processor5 ":meetTarget:graphite"
+  332 write 0 processor5 ":meetTarget:silicon"
+  333 write 0 processor5 ":meetTarget:titanium"
+  334 write 0 processor5 ":meetTarget:metaglass"
+  335 write 0 processor5 ":meetTarget:thorium"
+  336 write false processor5 ":meetTarget:forBuild"
+  337 write true processor5 ":meetTarget:isNoTarget"
+  338 write false processor5 ":meetTarget*finished"
+  339 write 6 processor5 "@counter"
+  340 label *label410
+  341 wait 1e-15
+  342 read *tmp317 processor5 ":meetTarget*finished"
+  343 jump *label410 equal *tmp317 false
+  344 write 0 processor2 ".totalTargets"
+  345 write null processor2 ".nextBlock"
+  346 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  347 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  348 label *label411
   349 label *label101
   350 write false processor5 ":supplyBase*finished"
   351 write 8 processor5 "@counter"
 
   510 label *label123
   511 write 3 AÕFFJS-micro-processor9 ".polyTarget"
   512 label *label124
-    * setaddr :buildUnits*retaddr *label125 (h:*label125)
-    * call *label40 *invalid :buildUnits*retval (m:*label125) (h:*label125)
-    * label *label125
+  513 label *label412
+  514 write 0 processor5 ":meetTarget:block"
+  515 write 0 processor5 ":meetTarget:copper"
+  516 write 0 processor5 ":meetTarget:lead"
+  517 write 0 processor5 ":meetTarget:graphite"
+  518 write 0 processor5 ":meetTarget:silicon"
+  519 write 0 processor5 ":meetTarget:titanium"
+  520 write 0 processor5 ":meetTarget:metaglass"
+  521 write 0 processor5 ":meetTarget:thorium"
+  522 write false processor5 ":meetTarget:forBuild"
+  523 write true processor5 ":meetTarget:isNoTarget"
+  524 write false processor5 ":meetTarget*finished"
+  525 write 6 processor5 "@counter"
+  526 label *label413
+  527 wait 1e-15
+  528 read *tmp317 processor5 ":meetTarget*finished"
+  529 jump *label413 equal *tmp317 false
+  530 write 0 processor2 ".totalTargets"
+  531 write null processor2 ".nextBlock"
+  532 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  533 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  534 label *label414
   535 label *label126
   536 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   537 jump *label128 greaterThanEq *tmp83 2
 
   798 label *label163
   799 write 1 AÕFFJS-micro-processor9 ".megaTarget"
   800 label *label164
-    * setaddr :buildUnits*retaddr *label165 (h:*label165)
-    * call *label40 *invalid :buildUnits*retval (m:*label165) (h:*label165)
-    * label *label165
+  801 label *label415
+  802 write 0 processor5 ":meetTarget:block"
+  803 write 0 processor5 ":meetTarget:copper"
+  804 write 0 processor5 ":meetTarget:lead"
+  805 write 0 processor5 ":meetTarget:graphite"
+  806 write 0 processor5 ":meetTarget:silicon"
+  807 write 0 processor5 ":meetTarget:titanium"
+  808 write 0 processor5 ":meetTarget:metaglass"
+  809 write 0 processor5 ":meetTarget:thorium"
+  810 write false processor5 ":meetTarget:forBuild"
+  811 write true processor5 ":meetTarget:isNoTarget"
+  812 write false processor5 ":meetTarget*finished"
+  813 write 6 processor5 "@counter"
+  814 label *label416
+  815 wait 1e-15
+  816 read *tmp317 processor5 ":meetTarget*finished"
+  817 jump *label416 equal *tmp317 false
+  818 write 0 processor2 ".totalTargets"
+  819 write null processor2 ".nextBlock"
+  820 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
+  821 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
+  822 label *label417
   823 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   824 op sub :tmp *tmp83 1
   825 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   998 label *label184
   999 return :buildBlockFromCfgLocal*retaddr
  1000 end
-    * label *label40
-    * write 0 processor5 ":meetTarget:block"
-    * write 0 processor5 ":meetTarget:copper"
-    * write 0 processor5 ":meetTarget:lead"
-    * write 0 processor5 ":meetTarget:graphite"
-    * write 0 processor5 ":meetTarget:silicon"
-    * write 0 processor5 ":meetTarget:titanium"
-    * write 0 processor5 ":meetTarget:metaglass"
-    * write 0 processor5 ":meetTarget:thorium"
-    * write false processor5 ":meetTarget:forBuild"
-    * write true processor5 ":meetTarget:isNoTarget"
-    * write false processor5 ":meetTarget*finished"
-    * write 6 processor5 "@counter"
-    * label *label187
-    * wait 1e-15
-    * read *tmp317 processor5 ":meetTarget*finished"
-    * jump *label187 equal *tmp317 false
-    * write 0 processor2 ".totalTargets"
-    * write null processor2 ".nextBlock"
-    * write 0 AÕFFJS-micro-processor9 ".siliconReserve"
-    * write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label186
-    * return :buildUnits*retaddr
-    * end

Modifications by Inline function 'buildBlockFromCfgLocal' defined at BaseBuilder.mnd:50:1 (+59 instructions):
 
    73 set .sandContainer .core
    74 jump *label55 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label57 (h:*label57)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label57) (h:*label57)
-    * label *label57
+   76 label *label418
+   77 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   78 write null processor5 ":buildBlockFromCfg:config"
+   79 write false processor5 ":buildBlockFromCfg*finished"
+   80 write 2 processor5 "@counter"
+   81 label *label419
+   82 wait 1e-15
+   83 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+   84 jump *label419 equal *tmp305 false
+   85 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+   86 jump *label420 always
+   87 label *label420
    88 set .sandContainer :buildBlockFromCfgLocal*retval
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label58 (h:*label58)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label58) (h:*label58)
-    * label *label58
+   91 label *label421
+   92 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   93 write null processor5 ":buildBlockFromCfg:config"
+   94 write false processor5 ":buildBlockFromCfg*finished"
+   95 write 2 processor5 "@counter"
+   96 label *label422
+   97 wait 1e-15
+   98 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+   99 jump *label422 equal *tmp305 false
+  100 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  101 jump *label423 always
+  102 label *label423
   103 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label59 (h:*label59)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label59) (h:*label59)
-    * label *label59
+  104 label *label424
+  105 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  106 write null processor5 ":buildBlockFromCfg:config"
+  107 write false processor5 ":buildBlockFromCfg*finished"
+  108 write 2 processor5 "@counter"
+  109 label *label425
+  110 wait 1e-15
+  111 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  112 jump *label425 equal *tmp305 false
+  113 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  114 jump *label426 always
+  115 label *label426
   116 label *label55
   117 label *label56
   118 label *label346
 
   185 write *tmp164 processor5 ".titaniumDrill"
   186 jump *label69 equal .scrap false
   187 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label71 (h:*label71)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label71) (h:*label71)
-    * label *label71
+  188 label *label427
+  189 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  190 write null processor5 ":buildBlockFromCfg:config"
+  191 write false processor5 ":buildBlockFromCfg*finished"
+  192 write 2 processor5 "@counter"
+  193 label *label428
+  194 wait 1e-15
+  195 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  196 jump *label428 equal *tmp305 false
+  197 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  198 jump *label429 always
+  199 label *label429
   200 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label72 (h:*label72)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label72) (h:*label72)
-    * label *label72
+  201 label *label430
+  202 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  203 write null processor5 ":buildBlockFromCfg:config"
+  204 write false processor5 ":buildBlockFromCfg*finished"
+  205 write 2 processor5 "@counter"
+  206 label *label431
+  207 wait 1e-15
+  208 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  209 jump *label431 equal *tmp305 false
+  210 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  211 jump *label432 always
+  212 label *label432
   213 set .sandContainer :buildBlockFromCfgLocal*retval
   214 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   215 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label73 (h:*label73)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label73) (h:*label73)
-    * label *label73
+  216 label *label433
+  217 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  218 write null processor5 ":buildBlockFromCfg:config"
+  219 write false processor5 ":buildBlockFromCfg*finished"
+  220 write 2 processor5 "@counter"
+  221 label *label434
+  222 wait 1e-15
+  223 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  224 jump *label434 equal *tmp305 false
+  225 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  226 jump *label435 always
+  227 label *label435
   228 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label74 (h:*label74)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label74) (h:*label74)
-    * label *label74
+  229 label *label436
+  230 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  231 write null processor5 ":buildBlockFromCfg:config"
+  232 write false processor5 ":buildBlockFromCfg*finished"
+  233 write 2 processor5 "@counter"
+  234 label *label437
+  235 wait 1e-15
+  236 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  237 jump *label437 equal *tmp305 false
+  238 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  239 jump *label438 always
+  240 label *label438
   241 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label75 (h:*label75)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label75) (h:*label75)
-    * label *label75
+  242 label *label439
+  243 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  244 write null processor5 ":buildBlockFromCfg:config"
+  245 write false processor5 ":buildBlockFromCfg*finished"
+  246 write 2 processor5 "@counter"
+  247 label *label440
+  248 wait 1e-15
+  249 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  250 jump *label440 equal *tmp305 false
+  251 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  252 jump *label441 always
+  253 label *label441
   254 label *label69
   255 label *label70
   256 write .sandContainer processor7 ".sandContainer"
 
   526 label *label396
   527 jump *label115 equal .scrap false
   528 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label117 (h:*label117)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label117) (h:*label117)
-    * label *label117
+  529 label *label442
+  530 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  531 write null processor5 ":buildBlockFromCfg:config"
+  532 write false processor5 ":buildBlockFromCfg*finished"
+  533 write 2 processor5 "@counter"
+  534 label *label443
+  535 wait 1e-15
+  536 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  537 jump *label443 equal *tmp305 false
+  538 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  539 jump *label444 always
+  540 label *label444
   541 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
-    * setaddr :buildBlockFromCfgLocal*retaddr *label118 (h:*label118)
-    * call *label39 *invalid :buildBlockFromCfgLocal*retval (m:*label118) (h:*label118)
-    * label *label118
+  542 label *label445
+  543 write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  544 write null processor5 ":buildBlockFromCfg:config"
+  545 write false processor5 ":buildBlockFromCfg*finished"
+  546 write 2 processor5 "@counter"
+  547 label *label446
+  548 wait 1e-15
+  549 read *tmp305 processor5 ":buildBlockFromCfg*finished"
+  550 jump *label446 equal *tmp305 false
+  551 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
+  552 jump *label447 always
+  553 label *label447
   554 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   555 write false processor6 ":setScrapContainer*finished"
   556 write 1 processor6 "@counter"
 
  1074 label *label176
  1075 label *label169
  1076 end
-    * label *label39
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
-    * write null processor5 ":buildBlockFromCfg:config"
-    * write false processor5 ":buildBlockFromCfg*finished"
-    * write 2 processor5 "@counter"
-    * label *label185
-    * wait 1e-15
-    * read *tmp305 processor5 ":buildBlockFromCfg*finished"
-    * jump *label185 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label184 always
-    * label *label184
-    * return :buildBlockFromCfgLocal*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    74 jump *label55 equal .scrap false
    75 set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
    76 label *label418
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   77 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    78 write null processor5 ":buildBlockFromCfg:config"
    79 write false processor5 ":buildBlockFromCfg*finished"
    80 write 2 processor5 "@counter"
 
    89 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
    90 set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    91 label *label421
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+   92 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    93 write null processor5 ":buildBlockFromCfg:config"
    94 write false processor5 ":buildBlockFromCfg*finished"
    95 write 2 processor5 "@counter"
 
    97 wait 1e-15
    98 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    99 jump *label422 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   100 jump *label423 always
   101 label *label423
   102 set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
   103 label *label424
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  104 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
   105 write null processor5 ":buildBlockFromCfg:config"
   106 write false processor5 ":buildBlockFromCfg*finished"
   107 write 2 processor5 "@counter"
 
   109 wait 1e-15
   110 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   111 jump *label425 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   112 jump *label426 always
   113 label *label426
   114 label *label55
 
   184 jump *label69 equal .scrap false
   185 set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   186 label *label427
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  187 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   188 write null processor5 ":buildBlockFromCfg:config"
   189 write false processor5 ":buildBlockFromCfg*finished"
   190 write 2 processor5 "@counter"
 
   192 wait 1e-15
   193 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   194 jump *label428 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   195 jump *label429 always
   196 label *label429
   197 set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   198 label *label430
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  199 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   200 write null processor5 ":buildBlockFromCfg:config"
   201 write false processor5 ":buildBlockFromCfg*finished"
   202 write 2 processor5 "@counter"
 
   211 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
   212 set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   213 label *label433
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  214 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   215 write null processor5 ":buildBlockFromCfg:config"
   216 write false processor5 ":buildBlockFromCfg*finished"
   217 write 2 processor5 "@counter"
 
   219 wait 1e-15
   220 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   221 jump *label434 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   222 jump *label435 always
   223 label *label435
   224 set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   225 label *label436
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  226 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   227 write null processor5 ":buildBlockFromCfg:config"
   228 write false processor5 ":buildBlockFromCfg*finished"
   229 write 2 processor5 "@counter"
 
   231 wait 1e-15
   232 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   233 jump *label437 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   234 jump *label438 always
   235 label *label438
   236 set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   237 label *label439
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  238 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   239 write null processor5 ":buildBlockFromCfg:config"
   240 write false processor5 ":buildBlockFromCfg*finished"
   241 write 2 processor5 "@counter"
 
   243 wait 1e-15
   244 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   245 jump *label440 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   246 jump *label441 always
   247 label *label441
   248 label *label69
 
   521 jump *label115 equal .scrap false
   522 set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   523 label *label442
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  524 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   525 write null processor5 ":buildBlockFromCfg:config"
   526 write false processor5 ":buildBlockFromCfg*finished"
   527 write 2 processor5 "@counter"
 
   529 wait 1e-15
   530 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   531 jump *label443 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   532 jump *label444 always
   533 label *label444
   534 set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   535 label *label445
-    * write :buildBlockFromCfgLocal:cfg processor5 ":buildBlockFromCfg:cfg"
+  536 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   537 write null processor5 ":buildBlockFromCfg:config"
   538 write false processor5 ":buildBlockFromCfg*finished"
   539 write 2 processor5 "@counter"
 
   541 wait 1e-15
   542 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   543 jump *label446 equal *tmp305 false
-    * read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
   544 jump *label447 always
   545 label *label447
   546 write .sandContainer processor6 ":setScrapContainer:scrapContainer"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
    72 write 400 processor5 ".powerTarget"
    73 set .sandContainer .core
    74 jump *label55 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXPRJd-pulverizer26"
    75 label *label418
    76 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    77 write null processor5 ":buildBlockFromCfg:config"
 
    86 label *label420
    87 set .sandContainer :buildBlockFromCfgLocal*retval
    88 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "A~PPJe-overflow-gate27"
    89 label *label421
    90 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    91 write null processor5 ":buildBlockFromCfg:config"
 
    97 jump *label422 equal *tmp305 false
    98 jump *label423 always
    99 label *label423
-    * set :buildBlockFromCfgLocal:cfg "APTJf-power-node28"
   100 label *label424
   101 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
   102 write null processor5 ":buildBlockFromCfg:config"
 
   179 write *tmp164 processor2 ".titaniumDrill"
   180 write *tmp164 processor5 ".titaniumDrill"
   181 jump *label69 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "A©RPJg-unloader29"
   182 label *label427
   183 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   184 write null processor5 ":buildBlockFromCfg:config"
 
   190 jump *label428 equal *tmp305 false
   191 jump *label429 always
   192 label *label429
-    * set :buildBlockFromCfgLocal:cfg "A¨SSJh-container30"
   193 label *label430
   194 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   195 write null processor5 ":buildBlockFromCfg:config"
 
   204 label *label432
   205 set .sandContainer :buildBlockFromCfgLocal*retval
   206 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * set :buildBlockFromCfgLocal:cfg "AXTPJi-pulverizer31"
   207 label *label433
   208 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"
 
   215 jump *label434 equal *tmp305 false
   216 jump *label435 always
   217 label *label435
-    * set :buildBlockFromCfgLocal:cfg "A~RNJj-overflow-gate32"
   218 label *label436
   219 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   220 write null processor5 ":buildBlockFromCfg:config"
 
   226 jump *label437 equal *tmp305 false
   227 jump *label438 always
   228 label *label438
-    * set :buildBlockFromCfgLocal:cfg "A~RLJk-overflow-gate33"
   229 label *label439
   230 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   231 write null processor5 ":buildBlockFromCfg:config"
 
   511 jump *label396 always
   512 label *label396
   513 jump *label115 equal .scrap false
-    * set :buildBlockFromCfgLocal:cfg "AXTNJl-pulverizer34"
   514 label *label442
   515 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   516 write null processor5 ":buildBlockFromCfg:config"
 
   522 jump *label443 equal *tmp305 false
   523 jump *label444 always
   524 label *label444
-    * set :buildBlockFromCfgLocal:cfg "AXTLJm-pulverizer35"
   525 label *label445
   526 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   527 write null processor5 ":buildBlockFromCfg:config"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-36 instructions):
 
    34 wait 1e-15
    35 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    36 jump *label335 equal *tmp305 false
-    * jump *label336 always
    37 label *label336
    38 label *label337
    39 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
 
    44 wait 1e-15
    45 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    46 jump *label338 equal *tmp305 false
-    * jump *label339 always
    47 label *label339
    48 label *label340
    49 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
 
    54 wait 1e-15
    55 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    56 jump *label341 equal *tmp305 false
-    * jump *label342 always
    57 label *label342
    58 label *label343
    59 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
 
    64 wait 1e-15
    65 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    66 jump *label344 equal *tmp305 false
-    * jump *label345 always
    67 label *label345
    68 write 400 processor5 ".powerTarget"
    69 set .sandContainer .core
 
    78 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    79 jump *label419 equal *tmp305 false
    80 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label420 always
    81 label *label420
    82 set .sandContainer :buildBlockFromCfgLocal*retval
    83 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
    90 wait 1e-15
    91 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    92 jump *label422 equal *tmp305 false
-    * jump *label423 always
    93 label *label423
    94 label *label424
    95 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
 
   100 wait 1e-15
   101 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   102 jump *label425 equal *tmp305 false
-    * jump *label426 always
   103 label *label426
   104 label *label55
   105 label *label56
 
   112 wait 1e-15
   113 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   114 jump *label347 equal *tmp305 false
-    * jump *label348 always
   115 label *label348
   116 label *label349
   117 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
 
   122 wait 1e-15
   123 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   124 jump *label350 equal *tmp305 false
-    * jump *label351 always
   125 label *label351
   126 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   127 write false processor5 ":meetTargetCfg:forBuild"
 
   165 read *tmp184 processor5 ":buildFirstTitaniumDrillAt*finished"
   166 jump *label68 equal *tmp184 false
   167 read *tmp164 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label62 always
   168 label *label62
   169 write *tmp164 processor2 ".titaniumDrill"
   170 write *tmp164 processor5 ".titaniumDrill"
 
   178 wait 1e-15
   179 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   180 jump *label428 equal *tmp305 false
-    * jump *label429 always
   181 label *label429
   182 label *label430
   183 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
 
   189 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   190 jump *label431 equal *tmp305 false
   191 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * jump *label432 always
   192 label *label432
   193 set .sandContainer :buildBlockFromCfgLocal*retval
   194 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
 
   201 wait 1e-15
   202 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   203 jump *label434 equal *tmp305 false
-    * jump *label435 always
   204 label *label435
   205 label *label436
   206 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
 
   211 wait 1e-15
   212 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   213 jump *label437 equal *tmp305 false
-    * jump *label438 always
   214 label *label438
   215 label *label439
   216 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
 
   221 wait 1e-15
   222 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   223 jump *label440 equal *tmp305 false
-    * jump *label441 always
   224 label *label441
   225 label *label69
   226 label *label70
 
   234 wait 1e-15
   235 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   236 jump *label353 equal *tmp305 false
-    * jump *label354 always
   237 label *label354
   238 label *label355
   239 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
 
   244 wait 1e-15
   245 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   246 jump *label356 equal *tmp305 false
-    * jump *label357 always
   247 label *label357
   248 label *label358
   249 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
 
   254 wait 1e-15
   255 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   256 jump *label359 equal *tmp305 false
-    * jump *label360 always
   257 label *label360
   258 write 80 processor5 ".graphiteSurplus"
   259 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
 
   320 wait 1e-15
   321 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   322 jump *label362 equal *tmp305 false
-    * jump *label363 always
   323 label *label363
   324 label *label364
   325 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
 
   330 wait 1e-15
   331 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   332 jump *label365 equal *tmp305 false
-    * jump *label366 always
   333 label *label366
   334 label *label367
   335 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
 
   340 wait 1e-15
   341 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   342 jump *label368 equal *tmp305 false
-    * jump *label369 always
   343 label *label369
   344 label *label370
   345 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
 
   350 wait 1e-15
   351 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   352 jump *label371 equal *tmp305 false
-    * jump *label372 always
   353 label *label372
   354 write 1 AÕFFJS-micro-processor9 ".flareTarget"
   355 label *label98
 
   408 wait 1e-15
   409 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   410 jump *label374 equal *tmp305 false
-    * jump *label375 always
   411 label *label375
   412 label *label376
   413 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
 
   418 wait 1e-15
   419 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   420 jump *label377 equal *tmp305 false
-    * jump *label378 always
   421 label *label378
   422 label *label379
   423 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
 
   428 wait 1e-15
   429 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   430 jump *label380 equal *tmp305 false
-    * jump *label381 always
   431 label *label381
   432 label *label382
   433 write "AÜAOJ[-liquid-container17" processor5 ":buildBlockFromCfg:cfg"
 
   438 wait 1e-15
   439 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   440 jump *label383 equal *tmp305 false
-    * jump *label384 always
   441 label *label384
   442 label *label385
   443 write "A¡ASJ\-water-extractor18" processor5 ":buildBlockFromCfg:cfg"
 
   448 wait 1e-15
   449 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   450 jump *label386 equal *tmp305 false
-    * jump *label387 always
   451 label *label387
   452 label *label388
   453 write "AAKJ]-steam-generator19" processor5 ":buildBlockFromCfg:cfg"
 
   458 wait 1e-15
   459 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   460 jump *label389 equal *tmp305 false
-    * jump *label390 always
   461 label *label390
   462 label *label391
   463 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
 
   468 wait 1e-15
   469 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   470 jump *label392 equal *tmp305 false
-    * jump *label393 always
   471 label *label393
   472 write 200 processor5 ".graphiteSurplus"
   473 label *label394
 
   479 wait 1e-15
   480 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   481 jump *label395 equal *tmp305 false
-    * jump *label396 always
   482 label *label396
   483 jump *label115 equal .scrap false
   484 label *label442
 
   490 wait 1e-15
   491 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   492 jump *label443 equal *tmp305 false
-    * jump *label444 always
   493 label *label444
   494 label *label445
   495 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
 
   500 wait 1e-15
   501 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   502 jump *label446 equal *tmp305 false
-    * jump *label447 always
   503 label *label447
   504 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   505 write false processor6 ":setScrapContainer*finished"
 
   519 wait 1e-15
   520 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   521 jump *label398 equal *tmp305 false
-    * jump *label399 always
   522 label *label399
   523 label *label400
   524 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
 
   529 wait 1e-15
   530 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   531 jump *label401 equal *tmp305 false
-    * jump *label402 always
   532 label *label402
   533 label *label403
   534 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
 
   539 wait 1e-15
   540 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   541 jump *label404 equal *tmp305 false
-    * jump *label405 always
   542 label *label405
   543 write 1000 processor5 ".siliconSurplus"
   544 write 20 processor5 ".siliconMonoSurplus"
 
   826 wait 1e-15
   827 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   828 jump *label407 equal *tmp305 false
-    * jump *label408 always
   829 label *label408
   830 write 10 processor5 ".metaglassSurplus"
   831 write 0 AÕFFJS-micro-processor9 ".polyTarget"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   270 write .core AÕFFJS-micro-processor9 ".core"
   271 write bank1 AÕFFJS-micro-processor9 ".bank"
   272 label *label202
-    * read *tmp201 @this "AJEMJJ-graphite-press0"
+  273 set *tmp201 AJEMJJ-graphite-press0
   274 write *tmp201 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
   275 label *label203
   276 label *label206
-    * read *tmp201 @this "AJTJK-battery1"
+  277 set *tmp201 AJTJK-battery1
   278 write *tmp201 AÕFFJS-micro-processor9 "AJTJK-battery1"
   279 label *label207
   280 label *label210
-    * read *tmp201 @this "ALTJL-battery2"
+  281 set *tmp201 ALTJL-battery2
   282 write *tmp201 AÕFFJS-micro-processor9 "ALTJL-battery2"
   283 label *label211
   284 label *label214
-    * read *tmp201 @this "AJRJM-combustion-generator3"
+  285 set *tmp201 AJRJM-combustion-generator3
   286 write *tmp201 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
   287 label *label215
   288 label *label218
-    * read *tmp201 @this "ALMQJN-silicon-smelter4"
+  289 set *tmp201 ALMQJN-silicon-smelter4
   290 write *tmp201 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
   291 label *label219
   292 label *label222
-    * read *tmp201 @this "A{LNJO-inverted-sorter5"
+  293 set *tmp201 A{LNJO-inverted-sorter5
   294 write *tmp201 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
   295 label *label223
   296 label *label226
-    * read *tmp201 @this "A©JNJP-unloader6"
+  297 set *tmp201 A©JNJP-unloader6
   298 write *tmp201 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
   299 label *label227
   300 label *label230
-    * read *tmp201 @this "A{HNJQ-inverted-sorter7"
+  301 set *tmp201 A{HNJQ-inverted-sorter7
   302 write *tmp201 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
   303 label *label231
   304 label *label234
-    * read *tmp201 @this "AJPJR-underflow-gate8"
+  305 set *tmp201 AJPJR-underflow-gate8
   306 write *tmp201 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
   307 label *label235
   308 label *label238
-    * read *tmp201 @this "AÕFFJS-micro-processor9"
+  309 set *tmp201 AÕFFJS-micro-processor9
   310 write *tmp201 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
   311 label *label239
   312 label *label83

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   709 wait 1e-15
   710 read *tmp301 processor5 ":buildRemoteBlock*finished"
   711 jump *label317 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  712 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
   713 label *label318
-    * set .thoriumGenerator :buildRemoteBlockLocal*retval
   714 read :buildRemoteBlockLocal:x processor3 ".node1X"
   715 read :buildRemoteBlockLocal:y processor3 ".node1Y"
   716 label *label319
 
   762 wait 1e-15
   763 read *tmp301 processor5 ":buildRemoteBlock*finished"
   764 jump *label329 equal *tmp301 false
-    * read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
+  765 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
   766 label *label330
-    * set .thoriumBattery :buildRemoteBlockLocal*retval
   767 read :buildRemoteBlockLocal:x processor3 ".containerX"
   768 read :buildRemoteBlockLocal:y processor3 ".containerY"
   769 label *label331

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 ubind @poly
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY *tmp147 .core
-    * label *label49
    20 jump *label48 equal .core null
-    * label *label50
    21 ulocate ore core true @sand *tmp150 *tmp151 *tmp149 *tmp152
    22 op equal .scrap *tmp149 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"
    25 write .scrap processor7 ".scrap"
-    * label *label334
    26 write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCfg:cfg"
    27 write null processor5 ":buildBlockFromCfg:config"
    28 write false processor5 ":buildBlockFromCfg*finished"
 
    31 wait 1e-15
    32 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    33 jump *label335 equal *tmp305 false
-    * label *label336
-    * label *label337
    34 write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"
    35 write null processor5 ":buildBlockFromCfg:config"
    36 write false processor5 ":buildBlockFromCfg*finished"
 
    39 wait 1e-15
    40 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    41 jump *label338 equal *tmp305 false
-    * label *label339
-    * label *label340
    42 write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"
    43 write null processor5 ":buildBlockFromCfg:config"
    44 write false processor5 ":buildBlockFromCfg*finished"
 
    47 wait 1e-15
    48 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    49 jump *label341 equal *tmp305 false
-    * label *label342
-    * label *label343
    50 write "AJRJM-combustion-generator3" processor5 ":buildBlockFromCfg:cfg"
    51 write null processor5 ":buildBlockFromCfg:config"
    52 write false processor5 ":buildBlockFromCfg*finished"
 
    55 wait 1e-15
    56 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    57 jump *label344 equal *tmp305 false
-    * label *label345
    58 write 400 processor5 ".powerTarget"
    59 set .sandContainer .core
    60 jump *label55 equal .scrap false
-    * label *label418
    61 write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:cfg"
    62 write null processor5 ":buildBlockFromCfg:config"
    63 write false processor5 ":buildBlockFromCfg*finished"
 
    67 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    68 jump *label419 equal *tmp305 false
    69 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label420
    70 set .sandContainer :buildBlockFromCfgLocal*retval
    71 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label421
    72 write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCfg:cfg"
    73 write null processor5 ":buildBlockFromCfg:config"
    74 write false processor5 ":buildBlockFromCfg*finished"
 
    77 wait 1e-15
    78 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    79 jump *label422 equal *tmp305 false
-    * label *label423
-    * label *label424
    80 write "APTJf-power-node28" processor5 ":buildBlockFromCfg:cfg"
    81 write null processor5 ":buildBlockFromCfg:config"
    82 write false processor5 ":buildBlockFromCfg*finished"
 
    85 wait 1e-15
    86 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    87 jump *label425 equal *tmp305 false
-    * label *label426
    88 label *label55
-    * label *label56
-    * label *label346
    89 write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromCfg:cfg"
    90 write null processor5 ":buildBlockFromCfg:config"
    91 write false processor5 ":buildBlockFromCfg*finished"
 
    94 wait 1e-15
    95 read *tmp305 processor5 ":buildBlockFromCfg*finished"
    96 jump *label347 equal *tmp305 false
-    * label *label348
-    * label *label349
    97 write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromCfg:cfg"
    98 write null processor5 ":buildBlockFromCfg:config"
    99 write false processor5 ":buildBlockFromCfg*finished"
 
   102 wait 1e-15
   103 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   104 jump *label350 equal *tmp305 false
-    * label *label351
   105 write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg:cfg"
   106 write false processor5 ":meetTargetCfg:forBuild"
   107 write false processor5 ":meetTargetCfg*finished"
 
   128 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   129 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   130 jump *label65 notEqual :buildFirstTitaniumDrill:result false
-    * label *label243
   131 set .ERROR "Cannot locate spot for titanium drill"
   132 stop
-    * label *label244
   133 label *label65
-    * label *label66
   134 write @pneumatic-drill processor2 ".nextBlock"
   135 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
   136 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
   141 read *tmp184 processor5 ":buildFirstTitaniumDrillAt*finished"
   142 jump *label68 equal *tmp184 false
   143 read *tmp164 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label62
   144 write *tmp164 processor2 ".titaniumDrill"
   145 write *tmp164 processor5 ".titaniumDrill"
   146 jump *label69 equal .scrap false
-    * label *label427
   147 write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg"
   148 write null processor5 ":buildBlockFromCfg:config"
   149 write false processor5 ":buildBlockFromCfg*finished"
 
   152 wait 1e-15
   153 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   154 jump *label428 equal *tmp305 false
-    * label *label429
-    * label *label430
   155 write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cfg"
   156 write null processor5 ":buildBlockFromCfg:config"
   157 write false processor5 ":buildBlockFromCfg*finished"
 
   161 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   162 jump *label431 equal *tmp305 false
   163 read :buildBlockFromCfgLocal*retval processor5 ":buildBlockFromCfg*retval"
-    * label *label432
   164 set .sandContainer :buildBlockFromCfgLocal*retval
   165 write :buildBlockFromCfgLocal*retval processor5 ".sandContainer"
-    * label *label433
   166 write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:cfg"
   167 write null processor5 ":buildBlockFromCfg:config"
   168 write false processor5 ":buildBlockFromCfg*finished"
 
   171 wait 1e-15
   172 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   173 jump *label434 equal *tmp305 false
-    * label *label435
-    * label *label436
   174 write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCfg:cfg"
   175 write null processor5 ":buildBlockFromCfg:config"
   176 write false processor5 ":buildBlockFromCfg*finished"
 
   179 wait 1e-15
   180 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   181 jump *label437 equal *tmp305 false
-    * label *label438
-    * label *label439
   182 write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCfg:cfg"
   183 write null processor5 ":buildBlockFromCfg:config"
   184 write false processor5 ":buildBlockFromCfg*finished"
 
   187 wait 1e-15
   188 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   189 jump *label440 equal *tmp305 false
-    * label *label441
   190 label *label69
-    * label *label70
   191 write .sandContainer processor7 ".sandContainer"
-    * label *label352
   192 write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromCfg:cfg"
   193 write null processor5 ":buildBlockFromCfg:config"
   194 write false processor5 ":buildBlockFromCfg*finished"
 
   197 wait 1e-15
   198 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   199 jump *label353 equal *tmp305 false
-    * label *label354
-    * label *label355
   200 write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCfg:cfg"
   201 write null processor5 ":buildBlockFromCfg:config"
   202 write false processor5 ":buildBlockFromCfg*finished"
 
   205 wait 1e-15
   206 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   207 jump *label356 equal *tmp305 false
-    * label *label357
-    * label *label358
   208 write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg"
   209 write null processor5 ":buildBlockFromCfg:config"
   210 write false processor5 ":buildBlockFromCfg*finished"
 
   213 wait 1e-15
   214 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   215 jump *label359 equal *tmp305 false
-    * label *label360
   216 write 80 processor5 ".graphiteSurplus"
   217 write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromCfg:cfg"
   218 write processor10 processor5 ":buildBlockFromCfg:config"
 
   222 wait 1e-15
   223 read *tmp198 processor5 ":buildBlockFromCfg*finished"
   224 jump *label80 equal *tmp198 false
-    * label *label79
   225 write processor1 AÕFFJS-micro-processor9 ".timer"
   226 write processor2 AÕFFJS-micro-processor9 ".display"
   227 write .core AÕFFJS-micro-processor9 ".core"
   228 write bank1 AÕFFJS-micro-processor9 ".bank"
-    * label *label202
   229 set *tmp201 AJEMJJ-graphite-press0
   230 write *tmp201 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press0"
-    * label *label203
-    * label *label206
   231 set *tmp201 AJTJK-battery1
   232 write *tmp201 AÕFFJS-micro-processor9 "AJTJK-battery1"
-    * label *label207
-    * label *label210
   233 set *tmp201 ALTJL-battery2
   234 write *tmp201 AÕFFJS-micro-processor9 "ALTJL-battery2"
-    * label *label211
-    * label *label214
   235 set *tmp201 AJRJM-combustion-generator3
   236 write *tmp201 AÕFFJS-micro-processor9 "AJRJM-combustion-generator3"
-    * label *label215
-    * label *label218
   237 set *tmp201 ALMQJN-silicon-smelter4
   238 write *tmp201 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelter4"
-    * label *label219
-    * label *label222
   239 set *tmp201 A{LNJO-inverted-sorter5
   240 write *tmp201 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorter5"
-    * label *label223
-    * label *label226
   241 set *tmp201 A©JNJP-unloader6
   242 write *tmp201 AÕFFJS-micro-processor9 "A©JNJP-unloader6"
-    * label *label227
-    * label *label230
   243 set *tmp201 A{HNJQ-inverted-sorter7
   244 write *tmp201 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorter7"
-    * label *label231
-    * label *label234
   245 set *tmp201 AJPJR-underflow-gate8
   246 write *tmp201 AÕFFJS-micro-processor9 "AJPJR-underflow-gate8"
-    * label *label235
-    * label *label238
   247 set *tmp201 AÕFFJS-micro-processor9
   248 write *tmp201 AÕFFJS-micro-processor9 "AÕFFJS-micro-processor9"
-    * label *label239
-    * label *label83
   249 write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unloader29"
-    * label *label361
   250 write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:cfg"
   251 write null processor5 ":buildBlockFromCfg:config"
   252 write false processor5 ":buildBlockFromCfg*finished"
 
   255 wait 1e-15
   256 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   257 jump *label362 equal *tmp305 false
-    * label *label363
-    * label *label364
   258 write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg"
   259 write null processor5 ":buildBlockFromCfg:config"
   260 write false processor5 ":buildBlockFromCfg*finished"
 
   263 wait 1e-15
   264 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   265 jump *label365 equal *tmp305 false
-    * label *label366
-    * label *label367
   266 write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCfg:cfg"
   267 write null processor5 ":buildBlockFromCfg:config"
   268 write false processor5 ":buildBlockFromCfg*finished"
 
   271 wait 1e-15
   272 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   273 jump *label368 equal *tmp305 false
-    * label *label369
-    * label *label370
   274 write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg:cfg"
   275 write null processor5 ":buildBlockFromCfg:config"
   276 write false processor5 ":buildBlockFromCfg*finished"
 
   279 wait 1e-15
   280 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   281 jump *label371 equal *tmp305 false
-    * label *label372
   282 write 1 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label98
   283 write 5 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label99
   284 write 85 AÕFFJS-micro-processor9 ".pressTarget"
   285 write 150 AÕFFJS-micro-processor9 ".smelterTarget"
   286 write 30 AÕFFJS-micro-processor9 ".kilnTarget"
   287 write 20 processor5 ".siliconSurplus"
   288 write 2 processor5 ".leadSurplus"
-    * label *label409
   289 write 0 processor5 ":meetTarget:block"
   290 write 0 processor5 ":meetTarget:copper"
   291 write 0 processor5 ":meetTarget:lead"
 
   306 write null processor2 ".nextBlock"
   307 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   308 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label411
   309 label *label101
   310 write false processor5 ":supplyBase*finished"
   311 write 8 processor5 "@counter"
 
   317 jump *label105 greaterThanEq *tmp208 300
   318 jump *label103 always
   319 label *label105
-    * label *label106
-    * label *label102
   320 read *tmp82 AÕFFJS-micro-processor9 ".monos"
   321 jump *label101 lessThan *tmp82 3
   322 label *label103
   323 write 65 processor5 ".siliconSurplus"
-    * label *label373
   324 write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg"
   325 write null processor5 ":buildBlockFromCfg:config"
   326 write false processor5 ":buildBlockFromCfg*finished"
 
   329 wait 1e-15
   330 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   331 jump *label374 equal *tmp305 false
-    * label *label375
-    * label *label376
   332 write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFromCfg:cfg"
   333 write null processor5 ":buildBlockFromCfg:config"
   334 write false processor5 ":buildBlockFromCfg*finished"
 
   337 wait 1e-15
   338 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   339 jump *label377 equal *tmp305 false
-    * label *label378
-    * label *label379
   340 write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"
   341 write null processor5 ":buildBlockFromCfg:config"
   342 write false processor5 ":buildBlockFromCfg*finished"
 
   345 wait 1e-15
   346 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   347 jump *label380 equal *tmp305 false
-    * label *label381
-    * label *label382
   348 write "AÜAOJ[-liquid-container17" processor5 ":buildBlockFromCfg:cfg"
   349 write null processor5 ":buildBlockFromCfg:config"
   350 write false processor5 ":buildBlockFromCfg*finished"
 
   353 wait 1e-15
   354 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   355 jump *label383 equal *tmp305 false
-    * label *label384
-    * label *label385
   356 write "A¡ASJ\-water-extractor18" processor5 ":buildBlockFromCfg:cfg"
   357 write null processor5 ":buildBlockFromCfg:config"
   358 write false processor5 ":buildBlockFromCfg*finished"
 
   361 wait 1e-15
   362 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   363 jump *label386 equal *tmp305 false
-    * label *label387
-    * label *label388
   364 write "AAKJ]-steam-generator19" processor5 ":buildBlockFromCfg:cfg"
   365 write null processor5 ":buildBlockFromCfg:config"
   366 write false processor5 ":buildBlockFromCfg*finished"
 
   369 wait 1e-15
   370 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   371 jump *label389 equal *tmp305 false
-    * label *label390
-    * label *label391
   372 write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg:cfg"
   373 write null processor5 ":buildBlockFromCfg:config"
   374 write false processor5 ":buildBlockFromCfg*finished"
 
   377 wait 1e-15
   378 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   379 jump *label392 equal *tmp305 false
-    * label *label393
   380 write 200 processor5 ".graphiteSurplus"
-    * label *label394
   381 write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFromCfg:cfg"
   382 write null processor5 ":buildBlockFromCfg:config"
   383 write false processor5 ":buildBlockFromCfg*finished"
 
   386 wait 1e-15
   387 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   388 jump *label395 equal *tmp305 false
-    * label *label396
   389 jump *label115 equal .scrap false
-    * label *label442
   390 write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:cfg"
   391 write null processor5 ":buildBlockFromCfg:config"
   392 write false processor5 ":buildBlockFromCfg*finished"
 
   395 wait 1e-15
   396 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   397 jump *label443 equal *tmp305 false
-    * label *label444
-    * label *label445
   398 write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:cfg"
   399 write null processor5 ":buildBlockFromCfg:config"
   400 write false processor5 ":buildBlockFromCfg*finished"
 
   403 wait 1e-15
   404 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   405 jump *label446 equal *tmp305 false
-    * label *label447
   406 write .sandContainer processor6 ":setScrapContainer:scrapContainer"
   407 write false processor6 ":setScrapContainer*finished"
   408 write 1 processor6 "@counter"
 
   411 read *tmp224 processor6 ":setScrapContainer*finished"
   412 jump *label119 equal *tmp224 false
   413 label *label115
-    * label *label116
-    * label *label397
   414 write "A©HFJ`-unloader22" processor5 ":buildBlockFromCfg:cfg"
   415 write null processor5 ":buildBlockFromCfg:config"
   416 write false processor5 ":buildBlockFromCfg*finished"
 
   419 wait 1e-15
   420 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   421 jump *label398 equal *tmp305 false
-    * label *label399
-    * label *label400
   422 write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFromCfg:cfg"
   423 write null processor5 ":buildBlockFromCfg:config"
   424 write false processor5 ":buildBlockFromCfg*finished"
 
   427 wait 1e-15
   428 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   429 jump *label401 equal *tmp305 false
-    * label *label402
-    * label *label403
   430 write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBlockFromCfg:cfg"
   431 write null processor5 ":buildBlockFromCfg:config"
   432 write false processor5 ":buildBlockFromCfg*finished"
 
   435 wait 1e-15
   436 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   437 jump *label404 equal *tmp305 false
-    * label *label405
   438 write 1000 processor5 ".siliconSurplus"
   439 write 20 processor5 ".siliconMonoSurplus"
   440 write 100 processor5 ".metaglassSurplus"
   441 write 4 AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label123
   442 write 3 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label124
-    * label *label412
   443 write 0 processor5 ":meetTarget:block"
   444 write 0 processor5 ":meetTarget:copper"
   445 write 0 processor5 ":meetTarget:lead"
 
   460 write null processor2 ".nextBlock"
   461 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   462 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label414
-    * label *label126
   463 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   464 jump *label128 greaterThanEq *tmp83 2
   465 label *label247
 
   469 wait 1e-15
   470 read *tmp229 processor5 ":supplyBase*finished"
   471 jump *label129 equal *tmp229 false
-    * label *label127
   472 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   473 jump *label247 lessThan *tmp83 2
   474 label *label128
   475 write 2 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label130
-    * label *label131
   476 read *tmp81 AÕFFJS-micro-processor9 ".flares"
   477 jump *label133 greaterThanEq *tmp81 2
   478 label *label248
 
   482 wait 1e-15
   483 read *tmp231 processor5 ":supplyBase*finished"
   484 jump *label134 equal *tmp231 false
-    * label *label132
   485 read *tmp81 AÕFFJS-micro-processor9 ".flares"
   486 jump *label248 lessThan *tmp81 2
   487 label *label133
 
   507 jump *label136 equal *tmp243 false
   508 write false processor3 ":stopLocation*finished"
   509 write 3 processor3 "@counter"
-    * label *label135
   510 write null processor2 ".nextBlock"
   511 write 10 processor5 ".graphiteSurplus"
   512 write 50 processor5 ".metaglassSurplus"
 
   535 jump *label140 equal *tmp253 false
   536 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   537 jump *label141 notEqual :buildThoriumDrill:result false
-    * label *label245
   538 set .ERROR "Cannot locate spot for thorium drill"
   539 stop
-    * label *label246
   540 label *label141
-    * label *label142
   541 write @laser-drill processor5 ":buildBlockAt:block"
   542 read *tmp54 processor3 ".drillX"
   543 write *tmp54 processor5 ":buildBlockAt:x"
 
   555 read .thoriumDrill processor5 ":buildBlockAt*retval"
   556 read :buildRemoteBlockLocal:x processor3 ".water1X"
   557 read :buildRemoteBlockLocal:y processor3 ".water1Y"
-    * label *label310
   558 write "A¡ASJ\-water-extractor18" processor5 ":buildRemoteBlock:cfg"
   559 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   560 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   564 wait 1e-15
   565 read *tmp301 processor5 ":buildRemoteBlock*finished"
   566 jump *label311 equal *tmp301 false
-    * label *label312
   567 read :buildRemoteBlockLocal:x processor3 ".water2X"
   568 read :buildRemoteBlockLocal:y processor3 ".water2Y"
-    * label *label313
   569 write "A¡ASJ\-water-extractor18" processor5 ":buildRemoteBlock:cfg"
   570 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   571 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   575 wait 1e-15
   576 read *tmp301 processor5 ":buildRemoteBlock*finished"
   577 jump *label314 equal *tmp301 false
-    * label *label315
   578 read :buildRemoteBlockLocal:x processor3 ".generatorX"
   579 read :buildRemoteBlockLocal:y processor3 ".generatorY"
-    * label *label316
   580 write "AAKJ]-steam-generator19" processor5 ":buildRemoteBlock:cfg"
   581 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   582 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   587 read *tmp301 processor5 ":buildRemoteBlock*finished"
   588 jump *label317 equal *tmp301 false
   589 read .thoriumGenerator processor5 ":buildRemoteBlock*retval"
-    * label *label318
   590 read :buildRemoteBlockLocal:x processor3 ".node1X"
   591 read :buildRemoteBlockLocal:y processor3 ".node1Y"
-    * label *label319
   592 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   593 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   594 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   598 wait 1e-15
   599 read *tmp301 processor5 ":buildRemoteBlock*finished"
   600 jump *label320 equal *tmp301 false
-    * label *label321
   601 read :buildRemoteBlockLocal:x processor3 ".node2X"
   602 read :buildRemoteBlockLocal:y processor3 ".node2Y"
-    * label *label322
   603 write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cfg"
   604 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   605 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   609 wait 1e-15
   610 read *tmp301 processor5 ":buildRemoteBlock*finished"
   611 jump *label323 equal *tmp301 false
-    * label *label324
   612 read :buildRemoteBlockLocal:x processor3 ".panelX"
   613 read :buildRemoteBlockLocal:y processor3 ".panelY"
-    * label *label325
   614 write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:cfg"
   615 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   616 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   620 wait 1e-15
   621 read *tmp301 processor5 ":buildRemoteBlock*finished"
   622 jump *label326 equal *tmp301 false
-    * label *label327
   623 read :buildRemoteBlockLocal:x processor3 ".batteryX"
   624 read :buildRemoteBlockLocal:y processor3 ".batteryY"
-    * label *label328
   625 write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"
   626 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   627 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   632 read *tmp301 processor5 ":buildRemoteBlock*finished"
   633 jump *label329 equal *tmp301 false
   634 read .thoriumBattery processor5 ":buildRemoteBlock*retval"
-    * label *label330
   635 read :buildRemoteBlockLocal:x processor3 ".containerX"
   636 read :buildRemoteBlockLocal:y processor3 ".containerY"
-    * label *label331
   637 write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg"
   638 write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock:x"
   639 write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock:y"
 
   644 read *tmp301 processor5 ":buildRemoteBlock*finished"
   645 jump *label332 equal *tmp301 false
   646 read :buildRemoteBlockLocal*retval processor5 ":buildRemoteBlock*retval"
-    * label *label333
   647 select .thoriumContainer equal :buildRemoteBlockLocal*retval null .thoriumDrill :buildRemoteBlockLocal*retval
   648 write .thoriumDrill processor2 ".thoriumDrill"
   649 write .thoriumContainer processor2 ".thoriumContainer"
 
   657 wait 1e-15
   658 read *tmp276 processor6 ":setThoriumContainer*finished"
   659 jump *label155 equal *tmp276 false
-    * label *label137
   660 write null processor2 ".nextBlock"
-    * label *label156
   661 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   662 jump *label158 greaterThanEq *tmp83 3
   663 label *label249
 
   667 wait 1e-15
   668 read *tmp278 processor5 ":supplyBase*finished"
   669 jump *label159 equal *tmp278 false
-    * label *label157
   670 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   671 jump *label249 lessThan *tmp83 3
   672 label *label158
   673 op add :setMonoTarget.2:target 4 .scrap
   674 write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".monoTarget"
-    * label *label160
   675 op mul *tmp280 700 .scrap
   676 op add *tmp281 3209 *tmp280
   677 write *tmp281 AÕFFJS-micro-processor9 ".powerTarget"
   678 write 120 processor5 ".siliconMonoSurplus"
   679 write 0 processor5 ".leadSurplus"
-    * label *label406
   680 write "AÁNBJc-multiplicative-reconstructor25" processor5 ":buildBlockFromCfg:cfg"
   681 write null processor5 ":buildBlockFromCfg:config"
   682 write false processor5 ":buildBlockFromCfg*finished"
 
   685 wait 1e-15
   686 read *tmp305 processor5 ":buildBlockFromCfg*finished"
   687 jump *label407 equal *tmp305 false
-    * label *label408
   688 write 10 processor5 ".metaglassSurplus"
   689 write 0 AÕFFJS-micro-processor9 ".polyTarget"
-    * label *label162
   690 write 0 AÕFFJS-micro-processor9 ".flareTarget"
-    * label *label163
   691 write 1 AÕFFJS-micro-processor9 ".megaTarget"
-    * label *label164
-    * label *label415
   692 write 0 processor5 ":meetTarget:block"
   693 write 0 processor5 ":meetTarget:copper"
   694 write 0 processor5 ":meetTarget:lead"
 
   709 write null processor2 ".nextBlock"
   710 write 0 AÕFFJS-micro-processor9 ".siliconReserve"
   711 write 0 AÕFFJS-micro-processor9 ".graphiteReserve"
-    * label *label417
   712 read *tmp83 AÕFFJS-micro-processor9 ".polys"
   713 op sub :tmp *tmp83 1
   714 write :tmp AÕFFJS-micro-processor9 ".polyTarget"
 
   719 label *label166
   720 ucontrol move :x :y
   721 ucontrol payEnter
-    * label *label167
   722 read *tmp84 AÕFFJS-micro-processor9 ".megas"
   723 jump *label166 equal *tmp84 false
-    * label *label168
   724 write true AÕFFJS-micro-processor9 ".finished"
   725 control enabled processor1 false
   726 control enabled processor8 false
 
   729 control enabled processor3 false
   730 control enabled processor5 false
   731 control enabled processor11 false
-    * label *label278
   732 label *label279
   733 ubind @mega
   734 set :flagUnits:firstUnit @unit
-    * label *label280
   735 jump *label279 equal :flagUnits:firstUnit null
-    * label *label281
   736 op add :flagUnits:x .coreX 8
   737 label *label282
   738 ucontrol flag :flagUnits:x
   739 op add :flagUnits:x :flagUnits:x 4
   740 ubind @mega
-    * label *label283
   741 jump *label282 notEqual @unit :flagUnits:firstUnit
-    * label *label284
-    * label *label285
-    * label *label286
   742 label *label287
   743 ubind @poly
   744 set :flagUnits:firstUnit @unit
-    * label *label288
   745 jump *label287 equal :flagUnits:firstUnit null
-    * label *label289
   746 op add :flagUnits:x .coreX 8
   747 label *label290
   748 ucontrol flag :flagUnits:x
   749 op add :flagUnits:x :flagUnits:x 4
   750 ubind @poly
-    * label *label291
   751 jump *label290 notEqual @unit :flagUnits:firstUnit
-    * label *label292
-    * label *label293
-    * label *label294
   752 label *label295
   753 ubind @mono
   754 set :flagUnits:firstUnit @unit
-    * label *label296
   755 jump *label295 equal :flagUnits:firstUnit null
-    * label *label297
   756 op add :flagUnits:x .coreX 8
   757 label *label298
   758 ucontrol flag :flagUnits:x
   759 op add :flagUnits:x :flagUnits:x 4
   760 ubind @mono
-    * label *label299
   761 jump *label298 notEqual @unit :flagUnits:firstUnit
-    * label *label300
-    * label *label301
-    * label *label302
   762 label *label303
   763 ubind @flare
   764 set :flagUnits:firstUnit @unit
-    * label *label304
   765 jump *label303 equal :flagUnits:firstUnit null
-    * label *label305
   766 op add :flagUnits:x .coreX 8
   767 label *label306
   768 ucontrol flag :flagUnits:x
   769 op add :flagUnits:x :flagUnits:x 4
   770 ubind @flare
-    * label *label307
   771 jump *label306 notEqual @unit :flagUnits:firstUnit
-    * label *label308
-    * label *label309
   772 label *label174
   773 op add :lineUpUnits:y .coreY 6
-    * label *label250
   774 ubind @mega
   775 set :lineUpUnits:firstUnit @unit
   776 label *label251
 
   781 jump *label252 equal *tmp323 false
   782 ucontrol stop
   783 label *label252
-    * label *label253
   784 ubind @mega
-    * label *label254
   785 jump *label251 notEqual @unit :lineUpUnits:firstUnit
-    * label *label255
-    * label *label256
   786 op add :lineUpUnits:y .coreY 2
-    * label *label257
   787 ubind @poly
   788 set :lineUpUnits:firstUnit @unit
   789 label *label258
 
   794 jump *label259 equal *tmp323 false
   795 ucontrol stop
   796 label *label259
-    * label *label260
   797 ubind @poly
-    * label *label261
   798 jump *label258 notEqual @unit :lineUpUnits:firstUnit
-    * label *label262
-    * label *label263
   799 op sub :lineUpUnits:y .coreY 2
-    * label *label264
   800 ubind @mono
   801 set :lineUpUnits:firstUnit @unit
   802 label *label265
 
   807 jump *label266 equal *tmp323 false
   808 ucontrol stop
   809 label *label266
-    * label *label267
   810 ubind @mono
-    * label *label268
   811 jump *label265 notEqual @unit :lineUpUnits:firstUnit
-    * label *label269
-    * label *label270
   812 op sub :lineUpUnits:y .coreY 6
-    * label *label271
   813 ubind @flare
   814 set :lineUpUnits:firstUnit @unit
   815 label *label272
 
   820 jump *label273 equal *tmp323 false
   821 ucontrol stop
   822 label *label273
-    * label *label274
   823 ubind @flare
-    * label *label275
   824 jump *label272 notEqual @unit :lineUpUnits:firstUnit
-    * label *label276
-    * label *label277
-    * label *label175
   825 jump *label174 always
-    * label *label176
-    * label *label169
   826 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-1 instructions):
 
   314 read *tmp207 processor5 ":supplyBase*finished"
   315 jump *label104 equal *tmp207 false
   316 sensor *tmp208 AJTJK-battery1 @totalPower
-    * jump *label105 greaterThanEq *tmp208 300
-    * jump *label103 always
+  317 jump *label103 lessThan *tmp208 300
   318 label *label105
   319 read *tmp82 AÕFFJS-micro-processor9 ".monos"
   320 jump *label101 lessThan *tmp82 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   315 jump *label104 equal *tmp207 false
   316 sensor *tmp208 AJTJK-battery1 @totalPower
   317 jump *label103 lessThan *tmp208 300
-    * label *label105
   318 read *tmp82 AÕFFJS-micro-processor9 ".monos"
   319 jump *label101 lessThan *tmp82 3
   320 label *label103

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-1 instructions):
 
   821 ubind @flare
   822 jump *label272 notEqual @unit :lineUpUnits:firstUnit
   823 jump *label174 always
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    16 label *label48
    17 ubind @poly
    18 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp147 .core
+   19 ulocate building core false @copper .coreX .coreY 0 .core
    20 jump *label48 equal .core null
-    * ulocate ore core true @sand *tmp150 *tmp151 *tmp149 *tmp152
+   21 ulocate ore core true @sand 0 0 *tmp149 0
    22 op equal .scrap *tmp149 false
    23 write .scrap processor2 ".scrap"
    24 write .scrap processor5 ".scrap"

Final code before resolving virtual instructions:

        label *label43                                               BaseBuilder.mnd: require "Display.mnd" remote display;
    0:  read *tmp33 processor2 "*signature"                          ...
    1:  jump *label43 notEqual *tmp33 "0:v1"                         ...
        label *label44                                               BaseBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
    2:  read *tmp72 processor3 "*signature"                          ...
    3:  jump *label44 notEqual *tmp72 "3290b8c661787058:v1"          ...
        label *label45                                               BaseBuilder.mnd: require "MonoController.mnd" remote monoController;
    4:  read *tmp98 processor7 "*signature"                          ...
    5:  jump *label45 notEqual *tmp98 "0:v1"                         ...
        label *label46                                               BaseBuilder.mnd: require "PolyController.mnd" remote polyController;
    6:  read *tmp101 processor6 "*signature"                         ...
    7:  jump *label46 notEqual *tmp101 "c7cc7825e82cc574:v1"         ...
        label *label47                                               BaseBuilder.mnd: require "BuilderController.mnd" remote builderController;
    8:  read *tmp144 processor5 "*signature"                         ...
    9:  jump *label47 notEqual *tmp144 "b1abbf1945b2011d:v1"         ...
   10:  set .ERROR ""                                                BaseBuilder.mnd: remote var ERROR = "";
        label *label48                                               BaseBuilder.mnd: do
   11:  ubind @poly                                                  BaseBuilder.mnd: builder = ubind(@poly);
   12:  set .builder @unit                                           ...
   13:  ulocate building core false @copper .coreX .coreY 0 .core    BaseBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   14:  jump *label48 equal .core null                               BaseBuilder.mnd: do
   15:  ulocate ore core true @sand 0 0 *tmp149 0                    BaseBuilder.mnd: scrap = !ulocate(:ore, @sand);
   16:  op equal .scrap *tmp149 false                                ...
   17:  write .scrap processor2 ".scrap"                             BaseBuilder.mnd: display.scrap = scrap;
   18:  write .scrap processor5 ".scrap"                             BaseBuilder.mnd: builderController.scrap = scrap;
   19:  write .scrap processor7 ".scrap"                             BaseBuilder.mnd: monoController.scrap = scrap;
   20:  write "AJEMJJ-graphite-press0" processor5 ":buildBlockFromCf BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   21:  write null processor5 ":buildBlockFromCfg:config"            ...
   22:  write false processor5 ":buildBlockFromCfg*finished"         ...
   23:  write 2 processor5 "@counter"                                ...
        label *label335                                              ...
   24:  wait 1e-15                                                   ...
   25:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   26:  jump *label335 equal *tmp305 false                           ...
   27:  write "AJTJK-battery1" processor5 ":buildBlockFromCfg:cfg"  ...
   28:  write null processor5 ":buildBlockFromCfg:config"            ...
   29:  write false processor5 ":buildBlockFromCfg*finished"         ...
   30:  write 2 processor5 "@counter"                                ...
        label *label338                                              ...
   31:  wait 1e-15                                                   ...
   32:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   33:  jump *label338 equal *tmp305 false                           ...
   34:  write "ALTJL-battery2" processor5 ":buildBlockFromCfg:cfg"  ...
   35:  write null processor5 ":buildBlockFromCfg:config"            ...
   36:  write false processor5 ":buildBlockFromCfg*finished"         ...
   37:  write 2 processor5 "@counter"                                ...
        label *label341                                              ...
   38:  wait 1e-15                                                   ...
   39:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   40:  jump *label341 equal *tmp305 false                           ...
   41:  write "AJRJM-combustion-generator3" processor5 ":buildBlock ...
   42:  write null processor5 ":buildBlockFromCfg:config"            ...
   43:  write false processor5 ":buildBlockFromCfg*finished"         ...
   44:  write 2 processor5 "@counter"                                ...
        label *label344                                              ...
   45:  wait 1e-15                                                   ...
   46:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   47:  jump *label344 equal *tmp305 false                           ...
   48:  write 400 processor5 ".powerTarget"                          BaseBuilder.mnd: builderController.powerTarget = 400;
   49:  set .sandContainer .core                                     BaseBuilder.mnd: sandContainer = core;
   50:  jump *label55 equal .scrap false                             BaseBuilder.mnd: if scrap then
   51:  write "AXPRJd-pulverizer26" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   52:  write null processor5 ":buildBlockFromCfg:config"            ...
   53:  write false processor5 ":buildBlockFromCfg*finished"         ...
   54:  write 2 processor5 "@counter"                                ...
        label *label419                                              ...
   55:  wait 1e-15                                                   ...
   56:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   57:  jump *label419 equal *tmp305 false                           ...
   58:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
   59:  set .sandContainer :buildBlockFromCfgLocal*retval            BaseBuilder.mnd: sandContainer = buildBlockFromCfgLocal(PULVERIZER1);
   60:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai BaseBuilder.mnd: builderController.sandContainer = sandContainer;
   61:  write "A~PPJe-overflow-gate27" processor5 ":buildBlockFromCf BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   62:  write null processor5 ":buildBlockFromCfg:config"            ...
   63:  write false processor5 ":buildBlockFromCfg*finished"         ...
   64:  write 2 processor5 "@counter"                                ...
        label *label422                                              ...
   65:  wait 1e-15                                                   ...
   66:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   67:  jump *label422 equal *tmp305 false                           ...
   68:  write "APTJf-power-node28" processor5 ":buildBlockFromCfg:c ...
   69:  write null processor5 ":buildBlockFromCfg:config"            ...
   70:  write false processor5 ":buildBlockFromCfg*finished"         ...
   71:  write 2 processor5 "@counter"                                ...
        label *label425                                              ...
   72:  wait 1e-15                                                   ...
   73:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   74:  jump *label425 equal *tmp305 false                           ...
        label *label55                                               BaseBuilder.mnd: if scrap then
   75:  write "ALMQJN-silicon-smelter4" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
   76:  write null processor5 ":buildBlockFromCfg:config"            ...
   77:  write false processor5 ":buildBlockFromCfg*finished"         ...
   78:  write 2 processor5 "@counter"                                ...
        label *label347                                              ...
   79:  wait 1e-15                                                   ...
   80:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   81:  jump *label347 equal *tmp305 false                           ...
   82:  write "A{LNJO-inverted-sorter5" processor5 ":buildBlockFromC ...
   83:  write null processor5 ":buildBlockFromCfg:config"            ...
   84:  write false processor5 ":buildBlockFromCfg*finished"         ...
   85:  write 2 processor5 "@counter"                                ...
        label *label350                                              ...
   86:  wait 1e-15                                                   ...
   87:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
   88:  jump *label350 equal *tmp305 false                           ...
   89:  write "AJJJ~-pneumatic-drill52" processor5 ":meetTargetCfg: BaseBuilder.mnd: builderController.meetTargetCfg(cfg, false);
   90:  write false processor5 ":meetTargetCfg:forBuild"             ...
   91:  write false processor5 ":meetTargetCfg*finished"             ...
   92:  write 7 processor5 "@counter"                                ...
        label *label63                                               ...
   93:  wait 1e-15                                                   ...
   94:  read *tmp167 processor5 ":meetTargetCfg*finished"            ...
   95:  jump *label63 equal *tmp167 false                            ...
   96:  write @ore-titanium processor2 ".nextBlock"                  BaseBuilder.mnd: display.nextBlock = @ore-titanium;
   97:  write .coreX processor3 ":findDrillLocation:x"               BaseBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   98:  write .coreY processor3 ":findDrillLocation:y"               ...
   99:  write @unit processor3 ":findDrillLocation:unit"             ...
  100:  write @titanium processor3 ":findDrillLocation:item"         ...
  101:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  102:  write 2 processor3 ":findDrillLocation:size"                 ...
  103:  write 4 processor3 ":findDrillLocation:limit"                ...
  104:  write false processor3 ":findDrillLocation*finished"         ...
  105:  write 1 processor3 "@counter"                                ...
        label *label64                                               ...
  106:  wait 1e-15                                                   ...
  107:  read *tmp178 processor3 ":findDrillLocation*finished"        ...
  108:  jump *label64 equal *tmp178 false                            ...
  109:  read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocat ...
  110:  read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocat ...
  111:  read :buildFirstTitaniumDrill:result processor3 ":findDrillL ...
  112:  jump *label65 notEqual :buildFirstTitaniumDrill:result false BaseBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  113:  set .ERROR "Cannot locate spot for titanium drill"           BaseBuilder.mnd: ERROR = error;
  114:  stop                                                         BaseBuilder.mnd: stopProcessor();
        label *label65                                               BaseBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  115:  write @pneumatic-drill processor2 ".nextBlock"               BaseBuilder.mnd: display.nextBlock = @pneumatic-drill;
  116:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit BaseBuilder.mnd: return builderController.buildFirstTitaniumDrillAt(dx, dy);
  117:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
  118:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
  119:  write 3 processor5 "@counter"                                ...
        label *label68                                               ...
  120:  wait 1e-15                                                   ...
  121:  read *tmp184 processor5 ":buildFirstTitaniumDrillAt*finished ...
  122:  jump *label68 equal *tmp184 false                            ...
  123:  read *tmp164 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
  124:  write *tmp164 processor2 ".titaniumDrill"                    BaseBuilder.mnd: display.titaniumDrill = titaniumDrill;
  125:  write *tmp164 processor5 ".titaniumDrill"                    BaseBuilder.mnd: builderController.titaniumDrill = titaniumDrill;
  126:  jump *label69 equal .scrap false                             BaseBuilder.mnd: if scrap then
  127:  write "A©RPJg-unloader29" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  128:  write null processor5 ":buildBlockFromCfg:config"            ...
  129:  write false processor5 ":buildBlockFromCfg*finished"         ...
  130:  write 2 processor5 "@counter"                                ...
        label *label428                                              ...
  131:  wait 1e-15                                                   ...
  132:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  133:  jump *label428 equal *tmp305 false                           ...
  134:  write "A¨SSJh-container30" processor5 ":buildBlockFromCfg:cf ...
  135:  write null processor5 ":buildBlockFromCfg:config"            ...
  136:  write false processor5 ":buildBlockFromCfg*finished"         ...
  137:  write 2 processor5 "@counter"                                ...
        label *label431                                              ...
  138:  wait 1e-15                                                   ...
  139:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  140:  jump *label431 equal *tmp305 false                           ...
  141:  read :buildBlockFromCfgLocal*retval processor5 ":buildBlockF ...
  142:  set .sandContainer :buildBlockFromCfgLocal*retval            BaseBuilder.mnd: sandContainer = buildBlockFromCfgLocal(CONTAINER_A);
  143:  write :buildBlockFromCfgLocal*retval processor5 ".sandContai BaseBuilder.mnd: builderController.sandContainer = sandContainer;
  144:  write "AXTPJi-pulverizer31" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  145:  write null processor5 ":buildBlockFromCfg:config"            ...
  146:  write false processor5 ":buildBlockFromCfg*finished"         ...
  147:  write 2 processor5 "@counter"                                ...
        label *label434                                              ...
  148:  wait 1e-15                                                   ...
  149:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  150:  jump *label434 equal *tmp305 false                           ...
  151:  write "A~RNJj-overflow-gate32" processor5 ":buildBlockFromCf ...
  152:  write null processor5 ":buildBlockFromCfg:config"            ...
  153:  write false processor5 ":buildBlockFromCfg*finished"         ...
  154:  write 2 processor5 "@counter"                                ...
        label *label437                                              ...
  155:  wait 1e-15                                                   ...
  156:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  157:  jump *label437 equal *tmp305 false                           ...
  158:  write "A~RLJk-overflow-gate33" processor5 ":buildBlockFromCf ...
  159:  write null processor5 ":buildBlockFromCfg:config"            ...
  160:  write false processor5 ":buildBlockFromCfg*finished"         ...
  161:  write 2 processor5 "@counter"                                ...
        label *label440                                              ...
  162:  wait 1e-15                                                   ...
  163:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  164:  jump *label440 equal *tmp305 false                           ...
        label *label69                                               BaseBuilder.mnd: if scrap then
  165:  write .sandContainer processor7 ".sandContainer"             BaseBuilder.mnd: monoController.sandContainer = sandContainer;
  166:  write "A{HNJQ-inverted-sorter7" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  167:  write null processor5 ":buildBlockFromCfg:config"            ...
  168:  write false processor5 ":buildBlockFromCfg*finished"         ...
  169:  write 2 processor5 "@counter"                                ...
        label *label353                                              ...
  170:  wait 1e-15                                                   ...
  171:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  172:  jump *label353 equal *tmp305 false                           ...
  173:  write "AJPJR-underflow-gate8" processor5 ":buildBlockFromCf ...
  174:  write null processor5 ":buildBlockFromCfg:config"            ...
  175:  write false processor5 ":buildBlockFromCfg*finished"         ...
  176:  write 2 processor5 "@counter"                                ...
        label *label356                                              ...
  177:  wait 1e-15                                                   ...
  178:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  179:  jump *label356 equal *tmp305 false                           ...
  180:  write "A©JNJP-unloader6" processor5 ":buildBlockFromCfg:cfg" ...
  181:  write null processor5 ":buildBlockFromCfg:config"            ...
  182:  write false processor5 ":buildBlockFromCfg*finished"         ...
  183:  write 2 processor5 "@counter"                                ...
        label *label359                                              ...
  184:  wait 1e-15                                                   ...
  185:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  186:  jump *label359 equal *tmp305 false                           ...
  187:  write 80 processor5 ".graphiteSurplus"                       BaseBuilder.mnd: builderController.graphiteSurplus = 80;
  188:  write "AÕFFJS-micro-processor9" processor5 ":buildBlockFromC BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, config);
  189:  write processor10 processor5 ":buildBlockFromCfg:config"     ...
  190:  write false processor5 ":buildBlockFromCfg*finished"         ...
  191:  write 2 processor5 "@counter"                                ...
        label *label80                                               ...
  192:  wait 1e-15                                                   ...
  193:  read *tmp198 processor5 ":buildBlockFromCfg*finished"        ...
  194:  jump *label80 equal *tmp198 false                            ...
  195:  write processor1 AÕFFJS-micro-processor9 ".timer"            BaseBuilder.mnd: processor.timer = timer;
  196:  write processor2 AÕFFJS-micro-processor9 ".display"          BaseBuilder.mnd: processor.display = display;
  197:  write .core AÕFFJS-micro-processor9 ".core"                  BaseBuilder.mnd: processor.core = core;
  198:  write bank1 AÕFFJS-micro-processor9 ".bank"                  BaseBuilder.mnd: processor.bank = bank1;
  199:  set *tmp201 AJEMJJ-graphite-press0                           BaseBuilder.mnd: processor.write(@this.read(block), block);
  200:  write *tmp201 AÕFFJS-micro-processor9 "AJEMJJ-graphite-press ...
  201:  set *tmp201 AJTJK-battery1                                  ...
  202:  write *tmp201 AÕFFJS-micro-processor9 "AJTJK-battery1"      ...
  203:  set *tmp201 ALTJL-battery2                                  ...
  204:  write *tmp201 AÕFFJS-micro-processor9 "ALTJL-battery2"      ...
  205:  set *tmp201 AJRJM-combustion-generator3                     ...
  206:  write *tmp201 AÕFFJS-micro-processor9 "AJRJM-combustion-gen ...
  207:  set *tmp201 ALMQJN-silicon-smelter4                          ...
  208:  write *tmp201 AÕFFJS-micro-processor9 "ALMQJN-silicon-smelte ...
  209:  set *tmp201 A{LNJO-inverted-sorter5                          ...
  210:  write *tmp201 AÕFFJS-micro-processor9 "A{LNJO-inverted-sorte ...
  211:  set *tmp201 A©JNJP-unloader6                                 ...
  212:  write *tmp201 AÕFFJS-micro-processor9 "A©JNJP-unloader6"     ...
  213:  set *tmp201 A{HNJQ-inverted-sorter7                          ...
  214:  write *tmp201 AÕFFJS-micro-processor9 "A{HNJQ-inverted-sorte ...
  215:  set *tmp201 AJPJR-underflow-gate8                           ...
  216:  write *tmp201 AÕFFJS-micro-processor9 "AJPJR-underflow-gate ...
  217:  set *tmp201 AÕFFJS-micro-processor9                          ...
  218:  write *tmp201 AÕFFJS-micro-processor9 "AÕFFJS-micro-processo ...
  219:  write A©RPJg-unloader29 AÕFFJS-micro-processor9 "A©RPJg-unlo BaseBuilder.mnd: processor.write(@this.read(UNLOADER_A), UNLOADER_A);
  220:  write "AFHJT-power-node10" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  221:  write null processor5 ":buildBlockFromCfg:config"            ...
  222:  write false processor5 ":buildBlockFromCfg*finished"         ...
  223:  write 2 processor5 "@counter"                                ...
        label *label362                                              ...
  224:  wait 1e-15                                                   ...
  225:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  226:  jump *label362 equal *tmp305 false                           ...
  227:  write "A©FJJU-unloader11" processor5 ":buildBlockFromCfg:cfg ...
  228:  write null processor5 ":buildBlockFromCfg:config"            ...
  229:  write false processor5 ":buildBlockFromCfg*finished"         ...
  230:  write 2 processor5 "@counter"                                ...
        label *label365                                              ...
  231:  wait 1e-15                                                   ...
  232:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  233:  jump *label365 equal *tmp305 false                           ...
  234:  write "A~DJJV-overflow-gate12" processor5 ":buildBlockFromCf ...
  235:  write null processor5 ":buildBlockFromCfg:config"            ...
  236:  write false processor5 ":buildBlockFromCfg*finished"         ...
  237:  write 2 processor5 "@counter"                                ...
        label *label368                                              ...
  238:  wait 1e-15                                                   ...
  239:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  240:  jump *label368 equal *tmp305 false                           ...
  241:  write "A¾BFLW-air-factory13" processor5 ":buildBlockFromCfg: ...
  242:  write null processor5 ":buildBlockFromCfg:config"            ...
  243:  write false processor5 ":buildBlockFromCfg*finished"         ...
  244:  write 2 processor5 "@counter"                                ...
        label *label371                                              ...
  245:  wait 1e-15                                                   ...
  246:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  247:  jump *label371 equal *tmp305 false                           ...
  248:  write 1 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  249:  write 5 AÕFFJS-micro-processor9 ".monoTarget"                BaseBuilder.mnd: processor.monoTarget = target;
  250:  write 85 AÕFFJS-micro-processor9 ".pressTarget"              BaseBuilder.mnd: processor.pressTarget = 85;
  251:  write 150 AÕFFJS-micro-processor9 ".smelterTarget"           BaseBuilder.mnd: processor.smelterTarget = 150;
  252:  write 30 AÕFFJS-micro-processor9 ".kilnTarget"               BaseBuilder.mnd: processor.kilnTarget = 30;
  253:  write 20 processor5 ".siliconSurplus"                        BaseBuilder.mnd: builderController.siliconSurplus = 20;
  254:  write 2 processor5 ".leadSurplus"                            BaseBuilder.mnd: builderController.leadSurplus = 2;
  255:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  256:  write 0 processor5 ":meetTarget:copper"                      ...
  257:  write 0 processor5 ":meetTarget:lead"                        ...
  258:  write 0 processor5 ":meetTarget:graphite"                    ...
  259:  write 0 processor5 ":meetTarget:silicon"                     ...
  260:  write 0 processor5 ":meetTarget:titanium"                    ...
  261:  write 0 processor5 ":meetTarget:metaglass"                   ...
  262:  write 0 processor5 ":meetTarget:thorium"                     ...
  263:  write false processor5 ":meetTarget:forBuild"                ...
  264:  write true processor5 ":meetTarget:isNoTarget"               ...
  265:  write false processor5 ":meetTarget*finished"                ...
  266:  write 6 processor5 "@counter"                                ...
        label *label410                                              ...
  267:  wait 1e-15                                                   ...
  268:  read *tmp317 processor5 ":meetTarget*finished"               ...
  269:  jump *label410 equal *tmp317 false                           ...
  270:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  271:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  272:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  273:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
        label *label101                                              BaseBuilder.mnd: do
  274:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  275:  write 8 processor5 "@counter"                                ...
        label *label104                                              ...
  276:  wait 1e-15                                                   ...
  277:  read *tmp207 processor5 ":supplyBase*finished"               ...
  278:  jump *label104 equal *tmp207 false                           ...
  279:  sensor *tmp208 AJTJK-battery1 @totalPower                   BaseBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  280:  jump *label103 lessThan *tmp208 300                          ...
  281:  read *tmp82 AÕFFJS-micro-processor9 ".monos"                 BaseBuilder.mnd: while processor.monos < 3;
  282:  jump *label101 lessThan *tmp82 3                             BaseBuilder.mnd: do
        label *label103                                              ...
  283:  write 65 processor5 ".siliconSurplus"                        BaseBuilder.mnd: builderController.siliconSurplus = 65;
  284:  write "A©NHJX-unloader14" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  285:  write null processor5 ":buildBlockFromCfg:config"            ...
  286:  write false processor5 ":buildBlockFromCfg*finished"         ...
  287:  write 2 processor5 "@counter"                                ...
        label *label374                                              ...
  288:  wait 1e-15                                                   ...
  289:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  290:  jump *label374 equal *tmp305 false                           ...
  291:  write "A{NJJY-inverted-sorter15" processor5 ":buildBlockFrom ...
  292:  write null processor5 ":buildBlockFromCfg:config"            ...
  293:  write false processor5 ":buildBlockFromCfg*finished"         ...
  294:  write 2 processor5 "@counter"                                ...
        label *label377                                              ...
  295:  wait 1e-15                                                   ...
  296:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  297:  jump *label377 equal *tmp305 false                           ...
  298:  write "ANOMJZ-kiln16" processor5 ":buildBlockFromCfg:cfg"    ...
  299:  write null processor5 ":buildBlockFromCfg:config"            ...
  300:  write false processor5 ":buildBlockFromCfg*finished"         ...
  301:  write 2 processor5 "@counter"                                ...
        label *label380                                              ...
  302:  wait 1e-15                                                   ...
  303:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  304:  jump *label380 equal *tmp305 false                           ...
  305:  write "AÜAOJ[-liquid-container17" processor5 ":buildBlockFro ...
  306:  write null processor5 ":buildBlockFromCfg:config"            ...
  307:  write false processor5 ":buildBlockFromCfg*finished"         ...
  308:  write 2 processor5 "@counter"                                ...
        label *label383                                              ...
  309:  wait 1e-15                                                   ...
  310:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  311:  jump *label383 equal *tmp305 false                           ...
  312:  write "A¡ASJ\-water-extractor18" processor5 ":buildBlockFrom ...
  313:  write null processor5 ":buildBlockFromCfg:config"            ...
  314:  write false processor5 ":buildBlockFromCfg*finished"         ...
  315:  write 2 processor5 "@counter"                                ...
        label *label386                                              ...
  316:  wait 1e-15                                                   ...
  317:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  318:  jump *label386 equal *tmp305 false                           ...
  319:  write "AAKJ]-steam-generator19" processor5 ":buildBlockFrom ...
  320:  write null processor5 ":buildBlockFromCfg:config"            ...
  321:  write false processor5 ":buildBlockFromCfg*finished"         ...
  322:  write 2 processor5 "@counter"                                ...
        label *label389                                              ...
  323:  wait 1e-15                                                   ...
  324:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  325:  jump *label389 equal *tmp305 false                           ...
  326:  write "AKFRJ_-multi-press21" processor5 ":buildBlockFromCfg: ...
  327:  write null processor5 ":buildBlockFromCfg:config"            ...
  328:  write false processor5 ":buildBlockFromCfg*finished"         ...
  329:  write 2 processor5 "@counter"                                ...
        label *label392                                              ...
  330:  wait 1e-15                                                   ...
  331:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  332:  jump *label392 equal *tmp305 false                           ...
  333:  write 200 processor5 ".graphiteSurplus"                      BaseBuilder.mnd: builderController.graphiteSurplus = 200;
  334:  write "ALQIJ^-silicon-smelter20" processor5 ":buildBlockFrom BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  335:  write null processor5 ":buildBlockFromCfg:config"            ...
  336:  write false processor5 ":buildBlockFromCfg*finished"         ...
  337:  write 2 processor5 "@counter"                                ...
        label *label395                                              ...
  338:  wait 1e-15                                                   ...
  339:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  340:  jump *label395 equal *tmp305 false                           ...
  341:  jump *label115 equal .scrap false                            BaseBuilder.mnd: if scrap then
  342:  write "AXTNJl-pulverizer34" processor5 ":buildBlockFromCfg:c BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  343:  write null processor5 ":buildBlockFromCfg:config"            ...
  344:  write false processor5 ":buildBlockFromCfg*finished"         ...
  345:  write 2 processor5 "@counter"                                ...
        label *label443                                              ...
  346:  wait 1e-15                                                   ...
  347:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  348:  jump *label443 equal *tmp305 false                           ...
  349:  write "AXTLJm-pulverizer35" processor5 ":buildBlockFromCfg:c ...
  350:  write null processor5 ":buildBlockFromCfg:config"            ...
  351:  write false processor5 ":buildBlockFromCfg*finished"         ...
  352:  write 2 processor5 "@counter"                                ...
        label *label446                                              ...
  353:  wait 1e-15                                                   ...
  354:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  355:  jump *label446 equal *tmp305 false                           ...
  356:  write .sandContainer processor6 ":setScrapContainer:scrapCon BaseBuilder.mnd: polyController.setScrapContainer(sandContainer);
  357:  write false processor6 ":setScrapContainer*finished"         ...
  358:  write 1 processor6 "@counter"                                ...
        label *label119                                              ...
  359:  wait 1e-15                                                   ...
  360:  read *tmp224 processor6 ":setScrapContainer*finished"        ...
  361:  jump *label119 equal *tmp224 false                           ...
        label *label115                                              BaseBuilder.mnd: if scrap then
  362:  write "A©HFJ`-unloader22" processor5 ":buildBlockFromCfg:cfg BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  363:  write null processor5 ":buildBlockFromCfg:config"            ...
  364:  write false processor5 ":buildBlockFromCfg*finished"         ...
  365:  write 2 processor5 "@counter"                                ...
        label *label398                                              ...
  366:  wait 1e-15                                                   ...
  367:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  368:  jump *label398 equal *tmp305 false                           ...
  369:  write "A{HDJa-inverted-sorter23" processor5 ":buildBlockFrom ...
  370:  write null processor5 ":buildBlockFromCfg:config"            ...
  371:  write false processor5 ":buildBlockFromCfg*finished"         ...
  372:  write 2 processor5 "@counter"                                ...
        label *label401                                              ...
  373:  wait 1e-15                                                   ...
  374:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  375:  jump *label401 equal *tmp305 false                           ...
  376:  write "AÀF@Lb-additive-reconstructor24" processor5 ":buildBl ...
  377:  write null processor5 ":buildBlockFromCfg:config"            ...
  378:  write false processor5 ":buildBlockFromCfg*finished"         ...
  379:  write 2 processor5 "@counter"                                ...
        label *label404                                              ...
  380:  wait 1e-15                                                   ...
  381:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  382:  jump *label404 equal *tmp305 false                           ...
  383:  write 1000 processor5 ".siliconSurplus"                      BaseBuilder.mnd: builderController.siliconSurplus = 1000;
  384:  write 20 processor5 ".siliconMonoSurplus"                    BaseBuilder.mnd: builderController.siliconMonoSurplus = 20;
  385:  write 100 processor5 ".metaglassSurplus"                     BaseBuilder.mnd: builderController.metaglassSurplus = 100;
  386:  write 4 AÕFFJS-micro-processor9 ".monoTarget"                BaseBuilder.mnd: processor.monoTarget = target;
  387:  write 3 AÕFFJS-micro-processor9 ".polyTarget"                BaseBuilder.mnd: processor.polyTarget = target;
  388:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  389:  write 0 processor5 ":meetTarget:copper"                      ...
  390:  write 0 processor5 ":meetTarget:lead"                        ...
  391:  write 0 processor5 ":meetTarget:graphite"                    ...
  392:  write 0 processor5 ":meetTarget:silicon"                     ...
  393:  write 0 processor5 ":meetTarget:titanium"                    ...
  394:  write 0 processor5 ":meetTarget:metaglass"                   ...
  395:  write 0 processor5 ":meetTarget:thorium"                     ...
  396:  write false processor5 ":meetTarget:forBuild"                ...
  397:  write true processor5 ":meetTarget:isNoTarget"               ...
  398:  write false processor5 ":meetTarget*finished"                ...
  399:  write 6 processor5 "@counter"                                ...
        label *label413                                              ...
  400:  wait 1e-15                                                   ...
  401:  read *tmp317 processor5 ":meetTarget*finished"               ...
  402:  jump *label413 equal *tmp317 false                           ...
  403:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  404:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  405:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  406:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
  407:  read *tmp83 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 2 do
  408:  jump *label128 greaterThanEq *tmp83 2                        ...
        label *label247                                              ...
  409:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  410:  write 8 processor5 "@counter"                                ...
        label *label129                                              ...
  411:  wait 1e-15                                                   ...
  412:  read *tmp229 processor5 ":supplyBase*finished"               ...
  413:  jump *label129 equal *tmp229 false                           ...
  414:  read *tmp83 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 2 do
  415:  jump *label247 lessThan *tmp83 2                             ...
        label *label128                                              ...
  416:  write 2 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  417:  read *tmp81 AÕFFJS-micro-processor9 ".flares"                BaseBuilder.mnd: while processor.flares < 2 do
  418:  jump *label133 greaterThanEq *tmp81 2                        ...
        label *label248                                              ...
  419:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  420:  write 8 processor5 "@counter"                                ...
        label *label134                                              ...
  421:  wait 1e-15                                                   ...
  422:  read *tmp231 processor5 ":supplyBase*finished"               ...
  423:  jump *label134 equal *tmp231 false                           ...
  424:  read *tmp81 AÕFFJS-micro-processor9 ".flares"                BaseBuilder.mnd: while processor.flares < 2 do
  425:  jump *label248 lessThan *tmp81 2                             ...
        label *label133                                              ...
  426:  write @ore-titanium processor2 ".nextBlock"                  BaseBuilder.mnd: display.nextBlock = @ore-titanium;
  427:  ubind @flare                                                 BaseBuilder.mnd: ubind(@flare);
  428:  read :blocksBuildTitaniumDrills:current processor3 ".locatio BaseBuilder.mnd: var current = oreLocator.locations;
  429:  write .coreX processor3 ":findDrillLocation:x"               BaseBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  430:  write .coreY processor3 ":findDrillLocation:y"               ...
  431:  write @unit processor3 ":findDrillLocation:unit"             ...
  432:  write @titanium processor3 ":findDrillLocation:item"         ...
  433:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  434:  write 4 processor3 ":findDrillLocation:size"                 ...
  435:  write 1000000000 processor3 ":findDrillLocation:limit"       ...
  436:  write false processor3 ":findDrillLocation*finished"         ...
  437:  write 1 processor3 "@counter"                                ...
  438:  ubind .builder                                               BaseBuilder.mnd: ubind(builder);
  439:  write :blocksBuildTitaniumDrills:current processor5 ":buildT BaseBuilder.mnd: builderController.buildTitaniumDrills(current);
  440:  write false processor5 ":buildTitaniumDrills*finished"       ...
  441:  write 5 processor5 "@counter"                                ...
        label *label136                                              ...
  442:  wait 1e-15                                                   ...
  443:  read *tmp243 processor5 ":buildTitaniumDrills*finished"      ...
  444:  jump *label136 equal *tmp243 false                           ...
  445:  write false processor3 ":stopLocation*finished"              BaseBuilder.mnd: async(oreLocator.stopLocation());
  446:  write 3 processor3 "@counter"                                ...
  447:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  448:  write 10 processor5 ".graphiteSurplus"                       BaseBuilder.mnd: builderController.graphiteSurplus = 10;
  449:  write 50 processor5 ".metaglassSurplus"                      BaseBuilder.mnd: builderController.metaglassSurplus = 50;
  450:  write @ore-thorium processor2 ".nextBlock"                   BaseBuilder.mnd: display.nextBlock = @ore-thorium;
  451:  write .coreX processor3 ":layoutThoriumDrill:x"              BaseBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  452:  write .coreY processor3 ":layoutThoriumDrill:y"              ...
  453:  write @unit processor3 ":layoutThoriumDrill:unit"            ...
  454:  write 7 processor3 ":layoutThoriumDrill:limit"               ...
  455:  write false processor3 ":layoutThoriumDrill*finished"        ...
  456:  write 2 processor3 "@counter"                                ...
        label *label138                                              ...
  457:  wait 1e-15                                                   ...
  458:  read *tmp248 processor3 ":layoutThoriumDrill*finished"       ...
  459:  jump *label138 equal *tmp248 false                           ...
  460:  write "AJJJ~-laser-drill52" processor5 ":meetTargetCfg:cfg" BaseBuilder.mnd: builderController.meetTargetCfg(LASER_DRILL, false);
  461:  write false processor5 ":meetTargetCfg:forBuild"             ...
  462:  write false processor5 ":meetTargetCfg*finished"             ...
  463:  write 7 processor5 "@counter"                                ...
        label *label139                                              ...
  464:  wait 1e-15                                                   ...
  465:  read *tmp252 processor5 ":meetTargetCfg*finished"            ...
  466:  jump *label139 equal *tmp252 false                           ...
        label *label140                                              BaseBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  467:  wait 1e-15                                                   ...
  468:  read *tmp253 processor3 ":layoutThoriumDrill*finished"       ...
  469:  jump *label140 equal *tmp253 false                           ...
  470:  read :buildThoriumDrill:result processor3 ":layoutThoriumDri ...
  471:  jump *label141 notEqual :buildThoriumDrill:result false      BaseBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  472:  set .ERROR "Cannot locate spot for thorium drill"            BaseBuilder.mnd: ERROR = error;
  473:  stop                                                         BaseBuilder.mnd: stopProcessor();
        label *label141                                              BaseBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  474:  write @laser-drill processor5 ":buildBlockAt:block"          BaseBuilder.mnd: thoriumDrill = builderController.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  475:  read *tmp54 processor3 ".drillX"                             ...
  476:  write *tmp54 processor5 ":buildBlockAt:x"                    ...
  477:  read *tmp55 processor3 ".drillY"                             ...
  478:  write *tmp55 processor5 ":buildBlockAt:y"                    ...
  479:  write null processor5 ":buildBlockAt:rotation"               ...
  480:  write 0 processor5 ":buildBlockAt:config"                    ...
  481:  write -1 processor5 ":buildBlockAt:index"                    ...
  482:  write false processor5 ":buildBlockAt*finished"              ...
  483:  write 1 processor5 "@counter"                                ...
        label *label144                                              ...
  484:  wait 1e-15                                                   ...
  485:  read *tmp263 processor5 ":buildBlockAt*finished"             ...
  486:  jump *label144 equal *tmp263 false                           ...
  487:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  488:  read :buildRemoteBlockLocal:x processor3 ".water1X"          BaseBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  489:  read :buildRemoteBlockLocal:y processor3 ".water1Y"          ...
  490:  write "A¡ASJ\-water-extractor18" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  491:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  492:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  493:  write false processor5 ":buildRemoteBlock*finished"          ...
  494:  write 4 processor5 "@counter"                                ...
        label *label311                                              ...
  495:  wait 1e-15                                                   ...
  496:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  497:  jump *label311 equal *tmp301 false                           ...
  498:  read :buildRemoteBlockLocal:x processor3 ".water2X"          BaseBuilder.mnd: buildRemoteBlockLocal(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  499:  read :buildRemoteBlockLocal:y processor3 ".water2Y"          ...
  500:  write "A¡ASJ\-water-extractor18" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  501:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  502:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  503:  write false processor5 ":buildRemoteBlock*finished"          ...
  504:  write 4 processor5 "@counter"                                ...
        label *label314                                              ...
  505:  wait 1e-15                                                   ...
  506:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  507:  jump *label314 equal *tmp301 false                           ...
  508:  read :buildRemoteBlockLocal:x processor3 ".generatorX"       BaseBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  509:  read :buildRemoteBlockLocal:y processor3 ".generatorY"       ...
  510:  write "AAKJ]-steam-generator19" processor5 ":buildRemoteBlo BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  511:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  512:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  513:  write false processor5 ":buildRemoteBlock*finished"          ...
  514:  write 4 processor5 "@counter"                                ...
        label *label317                                              ...
  515:  wait 1e-15                                                   ...
  516:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  517:  jump *label317 equal *tmp301 false                           ...
  518:  read .thoriumGenerator processor5 ":buildRemoteBlock*retval" BaseBuilder.mnd: thoriumGenerator = buildRemoteBlockLocal(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  519:  read :buildRemoteBlockLocal:x processor3 ".node1X"           BaseBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  520:  read :buildRemoteBlockLocal:y processor3 ".node1Y"           ...
  521:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  522:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  523:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  524:  write false processor5 ":buildRemoteBlock*finished"          ...
  525:  write 4 processor5 "@counter"                                ...
        label *label320                                              ...
  526:  wait 1e-15                                                   ...
  527:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  528:  jump *label320 equal *tmp301 false                           ...
  529:  read :buildRemoteBlockLocal:x processor3 ".node2X"           BaseBuilder.mnd: buildRemoteBlockLocal(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  530:  read :buildRemoteBlockLocal:y processor3 ".node2Y"           ...
  531:  write "AFHJT-power-node10" processor5 ":buildRemoteBlock:cf BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  532:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  533:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  534:  write false processor5 ":buildRemoteBlock*finished"          ...
  535:  write 4 processor5 "@counter"                                ...
        label *label323                                              ...
  536:  wait 1e-15                                                   ...
  537:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  538:  jump *label323 equal *tmp301 false                           ...
  539:  read :buildRemoteBlockLocal:x processor3 ".panelX"           BaseBuilder.mnd: buildRemoteBlockLocal(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  540:  read :buildRemoteBlockLocal:y processor3 ".panelY"           ...
  541:  write "AJJJ~-solar-panel52" processor5 ":buildRemoteBlock:c BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  542:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  543:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  544:  write false processor5 ":buildRemoteBlock*finished"          ...
  545:  write 4 processor5 "@counter"                                ...
        label *label326                                              ...
  546:  wait 1e-15                                                   ...
  547:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  548:  jump *label326 equal *tmp301 false                           ...
  549:  read :buildRemoteBlockLocal:x processor3 ".batteryX"         BaseBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  550:  read :buildRemoteBlockLocal:y processor3 ".batteryY"         ...
  551:  write "AJTJK-battery1" processor5 ":buildRemoteBlock:cfg"   BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  552:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  553:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  554:  write false processor5 ":buildRemoteBlock*finished"          ...
  555:  write 4 processor5 "@counter"                                ...
        label *label329                                              ...
  556:  wait 1e-15                                                   ...
  557:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  558:  jump *label329 equal *tmp301 false                           ...
  559:  read .thoriumBattery processor5 ":buildRemoteBlock*retval"   BaseBuilder.mnd: thoriumBattery = buildRemoteBlockLocal(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  560:  read :buildRemoteBlockLocal:x processor3 ".containerX"       BaseBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  561:  read :buildRemoteBlockLocal:y processor3 ".containerY"       ...
  562:  write "A¨JJJ~-container52" processor5 ":buildRemoteBlock:cfg BaseBuilder.mnd: builderController.buildRemoteBlock(cfg, x, y);
  563:  write :buildRemoteBlockLocal:x processor5 ":buildRemoteBlock ...
  564:  write :buildRemoteBlockLocal:y processor5 ":buildRemoteBlock ...
  565:  write false processor5 ":buildRemoteBlock*finished"          ...
  566:  write 4 processor5 "@counter"                                ...
        label *label332                                              ...
  567:  wait 1e-15                                                   ...
  568:  read *tmp301 processor5 ":buildRemoteBlock*finished"         ...
  569:  jump *label332 equal *tmp301 false                           ...
  570:  read :buildRemoteBlockLocal*retval processor5 ":buildRemoteB BaseBuilder.mnd: thoriumContainer = buildRemoteBlockLocal(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  571:  select .thoriumContainer equal :buildRemoteBlockLocal*retval BaseBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  572:  write .thoriumDrill processor2 ".thoriumDrill"               BaseBuilder.mnd: display.thoriumDrill = thoriumDrill;
  573:  write .thoriumContainer processor2 ".thoriumContainer"       BaseBuilder.mnd: display.thoriumContainer = thoriumContainer;
  574:  write .thoriumBattery processor5 ".thoriumBattery"           BaseBuilder.mnd: builderController.thoriumBattery = thoriumBattery;
  575:  write .thoriumContainer processor5 ".thoriumContainer"       BaseBuilder.mnd: builderController.thoriumContainer = thoriumContainer;
  576:  write .thoriumGenerator processor5 ".thoriumGenerator"       BaseBuilder.mnd: builderController.thoriumGenerator = thoriumGenerator;
  577:  write .thoriumContainer processor6 ":setThoriumContainer:con BaseBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  578:  write false processor6 ":setThoriumContainer*finished"       ...
  579:  write 2 processor6 "@counter"                                ...
        label *label155                                              ...
  580:  wait 1e-15                                                   ...
  581:  read *tmp276 processor6 ":setThoriumContainer*finished"      ...
  582:  jump *label155 equal *tmp276 false                           ...
  583:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  584:  read *tmp83 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 3 do
  585:  jump *label158 greaterThanEq *tmp83 3                        ...
        label *label249                                              ...
  586:  write false processor5 ":supplyBase*finished"                BaseBuilder.mnd: builderController.supplyBase();
  587:  write 8 processor5 "@counter"                                ...
        label *label159                                              ...
  588:  wait 1e-15                                                   ...
  589:  read *tmp278 processor5 ":supplyBase*finished"               ...
  590:  jump *label159 equal *tmp278 false                           ...
  591:  read *tmp83 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: while processor.polys < 3 do
  592:  jump *label249 lessThan *tmp83 3                             ...
        label *label158                                              ...
  593:  op add :setMonoTarget.2:target 4 .scrap                      BaseBuilder.mnd: setMonoTarget(4 + scrap);
  594:  write :setMonoTarget.2:target AÕFFJS-micro-processor9 ".mono BaseBuilder.mnd: processor.monoTarget = target;
  595:  op mul *tmp280 700 .scrap                                    BaseBuilder.mnd: processor.powerTarget = 3209 + 700 * scrap;
  596:  op add *tmp281 3209 *tmp280                                  ...
  597:  write *tmp281 AÕFFJS-micro-processor9 ".powerTarget"         ...
  598:  write 120 processor5 ".siliconMonoSurplus"                   BaseBuilder.mnd: builderController.siliconMonoSurplus = 120;
  599:  write 0 processor5 ".leadSurplus"                            BaseBuilder.mnd: builderController.leadSurplus = 0;
  600:  write "AÁNBJc-multiplicative-reconstructor25" processor5 ":b BaseBuilder.mnd: return builderController.buildBlockFromCfg(cfg, null);
  601:  write null processor5 ":buildBlockFromCfg:config"            ...
  602:  write false processor5 ":buildBlockFromCfg*finished"         ...
  603:  write 2 processor5 "@counter"                                ...
        label *label407                                              ...
  604:  wait 1e-15                                                   ...
  605:  read *tmp305 processor5 ":buildBlockFromCfg*finished"        ...
  606:  jump *label407 equal *tmp305 false                           ...
  607:  write 10 processor5 ".metaglassSurplus"                      BaseBuilder.mnd: builderController.metaglassSurplus = 10;
  608:  write 0 AÕFFJS-micro-processor9 ".polyTarget"                BaseBuilder.mnd: processor.polyTarget = target;
  609:  write 0 AÕFFJS-micro-processor9 ".flareTarget"               BaseBuilder.mnd: processor.flareTarget = target;
  610:  write 1 AÕFFJS-micro-processor9 ".megaTarget"                BaseBuilder.mnd: processor.megaTarget = target;
  611:  write 0 processor5 ":meetTarget:block"                       BaseBuilder.mnd: builderController.meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  612:  write 0 processor5 ":meetTarget:copper"                      ...
  613:  write 0 processor5 ":meetTarget:lead"                        ...
  614:  write 0 processor5 ":meetTarget:graphite"                    ...
  615:  write 0 processor5 ":meetTarget:silicon"                     ...
  616:  write 0 processor5 ":meetTarget:titanium"                    ...
  617:  write 0 processor5 ":meetTarget:metaglass"                   ...
  618:  write 0 processor5 ":meetTarget:thorium"                     ...
  619:  write false processor5 ":meetTarget:forBuild"                ...
  620:  write true processor5 ":meetTarget:isNoTarget"               ...
  621:  write false processor5 ":meetTarget*finished"                ...
  622:  write 6 processor5 "@counter"                                ...
        label *label416                                              ...
  623:  wait 1e-15                                                   ...
  624:  read *tmp317 processor5 ":meetTarget*finished"               ...
  625:  jump *label416 equal *tmp317 false                           ...
  626:  write 0 processor2 ".totalTargets"                           BaseBuilder.mnd: display.totalTargets = 0;
  627:  write null processor2 ".nextBlock"                           BaseBuilder.mnd: display.nextBlock = null;
  628:  write 0 AÕFFJS-micro-processor9 ".siliconReserve"            BaseBuilder.mnd: processor.siliconReserve = 0;
  629:  write 0 AÕFFJS-micro-processor9 ".graphiteReserve"           BaseBuilder.mnd: processor.graphiteReserve = 0;
  630:  read *tmp83 AÕFFJS-micro-processor9 ".polys"                 BaseBuilder.mnd: var tmp = processor.polys - 1;
  631:  op sub :tmp *tmp83 1                                         ...
  632:  write :tmp AÕFFJS-micro-processor9 ".polyTarget"             BaseBuilder.mnd: processor.polyTarget = tmp;
  633:  write :tmp AÕFFJS-micro-processor9 ".polys"                  BaseBuilder.mnd: processor.polys = tmp;
  634:  write :tmp processor2 ".polys"                               BaseBuilder.mnd: display.polys = tmp;
  635:  sensor :x AÁNBJc-multiplicative-reconstructor25 @x           BaseBuilder.mnd: var x = multiplicative_rec.@x;
  636:  sensor :y AÁNBJc-multiplicative-reconstructor25 @y           BaseBuilder.mnd: var y = multiplicative_rec.@y;
        label *label166                                              BaseBuilder.mnd: do
  637:  ucontrol move :x :y 0 0 0                                    BaseBuilder.mnd: move(x, y);
  638:  ucontrol payEnter 0 0 0 0 0                                  BaseBuilder.mnd: payEnter();
  639:  read *tmp84 AÕFFJS-micro-processor9 ".megas"                 BaseBuilder.mnd: while !processor.megas;
  640:  jump *label166 equal *tmp84 false                            BaseBuilder.mnd: do
  641:  write true AÕFFJS-micro-processor9 ".finished"               BaseBuilder.mnd: processor.finished = true;
  642:  control enabled processor1 false 0 0 0                       BaseBuilder.mnd: timer.enabled = false;
  643:  control enabled processor8 false 0 0 0                       BaseBuilder.mnd: flareController.enabled = false;
  644:  control enabled processor7 false 0 0 0                       BaseBuilder.mnd: monoController.enabled = false;
  645:  control enabled processor6 false 0 0 0                       BaseBuilder.mnd: polyController.enabled = false;
  646:  control enabled processor3 false 0 0 0                       BaseBuilder.mnd: oreLocator.enabled = false;
  647:  control enabled processor5 false 0 0 0                       BaseBuilder.mnd: builderController.enabled = false;
  648:  control enabled processor11 false 0 0 0                      BaseBuilder.mnd: measurements.enabled = false;
        label *label279                                              BaseBuilder.mnd: do
  649:  ubind @mega                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  650:  set :flagUnits:firstUnit @unit                               ...
  651:  jump *label279 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  652:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label282                                              BaseBuilder.mnd: do
  653:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  654:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  655:  ubind @mega                                                  BaseBuilder.mnd: ubind(unit);
  656:  jump *label282 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label287                                              BaseBuilder.mnd: do
  657:  ubind @poly                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  658:  set :flagUnits:firstUnit @unit                               ...
  659:  jump *label287 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  660:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label290                                              BaseBuilder.mnd: do
  661:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  662:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  663:  ubind @poly                                                  BaseBuilder.mnd: ubind(unit);
  664:  jump *label290 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label295                                              BaseBuilder.mnd: do
  665:  ubind @mono                                                  BaseBuilder.mnd: firstUnit = ubind(unit);
  666:  set :flagUnits:firstUnit @unit                               ...
  667:  jump *label295 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  668:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label298                                              BaseBuilder.mnd: do
  669:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  670:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  671:  ubind @mono                                                  BaseBuilder.mnd: ubind(unit);
  672:  jump *label298 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label303                                              BaseBuilder.mnd: do
  673:  ubind @flare                                                 BaseBuilder.mnd: firstUnit = ubind(unit);
  674:  set :flagUnits:firstUnit @unit                               ...
  675:  jump *label303 equal :flagUnits:firstUnit null               BaseBuilder.mnd: do
  676:  op add :flagUnits:x .coreX 8                                 BaseBuilder.mnd: var x = coreX + 8;
        label *label306                                              BaseBuilder.mnd: do
  677:  ucontrol flag :flagUnits:x 0 0 0 0                           BaseBuilder.mnd: flag(x);
  678:  op add :flagUnits:x :flagUnits:x 4                           BaseBuilder.mnd: x += 4;
  679:  ubind @flare                                                 BaseBuilder.mnd: ubind(unit);
  680:  jump *label306 notEqual @unit :flagUnits:firstUnit           BaseBuilder.mnd: do
        label *label174                                              BaseBuilder.mnd: while true do
  681:  op add :lineUpUnits:y .coreY 6                               BaseBuilder.mnd: lineUpUnits(coreY + 6, @mega);
  682:  ubind @mega                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  683:  set :lineUpUnits:firstUnit @unit                             ...
        label *label251                                              BaseBuilder.mnd: do
  684:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  685:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  686:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  687:  sensor *tmp323 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  688:  jump *label252 equal *tmp323 false                           ...
  689:  ucontrol stop 0 0 0 0 0                                      ...
        label *label252                                              ...
  690:  ubind @mega                                                  BaseBuilder.mnd: ubind(unit);
  691:  jump *label251 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  692:  op add :lineUpUnits:y .coreY 2                               BaseBuilder.mnd: lineUpUnits(coreY + 2, @poly);
  693:  ubind @poly                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  694:  set :lineUpUnits:firstUnit @unit                             ...
        label *label258                                              BaseBuilder.mnd: do
  695:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  696:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  697:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  698:  sensor *tmp323 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  699:  jump *label259 equal *tmp323 false                           ...
  700:  ucontrol stop 0 0 0 0 0                                      ...
        label *label259                                              ...
  701:  ubind @poly                                                  BaseBuilder.mnd: ubind(unit);
  702:  jump *label258 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  703:  op sub :lineUpUnits:y .coreY 2                               BaseBuilder.mnd: lineUpUnits(coreY - 2, @mono);
  704:  ubind @mono                                                  BaseBuilder.mnd: var firstUnit = ubind(unit);
  705:  set :lineUpUnits:firstUnit @unit                             ...
        label *label265                                              BaseBuilder.mnd: do
  706:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  707:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  708:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  709:  sensor *tmp323 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  710:  jump *label266 equal *tmp323 false                           ...
  711:  ucontrol stop 0 0 0 0 0                                      ...
        label *label266                                              ...
  712:  ubind @mono                                                  BaseBuilder.mnd: ubind(unit);
  713:  jump *label265 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  714:  op sub :lineUpUnits:y .coreY 6                               BaseBuilder.mnd: lineUpUnits(coreY - 6, @flare);
  715:  ubind @flare                                                 BaseBuilder.mnd: var firstUnit = ubind(unit);
  716:  set :lineUpUnits:firstUnit @unit                             ...
        label *label272                                              BaseBuilder.mnd: do
  717:  sensor :lineUpUnits:x @unit @flag                            BaseBuilder.mnd: var x = @unit.@flag;
  718:  ucontrol itemDrop @air 1000 0 0 0                            BaseBuilder.mnd: itemDrop(@air, 1000);
  719:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            BaseBuilder.mnd: move(x, y);
  720:  sensor *tmp323 @unit @mining                                 BaseBuilder.mnd: if @unit.@mining then stop(); end;
  721:  jump *label273 equal *tmp323 false                           ...
  722:  ucontrol stop 0 0 0 0 0                                      ...
        label *label273                                              ...
  723:  ubind @flare                                                 BaseBuilder.mnd: ubind(unit);
  724:  jump *label272 notEqual @unit :lineUpUnits:firstUnit         BaseBuilder.mnd: do
  725:  jump *label174 always 0 0                                    BaseBuilder.mnd: while true do


Performance: parsed in 801 ms, compiled in 343 ms, optimized in 1,385 ms, run in 22 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp33 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
