set *tmp9 @thisx
set *tmp10 @thisy
op mul *tmp11 10000 *tmp10
op add .PROCESSOR_ID *tmp9 *tmp11
set .PROC_ID_INDEX 334
set .PROC_STATE_INDEX 335
set .start 0
set .display null
set .memory null
print "Mandelbrot Generator"
set :fn1:n @links
jump 22 lessThanEq :fn1:n 0
op sub :fn1:n :fn1:n 1
getlink :fn1:block :fn1:n
print "\nFound: "
print :fn1:block
sensor :fn1:type :fn1:block @type
jump 19 notEqual @large-logic-display :fn1:type
set .display :fn1:block
jump 21 notEqual @memory-bank :fn1:type
set .memory :fn1:block
jump 12 greaterThan :fn1:n 0
print "\nDisplay: "
print .display
op and :fn1:foundAll 1 .display
print "\nMemory: "
print .memory
op and :fn1:foundAll :fn1:foundAll .memory
printflush null
jump 7 equal :fn1:foundAll false
jump 43 greaterThanEq .PROC_STATE_INDEX 512
read *tmp124 .memory .PROC_ID_INDEX
jump 35 notEqual *tmp124 .PROCESSOR_ID
write 0 .memory .PROC_STATE_INDEX
jump 43 always 0 0
read *tmp130 .memory .PROC_ID_INDEX
jump 40 notEqual *tmp130 0
write .PROCESSOR_ID .memory .PROC_ID_INDEX
write 0 .memory .PROC_STATE_INDEX
jump 43 always 0 0
op add .PROC_ID_INDEX .PROC_ID_INDEX 2
op add .PROC_STATE_INDEX .PROC_STATE_INDEX 2
jump 31 lessThan .PROC_STATE_INDEX 512
read *tmp0 .memory 64
jump 30 equal .start *tmp0
read *tmp0 .memory 64
set .start *tmp0
read *tmp1 .memory 65
set .stop *tmp1
jump 62 greaterThanEq .PROC_STATE_INDEX 512
read *tmp124 .memory .PROC_ID_INDEX
jump 54 notEqual *tmp124 .PROCESSOR_ID
write *tmp0 .memory .PROC_STATE_INDEX
jump 62 always 0 0
read *tmp130 .memory .PROC_ID_INDEX
jump 59 notEqual *tmp130 0
write .PROCESSOR_ID .memory .PROC_ID_INDEX
write *tmp0 .memory .PROC_STATE_INDEX
jump 62 always 0 0
op add .PROC_ID_INDEX .PROC_ID_INDEX 2
op add .PROC_STATE_INDEX .PROC_STATE_INDEX 2
jump 50 lessThan .PROC_STATE_INDEX 512
read .ZOOM .memory 68
op div *tmp26 -88 .ZOOM
read *tmp2 .memory 66
op add .OFFSET_X *tmp26 *tmp2
read *tmp3 .memory 67
op add .OFFSET_Y *tmp26 *tmp3
read .JULIA .memory 69
read .JULIA_X .memory 70
read .JULIA_Y .memory 71
read .PALETTE .memory 72
op greaterThan .SMOOTH .PALETTE 1
set :line 8
set :increment 8
set :next_increment 16
op rand *tmp31 0.1 0
wait *tmp31
set :lines 0
op mul *tmp32 17 :line
op mod :x *tmp32 176
op add :position :x 158
read *tmp36 .memory :position
jump 862 notEqual *tmp36 0
write .PROCESSOR_ID .memory :position
set :y 0
op div *tmp42 :x .ZOOM
op add :fn2:zx *tmp42 .OFFSET_X
op div *tmp44 :y .ZOOM
op add :fn2:zy *tmp44 .OFFSET_Y
jump 94 equal .JULIA false
set :fn2:cx .JULIA_X
set :fn2:cy .JULIA_Y
jump 110 always 0 0
set :fn2:cx :fn2:zx
set :fn2:cy :fn2:zy
op sub *tmp47 :fn2:zx 0.25
op len :fn2:p *tmp47 :fn2:zy
op mul *tmp49 2 :fn2:p
op mul *tmp50 *tmp49 :fn2:p
op sub *tmp51 :fn2:p *tmp50
op add *tmp52 *tmp51 0.25
jump 105 greaterThan :fn2:zx *tmp52
set *tmp41 63
jump 813 always 0 0
op add *tmp55 :fn2:zx 1
op len *tmp56 *tmp55 :fn2:zy
jump 110 greaterThan *tmp56 0.25
set *tmp41 63
jump 813 always 0 0
set :fn2:i 0
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
set :fn2:i 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 1 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 2 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 3 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 4 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 5 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 6 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 7 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 8 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 9 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 10 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 11 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 12 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 13 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 14 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 15 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 16 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 17 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 18 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 19 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 20 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 21 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 22 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 23 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 24 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 25 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 26 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 27 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 28 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 29 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 30 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 31 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 32 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 33 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 34 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 35 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 36 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 37 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 38 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 39 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 40 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 41 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 42 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 43 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 44 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 45 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 46 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 47 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 48 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 49 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 50 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 51 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 52 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 53 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 54 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 55 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 56 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 57 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 58 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 59 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 60 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 61 1
set :fn2:x1 :fn2:zx
op mul *tmp59 :fn2:zx :fn2:zx
op mul *tmp60 :fn2:zy :fn2:zy
op sub *tmp61 *tmp59 *tmp60
op add :fn2:zx *tmp61 :fn2:cx
op mul *tmp63 2 :fn2:x1
op mul *tmp64 *tmp63 :fn2:zy
op add :fn2:zy *tmp64 :fn2:cy
op len :fn2:dist :fn2:zx :fn2:zy
jump 804 greaterThanEq :fn2:dist 64
op add :fn2:i 62 1
op mul *tmp69 .SMOOTH 63
jump 812 greaterThanEq :fn2:i *tmp69
op log *tmp72 :fn2:dist 0
op mul *tmp73 *tmp72 0.36067376022224085
op log *tmp74 *tmp73 0
op mul *tmp75 *tmp74 1.4426950408889634
op sub :fn2:correction 4 *tmp75
op add :fn2:i :fn2:i :fn2:correction
set *tmp41 :fn2:i
jump 852 equal .SMOOTH false
jump 817 notEqual *tmp41 63
draw color 0 0 0 255 0 0
jump 854 always 0 0
jump 830 notEqual .PALETTE 2
op sub *tmp82 32 *tmp41
op abs *tmp83 *tmp82 0
op mul *tmp84 7 *tmp83
op sub :fn3:r 255 *tmp84
op sub *tmp86 *tmp41 32
op abs *tmp87 *tmp86 0
op mul *tmp88 6 *tmp87
op sub :fn3:g 240 *tmp88
op mul *tmp92 4 *tmp83
op add :fn3:b 120 *tmp92
draw color :fn3:r :fn3:g :fn3:b 255 0 0
jump 854 always 0 0
jump 842 notEqual .PALETTE 3
op div *tmp95 *tmp41 0.175
op sin *tmp96 *tmp95 0
op mul :fn3:r 255 *tmp96
op cos *tmp100 *tmp95 0
op mul :fn3:g 255 *tmp100
op sub *tmp102 *tmp41 32
op abs *tmp103 *tmp102 0
op mul *tmp104 4 *tmp103
op add :fn3:b 100 *tmp104
draw color :fn3:r :fn3:g :fn3:b 255 0 0
jump 854 always 0 0
jump 848 notEqual .PALETTE 4
op mul :fn3:r 4 *tmp41
op mul *tmp107 1.5 *tmp41
op add :fn3:g 96 *tmp107
draw color :fn3:r :fn3:g 0 255 0 0
jump 854 always 0 0
op mul *tmp109 4 *tmp41
op sub :fn3:r 255 *tmp109
draw color :fn3:r :fn3:r 0 255 0 0
jump 854 always 0 0
read *tmp112 .memory *tmp41
draw col *tmp112 0 0 0 0 0
draw rect :x :y 1 1 0 0
drawflush .display
read *tmp114 .memory :position
jump 862 notEqual *tmp114 .PROCESSOR_ID
read *tmp1 .memory 65
jump 869 notEqual .stop *tmp1
op add :y :y 1
jump 86 lessThan :y 176
op add :line :line :increment
jump 867 lessThanEq :line 176
op div :next_increment :next_increment 2
set :increment :next_increment
op div :line :next_increment 2
op add :lines :lines 1
jump 79 lessThan :lines 176
drawflush .display
jump 30 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

