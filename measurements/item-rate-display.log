File item-rate-display.mnd: number of reported ambiguities: 41
Active optimizations:
    case-expression-optimization = experimental,
    case-switching = experimental,
    data-flow-optimization = experimental,
    dead-code-elimination = experimental,
    expression-optimization = experimental,
    function-inlining = experimental,
    if-expression-optimization = experimental,
    jump-normalization = experimental,
    jump-optimization = experimental,
    jump-straightening = experimental,
    jump-threading = experimental,
    loop-hoisting = experimental,
    loop-optimization = experimental,
    loop-unrolling = experimental,
    print-merging = experimental,
    return-optimization = experimental,
    single-step-elimination = experimental,
    stack-optimization = experimental,
    temp-variables-elimination = experimental,
    unreachable-code-elimination = experimental

   198 instructions before optimizations.
    35 instructions eliminated by Temp Variables Elimination.
    16 instructions eliminated by Dead Code Elimination (3 iterations).
    12 instructions eliminated by Jump Optimization (4 iterations).
    11 instructions eliminated by Single Step Elimination (3 passes, 7 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
   142 instructions eliminated by Data Flow Optimization (6 passes, 19 iterations).
     3 instructions eliminated by Loop Optimization (3 iterations).
     6 loops improved by Loop Optimization.
   680 instructions added by Loop Unrolling (8 iterations).
     4 loops unrolled by Loop Unrolling.
     4 instructions eliminated by Print Merging.
   655 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 888):
    Loop Optimization: replicate condition at line 32            cost     1, benefit       25.0, efficiency       25.0
    Loop Unrolling: unroll loop at line 24                       cost   137, benefit     1450.0, efficiency       10.6
  * Loop Unrolling: unroll loop at line 36                       cost     0, benefit      625.0, efficiency   Infinity (-3 instructions)
    Loop Unrolling: unroll loop at line 55                       cost     7, benefit     3750.0, efficiency      535.7
    Loop Unrolling: unroll loop at line 65                       cost   473, benefit    36250.0, efficiency       76.6

Pass 1: speed optimization selection (cost limit 891):
    Loop Optimization: replicate condition at line 32            cost     1, benefit       25.0, efficiency       25.0
    Loop Unrolling: unroll loop at line 24                       cost   137, benefit     1450.0, efficiency       10.6
  * Loop Unrolling: unroll loop at line 55                       cost     7, benefit     3750.0, efficiency      535.7 (+6 instructions)
    Loop Unrolling: unroll loop at line 65                       cost   473, benefit    36250.0, efficiency       76.6

Pass 1: speed optimization selection (cost limit 885):
    Loop Optimization: replicate condition at line 32            cost     1, benefit       25.0, efficiency       25.0
    Loop Unrolling: unroll loop at line 24                       cost   137, benefit     1450.0, efficiency       10.6
  * Loop Unrolling: unroll loop at line 65                       cost   473, benefit    36250.0, efficiency       76.6 (+411 instructions)

Pass 1: speed optimization selection (cost limit 474):
  * Loop Optimization: replicate condition at line 32            cost     1, benefit       25.0, efficiency       25.0 (+1 instructions)
    Loop Unrolling: unroll loop at line 24                       cost   137, benefit     1450.0, efficiency       10.6

Pass 1: speed optimization selection (cost limit 473):
  * Loop Unrolling: unroll loop at line 24                       cost   137, benefit     1450.0, efficiency       10.6 (+137 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-16 instructions):
 
    24 jump __label0 equal __tmp5 false
    25 op add __tmp7 ptr SKIP_SIZE
    26 set ptr __tmp7
-    * set __tmp6 ptr
    27 jump __label1 always
    28 label __label0
-    * set __tmp6 null
    29 label __label1
    30 read __tmp8 MEMORY ptr
    31 set maximum __tmp8
 
    38 jump __label5 equal __tmp10 false
    39 op sub __tmp12 SIZE 1
    40 set ptr __tmp12
-    * set __tmp11 ptr
    41 jump __label6 always
    42 label __label5
-    * set __tmp11 null
    43 label __label6
    44 read __tmp13 MEMORY ptr
    45 op max __tmp14 maximum __tmp13
 
    76 set n __tmp25
    77 jump __label12 always
    78 label __label14
-    * set __tmp21 null
    79 jump __label11 always
    80 label __label10
-    * set __tmp21 null
    81 label __label11
    82 op div __tmp26 150 maximum
    83 set scale __tmp26
 
    99 jump __label15 equal __tmp31 false
   100 op add __tmp33 head SKIP_SIZE
   101 set head __tmp33
-    * set __tmp32 head
   102 jump __label16 always
   103 label __label15
-    * set __tmp32 null
   104 label __label16
   105 set tail head
   106 set value 0
 
   117 jump __label20 equal __tmp38 false
   118 op sub __tmp40 SIZE 1
   119 set head __tmp40
-    * set __tmp39 head
   120 jump __label21 always
   121 label __label20
-    * set __tmp39 null
   122 label __label21
   123 label __label18
   124 op add __tmp41 i 1
 
   147 jump __label25 equal __tmp49 false
   148 op sub __tmp51 SIZE 1
   149 set head __tmp51
-    * set __tmp50 head
   150 jump __label26 always
   151 label __label25
-    * set __tmp50 null
   152 label __label26
   153 op sub __tmp52 tail 1
   154 set tail __tmp52
 
   156 jump __label27 equal __tmp53 false
   157 op sub __tmp55 SIZE 1
   158 set tail __tmp55
-    * set __tmp54 tail
   159 jump __label28 always
   160 label __label27
-    * set __tmp54 null
   161 label __label28
   162 op mul __tmp56 value scale
   163 op add __tmp57 10 __tmp56
 
   182 jump __label29 equal __tmp63 false
   183 op mul __tmp65 1.5 newMax
   184 set maximum __tmp65
-    * set __tmp64 maximum
   185 jump __label30 always
   186 label __label29
-    * set __tmp64 null
   187 label __label30
   188 write maximum COORD POSITION
   189 op sub __tmp66 @time start

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-35 instructions):
 
    13 set INDEX 256
    14 set SIZE 511
    15 op sub __tmp0 SIZE INDEX
-    * op sub __tmp1 __tmp0 1
-    * set SKIP_SIZE __tmp1
-    * op mul __tmp2 POSITION 30
-    * set SHIFT __tmp2
+   16 op sub SKIP_SIZE __tmp0 1
+   17 op mul SHIFT POSITION 30
    18 read __tmp3 MEMORY INDEX
-    * op sub __tmp4 __tmp3 SHIFT
-    * set ptr __tmp4
+   19 op sub ptr __tmp3 SHIFT
    20 op lessThan __tmp5 ptr INDEX
    21 jump __label0 equal __tmp5 false
-    * op add __tmp7 ptr SKIP_SIZE
-    * set ptr __tmp7
+   22 op add ptr ptr SKIP_SIZE
    23 jump __label1 always
    24 label __label0
    25 label __label1
-    * read __tmp8 MEMORY ptr
-    * set maximum __tmp8
+   26 read maximum MEMORY ptr
    27 set n 0
    28 label __label2
    29 jump __label4 greaterThanEq n 29
-    * op sub __tmp9 ptr 1
-    * set ptr __tmp9
+   30 op sub ptr ptr 1
    31 op lessThanEq __tmp10 ptr INDEX
    32 jump __label5 equal __tmp10 false
-    * op sub __tmp12 SIZE 1
-    * set ptr __tmp12
+   33 op sub ptr SIZE 1
    34 jump __label6 always
    35 label __label5
    36 label __label6
    37 read __tmp13 MEMORY ptr
-    * op max __tmp14 maximum __tmp13
-    * set maximum __tmp14
+   38 op max maximum maximum __tmp13
    39 label __label3
    40 op add n n 1
    41 jump __label2 always
    42 label __label4
-    * op mul __tmp15 maximum SMOOTH
-    * set maximum __tmp15
+   43 op mul maximum maximum SMOOTH
    44 label __label7
    45 sensor __tmp16 switch1 @enabled
    46 op equal __tmp17 __tmp16 0
    47 jump __label9 equal __tmp17 false
    48 print "Item Rate Display"
-    * set __tmp18 @time
-    * set start __tmp18
+   49 set start @time
    50 sensor __tmp19 COORD @dead
    51 op equal __tmp20 __tmp19 0
    52 jump __label10 equal __tmp20 false
 
    54 label __label12
    55 op lessThan __tmp22 n TOTAL
    56 jump __label14 equal __tmp22 false
-    * read __tmp23 COORD n
-    * set m __tmp23
+   57 read m COORD n
    58 print "\nCoord: [gold]"
    59 print m
    60 print "[]"
-    * op max __tmp24 maximum m
-    * set maximum __tmp24
+   61 op max maximum maximum m
    62 label __label13
-    * op add __tmp25 n 1
-    * set n __tmp25
+   63 op add n n 1
    64 jump __label12 always
    65 label __label14
    66 jump __label11 always
    67 label __label10
    68 label __label11
-    * op div __tmp26 150 maximum
-    * set scale __tmp26
+   69 op div scale 150 maximum
    70 op ceil __tmp27 maximum
    71 print "\nMaximum: [green]"
    72 print __tmp27
 
    79 draw color 0 80 0 255
    80 draw rect 10 10 156 156
    81 read __tmp29 MEMORY INDEX
-    * op sub __tmp30 __tmp29 SHIFT
-    * set head __tmp30
+   82 op sub head __tmp29 SHIFT
    83 op lessThan __tmp31 head INDEX
    84 jump __label15 equal __tmp31 false
-    * op add __tmp33 head SKIP_SIZE
-    * set head __tmp33
+   85 op add head head SKIP_SIZE
    86 jump __label16 always
    87 label __label15
    88 label __label16
 
    93 op lessThan __tmp34 i SMOOTH
    94 jump __label19 equal __tmp34 false
    95 read __tmp35 MEMORY head
-    * op add __tmp36 value __tmp35
-    * set value __tmp36
-    * op sub __tmp37 head 1
-    * set head __tmp37
+   96 op add value value __tmp35
+   97 op sub head head 1
    98 op lessThanEq __tmp38 head INDEX
    99 jump __label20 equal __tmp38 false
-    * op sub __tmp40 SIZE 1
-    * set head __tmp40
+  100 op sub head SIZE 1
   101 jump __label21 always
   102 label __label20
   103 label __label21
   104 label __label18
-    * op add __tmp41 i 1
-    * set i __tmp41
+  105 op add i i 1
   106 jump __label17 always
   107 label __label19
   108 op mul __tmp42 value scale
-    * op add __tmp43 10 __tmp42
-    * set last __tmp43
+  109 op add last 10 __tmp42
   110 set newMax value
   111 draw color 80 255 80 255
   112 set x 159
   113 set n 0
   114 label __label22
   115 jump __label24 greaterThanEq n 29
-    * read __tmp44 MEMORY tail
-    * set t __tmp44
-    * read __tmp45 MEMORY head
-    * set h __tmp45
+  116 read t MEMORY tail
+  117 read h MEMORY head
   118 op sub __tmp46 value t
-    * op add __tmp47 __tmp46 h
-    * set value __tmp47
-    * op sub __tmp48 head 1
-    * set head __tmp48
+  119 op add value __tmp46 h
+  120 op sub head head 1
   121 op lessThanEq __tmp49 head INDEX
   122 jump __label25 equal __tmp49 false
-    * op sub __tmp51 SIZE 1
-    * set head __tmp51
+  123 op sub head SIZE 1
   124 jump __label26 always
   125 label __label25
   126 label __label26
-    * op sub __tmp52 tail 1
-    * set tail __tmp52
+  127 op sub tail tail 1
   128 op lessThanEq __tmp53 tail INDEX
   129 jump __label27 equal __tmp53 false
-    * op sub __tmp55 SIZE 1
-    * set tail __tmp55
+  130 op sub tail SIZE 1
   131 jump __label28 always
   132 label __label27
   133 label __label28
   134 op mul __tmp56 value scale
-    * op add __tmp57 10 __tmp56
-    * set y __tmp57
+  135 op add y 10 __tmp56
   136 op sub __tmp58 x 5
   137 draw line x last __tmp58 y
-    * op sub __tmp59 x 5
-    * set x __tmp59
+  138 op sub x x 5
   139 set last y
-    * op max __tmp60 newMax value
-    * set newMax __tmp60
+  140 op max newMax newMax value
   141 label __label23
   142 op add n n 1
   143 jump __label22 always
   144 label __label24
   145 draw color 255 255 255 255
   146 draw lineRect 10 10 156 156
-    * op max __tmp61 newMax maximum
-    * set maximum __tmp61
+  147 op max maximum newMax maximum
   148 op mul __tmp62 3 newMax
   149 op lessThan __tmp63 __tmp62 maximum
   150 jump __label29 equal __tmp63 false
-    * op mul __tmp65 1.5 newMax
-    * set maximum __tmp65
+  151 op mul maximum 1.5 newMax
   152 jump __label30 always
   153 label __label29
   154 label __label30
 
   160 print " ms"
   161 op div __tmp68 @time FREQ
   162 op ceil __tmp69 __tmp68
-    * op mul __tmp70 FREQ __tmp69
-    * set wait __tmp70
+  163 op mul wait FREQ __tmp69
   164 set loops 0
   165 label __label31
   166 op lessThan __tmp71 @time wait
   167 jump __label33 equal __tmp71 false
-    * op add __tmp72 loops 1
-    * set loops __tmp72
+  168 op add loops loops 1
   169 label __label32
   170 jump __label31 always
   171 label __label33

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-12 instructions):
 
    17 op mul SHIFT POSITION 30
    18 read __tmp3 MEMORY INDEX
    19 op sub ptr __tmp3 SHIFT
-    * op lessThan __tmp5 ptr INDEX
-    * jump __label0 equal __tmp5 false
+   20 jump __label0 greaterThanEq ptr INDEX
    21 op add ptr ptr SKIP_SIZE
    22 jump __label1 always
    23 label __label0
 
    27 label __label2
    28 jump __label4 greaterThanEq n 29
    29 op sub ptr ptr 1
-    * op lessThanEq __tmp10 ptr INDEX
-    * jump __label5 equal __tmp10 false
+   30 jump __label5 greaterThan ptr INDEX
    31 op sub ptr SIZE 1
    32 jump __label6 always
    33 label __label5
 
    41 op mul maximum maximum SMOOTH
    42 label __label7
    43 sensor __tmp16 switch1 @enabled
-    * op equal __tmp17 __tmp16 0
-    * jump __label9 equal __tmp17 false
+   44 jump __label9 notEqual __tmp16 0
    45 print "Item Rate Display"
    46 set start @time
    47 sensor __tmp19 COORD @dead
-    * op equal __tmp20 __tmp19 0
-    * jump __label10 equal __tmp20 false
+   48 jump __label10 notEqual __tmp19 0
    49 set n 0
    50 label __label12
-    * op lessThan __tmp22 n TOTAL
-    * jump __label14 equal __tmp22 false
+   51 jump __label14 greaterThanEq n TOTAL
    52 read m COORD n
    53 print "\nCoord: [gold]"
    54 print m
 
    75 draw rect 10 10 156 156
    76 read __tmp29 MEMORY INDEX
    77 op sub head __tmp29 SHIFT
-    * op lessThan __tmp31 head INDEX
-    * jump __label15 equal __tmp31 false
+   78 jump __label15 greaterThanEq head INDEX
    79 op add head head SKIP_SIZE
    80 jump __label16 always
    81 label __label15
 
    84 set value 0
    85 set i 0
    86 label __label17
-    * op lessThan __tmp34 i SMOOTH
-    * jump __label19 equal __tmp34 false
+   87 jump __label19 greaterThanEq i SMOOTH
    88 read __tmp35 MEMORY head
    89 op add value value __tmp35
    90 op sub head head 1
-    * op lessThanEq __tmp38 head INDEX
-    * jump __label20 equal __tmp38 false
+   91 jump __label20 greaterThan head INDEX
    92 op sub head SIZE 1
    93 jump __label21 always
    94 label __label20
 
   110 op sub __tmp46 value t
   111 op add value __tmp46 h
   112 op sub head head 1
-    * op lessThanEq __tmp49 head INDEX
-    * jump __label25 equal __tmp49 false
+  113 jump __label25 greaterThan head INDEX
   114 op sub head SIZE 1
   115 jump __label26 always
   116 label __label25
   117 label __label26
   118 op sub tail tail 1
-    * op lessThanEq __tmp53 tail INDEX
-    * jump __label27 equal __tmp53 false
+  119 jump __label27 greaterThan tail INDEX
   120 op sub tail SIZE 1
   121 jump __label28 always
   122 label __label27
 
   136 draw lineRect 10 10 156 156
   137 op max maximum newMax maximum
   138 op mul __tmp62 3 newMax
-    * op lessThan __tmp63 __tmp62 maximum
-    * jump __label29 equal __tmp63 false
+  139 jump __label29 greaterThanEq __tmp62 maximum
   140 op mul maximum 1.5 newMax
   141 jump __label30 always
   142 label __label29
 
   152 op mul wait FREQ __tmp69
   153 set loops 0
   154 label __label31
-    * op lessThan __tmp71 @time wait
-    * jump __label33 equal __tmp71 false
+  155 jump __label33 greaterThanEq @time wait
   156 op add loops loops 1
   157 label __label32
   158 jump __label31 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
    19 op sub ptr __tmp3 SHIFT
    20 jump __label0 greaterThanEq ptr INDEX
    21 op add ptr ptr SKIP_SIZE
-    * jump __label1 always
    22 label __label0
    23 label __label1
    24 read maximum MEMORY ptr
 
    28 op sub ptr ptr 1
    29 jump __label5 greaterThan ptr INDEX
    30 op sub ptr SIZE 1
-    * jump __label6 always
    31 label __label5
    32 label __label6
    33 read __tmp13 MEMORY ptr
 
    56 op add n n 1
    57 jump __label12 always
    58 label __label14
-    * jump __label11 always
    59 label __label10
    60 label __label11
    61 op div scale 150 maximum
 
    74 op sub head __tmp29 SHIFT
    75 jump __label15 greaterThanEq head INDEX
    76 op add head head SKIP_SIZE
-    * jump __label16 always
    77 label __label15
    78 label __label16
    79 set tail head
 
    86 op sub head head 1
    87 jump __label20 greaterThan head INDEX
    88 op sub head SIZE 1
-    * jump __label21 always
    89 label __label20
    90 label __label21
    91 label __label18
 
   107 op sub head head 1
   108 jump __label25 greaterThan head INDEX
   109 op sub head SIZE 1
-    * jump __label26 always
   110 label __label25
   111 label __label26
   112 op sub tail tail 1
   113 jump __label27 greaterThan tail INDEX
   114 op sub tail SIZE 1
-    * jump __label28 always
   115 label __label27
   116 label __label28
   117 op mul __tmp56 value scale
 
   131 op mul __tmp62 3 newMax
   132 jump __label29 greaterThanEq __tmp62 maximum
   133 op mul maximum 1.5 newMax
-    * jump __label30 always
   134 label __label29
   135 label __label30
   136 write maximum COORD POSITION

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    12 draw stroke 1
    13 set INDEX 256
    14 set SIZE 511
-    * op sub __tmp0 SIZE INDEX
-    * op sub SKIP_SIZE __tmp0 1
-    * op mul SHIFT POSITION 30
-    * read __tmp3 MEMORY INDEX
-    * op sub ptr __tmp3 SHIFT
-    * jump __label0 greaterThanEq ptr INDEX
-    * op add ptr ptr SKIP_SIZE
+   15 op sub __tmp0 511 256
+   16 op sub SKIP_SIZE 255 1
+   17 op mul SHIFT 0 30
+   18 read __tmp3 bank1 256
+   19 op sub ptr __tmp3 0
+   20 jump __label0 greaterThanEq ptr 256
+   21 op add ptr ptr 254
    22 label __label0
    23 label __label1
-    * read maximum MEMORY ptr
+   24 read maximum bank1 ptr
    25 set n 0
    26 label __label2
    27 jump __label4 greaterThanEq n 29
    28 op sub ptr ptr 1
-    * jump __label5 greaterThan ptr INDEX
-    * op sub ptr SIZE 1
+   29 jump __label5 greaterThan ptr 256
+   30 op sub ptr 511 1
    31 label __label5
    32 label __label6
-    * read __tmp13 MEMORY ptr
+   33 read __tmp13 bank1 ptr
    34 op max maximum maximum __tmp13
    35 label __label3
    36 op add n n 1
    37 jump __label2 always
    38 label __label4
-    * op mul maximum maximum SMOOTH
+   39 op mul maximum maximum 3
    40 label __label7
    41 sensor __tmp16 switch1 @enabled
    42 jump __label9 notEqual __tmp16 0
    43 print "Item Rate Display"
    44 set start @time
-    * sensor __tmp19 COORD @dead
+   45 sensor __tmp19 cell1 @dead
    46 jump __label10 notEqual __tmp19 0
    47 set n 0
    48 label __label12
-    * jump __label14 greaterThanEq n TOTAL
-    * read m COORD n
+   49 jump __label14 greaterThanEq n 1
+   50 read m cell1 n
    51 print "\nCoord: [gold]"
    52 print m
    53 print "[]"
 
    70 draw clear 0 0 80
    71 draw color 0 80 0 255
    72 draw rect 10 10 156 156
-    * read __tmp29 MEMORY INDEX
-    * op sub head __tmp29 SHIFT
-    * jump __label15 greaterThanEq head INDEX
-    * op add head head SKIP_SIZE
+   73 read __tmp29 bank1 256
+   74 op sub head __tmp29 0
+   75 jump __label15 greaterThanEq head 256
+   76 op add head head 254
    77 label __label15
    78 label __label16
    79 set tail head
    80 set value 0
    81 set i 0
    82 label __label17
-    * jump __label19 greaterThanEq i SMOOTH
-    * read __tmp35 MEMORY head
+   83 jump __label19 greaterThanEq i 3
+   84 read __tmp35 bank1 head
    85 op add value value __tmp35
    86 op sub head head 1
-    * jump __label20 greaterThan head INDEX
-    * op sub head SIZE 1
+   87 jump __label20 greaterThan head 256
+   88 op sub head 511 1
    89 label __label20
    90 label __label21
    91 label __label18
 
   100 set n 0
   101 label __label22
   102 jump __label24 greaterThanEq n 29
-    * read t MEMORY tail
-    * read h MEMORY head
+  103 read t bank1 tail
+  104 read h bank1 head
   105 op sub __tmp46 value t
   106 op add value __tmp46 h
   107 op sub head head 1
-    * jump __label25 greaterThan head INDEX
-    * op sub head SIZE 1
+  108 jump __label25 greaterThan head 256
+  109 op sub head 511 1
   110 label __label25
   111 label __label26
   112 op sub tail tail 1
-    * jump __label27 greaterThan tail INDEX
-    * op sub tail SIZE 1
+  113 jump __label27 greaterThan tail 256
+  114 op sub tail 511 1
   115 label __label27
   116 label __label28
   117 op mul __tmp56 value scale
 
   133 op mul maximum 1.5 newMax
   134 label __label29
   135 label __label30
-    * write maximum COORD POSITION
+  136 write maximum cell1 0
   137 op sub __tmp66 @time start
   138 op floor __tmp67 __tmp66
   139 print "\n[lightgray]Loop time: "
   140 print __tmp67
   141 print " ms"
-    * op div __tmp68 @time FREQ
+  142 op div __tmp68 @time 1000
   143 op ceil __tmp69 __tmp68
-    * op mul wait FREQ __tmp69
+  144 op mul wait 1000 __tmp69
   145 set loops 0
   146 label __label31
   147 jump __label33 greaterThanEq @time wait

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
-    * set MEMORY bank1
-    * set COORD cell1
-    * set SMOOTH 3
-    * set POSITION 0
-    * set TOTAL 1
-    * set FREQ 1000
     0 printflush message1
     1 print "Item Rate Display"
     2 print "\n"
 
     4 print "\n"
     5 printflush message1
     6 draw stroke 1
-    * set INDEX 256
-    * set SIZE 511
-    * op sub __tmp0 511 256
-    * op sub SKIP_SIZE 255 1
-    * op mul SHIFT 0 30
     7 read __tmp3 bank1 256
     8 op sub ptr __tmp3 0
     9 jump __label0 greaterThanEq ptr 256
-    * op add ptr ptr 254
+   10 op add ptr __tmp3 254
    11 label __label0
    12 label __label1
    13 read maximum bank1 ptr
 
    62 read __tmp29 bank1 256
    63 op sub head __tmp29 0
    64 jump __label15 greaterThanEq head 256
-    * op add head head 254
+   65 op add head __tmp29 254
    66 label __label15
    67 label __label16
    68 set tail head

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-4 instructions):
 
    13 read maximum bank1 ptr
    14 set n 0
    15 label __label2
-    * jump __label4 greaterThanEq n 29
+   16 label __label34
    17 op sub ptr ptr 1
    18 jump __label5 greaterThan ptr 256
    19 op sub ptr 511 1
 
    23 op max maximum maximum __tmp13
    24 label __label3
    25 op add n n 1
-    * jump __label2 always
+   26 jump __label34 lessThan n 29
    27 label __label4
    28 op mul maximum maximum 3
    29 label __label7
 
    35 jump __label10 notEqual __tmp19 0
    36 set n 0
    37 label __label12
-    * jump __label14 greaterThanEq n 1
+   38 label __label35
    39 read m cell1 n
    40 print "\nCoord: [gold]"
    41 print m
 
    43 op max maximum maximum m
    44 label __label13
    45 op add n n 1
-    * jump __label12 always
+   46 jump __label35 lessThan n 1
    47 label __label14
    48 label __label10
    49 label __label11
 
    69 set value 0
    70 set i 0
    71 label __label17
-    * jump __label19 greaterThanEq i 3
+   72 label __label36
    73 read __tmp35 bank1 head
    74 op add value value __tmp35
    75 op sub head head 1
 
    79 label __label21
    80 label __label18
    81 op add i i 1
-    * jump __label17 always
+   82 jump __label36 lessThan i 3
    83 label __label19
    84 op mul __tmp42 value scale
    85 op add last 10 __tmp42
 
    88 set x 159
    89 set n 0
    90 label __label22
-    * jump __label24 greaterThanEq n 29
+   91 label __label37
    92 read t bank1 tail
    93 read h bank1 head
    94 op sub __tmp46 value t
 
   112 op max newMax newMax value
   113 label __label23
   114 op add n n 1
-    * jump __label22 always
+  115 jump __label37 lessThan n 29
   116 label __label24
   117 draw color 255 255 255 255
   118 draw lineRect 10 10 156 156
 
   134 set loops 0
   135 label __label31
   136 jump __label33 greaterThanEq @time wait
+  137 label __label38
   138 op add loops loops 1
   139 label __label32
-    * jump __label31 always
+  140 jump __label38 lessThan @time wait
   141 label __label33
   142 drawflush display1
   143 print "\nLoops: "

Modifications by Loop Unrolling: unroll loop at line 36 (-1 instructions):
 
    33 set start @time
    34 sensor __tmp19 cell1 @dead
    35 jump __label10 notEqual __tmp19 0
-    * set n 0
-    * label __label12
-    * label __label35
-    * read m cell1 n
-    * print "\nCoord: [gold]"
-    * print m
-    * print "[]"
-    * op max maximum maximum m
-    * label __label13
-    * op add n n 1
-    * jump __label35 lessThan n 1
-    * label __label14
+   36 set n 0
+   37 label __label39
+   38 label __label40
+   39 read m cell1 n
+   40 print "\nCoord: [gold]"
+   41 print m
+   42 print "[]"
+   43 op max maximum maximum m
+   44 label __label41
+   45 op add n n 1
+   46 label __label14
    47 label __label10
    48 label __label11
    49 op div scale 150 maximum

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    36 set n 0
    37 label __label39
    38 label __label40
-    * read m cell1 n
+   39 read m cell1 0
    40 print "\nCoord: [gold]"
    41 print m
    42 print "[]"
    43 op max maximum maximum m
    44 label __label41
-    * op add n n 1
+   45 op add n 0 1
    46 label __label14
    47 label __label10
    48 label __label11

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    33 set start @time
    34 sensor __tmp19 cell1 @dead
    35 jump __label10 notEqual __tmp19 0
-    * set n 0
    36 label __label39
    37 label __label40
    38 read m cell1 0
 
    41 print "[]"
    42 op max maximum maximum m
    43 label __label41
-    * op add n 0 1
    44 label __label14
    45 label __label10
    46 label __label11

Modifications by Loop Unrolling: unroll loop at line 55 (+11 instructions):
 
    64 label __label16
    65 set tail head
    66 set value 0
-    * set i 0
-    * label __label17
-    * label __label36
-    * read __tmp35 bank1 head
-    * op add value value __tmp35
-    * op sub head head 1
-    * jump __label20 greaterThan head 256
-    * op sub head 511 1
-    * label __label20
-    * label __label21
-    * label __label18
-    * op add i i 1
-    * jump __label36 lessThan i 3
-    * label __label19
+   67 set i 0
+   68 label __label42
+   69 label __label43
+   70 read __tmp35 bank1 head
+   71 op add value value __tmp35
+   72 op sub head head 1
+   73 jump __label44 greaterThan head 256
+   74 op sub head 511 1
+   75 label __label44
+   76 label __label45
+   77 label __label46
+   78 op add i i 1
+   79 label __label47
+   80 read __tmp35 bank1 head
+   81 op add value value __tmp35
+   82 op sub head head 1
+   83 jump __label48 greaterThan head 256
+   84 op sub head 511 1
+   85 label __label48
+   86 label __label49
+   87 label __label50
+   88 op add i i 1
+   89 label __label51
+   90 read __tmp35 bank1 head
+   91 op add value value __tmp35
+   92 op sub head head 1
+   93 jump __label52 greaterThan head 256
+   94 op sub head 511 1
+   95 label __label52
+   96 label __label53
+   97 label __label54
+   98 op add i i 1
+   99 label __label19
   100 op mul __tmp42 value scale
   101 op add last 10 __tmp42
   102 set newMax value

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    68 label __label42
    69 label __label43
    70 read __tmp35 bank1 head
-    * op add value value __tmp35
+   71 op add value 0 __tmp35
    72 op sub head head 1
    73 jump __label44 greaterThan head 256
    74 op sub head 511 1
    75 label __label44
    76 label __label45
    77 label __label46
-    * op add i i 1
+   78 op add i 0 1
    79 label __label47
    80 read __tmp35 bank1 head
    81 op add value value __tmp35
 
    85 label __label48
    86 label __label49
    87 label __label50
-    * op add i i 1
+   88 op add i 1 1
    89 label __label51
    90 read __tmp35 bank1 head
    91 op add value value __tmp35
 
    95 label __label52
    96 label __label53
    97 label __label54
-    * op add i i 1
+   98 op add i 2 1
    99 label __label19
   100 op mul __tmp42 value scale
   101 op add last 10 __tmp42

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
    63 label __label15
    64 label __label16
    65 set tail head
-    * set value 0
-    * set i 0
    66 label __label42
    67 label __label43
    68 read __tmp35 bank1 head
 
    73 label __label44
    74 label __label45
    75 label __label46
-    * op add i 0 1
    76 label __label47
    77 read __tmp35 bank1 head
    78 op add value value __tmp35
 
    82 label __label48
    83 label __label49
    84 label __label50
-    * op add i 1 1
    85 label __label51
    86 read __tmp35 bank1 head
    87 op add value value __tmp35
 
    91 label __label52
    92 label __label53
    93 label __label54
-    * op add i 2 1
    94 label __label19
    95 op mul __tmp42 value scale
    96 op add last 10 __tmp42

Modifications by Loop Unrolling: unroll loop at line 65 (+503 instructions):
 
    97 set newMax value
    98 draw color 80 255 80 255
    99 set x 159
-    * set n 0
-    * label __label22
-    * label __label37
-    * read t bank1 tail
-    * read h bank1 head
-    * op sub __tmp46 value t
-    * op add value __tmp46 h
-    * op sub head head 1
-    * jump __label25 greaterThan head 256
-    * op sub head 511 1
-    * label __label25
-    * label __label26
-    * op sub tail tail 1
-    * jump __label27 greaterThan tail 256
-    * op sub tail 511 1
-    * label __label27
-    * label __label28
-    * op mul __tmp56 value scale
-    * op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
-    * set last y
-    * op max newMax newMax value
-    * label __label23
-    * op add n n 1
-    * jump __label37 lessThan n 29
-    * label __label24
+  100 set n 0
+  101 label __label55
+  102 label __label56
+  103 read t bank1 tail
+  104 read h bank1 head
+  105 op sub __tmp46 value t
+  106 op add value __tmp46 h
+  107 op sub head head 1
+  108 jump __label57 greaterThan head 256
+  109 op sub head 511 1
+  110 label __label57
+  111 label __label58
+  112 op sub tail tail 1
+  113 jump __label59 greaterThan tail 256
+  114 op sub tail 511 1
+  115 label __label59
+  116 label __label60
+  117 op mul __tmp56 value scale
+  118 op add y 10 __tmp56
+  119 op sub __tmp58 x 5
+  120 draw line x last __tmp58 y
+  121 op sub x x 5
+  122 set last y
+  123 op max newMax newMax value
+  124 label __label61
+  125 op add n n 1
+  126 label __label62
+  127 read t bank1 tail
+  128 read h bank1 head
+  129 op sub __tmp46 value t
+  130 op add value __tmp46 h
+  131 op sub head head 1
+  132 jump __label63 greaterThan head 256
+  133 op sub head 511 1
+  134 label __label63
+  135 label __label64
+  136 op sub tail tail 1
+  137 jump __label65 greaterThan tail 256
+  138 op sub tail 511 1
+  139 label __label65
+  140 label __label66
+  141 op mul __tmp56 value scale
+  142 op add y 10 __tmp56
+  143 op sub __tmp58 x 5
+  144 draw line x last __tmp58 y
+  145 op sub x x 5
+  146 set last y
+  147 op max newMax newMax value
+  148 label __label67
+  149 op add n n 1
+  150 label __label68
+  151 read t bank1 tail
+  152 read h bank1 head
+  153 op sub __tmp46 value t
+  154 op add value __tmp46 h
+  155 op sub head head 1
+  156 jump __label69 greaterThan head 256
+  157 op sub head 511 1
+  158 label __label69
+  159 label __label70
+  160 op sub tail tail 1
+  161 jump __label71 greaterThan tail 256
+  162 op sub tail 511 1
+  163 label __label71
+  164 label __label72
+  165 op mul __tmp56 value scale
+  166 op add y 10 __tmp56
+  167 op sub __tmp58 x 5
+  168 draw line x last __tmp58 y
+  169 op sub x x 5
+  170 set last y
+  171 op max newMax newMax value
+  172 label __label73
+  173 op add n n 1
+  174 label __label74
+  175 read t bank1 tail
+  176 read h bank1 head
+  177 op sub __tmp46 value t
+  178 op add value __tmp46 h
+  179 op sub head head 1
+  180 jump __label75 greaterThan head 256
+  181 op sub head 511 1
+  182 label __label75
+  183 label __label76
+  184 op sub tail tail 1
+  185 jump __label77 greaterThan tail 256
+  186 op sub tail 511 1
+  187 label __label77
+  188 label __label78
+  189 op mul __tmp56 value scale
+  190 op add y 10 __tmp56
+  191 op sub __tmp58 x 5
+  192 draw line x last __tmp58 y
+  193 op sub x x 5
+  194 set last y
+  195 op max newMax newMax value
+  196 label __label79
+  197 op add n n 1
+  198 label __label80
+  199 read t bank1 tail
+  200 read h bank1 head
+  201 op sub __tmp46 value t
+  202 op add value __tmp46 h
+  203 op sub head head 1
+  204 jump __label81 greaterThan head 256
+  205 op sub head 511 1
+  206 label __label81
+  207 label __label82
+  208 op sub tail tail 1
+  209 jump __label83 greaterThan tail 256
+  210 op sub tail 511 1
+  211 label __label83
+  212 label __label84
+  213 op mul __tmp56 value scale
+  214 op add y 10 __tmp56
+  215 op sub __tmp58 x 5
+  216 draw line x last __tmp58 y
+  217 op sub x x 5
+  218 set last y
+  219 op max newMax newMax value
+  220 label __label85
+  221 op add n n 1
+  222 label __label86
+  223 read t bank1 tail
+  224 read h bank1 head
+  225 op sub __tmp46 value t
+  226 op add value __tmp46 h
+  227 op sub head head 1
+  228 jump __label87 greaterThan head 256
+  229 op sub head 511 1
+  230 label __label87
+  231 label __label88
+  232 op sub tail tail 1
+  233 jump __label89 greaterThan tail 256
+  234 op sub tail 511 1
+  235 label __label89
+  236 label __label90
+  237 op mul __tmp56 value scale
+  238 op add y 10 __tmp56
+  239 op sub __tmp58 x 5
+  240 draw line x last __tmp58 y
+  241 op sub x x 5
+  242 set last y
+  243 op max newMax newMax value
+  244 label __label91
+  245 op add n n 1
+  246 label __label92
+  247 read t bank1 tail
+  248 read h bank1 head
+  249 op sub __tmp46 value t
+  250 op add value __tmp46 h
+  251 op sub head head 1
+  252 jump __label93 greaterThan head 256
+  253 op sub head 511 1
+  254 label __label93
+  255 label __label94
+  256 op sub tail tail 1
+  257 jump __label95 greaterThan tail 256
+  258 op sub tail 511 1
+  259 label __label95
+  260 label __label96
+  261 op mul __tmp56 value scale
+  262 op add y 10 __tmp56
+  263 op sub __tmp58 x 5
+  264 draw line x last __tmp58 y
+  265 op sub x x 5
+  266 set last y
+  267 op max newMax newMax value
+  268 label __label97
+  269 op add n n 1
+  270 label __label98
+  271 read t bank1 tail
+  272 read h bank1 head
+  273 op sub __tmp46 value t
+  274 op add value __tmp46 h
+  275 op sub head head 1
+  276 jump __label99 greaterThan head 256
+  277 op sub head 511 1
+  278 label __label99
+  279 label __label100
+  280 op sub tail tail 1
+  281 jump __label101 greaterThan tail 256
+  282 op sub tail 511 1
+  283 label __label101
+  284 label __label102
+  285 op mul __tmp56 value scale
+  286 op add y 10 __tmp56
+  287 op sub __tmp58 x 5
+  288 draw line x last __tmp58 y
+  289 op sub x x 5
+  290 set last y
+  291 op max newMax newMax value
+  292 label __label103
+  293 op add n n 1
+  294 label __label104
+  295 read t bank1 tail
+  296 read h bank1 head
+  297 op sub __tmp46 value t
+  298 op add value __tmp46 h
+  299 op sub head head 1
+  300 jump __label105 greaterThan head 256
+  301 op sub head 511 1
+  302 label __label105
+  303 label __label106
+  304 op sub tail tail 1
+  305 jump __label107 greaterThan tail 256
+  306 op sub tail 511 1
+  307 label __label107
+  308 label __label108
+  309 op mul __tmp56 value scale
+  310 op add y 10 __tmp56
+  311 op sub __tmp58 x 5
+  312 draw line x last __tmp58 y
+  313 op sub x x 5
+  314 set last y
+  315 op max newMax newMax value
+  316 label __label109
+  317 op add n n 1
+  318 label __label110
+  319 read t bank1 tail
+  320 read h bank1 head
+  321 op sub __tmp46 value t
+  322 op add value __tmp46 h
+  323 op sub head head 1
+  324 jump __label111 greaterThan head 256
+  325 op sub head 511 1
+  326 label __label111
+  327 label __label112
+  328 op sub tail tail 1
+  329 jump __label113 greaterThan tail 256
+  330 op sub tail 511 1
+  331 label __label113
+  332 label __label114
+  333 op mul __tmp56 value scale
+  334 op add y 10 __tmp56
+  335 op sub __tmp58 x 5
+  336 draw line x last __tmp58 y
+  337 op sub x x 5
+  338 set last y
+  339 op max newMax newMax value
+  340 label __label115
+  341 op add n n 1
+  342 label __label116
+  343 read t bank1 tail
+  344 read h bank1 head
+  345 op sub __tmp46 value t
+  346 op add value __tmp46 h
+  347 op sub head head 1
+  348 jump __label117 greaterThan head 256
+  349 op sub head 511 1
+  350 label __label117
+  351 label __label118
+  352 op sub tail tail 1
+  353 jump __label119 greaterThan tail 256
+  354 op sub tail 511 1
+  355 label __label119
+  356 label __label120
+  357 op mul __tmp56 value scale
+  358 op add y 10 __tmp56
+  359 op sub __tmp58 x 5
+  360 draw line x last __tmp58 y
+  361 op sub x x 5
+  362 set last y
+  363 op max newMax newMax value
+  364 label __label121
+  365 op add n n 1
+  366 label __label122
+  367 read t bank1 tail
+  368 read h bank1 head
+  369 op sub __tmp46 value t
+  370 op add value __tmp46 h
+  371 op sub head head 1
+  372 jump __label123 greaterThan head 256
+  373 op sub head 511 1
+  374 label __label123
+  375 label __label124
+  376 op sub tail tail 1
+  377 jump __label125 greaterThan tail 256
+  378 op sub tail 511 1
+  379 label __label125
+  380 label __label126
+  381 op mul __tmp56 value scale
+  382 op add y 10 __tmp56
+  383 op sub __tmp58 x 5
+  384 draw line x last __tmp58 y
+  385 op sub x x 5
+  386 set last y
+  387 op max newMax newMax value
+  388 label __label127
+  389 op add n n 1
+  390 label __label128
+  391 read t bank1 tail
+  392 read h bank1 head
+  393 op sub __tmp46 value t
+  394 op add value __tmp46 h
+  395 op sub head head 1
+  396 jump __label129 greaterThan head 256
+  397 op sub head 511 1
+  398 label __label129
+  399 label __label130
+  400 op sub tail tail 1
+  401 jump __label131 greaterThan tail 256
+  402 op sub tail 511 1
+  403 label __label131
+  404 label __label132
+  405 op mul __tmp56 value scale
+  406 op add y 10 __tmp56
+  407 op sub __tmp58 x 5
+  408 draw line x last __tmp58 y
+  409 op sub x x 5
+  410 set last y
+  411 op max newMax newMax value
+  412 label __label133
+  413 op add n n 1
+  414 label __label134
+  415 read t bank1 tail
+  416 read h bank1 head
+  417 op sub __tmp46 value t
+  418 op add value __tmp46 h
+  419 op sub head head 1
+  420 jump __label135 greaterThan head 256
+  421 op sub head 511 1
+  422 label __label135
+  423 label __label136
+  424 op sub tail tail 1
+  425 jump __label137 greaterThan tail 256
+  426 op sub tail 511 1
+  427 label __label137
+  428 label __label138
+  429 op mul __tmp56 value scale
+  430 op add y 10 __tmp56
+  431 op sub __tmp58 x 5
+  432 draw line x last __tmp58 y
+  433 op sub x x 5
+  434 set last y
+  435 op max newMax newMax value
+  436 label __label139
+  437 op add n n 1
+  438 label __label140
+  439 read t bank1 tail
+  440 read h bank1 head
+  441 op sub __tmp46 value t
+  442 op add value __tmp46 h
+  443 op sub head head 1
+  444 jump __label141 greaterThan head 256
+  445 op sub head 511 1
+  446 label __label141
+  447 label __label142
+  448 op sub tail tail 1
+  449 jump __label143 greaterThan tail 256
+  450 op sub tail 511 1
+  451 label __label143
+  452 label __label144
+  453 op mul __tmp56 value scale
+  454 op add y 10 __tmp56
+  455 op sub __tmp58 x 5
+  456 draw line x last __tmp58 y
+  457 op sub x x 5
+  458 set last y
+  459 op max newMax newMax value
+  460 label __label145
+  461 op add n n 1
+  462 label __label146
+  463 read t bank1 tail
+  464 read h bank1 head
+  465 op sub __tmp46 value t
+  466 op add value __tmp46 h
+  467 op sub head head 1
+  468 jump __label147 greaterThan head 256
+  469 op sub head 511 1
+  470 label __label147
+  471 label __label148
+  472 op sub tail tail 1
+  473 jump __label149 greaterThan tail 256
+  474 op sub tail 511 1
+  475 label __label149
+  476 label __label150
+  477 op mul __tmp56 value scale
+  478 op add y 10 __tmp56
+  479 op sub __tmp58 x 5
+  480 draw line x last __tmp58 y
+  481 op sub x x 5
+  482 set last y
+  483 op max newMax newMax value
+  484 label __label151
+  485 op add n n 1
+  486 label __label152
+  487 read t bank1 tail
+  488 read h bank1 head
+  489 op sub __tmp46 value t
+  490 op add value __tmp46 h
+  491 op sub head head 1
+  492 jump __label153 greaterThan head 256
+  493 op sub head 511 1
+  494 label __label153
+  495 label __label154
+  496 op sub tail tail 1
+  497 jump __label155 greaterThan tail 256
+  498 op sub tail 511 1
+  499 label __label155
+  500 label __label156
+  501 op mul __tmp56 value scale
+  502 op add y 10 __tmp56
+  503 op sub __tmp58 x 5
+  504 draw line x last __tmp58 y
+  505 op sub x x 5
+  506 set last y
+  507 op max newMax newMax value
+  508 label __label157
+  509 op add n n 1
+  510 label __label158
+  511 read t bank1 tail
+  512 read h bank1 head
+  513 op sub __tmp46 value t
+  514 op add value __tmp46 h
+  515 op sub head head 1
+  516 jump __label159 greaterThan head 256
+  517 op sub head 511 1
+  518 label __label159
+  519 label __label160
+  520 op sub tail tail 1
+  521 jump __label161 greaterThan tail 256
+  522 op sub tail 511 1
+  523 label __label161
+  524 label __label162
+  525 op mul __tmp56 value scale
+  526 op add y 10 __tmp56
+  527 op sub __tmp58 x 5
+  528 draw line x last __tmp58 y
+  529 op sub x x 5
+  530 set last y
+  531 op max newMax newMax value
+  532 label __label163
+  533 op add n n 1
+  534 label __label164
+  535 read t bank1 tail
+  536 read h bank1 head
+  537 op sub __tmp46 value t
+  538 op add value __tmp46 h
+  539 op sub head head 1
+  540 jump __label165 greaterThan head 256
+  541 op sub head 511 1
+  542 label __label165
+  543 label __label166
+  544 op sub tail tail 1
+  545 jump __label167 greaterThan tail 256
+  546 op sub tail 511 1
+  547 label __label167
+  548 label __label168
+  549 op mul __tmp56 value scale
+  550 op add y 10 __tmp56
+  551 op sub __tmp58 x 5
+  552 draw line x last __tmp58 y
+  553 op sub x x 5
+  554 set last y
+  555 op max newMax newMax value
+  556 label __label169
+  557 op add n n 1
+  558 label __label170
+  559 read t bank1 tail
+  560 read h bank1 head
+  561 op sub __tmp46 value t
+  562 op add value __tmp46 h
+  563 op sub head head 1
+  564 jump __label171 greaterThan head 256
+  565 op sub head 511 1
+  566 label __label171
+  567 label __label172
+  568 op sub tail tail 1
+  569 jump __label173 greaterThan tail 256
+  570 op sub tail 511 1
+  571 label __label173
+  572 label __label174
+  573 op mul __tmp56 value scale
+  574 op add y 10 __tmp56
+  575 op sub __tmp58 x 5
+  576 draw line x last __tmp58 y
+  577 op sub x x 5
+  578 set last y
+  579 op max newMax newMax value
+  580 label __label175
+  581 op add n n 1
+  582 label __label176
+  583 read t bank1 tail
+  584 read h bank1 head
+  585 op sub __tmp46 value t
+  586 op add value __tmp46 h
+  587 op sub head head 1
+  588 jump __label177 greaterThan head 256
+  589 op sub head 511 1
+  590 label __label177
+  591 label __label178
+  592 op sub tail tail 1
+  593 jump __label179 greaterThan tail 256
+  594 op sub tail 511 1
+  595 label __label179
+  596 label __label180
+  597 op mul __tmp56 value scale
+  598 op add y 10 __tmp56
+  599 op sub __tmp58 x 5
+  600 draw line x last __tmp58 y
+  601 op sub x x 5
+  602 set last y
+  603 op max newMax newMax value
+  604 label __label181
+  605 op add n n 1
+  606 label __label182
+  607 read t bank1 tail
+  608 read h bank1 head
+  609 op sub __tmp46 value t
+  610 op add value __tmp46 h
+  611 op sub head head 1
+  612 jump __label183 greaterThan head 256
+  613 op sub head 511 1
+  614 label __label183
+  615 label __label184
+  616 op sub tail tail 1
+  617 jump __label185 greaterThan tail 256
+  618 op sub tail 511 1
+  619 label __label185
+  620 label __label186
+  621 op mul __tmp56 value scale
+  622 op add y 10 __tmp56
+  623 op sub __tmp58 x 5
+  624 draw line x last __tmp58 y
+  625 op sub x x 5
+  626 set last y
+  627 op max newMax newMax value
+  628 label __label187
+  629 op add n n 1
+  630 label __label188
+  631 read t bank1 tail
+  632 read h bank1 head
+  633 op sub __tmp46 value t
+  634 op add value __tmp46 h
+  635 op sub head head 1
+  636 jump __label189 greaterThan head 256
+  637 op sub head 511 1
+  638 label __label189
+  639 label __label190
+  640 op sub tail tail 1
+  641 jump __label191 greaterThan tail 256
+  642 op sub tail 511 1
+  643 label __label191
+  644 label __label192
+  645 op mul __tmp56 value scale
+  646 op add y 10 __tmp56
+  647 op sub __tmp58 x 5
+  648 draw line x last __tmp58 y
+  649 op sub x x 5
+  650 set last y
+  651 op max newMax newMax value
+  652 label __label193
+  653 op add n n 1
+  654 label __label194
+  655 read t bank1 tail
+  656 read h bank1 head
+  657 op sub __tmp46 value t
+  658 op add value __tmp46 h
+  659 op sub head head 1
+  660 jump __label195 greaterThan head 256
+  661 op sub head 511 1
+  662 label __label195
+  663 label __label196
+  664 op sub tail tail 1
+  665 jump __label197 greaterThan tail 256
+  666 op sub tail 511 1
+  667 label __label197
+  668 label __label198
+  669 op mul __tmp56 value scale
+  670 op add y 10 __tmp56
+  671 op sub __tmp58 x 5
+  672 draw line x last __tmp58 y
+  673 op sub x x 5
+  674 set last y
+  675 op max newMax newMax value
+  676 label __label199
+  677 op add n n 1
+  678 label __label200
+  679 read t bank1 tail
+  680 read h bank1 head
+  681 op sub __tmp46 value t
+  682 op add value __tmp46 h
+  683 op sub head head 1
+  684 jump __label201 greaterThan head 256
+  685 op sub head 511 1
+  686 label __label201
+  687 label __label202
+  688 op sub tail tail 1
+  689 jump __label203 greaterThan tail 256
+  690 op sub tail 511 1
+  691 label __label203
+  692 label __label204
+  693 op mul __tmp56 value scale
+  694 op add y 10 __tmp56
+  695 op sub __tmp58 x 5
+  696 draw line x last __tmp58 y
+  697 op sub x x 5
+  698 set last y
+  699 op max newMax newMax value
+  700 label __label205
+  701 op add n n 1
+  702 label __label206
+  703 read t bank1 tail
+  704 read h bank1 head
+  705 op sub __tmp46 value t
+  706 op add value __tmp46 h
+  707 op sub head head 1
+  708 jump __label207 greaterThan head 256
+  709 op sub head 511 1
+  710 label __label207
+  711 label __label208
+  712 op sub tail tail 1
+  713 jump __label209 greaterThan tail 256
+  714 op sub tail 511 1
+  715 label __label209
+  716 label __label210
+  717 op mul __tmp56 value scale
+  718 op add y 10 __tmp56
+  719 op sub __tmp58 x 5
+  720 draw line x last __tmp58 y
+  721 op sub x x 5
+  722 set last y
+  723 op max newMax newMax value
+  724 label __label211
+  725 op add n n 1
+  726 label __label212
+  727 read t bank1 tail
+  728 read h bank1 head
+  729 op sub __tmp46 value t
+  730 op add value __tmp46 h
+  731 op sub head head 1
+  732 jump __label213 greaterThan head 256
+  733 op sub head 511 1
+  734 label __label213
+  735 label __label214
+  736 op sub tail tail 1
+  737 jump __label215 greaterThan tail 256
+  738 op sub tail 511 1
+  739 label __label215
+  740 label __label216
+  741 op mul __tmp56 value scale
+  742 op add y 10 __tmp56
+  743 op sub __tmp58 x 5
+  744 draw line x last __tmp58 y
+  745 op sub x x 5
+  746 set last y
+  747 op max newMax newMax value
+  748 label __label217
+  749 op add n n 1
+  750 label __label218
+  751 read t bank1 tail
+  752 read h bank1 head
+  753 op sub __tmp46 value t
+  754 op add value __tmp46 h
+  755 op sub head head 1
+  756 jump __label219 greaterThan head 256
+  757 op sub head 511 1
+  758 label __label219
+  759 label __label220
+  760 op sub tail tail 1
+  761 jump __label221 greaterThan tail 256
+  762 op sub tail 511 1
+  763 label __label221
+  764 label __label222
+  765 op mul __tmp56 value scale
+  766 op add y 10 __tmp56
+  767 op sub __tmp58 x 5
+  768 draw line x last __tmp58 y
+  769 op sub x x 5
+  770 set last y
+  771 op max newMax newMax value
+  772 label __label223
+  773 op add n n 1
+  774 label __label224
+  775 read t bank1 tail
+  776 read h bank1 head
+  777 op sub __tmp46 value t
+  778 op add value __tmp46 h
+  779 op sub head head 1
+  780 jump __label225 greaterThan head 256
+  781 op sub head 511 1
+  782 label __label225
+  783 label __label226
+  784 op sub tail tail 1
+  785 jump __label227 greaterThan tail 256
+  786 op sub tail 511 1
+  787 label __label227
+  788 label __label228
+  789 op mul __tmp56 value scale
+  790 op add y 10 __tmp56
+  791 op sub __tmp58 x 5
+  792 draw line x last __tmp58 y
+  793 op sub x x 5
+  794 set last y
+  795 op max newMax newMax value
+  796 label __label229
+  797 op add n n 1
+  798 label __label24
   799 draw color 255 255 255 255
   800 draw lineRect 10 10 156 156
   801 op max maximum newMax maximum

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   116 label __label60
   117 op mul __tmp56 value scale
   118 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  119 op sub __tmp58 159 5
+  120 draw line 159 last 154 y
+  121 op sub x 159 5
   122 set last y
   123 op max newMax newMax value
   124 label __label61
-    * op add n n 1
+  125 op add n 0 1
   126 label __label62
   127 read t bank1 tail
   128 read h bank1 head
 
   140 label __label66
   141 op mul __tmp56 value scale
   142 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  143 op sub __tmp58 154 5
+  144 draw line 154 last 149 y
+  145 op sub x 154 5
   146 set last y
   147 op max newMax newMax value
   148 label __label67
-    * op add n n 1
+  149 op add n 1 1
   150 label __label68
   151 read t bank1 tail
   152 read h bank1 head
 
   164 label __label72
   165 op mul __tmp56 value scale
   166 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  167 op sub __tmp58 149 5
+  168 draw line 149 last 144 y
+  169 op sub x 149 5
   170 set last y
   171 op max newMax newMax value
   172 label __label73
-    * op add n n 1
+  173 op add n 2 1
   174 label __label74
   175 read t bank1 tail
   176 read h bank1 head
 
   188 label __label78
   189 op mul __tmp56 value scale
   190 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  191 op sub __tmp58 144 5
+  192 draw line 144 last 139 y
+  193 op sub x 144 5
   194 set last y
   195 op max newMax newMax value
   196 label __label79
-    * op add n n 1
+  197 op add n 3 1
   198 label __label80
   199 read t bank1 tail
   200 read h bank1 head
 
   212 label __label84
   213 op mul __tmp56 value scale
   214 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  215 op sub __tmp58 139 5
+  216 draw line 139 last 134 y
+  217 op sub x 139 5
   218 set last y
   219 op max newMax newMax value
   220 label __label85
-    * op add n n 1
+  221 op add n 4 1
   222 label __label86
   223 read t bank1 tail
   224 read h bank1 head
 
   236 label __label90
   237 op mul __tmp56 value scale
   238 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  239 op sub __tmp58 134 5
+  240 draw line 134 last 129 y
+  241 op sub x 134 5
   242 set last y
   243 op max newMax newMax value
   244 label __label91
-    * op add n n 1
+  245 op add n 5 1
   246 label __label92
   247 read t bank1 tail
   248 read h bank1 head
 
   260 label __label96
   261 op mul __tmp56 value scale
   262 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  263 op sub __tmp58 129 5
+  264 draw line 129 last 124 y
+  265 op sub x 129 5
   266 set last y
   267 op max newMax newMax value
   268 label __label97
-    * op add n n 1
+  269 op add n 6 1
   270 label __label98
   271 read t bank1 tail
   272 read h bank1 head
 
   284 label __label102
   285 op mul __tmp56 value scale
   286 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  287 op sub __tmp58 124 5
+  288 draw line 124 last 119 y
+  289 op sub x 124 5
   290 set last y
   291 op max newMax newMax value
   292 label __label103
-    * op add n n 1
+  293 op add n 7 1
   294 label __label104
   295 read t bank1 tail
   296 read h bank1 head
 
   308 label __label108
   309 op mul __tmp56 value scale
   310 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  311 op sub __tmp58 119 5
+  312 draw line 119 last 114 y
+  313 op sub x 119 5
   314 set last y
   315 op max newMax newMax value
   316 label __label109
-    * op add n n 1
+  317 op add n 8 1
   318 label __label110
   319 read t bank1 tail
   320 read h bank1 head
 
   332 label __label114
   333 op mul __tmp56 value scale
   334 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  335 op sub __tmp58 114 5
+  336 draw line 114 last 109 y
+  337 op sub x 114 5
   338 set last y
   339 op max newMax newMax value
   340 label __label115
-    * op add n n 1
+  341 op add n 9 1
   342 label __label116
   343 read t bank1 tail
   344 read h bank1 head
 
   356 label __label120
   357 op mul __tmp56 value scale
   358 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  359 op sub __tmp58 109 5
+  360 draw line 109 last 104 y
+  361 op sub x 109 5
   362 set last y
   363 op max newMax newMax value
   364 label __label121
-    * op add n n 1
+  365 op add n 10 1
   366 label __label122
   367 read t bank1 tail
   368 read h bank1 head
 
   380 label __label126
   381 op mul __tmp56 value scale
   382 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  383 op sub __tmp58 104 5
+  384 draw line 104 last 99 y
+  385 op sub x 104 5
   386 set last y
   387 op max newMax newMax value
   388 label __label127
-    * op add n n 1
+  389 op add n 11 1
   390 label __label128
   391 read t bank1 tail
   392 read h bank1 head
 
   404 label __label132
   405 op mul __tmp56 value scale
   406 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  407 op sub __tmp58 99 5
+  408 draw line 99 last 94 y
+  409 op sub x 99 5
   410 set last y
   411 op max newMax newMax value
   412 label __label133
-    * op add n n 1
+  413 op add n 12 1
   414 label __label134
   415 read t bank1 tail
   416 read h bank1 head
 
   428 label __label138
   429 op mul __tmp56 value scale
   430 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  431 op sub __tmp58 94 5
+  432 draw line 94 last 89 y
+  433 op sub x 94 5
   434 set last y
   435 op max newMax newMax value
   436 label __label139
-    * op add n n 1
+  437 op add n 13 1
   438 label __label140
   439 read t bank1 tail
   440 read h bank1 head
 
   452 label __label144
   453 op mul __tmp56 value scale
   454 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  455 op sub __tmp58 89 5
+  456 draw line 89 last 84 y
+  457 op sub x 89 5
   458 set last y
   459 op max newMax newMax value
   460 label __label145
-    * op add n n 1
+  461 op add n 14 1
   462 label __label146
   463 read t bank1 tail
   464 read h bank1 head
 
   476 label __label150
   477 op mul __tmp56 value scale
   478 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  479 op sub __tmp58 84 5
+  480 draw line 84 last 79 y
+  481 op sub x 84 5
   482 set last y
   483 op max newMax newMax value
   484 label __label151
-    * op add n n 1
+  485 op add n 15 1
   486 label __label152
   487 read t bank1 tail
   488 read h bank1 head
 
   500 label __label156
   501 op mul __tmp56 value scale
   502 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  503 op sub __tmp58 79 5
+  504 draw line 79 last 74 y
+  505 op sub x 79 5
   506 set last y
   507 op max newMax newMax value
   508 label __label157
-    * op add n n 1
+  509 op add n 16 1
   510 label __label158
   511 read t bank1 tail
   512 read h bank1 head
 
   524 label __label162
   525 op mul __tmp56 value scale
   526 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  527 op sub __tmp58 74 5
+  528 draw line 74 last 69 y
+  529 op sub x 74 5
   530 set last y
   531 op max newMax newMax value
   532 label __label163
-    * op add n n 1
+  533 op add n 17 1
   534 label __label164
   535 read t bank1 tail
   536 read h bank1 head
 
   548 label __label168
   549 op mul __tmp56 value scale
   550 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  551 op sub __tmp58 69 5
+  552 draw line 69 last 64 y
+  553 op sub x 69 5
   554 set last y
   555 op max newMax newMax value
   556 label __label169
-    * op add n n 1
+  557 op add n 18 1
   558 label __label170
   559 read t bank1 tail
   560 read h bank1 head
 
   572 label __label174
   573 op mul __tmp56 value scale
   574 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  575 op sub __tmp58 64 5
+  576 draw line 64 last 59 y
+  577 op sub x 64 5
   578 set last y
   579 op max newMax newMax value
   580 label __label175
-    * op add n n 1
+  581 op add n 19 1
   582 label __label176
   583 read t bank1 tail
   584 read h bank1 head
 
   596 label __label180
   597 op mul __tmp56 value scale
   598 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  599 op sub __tmp58 59 5
+  600 draw line 59 last 54 y
+  601 op sub x 59 5
   602 set last y
   603 op max newMax newMax value
   604 label __label181
-    * op add n n 1
+  605 op add n 20 1
   606 label __label182
   607 read t bank1 tail
   608 read h bank1 head
 
   620 label __label186
   621 op mul __tmp56 value scale
   622 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  623 op sub __tmp58 54 5
+  624 draw line 54 last 49 y
+  625 op sub x 54 5
   626 set last y
   627 op max newMax newMax value
   628 label __label187
-    * op add n n 1
+  629 op add n 21 1
   630 label __label188
   631 read t bank1 tail
   632 read h bank1 head
 
   644 label __label192
   645 op mul __tmp56 value scale
   646 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  647 op sub __tmp58 49 5
+  648 draw line 49 last 44 y
+  649 op sub x 49 5
   650 set last y
   651 op max newMax newMax value
   652 label __label193
-    * op add n n 1
+  653 op add n 22 1
   654 label __label194
   655 read t bank1 tail
   656 read h bank1 head
 
   668 label __label198
   669 op mul __tmp56 value scale
   670 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  671 op sub __tmp58 44 5
+  672 draw line 44 last 39 y
+  673 op sub x 44 5
   674 set last y
   675 op max newMax newMax value
   676 label __label199
-    * op add n n 1
+  677 op add n 23 1
   678 label __label200
   679 read t bank1 tail
   680 read h bank1 head
 
   692 label __label204
   693 op mul __tmp56 value scale
   694 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  695 op sub __tmp58 39 5
+  696 draw line 39 last 34 y
+  697 op sub x 39 5
   698 set last y
   699 op max newMax newMax value
   700 label __label205
-    * op add n n 1
+  701 op add n 24 1
   702 label __label206
   703 read t bank1 tail
   704 read h bank1 head
 
   716 label __label210
   717 op mul __tmp56 value scale
   718 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  719 op sub __tmp58 34 5
+  720 draw line 34 last 29 y
+  721 op sub x 34 5
   722 set last y
   723 op max newMax newMax value
   724 label __label211
-    * op add n n 1
+  725 op add n 25 1
   726 label __label212
   727 read t bank1 tail
   728 read h bank1 head
 
   740 label __label216
   741 op mul __tmp56 value scale
   742 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  743 op sub __tmp58 29 5
+  744 draw line 29 last 24 y
+  745 op sub x 29 5
   746 set last y
   747 op max newMax newMax value
   748 label __label217
-    * op add n n 1
+  749 op add n 26 1
   750 label __label218
   751 read t bank1 tail
   752 read h bank1 head
 
   764 label __label222
   765 op mul __tmp56 value scale
   766 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
+  767 op sub __tmp58 24 5
+  768 draw line 24 last 19 y
+  769 op sub x 24 5
   770 set last y
   771 op max newMax newMax value
   772 label __label223
-    * op add n n 1
+  773 op add n 27 1
   774 label __label224
   775 read t bank1 tail
   776 read h bank1 head
 
   778 op add value __tmp46 h
   779 op sub head head 1
   780 jump __label225 greaterThan head 256
-    * op sub head 511 1
   781 label __label225
   782 label __label226
   783 op sub tail tail 1
   784 jump __label227 greaterThan tail 256
-    * op sub tail 511 1
   785 label __label227
   786 label __label228
   787 op mul __tmp56 value scale
   788 op add y 10 __tmp56
-    * op sub __tmp58 x 5
-    * draw line x last __tmp58 y
-    * op sub x x 5
-    * set last y
+  789 op sub __tmp58 19 5
+  790 draw line 19 last 14 y
+  791 op sub x 19 5
   792 op max newMax newMax value
   793 label __label229
-    * op add n n 1
+  794 op add n 28 1
   795 label __label24
   796 draw color 255 255 255 255
   797 draw lineRect 10 10 156 156

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-89 instructions):
 
    96 op add last 10 __tmp42
    97 set newMax value
    98 draw color 80 255 80 255
-    * set x 159
-    * set n 0
    99 label __label55
   100 label __label56
   101 read t bank1 tail
 
   114 label __label60
   115 op mul __tmp56 value scale
   116 op add y 10 __tmp56
-    * op sub __tmp58 159 5
   117 draw line 159 last 154 y
-    * op sub x 159 5
   118 set last y
   119 op max newMax newMax value
   120 label __label61
-    * op add n 0 1
   121 label __label62
   122 read t bank1 tail
   123 read h bank1 head
 
   135 label __label66
   136 op mul __tmp56 value scale
   137 op add y 10 __tmp56
-    * op sub __tmp58 154 5
   138 draw line 154 last 149 y
-    * op sub x 154 5
   139 set last y
   140 op max newMax newMax value
   141 label __label67
-    * op add n 1 1
   142 label __label68
   143 read t bank1 tail
   144 read h bank1 head
 
   156 label __label72
   157 op mul __tmp56 value scale
   158 op add y 10 __tmp56
-    * op sub __tmp58 149 5
   159 draw line 149 last 144 y
-    * op sub x 149 5
   160 set last y
   161 op max newMax newMax value
   162 label __label73
-    * op add n 2 1
   163 label __label74
   164 read t bank1 tail
   165 read h bank1 head
 
   177 label __label78
   178 op mul __tmp56 value scale
   179 op add y 10 __tmp56
-    * op sub __tmp58 144 5
   180 draw line 144 last 139 y
-    * op sub x 144 5
   181 set last y
   182 op max newMax newMax value
   183 label __label79
-    * op add n 3 1
   184 label __label80
   185 read t bank1 tail
   186 read h bank1 head
 
   198 label __label84
   199 op mul __tmp56 value scale
   200 op add y 10 __tmp56
-    * op sub __tmp58 139 5
   201 draw line 139 last 134 y
-    * op sub x 139 5
   202 set last y
   203 op max newMax newMax value
   204 label __label85
-    * op add n 4 1
   205 label __label86
   206 read t bank1 tail
   207 read h bank1 head
 
   219 label __label90
   220 op mul __tmp56 value scale
   221 op add y 10 __tmp56
-    * op sub __tmp58 134 5
   222 draw line 134 last 129 y
-    * op sub x 134 5
   223 set last y
   224 op max newMax newMax value
   225 label __label91
-    * op add n 5 1
   226 label __label92
   227 read t bank1 tail
   228 read h bank1 head
 
   240 label __label96
   241 op mul __tmp56 value scale
   242 op add y 10 __tmp56
-    * op sub __tmp58 129 5
   243 draw line 129 last 124 y
-    * op sub x 129 5
   244 set last y
   245 op max newMax newMax value
   246 label __label97
-    * op add n 6 1
   247 label __label98
   248 read t bank1 tail
   249 read h bank1 head
 
   261 label __label102
   262 op mul __tmp56 value scale
   263 op add y 10 __tmp56
-    * op sub __tmp58 124 5
   264 draw line 124 last 119 y
-    * op sub x 124 5
   265 set last y
   266 op max newMax newMax value
   267 label __label103
-    * op add n 7 1
   268 label __label104
   269 read t bank1 tail
   270 read h bank1 head
 
   282 label __label108
   283 op mul __tmp56 value scale
   284 op add y 10 __tmp56
-    * op sub __tmp58 119 5
   285 draw line 119 last 114 y
-    * op sub x 119 5
   286 set last y
   287 op max newMax newMax value
   288 label __label109
-    * op add n 8 1
   289 label __label110
   290 read t bank1 tail
   291 read h bank1 head
 
   303 label __label114
   304 op mul __tmp56 value scale
   305 op add y 10 __tmp56
-    * op sub __tmp58 114 5
   306 draw line 114 last 109 y
-    * op sub x 114 5
   307 set last y
   308 op max newMax newMax value
   309 label __label115
-    * op add n 9 1
   310 label __label116
   311 read t bank1 tail
   312 read h bank1 head
 
   324 label __label120
   325 op mul __tmp56 value scale
   326 op add y 10 __tmp56
-    * op sub __tmp58 109 5
   327 draw line 109 last 104 y
-    * op sub x 109 5
   328 set last y
   329 op max newMax newMax value
   330 label __label121
-    * op add n 10 1
   331 label __label122
   332 read t bank1 tail
   333 read h bank1 head
 
   345 label __label126
   346 op mul __tmp56 value scale
   347 op add y 10 __tmp56
-    * op sub __tmp58 104 5
   348 draw line 104 last 99 y
-    * op sub x 104 5
   349 set last y
   350 op max newMax newMax value
   351 label __label127
-    * op add n 11 1
   352 label __label128
   353 read t bank1 tail
   354 read h bank1 head
 
   366 label __label132
   367 op mul __tmp56 value scale
   368 op add y 10 __tmp56
-    * op sub __tmp58 99 5
   369 draw line 99 last 94 y
-    * op sub x 99 5
   370 set last y
   371 op max newMax newMax value
   372 label __label133
-    * op add n 12 1
   373 label __label134
   374 read t bank1 tail
   375 read h bank1 head
 
   387 label __label138
   388 op mul __tmp56 value scale
   389 op add y 10 __tmp56
-    * op sub __tmp58 94 5
   390 draw line 94 last 89 y
-    * op sub x 94 5
   391 set last y
   392 op max newMax newMax value
   393 label __label139
-    * op add n 13 1
   394 label __label140
   395 read t bank1 tail
   396 read h bank1 head
 
   408 label __label144
   409 op mul __tmp56 value scale
   410 op add y 10 __tmp56
-    * op sub __tmp58 89 5
   411 draw line 89 last 84 y
-    * op sub x 89 5
   412 set last y
   413 op max newMax newMax value
   414 label __label145
-    * op add n 14 1
   415 label __label146
   416 read t bank1 tail
   417 read h bank1 head
 
   429 label __label150
   430 op mul __tmp56 value scale
   431 op add y 10 __tmp56
-    * op sub __tmp58 84 5
   432 draw line 84 last 79 y
-    * op sub x 84 5
   433 set last y
   434 op max newMax newMax value
   435 label __label151
-    * op add n 15 1
   436 label __label152
   437 read t bank1 tail
   438 read h bank1 head
 
   450 label __label156
   451 op mul __tmp56 value scale
   452 op add y 10 __tmp56
-    * op sub __tmp58 79 5
   453 draw line 79 last 74 y
-    * op sub x 79 5
   454 set last y
   455 op max newMax newMax value
   456 label __label157
-    * op add n 16 1
   457 label __label158
   458 read t bank1 tail
   459 read h bank1 head
 
   471 label __label162
   472 op mul __tmp56 value scale
   473 op add y 10 __tmp56
-    * op sub __tmp58 74 5
   474 draw line 74 last 69 y
-    * op sub x 74 5
   475 set last y
   476 op max newMax newMax value
   477 label __label163
-    * op add n 17 1
   478 label __label164
   479 read t bank1 tail
   480 read h bank1 head
 
   492 label __label168
   493 op mul __tmp56 value scale
   494 op add y 10 __tmp56
-    * op sub __tmp58 69 5
   495 draw line 69 last 64 y
-    * op sub x 69 5
   496 set last y
   497 op max newMax newMax value
   498 label __label169
-    * op add n 18 1
   499 label __label170
   500 read t bank1 tail
   501 read h bank1 head
 
   513 label __label174
   514 op mul __tmp56 value scale
   515 op add y 10 __tmp56
-    * op sub __tmp58 64 5
   516 draw line 64 last 59 y
-    * op sub x 64 5
   517 set last y
   518 op max newMax newMax value
   519 label __label175
-    * op add n 19 1
   520 label __label176
   521 read t bank1 tail
   522 read h bank1 head
 
   534 label __label180
   535 op mul __tmp56 value scale
   536 op add y 10 __tmp56
-    * op sub __tmp58 59 5
   537 draw line 59 last 54 y
-    * op sub x 59 5
   538 set last y
   539 op max newMax newMax value
   540 label __label181
-    * op add n 20 1
   541 label __label182
   542 read t bank1 tail
   543 read h bank1 head
 
   555 label __label186
   556 op mul __tmp56 value scale
   557 op add y 10 __tmp56
-    * op sub __tmp58 54 5
   558 draw line 54 last 49 y
-    * op sub x 54 5
   559 set last y
   560 op max newMax newMax value
   561 label __label187
-    * op add n 21 1
   562 label __label188
   563 read t bank1 tail
   564 read h bank1 head
 
   576 label __label192
   577 op mul __tmp56 value scale
   578 op add y 10 __tmp56
-    * op sub __tmp58 49 5
   579 draw line 49 last 44 y
-    * op sub x 49 5
   580 set last y
   581 op max newMax newMax value
   582 label __label193
-    * op add n 22 1
   583 label __label194
   584 read t bank1 tail
   585 read h bank1 head
 
   597 label __label198
   598 op mul __tmp56 value scale
   599 op add y 10 __tmp56
-    * op sub __tmp58 44 5
   600 draw line 44 last 39 y
-    * op sub x 44 5
   601 set last y
   602 op max newMax newMax value
   603 label __label199
-    * op add n 23 1
   604 label __label200
   605 read t bank1 tail
   606 read h bank1 head
 
   618 label __label204
   619 op mul __tmp56 value scale
   620 op add y 10 __tmp56
-    * op sub __tmp58 39 5
   621 draw line 39 last 34 y
-    * op sub x 39 5
   622 set last y
   623 op max newMax newMax value
   624 label __label205
-    * op add n 24 1
   625 label __label206
   626 read t bank1 tail
   627 read h bank1 head
 
   639 label __label210
   640 op mul __tmp56 value scale
   641 op add y 10 __tmp56
-    * op sub __tmp58 34 5
   642 draw line 34 last 29 y
-    * op sub x 34 5
   643 set last y
   644 op max newMax newMax value
   645 label __label211
-    * op add n 25 1
   646 label __label212
   647 read t bank1 tail
   648 read h bank1 head
 
   660 label __label216
   661 op mul __tmp56 value scale
   662 op add y 10 __tmp56
-    * op sub __tmp58 29 5
   663 draw line 29 last 24 y
-    * op sub x 29 5
   664 set last y
   665 op max newMax newMax value
   666 label __label217
-    * op add n 26 1
   667 label __label218
   668 read t bank1 tail
   669 read h bank1 head
 
   681 label __label222
   682 op mul __tmp56 value scale
   683 op add y 10 __tmp56
-    * op sub __tmp58 24 5
   684 draw line 24 last 19 y
-    * op sub x 24 5
   685 set last y
   686 op max newMax newMax value
   687 label __label223
-    * op add n 27 1
   688 label __label224
   689 read t bank1 tail
   690 read h bank1 head
 
   700 label __label228
   701 op mul __tmp56 value scale
   702 op add y 10 __tmp56
-    * op sub __tmp58 19 5
   703 draw line 19 last 14 y
-    * op sub x 19 5
   704 op max newMax newMax value
   705 label __label229
-    * op add n 28 1
   706 label __label24
   707 draw color 255 255 255 255
   708 draw lineRect 10 10 156 156

Modifications by Loop Optimization: replicate condition at line 32 (+1 instructions):
 
    29 label __label7
    30 sensor __tmp16 switch1 @enabled
    31 jump __label9 notEqual __tmp16 0
+   32 label __label230
    33 print "Item Rate Display"
    34 set start @time
    35 sensor __tmp19 cell1 @dead
 
   735 print loops
   736 printflush message1
   737 label __label8
-    * jump __label7 always
+  738 sensor __tmp16 switch1 @enabled
+  739 jump __label230 equal __tmp16 0
   740 label __label9
   741 control enabled switch1 0
   742 end

Modifications by Loop Unrolling: unroll loop at line 24 (+167 instructions):
 
    11 label __label0
    12 label __label1
    13 read maximum bank1 ptr
-    * set n 0
-    * label __label2
-    * label __label34
-    * op sub ptr ptr 1
-    * jump __label5 greaterThan ptr 256
-    * op sub ptr 511 1
-    * label __label5
-    * label __label6
-    * read __tmp13 bank1 ptr
-    * op max maximum maximum __tmp13
-    * label __label3
-    * op add n n 1
-    * jump __label34 lessThan n 29
-    * label __label4
+   14 set n 0
+   15 label __label231
+   16 label __label232
+   17 op sub ptr ptr 1
+   18 jump __label233 greaterThan ptr 256
+   19 op sub ptr 511 1
+   20 label __label233
+   21 label __label234
+   22 read __tmp13 bank1 ptr
+   23 op max maximum maximum __tmp13
+   24 label __label235
+   25 op add n n 1
+   26 label __label236
+   27 op sub ptr ptr 1
+   28 jump __label237 greaterThan ptr 256
+   29 op sub ptr 511 1
+   30 label __label237
+   31 label __label238
+   32 read __tmp13 bank1 ptr
+   33 op max maximum maximum __tmp13
+   34 label __label239
+   35 op add n n 1
+   36 label __label240
+   37 op sub ptr ptr 1
+   38 jump __label241 greaterThan ptr 256
+   39 op sub ptr 511 1
+   40 label __label241
+   41 label __label242
+   42 read __tmp13 bank1 ptr
+   43 op max maximum maximum __tmp13
+   44 label __label243
+   45 op add n n 1
+   46 label __label244
+   47 op sub ptr ptr 1
+   48 jump __label245 greaterThan ptr 256
+   49 op sub ptr 511 1
+   50 label __label245
+   51 label __label246
+   52 read __tmp13 bank1 ptr
+   53 op max maximum maximum __tmp13
+   54 label __label247
+   55 op add n n 1
+   56 label __label248
+   57 op sub ptr ptr 1
+   58 jump __label249 greaterThan ptr 256
+   59 op sub ptr 511 1
+   60 label __label249
+   61 label __label250
+   62 read __tmp13 bank1 ptr
+   63 op max maximum maximum __tmp13
+   64 label __label251
+   65 op add n n 1
+   66 label __label252
+   67 op sub ptr ptr 1
+   68 jump __label253 greaterThan ptr 256
+   69 op sub ptr 511 1
+   70 label __label253
+   71 label __label254
+   72 read __tmp13 bank1 ptr
+   73 op max maximum maximum __tmp13
+   74 label __label255
+   75 op add n n 1
+   76 label __label256
+   77 op sub ptr ptr 1
+   78 jump __label257 greaterThan ptr 256
+   79 op sub ptr 511 1
+   80 label __label257
+   81 label __label258
+   82 read __tmp13 bank1 ptr
+   83 op max maximum maximum __tmp13
+   84 label __label259
+   85 op add n n 1
+   86 label __label260
+   87 op sub ptr ptr 1
+   88 jump __label261 greaterThan ptr 256
+   89 op sub ptr 511 1
+   90 label __label261
+   91 label __label262
+   92 read __tmp13 bank1 ptr
+   93 op max maximum maximum __tmp13
+   94 label __label263
+   95 op add n n 1
+   96 label __label264
+   97 op sub ptr ptr 1
+   98 jump __label265 greaterThan ptr 256
+   99 op sub ptr 511 1
+  100 label __label265
+  101 label __label266
+  102 read __tmp13 bank1 ptr
+  103 op max maximum maximum __tmp13
+  104 label __label267
+  105 op add n n 1
+  106 label __label268
+  107 op sub ptr ptr 1
+  108 jump __label269 greaterThan ptr 256
+  109 op sub ptr 511 1
+  110 label __label269
+  111 label __label270
+  112 read __tmp13 bank1 ptr
+  113 op max maximum maximum __tmp13
+  114 label __label271
+  115 op add n n 1
+  116 label __label272
+  117 op sub ptr ptr 1
+  118 jump __label273 greaterThan ptr 256
+  119 op sub ptr 511 1
+  120 label __label273
+  121 label __label274
+  122 read __tmp13 bank1 ptr
+  123 op max maximum maximum __tmp13
+  124 label __label275
+  125 op add n n 1
+  126 label __label276
+  127 op sub ptr ptr 1
+  128 jump __label277 greaterThan ptr 256
+  129 op sub ptr 511 1
+  130 label __label277
+  131 label __label278
+  132 read __tmp13 bank1 ptr
+  133 op max maximum maximum __tmp13
+  134 label __label279
+  135 op add n n 1
+  136 label __label280
+  137 op sub ptr ptr 1
+  138 jump __label281 greaterThan ptr 256
+  139 op sub ptr 511 1
+  140 label __label281
+  141 label __label282
+  142 read __tmp13 bank1 ptr
+  143 op max maximum maximum __tmp13
+  144 label __label283
+  145 op add n n 1
+  146 label __label284
+  147 op sub ptr ptr 1
+  148 jump __label285 greaterThan ptr 256
+  149 op sub ptr 511 1
+  150 label __label285
+  151 label __label286
+  152 read __tmp13 bank1 ptr
+  153 op max maximum maximum __tmp13
+  154 label __label287
+  155 op add n n 1
+  156 label __label288
+  157 op sub ptr ptr 1
+  158 jump __label289 greaterThan ptr 256
+  159 op sub ptr 511 1
+  160 label __label289
+  161 label __label290
+  162 read __tmp13 bank1 ptr
+  163 op max maximum maximum __tmp13
+  164 label __label291
+  165 op add n n 1
+  166 label __label292
+  167 op sub ptr ptr 1
+  168 jump __label293 greaterThan ptr 256
+  169 op sub ptr 511 1
+  170 label __label293
+  171 label __label294
+  172 read __tmp13 bank1 ptr
+  173 op max maximum maximum __tmp13
+  174 label __label295
+  175 op add n n 1
+  176 label __label296
+  177 op sub ptr ptr 1
+  178 jump __label297 greaterThan ptr 256
+  179 op sub ptr 511 1
+  180 label __label297
+  181 label __label298
+  182 read __tmp13 bank1 ptr
+  183 op max maximum maximum __tmp13
+  184 label __label299
+  185 op add n n 1
+  186 label __label300
+  187 op sub ptr ptr 1
+  188 jump __label301 greaterThan ptr 256
+  189 op sub ptr 511 1
+  190 label __label301
+  191 label __label302
+  192 read __tmp13 bank1 ptr
+  193 op max maximum maximum __tmp13
+  194 label __label303
+  195 op add n n 1
+  196 label __label304
+  197 op sub ptr ptr 1
+  198 jump __label305 greaterThan ptr 256
+  199 op sub ptr 511 1
+  200 label __label305
+  201 label __label306
+  202 read __tmp13 bank1 ptr
+  203 op max maximum maximum __tmp13
+  204 label __label307
+  205 op add n n 1
+  206 label __label308
+  207 op sub ptr ptr 1
+  208 jump __label309 greaterThan ptr 256
+  209 op sub ptr 511 1
+  210 label __label309
+  211 label __label310
+  212 read __tmp13 bank1 ptr
+  213 op max maximum maximum __tmp13
+  214 label __label311
+  215 op add n n 1
+  216 label __label312
+  217 op sub ptr ptr 1
+  218 jump __label313 greaterThan ptr 256
+  219 op sub ptr 511 1
+  220 label __label313
+  221 label __label314
+  222 read __tmp13 bank1 ptr
+  223 op max maximum maximum __tmp13
+  224 label __label315
+  225 op add n n 1
+  226 label __label316
+  227 op sub ptr ptr 1
+  228 jump __label317 greaterThan ptr 256
+  229 op sub ptr 511 1
+  230 label __label317
+  231 label __label318
+  232 read __tmp13 bank1 ptr
+  233 op max maximum maximum __tmp13
+  234 label __label319
+  235 op add n n 1
+  236 label __label320
+  237 op sub ptr ptr 1
+  238 jump __label321 greaterThan ptr 256
+  239 op sub ptr 511 1
+  240 label __label321
+  241 label __label322
+  242 read __tmp13 bank1 ptr
+  243 op max maximum maximum __tmp13
+  244 label __label323
+  245 op add n n 1
+  246 label __label324
+  247 op sub ptr ptr 1
+  248 jump __label325 greaterThan ptr 256
+  249 op sub ptr 511 1
+  250 label __label325
+  251 label __label326
+  252 read __tmp13 bank1 ptr
+  253 op max maximum maximum __tmp13
+  254 label __label327
+  255 op add n n 1
+  256 label __label328
+  257 op sub ptr ptr 1
+  258 jump __label329 greaterThan ptr 256
+  259 op sub ptr 511 1
+  260 label __label329
+  261 label __label330
+  262 read __tmp13 bank1 ptr
+  263 op max maximum maximum __tmp13
+  264 label __label331
+  265 op add n n 1
+  266 label __label332
+  267 op sub ptr ptr 1
+  268 jump __label333 greaterThan ptr 256
+  269 op sub ptr 511 1
+  270 label __label333
+  271 label __label334
+  272 read __tmp13 bank1 ptr
+  273 op max maximum maximum __tmp13
+  274 label __label335
+  275 op add n n 1
+  276 label __label336
+  277 op sub ptr ptr 1
+  278 jump __label337 greaterThan ptr 256
+  279 op sub ptr 511 1
+  280 label __label337
+  281 label __label338
+  282 read __tmp13 bank1 ptr
+  283 op max maximum maximum __tmp13
+  284 label __label339
+  285 op add n n 1
+  286 label __label340
+  287 op sub ptr ptr 1
+  288 jump __label341 greaterThan ptr 256
+  289 op sub ptr 511 1
+  290 label __label341
+  291 label __label342
+  292 read __tmp13 bank1 ptr
+  293 op max maximum maximum __tmp13
+  294 label __label343
+  295 op add n n 1
+  296 label __label344
+  297 op sub ptr ptr 1
+  298 jump __label345 greaterThan ptr 256
+  299 op sub ptr 511 1
+  300 label __label345
+  301 label __label346
+  302 read __tmp13 bank1 ptr
+  303 op max maximum maximum __tmp13
+  304 label __label347
+  305 op add n n 1
+  306 label __label4
   307 op mul maximum maximum 3
   308 label __label7
   309 sensor __tmp16 switch1 @enabled

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    22 read __tmp13 bank1 ptr
    23 op max maximum maximum __tmp13
    24 label __label235
-    * op add n n 1
+   25 op add n 0 1
    26 label __label236
    27 op sub ptr ptr 1
    28 jump __label237 greaterThan ptr 256
 
    32 read __tmp13 bank1 ptr
    33 op max maximum maximum __tmp13
    34 label __label239
-    * op add n n 1
+   35 op add n 1 1
    36 label __label240
    37 op sub ptr ptr 1
    38 jump __label241 greaterThan ptr 256
 
    42 read __tmp13 bank1 ptr
    43 op max maximum maximum __tmp13
    44 label __label243
-    * op add n n 1
+   45 op add n 2 1
    46 label __label244
    47 op sub ptr ptr 1
    48 jump __label245 greaterThan ptr 256
 
    52 read __tmp13 bank1 ptr
    53 op max maximum maximum __tmp13
    54 label __label247
-    * op add n n 1
+   55 op add n 3 1
    56 label __label248
    57 op sub ptr ptr 1
    58 jump __label249 greaterThan ptr 256
 
    62 read __tmp13 bank1 ptr
    63 op max maximum maximum __tmp13
    64 label __label251
-    * op add n n 1
+   65 op add n 4 1
    66 label __label252
    67 op sub ptr ptr 1
    68 jump __label253 greaterThan ptr 256
 
    72 read __tmp13 bank1 ptr
    73 op max maximum maximum __tmp13
    74 label __label255
-    * op add n n 1
+   75 op add n 5 1
    76 label __label256
    77 op sub ptr ptr 1
    78 jump __label257 greaterThan ptr 256
 
    82 read __tmp13 bank1 ptr
    83 op max maximum maximum __tmp13
    84 label __label259
-    * op add n n 1
+   85 op add n 6 1
    86 label __label260
    87 op sub ptr ptr 1
    88 jump __label261 greaterThan ptr 256
 
    92 read __tmp13 bank1 ptr
    93 op max maximum maximum __tmp13
    94 label __label263
-    * op add n n 1
+   95 op add n 7 1
    96 label __label264
    97 op sub ptr ptr 1
    98 jump __label265 greaterThan ptr 256
 
   102 read __tmp13 bank1 ptr
   103 op max maximum maximum __tmp13
   104 label __label267
-    * op add n n 1
+  105 op add n 8 1
   106 label __label268
   107 op sub ptr ptr 1
   108 jump __label269 greaterThan ptr 256
 
   112 read __tmp13 bank1 ptr
   113 op max maximum maximum __tmp13
   114 label __label271
-    * op add n n 1
+  115 op add n 9 1
   116 label __label272
   117 op sub ptr ptr 1
   118 jump __label273 greaterThan ptr 256
 
   122 read __tmp13 bank1 ptr
   123 op max maximum maximum __tmp13
   124 label __label275
-    * op add n n 1
+  125 op add n 10 1
   126 label __label276
   127 op sub ptr ptr 1
   128 jump __label277 greaterThan ptr 256
 
   132 read __tmp13 bank1 ptr
   133 op max maximum maximum __tmp13
   134 label __label279
-    * op add n n 1
+  135 op add n 11 1
   136 label __label280
   137 op sub ptr ptr 1
   138 jump __label281 greaterThan ptr 256
 
   142 read __tmp13 bank1 ptr
   143 op max maximum maximum __tmp13
   144 label __label283
-    * op add n n 1
+  145 op add n 12 1
   146 label __label284
   147 op sub ptr ptr 1
   148 jump __label285 greaterThan ptr 256
 
   152 read __tmp13 bank1 ptr
   153 op max maximum maximum __tmp13
   154 label __label287
-    * op add n n 1
+  155 op add n 13 1
   156 label __label288
   157 op sub ptr ptr 1
   158 jump __label289 greaterThan ptr 256
 
   162 read __tmp13 bank1 ptr
   163 op max maximum maximum __tmp13
   164 label __label291
-    * op add n n 1
+  165 op add n 14 1
   166 label __label292
   167 op sub ptr ptr 1
   168 jump __label293 greaterThan ptr 256
 
   172 read __tmp13 bank1 ptr
   173 op max maximum maximum __tmp13
   174 label __label295
-    * op add n n 1
+  175 op add n 15 1
   176 label __label296
   177 op sub ptr ptr 1
   178 jump __label297 greaterThan ptr 256
 
   182 read __tmp13 bank1 ptr
   183 op max maximum maximum __tmp13
   184 label __label299
-    * op add n n 1
+  185 op add n 16 1
   186 label __label300
   187 op sub ptr ptr 1
   188 jump __label301 greaterThan ptr 256
 
   192 read __tmp13 bank1 ptr
   193 op max maximum maximum __tmp13
   194 label __label303
-    * op add n n 1
+  195 op add n 17 1
   196 label __label304
   197 op sub ptr ptr 1
   198 jump __label305 greaterThan ptr 256
 
   202 read __tmp13 bank1 ptr
   203 op max maximum maximum __tmp13
   204 label __label307
-    * op add n n 1
+  205 op add n 18 1
   206 label __label308
   207 op sub ptr ptr 1
   208 jump __label309 greaterThan ptr 256
 
   212 read __tmp13 bank1 ptr
   213 op max maximum maximum __tmp13
   214 label __label311
-    * op add n n 1
+  215 op add n 19 1
   216 label __label312
   217 op sub ptr ptr 1
   218 jump __label313 greaterThan ptr 256
 
   222 read __tmp13 bank1 ptr
   223 op max maximum maximum __tmp13
   224 label __label315
-    * op add n n 1
+  225 op add n 20 1
   226 label __label316
   227 op sub ptr ptr 1
   228 jump __label317 greaterThan ptr 256
 
   232 read __tmp13 bank1 ptr
   233 op max maximum maximum __tmp13
   234 label __label319
-    * op add n n 1
+  235 op add n 21 1
   236 label __label320
   237 op sub ptr ptr 1
   238 jump __label321 greaterThan ptr 256
 
   242 read __tmp13 bank1 ptr
   243 op max maximum maximum __tmp13
   244 label __label323
-    * op add n n 1
+  245 op add n 22 1
   246 label __label324
   247 op sub ptr ptr 1
   248 jump __label325 greaterThan ptr 256
 
   252 read __tmp13 bank1 ptr
   253 op max maximum maximum __tmp13
   254 label __label327
-    * op add n n 1
+  255 op add n 23 1
   256 label __label328
   257 op sub ptr ptr 1
   258 jump __label329 greaterThan ptr 256
 
   262 read __tmp13 bank1 ptr
   263 op max maximum maximum __tmp13
   264 label __label331
-    * op add n n 1
+  265 op add n 24 1
   266 label __label332
   267 op sub ptr ptr 1
   268 jump __label333 greaterThan ptr 256
 
   272 read __tmp13 bank1 ptr
   273 op max maximum maximum __tmp13
   274 label __label335
-    * op add n n 1
+  275 op add n 25 1
   276 label __label336
   277 op sub ptr ptr 1
   278 jump __label337 greaterThan ptr 256
 
   282 read __tmp13 bank1 ptr
   283 op max maximum maximum __tmp13
   284 label __label339
-    * op add n n 1
+  285 op add n 26 1
   286 label __label340
   287 op sub ptr ptr 1
   288 jump __label341 greaterThan ptr 256
 
   292 read __tmp13 bank1 ptr
   293 op max maximum maximum __tmp13
   294 label __label343
-    * op add n n 1
+  295 op add n 27 1
   296 label __label344
   297 op sub ptr ptr 1
   298 jump __label345 greaterThan ptr 256
 
   302 read __tmp13 bank1 ptr
   303 op max maximum maximum __tmp13
   304 label __label347
-    * op add n n 1
+  305 op add n 28 1
   306 label __label4
   307 op mul maximum maximum 3
   308 label __label7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-30 instructions):
 
    11 label __label0
    12 label __label1
    13 read maximum bank1 ptr
-    * set n 0
    14 label __label231
    15 label __label232
    16 op sub ptr ptr 1
 
    21 read __tmp13 bank1 ptr
    22 op max maximum maximum __tmp13
    23 label __label235
-    * op add n 0 1
    24 label __label236
    25 op sub ptr ptr 1
    26 jump __label237 greaterThan ptr 256
 
    30 read __tmp13 bank1 ptr
    31 op max maximum maximum __tmp13
    32 label __label239
-    * op add n 1 1
    33 label __label240
    34 op sub ptr ptr 1
    35 jump __label241 greaterThan ptr 256
 
    39 read __tmp13 bank1 ptr
    40 op max maximum maximum __tmp13
    41 label __label243
-    * op add n 2 1
    42 label __label244
    43 op sub ptr ptr 1
    44 jump __label245 greaterThan ptr 256
 
    48 read __tmp13 bank1 ptr
    49 op max maximum maximum __tmp13
    50 label __label247
-    * op add n 3 1
    51 label __label248
    52 op sub ptr ptr 1
    53 jump __label249 greaterThan ptr 256
 
    57 read __tmp13 bank1 ptr
    58 op max maximum maximum __tmp13
    59 label __label251
-    * op add n 4 1
    60 label __label252
    61 op sub ptr ptr 1
    62 jump __label253 greaterThan ptr 256
 
    66 read __tmp13 bank1 ptr
    67 op max maximum maximum __tmp13
    68 label __label255
-    * op add n 5 1
    69 label __label256
    70 op sub ptr ptr 1
    71 jump __label257 greaterThan ptr 256
 
    75 read __tmp13 bank1 ptr
    76 op max maximum maximum __tmp13
    77 label __label259
-    * op add n 6 1
    78 label __label260
    79 op sub ptr ptr 1
    80 jump __label261 greaterThan ptr 256
 
    84 read __tmp13 bank1 ptr
    85 op max maximum maximum __tmp13
    86 label __label263
-    * op add n 7 1
    87 label __label264
    88 op sub ptr ptr 1
    89 jump __label265 greaterThan ptr 256
 
    93 read __tmp13 bank1 ptr
    94 op max maximum maximum __tmp13
    95 label __label267
-    * op add n 8 1
    96 label __label268
    97 op sub ptr ptr 1
    98 jump __label269 greaterThan ptr 256
 
   102 read __tmp13 bank1 ptr
   103 op max maximum maximum __tmp13
   104 label __label271
-    * op add n 9 1
   105 label __label272
   106 op sub ptr ptr 1
   107 jump __label273 greaterThan ptr 256
 
   111 read __tmp13 bank1 ptr
   112 op max maximum maximum __tmp13
   113 label __label275
-    * op add n 10 1
   114 label __label276
   115 op sub ptr ptr 1
   116 jump __label277 greaterThan ptr 256
 
   120 read __tmp13 bank1 ptr
   121 op max maximum maximum __tmp13
   122 label __label279
-    * op add n 11 1
   123 label __label280
   124 op sub ptr ptr 1
   125 jump __label281 greaterThan ptr 256
 
   129 read __tmp13 bank1 ptr
   130 op max maximum maximum __tmp13
   131 label __label283
-    * op add n 12 1
   132 label __label284
   133 op sub ptr ptr 1
   134 jump __label285 greaterThan ptr 256
 
   138 read __tmp13 bank1 ptr
   139 op max maximum maximum __tmp13
   140 label __label287
-    * op add n 13 1
   141 label __label288
   142 op sub ptr ptr 1
   143 jump __label289 greaterThan ptr 256
 
   147 read __tmp13 bank1 ptr
   148 op max maximum maximum __tmp13
   149 label __label291
-    * op add n 14 1
   150 label __label292
   151 op sub ptr ptr 1
   152 jump __label293 greaterThan ptr 256
 
   156 read __tmp13 bank1 ptr
   157 op max maximum maximum __tmp13
   158 label __label295
-    * op add n 15 1
   159 label __label296
   160 op sub ptr ptr 1
   161 jump __label297 greaterThan ptr 256
 
   165 read __tmp13 bank1 ptr
   166 op max maximum maximum __tmp13
   167 label __label299
-    * op add n 16 1
   168 label __label300
   169 op sub ptr ptr 1
   170 jump __label301 greaterThan ptr 256
 
   174 read __tmp13 bank1 ptr
   175 op max maximum maximum __tmp13
   176 label __label303
-    * op add n 17 1
   177 label __label304
   178 op sub ptr ptr 1
   179 jump __label305 greaterThan ptr 256
 
   183 read __tmp13 bank1 ptr
   184 op max maximum maximum __tmp13
   185 label __label307
-    * op add n 18 1
   186 label __label308
   187 op sub ptr ptr 1
   188 jump __label309 greaterThan ptr 256
 
   192 read __tmp13 bank1 ptr
   193 op max maximum maximum __tmp13
   194 label __label311
-    * op add n 19 1
   195 label __label312
   196 op sub ptr ptr 1
   197 jump __label313 greaterThan ptr 256
 
   201 read __tmp13 bank1 ptr
   202 op max maximum maximum __tmp13
   203 label __label315
-    * op add n 20 1
   204 label __label316
   205 op sub ptr ptr 1
   206 jump __label317 greaterThan ptr 256
 
   210 read __tmp13 bank1 ptr
   211 op max maximum maximum __tmp13
   212 label __label319
-    * op add n 21 1
   213 label __label320
   214 op sub ptr ptr 1
   215 jump __label321 greaterThan ptr 256
 
   219 read __tmp13 bank1 ptr
   220 op max maximum maximum __tmp13
   221 label __label323
-    * op add n 22 1
   222 label __label324
   223 op sub ptr ptr 1
   224 jump __label325 greaterThan ptr 256
 
   228 read __tmp13 bank1 ptr
   229 op max maximum maximum __tmp13
   230 label __label327
-    * op add n 23 1
   231 label __label328
   232 op sub ptr ptr 1
   233 jump __label329 greaterThan ptr 256
 
   237 read __tmp13 bank1 ptr
   238 op max maximum maximum __tmp13
   239 label __label331
-    * op add n 24 1
   240 label __label332
   241 op sub ptr ptr 1
   242 jump __label333 greaterThan ptr 256
 
   246 read __tmp13 bank1 ptr
   247 op max maximum maximum __tmp13
   248 label __label335
-    * op add n 25 1
   249 label __label336
   250 op sub ptr ptr 1
   251 jump __label337 greaterThan ptr 256
 
   255 read __tmp13 bank1 ptr
   256 op max maximum maximum __tmp13
   257 label __label339
-    * op add n 26 1
   258 label __label340
   259 op sub ptr ptr 1
   260 jump __label341 greaterThan ptr 256
 
   264 read __tmp13 bank1 ptr
   265 op max maximum maximum __tmp13
   266 label __label343
-    * op add n 27 1
   267 label __label344
   268 op sub ptr ptr 1
   269 jump __label345 greaterThan ptr 256
 
   273 read __tmp13 bank1 ptr
   274 op max maximum maximum __tmp13
   275 label __label347
-    * op add n 28 1
   276 label __label4
   277 op mul maximum maximum 3
   278 label __label7

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
   941 op sub __tmp46 value t
   942 op add value __tmp46 h
   943 op sub head head 1
-    * jump __label225 greaterThan head 256
   944 label __label225
   945 label __label226
   946 op sub tail tail 1
-    * jump __label227 greaterThan tail 256
   947 label __label227
   948 label __label228
   949 op mul __tmp56 value scale

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
     5 printflush message1
     6 draw stroke 1
     7 read __tmp3 bank1 256
-    * op sub ptr __tmp3 0
+    8 set ptr __tmp3
     9 jump __label0 greaterThanEq ptr 256
    10 op add ptr __tmp3 254
    11 label __label0
 
   307 draw color 0 80 0 255
   308 draw rect 10 10 156 156
   309 read __tmp29 bank1 256
-    * op sub head __tmp29 0
+  310 set head __tmp29
   311 jump __label15 greaterThanEq head 256
   312 op add head __tmp29 254
   313 label __label15
 
   316 label __label42
   317 label __label43
   318 read __tmp35 bank1 head
-    * op add value 0 __tmp35
+  319 set value __tmp35
   320 op sub head head 1
   321 jump __label44 greaterThan head 256
   322 op sub head 511 1

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
     6 draw stroke 1
     7 read __tmp3 bank1 256
     8 set ptr __tmp3
-    * jump __label0 greaterThanEq ptr 256
+    9 jump __label0 greaterThanEq __tmp3 256
    10 op add ptr __tmp3 254
    11 label __label0
    12 label __label1
 
   308 draw rect 10 10 156 156
   309 read __tmp29 bank1 256
   310 set head __tmp29
-    * jump __label15 greaterThanEq head 256
+  311 jump __label15 greaterThanEq __tmp29 256
   312 op add head __tmp29 254
   313 label __label15
   314 label __label16
 
   940 read h bank1 head
   941 op sub __tmp46 value t
   942 op add value __tmp46 h
-    * op sub head head 1
   943 label __label225
   944 label __label226
-    * op sub tail tail 1
   945 label __label227
   946 label __label228
   947 op mul __tmp56 value scale

Modifications by Final phase, Single Step Elimination, iteration 1 (-1 instructions):
 
   984 jump __label230 equal __tmp16 0
   985 label __label9
   986 control enabled switch1 0
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
     0 printflush message1
-    * print "Item Rate Display"
-    * print "\n"
-    * print "[gold]Initializing...[]"
-    * print "\n"
+    1 print "Item Rate Display\n[gold]Initializing...[]\n"
     2 printflush message1
     3 draw stroke 1
     4 read __tmp3 bank1 256
 
   295 op ceil __tmp27 maximum
   296 print "\nMaximum: [green]"
   297 print __tmp27
-    * print "[]"
   298 op floor __tmp28 scale
-    * print "\nScale: [green]"
+  299 print "[]\nScale: [green]"
   300 print __tmp28
   301 print "[]"
   302 draw clear 0 0 80

Final code before resolving virtual instructions:

    0:  printflush message1                                          printflush(message1);
    1:  print "Item Rate Display\n[gold]Initializing...[]\n"         println("[gold]Initializing...[]");
    2:  printflush message1                                          printflush(message1);
    3:  draw stroke 1 0 0 0 0 0                                      stroke(1);
    4:  read __tmp3 bank1 256                                        ptr = MEMORY[INDEX] - SHIFT;
    5:  set ptr __tmp3                                               ...
    6:  jump __label0 greaterThanEq __tmp3 256                       if ptr < INDEX then ptr += SKIP_SIZE; end;
    7:  op add ptr __tmp3 254                                        ...
        label __label0                                               ...
    8:  read maximum bank1 ptr                                       maximum = MEMORY[ptr];
    9:  op sub ptr ptr 1                                             ptr = ptr - 1;
   10:  jump __label233 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   11:  op sub ptr 511 1                                             ...
        label __label233                                             ...
   12:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   13:  op max maximum maximum __tmp13                               ...
   14:  op sub ptr ptr 1                                             ptr = ptr - 1;
   15:  jump __label237 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   16:  op sub ptr 511 1                                             ...
        label __label237                                             ...
   17:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   18:  op max maximum maximum __tmp13                               ...
   19:  op sub ptr ptr 1                                             ptr = ptr - 1;
   20:  jump __label241 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   21:  op sub ptr 511 1                                             ...
        label __label241                                             ...
   22:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   23:  op max maximum maximum __tmp13                               ...
   24:  op sub ptr ptr 1                                             ptr = ptr - 1;
   25:  jump __label245 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   26:  op sub ptr 511 1                                             ...
        label __label245                                             ...
   27:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   28:  op max maximum maximum __tmp13                               ...
   29:  op sub ptr ptr 1                                             ptr = ptr - 1;
   30:  jump __label249 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   31:  op sub ptr 511 1                                             ...
        label __label249                                             ...
   32:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   33:  op max maximum maximum __tmp13                               ...
   34:  op sub ptr ptr 1                                             ptr = ptr - 1;
   35:  jump __label253 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   36:  op sub ptr 511 1                                             ...
        label __label253                                             ...
   37:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   38:  op max maximum maximum __tmp13                               ...
   39:  op sub ptr ptr 1                                             ptr = ptr - 1;
   40:  jump __label257 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   41:  op sub ptr 511 1                                             ...
        label __label257                                             ...
   42:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   43:  op max maximum maximum __tmp13                               ...
   44:  op sub ptr ptr 1                                             ptr = ptr - 1;
   45:  jump __label261 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   46:  op sub ptr 511 1                                             ...
        label __label261                                             ...
   47:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   48:  op max maximum maximum __tmp13                               ...
   49:  op sub ptr ptr 1                                             ptr = ptr - 1;
   50:  jump __label265 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   51:  op sub ptr 511 1                                             ...
        label __label265                                             ...
   52:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   53:  op max maximum maximum __tmp13                               ...
   54:  op sub ptr ptr 1                                             ptr = ptr - 1;
   55:  jump __label269 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   56:  op sub ptr 511 1                                             ...
        label __label269                                             ...
   57:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   58:  op max maximum maximum __tmp13                               ...
   59:  op sub ptr ptr 1                                             ptr = ptr - 1;
   60:  jump __label273 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   61:  op sub ptr 511 1                                             ...
        label __label273                                             ...
   62:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   63:  op max maximum maximum __tmp13                               ...
   64:  op sub ptr ptr 1                                             ptr = ptr - 1;
   65:  jump __label277 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   66:  op sub ptr 511 1                                             ...
        label __label277                                             ...
   67:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   68:  op max maximum maximum __tmp13                               ...
   69:  op sub ptr ptr 1                                             ptr = ptr - 1;
   70:  jump __label281 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   71:  op sub ptr 511 1                                             ...
        label __label281                                             ...
   72:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   73:  op max maximum maximum __tmp13                               ...
   74:  op sub ptr ptr 1                                             ptr = ptr - 1;
   75:  jump __label285 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   76:  op sub ptr 511 1                                             ...
        label __label285                                             ...
   77:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   78:  op max maximum maximum __tmp13                               ...
   79:  op sub ptr ptr 1                                             ptr = ptr - 1;
   80:  jump __label289 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   81:  op sub ptr 511 1                                             ...
        label __label289                                             ...
   82:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   83:  op max maximum maximum __tmp13                               ...
   84:  op sub ptr ptr 1                                             ptr = ptr - 1;
   85:  jump __label293 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   86:  op sub ptr 511 1                                             ...
        label __label293                                             ...
   87:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   88:  op max maximum maximum __tmp13                               ...
   89:  op sub ptr ptr 1                                             ptr = ptr - 1;
   90:  jump __label297 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   91:  op sub ptr 511 1                                             ...
        label __label297                                             ...
   92:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   93:  op max maximum maximum __tmp13                               ...
   94:  op sub ptr ptr 1                                             ptr = ptr - 1;
   95:  jump __label301 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
   96:  op sub ptr 511 1                                             ...
        label __label301                                             ...
   97:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
   98:  op max maximum maximum __tmp13                               ...
   99:  op sub ptr ptr 1                                             ptr = ptr - 1;
  100:  jump __label305 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  101:  op sub ptr 511 1                                             ...
        label __label305                                             ...
  102:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  103:  op max maximum maximum __tmp13                               ...
  104:  op sub ptr ptr 1                                             ptr = ptr - 1;
  105:  jump __label309 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  106:  op sub ptr 511 1                                             ...
        label __label309                                             ...
  107:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  108:  op max maximum maximum __tmp13                               ...
  109:  op sub ptr ptr 1                                             ptr = ptr - 1;
  110:  jump __label313 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  111:  op sub ptr 511 1                                             ...
        label __label313                                             ...
  112:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  113:  op max maximum maximum __tmp13                               ...
  114:  op sub ptr ptr 1                                             ptr = ptr - 1;
  115:  jump __label317 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  116:  op sub ptr 511 1                                             ...
        label __label317                                             ...
  117:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  118:  op max maximum maximum __tmp13                               ...
  119:  op sub ptr ptr 1                                             ptr = ptr - 1;
  120:  jump __label321 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  121:  op sub ptr 511 1                                             ...
        label __label321                                             ...
  122:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  123:  op max maximum maximum __tmp13                               ...
  124:  op sub ptr ptr 1                                             ptr = ptr - 1;
  125:  jump __label325 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  126:  op sub ptr 511 1                                             ...
        label __label325                                             ...
  127:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  128:  op max maximum maximum __tmp13                               ...
  129:  op sub ptr ptr 1                                             ptr = ptr - 1;
  130:  jump __label329 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  131:  op sub ptr 511 1                                             ...
        label __label329                                             ...
  132:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  133:  op max maximum maximum __tmp13                               ...
  134:  op sub ptr ptr 1                                             ptr = ptr - 1;
  135:  jump __label333 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  136:  op sub ptr 511 1                                             ...
        label __label333                                             ...
  137:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  138:  op max maximum maximum __tmp13                               ...
  139:  op sub ptr ptr 1                                             ptr = ptr - 1;
  140:  jump __label337 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  141:  op sub ptr 511 1                                             ...
        label __label337                                             ...
  142:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  143:  op max maximum maximum __tmp13                               ...
  144:  op sub ptr ptr 1                                             ptr = ptr - 1;
  145:  jump __label341 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  146:  op sub ptr 511 1                                             ...
        label __label341                                             ...
  147:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  148:  op max maximum maximum __tmp13                               ...
  149:  op sub ptr ptr 1                                             ptr = ptr - 1;
  150:  jump __label345 greaterThan ptr 256                          if ptr <= INDEX then ptr = SIZE - 1; end;
  151:  op sub ptr 511 1                                             ...
        label __label345                                             ...
  152:  read __tmp13 bank1 ptr                                       maximum = max(maximum, MEMORY[ptr]);
  153:  op max maximum maximum __tmp13                               ...
  154:  op mul maximum maximum 3                                     maximum = maximum * SMOOTH;
  155:  sensor __tmp16 switch1 @enabled                              while switch1.@enabled == 0 do
  156:  jump __label9 notEqual __tmp16 0                             ...
        label __label230                                             ...
  157:  print "Item Rate Display"                                    print("Item Rate Display");
  158:  set start @time                                              start = @time;
  159:  sensor __tmp19 cell1 @dead                                   if COORD.@dead == 0 then
  160:  jump __label10 notEqual __tmp19 0                            ...
  161:  read m cell1 0                                               m = COORD[n];
  162:  print "\nCoord: [gold]"                                      print($"\nCoord: [gold]$m[]");
  163:  print m                                                      ...
  164:  print "[]"                                                   ...
  165:  op max maximum maximum m                                     maximum = max(maximum, m);
        label __label10                                              if COORD.@dead == 0 then
  166:  op div scale 150 maximum                                     scale = 150 / maximum;
  167:  op ceil __tmp27 maximum 0                                    print($"\nMaximum: [green]$[]", ceil(maximum));
  168:  print "\nMaximum: [green]"                                   ...
  169:  print __tmp27                                                ...
  170:  op floor __tmp28 scale 0                                     print($"\nScale: [green]$[]", floor(scale));
  171:  print "[]\nScale: [green]"                                   ...
  172:  print __tmp28                                                ...
  173:  print "[]"                                                   ...
  174:  draw clear 0 0 80 0 0 0                                      clear(0,0,80);
  175:  draw color 0 80 0 255 0 0                                    color(0,80,0,255);
  176:  draw rect 10 10 156 156 0 0                                  rect(10,10,156,156);
  177:  read __tmp29 bank1 256                                       head = MEMORY[INDEX] - SHIFT;
  178:  set head __tmp29                                             ...
  179:  jump __label15 greaterThanEq __tmp29 256                     if head < INDEX then head += SKIP_SIZE; end;
  180:  op add head __tmp29 254                                      ...
        label __label15                                              ...
  181:  set tail head                                                tail = head;
  182:  read __tmp35 bank1 head                                      value += MEMORY[head];
  183:  set value __tmp35                                            ...
  184:  op sub head head 1                                           head -= 1;
  185:  jump __label44 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  186:  op sub head 511 1                                            ...
        label __label44                                              ...
  187:  read __tmp35 bank1 head                                      value += MEMORY[head];
  188:  op add value value __tmp35                                   ...
  189:  op sub head head 1                                           head -= 1;
  190:  jump __label48 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  191:  op sub head 511 1                                            ...
        label __label48                                              ...
  192:  read __tmp35 bank1 head                                      value += MEMORY[head];
  193:  op add value value __tmp35                                   ...
  194:  op sub head head 1                                           head -= 1;
  195:  jump __label52 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  196:  op sub head 511 1                                            ...
        label __label52                                              ...
  197:  op mul __tmp42 value scale                                   last = 10 + value * scale;
  198:  op add last 10 __tmp42                                       ...
  199:  set newMax value                                             newMax = value;
  200:  draw color 80 255 80 255 0 0                                 color(80,255,80,255);
  201:  read t bank1 tail                                            t = MEMORY[tail];
  202:  read h bank1 head                                            h = MEMORY[head];
  203:  op sub __tmp46 value t                                       value = value - t + h;
  204:  op add value __tmp46 h                                       ...
  205:  op sub head head 1                                           head -= 1;
  206:  jump __label57 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  207:  op sub head 511 1                                            ...
        label __label57                                              ...
  208:  op sub tail tail 1                                           tail -= 1;
  209:  jump __label59 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  210:  op sub tail 511 1                                            ...
        label __label59                                              ...
  211:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  212:  op add y 10 __tmp56                                          ...
  213:  draw line 159 last 154 y 0 0                                 line(x, last, x - 5, y);
  214:  set last y                                                   last = y;
  215:  op max newMax newMax value                                   newMax = max(newMax, value);
  216:  read t bank1 tail                                            t = MEMORY[tail];
  217:  read h bank1 head                                            h = MEMORY[head];
  218:  op sub __tmp46 value t                                       value = value - t + h;
  219:  op add value __tmp46 h                                       ...
  220:  op sub head head 1                                           head -= 1;
  221:  jump __label63 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  222:  op sub head 511 1                                            ...
        label __label63                                              ...
  223:  op sub tail tail 1                                           tail -= 1;
  224:  jump __label65 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  225:  op sub tail 511 1                                            ...
        label __label65                                              ...
  226:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  227:  op add y 10 __tmp56                                          ...
  228:  draw line 154 last 149 y 0 0                                 line(x, last, x - 5, y);
  229:  set last y                                                   last = y;
  230:  op max newMax newMax value                                   newMax = max(newMax, value);
  231:  read t bank1 tail                                            t = MEMORY[tail];
  232:  read h bank1 head                                            h = MEMORY[head];
  233:  op sub __tmp46 value t                                       value = value - t + h;
  234:  op add value __tmp46 h                                       ...
  235:  op sub head head 1                                           head -= 1;
  236:  jump __label69 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  237:  op sub head 511 1                                            ...
        label __label69                                              ...
  238:  op sub tail tail 1                                           tail -= 1;
  239:  jump __label71 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  240:  op sub tail 511 1                                            ...
        label __label71                                              ...
  241:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  242:  op add y 10 __tmp56                                          ...
  243:  draw line 149 last 144 y 0 0                                 line(x, last, x - 5, y);
  244:  set last y                                                   last = y;
  245:  op max newMax newMax value                                   newMax = max(newMax, value);
  246:  read t bank1 tail                                            t = MEMORY[tail];
  247:  read h bank1 head                                            h = MEMORY[head];
  248:  op sub __tmp46 value t                                       value = value - t + h;
  249:  op add value __tmp46 h                                       ...
  250:  op sub head head 1                                           head -= 1;
  251:  jump __label75 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  252:  op sub head 511 1                                            ...
        label __label75                                              ...
  253:  op sub tail tail 1                                           tail -= 1;
  254:  jump __label77 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  255:  op sub tail 511 1                                            ...
        label __label77                                              ...
  256:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  257:  op add y 10 __tmp56                                          ...
  258:  draw line 144 last 139 y 0 0                                 line(x, last, x - 5, y);
  259:  set last y                                                   last = y;
  260:  op max newMax newMax value                                   newMax = max(newMax, value);
  261:  read t bank1 tail                                            t = MEMORY[tail];
  262:  read h bank1 head                                            h = MEMORY[head];
  263:  op sub __tmp46 value t                                       value = value - t + h;
  264:  op add value __tmp46 h                                       ...
  265:  op sub head head 1                                           head -= 1;
  266:  jump __label81 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  267:  op sub head 511 1                                            ...
        label __label81                                              ...
  268:  op sub tail tail 1                                           tail -= 1;
  269:  jump __label83 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  270:  op sub tail 511 1                                            ...
        label __label83                                              ...
  271:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  272:  op add y 10 __tmp56                                          ...
  273:  draw line 139 last 134 y 0 0                                 line(x, last, x - 5, y);
  274:  set last y                                                   last = y;
  275:  op max newMax newMax value                                   newMax = max(newMax, value);
  276:  read t bank1 tail                                            t = MEMORY[tail];
  277:  read h bank1 head                                            h = MEMORY[head];
  278:  op sub __tmp46 value t                                       value = value - t + h;
  279:  op add value __tmp46 h                                       ...
  280:  op sub head head 1                                           head -= 1;
  281:  jump __label87 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  282:  op sub head 511 1                                            ...
        label __label87                                              ...
  283:  op sub tail tail 1                                           tail -= 1;
  284:  jump __label89 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  285:  op sub tail 511 1                                            ...
        label __label89                                              ...
  286:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  287:  op add y 10 __tmp56                                          ...
  288:  draw line 134 last 129 y 0 0                                 line(x, last, x - 5, y);
  289:  set last y                                                   last = y;
  290:  op max newMax newMax value                                   newMax = max(newMax, value);
  291:  read t bank1 tail                                            t = MEMORY[tail];
  292:  read h bank1 head                                            h = MEMORY[head];
  293:  op sub __tmp46 value t                                       value = value - t + h;
  294:  op add value __tmp46 h                                       ...
  295:  op sub head head 1                                           head -= 1;
  296:  jump __label93 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  297:  op sub head 511 1                                            ...
        label __label93                                              ...
  298:  op sub tail tail 1                                           tail -= 1;
  299:  jump __label95 greaterThan tail 256                          if tail <= INDEX then tail = SIZE - 1; end;
  300:  op sub tail 511 1                                            ...
        label __label95                                              ...
  301:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  302:  op add y 10 __tmp56                                          ...
  303:  draw line 129 last 124 y 0 0                                 line(x, last, x - 5, y);
  304:  set last y                                                   last = y;
  305:  op max newMax newMax value                                   newMax = max(newMax, value);
  306:  read t bank1 tail                                            t = MEMORY[tail];
  307:  read h bank1 head                                            h = MEMORY[head];
  308:  op sub __tmp46 value t                                       value = value - t + h;
  309:  op add value __tmp46 h                                       ...
  310:  op sub head head 1                                           head -= 1;
  311:  jump __label99 greaterThan head 256                          if head <= INDEX then head = SIZE - 1; end;
  312:  op sub head 511 1                                            ...
        label __label99                                              ...
  313:  op sub tail tail 1                                           tail -= 1;
  314:  jump __label101 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  315:  op sub tail 511 1                                            ...
        label __label101                                             ...
  316:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  317:  op add y 10 __tmp56                                          ...
  318:  draw line 124 last 119 y 0 0                                 line(x, last, x - 5, y);
  319:  set last y                                                   last = y;
  320:  op max newMax newMax value                                   newMax = max(newMax, value);
  321:  read t bank1 tail                                            t = MEMORY[tail];
  322:  read h bank1 head                                            h = MEMORY[head];
  323:  op sub __tmp46 value t                                       value = value - t + h;
  324:  op add value __tmp46 h                                       ...
  325:  op sub head head 1                                           head -= 1;
  326:  jump __label105 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  327:  op sub head 511 1                                            ...
        label __label105                                             ...
  328:  op sub tail tail 1                                           tail -= 1;
  329:  jump __label107 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  330:  op sub tail 511 1                                            ...
        label __label107                                             ...
  331:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  332:  op add y 10 __tmp56                                          ...
  333:  draw line 119 last 114 y 0 0                                 line(x, last, x - 5, y);
  334:  set last y                                                   last = y;
  335:  op max newMax newMax value                                   newMax = max(newMax, value);
  336:  read t bank1 tail                                            t = MEMORY[tail];
  337:  read h bank1 head                                            h = MEMORY[head];
  338:  op sub __tmp46 value t                                       value = value - t + h;
  339:  op add value __tmp46 h                                       ...
  340:  op sub head head 1                                           head -= 1;
  341:  jump __label111 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  342:  op sub head 511 1                                            ...
        label __label111                                             ...
  343:  op sub tail tail 1                                           tail -= 1;
  344:  jump __label113 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  345:  op sub tail 511 1                                            ...
        label __label113                                             ...
  346:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  347:  op add y 10 __tmp56                                          ...
  348:  draw line 114 last 109 y 0 0                                 line(x, last, x - 5, y);
  349:  set last y                                                   last = y;
  350:  op max newMax newMax value                                   newMax = max(newMax, value);
  351:  read t bank1 tail                                            t = MEMORY[tail];
  352:  read h bank1 head                                            h = MEMORY[head];
  353:  op sub __tmp46 value t                                       value = value - t + h;
  354:  op add value __tmp46 h                                       ...
  355:  op sub head head 1                                           head -= 1;
  356:  jump __label117 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  357:  op sub head 511 1                                            ...
        label __label117                                             ...
  358:  op sub tail tail 1                                           tail -= 1;
  359:  jump __label119 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  360:  op sub tail 511 1                                            ...
        label __label119                                             ...
  361:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  362:  op add y 10 __tmp56                                          ...
  363:  draw line 109 last 104 y 0 0                                 line(x, last, x - 5, y);
  364:  set last y                                                   last = y;
  365:  op max newMax newMax value                                   newMax = max(newMax, value);
  366:  read t bank1 tail                                            t = MEMORY[tail];
  367:  read h bank1 head                                            h = MEMORY[head];
  368:  op sub __tmp46 value t                                       value = value - t + h;
  369:  op add value __tmp46 h                                       ...
  370:  op sub head head 1                                           head -= 1;
  371:  jump __label123 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  372:  op sub head 511 1                                            ...
        label __label123                                             ...
  373:  op sub tail tail 1                                           tail -= 1;
  374:  jump __label125 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  375:  op sub tail 511 1                                            ...
        label __label125                                             ...
  376:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  377:  op add y 10 __tmp56                                          ...
  378:  draw line 104 last 99 y 0 0                                  line(x, last, x - 5, y);
  379:  set last y                                                   last = y;
  380:  op max newMax newMax value                                   newMax = max(newMax, value);
  381:  read t bank1 tail                                            t = MEMORY[tail];
  382:  read h bank1 head                                            h = MEMORY[head];
  383:  op sub __tmp46 value t                                       value = value - t + h;
  384:  op add value __tmp46 h                                       ...
  385:  op sub head head 1                                           head -= 1;
  386:  jump __label129 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  387:  op sub head 511 1                                            ...
        label __label129                                             ...
  388:  op sub tail tail 1                                           tail -= 1;
  389:  jump __label131 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  390:  op sub tail 511 1                                            ...
        label __label131                                             ...
  391:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  392:  op add y 10 __tmp56                                          ...
  393:  draw line 99 last 94 y 0 0                                   line(x, last, x - 5, y);
  394:  set last y                                                   last = y;
  395:  op max newMax newMax value                                   newMax = max(newMax, value);
  396:  read t bank1 tail                                            t = MEMORY[tail];
  397:  read h bank1 head                                            h = MEMORY[head];
  398:  op sub __tmp46 value t                                       value = value - t + h;
  399:  op add value __tmp46 h                                       ...
  400:  op sub head head 1                                           head -= 1;
  401:  jump __label135 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  402:  op sub head 511 1                                            ...
        label __label135                                             ...
  403:  op sub tail tail 1                                           tail -= 1;
  404:  jump __label137 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  405:  op sub tail 511 1                                            ...
        label __label137                                             ...
  406:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  407:  op add y 10 __tmp56                                          ...
  408:  draw line 94 last 89 y 0 0                                   line(x, last, x - 5, y);
  409:  set last y                                                   last = y;
  410:  op max newMax newMax value                                   newMax = max(newMax, value);
  411:  read t bank1 tail                                            t = MEMORY[tail];
  412:  read h bank1 head                                            h = MEMORY[head];
  413:  op sub __tmp46 value t                                       value = value - t + h;
  414:  op add value __tmp46 h                                       ...
  415:  op sub head head 1                                           head -= 1;
  416:  jump __label141 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  417:  op sub head 511 1                                            ...
        label __label141                                             ...
  418:  op sub tail tail 1                                           tail -= 1;
  419:  jump __label143 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  420:  op sub tail 511 1                                            ...
        label __label143                                             ...
  421:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  422:  op add y 10 __tmp56                                          ...
  423:  draw line 89 last 84 y 0 0                                   line(x, last, x - 5, y);
  424:  set last y                                                   last = y;
  425:  op max newMax newMax value                                   newMax = max(newMax, value);
  426:  read t bank1 tail                                            t = MEMORY[tail];
  427:  read h bank1 head                                            h = MEMORY[head];
  428:  op sub __tmp46 value t                                       value = value - t + h;
  429:  op add value __tmp46 h                                       ...
  430:  op sub head head 1                                           head -= 1;
  431:  jump __label147 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  432:  op sub head 511 1                                            ...
        label __label147                                             ...
  433:  op sub tail tail 1                                           tail -= 1;
  434:  jump __label149 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  435:  op sub tail 511 1                                            ...
        label __label149                                             ...
  436:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  437:  op add y 10 __tmp56                                          ...
  438:  draw line 84 last 79 y 0 0                                   line(x, last, x - 5, y);
  439:  set last y                                                   last = y;
  440:  op max newMax newMax value                                   newMax = max(newMax, value);
  441:  read t bank1 tail                                            t = MEMORY[tail];
  442:  read h bank1 head                                            h = MEMORY[head];
  443:  op sub __tmp46 value t                                       value = value - t + h;
  444:  op add value __tmp46 h                                       ...
  445:  op sub head head 1                                           head -= 1;
  446:  jump __label153 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  447:  op sub head 511 1                                            ...
        label __label153                                             ...
  448:  op sub tail tail 1                                           tail -= 1;
  449:  jump __label155 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  450:  op sub tail 511 1                                            ...
        label __label155                                             ...
  451:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  452:  op add y 10 __tmp56                                          ...
  453:  draw line 79 last 74 y 0 0                                   line(x, last, x - 5, y);
  454:  set last y                                                   last = y;
  455:  op max newMax newMax value                                   newMax = max(newMax, value);
  456:  read t bank1 tail                                            t = MEMORY[tail];
  457:  read h bank1 head                                            h = MEMORY[head];
  458:  op sub __tmp46 value t                                       value = value - t + h;
  459:  op add value __tmp46 h                                       ...
  460:  op sub head head 1                                           head -= 1;
  461:  jump __label159 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  462:  op sub head 511 1                                            ...
        label __label159                                             ...
  463:  op sub tail tail 1                                           tail -= 1;
  464:  jump __label161 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  465:  op sub tail 511 1                                            ...
        label __label161                                             ...
  466:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  467:  op add y 10 __tmp56                                          ...
  468:  draw line 74 last 69 y 0 0                                   line(x, last, x - 5, y);
  469:  set last y                                                   last = y;
  470:  op max newMax newMax value                                   newMax = max(newMax, value);
  471:  read t bank1 tail                                            t = MEMORY[tail];
  472:  read h bank1 head                                            h = MEMORY[head];
  473:  op sub __tmp46 value t                                       value = value - t + h;
  474:  op add value __tmp46 h                                       ...
  475:  op sub head head 1                                           head -= 1;
  476:  jump __label165 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  477:  op sub head 511 1                                            ...
        label __label165                                             ...
  478:  op sub tail tail 1                                           tail -= 1;
  479:  jump __label167 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  480:  op sub tail 511 1                                            ...
        label __label167                                             ...
  481:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  482:  op add y 10 __tmp56                                          ...
  483:  draw line 69 last 64 y 0 0                                   line(x, last, x - 5, y);
  484:  set last y                                                   last = y;
  485:  op max newMax newMax value                                   newMax = max(newMax, value);
  486:  read t bank1 tail                                            t = MEMORY[tail];
  487:  read h bank1 head                                            h = MEMORY[head];
  488:  op sub __tmp46 value t                                       value = value - t + h;
  489:  op add value __tmp46 h                                       ...
  490:  op sub head head 1                                           head -= 1;
  491:  jump __label171 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  492:  op sub head 511 1                                            ...
        label __label171                                             ...
  493:  op sub tail tail 1                                           tail -= 1;
  494:  jump __label173 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  495:  op sub tail 511 1                                            ...
        label __label173                                             ...
  496:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  497:  op add y 10 __tmp56                                          ...
  498:  draw line 64 last 59 y 0 0                                   line(x, last, x - 5, y);
  499:  set last y                                                   last = y;
  500:  op max newMax newMax value                                   newMax = max(newMax, value);
  501:  read t bank1 tail                                            t = MEMORY[tail];
  502:  read h bank1 head                                            h = MEMORY[head];
  503:  op sub __tmp46 value t                                       value = value - t + h;
  504:  op add value __tmp46 h                                       ...
  505:  op sub head head 1                                           head -= 1;
  506:  jump __label177 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  507:  op sub head 511 1                                            ...
        label __label177                                             ...
  508:  op sub tail tail 1                                           tail -= 1;
  509:  jump __label179 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  510:  op sub tail 511 1                                            ...
        label __label179                                             ...
  511:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  512:  op add y 10 __tmp56                                          ...
  513:  draw line 59 last 54 y 0 0                                   line(x, last, x - 5, y);
  514:  set last y                                                   last = y;
  515:  op max newMax newMax value                                   newMax = max(newMax, value);
  516:  read t bank1 tail                                            t = MEMORY[tail];
  517:  read h bank1 head                                            h = MEMORY[head];
  518:  op sub __tmp46 value t                                       value = value - t + h;
  519:  op add value __tmp46 h                                       ...
  520:  op sub head head 1                                           head -= 1;
  521:  jump __label183 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  522:  op sub head 511 1                                            ...
        label __label183                                             ...
  523:  op sub tail tail 1                                           tail -= 1;
  524:  jump __label185 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  525:  op sub tail 511 1                                            ...
        label __label185                                             ...
  526:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  527:  op add y 10 __tmp56                                          ...
  528:  draw line 54 last 49 y 0 0                                   line(x, last, x - 5, y);
  529:  set last y                                                   last = y;
  530:  op max newMax newMax value                                   newMax = max(newMax, value);
  531:  read t bank1 tail                                            t = MEMORY[tail];
  532:  read h bank1 head                                            h = MEMORY[head];
  533:  op sub __tmp46 value t                                       value = value - t + h;
  534:  op add value __tmp46 h                                       ...
  535:  op sub head head 1                                           head -= 1;
  536:  jump __label189 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  537:  op sub head 511 1                                            ...
        label __label189                                             ...
  538:  op sub tail tail 1                                           tail -= 1;
  539:  jump __label191 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  540:  op sub tail 511 1                                            ...
        label __label191                                             ...
  541:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  542:  op add y 10 __tmp56                                          ...
  543:  draw line 49 last 44 y 0 0                                   line(x, last, x - 5, y);
  544:  set last y                                                   last = y;
  545:  op max newMax newMax value                                   newMax = max(newMax, value);
  546:  read t bank1 tail                                            t = MEMORY[tail];
  547:  read h bank1 head                                            h = MEMORY[head];
  548:  op sub __tmp46 value t                                       value = value - t + h;
  549:  op add value __tmp46 h                                       ...
  550:  op sub head head 1                                           head -= 1;
  551:  jump __label195 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  552:  op sub head 511 1                                            ...
        label __label195                                             ...
  553:  op sub tail tail 1                                           tail -= 1;
  554:  jump __label197 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  555:  op sub tail 511 1                                            ...
        label __label197                                             ...
  556:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  557:  op add y 10 __tmp56                                          ...
  558:  draw line 44 last 39 y 0 0                                   line(x, last, x - 5, y);
  559:  set last y                                                   last = y;
  560:  op max newMax newMax value                                   newMax = max(newMax, value);
  561:  read t bank1 tail                                            t = MEMORY[tail];
  562:  read h bank1 head                                            h = MEMORY[head];
  563:  op sub __tmp46 value t                                       value = value - t + h;
  564:  op add value __tmp46 h                                       ...
  565:  op sub head head 1                                           head -= 1;
  566:  jump __label201 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  567:  op sub head 511 1                                            ...
        label __label201                                             ...
  568:  op sub tail tail 1                                           tail -= 1;
  569:  jump __label203 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  570:  op sub tail 511 1                                            ...
        label __label203                                             ...
  571:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  572:  op add y 10 __tmp56                                          ...
  573:  draw line 39 last 34 y 0 0                                   line(x, last, x - 5, y);
  574:  set last y                                                   last = y;
  575:  op max newMax newMax value                                   newMax = max(newMax, value);
  576:  read t bank1 tail                                            t = MEMORY[tail];
  577:  read h bank1 head                                            h = MEMORY[head];
  578:  op sub __tmp46 value t                                       value = value - t + h;
  579:  op add value __tmp46 h                                       ...
  580:  op sub head head 1                                           head -= 1;
  581:  jump __label207 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  582:  op sub head 511 1                                            ...
        label __label207                                             ...
  583:  op sub tail tail 1                                           tail -= 1;
  584:  jump __label209 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  585:  op sub tail 511 1                                            ...
        label __label209                                             ...
  586:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  587:  op add y 10 __tmp56                                          ...
  588:  draw line 34 last 29 y 0 0                                   line(x, last, x - 5, y);
  589:  set last y                                                   last = y;
  590:  op max newMax newMax value                                   newMax = max(newMax, value);
  591:  read t bank1 tail                                            t = MEMORY[tail];
  592:  read h bank1 head                                            h = MEMORY[head];
  593:  op sub __tmp46 value t                                       value = value - t + h;
  594:  op add value __tmp46 h                                       ...
  595:  op sub head head 1                                           head -= 1;
  596:  jump __label213 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  597:  op sub head 511 1                                            ...
        label __label213                                             ...
  598:  op sub tail tail 1                                           tail -= 1;
  599:  jump __label215 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  600:  op sub tail 511 1                                            ...
        label __label215                                             ...
  601:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  602:  op add y 10 __tmp56                                          ...
  603:  draw line 29 last 24 y 0 0                                   line(x, last, x - 5, y);
  604:  set last y                                                   last = y;
  605:  op max newMax newMax value                                   newMax = max(newMax, value);
  606:  read t bank1 tail                                            t = MEMORY[tail];
  607:  read h bank1 head                                            h = MEMORY[head];
  608:  op sub __tmp46 value t                                       value = value - t + h;
  609:  op add value __tmp46 h                                       ...
  610:  op sub head head 1                                           head -= 1;
  611:  jump __label219 greaterThan head 256                         if head <= INDEX then head = SIZE - 1; end;
  612:  op sub head 511 1                                            ...
        label __label219                                             ...
  613:  op sub tail tail 1                                           tail -= 1;
  614:  jump __label221 greaterThan tail 256                         if tail <= INDEX then tail = SIZE - 1; end;
  615:  op sub tail 511 1                                            ...
        label __label221                                             ...
  616:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  617:  op add y 10 __tmp56                                          ...
  618:  draw line 24 last 19 y 0 0                                   line(x, last, x - 5, y);
  619:  set last y                                                   last = y;
  620:  op max newMax newMax value                                   newMax = max(newMax, value);
  621:  read t bank1 tail                                            t = MEMORY[tail];
  622:  read h bank1 head                                            h = MEMORY[head];
  623:  op sub __tmp46 value t                                       value = value - t + h;
  624:  op add value __tmp46 h                                       ...
  625:  op mul __tmp56 value scale                                   y = 10 + value * scale;
  626:  op add y 10 __tmp56                                          ...
  627:  draw line 19 last 14 y 0 0                                   line(x, last, x - 5, y);
  628:  op max newMax newMax value                                   newMax = max(newMax, value);
  629:  draw color 255 255 255 255 0 0                               color(255,255,255,255);
  630:  draw lineRect 10 10 156 156 0 0                              lineRect(10,10,156,156);
  631:  op max maximum newMax maximum                                maximum = max(newMax, maximum);
  632:  op mul __tmp62 3 newMax                                      if 3 * newMax < maximum then
  633:  jump __label29 greaterThanEq __tmp62 maximum                 ...
  634:  op mul maximum 1.5 newMax                                    maximum = 1.5 * newMax;
        label __label29                                              if 3 * newMax < maximum then
  635:  write maximum cell1 0                                        COORD[POSITION] = maximum;
  636:  op sub __tmp66 @time start                                   print($"\n[lightgray]Loop time: $ ms", floor(@time - start));
  637:  op floor __tmp67 __tmp66 0                                   ...
  638:  print "\n[lightgray]Loop time: "                             ...
  639:  print __tmp67                                                ...
  640:  print " ms"                                                  ...
  641:  op div __tmp68 @time 1000                                    wait = FREQ * ceil(@time / FREQ);
  642:  op ceil __tmp69 __tmp68 0                                    ...
  643:  op mul wait 1000 __tmp69                                     ...
  644:  set loops 0                                                  loops = 0;
  645:  jump __label33 greaterThanEq @time wait                      while @time < wait do
        label __label38                                              ...
  646:  op add loops loops 1                                         loops += 1;
  647:  jump __label38 lessThan @time wait                           while @time < wait do
        label __label33                                              ...
  648:  drawflush display1                                           drawflush(display1);
  649:  print "\nLoops: "                                            print("\nLoops: ", loops);
  650:  print loops                                                  ...
  651:  printflush message1                                          printflush(message1);
  652:  sensor __tmp16 switch1 @enabled                              while switch1.@enabled == 0 do
  653:  jump __label230 equal __tmp16 0                              ...
        label __label9                                               ...
  654:  control enabled switch1 0 0 0 0                              switch1.enabled = 0;


Performance: parsed in 590 ms, compiled in 108 ms, optimized in 523 ms, run in 24 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (128 steps):
Item Rate Display
[gold]Initializing...[]

Execution exception at instruction 155: sensor __tmp16 switch1 @enabled:
Instruction not supported by Mindcode emulator.
(Use '#set err-unsupported-opcode = false;' directive or '--err-unsupported-opcode false' command line option to ignore this exception.)
