set .B0 null
set .B1 null
set .END_INDEX null
set .G0 null
set .G1 null
set .MAXIMUM null
set .MESSAGE null
set .R0 null
set .R1 null
set .SENSOR null
set .SIZE null
set .START_INDEX null
set .SWITCH null
print "Item/Liquid/Energy Level Meter"
set .CONTAINER null
set .MEMORY null
set :n @links
jump 90 lessThanEq :n 0
op sub :n :n 1
getlink :block :n
print "\nFound: "
print :block
sensor *tmp13 :block @type
jump 26 notEqual *tmp13 @message
set .MESSAGE :block
jump 89 always 0 0
jump 29 notEqual *tmp13 @switch
set .SWITCH :block
jump 89 always 0 0
jump 35 notEqual *tmp13 @memory-bank
set .MEMORY :block
set .START_INDEX 264
set .END_INDEX 511
set .SIZE 248
jump 89 always 0 0
jump 41 notEqual *tmp13 @memory-cell
set .MEMORY :block
set .START_INDEX 40
set .END_INDEX 63
set .SIZE 24
jump 89 always 0 0
jump 43 equal *tmp13 @vault
jump 53 notEqual *tmp13 @container
set .CONTAINER :block
set .SENSOR @totalItems
set .MAXIMUM @itemCapacity
set .R0 0
set .G0 80
set .B0 0
set .R1 80
set .G1 255
set .B1 80
jump 89 always 0 0
jump 55 equal *tmp13 @battery
jump 65 notEqual *tmp13 @battery-large
set .CONTAINER :block
set .SENSOR @totalPower
set .MAXIMUM @powerCapacity
set .R0 80
set .G0 80
set .B0 0
set .R1 255
set .G1 255
set .B1 80
jump 89 always 0 0
jump 67 equal *tmp13 @liquid-tank
jump 77 notEqual *tmp13 @liquid-container
set .CONTAINER :block
set .SENSOR @totalLiquids
set .MAXIMUM @liquidCapacity
set .R0 0
set .G0 0
set .B0 192
set .R1 192
set .G1 192
set .B1 255
jump 89 always 0 0
jump 80 equal *tmp13 @power-node
jump 80 equal *tmp13 @power-node-large
jump 89 notEqual *tmp13 @surge-tower
set .CONTAINER :block
set .SENSOR @powerNetStored
set .MAXIMUM @powerNetCapacity
set .R0 80
set .G0 80
set .B0 0
set .R1 255
set .G1 255
set .B1 80
jump 18 greaterThan :n 0
print "\nMessage: "
print .MESSAGE
print "\nSwitch: "
print .SWITCH
print "\nMemory: "
print .MEMORY
print "\nContainer: "
print .CONTAINER
op equal *tmp15 .CONTAINER null
op equal *tmp16 .MEMORY null
op or *tmp18 *tmp15 *tmp16
jump 105 equal *tmp18 false
print "\nNo memory or container."
printflush .MESSAGE
jump 13 always 0 0
printflush .MESSAGE
write .START_INDEX .MEMORY 0
write .END_INDEX .MEMORY 2
write .R0 .MEMORY 3
write .G0 .MEMORY 4
write .B0 .MEMORY 5
write .R1 .MEMORY 6
write .G1 .MEMORY 7
write .B1 .MEMORY 8
read *tmp37 .MEMORY 1
op max *tmp38 .START_INDEX *tmp37
op min :index *tmp38 .END_INDEX
set :nextTick @tick
control enabled .SWITCH 0 0 0 0
sensor *tmp43 .SWITCH @enabled
jump 0 notEqual *tmp43 0
set :startTime @time
set :prevTick :nextTick
op add :nextTick :nextTick 60
op add *tmp47 :nextTick 60
jump 128 lessThanEq @tick *tmp47
set :prevTick @tick
op add :nextTick :prevTick 60
jump 132 greaterThanEq @tick :nextTick
jump 131 greaterThanEq @tick :prevTick
end
jump 129 lessThan @tick :nextTick
sensor :amount .CONTAINER .SENSOR
sensor :max .CONTAINER .MAXIMUM
op mul *tmp57 :amount 150
op div *tmp58 *tmp57 :max
op add :scaled 10 *tmp58
op add :index :index 1
jump 140 lessThanEq :index .END_INDEX
set :index .START_INDEX
write :index .MEMORY 0
write :scaled .MEMORY :index
op sub *tmp67 :index .SIZE
write :scaled .MEMORY *tmp67
print "Item/Liquid/Energy Level Meter\nStartIndex: "
print .START_INDEX
print "\nIndex: "
print :index
print "\nAmount: "
print :amount
print "\nScaled: "
print :scaled
op sub *tmp70 @time :startTime
print "\nElapsed: "
print *tmp70
print "\n"
printflush .MESSAGE
sensor *tmp43 .SWITCH @enabled
jump 121 equal *tmp43 0

