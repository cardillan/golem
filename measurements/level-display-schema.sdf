schematic
    name = "Level Display"
    description = """
        """

    @logic-processor     at ( 0,  0) facing south processor
        links
            switch1 as switch1
            message1 as message1
        end
        mlog = mlog-0
    end
message1:
    @message             at ( 0,  2) facing south text "Item/Liquid/Energy Level Display"
switch1:
    @switch              at ( 1,  2) facing south disabled
end

mlog-0 = """
    set FREQ 100
    set DISPLAY null
    set MEMORY null
    set M_START_INDEX 0
    op add M_CURRENT_INDEX M_START_INDEX 1
    op add M_END_INDEX M_CURRENT_INDEX 1
    op add M_R0 M_END_INDEX 1
    op add M_G0 M_R0 1
    op add M_B0 M_G0 1
    op add M_R1 M_B0 1
    op add M_G1 M_R1 1
    op add M_B1 M_G1 1
    op strictEqual __tmp18 MEMORY null
    op strictEqual __tmp19 DISPLAY null
    op or __tmp20 __tmp18 __tmp19
    jump 54 notEqual __tmp20 true
    print "Item/Liquid/Energy Level Display"
    set n @links
    jump 39 lessThanEq n 0
    op sub n n 1
    getlink block n
    print "\nFound: "
    print block
    sensor ast0 block @type
    jump 27 notEqual ast0 @large-logic-display
    set DISPLAY block
    jump 18 always 0 0
    jump 30 notEqual ast0 @message
    set MESSAGE block
    jump 18 always 0 0
    jump 33 notEqual ast0 @switch
    set SWITCH block
    jump 18 always 0 0
    jump 36 notEqual ast0 @memory-bank
    set MEMORY block
    jump 18 always 0 0
    jump 18 notEqual ast0 @memory-cell
    set MEMORY block
    jump 18 always 0 0
    print "\nMessage: "
    print MESSAGE
    print "\nSwitch: "
    print SWITCH
    print "\nMemory: "
    print MEMORY
    print "\nDisplay: "
    print DISPLAY
    op strictEqual __tmp40 MEMORY null
    op strictEqual __tmp41 DISPLAY null
    op or __tmp42 __tmp40 __tmp41
    jump 52 notEqual __tmp42 true
    print "\nNo memory or display."
    printflush MESSAGE
    jump 12 always 0 0
    read CURRENT_INDEX MEMORY M_CURRENT_INDEX
    read R0 MEMORY M_R0
    read G0 MEMORY M_G0
    read B0 MEMORY M_B0
    read R1 MEMORY M_R1
    read G1 MEMORY M_G1
    read B1 MEMORY M_B1
    draw stroke 1 0 0 0 0 0
    sensor __tmp55 SWITCH @enabled
    jump 102 notEqual __tmp55 0
    set start @time
    print "Item/Liquid/Energy Level Display"
    draw clear 0 0 80 0 0 0
    draw color R0 G0 B0 255 0 0
    draw rect 10 10 156 156 0 0
    read head MEMORY CURRENT_INDEX
    read last MEMORY head
    print "\nIndex: "
    print head
    print "\nValue: "
    print last
    draw color R1 G1 B1 255 0 0
    set x 159
    jump 85 lessThanEq x 10
    op sub head head 1
    read value MEMORY head
    op sub x1 x 5
    draw line x last x1 value 0 0
    set x x1
    set last value
    jump 77 always 0 0
    draw color 255 255 255 255 0 0
    draw lineRect 10 10 156 156 0 0
    op sub __tmp89 @time start
    print "\nTime: "
    print __tmp89
    op div __tmp90 @time FREQ
    op ceil __tmp91 __tmp90 0
    op mul wait FREQ __tmp91
    set loops 0
    jump 97 greaterThanEq @time wait
    op add loops loops 1
    jump 94 always 0 0
    drawflush DISPLAY
    print "\nWait loops: "
    print loops
    printflush MESSAGE
    jump 62 always 0 0
    control enabled switch1 0 0 0 0
    end
    """
